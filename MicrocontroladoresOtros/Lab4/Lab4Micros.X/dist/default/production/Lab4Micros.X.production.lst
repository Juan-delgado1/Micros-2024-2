

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Aug 20 20:31:49 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=1
    49                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63   000000                     
    64                           ; Generated 25/07/2024 GMT
    65                           ; 
    66                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F4550 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98   000FE0                     bsr             equ	4064
    99   000FE9                     fsr0            equ	4073
   100   000FEA                     fsr0h           equ	4074
   101   000FE9                     fsr0l           equ	4073
   102   000FE1                     fsr1            equ	4065
   103   000FE2                     fsr1h           equ	4066
   104   000FE1                     fsr1l           equ	4065
   105   000FD9                     fsr2            equ	4057
   106   000FDA                     fsr2h           equ	4058
   107   000FD9                     fsr2l           equ	4057
   108   000FEF                     indf0           equ	4079
   109   000FE7                     indf1           equ	4071
   110   000FDF                     indf2           equ	4063
   111   000FF2                     intcon          equ	4082
   112   000000                     nvmcon          equ	0
   113   000FF9                     pcl             equ	4089
   114   000FFA                     pclath          equ	4090
   115   000FFB                     pclatu          equ	4091
   116   000FEB                     plusw0          equ	4075
   117   000FE3                     plusw1          equ	4067
   118   000FDB                     plusw2          equ	4059
   119   000FED                     postdec0        equ	4077
   120   000FE5                     postdec1        equ	4069
   121   000FDD                     postdec2        equ	4061
   122   000FEE                     postinc0        equ	4078
   123   000FE6                     postinc1        equ	4070
   124   000FDE                     postinc2        equ	4062
   125   000FEC                     preinc0         equ	4076
   126   000FE4                     preinc1         equ	4068
   127   000FDC                     preinc2         equ	4060
   128   000FF3                     prod            equ	4083
   129   000FF4                     prodh           equ	4084
   130   000FF3                     prodl           equ	4083
   131   000FD8                     status          equ	4056
   132   000FF5                     tablat          equ	4085
   133   000FF6                     tblptr          equ	4086
   134   000FF7                     tblptrh         equ	4087
   135   000FF6                     tblptrl         equ	4086
   136   000FF8                     tblptru         equ	4088
   137   000FFD                     tosl            equ	4093
   138   000FE8                     wreg            equ	4072
   139   000F62                     SPPDATA         equ	3938	;# 
   140   000F63                     SPPCFG          equ	3939	;# 
   141   000F64                     SPPEPS          equ	3940	;# 
   142   000F65                     SPPCON          equ	3941	;# 
   143   000F66                     UFRM            equ	3942	;# 
   144   000F66                     UFRML           equ	3942	;# 
   145   000F67                     UFRMH           equ	3943	;# 
   146   000F68                     UIR             equ	3944	;# 
   147   000F69                     UIE             equ	3945	;# 
   148   000F6A                     UEIR            equ	3946	;# 
   149   000F6B                     UEIE            equ	3947	;# 
   150   000F6C                     USTAT           equ	3948	;# 
   151   000F6D                     UCON            equ	3949	;# 
   152   000F6E                     UADDR           equ	3950	;# 
   153   000F6F                     UCFG            equ	3951	;# 
   154   000F70                     UEP0            equ	3952	;# 
   155   000F71                     UEP1            equ	3953	;# 
   156   000F72                     UEP2            equ	3954	;# 
   157   000F73                     UEP3            equ	3955	;# 
   158   000F74                     UEP4            equ	3956	;# 
   159   000F75                     UEP5            equ	3957	;# 
   160   000F76                     UEP6            equ	3958	;# 
   161   000F77                     UEP7            equ	3959	;# 
   162   000F78                     UEP8            equ	3960	;# 
   163   000F79                     UEP9            equ	3961	;# 
   164   000F7A                     UEP10           equ	3962	;# 
   165   000F7B                     UEP11           equ	3963	;# 
   166   000F7C                     UEP12           equ	3964	;# 
   167   000F7D                     UEP13           equ	3965	;# 
   168   000F7E                     UEP14           equ	3966	;# 
   169   000F7F                     UEP15           equ	3967	;# 
   170   000F80                     PORTA           equ	3968	;# 
   171   000F81                     PORTB           equ	3969	;# 
   172   000F82                     PORTC           equ	3970	;# 
   173   000F83                     PORTD           equ	3971	;# 
   174   000F84                     PORTE           equ	3972	;# 
   175   000F89                     LATA            equ	3977	;# 
   176   000F8A                     LATB            equ	3978	;# 
   177   000F8B                     LATC            equ	3979	;# 
   178   000F8C                     LATD            equ	3980	;# 
   179   000F8D                     LATE            equ	3981	;# 
   180   000F92                     TRISA           equ	3986	;# 
   181   000F92                     DDRA            equ	3986	;# 
   182   000F93                     TRISB           equ	3987	;# 
   183   000F93                     DDRB            equ	3987	;# 
   184   000F94                     TRISC           equ	3988	;# 
   185   000F94                     DDRC            equ	3988	;# 
   186   000F95                     TRISD           equ	3989	;# 
   187   000F95                     DDRD            equ	3989	;# 
   188   000F96                     TRISE           equ	3990	;# 
   189   000F96                     DDRE            equ	3990	;# 
   190   000F9B                     OSCTUNE         equ	3995	;# 
   191   000F9D                     PIE1            equ	3997	;# 
   192   000F9E                     PIR1            equ	3998	;# 
   193   000F9F                     IPR1            equ	3999	;# 
   194   000FA0                     PIE2            equ	4000	;# 
   195   000FA1                     PIR2            equ	4001	;# 
   196   000FA2                     IPR2            equ	4002	;# 
   197   000FA6                     EECON1          equ	4006	;# 
   198   000FA7                     EECON2          equ	4007	;# 
   199   000FA8                     EEDATA          equ	4008	;# 
   200   000FA9                     EEADR           equ	4009	;# 
   201   000FAB                     RCSTA           equ	4011	;# 
   202   000FAB                     RCSTA1          equ	4011	;# 
   203   000FAC                     TXSTA           equ	4012	;# 
   204   000FAC                     TXSTA1          equ	4012	;# 
   205   000FAD                     TXREG           equ	4013	;# 
   206   000FAD                     TXREG1          equ	4013	;# 
   207   000FAE                     RCREG           equ	4014	;# 
   208   000FAE                     RCREG1          equ	4014	;# 
   209   000FAF                     SPBRG           equ	4015	;# 
   210   000FAF                     SPBRG1          equ	4015	;# 
   211   000FB0                     SPBRGH          equ	4016	;# 
   212   000FB1                     T3CON           equ	4017	;# 
   213   000FB2                     TMR3            equ	4018	;# 
   214   000FB2                     TMR3L           equ	4018	;# 
   215   000FB3                     TMR3H           equ	4019	;# 
   216   000FB4                     CMCON           equ	4020	;# 
   217   000FB5                     CVRCON          equ	4021	;# 
   218   000FB6                     ECCP1AS         equ	4022	;# 
   219   000FB6                     CCP1AS          equ	4022	;# 
   220   000FB7                     ECCP1DEL        equ	4023	;# 
   221   000FB7                     CCP1DEL         equ	4023	;# 
   222   000FB8                     BAUDCON         equ	4024	;# 
   223   000FB8                     BAUDCTL         equ	4024	;# 
   224   000FBA                     CCP2CON         equ	4026	;# 
   225   000FBB                     CCPR2           equ	4027	;# 
   226   000FBB                     CCPR2L          equ	4027	;# 
   227   000FBC                     CCPR2H          equ	4028	;# 
   228   000FBD                     CCP1CON         equ	4029	;# 
   229   000FBD                     ECCP1CON        equ	4029	;# 
   230   000FBE                     CCPR1           equ	4030	;# 
   231   000FBE                     CCPR1L          equ	4030	;# 
   232   000FBF                     CCPR1H          equ	4031	;# 
   233   000FC0                     ADCON2          equ	4032	;# 
   234   000FC1                     ADCON1          equ	4033	;# 
   235   000FC2                     ADCON0          equ	4034	;# 
   236   000FC3                     ADRES           equ	4035	;# 
   237   000FC3                     ADRESL          equ	4035	;# 
   238   000FC4                     ADRESH          equ	4036	;# 
   239   000FC5                     SSPCON2         equ	4037	;# 
   240   000FC6                     SSPCON1         equ	4038	;# 
   241   000FC7                     SSPSTAT         equ	4039	;# 
   242   000FC8                     SSPADD          equ	4040	;# 
   243   000FC9                     SSPBUF          equ	4041	;# 
   244   000FCA                     T2CON           equ	4042	;# 
   245   000FCB                     PR2             equ	4043	;# 
   246   000FCB                     MEMCON          equ	4043	;# 
   247   000FCC                     TMR2            equ	4044	;# 
   248   000FCD                     T1CON           equ	4045	;# 
   249   000FCE                     TMR1            equ	4046	;# 
   250   000FCE                     TMR1L           equ	4046	;# 
   251   000FCF                     TMR1H           equ	4047	;# 
   252   000FD0                     RCON            equ	4048	;# 
   253   000FD1                     WDTCON          equ	4049	;# 
   254   000FD2                     HLVDCON         equ	4050	;# 
   255   000FD2                     LVDCON          equ	4050	;# 
   256   000FD3                     OSCCON          equ	4051	;# 
   257   000FD5                     T0CON           equ	4053	;# 
   258   000FD6                     TMR0            equ	4054	;# 
   259   000FD6                     TMR0L           equ	4054	;# 
   260   000FD7                     TMR0H           equ	4055	;# 
   261   000FD8                     STATUS          equ	4056	;# 
   262   000FD9                     FSR2            equ	4057	;# 
   263   000FD9                     FSR2L           equ	4057	;# 
   264   000FDA                     FSR2H           equ	4058	;# 
   265   000FDB                     PLUSW2          equ	4059	;# 
   266   000FDC                     PREINC2         equ	4060	;# 
   267   000FDD                     POSTDEC2        equ	4061	;# 
   268   000FDE                     POSTINC2        equ	4062	;# 
   269   000FDF                     INDF2           equ	4063	;# 
   270   000FE0                     BSR             equ	4064	;# 
   271   000FE1                     FSR1            equ	4065	;# 
   272   000FE1                     FSR1L           equ	4065	;# 
   273   000FE2                     FSR1H           equ	4066	;# 
   274   000FE3                     PLUSW1          equ	4067	;# 
   275   000FE4                     PREINC1         equ	4068	;# 
   276   000FE5                     POSTDEC1        equ	4069	;# 
   277   000FE6                     POSTINC1        equ	4070	;# 
   278   000FE7                     INDF1           equ	4071	;# 
   279   000FE8                     WREG            equ	4072	;# 
   280   000FE9                     FSR0            equ	4073	;# 
   281   000FE9                     FSR0L           equ	4073	;# 
   282   000FEA                     FSR0H           equ	4074	;# 
   283   000FEB                     PLUSW0          equ	4075	;# 
   284   000FEC                     PREINC0         equ	4076	;# 
   285   000FED                     POSTDEC0        equ	4077	;# 
   286   000FEE                     POSTINC0        equ	4078	;# 
   287   000FEF                     INDF0           equ	4079	;# 
   288   000FF0                     INTCON3         equ	4080	;# 
   289   000FF1                     INTCON2         equ	4081	;# 
   290   000FF2                     INTCON          equ	4082	;# 
   291   000FF3                     PROD            equ	4083	;# 
   292   000FF3                     PRODL           equ	4083	;# 
   293   000FF4                     PRODH           equ	4084	;# 
   294   000FF5                     TABLAT          equ	4085	;# 
   295   000FF6                     TBLPTR          equ	4086	;# 
   296   000FF6                     TBLPTRL         equ	4086	;# 
   297   000FF7                     TBLPTRH         equ	4087	;# 
   298   000FF8                     TBLPTRU         equ	4088	;# 
   299   000FF9                     PCLAT           equ	4089	;# 
   300   000FF9                     PC              equ	4089	;# 
   301   000FF9                     PCL             equ	4089	;# 
   302   000FFA                     PCLATH          equ	4090	;# 
   303   000FFB                     PCLATU          equ	4091	;# 
   304   000FFC                     STKPTR          equ	4092	;# 
   305   000FFD                     TOS             equ	4093	;# 
   306   000FFD                     TOSL            equ	4093	;# 
   307   000FFE                     TOSH            equ	4094	;# 
   308   000FFF                     TOSU            equ	4095	;# 
   309                           
   310                           	psect	idataCOMRAM
   311   001918                     __pidataCOMRAM:
   312                           	callstack 0
   313                           
   314                           ;initializer for _flagLuz
   315   001918  FFFF               	dw	65535
   316                           
   317                           ;initializer for _interfaz
   318   00191A  08                 	db	8
   319   007C61                     _LATD1          set	31841
   320   007C0F                     _RB7            set	31759
   321   007C0E                     _RB6            set	31758
   322   007C0D                     _RB5            set	31757
   323   007C0C                     _RB4            set	31756
   324   007C4B                     _LATA3          set	31819
   325   007C49                     _LATA1          set	31817
   326   007C6A                     _LATE2          set	31850
   327   007C69                     _LATE1          set	31849
   328   007C68                     _LATE0          set	31848
   329   007F97                     _GIE            set	32663
   330   007F93                     _RBIE           set	32659
   331   007F90                     _RBIF           set	32656
   332   007EAF                     _TMR0ON         set	32431
   333   007F95                     _TMR0IE         set	32661
   334   007F92                     _TMR0IF         set	32658
   335   007F8F                     _RBPU           set	32655
   336   007CB2                     _TRISE2         set	31922
   337   007CB1                     _TRISE1         set	31921
   338   007CB0                     _TRISE0         set	31920
   339   007CA1                     _TRISC1         set	31905
   340   007C4D                     _LATA5          set	31821
   341   007C4C                     _LATA4          set	31820
   342   000FD6                     _TMR0           set	4054
   343   000F8A                     _LATB           set	3978
   344   000F81                     _PORTB          set	3969
   345   000F82                     _PORTCbits      set	3970
   346   000FD5                     _T0CON          set	4053
   347   000F93                     _TRISB          set	3987
   348   000F92                     _TRISA          set	3986
   349   000F95                     _TRISD          set	3989
   350   000FC1                     _ADCON1         set	4033
   351   000F8C                     _LATD           set	3980
   352                           
   353                           	psect	smallconst
   354   000800                     __psmallconst:
   355                           	callstack 0
   356   000800  00                 	db	0
   357   000801                     STR_2:
   358   000801  50                 	db	80	;'P'
   359   000802  69                 	db	105	;'i'
   360   000803  65                 	db	101	;'e'
   361   000804  7A                 	db	122	;'z'
   362   000805  61                 	db	97	;'a'
   363   000806  73                 	db	115	;'s'
   364   000807  20                 	db	32
   365   000808  61                 	db	97	;'a'
   366   000809  20                 	db	32
   367   00080A  43                 	db	67	;'C'
   368   00080B  6F                 	db	111	;'o'
   369   00080C  6E                 	db	110	;'n'
   370   00080D  74                 	db	116	;'t'
   371   00080E  61                 	db	97	;'a'
   372   00080F  72                 	db	114	;'r'
   373   000810  3A                 	db	58	;':'
   374   000811  20                 	db	32
   375   000812  00                 	db	0
   376   000813                     STR_5:
   377   000813  56                 	db	86	;'V'
   378   000814  61                 	db	97	;'a'
   379   000815  6C                 	db	108	;'l'
   380   000816  6F                 	db	111	;'o'
   381   000817  72                 	db	114	;'r'
   382   000818  20                 	db	32
   383   000819  49                 	db	73	;'I'
   384   00081A  6E                 	db	110	;'n'
   385   00081B  76                 	db	118	;'v'
   386   00081C  61                 	db	97	;'a'
   387   00081D  6C                 	db	108	;'l'
   388   00081E  69                 	db	105	;'i'
   389   00081F  64                 	db	100	;'d'
   390   000820  6F                 	db	111	;'o'
   391   000821  00                 	db	0
   392   000822                     STR_10:
   393   000822  46                 	db	70	;'F'
   394   000823  69                 	db	105	;'i'
   395   000824  6E                 	db	110	;'n'
   396   000825  20                 	db	32
   397   000826  64                 	db	100	;'d'
   398   000827  65                 	db	101	;'e'
   399   000828  20                 	db	32
   400   000829  43                 	db	67	;'C'
   401   00082A  75                 	db	117	;'u'
   402   00082B  65                 	db	101	;'e'
   403   00082C  6E                 	db	110	;'n'
   404   00082D  74                 	db	116	;'t'
   405   00082E  61                 	db	97	;'a'
   406   00082F  00                 	db	0
   407   000830                     STR_11:
   408   000830  50                 	db	80	;'P'
   409   000831  72                 	db	114	;'r'
   410   000832  65                 	db	101	;'e'
   411   000833  73                 	db	115	;'s'
   412   000834  69                 	db	105	;'i'
   413   000835  6F                 	db	111	;'o'
   414   000836  6E                 	db	110	;'n'
   415   000837  65                 	db	101	;'e'
   416   000838  20                 	db	32
   417   000839  4F                 	db	79	;'O'
   418   00083A  4B                 	db	75	;'K'
   419   00083B  00                 	db	0
   420   00083C                     STR_1:
   421   00083C  42                 	db	66	;'B'
   422   00083D  69                 	db	105	;'i'
   423   00083E  65                 	db	101	;'e'
   424   00083F  6E                 	db	110	;'n'
   425   000840  76                 	db	118	;'v'
   426   000841  65                 	db	101	;'e'
   427   000842  6E                 	db	110	;'n'
   428   000843  69                 	db	105	;'i'
   429   000844  64                 	db	100	;'d'
   430   000845  6F                 	db	111	;'o'
   431   000846  73                 	db	115	;'s'
   432   000847  00                 	db	0
   433   000848                     STR_4:
   434   000848  4F                 	db	79	;'O'
   435   000849  62                 	db	98	;'b'
   436   00084A  6A                 	db	106	;'j'
   437   00084B  65                 	db	101	;'e'
   438   00084C  74                 	db	116	;'t'
   439   00084D  69                 	db	105	;'i'
   440   00084E  76                 	db	118	;'v'
   441   00084F  6F                 	db	111	;'o'
   442   000850  3A                 	db	58	;':'
   443   000851  20                 	db	32
   444   000852  00                 	db	0
   445   000853                     STR_12:
   446   000853  45                 	db	69	;'E'
   447   000854  6D                 	db	109	;'m'
   448   000855  65                 	db	101	;'e'
   449   000856  72                 	db	114	;'r'
   450   000857  67                 	db	103	;'g'
   451   000858  65                 	db	101	;'e'
   452   000859  6E                 	db	110	;'n'
   453   00085A  63                 	db	99	;'c'
   454   00085B  69                 	db	105	;'i'
   455   00085C  61                 	db	97	;'a'
   456   00085D  00                 	db	0
   457   00085E                     STR_3:
   458   00085E  46                 	db	70	;'F'
   459   00085F  61                 	db	97	;'a'
   460   000860  6C                 	db	108	;'l'
   461   000861  74                 	db	116	;'t'
   462   000862  61                 	db	97	;'a'
   463   000863  6E                 	db	110	;'n'
   464   000864  3A                 	db	58	;':'
   465   000865  20                 	db	32
   466   000866  00                 	db	0
   467   000822                     STR_15          equ	STR_10
   468   000830                     STR_16          equ	STR_11
   469   000801                     STR_6           equ	STR_2
   470   000801                     STR_7           equ	STR_2
   471   000848                     STR_9           equ	STR_4
   472   000848                     STR_14          equ	STR_4
   473   00085E                     STR_8           equ	STR_3
   474   00085E                     STR_13          equ	STR_3
   475   000867  00                 	db	0	; dummy byte at the end
   476   000002                     __activetblptr  equ	2
   477                           
   478                           ; #config settings
   479                           
   480                           	psect	cinit
   481   001634                     __pcinit:
   482                           	callstack 0
   483   001634                     start_initialization:
   484                           	callstack 0
   485   001634                     __initialization:
   486                           	callstack 0
   487                           
   488                           ; Initialize objects allocated to COMRAM (3 bytes)
   489                           ; load TBLPTR registers with __pidataCOMRAM
   490   001634  0E18               	movlw	low __pidataCOMRAM
   491   001636  6EF6               	movwf	tblptrl,c
   492   001638  0E19               	movlw	high __pidataCOMRAM
   493   00163A  6EF7               	movwf	tblptrh,c
   494   00163C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   495   00163E  6EF8               	movwf	tblptru,c
   496   001640  0009               	tblrd		*+	;fetch initializer
   497   001642  CFF5 F042          	movff	tablat,__pdataCOMRAM
   498   001646  0009               	tblrd		*+	;fetch initializer
   499   001648  CFF5 F043          	movff	tablat,__pdataCOMRAM+1
   500   00164C  0009               	tblrd		*+	;fetch initializer
   501   00164E  CFF5 F044          	movff	tablat,__pdataCOMRAM+2
   502                           
   503                           ; Clear objects allocated to COMRAM (28 bytes)
   504   001652  EE00  F026         	lfsr	0,__pbssCOMRAM
   505   001656  0E1C               	movlw	28
   506   001658                     clear_0:
   507   001658  6AEE               	clrf	postinc0,c
   508   00165A  06E8               	decf	wreg,f,c
   509   00165C  E1FD               	bnz	clear_0
   510   00165E                     end_of_initialization:
   511                           	callstack 0
   512   00165E                     __end_of__initialization:
   513                           	callstack 0
   514   00165E  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   515   001660  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   516   001662  0E00               	movlw	low (__Lmediumconst shr (0+16))
   517   001664  6EF8               	movwf	tblptru,c
   518   001666  0100               	movlb	0
   519   001668  EFF2  F004         	goto	_main	;jump to C main() function
   520                           
   521                           	psect	bssCOMRAM
   522   000026                     __pbssCOMRAM:
   523                           	callstack 0
   524   000026                     _piezFalt:
   525                           	callstack 0
   526   000026                     	ds	2
   527   000028                     _cuenObj:
   528                           	callstack 0
   529   000028                     	ds	2
   530   00002A                     _b:
   531                           	callstack 0
   532   00002A                     	ds	2
   533   00002C                     _a:
   534                           	callstack 0
   535   00002C                     	ds	2
   536   00002E                     _d:
   537                           	callstack 0
   538   00002E                     	ds	2
   539   000030                     _u:
   540                           	callstack 0
   541   000030                     	ds	2
   542   000032                     _cuenta:
   543                           	callstack 0
   544   000032                     	ds	2
   545   000034                     _flagCont:
   546                           	callstack 0
   547   000034                     	ds	2
   548   000036                     _flagFin:
   549                           	callstack 0
   550   000036                     	ds	2
   551   000038                     _flagEmergencia:
   552                           	callstack 0
   553   000038                     	ds	2
   554   00003A                     _flagInicio:
   555                           	callstack 0
   556   00003A                     	ds	2
   557   00003C                     _flagDig:
   558                           	callstack 0
   559   00003C                     	ds	2
   560   00003E                     _flagEscribir:
   561                           	callstack 0
   562   00003E                     	ds	2
   563   000040                     _cuenMos:
   564                           	callstack 0
   565   000040                     	ds	1
   566   000041                     _Tecla:
   567                           	callstack 0
   568   000041                     	ds	1
   569                           
   570                           	psect	dataCOMRAM
   571   000042                     __pdataCOMRAM:
   572                           	callstack 0
   573   000042                     _flagLuz:
   574                           	callstack 0
   575   000042                     	ds	2
   576   000044                     _interfaz:
   577                           	callstack 0
   578   000044                     	ds	1
   579                           
   580                           	psect	cstackCOMRAM
   581   000001                     __pcstackCOMRAM:
   582                           	callstack 0
   583   000001                     ?___wmul:
   584                           	callstack 0
   585   000001                     ?i2___awdiv:
   586                           	callstack 0
   587   000001                     ?i2___awmod:
   588                           	callstack 0
   589   000001                     i2___lbmod@divisor:
   590                           	callstack 0
   591   000001                     ___wmul@multiplier:
   592                           	callstack 0
   593   000001                     i2___awdiv@dividend:
   594                           	callstack 0
   595   000001                     i2___awmod@dividend:
   596                           	callstack 0
   597   000001                     ??i2_RetardoLCD:
   598   000001                     
   599                           ; 1 bytes @ 0x0
   600   000001                     	ds	1
   601   000002                     i2RetardoLCD@a:
   602                           	callstack 0
   603   000002                     i2___lbmod@dividend:
   604                           	callstack 0
   605   000002                     
   606                           ; 1 bytes @ 0x1
   607   000002                     	ds	1
   608   000003                     i2___lbmod@counter:
   609                           	callstack 0
   610   000003                     ___wmul@multiplicand:
   611                           	callstack 0
   612   000003                     i2___awdiv@divisor:
   613                           	callstack 0
   614   000003                     i2___awmod@divisor:
   615                           	callstack 0
   616   000003                     ??i2_EnviaDato:
   617                           
   618                           ; 1 bytes @ 0x2
   619   000003                     	ds	1
   620   000004                     i2EnviaDato@a:
   621                           	callstack 0
   622   000004                     i2___lbmod@rem:
   623                           	callstack 0
   624                           
   625                           ; 1 bytes @ 0x3
   626   000004                     	ds	1
   627   000005                     i2EscribeLCD_c@a:
   628                           	callstack 0
   629   000005                     i2DireccionaLCD@a:
   630                           	callstack 0
   631   000005                     i2___awdiv@counter:
   632                           	callstack 0
   633   000005                     i2___awmod@counter:
   634                           	callstack 0
   635   000005                     i2___lbdiv@divisor:
   636                           	callstack 0
   637   000005                     ___wmul@product:
   638                           	callstack 0
   639   000005                     
   640                           ; 1 bytes @ 0x4
   641   000005                     	ds	1
   642   000006                     escribirDig@lectura:
   643                           	callstack 0
   644   000006                     i2MensajeLCD_Var@a:
   645                           	callstack 0
   646   000006                     i2___awdiv@sign:
   647                           	callstack 0
   648   000006                     i2___awmod@sign:
   649                           	callstack 0
   650   000006                     i2___lbdiv@dividend:
   651                           	callstack 0
   652   000006                     
   653                           ; 1 bytes @ 0x5
   654   000006                     	ds	1
   655   000007                     i2___lbdiv@counter:
   656                           	callstack 0
   657   000007                     i2___awdiv@quotient:
   658                           	callstack 0
   659   000007                     
   660                           ; 1 bytes @ 0x6
   661   000007                     	ds	1
   662   000008                     i2___lbdiv@quotient:
   663                           	callstack 0
   664                           
   665                           ; 1 bytes @ 0x7
   666   000008                     	ds	1
   667   000009                     i2EscribeLCD_n8@b:
   668                           	callstack 0
   669                           
   670                           ; 1 bytes @ 0x8
   671   000009                     	ds	1
   672   00000A                     i2EscribeLCD_n8@centena:
   673                           	callstack 0
   674   00000A                     
   675                           ; 1 bytes @ 0x9
   676   00000A                     	ds	1
   677   00000B                     i2EscribeLCD_n8@decena:
   678                           	callstack 0
   679                           
   680                           ; 1 bytes @ 0xA
   681   00000B                     	ds	1
   682   00000C                     i2EscribeLCD_n8@unidad:
   683                           	callstack 0
   684                           
   685                           ; 1 bytes @ 0xB
   686   00000C                     	ds	1
   687   00000D                     i2EscribeLCD_n8@a:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0xC
   691   00000D                     	ds	1
   692   00000E                     ??_ok:
   693   00000E                     
   694                           ; 1 bytes @ 0xD
   695   00000E                     	ds	2
   696   000010                     ??_ISR:
   697                           
   698                           ; 1 bytes @ 0xF
   699   000010                     	ds	7
   700   000017                     ?___awdiv:
   701                           	callstack 0
   702   000017                     ?___awmod:
   703                           	callstack 0
   704   000017                     ConfiguraLCD@a:
   705                           	callstack 0
   706   000017                     ___lbmod@divisor:
   707                           	callstack 0
   708   000017                     ___awdiv@dividend:
   709                           	callstack 0
   710   000017                     ___awmod@dividend:
   711                           	callstack 0
   712   000017                     ??_RetardoLCD:
   713   000017                     
   714                           ; 1 bytes @ 0x16
   715   000017                     	ds	1
   716   000018                     RetardoLCD@a:
   717                           	callstack 0
   718   000018                     ___lbmod@dividend:
   719                           	callstack 0
   720   000018                     
   721                           ; 1 bytes @ 0x17
   722   000018                     	ds	1
   723   000019                     ___lbmod@counter:
   724                           	callstack 0
   725   000019                     ___awdiv@divisor:
   726                           	callstack 0
   727   000019                     ___awmod@divisor:
   728                           	callstack 0
   729   000019                     ??_EnviaDato:
   730                           
   731                           ; 1 bytes @ 0x18
   732   000019                     	ds	1
   733   00001A                     EnviaDato@a:
   734                           	callstack 0
   735   00001A                     ___lbmod@rem:
   736                           	callstack 0
   737                           
   738                           ; 1 bytes @ 0x19
   739   00001A                     	ds	1
   740   00001B                     ComandoLCD@a:
   741                           	callstack 0
   742   00001B                     EscribeLCD_c@a:
   743                           	callstack 0
   744   00001B                     DireccionaLCD@a:
   745                           	callstack 0
   746   00001B                     ___awdiv@counter:
   747                           	callstack 0
   748   00001B                     ___awmod@counter:
   749                           	callstack 0
   750   00001B                     ___lbdiv@divisor:
   751                           	callstack 0
   752   00001B                     
   753                           ; 1 bytes @ 0x1A
   754   00001B                     	ds	1
   755   00001C                     MensajeLCD_Var@a:
   756                           	callstack 0
   757   00001C                     ___awdiv@sign:
   758                           	callstack 0
   759   00001C                     ___awmod@sign:
   760                           	callstack 0
   761   00001C                     ___lbdiv@dividend:
   762                           	callstack 0
   763   00001C                     
   764                           ; 1 bytes @ 0x1B
   765   00001C                     	ds	1
   766   00001D                     ___lbdiv@counter:
   767                           	callstack 0
   768   00001D                     ___awdiv@quotient:
   769                           	callstack 0
   770   00001D                     
   771                           ; 1 bytes @ 0x1C
   772   00001D                     	ds	1
   773   00001E                     ___lbdiv@quotient:
   774                           	callstack 0
   775                           
   776                           ; 1 bytes @ 0x1D
   777   00001E                     	ds	1
   778   00001F                     EscribeLCD_n8@b:
   779                           	callstack 0
   780                           
   781                           ; 1 bytes @ 0x1E
   782   00001F                     	ds	1
   783   000020                     EscribeLCD_n8@centena:
   784                           	callstack 0
   785   000020                     
   786                           ; 1 bytes @ 0x1F
   787   000020                     	ds	1
   788   000021                     EscribeLCD_n8@decena:
   789                           	callstack 0
   790                           
   791                           ; 1 bytes @ 0x20
   792   000021                     	ds	1
   793   000022                     EscribeLCD_n8@unidad:
   794                           	callstack 0
   795                           
   796                           ; 1 bytes @ 0x21
   797   000022                     	ds	1
   798   000023                     EscribeLCD_n8@a:
   799                           	callstack 0
   800                           
   801                           ; 1 bytes @ 0x22
   802   000023                     	ds	1
   803   000024                     ??_main:
   804                           
   805                           ; 1 bytes @ 0x23
   806   000024                     	ds	2
   807                           
   808 ;;
   809 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   810 ;;
   811 ;; *************** function _main *****************
   812 ;; Defined at:
   813 ;;		line 38 in file "PruebaLCD.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;		None
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   827 ;;      Params:         0       0       0       0       0       0       0       0       0
   828 ;;      Locals:         0       0       0       0       0       0       0       0       0
   829 ;;      Temps:          2       0       0       0       0       0       0       0       0
   830 ;;      Totals:         2       0       0       0       0       0       0       0       0
   831 ;;Total ram usage:        2 bytes
   832 ;; Hardware stack levels required when called: 12
   833 ;; This function calls:
   834 ;;		_BorraLCD
   835 ;;		_CaracterCara
   836 ;;		_CaracterQbert
   837 ;;		_ConfiguraLCD
   838 ;;		_DireccionaLCD
   839 ;;		_EscribeLCD_c
   840 ;;		_InicializaLCD
   841 ;;		_MensajeLCD_Var
   842 ;;		_contador
   843 ;; This function is called by:
   844 ;;		Startup code after reset
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           	psect	text0
   849   0009E4                     __ptext0:
   850                           	callstack 0
   851   0009E4                     _main:
   852                           	callstack 19
   853                           
   854                           ;PruebaLCD.c: 39: ADCON1=15;
   855                           
   856                           ;incstack = 0
   857   0009E4  0E0F               	movlw	15
   858   0009E6  6EC1               	movwf	193,c	;volatile
   859                           
   860                           ;PruebaLCD.c: 40: TRISD=0;
   861   0009E8  6A95               	clrf	149,c	;volatile
   862                           
   863                           ;PruebaLCD.c: 41: TRISA=0;
   864   0009EA  6A92               	clrf	146,c	;volatile
   865                           
   866                           ;PruebaLCD.c: 42: TRISC1=1;
   867   0009EC  8294               	bsf	3988,1,c	;volatile
   868                           
   869                           ;PruebaLCD.c: 43: TRISE0 = 0;
   870   0009EE  9096               	bcf	3990,0,c	;volatile
   871                           
   872                           ;PruebaLCD.c: 44: TRISE1 = 0;
   873   0009F0  9296               	bcf	3990,1,c	;volatile
   874                           
   875                           ;PruebaLCD.c: 45: TRISE2 = 0;
   876   0009F2  9496               	bcf	3990,2,c	;volatile
   877                           
   878                           ;PruebaLCD.c: 46: LATD=0;
   879   0009F4  6A8C               	clrf	140,c	;volatile
   880                           
   881                           ;PruebaLCD.c: 47: TRISB=0b11110000;;
   882   0009F6  0EF0               	movlw	240
   883   0009F8  6E93               	movwf	147,c	;volatile
   884                           
   885                           ;PruebaLCD.c: 48: RBPU=0;
   886   0009FA  9EF1               	bcf	4081,7,c	;volatile
   887                           
   888                           ;PruebaLCD.c: 49: _delay((unsigned long)((100)*(1000000/4000.0)));
   889   0009FC  0E21               	movlw	33
   890   0009FE  6E24               	movwf	??_main^0,c
   891   000A00  0E76               	movlw	118
   892   000A02                     u1817:
   893   000A02  2EE8               	decfsz	wreg,f,c
   894   000A04  D7FE               	bra	u1817
   895   000A06  2E24               	decfsz	??_main^0,f,c
   896   000A08  D7FC               	bra	u1817
   897   000A0A  D000               	nop2	
   898                           
   899                           ;PruebaLCD.c: 50: TMR0=3036;
   900   000A0C  0E0B               	movlw	11
   901   000A0E  6ED7               	movwf	215,c	;volatile
   902   000A10  0EDC               	movlw	220
   903   000A12  6ED6               	movwf	214,c	;volatile
   904                           
   905                           ;PruebaLCD.c: 51: T0CON=0b00000001;
   906   000A14  0E01               	movlw	1
   907   000A16  6ED5               	movwf	213,c	;volatile
   908                           
   909                           ;PruebaLCD.c: 52: TMR0IF=0;
   910   000A18  94F2               	bcf	4082,2,c	;volatile
   911                           
   912                           ;PruebaLCD.c: 53: TMR0IE=1;
   913   000A1A  8AF2               	bsf	4082,5,c	;volatile
   914                           
   915                           ;PruebaLCD.c: 54: TMR0ON=1;
   916   000A1C  8ED5               	bsf	4053,7,c	;volatile
   917                           
   918                           ;PruebaLCD.c: 55: RBIF=0;
   919   000A1E  90F2               	bcf	4082,0,c	;volatile
   920                           
   921                           ;PruebaLCD.c: 56: RBIE=1;
   922   000A20  86F2               	bsf	4082,3,c	;volatile
   923                           
   924                           ;PruebaLCD.c: 57: GIE=1;
   925   000A22  8EF2               	bsf	4082,7,c	;volatile
   926                           
   927                           ;PruebaLCD.c: 60: LATE0 = 0;
   928   000A24  908D               	bcf	3981,0,c	;volatile
   929                           
   930                           ;PruebaLCD.c: 61: LATE1 = 0;
   931   000A26  928D               	bcf	3981,1,c	;volatile
   932                           
   933                           ;PruebaLCD.c: 62: LATE2 = 0;
   934   000A28  948D               	bcf	3981,2,c	;volatile
   935                           
   936                           ;PruebaLCD.c: 65: _delay((unsigned long)((1000)*(1000000/4000.0)));
   937   000A2A  0E02               	movlw	2
   938   000A2C  6E25               	movwf	(??_main+1)^0,c
   939   000A2E  0E45               	movlw	69
   940   000A30  6E24               	movwf	??_main^0,c
   941   000A32  0EAA               	movlw	170
   942   000A34                     u1827:
   943   000A34  2EE8               	decfsz	wreg,f,c
   944   000A36  D7FE               	bra	u1827
   945   000A38  2E24               	decfsz	??_main^0,f,c
   946   000A3A  D7FC               	bra	u1827
   947   000A3C  2E25               	decfsz	(??_main+1)^0,f,c
   948   000A3E  D7FA               	bra	u1827
   949                           
   950                           ;PruebaLCD.c: 66: ConfiguraLCD(4);
   951   000A40  0E04               	movlw	4
   952   000A42  EC2C  F00C         	call	_ConfiguraLCD
   953                           
   954                           ;PruebaLCD.c: 67: InicializaLCD();
   955   000A46  ECE7  F007         	call	_InicializaLCD	;wreg free
   956                           
   957                           ;PruebaLCD.c: 71: if(flagEmergencia == 0){
   958   000A4A  5038               	movf	_flagEmergencia^0,w,c
   959   000A4C  1039               	iorwf	(_flagEmergencia+1)^0,w,c
   960   000A4E  A4D8               	btfss	status,2,c
   961   000A50  EF07  F000         	goto	start
   962                           
   963                           ;PruebaLCD.c: 73: MensajeLCD_Var("Bienvenidos");
   964   000A54  0E3C               	movlw	low STR_1
   965   000A56  6E1C               	movwf	MensajeLCD_Var@a^0,c
   966   000A58  ECBB  F00B         	call	_MensajeLCD_Var	;wreg free
   967                           
   968                           ;PruebaLCD.c: 74: CaracterCara();
   969   000A5C  EC68  F009         	call	_CaracterCara	;wreg free
   970                           
   971                           ;PruebaLCD.c: 75: EscribeLCD_c(1);
   972   000A60  0E01               	movlw	1
   973   000A62  EC38  F00C         	call	_EscribeLCD_c
   974                           
   975                           ;PruebaLCD.c: 76: CaracterQbert();
   976   000A66  EC2F  F009         	call	_CaracterQbert	;wreg free
   977                           
   978                           ;PruebaLCD.c: 77: EscribeLCD_c(2);
   979   000A6A  0E02               	movlw	2
   980   000A6C  EC38  F00C         	call	_EscribeLCD_c
   981                           
   982                           ;PruebaLCD.c: 78: _delay((unsigned long)((5000)*(1000000/4000.0)));
   983   000A70  0E07               	movlw	7
   984   000A72  6E25               	movwf	(??_main+1)^0,c
   985   000A74  0E58               	movlw	88
   986   000A76  6E24               	movwf	??_main^0,c
   987   000A78  0E5A               	movlw	90
   988   000A7A                     u1837:
   989   000A7A  2EE8               	decfsz	wreg,f,c
   990   000A7C  D7FE               	bra	u1837
   991   000A7E  2E24               	decfsz	??_main^0,f,c
   992   000A80  D7FC               	bra	u1837
   993   000A82  2E25               	decfsz	(??_main+1)^0,f,c
   994   000A84  D7FA               	bra	u1837
   995                           
   996                           ;PruebaLCD.c: 79: BorraLCD();
   997   000A86  EC64  F00C         	call	_BorraLCD	;wreg free
   998                           
   999                           ;PruebaLCD.c: 82: MensajeLCD_Var("Piezas a Contar: ");
  1000   000A8A  0E01               	movlw	low STR_2
  1001   000A8C  6E1C               	movwf	MensajeLCD_Var@a^0,c
  1002   000A8E  ECBB  F00B         	call	_MensajeLCD_Var	;wreg free
  1003                           
  1004                           ;PruebaLCD.c: 83: DireccionaLCD(0xC0);
  1005   000A92  0EC0               	movlw	192
  1006   000A94  EC43  F00C         	call	_DireccionaLCD
  1007                           
  1008                           ;PruebaLCD.c: 84: flagEscribir=1;
  1009   000A98  0E00               	movlw	0
  1010   000A9A  6E3F               	movwf	(_flagEscribir+1)^0,c
  1011   000A9C  0E01               	movlw	1
  1012   000A9E  6E3E               	movwf	_flagEscribir^0,c
  1013   000AA0                     l2877:
  1014                           
  1015                           ;PruebaLCD.c: 86: LATA1=1;
  1016   000AA0  8289               	bsf	3977,1,c	;volatile
  1017                           
  1018                           ;PruebaLCD.c: 87: _delay((unsigned long)((125)*(1000000/4000.0)));
  1019   000AA2  0E29               	movlw	41
  1020   000AA4  6E24               	movwf	??_main^0,c
  1021   000AA6  0E94               	movlw	148
  1022   000AA8                     u1847:
  1023   000AA8  2EE8               	decfsz	wreg,f,c
  1024   000AAA  D7FE               	bra	u1847
  1025   000AAC  2E24               	decfsz	??_main^0,f,c
  1026   000AAE  D7FC               	bra	u1847
  1027   000AB0  D000               	nop2	
  1028                           
  1029                           ;PruebaLCD.c: 88: contador();
  1030   000AB2  EC1B  F007         	call	_contador	;wreg free
  1031                           
  1032                           ;PruebaLCD.c: 89: _delay((unsigned long)((125)*(1000000/4000.0)));
  1033   000AB6  0E29               	movlw	41
  1034   000AB8  6E24               	movwf	??_main^0,c
  1035   000ABA  0E94               	movlw	148
  1036   000ABC                     u1857:
  1037   000ABC  2EE8               	decfsz	wreg,f,c
  1038   000ABE  D7FE               	bra	u1857
  1039   000AC0  2E24               	decfsz	??_main^0,f,c
  1040   000AC2  D7FC               	bra	u1857
  1041   000AC4  D000               	nop2	
  1042                           
  1043                           ;PruebaLCD.c: 90: contador();
  1044   000AC6  EC1B  F007         	call	_contador	;wreg free
  1045                           
  1046                           ;PruebaLCD.c: 91: _delay((unsigned long)((125)*(1000000/4000.0)));
  1047   000ACA  0E29               	movlw	41
  1048   000ACC  6E24               	movwf	??_main^0,c
  1049   000ACE  0E94               	movlw	148
  1050   000AD0                     u1867:
  1051   000AD0  2EE8               	decfsz	wreg,f,c
  1052   000AD2  D7FE               	bra	u1867
  1053   000AD4  2E24               	decfsz	??_main^0,f,c
  1054   000AD6  D7FC               	bra	u1867
  1055   000AD8  D000               	nop2	
  1056                           
  1057                           ;PruebaLCD.c: 92: contador();
  1058   000ADA  EC1B  F007         	call	_contador	;wreg free
  1059                           
  1060                           ;PruebaLCD.c: 93: _delay((unsigned long)((125)*(1000000/4000.0)));
  1061   000ADE  0E29               	movlw	41
  1062   000AE0  6E24               	movwf	??_main^0,c
  1063   000AE2  0E94               	movlw	148
  1064   000AE4                     u1877:
  1065   000AE4  2EE8               	decfsz	wreg,f,c
  1066   000AE6  D7FE               	bra	u1877
  1067   000AE8  2E24               	decfsz	??_main^0,f,c
  1068   000AEA  D7FC               	bra	u1877
  1069   000AEC  D000               	nop2	
  1070                           
  1071                           ;PruebaLCD.c: 94: LATA1=0;
  1072   000AEE  9289               	bcf	3977,1,c	;volatile
  1073                           
  1074                           ;PruebaLCD.c: 95: _delay((unsigned long)((125)*(1000000/4000.0)));
  1075   000AF0  0E29               	movlw	41
  1076   000AF2  6E24               	movwf	??_main^0,c
  1077   000AF4  0E94               	movlw	148
  1078   000AF6                     u1887:
  1079   000AF6  2EE8               	decfsz	wreg,f,c
  1080   000AF8  D7FE               	bra	u1887
  1081   000AFA  2E24               	decfsz	??_main^0,f,c
  1082   000AFC  D7FC               	bra	u1887
  1083   000AFE  D000               	nop2	
  1084                           
  1085                           ;PruebaLCD.c: 96: contador();
  1086   000B00  EC1B  F007         	call	_contador	;wreg free
  1087                           
  1088                           ;PruebaLCD.c: 97: _delay((unsigned long)((125)*(1000000/4000.0)));
  1089   000B04  0E29               	movlw	41
  1090   000B06  6E24               	movwf	??_main^0,c
  1091   000B08  0E94               	movlw	148
  1092   000B0A                     u1897:
  1093   000B0A  2EE8               	decfsz	wreg,f,c
  1094   000B0C  D7FE               	bra	u1897
  1095   000B0E  2E24               	decfsz	??_main^0,f,c
  1096   000B10  D7FC               	bra	u1897
  1097   000B12  D000               	nop2	
  1098                           
  1099                           ;PruebaLCD.c: 98: contador();
  1100   000B14  EC1B  F007         	call	_contador	;wreg free
  1101                           
  1102                           ;PruebaLCD.c: 99: _delay((unsigned long)((125)*(1000000/4000.0)));
  1103   000B18  0E29               	movlw	41
  1104   000B1A  6E24               	movwf	??_main^0,c
  1105   000B1C  0E94               	movlw	148
  1106   000B1E                     u1907:
  1107   000B1E  2EE8               	decfsz	wreg,f,c
  1108   000B20  D7FE               	bra	u1907
  1109   000B22  2E24               	decfsz	??_main^0,f,c
  1110   000B24  D7FC               	bra	u1907
  1111   000B26  D000               	nop2	
  1112                           
  1113                           ;PruebaLCD.c: 100: contador();
  1114   000B28  EC1B  F007         	call	_contador	;wreg free
  1115                           
  1116                           ;PruebaLCD.c: 101: _delay((unsigned long)((125)*(1000000/4000.0)));
  1117   000B2C  0E29               	movlw	41
  1118   000B2E  6E24               	movwf	??_main^0,c
  1119   000B30  0E94               	movlw	148
  1120   000B32                     u1917:
  1121   000B32  2EE8               	decfsz	wreg,f,c
  1122   000B34  D7FE               	bra	u1917
  1123   000B36  2E24               	decfsz	??_main^0,f,c
  1124   000B38  D7FC               	bra	u1917
  1125   000B3A  D000               	nop2	
  1126   000B3C  D7B1               	goto	l2877
  1127   000B3E                     __end_of_main:
  1128                           	callstack 0
  1129                           
  1130 ;; *************** function _contador *****************
  1131 ;; Defined at:
  1132 ;;		line 185 in file "PruebaLCD.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;		None
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1146 ;;      Params:         0       0       0       0       0       0       0       0       0
  1147 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1148 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1149 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1150 ;;Total ram usage:        0 bytes
  1151 ;; Hardware stack levels used: 1
  1152 ;; Hardware stack levels required when called: 11
  1153 ;; This function calls:
  1154 ;;		_BorraLCD
  1155 ;;		_DireccionaLCD
  1156 ;;		_EscribeLCD_n8
  1157 ;;		_MensajeLCD_Var
  1158 ;;		_RGB
  1159 ;;		_SEG
  1160 ;;		___awdiv
  1161 ;;		___awmod
  1162 ;; This function is called by:
  1163 ;;		_main
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text1
  1168   000E36                     __ptext1:
  1169                           	callstack 0
  1170   000E36                     _contador:
  1171                           	callstack 19
  1172                           
  1173                           ;PruebaLCD.c: 186: if(flagCont==1){
  1174                           
  1175                           ;incstack = 0
  1176   000E36  0434               	decf	_flagCont^0,w,c
  1177   000E38  1035               	iorwf	(_flagCont+1)^0,w,c
  1178   000E3A  A4D8               	btfss	status,2,c
  1179   000E3C  0012               	return	
  1180                           
  1181                           ;PruebaLCD.c: 187: if(PORTCbits.RC1==0){
  1182   000E3E  B282               	btfsc	130,1,c	;volatile
  1183   000E40  0012               	return	
  1184                           
  1185                           ;PruebaLCD.c: 188: flagInicio = 1;
  1186   000E42  0E00               	movlw	0
  1187   000E44  6E3B               	movwf	(_flagInicio+1)^0,c
  1188   000E46  0E01               	movlw	1
  1189   000E48  6E3A               	movwf	_flagInicio^0,c
  1190                           
  1191                           ;PruebaLCD.c: 189: if(flagEmergencia == 0){
  1192   000E4A  5038               	movf	_flagEmergencia^0,w,c
  1193   000E4C  1039               	iorwf	(_flagEmergencia+1)^0,w,c
  1194   000E4E  A4D8               	btfss	status,2,c
  1195   000E50  0012               	return	
  1196                           
  1197                           ;PruebaLCD.c: 190: cuenta+=1;
  1198   000E52  4A32               	infsnz	_cuenta^0,f,c
  1199   000E54  2A33               	incf	(_cuenta+1)^0,f,c
  1200                           
  1201                           ;PruebaLCD.c: 191: piezFalt-=1;
  1202   000E56  0626               	decf	_piezFalt^0,f,c
  1203   000E58  A0D8               	btfss	status,0,c
  1204   000E5A  0627               	decf	(_piezFalt+1)^0,f,c
  1205                           
  1206                           ;PruebaLCD.c: 192: a = cuenta % 10;
  1207   000E5C  C032  F017         	movff	_cuenta,___awmod@dividend
  1208   000E60  C033  F018         	movff	_cuenta+1,___awmod@dividend+1
  1209   000E64  0E00               	movlw	0
  1210   000E66  6E1A               	movwf	(___awmod@divisor+1)^0,c
  1211   000E68  0E0A               	movlw	10
  1212   000E6A  6E19               	movwf	___awmod@divisor^0,c
  1213   000E6C  ECA1  F009         	call	___awmod	;wreg free
  1214   000E70  C017  F02C         	movff	?___awmod,_a
  1215   000E74  C018  F02D         	movff	?___awmod+1,_a+1
  1216                           
  1217                           ;PruebaLCD.c: 193: b = (cuenta - a)/10;
  1218   000E78  502C               	movf	_a^0,w,c
  1219   000E7A  5C32               	subwf	_cuenta^0,w,c
  1220   000E7C  6E17               	movwf	___awdiv@dividend^0,c
  1221   000E7E  502D               	movf	(_a+1)^0,w,c
  1222   000E80  5833               	subwfb	(_cuenta+1)^0,w,c
  1223   000E82  6E18               	movwf	(___awdiv@dividend+1)^0,c
  1224   000E84  0E00               	movlw	0
  1225   000E86  6E1A               	movwf	(___awdiv@divisor+1)^0,c
  1226   000E88  0E0A               	movlw	10
  1227   000E8A  6E19               	movwf	___awdiv@divisor^0,c
  1228   000E8C  EC35  F008         	call	___awdiv	;wreg free
  1229   000E90  C017  F02A         	movff	?___awdiv,_b
  1230   000E94  C018  F02B         	movff	?___awdiv+1,_b+1
  1231                           
  1232                           ;PruebaLCD.c: 194: RGB();
  1233   000E98  ECB7  F008         	call	_RGB	;wreg free
  1234                           
  1235                           ;PruebaLCD.c: 195: SEG();
  1236   000E9C  EC86  F00C         	call	_SEG	;wreg free
  1237                           
  1238                           ;PruebaLCD.c: 197: BorraLCD();
  1239   000EA0  EC64  F00C         	call	_BorraLCD	;wreg free
  1240                           
  1241                           ;PruebaLCD.c: 198: MensajeLCD_Var("Faltan: ");
  1242   000EA4  0E5E               	movlw	low STR_3
  1243   000EA6  6E1C               	movwf	MensajeLCD_Var@a^0,c
  1244   000EA8  ECBB  F00B         	call	_MensajeLCD_Var	;wreg free
  1245                           
  1246                           ;PruebaLCD.c: 199: EscribeLCD_n8(piezFalt,2);
  1247   000EAC  0E02               	movlw	2
  1248   000EAE  6E1F               	movwf	EscribeLCD_n8@b^0,c
  1249   000EB0  5026               	movf	_piezFalt^0,w,c
  1250   000EB2  EC35  F006         	call	_EscribeLCD_n8
  1251                           
  1252                           ;PruebaLCD.c: 200: DireccionaLCD(0xC0);
  1253   000EB6  0EC0               	movlw	192
  1254   000EB8  EC43  F00C         	call	_DireccionaLCD
  1255                           
  1256                           ;PruebaLCD.c: 201: MensajeLCD_Var("Objetivo: ");
  1257   000EBC  0E48               	movlw	low STR_4
  1258   000EBE  6E1C               	movwf	MensajeLCD_Var@a^0,c
  1259   000EC0  ECBB  F00B         	call	_MensajeLCD_Var	;wreg free
  1260                           
  1261                           ;PruebaLCD.c: 202: EscribeLCD_n8(cuenObj,2);
  1262   000EC4  0E02               	movlw	2
  1263   000EC6  6E1F               	movwf	EscribeLCD_n8@b^0,c
  1264   000EC8  5028               	movf	_cuenObj^0,w,c
  1265   000ECA  EC35  F006         	call	_EscribeLCD_n8
  1266                           
  1267                           ;PruebaLCD.c: 203: if (cuenta==cuenObj){
  1268   000ECE  5028               	movf	_cuenObj^0,w,c
  1269   000ED0  1832               	xorwf	_cuenta^0,w,c
  1270   000ED2  E116               	bnz	l264
  1271   000ED4  5029               	movf	(_cuenObj+1)^0,w,c
  1272   000ED6  1833               	xorwf	(_cuenta+1)^0,w,c
  1273   000ED8  A4D8               	btfss	status,2,c
  1274   000EDA  0012               	return	
  1275                           
  1276                           ;PruebaLCD.c: 204: BorraLCD();
  1277   000EDC  EC64  F00C         	call	_BorraLCD	;wreg free
  1278                           
  1279                           ;PruebaLCD.c: 205: MensajeLCD_Var("Fin de Cuenta");
  1280   000EE0  0E22               	movlw	low STR_10
  1281   000EE2  6E1C               	movwf	MensajeLCD_Var@a^0,c
  1282   000EE4  ECBB  F00B         	call	_MensajeLCD_Var	;wreg free
  1283                           
  1284                           ;PruebaLCD.c: 206: DireccionaLCD(0xC0);
  1285   000EE8  0EC0               	movlw	192
  1286   000EEA  EC43  F00C         	call	_DireccionaLCD
  1287                           
  1288                           ;PruebaLCD.c: 207: MensajeLCD_Var("Presione OK");
  1289   000EEE  0E30               	movlw	low STR_11
  1290   000EF0  6E1C               	movwf	MensajeLCD_Var@a^0,c
  1291   000EF2  ECBB  F00B         	call	_MensajeLCD_Var	;wreg free
  1292                           
  1293                           ;PruebaLCD.c: 208: flagFin=1;
  1294   000EF6  0E00               	movlw	0
  1295   000EF8  6E37               	movwf	(_flagFin+1)^0,c
  1296   000EFA  0E01               	movlw	1
  1297   000EFC  6E36               	movwf	_flagFin^0,c
  1298   000EFE  0012               	return	
  1299   000F00                     l264:
  1300   000F00  0012               	return		;funcret
  1301   000F02                     __end_of_contador:
  1302                           	callstack 0
  1303                           
  1304 ;; *************** function ___awmod *****************
  1305 ;; Defined at:
  1306 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;  dividend        2   22[COMRAM] int 
  1309 ;;  divisor         2   24[COMRAM] int 
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;  sign            1   27[COMRAM] unsigned char 
  1312 ;;  counter         1   26[COMRAM] unsigned char 
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  2   22[COMRAM] int 
  1315 ;; Registers used:
  1316 ;;		wreg, status,2, status,0
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1322 ;;      Params:         4       0       0       0       0       0       0       0       0
  1323 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1324 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1325 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1326 ;;Total ram usage:        6 bytes
  1327 ;; Hardware stack levels used: 1
  1328 ;; Hardware stack levels required when called: 7
  1329 ;; This function calls:
  1330 ;;		Nothing
  1331 ;; This function is called by:
  1332 ;;		_contador
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           	psect	text2
  1337   001342                     __ptext2:
  1338                           	callstack 0
  1339   001342                     ___awmod:
  1340                           	callstack 22
  1341                           
  1342                           ;incstack = 0
  1343   001342  6A1C               	clrf	___awmod@sign^0,c
  1344   001344  AE18               	btfss	(___awmod@dividend+1)^0,7,c
  1345   001346  D006               	goto	l2559
  1346   001348  6C17               	negf	___awmod@dividend^0,c
  1347   00134A  1E18               	comf	(___awmod@dividend+1)^0,f,c
  1348   00134C  B0D8               	btfsc	status,0,c
  1349   00134E  2A18               	incf	(___awmod@dividend+1)^0,f,c
  1350   001350  0E01               	movlw	1
  1351   001352  6E1C               	movwf	___awmod@sign^0,c
  1352   001354                     l2559:
  1353   001354  AE1A               	btfss	(___awmod@divisor+1)^0,7,c
  1354   001356  D004               	goto	l2563
  1355   001358  6C19               	negf	___awmod@divisor^0,c
  1356   00135A  1E1A               	comf	(___awmod@divisor+1)^0,f,c
  1357   00135C  B0D8               	btfsc	status,0,c
  1358   00135E  2A1A               	incf	(___awmod@divisor+1)^0,f,c
  1359   001360                     l2563:
  1360   001360  5019               	movf	___awmod@divisor^0,w,c
  1361   001362  101A               	iorwf	(___awmod@divisor+1)^0,w,c
  1362   001364  B4D8               	btfsc	status,2,c
  1363   001366  D018               	goto	l2579
  1364   001368  0E01               	movlw	1
  1365   00136A  6E1B               	movwf	___awmod@counter^0,c
  1366   00136C  D004               	goto	l2569
  1367   00136E                     l2567:
  1368   00136E  90D8               	bcf	status,0,c
  1369   001370  3619               	rlcf	___awmod@divisor^0,f,c
  1370   001372  361A               	rlcf	(___awmod@divisor+1)^0,f,c
  1371   001374  2A1B               	incf	___awmod@counter^0,f,c
  1372   001376                     l2569:
  1373   001376  AE1A               	btfss	(___awmod@divisor+1)^0,7,c
  1374   001378  D7FA               	goto	l2567
  1375   00137A                     u1370:
  1376   00137A  5019               	movf	___awmod@divisor^0,w,c
  1377   00137C  5C17               	subwf	___awmod@dividend^0,w,c
  1378   00137E  501A               	movf	(___awmod@divisor+1)^0,w,c
  1379   001380  5818               	subwfb	(___awmod@dividend+1)^0,w,c
  1380   001382  A0D8               	btfss	status,0,c
  1381   001384  D004               	goto	l2575
  1382   001386  5019               	movf	___awmod@divisor^0,w,c
  1383   001388  5E17               	subwf	___awmod@dividend^0,f,c
  1384   00138A  501A               	movf	(___awmod@divisor+1)^0,w,c
  1385   00138C  5A18               	subwfb	(___awmod@dividend+1)^0,f,c
  1386   00138E                     l2575:
  1387   00138E  90D8               	bcf	status,0,c
  1388   001390  321A               	rrcf	(___awmod@divisor+1)^0,f,c
  1389   001392  3219               	rrcf	___awmod@divisor^0,f,c
  1390   001394  2E1B               	decfsz	___awmod@counter^0,f,c
  1391   001396  D7F1               	goto	u1370
  1392   001398                     l2579:
  1393   001398  501C               	movf	___awmod@sign^0,w,c
  1394   00139A  B4D8               	btfsc	status,2,c
  1395   00139C  D004               	goto	l2583
  1396   00139E  6C17               	negf	___awmod@dividend^0,c
  1397   0013A0  1E18               	comf	(___awmod@dividend+1)^0,f,c
  1398   0013A2  B0D8               	btfsc	status,0,c
  1399   0013A4  2A18               	incf	(___awmod@dividend+1)^0,f,c
  1400   0013A6                     l2583:
  1401   0013A6  C017  F017         	movff	___awmod@dividend,?___awmod
  1402   0013AA  C018  F018         	movff	___awmod@dividend+1,?___awmod+1
  1403   0013AE  0012               	return		;funcret
  1404   0013B0                     __end_of___awmod:
  1405                           	callstack 0
  1406                           
  1407 ;; *************** function ___awdiv *****************
  1408 ;; Defined at:
  1409 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;  dividend        2   22[COMRAM] int 
  1412 ;;  divisor         2   24[COMRAM] int 
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;  quotient        2   28[COMRAM] int 
  1415 ;;  sign            1   27[COMRAM] unsigned char 
  1416 ;;  counter         1   26[COMRAM] unsigned char 
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  2   22[COMRAM] int 
  1419 ;; Registers used:
  1420 ;;		wreg, status,2, status,0
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1426 ;;      Params:         4       0       0       0       0       0       0       0       0
  1427 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1429 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1430 ;;Total ram usage:        8 bytes
  1431 ;; Hardware stack levels used: 1
  1432 ;; Hardware stack levels required when called: 7
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_contador
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text3
  1441   00106A                     __ptext3:
  1442                           	callstack 0
  1443   00106A                     ___awdiv:
  1444                           	callstack 22
  1445                           
  1446                           ;incstack = 0
  1447   00106A  6A1C               	clrf	___awdiv@sign^0,c
  1448   00106C  AE1A               	btfss	(___awdiv@divisor+1)^0,7,c
  1449   00106E  D006               	goto	l2515
  1450   001070  6C19               	negf	___awdiv@divisor^0,c
  1451   001072  1E1A               	comf	(___awdiv@divisor+1)^0,f,c
  1452   001074  B0D8               	btfsc	status,0,c
  1453   001076  2A1A               	incf	(___awdiv@divisor+1)^0,f,c
  1454   001078  0E01               	movlw	1
  1455   00107A  6E1C               	movwf	___awdiv@sign^0,c
  1456   00107C                     l2515:
  1457   00107C  AE18               	btfss	(___awdiv@dividend+1)^0,7,c
  1458   00107E  D006               	goto	l2521
  1459   001080  6C17               	negf	___awdiv@dividend^0,c
  1460   001082  1E18               	comf	(___awdiv@dividend+1)^0,f,c
  1461   001084  B0D8               	btfsc	status,0,c
  1462   001086  2A18               	incf	(___awdiv@dividend+1)^0,f,c
  1463   001088  0E01               	movlw	1
  1464   00108A  1A1C               	xorwf	___awdiv@sign^0,f,c
  1465   00108C                     l2521:
  1466   00108C  0E00               	movlw	0
  1467   00108E  6E1E               	movwf	(___awdiv@quotient+1)^0,c
  1468   001090  0E00               	movlw	0
  1469   001092  6E1D               	movwf	___awdiv@quotient^0,c
  1470   001094  5019               	movf	___awdiv@divisor^0,w,c
  1471   001096  101A               	iorwf	(___awdiv@divisor+1)^0,w,c
  1472   001098  B4D8               	btfsc	status,2,c
  1473   00109A  D01C               	goto	l2543
  1474   00109C  0E01               	movlw	1
  1475   00109E  6E1B               	movwf	___awdiv@counter^0,c
  1476   0010A0  D004               	goto	l2529
  1477   0010A2                     l2527:
  1478   0010A2  90D8               	bcf	status,0,c
  1479   0010A4  3619               	rlcf	___awdiv@divisor^0,f,c
  1480   0010A6  361A               	rlcf	(___awdiv@divisor+1)^0,f,c
  1481   0010A8  2A1B               	incf	___awdiv@counter^0,f,c
  1482   0010AA                     l2529:
  1483   0010AA  AE1A               	btfss	(___awdiv@divisor+1)^0,7,c
  1484   0010AC  D7FA               	goto	l2527
  1485   0010AE                     u1310:
  1486   0010AE  90D8               	bcf	status,0,c
  1487   0010B0  361D               	rlcf	___awdiv@quotient^0,f,c
  1488   0010B2  361E               	rlcf	(___awdiv@quotient+1)^0,f,c
  1489   0010B4  5019               	movf	___awdiv@divisor^0,w,c
  1490   0010B6  5C17               	subwf	___awdiv@dividend^0,w,c
  1491   0010B8  501A               	movf	(___awdiv@divisor+1)^0,w,c
  1492   0010BA  5818               	subwfb	(___awdiv@dividend+1)^0,w,c
  1493   0010BC  A0D8               	btfss	status,0,c
  1494   0010BE  D005               	goto	l2539
  1495   0010C0  5019               	movf	___awdiv@divisor^0,w,c
  1496   0010C2  5E17               	subwf	___awdiv@dividend^0,f,c
  1497   0010C4  501A               	movf	(___awdiv@divisor+1)^0,w,c
  1498   0010C6  5A18               	subwfb	(___awdiv@dividend+1)^0,f,c
  1499   0010C8  801D               	bsf	___awdiv@quotient^0,0,c
  1500   0010CA                     l2539:
  1501   0010CA  90D8               	bcf	status,0,c
  1502   0010CC  321A               	rrcf	(___awdiv@divisor+1)^0,f,c
  1503   0010CE  3219               	rrcf	___awdiv@divisor^0,f,c
  1504   0010D0  2E1B               	decfsz	___awdiv@counter^0,f,c
  1505   0010D2  D7ED               	goto	u1310
  1506   0010D4                     l2543:
  1507   0010D4  501C               	movf	___awdiv@sign^0,w,c
  1508   0010D6  B4D8               	btfsc	status,2,c
  1509   0010D8  D004               	goto	l2547
  1510   0010DA  6C1D               	negf	___awdiv@quotient^0,c
  1511   0010DC  1E1E               	comf	(___awdiv@quotient+1)^0,f,c
  1512   0010DE  B0D8               	btfsc	status,0,c
  1513   0010E0  2A1E               	incf	(___awdiv@quotient+1)^0,f,c
  1514   0010E2                     l2547:
  1515   0010E2  C01D  F017         	movff	___awdiv@quotient,?___awdiv
  1516   0010E6  C01E  F018         	movff	___awdiv@quotient+1,?___awdiv+1
  1517   0010EA  0012               	return		;funcret
  1518   0010EC                     __end_of___awdiv:
  1519                           	callstack 0
  1520                           
  1521 ;; *************** function _SEG *****************
  1522 ;; Defined at:
  1523 ;;		line 254 in file "PruebaLCD.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;		None
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;		None
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		None
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1537 ;;      Params:         0       0       0       0       0       0       0       0       0
  1538 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1539 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1540 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1541 ;;Total ram usage:        0 bytes
  1542 ;; Hardware stack levels used: 1
  1543 ;; Hardware stack levels required when called: 7
  1544 ;; This function calls:
  1545 ;;		Nothing
  1546 ;; This function is called by:
  1547 ;;		_contador
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           	psect	text4
  1552   00190C                     __ptext4:
  1553                           	callstack 0
  1554   00190C                     _SEG:
  1555                           	callstack 22
  1556                           
  1557                           ;PruebaLCD.c: 255: LATD = a;
  1558                           
  1559                           ;incstack = 0
  1560   00190C  C02C  FF8C         	movff	_a,3980	;volatile
  1561   001910  0012               	return		;funcret
  1562   001912                     __end_of_SEG:
  1563                           	callstack 0
  1564                           
  1565 ;; *************** function _RGB *****************
  1566 ;; Defined at:
  1567 ;;		line 216 in file "PruebaLCD.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;		None
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;		None
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg, status,2, status,0
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1581 ;;      Params:         0       0       0       0       0       0       0       0       0
  1582 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1583 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1584 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1585 ;;Total ram usage:        0 bytes
  1586 ;; Hardware stack levels used: 1
  1587 ;; Hardware stack levels required when called: 7
  1588 ;; This function calls:
  1589 ;;		Nothing
  1590 ;; This function is called by:
  1591 ;;		_contador
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           	psect	text5
  1596   00116E                     __ptext5:
  1597                           	callstack 0
  1598   00116E                     _RGB:
  1599                           	callstack 22
  1600                           
  1601                           ;PruebaLCD.c: 217: if (flagInicio == 0){
  1602                           
  1603                           ;incstack = 0
  1604   00116E  503A               	movf	_flagInicio^0,w,c
  1605   001170  103B               	iorwf	(_flagInicio+1)^0,w,c
  1606   001172  A4D8               	btfss	status,2,c
  1607   001174  D004               	goto	l1519
  1608                           
  1609                           ;PruebaLCD.c: 218: LATE0 = 0;
  1610   001176  908D               	bcf	3981,0,c	;volatile
  1611                           
  1612                           ;PruebaLCD.c: 219: LATE1 = 0;
  1613   001178  928D               	bcf	3981,1,c	;volatile
  1614                           
  1615                           ;PruebaLCD.c: 220: LATE2 = 0;
  1616   00117A  948D               	bcf	3981,2,c	;volatile
  1617                           
  1618                           ;PruebaLCD.c: 221: }
  1619   00117C  0012               	return	
  1620   00117E                     l1519:
  1621                           
  1622                           ;PruebaLCD.c: 222: else if (b == 0){
  1623   00117E  502A               	movf	_b^0,w,c
  1624   001180  102B               	iorwf	(_b+1)^0,w,c
  1625   001182  A4D8               	btfss	status,2,c
  1626   001184  D004               	goto	l1523
  1627                           
  1628                           ;PruebaLCD.c: 223: LATE0 = 1;
  1629   001186  808D               	bsf	3981,0,c	;volatile
  1630                           
  1631                           ;PruebaLCD.c: 224: LATE1 = 0;
  1632   001188  928D               	bcf	3981,1,c	;volatile
  1633                           
  1634                           ;PruebaLCD.c: 225: LATE2 = 1;
  1635   00118A  848D               	bsf	3981,2,c	;volatile
  1636                           
  1637                           ;PruebaLCD.c: 226: }
  1638   00118C  0012               	return	
  1639   00118E                     l1523:
  1640                           
  1641                           ;PruebaLCD.c: 227: else if (b == 1){
  1642   00118E  042A               	decf	_b^0,w,c
  1643   001190  102B               	iorwf	(_b+1)^0,w,c
  1644   001192  A4D8               	btfss	status,2,c
  1645   001194  D004               	goto	l1527
  1646                           
  1647                           ;PruebaLCD.c: 228: LATE0 = 0;
  1648   001196  908D               	bcf	3981,0,c	;volatile
  1649                           
  1650                           ;PruebaLCD.c: 229: LATE1 = 0;
  1651   001198  928D               	bcf	3981,1,c	;volatile
  1652                           
  1653                           ;PruebaLCD.c: 230: LATE2 = 1;
  1654   00119A  848D               	bsf	3981,2,c	;volatile
  1655                           
  1656                           ;PruebaLCD.c: 231: }
  1657   00119C  0012               	return	
  1658   00119E                     l1527:
  1659                           
  1660                           ;PruebaLCD.c: 232: else if (b == 2){
  1661   00119E  0E02               	movlw	2
  1662   0011A0  182A               	xorwf	_b^0,w,c
  1663   0011A2  102B               	iorwf	(_b+1)^0,w,c
  1664   0011A4  A4D8               	btfss	status,2,c
  1665   0011A6  D004               	goto	l1531
  1666                           
  1667                           ;PruebaLCD.c: 233: LATE0 = 0;
  1668   0011A8  908D               	bcf	3981,0,c	;volatile
  1669                           
  1670                           ;PruebaLCD.c: 234: LATE1 = 1;
  1671   0011AA  828D               	bsf	3981,1,c	;volatile
  1672                           
  1673                           ;PruebaLCD.c: 235: LATE2 = 1;
  1674   0011AC  848D               	bsf	3981,2,c	;volatile
  1675                           
  1676                           ;PruebaLCD.c: 236: }
  1677   0011AE  0012               	return	
  1678   0011B0                     l1531:
  1679                           
  1680                           ;PruebaLCD.c: 237: else if (b == 3){
  1681   0011B0  0E03               	movlw	3
  1682   0011B2  182A               	xorwf	_b^0,w,c
  1683   0011B4  102B               	iorwf	(_b+1)^0,w,c
  1684   0011B6  A4D8               	btfss	status,2,c
  1685   0011B8  D004               	goto	l1535
  1686                           
  1687                           ;PruebaLCD.c: 238: LATE0 = 0;
  1688   0011BA  908D               	bcf	3981,0,c	;volatile
  1689                           
  1690                           ;PruebaLCD.c: 239: LATE1 = 1;
  1691   0011BC  828D               	bsf	3981,1,c	;volatile
  1692                           
  1693                           ;PruebaLCD.c: 240: LATE2 = 0;
  1694   0011BE  948D               	bcf	3981,2,c	;volatile
  1695                           
  1696                           ;PruebaLCD.c: 241: }
  1697   0011C0  0012               	return	
  1698   0011C2                     l1535:
  1699                           
  1700                           ;PruebaLCD.c: 242: else if (b == 4){
  1701   0011C2  0E04               	movlw	4
  1702   0011C4  182A               	xorwf	_b^0,w,c
  1703   0011C6  102B               	iorwf	(_b+1)^0,w,c
  1704   0011C8  A4D8               	btfss	status,2,c
  1705   0011CA  D004               	goto	l1539
  1706                           
  1707                           ;PruebaLCD.c: 243: LATE0 = 1;
  1708   0011CC  808D               	bsf	3981,0,c	;volatile
  1709                           
  1710                           ;PruebaLCD.c: 244: LATE1 = 1;
  1711   0011CE  828D               	bsf	3981,1,c	;volatile
  1712                           
  1713                           ;PruebaLCD.c: 245: LATE2 = 0;
  1714   0011D0  948D               	bcf	3981,2,c	;volatile
  1715                           
  1716                           ;PruebaLCD.c: 246: }
  1717   0011D2  0012               	return	
  1718   0011D4                     l1539:
  1719                           
  1720                           ;PruebaLCD.c: 247: else if (b == 5){
  1721   0011D4  0E05               	movlw	5
  1722   0011D6  182A               	xorwf	_b^0,w,c
  1723   0011D8  102B               	iorwf	(_b+1)^0,w,c
  1724   0011DA  A4D8               	btfss	status,2,c
  1725   0011DC  0012               	return	
  1726                           
  1727                           ;PruebaLCD.c: 248: LATE0 = 1;
  1728   0011DE  808D               	bsf	3981,0,c	;volatile
  1729                           
  1730                           ;PruebaLCD.c: 249: LATE1 = 1;
  1731   0011E0  828D               	bsf	3981,1,c	;volatile
  1732                           
  1733                           ;PruebaLCD.c: 250: LATE2 = 1;
  1734   0011E2  848D               	bsf	3981,2,c	;volatile
  1735   0011E4  0012               	return	
  1736   0011E6                     __end_of_RGB:
  1737                           	callstack 0
  1738                           
  1739 ;; *************** function _MensajeLCD_Var *****************
  1740 ;; Defined at:
  1741 ;;		line 234 in file "LibLCDXC9.h"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;  a               1   27[COMRAM] PTR unsigned char 
  1744 ;;		 -> STR_16(12), STR_15(14), STR_14(11), STR_13(9), 
  1745 ;;		 -> STR_12(11), STR_11(12), STR_10(14), STR_9(11), 
  1746 ;;		 -> STR_8(9), STR_7(18), STR_6(18), STR_5(15), 
  1747 ;;		 -> STR_4(11), STR_3(9), STR_2(18), STR_1(12), 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;		None
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1759 ;;      Params:         1       0       0       0       0       0       0       0       0
  1760 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1761 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1762 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1763 ;;Total ram usage:        1 bytes
  1764 ;; Hardware stack levels used: 1
  1765 ;; Hardware stack levels required when called: 10
  1766 ;; This function calls:
  1767 ;;		_EscribeLCD_c
  1768 ;; This function is called by:
  1769 ;;		_main
  1770 ;;		_contador
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           	psect	text6
  1775   001776                     __ptext6:
  1776                           	callstack 0
  1777   001776                     _MensajeLCD_Var:
  1778                           	callstack 19
  1779                           
  1780                           ;LibLCDXC9.h: 238: while(*a != '\0'){
  1781                           
  1782                           ;incstack = 0
  1783   001776  D009               	goto	l2485
  1784   001778                     l2481:
  1785                           
  1786                           ;LibLCDXC9.h: 239: EscribeLCD_c(*a);
  1787   001778  C01C  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  1788   00177C                     	if	1	;There is more than 1 active tblptr byte
  1789   00177C  0E08               	movlw	high __smallconst
  1790   00177E  6EF7               	movwf	tblptrh,c
  1791   001780                     	endif
  1792   001780                     	if	0	;tblptru may be non-zero
  1793   001780                     	endif
  1794   001780                     	if	0	;tblptru may be non-zero
  1795   001780                     	endif
  1796   001780  0008               	tblrd		*
  1797   001782  50F5               	movf	tablat,w,c
  1798   001784  EC38  F00C         	call	_EscribeLCD_c
  1799                           
  1800                           ;LibLCDXC9.h: 240: a++;
  1801   001788  2A1C               	incf	MensajeLCD_Var@a^0,f,c
  1802   00178A                     l2485:
  1803   00178A  C01C  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  1804   00178E                     	if	1	;There is more than 1 active tblptr byte
  1805   00178E  0E08               	movlw	high __smallconst
  1806   001790  6EF7               	movwf	tblptrh,c
  1807   001792                     	endif
  1808   001792                     	if	0	;tblptru may be non-zero
  1809   001792                     	endif
  1810   001792                     	if	0	;tblptru may be non-zero
  1811   001792                     	endif
  1812   001792  0008               	tblrd		*
  1813   001794  50F5               	movf	tablat,w,c
  1814   001796  0900               	iorlw	0
  1815   001798  B4D8               	btfsc	status,2,c
  1816   00179A  0012               	return	
  1817   00179C  D7ED               	goto	l2481
  1818   00179E                     __end_of_MensajeLCD_Var:
  1819                           	callstack 0
  1820                           
  1821 ;; *************** function _EscribeLCD_c *****************
  1822 ;; Defined at:
  1823 ;;		line 131 in file "LibLCDXC9.h"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  a               1    wreg     unsigned char 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  a               1   26[COMRAM] unsigned char 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		wreg, status,2, status,0, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1837 ;;      Params:         0       0       0       0       0       0       0       0       0
  1838 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1839 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1840 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1841 ;;Total ram usage:        1 bytes
  1842 ;; Hardware stack levels used: 1
  1843 ;; Hardware stack levels required when called: 9
  1844 ;; This function calls:
  1845 ;;		_EnviaDato
  1846 ;;		_HabilitaLCD
  1847 ;;		_RetardoLCD
  1848 ;; This function is called by:
  1849 ;;		_MensajeLCD_Var
  1850 ;;		_main
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           	psect	text7
  1855   001870                     __ptext7:
  1856                           	callstack 0
  1857   001870                     _EscribeLCD_c:
  1858                           	callstack 19
  1859                           
  1860                           ;incstack = 0
  1861                           ;EscribeLCD_c@a stored from wreg
  1862   001870  6E1B               	movwf	EscribeLCD_c@a^0,c
  1863                           
  1864                           ;LibLCDXC9.h: 135: LATA4=1;
  1865   001872  8889               	bsf	3977,4,c	;volatile
  1866                           
  1867                           ;LibLCDXC9.h: 136: EnviaDato(a);
  1868   001874  501B               	movf	EscribeLCD_c@a^0,w,c
  1869   001876  ECB6  F00A         	call	_EnviaDato
  1870                           
  1871                           ;LibLCDXC9.h: 137: HabilitaLCD();
  1872   00187A  EC78  F00C         	call	_HabilitaLCD	;wreg free
  1873                           
  1874                           ;LibLCDXC9.h: 138: RetardoLCD(4);
  1875   00187E  0E04               	movlw	4
  1876   001880  EC3B  F00A         	call	_RetardoLCD
  1877   001884  0012               	return		;funcret
  1878   001886                     __end_of_EscribeLCD_c:
  1879                           	callstack 0
  1880                           
  1881 ;; *************** function _EscribeLCD_n8 *****************
  1882 ;; Defined at:
  1883 ;;		line 140 in file "LibLCDXC9.h"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  a               1    wreg     unsigned char 
  1886 ;;  b               1   30[COMRAM] unsigned char 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  a               1   34[COMRAM] unsigned char 
  1889 ;;  unidad          1   33[COMRAM] unsigned char 
  1890 ;;  decena          1   32[COMRAM] unsigned char 
  1891 ;;  centena         1   31[COMRAM] unsigned char 
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		wreg, status,2, status,0, cstack
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1901 ;;      Params:         1       0       0       0       0       0       0       0       0
  1902 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1903 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1904 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1905 ;;Total ram usage:        5 bytes
  1906 ;; Hardware stack levels used: 1
  1907 ;; Hardware stack levels required when called: 9
  1908 ;; This function calls:
  1909 ;;		_EnviaDato
  1910 ;;		_HabilitaLCD
  1911 ;;		_RetardoLCD
  1912 ;;		___lbdiv
  1913 ;;		___lbmod
  1914 ;; This function is called by:
  1915 ;;		_contador
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           	psect	text8
  1920   000C6A                     __ptext8:
  1921                           	callstack 0
  1922   000C6A                     _EscribeLCD_n8:
  1923                           	callstack 20
  1924                           
  1925                           ;incstack = 0
  1926                           ;EscribeLCD_n8@a stored from wreg
  1927   000C6A  6E23               	movwf	EscribeLCD_n8@a^0,c
  1928                           
  1929                           ;LibLCDXC9.h: 145: unsigned char centena,decena,unidad;;LibLCDXC9.h: 146: LATA4=1;
  1930   000C6C  8889               	bsf	3977,4,c	;volatile
  1931                           
  1932                           ;LibLCDXC9.h: 147: switch(b){
  1933   000C6E  D065               	goto	l2477
  1934   000C70                     l2445:
  1935   000C70  0E0A               	movlw	10
  1936   000C72  6E17               	movwf	___lbmod@divisor^0,c
  1937   000C74  5023               	movf	EscribeLCD_n8@a^0,w,c
  1938   000C76  ECCF  F00B         	call	___lbmod
  1939   000C7A  6E22               	movwf	EscribeLCD_n8@unidad^0,c
  1940                           
  1941                           ;LibLCDXC9.h: 149: EnviaDato(unidad+48);
  1942   000C7C  5022               	movf	EscribeLCD_n8@unidad^0,w,c
  1943   000C7E  0F30               	addlw	48
  1944   000C80  ECB6  F00A         	call	_EnviaDato
  1945                           
  1946                           ;LibLCDXC9.h: 150: HabilitaLCD();
  1947   000C84  EC78  F00C         	call	_HabilitaLCD	;wreg free
  1948                           
  1949                           ;LibLCDXC9.h: 151: RetardoLCD(4);
  1950   000C88  0E04               	movlw	4
  1951   000C8A  EC3B  F00A         	call	_RetardoLCD
  1952                           
  1953                           ;LibLCDXC9.h: 152: break;
  1954   000C8E  0012               	return	
  1955   000C90                     l2451:
  1956   000C90  0E0A               	movlw	10
  1957   000C92  6E1B               	movwf	___lbdiv@divisor^0,c
  1958   000C94  0E64               	movlw	100
  1959   000C96  6E17               	movwf	___lbmod@divisor^0,c
  1960   000C98  5023               	movf	EscribeLCD_n8@a^0,w,c
  1961   000C9A  ECCF  F00B         	call	___lbmod
  1962   000C9E  EC36  F00B         	call	___lbdiv
  1963   000CA2  6E21               	movwf	EscribeLCD_n8@decena^0,c
  1964                           
  1965                           ;LibLCDXC9.h: 154: unidad=a%10;
  1966   000CA4  0E0A               	movlw	10
  1967   000CA6  6E17               	movwf	___lbmod@divisor^0,c
  1968   000CA8  5023               	movf	EscribeLCD_n8@a^0,w,c
  1969   000CAA  ECCF  F00B         	call	___lbmod
  1970   000CAE  6E22               	movwf	EscribeLCD_n8@unidad^0,c
  1971                           
  1972                           ;LibLCDXC9.h: 155: EnviaDato(decena+48);
  1973   000CB0  5021               	movf	EscribeLCD_n8@decena^0,w,c
  1974   000CB2  0F30               	addlw	48
  1975   000CB4  ECB6  F00A         	call	_EnviaDato
  1976                           
  1977                           ;LibLCDXC9.h: 156: HabilitaLCD();
  1978   000CB8  EC78  F00C         	call	_HabilitaLCD	;wreg free
  1979                           
  1980                           ;LibLCDXC9.h: 157: RetardoLCD(4);
  1981   000CBC  0E04               	movlw	4
  1982   000CBE  EC3B  F00A         	call	_RetardoLCD
  1983                           
  1984                           ;LibLCDXC9.h: 158: EnviaDato(unidad+48);
  1985   000CC2  5022               	movf	EscribeLCD_n8@unidad^0,w,c
  1986   000CC4  0F30               	addlw	48
  1987   000CC6  ECB6  F00A         	call	_EnviaDato
  1988                           
  1989                           ;LibLCDXC9.h: 159: HabilitaLCD();
  1990   000CCA  EC78  F00C         	call	_HabilitaLCD	;wreg free
  1991                           
  1992                           ;LibLCDXC9.h: 160: RetardoLCD(4);
  1993   000CCE  0E04               	movlw	4
  1994   000CD0  EC3B  F00A         	call	_RetardoLCD
  1995                           
  1996                           ;LibLCDXC9.h: 161: break;
  1997   000CD4  0012               	return	
  1998   000CD6                     l2461:
  1999   000CD6  0E64               	movlw	100
  2000   000CD8  6E1B               	movwf	___lbdiv@divisor^0,c
  2001   000CDA  5023               	movf	EscribeLCD_n8@a^0,w,c
  2002   000CDC  EC36  F00B         	call	___lbdiv
  2003   000CE0  6E20               	movwf	EscribeLCD_n8@centena^0,c
  2004                           
  2005                           ;LibLCDXC9.h: 163: decena=(a%100)/10;
  2006   000CE2  0E0A               	movlw	10
  2007   000CE4  6E1B               	movwf	___lbdiv@divisor^0,c
  2008   000CE6  0E64               	movlw	100
  2009   000CE8  6E17               	movwf	___lbmod@divisor^0,c
  2010   000CEA  5023               	movf	EscribeLCD_n8@a^0,w,c
  2011   000CEC  ECCF  F00B         	call	___lbmod
  2012   000CF0  EC36  F00B         	call	___lbdiv
  2013   000CF4  6E21               	movwf	EscribeLCD_n8@decena^0,c
  2014                           
  2015                           ;LibLCDXC9.h: 164: unidad=a%10;
  2016   000CF6  0E0A               	movlw	10
  2017   000CF8  6E17               	movwf	___lbmod@divisor^0,c
  2018   000CFA  5023               	movf	EscribeLCD_n8@a^0,w,c
  2019   000CFC  ECCF  F00B         	call	___lbmod
  2020   000D00  6E22               	movwf	EscribeLCD_n8@unidad^0,c
  2021                           
  2022                           ;LibLCDXC9.h: 165: EnviaDato(centena+48);
  2023   000D02  5020               	movf	EscribeLCD_n8@centena^0,w,c
  2024   000D04  0F30               	addlw	48
  2025   000D06  ECB6  F00A         	call	_EnviaDato
  2026                           
  2027                           ;LibLCDXC9.h: 166: HabilitaLCD();
  2028   000D0A  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2029                           
  2030                           ;LibLCDXC9.h: 167: RetardoLCD(4);
  2031   000D0E  0E04               	movlw	4
  2032   000D10  EC3B  F00A         	call	_RetardoLCD
  2033                           
  2034                           ;LibLCDXC9.h: 168: EnviaDato(decena+48);
  2035   000D14  5021               	movf	EscribeLCD_n8@decena^0,w,c
  2036   000D16  0F30               	addlw	48
  2037   000D18  ECB6  F00A         	call	_EnviaDato
  2038                           
  2039                           ;LibLCDXC9.h: 169: HabilitaLCD();
  2040   000D1C  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2041                           
  2042                           ;LibLCDXC9.h: 170: RetardoLCD(4);
  2043   000D20  0E04               	movlw	4
  2044   000D22  EC3B  F00A         	call	_RetardoLCD
  2045                           
  2046                           ;LibLCDXC9.h: 171: EnviaDato(unidad+48);
  2047   000D26  5022               	movf	EscribeLCD_n8@unidad^0,w,c
  2048   000D28  0F30               	addlw	48
  2049   000D2A  ECB6  F00A         	call	_EnviaDato
  2050                           
  2051                           ;LibLCDXC9.h: 172: HabilitaLCD();
  2052   000D2E  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2053                           
  2054                           ;LibLCDXC9.h: 173: RetardoLCD(4);
  2055   000D32  0E04               	movlw	4
  2056   000D34  EC3B  F00A         	call	_RetardoLCD
  2057                           
  2058                           ;LibLCDXC9.h: 174: break;
  2059   000D38  0012               	return	
  2060   000D3A                     l2477:
  2061   000D3A  501F               	movf	EscribeLCD_n8@b^0,w,c
  2062                           
  2063                           ; Switch size 1, requested type "simple"
  2064                           ; Number of cases is 3, Range of values is 1 to 3
  2065                           ; switch strategies available:
  2066                           ; Name         Instructions Cycles
  2067                           ; simple_byte           10     6 (average)
  2068                           ;	Chosen strategy is simple_byte
  2069   000D3C  0A01               	xorlw	1	; case 1
  2070   000D3E  B4D8               	btfsc	status,2,c
  2071   000D40  D797               	goto	l2445
  2072   000D42  0A03               	xorlw	3	; case 2
  2073   000D44  B4D8               	btfsc	status,2,c
  2074   000D46  D7A4               	goto	l2451
  2075   000D48  0A01               	xorlw	1	; case 3
  2076   000D4A  A4D8               	btfss	status,2,c
  2077   000D4C  0012               	return	
  2078   000D4E  D7C3               	goto	l2461
  2079   000D50                     __end_of_EscribeLCD_n8:
  2080                           	callstack 0
  2081                           
  2082 ;; *************** function ___lbmod *****************
  2083 ;; Defined at:
  2084 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbmod.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;  dividend        1    wreg     unsigned char 
  2087 ;;  divisor         1   22[COMRAM] unsigned char 
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;  dividend        1   23[COMRAM] unsigned char 
  2090 ;;  rem             1   25[COMRAM] unsigned char 
  2091 ;;  counter         1   24[COMRAM] unsigned char 
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  1    wreg      unsigned char 
  2094 ;; Registers used:
  2095 ;;		wreg, status,2, status,0
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2101 ;;      Params:         1       0       0       0       0       0       0       0       0
  2102 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2103 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2104 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2105 ;;Total ram usage:        4 bytes
  2106 ;; Hardware stack levels used: 1
  2107 ;; Hardware stack levels required when called: 7
  2108 ;; This function calls:
  2109 ;;		Nothing
  2110 ;; This function is called by:
  2111 ;;		_EscribeLCD_n8
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           	psect	text9
  2116   00179E                     __ptext9:
  2117                           	callstack 0
  2118   00179E                     ___lbmod:
  2119                           	callstack 21
  2120                           
  2121                           ;incstack = 0
  2122                           ;___lbmod@dividend stored from wreg
  2123   00179E  6E18               	movwf	___lbmod@dividend^0,c
  2124   0017A0  0E08               	movlw	8
  2125   0017A2  6E19               	movwf	___lbmod@counter^0,c
  2126   0017A4  6A1A               	clrf	___lbmod@rem^0,c
  2127   0017A6                     l2289:
  2128   0017A6  90D8               	bcf	status,0,c
  2129   0017A8  3418               	rlcf	___lbmod@dividend^0,w,c
  2130   0017AA  341A               	rlcf	___lbmod@rem^0,w,c
  2131   0017AC  6E1A               	movwf	___lbmod@rem^0,c
  2132   0017AE  90D8               	bcf	status,0,c
  2133   0017B0  3618               	rlcf	___lbmod@dividend^0,f,c
  2134   0017B2  5017               	movf	___lbmod@divisor^0,w,c
  2135   0017B4  5C1A               	subwf	___lbmod@rem^0,w,c
  2136   0017B6  A0D8               	btfss	status,0,c
  2137   0017B8  D002               	goto	l2297
  2138   0017BA  5017               	movf	___lbmod@divisor^0,w,c
  2139   0017BC  5E1A               	subwf	___lbmod@rem^0,f,c
  2140   0017BE                     l2297:
  2141   0017BE  2E19               	decfsz	___lbmod@counter^0,f,c
  2142   0017C0  D7F2               	goto	l2289
  2143   0017C2  501A               	movf	___lbmod@rem^0,w,c
  2144   0017C4  0012               	return		;funcret
  2145   0017C6                     __end_of___lbmod:
  2146                           	callstack 0
  2147                           
  2148 ;; *************** function ___lbdiv *****************
  2149 ;; Defined at:
  2150 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbdiv.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;  dividend        1    wreg     unsigned char 
  2153 ;;  divisor         1   26[COMRAM] unsigned char 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  dividend        1   27[COMRAM] unsigned char 
  2156 ;;  quotient        1   29[COMRAM] unsigned char 
  2157 ;;  counter         1   28[COMRAM] unsigned char 
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  1    wreg      unsigned char 
  2160 ;; Registers used:
  2161 ;;		wreg, status,2, status,0
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2167 ;;      Params:         1       0       0       0       0       0       0       0       0
  2168 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2169 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2170 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2171 ;;Total ram usage:        4 bytes
  2172 ;; Hardware stack levels used: 1
  2173 ;; Hardware stack levels required when called: 7
  2174 ;; This function calls:
  2175 ;;		Nothing
  2176 ;; This function is called by:
  2177 ;;		_EscribeLCD_n8
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text10
  2182   00166C                     __ptext10:
  2183                           	callstack 0
  2184   00166C                     ___lbdiv:
  2185                           	callstack 21
  2186                           
  2187                           ;incstack = 0
  2188                           ;___lbdiv@dividend stored from wreg
  2189   00166C  6E1C               	movwf	___lbdiv@dividend^0,c
  2190   00166E  6A1E               	clrf	___lbdiv@quotient^0,c
  2191   001670  501B               	movf	___lbdiv@divisor^0,w,c
  2192   001672  B4D8               	btfsc	status,2,c
  2193   001674  D015               	goto	l2281
  2194   001676  0E01               	movlw	1
  2195   001678  6E1D               	movwf	___lbdiv@counter^0,c
  2196   00167A  D003               	goto	l2269
  2197   00167C                     l2265:
  2198   00167C  90D8               	bcf	status,0,c
  2199   00167E  361B               	rlcf	___lbdiv@divisor^0,f,c
  2200   001680  2A1D               	incf	___lbdiv@counter^0,f,c
  2201   001682                     l2269:
  2202   001682  AE1B               	btfss	___lbdiv@divisor^0,7,c
  2203   001684  D7FB               	goto	l2265
  2204   001686                     u1100:
  2205   001686  90D8               	bcf	status,0,c
  2206   001688  361E               	rlcf	___lbdiv@quotient^0,f,c
  2207   00168A  501B               	movf	___lbdiv@divisor^0,w,c
  2208   00168C  5C1C               	subwf	___lbdiv@dividend^0,w,c
  2209   00168E  A0D8               	btfss	status,0,c
  2210   001690  D003               	goto	l2277
  2211   001692  501B               	movf	___lbdiv@divisor^0,w,c
  2212   001694  5E1C               	subwf	___lbdiv@dividend^0,f,c
  2213   001696  801E               	bsf	___lbdiv@quotient^0,0,c
  2214   001698                     l2277:
  2215   001698  90D8               	bcf	status,0,c
  2216   00169A  321B               	rrcf	___lbdiv@divisor^0,f,c
  2217   00169C  2E1D               	decfsz	___lbdiv@counter^0,f,c
  2218   00169E  D7F3               	goto	u1100
  2219   0016A0                     l2281:
  2220   0016A0  501E               	movf	___lbdiv@quotient^0,w,c
  2221   0016A2  0012               	return		;funcret
  2222   0016A4                     __end_of___lbdiv:
  2223                           	callstack 0
  2224                           
  2225 ;; *************** function _DireccionaLCD *****************
  2226 ;; Defined at:
  2227 ;;		line 243 in file "LibLCDXC9.h"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  a               1    wreg     unsigned char 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;  a               1   26[COMRAM] unsigned char 
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  1    wreg      void 
  2234 ;; Registers used:
  2235 ;;		wreg, status,2, status,0, cstack
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2241 ;;      Params:         0       0       0       0       0       0       0       0       0
  2242 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2243 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2244 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2245 ;;Total ram usage:        1 bytes
  2246 ;; Hardware stack levels used: 1
  2247 ;; Hardware stack levels required when called: 9
  2248 ;; This function calls:
  2249 ;;		_EnviaDato
  2250 ;;		_HabilitaLCD
  2251 ;;		_RetardoLCD
  2252 ;; This function is called by:
  2253 ;;		_main
  2254 ;;		_contador
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           	psect	text11
  2259   001886                     __ptext11:
  2260                           	callstack 0
  2261   001886                     _DireccionaLCD:
  2262                           	callstack 20
  2263                           
  2264                           ;incstack = 0
  2265                           ;DireccionaLCD@a stored from wreg
  2266   001886  6E1B               	movwf	DireccionaLCD@a^0,c
  2267                           
  2268                           ;LibLCDXC9.h: 246: LATA4=0;
  2269   001888  9889               	bcf	3977,4,c	;volatile
  2270                           
  2271                           ;LibLCDXC9.h: 247: EnviaDato(a);
  2272   00188A  501B               	movf	DireccionaLCD@a^0,w,c
  2273   00188C  ECB6  F00A         	call	_EnviaDato
  2274                           
  2275                           ;LibLCDXC9.h: 248: HabilitaLCD();
  2276   001890  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2277                           
  2278                           ;LibLCDXC9.h: 249: RetardoLCD(4);
  2279   001894  0E04               	movlw	4
  2280   001896  EC3B  F00A         	call	_RetardoLCD
  2281   00189A  0012               	return		;funcret
  2282   00189C                     __end_of_DireccionaLCD:
  2283                           	callstack 0
  2284                           
  2285 ;; *************** function _InicializaLCD *****************
  2286 ;; Defined at:
  2287 ;;		line 66 in file "LibLCDXC9.h"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;		None
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;		None
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      void 
  2294 ;; Registers used:
  2295 ;;		wreg, status,2, status,0, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2301 ;;      Params:         0       0       0       0       0       0       0       0       0
  2302 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2303 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2304 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2305 ;;Total ram usage:        0 bytes
  2306 ;; Hardware stack levels used: 1
  2307 ;; Hardware stack levels required when called: 10
  2308 ;; This function calls:
  2309 ;;		_BorraLCD
  2310 ;;		_EnviaDato
  2311 ;;		_HabilitaLCD
  2312 ;;		_RetardoLCD
  2313 ;; This function is called by:
  2314 ;;		_main
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text12
  2319   000FCE                     __ptext12:
  2320                           	callstack 0
  2321   000FCE                     _InicializaLCD:
  2322                           	callstack 20
  2323                           
  2324                           ;LibLCDXC9.h: 68: LATA4=0;
  2325                           
  2326                           ;incstack = 0
  2327   000FCE  9889               	bcf	3977,4,c	;volatile
  2328                           
  2329                           ;LibLCDXC9.h: 69: if(interfaz==4)
  2330   000FD0  0E04               	movlw	4
  2331   000FD2  1844               	xorwf	_interfaz^0,w,c
  2332   000FD4  A4D8               	btfss	status,2,c
  2333   000FD6  D004               	goto	l1681
  2334                           
  2335                           ;LibLCDXC9.h: 70: LATD=(LATD & 0b00001111) | 0x30;
  2336   000FD8  508C               	movf	140,w,c	;volatile
  2337   000FDA  0B0F               	andlw	15
  2338   000FDC  0930               	iorlw	48
  2339   000FDE  D001               	goto	L1
  2340   000FE0                     l1681:
  2341                           
  2342                           ;LibLCDXC9.h: 71: else;LibLCDXC9.h: 72: LATD=0x3F;
  2343   000FE0  0E3F               	movlw	63
  2344   000FE2                     L1:
  2345   000FE2  6E8C               	movwf	140,c	;volatile
  2346                           
  2347                           ;LibLCDXC9.h: 73: HabilitaLCD();
  2348   000FE4  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2349                           
  2350                           ;LibLCDXC9.h: 74: RetardoLCD(1);
  2351   000FE8  0E01               	movlw	1
  2352   000FEA  EC3B  F00A         	call	_RetardoLCD
  2353                           
  2354                           ;LibLCDXC9.h: 75: if(interfaz==4)
  2355   000FEE  0E04               	movlw	4
  2356   000FF0  1844               	xorwf	_interfaz^0,w,c
  2357   000FF2  A4D8               	btfss	status,2,c
  2358   000FF4  D004               	goto	l1691
  2359                           
  2360                           ;LibLCDXC9.h: 76: LATD=(LATD & 0b00001111) | 0x30;
  2361   000FF6  508C               	movf	140,w,c	;volatile
  2362   000FF8  0B0F               	andlw	15
  2363   000FFA  0930               	iorlw	48
  2364   000FFC  D001               	goto	L2
  2365   000FFE                     l1691:
  2366                           
  2367                           ;LibLCDXC9.h: 77: else;LibLCDXC9.h: 78: LATD=0x3F;
  2368   000FFE  0E3F               	movlw	63
  2369   001000                     L2:
  2370   001000  6E8C               	movwf	140,c	;volatile
  2371                           
  2372                           ;LibLCDXC9.h: 79: HabilitaLCD();
  2373   001002  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2374                           
  2375                           ;LibLCDXC9.h: 80: RetardoLCD(3);
  2376   001006  0E03               	movlw	3
  2377   001008  EC3B  F00A         	call	_RetardoLCD
  2378                           
  2379                           ;LibLCDXC9.h: 81: if(interfaz==4)
  2380   00100C  0E04               	movlw	4
  2381   00100E  1844               	xorwf	_interfaz^0,w,c
  2382   001010  A4D8               	btfss	status,2,c
  2383   001012  D004               	goto	l1701
  2384                           
  2385                           ;LibLCDXC9.h: 82: LATD=(LATD & 0b00001111) | 0x30;
  2386   001014  508C               	movf	140,w,c	;volatile
  2387   001016  0B0F               	andlw	15
  2388   001018  0930               	iorlw	48
  2389   00101A  D001               	goto	L3
  2390   00101C                     l1701:
  2391                           
  2392                           ;LibLCDXC9.h: 83: else;LibLCDXC9.h: 84: LATD=0x3F;
  2393   00101C  0E3F               	movlw	63
  2394   00101E                     L3:
  2395   00101E  6E8C               	movwf	140,c	;volatile
  2396                           
  2397                           ;LibLCDXC9.h: 85: HabilitaLCD();
  2398   001020  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2399                           
  2400                           ;LibLCDXC9.h: 86: RetardoLCD(4);
  2401   001024  0E04               	movlw	4
  2402   001026  EC3B  F00A         	call	_RetardoLCD
  2403                           
  2404                           ;LibLCDXC9.h: 87: if(interfaz==4){
  2405   00102A  0E04               	movlw	4
  2406   00102C  1844               	xorwf	_interfaz^0,w,c
  2407   00102E  A4D8               	btfss	status,2,c
  2408   001030  D011               	goto	l1721
  2409                           
  2410                           ;LibLCDXC9.h: 88: LATD=(LATD & 0b00001111) | 0x20;
  2411   001032  508C               	movf	140,w,c	;volatile
  2412   001034  0B0F               	andlw	15
  2413   001036  0920               	iorlw	32
  2414   001038  6E8C               	movwf	140,c	;volatile
  2415                           
  2416                           ;LibLCDXC9.h: 89: HabilitaLCD();
  2417   00103A  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2418                           
  2419                           ;LibLCDXC9.h: 90: RetardoLCD(4);
  2420   00103E  0E04               	movlw	4
  2421   001040  EC3B  F00A         	call	_RetardoLCD
  2422                           
  2423                           ;LibLCDXC9.h: 91: EnviaDato(0x2F);
  2424   001044  0E2F               	movlw	47
  2425   001046  ECB6  F00A         	call	_EnviaDato
  2426                           
  2427                           ;LibLCDXC9.h: 92: HabilitaLCD();
  2428   00104A  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2429                           
  2430                           ;LibLCDXC9.h: 93: RetardoLCD(4);
  2431   00104E  0E04               	movlw	4
  2432   001050  EC3B  F00A         	call	_RetardoLCD
  2433   001054                     l1721:
  2434                           
  2435                           ;LibLCDXC9.h: 94: };LibLCDXC9.h: 95: BorraLCD();
  2436   001054  EC64  F00C         	call	_BorraLCD	;wreg free
  2437                           
  2438                           ;LibLCDXC9.h: 96: EnviaDato(0xF);
  2439   001058  0E0F               	movlw	15
  2440   00105A  ECB6  F00A         	call	_EnviaDato
  2441                           
  2442                           ;LibLCDXC9.h: 97: HabilitaLCD();
  2443   00105E  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2444                           
  2445                           ;LibLCDXC9.h: 98: RetardoLCD(4);
  2446   001062  0E04               	movlw	4
  2447   001064  EC3B  F00A         	call	_RetardoLCD
  2448   001068  0012               	return		;funcret
  2449   00106A                     __end_of_InicializaLCD:
  2450                           	callstack 0
  2451                           
  2452 ;; *************** function _ConfiguraLCD *****************
  2453 ;; Defined at:
  2454 ;;		line 50 in file "LibLCDXC9.h"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;  a               1    wreg     unsigned char 
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  a               1   22[COMRAM] unsigned char 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  1    wreg      void 
  2461 ;; Registers used:
  2462 ;;		wreg, status,2, status,0
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2468 ;;      Params:         0       0       0       0       0       0       0       0       0
  2469 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2470 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2471 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2472 ;;Total ram usage:        1 bytes
  2473 ;; Hardware stack levels used: 1
  2474 ;; Hardware stack levels required when called: 7
  2475 ;; This function calls:
  2476 ;;		Nothing
  2477 ;; This function is called by:
  2478 ;;		_main
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           	psect	text13
  2483   001858                     __ptext13:
  2484                           	callstack 0
  2485   001858                     _ConfiguraLCD:
  2486                           	callstack 23
  2487                           
  2488                           ;incstack = 0
  2489                           ;ConfiguraLCD@a stored from wreg
  2490   001858  6E17               	movwf	ConfiguraLCD@a^0,c
  2491                           
  2492                           ;LibLCDXC9.h: 51: if(a==4 | a ==8)
  2493   00185A  0E04               	movlw	4
  2494   00185C  1817               	xorwf	ConfiguraLCD@a^0,w,c
  2495   00185E  B4D8               	btfsc	status,2,c
  2496   001860  D004               	goto	u610
  2497   001862  0E08               	movlw	8
  2498   001864  1817               	xorwf	ConfiguraLCD@a^0,w,c
  2499   001866  A4D8               	btfss	status,2,c
  2500   001868  0012               	return	
  2501   00186A                     u610:
  2502                           
  2503                           ;LibLCDXC9.h: 52: interfaz=a;
  2504   00186A  C017  F044         	movff	ConfiguraLCD@a,_interfaz
  2505   00186E  0012               	return		;funcret
  2506   001870                     __end_of_ConfiguraLCD:
  2507                           	callstack 0
  2508                           
  2509 ;; *************** function _CaracterQbert *****************
  2510 ;; Defined at:
  2511 ;;		line 333 in file "LibLCDXC9.h"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;		None
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;		None
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  1    wreg      void 
  2518 ;; Registers used:
  2519 ;;		wreg, status,2, status,0, cstack
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2525 ;;      Params:         0       0       0       0       0       0       0       0       0
  2526 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2527 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2528 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2529 ;;Total ram usage:        0 bytes
  2530 ;; Hardware stack levels used: 1
  2531 ;; Hardware stack levels required when called: 11
  2532 ;; This function calls:
  2533 ;;		_ComandoLCD
  2534 ;;		_EnviaDato
  2535 ;;		_HabilitaLCD
  2536 ;;		_RetardoLCD
  2537 ;; This function is called by:
  2538 ;;		_main
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           	psect	text14
  2543   00125E                     __ptext14:
  2544                           	callstack 0
  2545   00125E                     _CaracterQbert:
  2546                           	callstack 19
  2547                           
  2548                           ;LibLCDXC9.h: 334: ComandoLCD(0b01010000);
  2549                           
  2550                           ;incstack = 0
  2551   00125E  0E50               	movlw	80
  2552   001260  ECA2  F00B         	call	_ComandoLCD
  2553                           
  2554                           ;LibLCDXC9.h: 335: LATA4=1;
  2555   001264  8889               	bsf	3977,4,c	;volatile
  2556                           
  2557                           ;LibLCDXC9.h: 336: RetardoLCD(4);
  2558   001266  0E04               	movlw	4
  2559   001268  EC3B  F00A         	call	_RetardoLCD
  2560                           
  2561                           ;LibLCDXC9.h: 337: EnviaDato(0b11111);
  2562   00126C  0E1F               	movlw	31
  2563   00126E  ECB6  F00A         	call	_EnviaDato
  2564                           
  2565                           ;LibLCDXC9.h: 338: HabilitaLCD();
  2566   001272  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2567                           
  2568                           ;LibLCDXC9.h: 339: EnviaDato(0b10101);
  2569   001276  0E15               	movlw	21
  2570   001278  ECB6  F00A         	call	_EnviaDato
  2571                           
  2572                           ;LibLCDXC9.h: 340: HabilitaLCD();
  2573   00127C  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2574                           
  2575                           ;LibLCDXC9.h: 341: EnviaDato(0b11111);
  2576   001280  0E1F               	movlw	31
  2577   001282  ECB6  F00A         	call	_EnviaDato
  2578                           
  2579                           ;LibLCDXC9.h: 342: HabilitaLCD();
  2580   001286  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2581                           
  2582                           ;LibLCDXC9.h: 343: EnviaDato(0b11111);
  2583   00128A  0E1F               	movlw	31
  2584   00128C  ECB6  F00A         	call	_EnviaDato
  2585                           
  2586                           ;LibLCDXC9.h: 344: HabilitaLCD();
  2587   001290  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2588                           
  2589                           ;LibLCDXC9.h: 345: EnviaDato(0b01110);
  2590   001294  0E0E               	movlw	14
  2591   001296  ECB6  F00A         	call	_EnviaDato
  2592                           
  2593                           ;LibLCDXC9.h: 346: HabilitaLCD();
  2594   00129A  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2595                           
  2596                           ;LibLCDXC9.h: 347: EnviaDato(0b01010);
  2597   00129E  0E0A               	movlw	10
  2598   0012A0  ECB6  F00A         	call	_EnviaDato
  2599                           
  2600                           ;LibLCDXC9.h: 348: HabilitaLCD();
  2601   0012A4  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2602                           
  2603                           ;LibLCDXC9.h: 349: EnviaDato(0b11011);
  2604   0012A8  0E1B               	movlw	27
  2605   0012AA  ECB6  F00A         	call	_EnviaDato
  2606                           
  2607                           ;LibLCDXC9.h: 350: HabilitaLCD();
  2608   0012AE  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2609                           
  2610                           ;LibLCDXC9.h: 351: EnviaDato(0b00000);
  2611   0012B2  0E00               	movlw	0
  2612   0012B4  ECB6  F00A         	call	_EnviaDato
  2613                           
  2614                           ;LibLCDXC9.h: 352: HabilitaLCD();
  2615   0012B8  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2616                           
  2617                           ;LibLCDXC9.h: 353: LATA4 = 0;
  2618   0012BC  9889               	bcf	3977,4,c	;volatile
  2619                           
  2620                           ;LibLCDXC9.h: 354: EnviaDato(0xC1);
  2621   0012BE  0EC1               	movlw	193
  2622   0012C0  ECB6  F00A         	call	_EnviaDato
  2623                           
  2624                           ;LibLCDXC9.h: 355: HabilitaLCD();
  2625   0012C4  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2626                           
  2627                           ;LibLCDXC9.h: 356: RetardoLCD(2);
  2628   0012C8  0E02               	movlw	2
  2629   0012CA  EC3B  F00A         	call	_RetardoLCD
  2630   0012CE  0012               	return		;funcret
  2631   0012D0                     __end_of_CaracterQbert:
  2632                           	callstack 0
  2633                           
  2634 ;; *************** function _CaracterCara *****************
  2635 ;; Defined at:
  2636 ;;		line 307 in file "LibLCDXC9.h"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;		None
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;		None
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  1    wreg      void 
  2643 ;; Registers used:
  2644 ;;		wreg, status,2, status,0, cstack
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2650 ;;      Params:         0       0       0       0       0       0       0       0       0
  2651 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2652 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2653 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2654 ;;Total ram usage:        0 bytes
  2655 ;; Hardware stack levels used: 1
  2656 ;; Hardware stack levels required when called: 11
  2657 ;; This function calls:
  2658 ;;		_ComandoLCD
  2659 ;;		_EnviaDato
  2660 ;;		_HabilitaLCD
  2661 ;;		_RetardoLCD
  2662 ;; This function is called by:
  2663 ;;		_main
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text15
  2668   0012D0                     __ptext15:
  2669                           	callstack 0
  2670   0012D0                     _CaracterCara:
  2671                           	callstack 19
  2672                           
  2673                           ;LibLCDXC9.h: 308: ComandoLCD(0b01001000);
  2674                           
  2675                           ;incstack = 0
  2676   0012D0  0E48               	movlw	72
  2677   0012D2  ECA2  F00B         	call	_ComandoLCD
  2678                           
  2679                           ;LibLCDXC9.h: 309: LATA4=1;
  2680   0012D6  8889               	bsf	3977,4,c	;volatile
  2681                           
  2682                           ;LibLCDXC9.h: 310: RetardoLCD(4);
  2683   0012D8  0E04               	movlw	4
  2684   0012DA  EC3B  F00A         	call	_RetardoLCD
  2685                           
  2686                           ;LibLCDXC9.h: 311: EnviaDato(0b11011);
  2687   0012DE  0E1B               	movlw	27
  2688   0012E0  ECB6  F00A         	call	_EnviaDato
  2689                           
  2690                           ;LibLCDXC9.h: 312: HabilitaLCD();
  2691   0012E4  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2692                           
  2693                           ;LibLCDXC9.h: 313: EnviaDato(0b00000);
  2694   0012E8  0E00               	movlw	0
  2695   0012EA  ECB6  F00A         	call	_EnviaDato
  2696                           
  2697                           ;LibLCDXC9.h: 314: HabilitaLCD();
  2698   0012EE  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2699                           
  2700                           ;LibLCDXC9.h: 315: EnviaDato(0b11011);
  2701   0012F2  0E1B               	movlw	27
  2702   0012F4  ECB6  F00A         	call	_EnviaDato
  2703                           
  2704                           ;LibLCDXC9.h: 316: HabilitaLCD();
  2705   0012F8  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2706                           
  2707                           ;LibLCDXC9.h: 317: EnviaDato(0b11011);
  2708   0012FC  0E1B               	movlw	27
  2709   0012FE  ECB6  F00A         	call	_EnviaDato
  2710                           
  2711                           ;LibLCDXC9.h: 318: HabilitaLCD();
  2712   001302  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2713                           
  2714                           ;LibLCDXC9.h: 319: EnviaDato(0b00000);
  2715   001306  0E00               	movlw	0
  2716   001308  ECB6  F00A         	call	_EnviaDato
  2717                           
  2718                           ;LibLCDXC9.h: 320: HabilitaLCD();
  2719   00130C  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2720                           
  2721                           ;LibLCDXC9.h: 321: EnviaDato(0b10001);
  2722   001310  0E11               	movlw	17
  2723   001312  ECB6  F00A         	call	_EnviaDato
  2724                           
  2725                           ;LibLCDXC9.h: 322: HabilitaLCD();
  2726   001316  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2727                           
  2728                           ;LibLCDXC9.h: 323: EnviaDato(0b01110);
  2729   00131A  0E0E               	movlw	14
  2730   00131C  ECB6  F00A         	call	_EnviaDato
  2731                           
  2732                           ;LibLCDXC9.h: 324: HabilitaLCD();
  2733   001320  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2734                           
  2735                           ;LibLCDXC9.h: 325: EnviaDato(0b00000);
  2736   001324  0E00               	movlw	0
  2737   001326  ECB6  F00A         	call	_EnviaDato
  2738                           
  2739                           ;LibLCDXC9.h: 326: HabilitaLCD();
  2740   00132A  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2741                           
  2742                           ;LibLCDXC9.h: 327: LATA4 = 0;
  2743   00132E  9889               	bcf	3977,4,c	;volatile
  2744                           
  2745                           ;LibLCDXC9.h: 328: EnviaDato(0xC0);
  2746   001330  0EC0               	movlw	192
  2747   001332  ECB6  F00A         	call	_EnviaDato
  2748                           
  2749                           ;LibLCDXC9.h: 329: HabilitaLCD();
  2750   001336  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2751                           
  2752                           ;LibLCDXC9.h: 330: RetardoLCD(2);
  2753   00133A  0E02               	movlw	2
  2754   00133C  EC3B  F00A         	call	_RetardoLCD
  2755   001340  0012               	return		;funcret
  2756   001342                     __end_of_CaracterCara:
  2757                           	callstack 0
  2758                           
  2759 ;; *************** function _ComandoLCD *****************
  2760 ;; Defined at:
  2761 ;;		line 118 in file "LibLCDXC9.h"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  a               1    wreg     unsigned char 
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;  a               1   26[COMRAM] unsigned char 
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  1    wreg      void 
  2768 ;; Registers used:
  2769 ;;		wreg, status,2, status,0, cstack
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2775 ;;      Params:         0       0       0       0       0       0       0       0       0
  2776 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2777 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2778 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2779 ;;Total ram usage:        1 bytes
  2780 ;; Hardware stack levels used: 1
  2781 ;; Hardware stack levels required when called: 10
  2782 ;; This function calls:
  2783 ;;		_BorraLCD
  2784 ;;		_CursorAInicio
  2785 ;;		_EnviaDato
  2786 ;;		_HabilitaLCD
  2787 ;;		_RetardoLCD
  2788 ;; This function is called by:
  2789 ;;		_CaracterCara
  2790 ;;		_CaracterQbert
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794                           	psect	text16
  2795   001744                     __ptext16:
  2796                           	callstack 0
  2797   001744                     _ComandoLCD:
  2798                           	callstack 19
  2799                           
  2800                           ;incstack = 0
  2801                           ;ComandoLCD@a stored from wreg
  2802   001744  6E1B               	movwf	ComandoLCD@a^0,c
  2803                           
  2804                           ;LibLCDXC9.h: 120: LATA4=0;
  2805   001746  9889               	bcf	3977,4,c	;volatile
  2806                           
  2807                           ;LibLCDXC9.h: 121: if(a==1)
  2808   001748  041B               	decf	ComandoLCD@a^0,w,c
  2809   00174A  A4D8               	btfss	status,2,c
  2810   00174C  D003               	goto	l1439
  2811                           
  2812                           ;LibLCDXC9.h: 122: BorraLCD();
  2813   00174E  EC64  F00C         	call	_BorraLCD	;wreg free
  2814   001752  0012               	return	
  2815   001754                     l1439:
  2816                           
  2817                           ;LibLCDXC9.h: 123: else if((a&0b11111110)==2)
  2818   001754  501B               	movf	ComandoLCD@a^0,w,c
  2819   001756  0BFE               	andlw	254
  2820   001758  0A02               	xorlw	2
  2821   00175A  A4D8               	btfss	status,2,c
  2822   00175C  D003               	goto	l1443
  2823                           
  2824                           ;LibLCDXC9.h: 124: CursorAInicio();
  2825   00175E  EC8E  F00C         	call	_CursorAInicio	;wreg free
  2826   001762  0012               	return	
  2827   001764                     l1443:
  2828                           
  2829                           ;LibLCDXC9.h: 125: else{;LibLCDXC9.h: 126: EnviaDato(a);
  2830   001764  501B               	movf	ComandoLCD@a^0,w,c
  2831   001766  ECB6  F00A         	call	_EnviaDato
  2832                           
  2833                           ;LibLCDXC9.h: 127: HabilitaLCD();
  2834   00176A  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2835                           
  2836                           ;LibLCDXC9.h: 128: RetardoLCD(4);
  2837   00176E  0E04               	movlw	4
  2838   001770  EC3B  F00A         	call	_RetardoLCD
  2839   001774  0012               	return		;funcret
  2840   001776                     __end_of_ComandoLCD:
  2841                           	callstack 0
  2842                           
  2843 ;; *************** function _CursorAInicio *****************
  2844 ;; Defined at:
  2845 ;;		line 114 in file "LibLCDXC9.h"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;		None
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;		None
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      void 
  2852 ;; Registers used:
  2853 ;;		None
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2859 ;;      Params:         0       0       0       0       0       0       0       0       0
  2860 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2861 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2862 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2863 ;;Total ram usage:        0 bytes
  2864 ;; Hardware stack levels used: 1
  2865 ;; Hardware stack levels required when called: 7
  2866 ;; This function calls:
  2867 ;;		Nothing
  2868 ;; This function is called by:
  2869 ;;		_ComandoLCD
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           	psect	text17
  2874   00191C                     __ptext17:
  2875                           	callstack 0
  2876   00191C                     _CursorAInicio:
  2877                           	callstack 21
  2878                           
  2879                           ;incstack = 0
  2880   00191C  0012               	return		;funcret
  2881   00191E                     __end_of_CursorAInicio:
  2882                           	callstack 0
  2883                           
  2884 ;; *************** function _BorraLCD *****************
  2885 ;; Defined at:
  2886 ;;		line 107 in file "LibLCDXC9.h"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;		None
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      void 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, status,0, cstack
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2900 ;;      Params:         0       0       0       0       0       0       0       0       0
  2901 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2902 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2903 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2904 ;;Total ram usage:        0 bytes
  2905 ;; Hardware stack levels used: 1
  2906 ;; Hardware stack levels required when called: 9
  2907 ;; This function calls:
  2908 ;;		_EnviaDato
  2909 ;;		_HabilitaLCD
  2910 ;;		_RetardoLCD
  2911 ;; This function is called by:
  2912 ;;		_InicializaLCD
  2913 ;;		_ComandoLCD
  2914 ;;		_main
  2915 ;;		_contador
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text18
  2920   0018C8                     __ptext18:
  2921                           	callstack 0
  2922   0018C8                     _BorraLCD:
  2923                           	callstack 20
  2924                           
  2925                           ;LibLCDXC9.h: 109: LATA4=0;
  2926                           
  2927                           ;incstack = 0
  2928   0018C8  9889               	bcf	3977,4,c	;volatile
  2929                           
  2930                           ;LibLCDXC9.h: 110: EnviaDato(0x01);
  2931   0018CA  0E01               	movlw	1
  2932   0018CC  ECB6  F00A         	call	_EnviaDato
  2933                           
  2934                           ;LibLCDXC9.h: 111: HabilitaLCD();
  2935   0018D0  EC78  F00C         	call	_HabilitaLCD	;wreg free
  2936                           
  2937                           ;LibLCDXC9.h: 112: RetardoLCD(2);
  2938   0018D4  0E02               	movlw	2
  2939   0018D6  EC3B  F00A         	call	_RetardoLCD
  2940   0018DA  0012               	return		;funcret
  2941   0018DC                     __end_of_BorraLCD:
  2942                           	callstack 0
  2943                           
  2944 ;; *************** function _EnviaDato *****************
  2945 ;; Defined at:
  2946 ;;		line 54 in file "LibLCDXC9.h"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;  a               1    wreg     unsigned char 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;  a               1   25[COMRAM] unsigned char 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0, cstack
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2960 ;;      Params:         0       0       0       0       0       0       0       0       0
  2961 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2962 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2963 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2964 ;;Total ram usage:        2 bytes
  2965 ;; Hardware stack levels used: 1
  2966 ;; Hardware stack levels required when called: 8
  2967 ;; This function calls:
  2968 ;;		_HabilitaLCD
  2969 ;;		_RetardoLCD
  2970 ;; This function is called by:
  2971 ;;		_InicializaLCD
  2972 ;;		_BorraLCD
  2973 ;;		_ComandoLCD
  2974 ;;		_EscribeLCD_c
  2975 ;;		_EscribeLCD_n8
  2976 ;;		_DireccionaLCD
  2977 ;;		_CaracterCara
  2978 ;;		_CaracterQbert
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           	psect	text19
  2983   00156C                     __ptext19:
  2984                           	callstack 0
  2985   00156C                     _EnviaDato:
  2986                           	callstack 19
  2987                           
  2988                           ;incstack = 0
  2989                           ;EnviaDato@a stored from wreg
  2990   00156C  6E1A               	movwf	EnviaDato@a^0,c
  2991                           
  2992                           ;LibLCDXC9.h: 55: if(interfaz==4){
  2993   00156E  0E04               	movlw	4
  2994   001570  1844               	xorwf	_interfaz^0,w,c
  2995   001572  A4D8               	btfss	status,2,c
  2996   001574  D017               	goto	l1147
  2997                           
  2998                           ;LibLCDXC9.h: 56: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  2999   001576  C01A  F019         	movff	EnviaDato@a,??_EnviaDato
  3000   00157A  0EF0               	movlw	240
  3001   00157C  1619               	andwf	??_EnviaDato^0,f,c
  3002   00157E  508C               	movf	140,w,c	;volatile
  3003   001580  0B0F               	andlw	15
  3004   001582  1019               	iorwf	??_EnviaDato^0,w,c
  3005   001584  6E8C               	movwf	140,c	;volatile
  3006                           
  3007                           ;LibLCDXC9.h: 57: HabilitaLCD();
  3008   001586  EC78  F00C         	call	_HabilitaLCD	;wreg free
  3009                           
  3010                           ;LibLCDXC9.h: 58: RetardoLCD(1);
  3011   00158A  0E01               	movlw	1
  3012   00158C  EC3B  F00A         	call	_RetardoLCD
  3013                           
  3014                           ;LibLCDXC9.h: 59: LATD=(LATD & 0b00001111) | (a<<4);
  3015   001590  C01A  F019         	movff	EnviaDato@a,??_EnviaDato
  3016   001594  3A19               	swapf	??_EnviaDato^0,f,c
  3017   001596  0EF0               	movlw	240
  3018   001598  1619               	andwf	??_EnviaDato^0,f,c
  3019   00159A  508C               	movf	140,w,c	;volatile
  3020   00159C  0B0F               	andlw	15
  3021   00159E  1019               	iorwf	??_EnviaDato^0,w,c
  3022   0015A0  6E8C               	movwf	140,c	;volatile
  3023                           
  3024                           ;LibLCDXC9.h: 62: }else if(interfaz==8){
  3025   0015A2  0012               	return	
  3026   0015A4                     l1147:
  3027   0015A4  0E08               	movlw	8
  3028   0015A6  1844               	xorwf	_interfaz^0,w,c
  3029   0015A8  A4D8               	btfss	status,2,c
  3030   0015AA  0012               	return	
  3031                           
  3032                           ;LibLCDXC9.h: 63: LATD=a;
  3033   0015AC  C01A  FF8C         	movff	EnviaDato@a,3980	;volatile
  3034   0015B0  0012               	return		;funcret
  3035   0015B2                     __end_of_EnviaDato:
  3036                           	callstack 0
  3037                           
  3038 ;; *************** function _RetardoLCD *****************
  3039 ;; Defined at:
  3040 ;;		line 287 in file "LibLCDXC9.h"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  a               1    wreg     unsigned char 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  a               1   23[COMRAM] unsigned char 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      void 
  3047 ;; Registers used:
  3048 ;;		wreg, status,2, status,0
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3054 ;;      Params:         0       0       0       0       0       0       0       0       0
  3055 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3056 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3057 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3058 ;;Total ram usage:        2 bytes
  3059 ;; Hardware stack levels used: 1
  3060 ;; Hardware stack levels required when called: 7
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_EnviaDato
  3065 ;;		_InicializaLCD
  3066 ;;		_BorraLCD
  3067 ;;		_ComandoLCD
  3068 ;;		_EscribeLCD_c
  3069 ;;		_EscribeLCD_n8
  3070 ;;		_DireccionaLCD
  3071 ;;		_CaracterCara
  3072 ;;		_CaracterQbert
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           	psect	text20
  3077   001476                     __ptext20:
  3078                           	callstack 0
  3079   001476                     _RetardoLCD:
  3080                           	callstack 20
  3081                           
  3082                           ;incstack = 0
  3083                           ;RetardoLCD@a stored from wreg
  3084   001476  6E18               	movwf	RetardoLCD@a^0,c
  3085                           
  3086                           ;LibLCDXC9.h: 288: switch(a){
  3087   001478  D01B               	goto	l1121
  3088   00147A                     l1111:
  3089   00147A  0E05               	movlw	5
  3090   00147C  6E17               	movwf	??_RetardoLCD^0,c
  3091   00147E  0EDE               	movlw	222
  3092   001480                     u1927:
  3093   001480  2EE8               	decfsz	wreg,f,c
  3094   001482  D7FE               	bra	u1927
  3095   001484  2E17               	decfsz	??_RetardoLCD^0,f,c
  3096   001486  D7FC               	bra	u1927
  3097                           
  3098                           ;LibLCDXC9.h: 291: break;
  3099   001488  0012               	return	
  3100   00148A                     l1113:
  3101   00148A  0E53               	movlw	83
  3102   00148C                     u1937:
  3103   00148C  2EE8               	decfsz	wreg,f,c
  3104   00148E  D7FE               	bra	u1937
  3105   001490  0000               	nop	
  3106                           
  3107                           ;LibLCDXC9.h: 293: _delay((unsigned long)((640)*(1000000/4000000.0)));
  3108   001492  0E35               	movlw	53
  3109   001494                     u1947:
  3110   001494  2EE8               	decfsz	wreg,f,c
  3111   001496  D7FE               	bra	u1947
  3112   001498  0000               	nop	
  3113                           
  3114                           ;LibLCDXC9.h: 295: break;
  3115   00149A  0012               	return	
  3116   00149C                     l1115:
  3117   00149C  0E08               	movlw	8
  3118   00149E                     u1957:
  3119   00149E  2EE8               	decfsz	wreg,f,c
  3120   0014A0  D7FE               	bra	u1957
  3121   0014A2  0000               	nop	
  3122                           
  3123                           ;LibLCDXC9.h: 298: break;
  3124   0014A4  0012               	return	
  3125   0014A6                     l1117:
  3126   0014A6  0E03               	movlw	3
  3127   0014A8                     u1967:
  3128   0014A8  2EE8               	decfsz	wreg,f,c
  3129   0014AA  D7FE               	bra	u1967
  3130   0014AC  0000               	nop	
  3131                           
  3132                           ;LibLCDXC9.h: 301: break;
  3133   0014AE  0012               	return	
  3134   0014B0                     l1121:
  3135   0014B0  5018               	movf	RetardoLCD@a^0,w,c
  3136                           
  3137                           ; Switch size 1, requested type "simple"
  3138                           ; Number of cases is 4, Range of values is 1 to 4
  3139                           ; switch strategies available:
  3140                           ; Name         Instructions Cycles
  3141                           ; simple_byte           13     7 (average)
  3142                           ;	Chosen strategy is simple_byte
  3143   0014B2  0A01               	xorlw	1	; case 1
  3144   0014B4  B4D8               	btfsc	status,2,c
  3145   0014B6  D7E1               	goto	l1111
  3146   0014B8  0A03               	xorlw	3	; case 2
  3147   0014BA  B4D8               	btfsc	status,2,c
  3148   0014BC  D7E6               	goto	l1113
  3149   0014BE  0A01               	xorlw	1	; case 3
  3150   0014C0  B4D8               	btfsc	status,2,c
  3151   0014C2  D7EC               	goto	l1115
  3152   0014C4  0A07               	xorlw	7	; case 4
  3153   0014C6  A4D8               	btfss	status,2,c
  3154   0014C8  0012               	return	
  3155   0014CA  D7ED               	goto	l1117
  3156   0014CC                     __end_of_RetardoLCD:
  3157                           	callstack 0
  3158                           
  3159 ;; *************** function _HabilitaLCD *****************
  3160 ;; Defined at:
  3161 ;;		line 100 in file "LibLCDXC9.h"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;		None
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;		None
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  1    wreg      void 
  3168 ;; Registers used:
  3169 ;;		wreg
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3175 ;;      Params:         0       0       0       0       0       0       0       0       0
  3176 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3177 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3178 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3179 ;;Total ram usage:        0 bytes
  3180 ;; Hardware stack levels used: 1
  3181 ;; Hardware stack levels required when called: 7
  3182 ;; This function calls:
  3183 ;;		Nothing
  3184 ;; This function is called by:
  3185 ;;		_EnviaDato
  3186 ;;		_InicializaLCD
  3187 ;;		_BorraLCD
  3188 ;;		_ComandoLCD
  3189 ;;		_EscribeLCD_c
  3190 ;;		_EscribeLCD_n8
  3191 ;;		_DireccionaLCD
  3192 ;;		_CaracterCara
  3193 ;;		_CaracterQbert
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text21
  3198   0018F0                     __ptext21:
  3199                           	callstack 0
  3200   0018F0                     _HabilitaLCD:
  3201                           	callstack 20
  3202                           
  3203                           ;LibLCDXC9.h: 102: LATA5=1;
  3204                           
  3205                           ;incstack = 0
  3206   0018F0  8A89               	bsf	3977,5,c	;volatile
  3207                           
  3208                           ;LibLCDXC9.h: 103: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3209   0018F2  0E03               	movlw	3
  3210   0018F4                     u1977:
  3211   0018F4  2EE8               	decfsz	wreg,f,c
  3212   0018F6  D7FE               	bra	u1977
  3213   0018F8  0000               	nop	
  3214                           
  3215                           ;LibLCDXC9.h: 105: LATA5=0;
  3216   0018FA  9A89               	bcf	3977,5,c	;volatile
  3217   0018FC  0012               	return		;funcret
  3218   0018FE                     __end_of_HabilitaLCD:
  3219                           	callstack 0
  3220                           
  3221 ;; *************** function _ISR *****************
  3222 ;; Defined at:
  3223 ;;		line 294 in file "PruebaLCD.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;		None
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;		None
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  1    wreg      void 
  3230 ;; Registers used:
  3231 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3237 ;;      Params:         0       0       0       0       0       0       0       0       0
  3238 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3239 ;;      Temps:          7       0       0       0       0       0       0       0       0
  3240 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3241 ;;Total ram usage:        7 bytes
  3242 ;; Hardware stack levels used: 1
  3243 ;; Hardware stack levels required when called: 6
  3244 ;; This function calls:
  3245 ;;		_borrarTexto
  3246 ;;		_escribirDig
  3247 ;;		_fin
  3248 ;;		_luzFondo
  3249 ;;		_ok
  3250 ;;		_parEmerg
  3251 ;;		_reiCon
  3252 ;; This function is called by:
  3253 ;;		Interrupt level 2
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           	psect	intcode
  3258   000008                     __pintcode:
  3259                           	callstack 0
  3260   000008                     _ISR:
  3261                           	callstack 19
  3262                           
  3263                           ;incstack = 0
  3264   000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3265   00000A  ED34  F004         	call	int_func,f	;refresh shadow registers
  3266                           
  3267                           	psect	intcode_body
  3268   000868                     __pintcode_body:
  3269                           	callstack 19
  3270   000868                     int_func:
  3271                           	callstack 19
  3272   000868  0006               	pop		; remove dummy address from shadow register refresh
  3273   00086A  CFF3 F011          	movff	prodl,??_ISR+1
  3274   00086E  CFF4 F012          	movff	prodh,??_ISR+2
  3275   000872  CFF6 F013          	movff	tblptrl,??_ISR+3
  3276   000876  CFF7 F014          	movff	tblptrh,??_ISR+4
  3277   00087A  CFF8 F015          	movff	tblptru,??_ISR+5
  3278   00087E  CFF5 F016          	movff	tablat,??_ISR+6
  3279                           
  3280                           ;PruebaLCD.c: 295: if(flagEmergencia==0){
  3281   000882  5038               	movf	_flagEmergencia^0,w,c
  3282   000884  1039               	iorwf	(_flagEmergencia+1)^0,w,c
  3283   000886  A4D8               	btfss	status,2,c
  3284   000888  D09F               	goto	i2u180_45
  3285                           
  3286                           ;PruebaLCD.c: 296: if(RBIF==1){
  3287   00088A  A0F2               	btfss	4082,0,c	;volatile
  3288   00088C  D091               	goto	i2l3003
  3289                           
  3290                           ;PruebaLCD.c: 297: if(PORTB!=0b11110000){
  3291   00088E  0EF0               	movlw	240
  3292   000890  1881               	xorwf	129,w,c	;volatile
  3293   000892  B4D8               	btfsc	status,2,c
  3294   000894  D082               	goto	i2l328
  3295                           
  3296                           ;PruebaLCD.c: 298: Tecla=0;
  3297   000896  6A41               	clrf	_Tecla^0,c
  3298                           
  3299                           ;PruebaLCD.c: 299: LATB=0b11111110;
  3300   000898  0EFE               	movlw	254
  3301   00089A  6E8A               	movwf	138,c	;volatile
  3302                           
  3303                           ;PruebaLCD.c: 300: if(RB4==0){Tecla=1;escribirDig(1);}
  3304   00089C  B881               	btfsc	3969,4,c	;volatile
  3305   00089E  D006               	goto	i2l303
  3306   0008A0  0E01               	movlw	1
  3307   0008A2  6E41               	movwf	_Tecla^0,c
  3308   0008A4  0E01               	movlw	1
  3309   0008A6  EC91  F00A         	call	_escribirDig
  3310   0008AA  D077               	goto	i2l328
  3311   0008AC                     i2l303:
  3312                           
  3313                           ;PruebaLCD.c: 301: else if(RB5==0){Tecla=2;escribirDig(2);}
  3314   0008AC  BA81               	btfsc	3969,5,c	;volatile
  3315   0008AE  D006               	goto	i2l305
  3316   0008B0  0E02               	movlw	2
  3317   0008B2  6E41               	movwf	_Tecla^0,c
  3318   0008B4  0E02               	movlw	2
  3319   0008B6  EC91  F00A         	call	_escribirDig
  3320   0008BA  D06F               	goto	i2l328
  3321   0008BC                     i2l305:
  3322                           
  3323                           ;PruebaLCD.c: 302: else if(RB6==0){Tecla=3;escribirDig(3);}
  3324   0008BC  BC81               	btfsc	3969,6,c	;volatile
  3325   0008BE  D006               	goto	i2l307
  3326   0008C0  0E03               	movlw	3
  3327   0008C2  6E41               	movwf	_Tecla^0,c
  3328   0008C4  0E03               	movlw	3
  3329   0008C6  EC91  F00A         	call	_escribirDig
  3330   0008CA  D067               	goto	i2l328
  3331   0008CC                     i2l307:
  3332                           
  3333                           ;PruebaLCD.c: 303: else if(RB7==0){Tecla=4;ok();}
  3334   0008CC  BE81               	btfsc	3969,7,c	;volatile
  3335   0008CE  D005               	goto	i2l2937
  3336   0008D0  0E04               	movlw	4
  3337   0008D2  6E41               	movwf	_Tecla^0,c
  3338   0008D4  EC9F  F005         	call	_ok	;wreg free
  3339   0008D8  D060               	goto	i2l328
  3340   0008DA                     i2l2937:
  3341                           
  3342                           ;PruebaLCD.c: 304: else{;PruebaLCD.c: 305: LATB=0b11111101;
  3343   0008DA  0EFD               	movlw	253
  3344   0008DC  6E8A               	movwf	138,c	;volatile
  3345                           
  3346                           ;PruebaLCD.c: 306: if(RB4==0) {Tecla=5;escribirDig(4);}
  3347   0008DE  B881               	btfsc	3969,4,c	;volatile
  3348   0008E0  D006               	goto	i2l311
  3349   0008E2  0E05               	movlw	5
  3350   0008E4  6E41               	movwf	_Tecla^0,c
  3351   0008E6  0E04               	movlw	4
  3352   0008E8  EC91  F00A         	call	_escribirDig
  3353   0008EC  D056               	goto	i2l328
  3354   0008EE                     i2l311:
  3355                           
  3356                           ;PruebaLCD.c: 307: else if(RB5==0) {Tecla=6;escribirDig(5);}
  3357   0008EE  BA81               	btfsc	3969,5,c	;volatile
  3358   0008F0  D006               	goto	i2l313
  3359   0008F2  0E06               	movlw	6
  3360   0008F4  6E41               	movwf	_Tecla^0,c
  3361   0008F6  0E05               	movlw	5
  3362   0008F8  EC91  F00A         	call	_escribirDig
  3363   0008FC  D04E               	goto	i2l328
  3364   0008FE                     i2l313:
  3365                           
  3366                           ;PruebaLCD.c: 308: else if(RB6==0) {Tecla=7;escribirDig(6);}
  3367   0008FE  BC81               	btfsc	3969,6,c	;volatile
  3368   000900  D006               	goto	i2l315
  3369   000902  0E07               	movlw	7
  3370   000904  6E41               	movwf	_Tecla^0,c
  3371   000906  0E06               	movlw	6
  3372   000908  EC91  F00A         	call	_escribirDig
  3373   00090C  D046               	goto	i2l328
  3374   00090E                     i2l315:
  3375                           
  3376                           ;PruebaLCD.c: 309: else if(RB7==0) {Tecla=8; parEmerg();}
  3377   00090E  BE81               	btfsc	3969,7,c	;volatile
  3378   000910  D005               	goto	i2l2957
  3379   000912  0E08               	movlw	8
  3380   000914  6E41               	movwf	_Tecla^0,c
  3381   000916  EC1E  F00C         	call	_parEmerg	;wreg free
  3382   00091A  D03F               	goto	i2l328
  3383   00091C                     i2l2957:
  3384                           
  3385                           ;PruebaLCD.c: 310: else{;PruebaLCD.c: 311: LATB=0b11111011;
  3386   00091C  0EFB               	movlw	251
  3387   00091E  6E8A               	movwf	138,c	;volatile
  3388                           
  3389                           ;PruebaLCD.c: 312: if(RB4==0){Tecla=9;escribirDig(7);}
  3390   000920  B881               	btfsc	3969,4,c	;volatile
  3391   000922  D006               	goto	i2l319
  3392   000924  0E09               	movlw	9
  3393   000926  6E41               	movwf	_Tecla^0,c
  3394   000928  0E07               	movlw	7
  3395   00092A  EC91  F00A         	call	_escribirDig
  3396   00092E  D035               	goto	i2l328
  3397   000930                     i2l319:
  3398                           
  3399                           ;PruebaLCD.c: 313: else if(RB5==0) {Tecla=10;escribirDig(8);}
  3400   000930  BA81               	btfsc	3969,5,c	;volatile
  3401   000932  D006               	goto	i2l321
  3402   000934  0E0A               	movlw	10
  3403   000936  6E41               	movwf	_Tecla^0,c
  3404   000938  0E08               	movlw	8
  3405   00093A  EC91  F00A         	call	_escribirDig
  3406   00093E  D02D               	goto	i2l328
  3407   000940                     i2l321:
  3408                           
  3409                           ;PruebaLCD.c: 314: else if(RB6==0) {Tecla=11;escribirDig(9);}
  3410   000940  BC81               	btfsc	3969,6,c	;volatile
  3411   000942  D006               	goto	i2l323
  3412   000944  0E0B               	movlw	11
  3413   000946  6E41               	movwf	_Tecla^0,c
  3414   000948  0E09               	movlw	9
  3415   00094A  EC91  F00A         	call	_escribirDig
  3416   00094E  D025               	goto	i2l328
  3417   000950                     i2l323:
  3418                           
  3419                           ;PruebaLCD.c: 315: else if(RB7==0) {Tecla=3;borrarTexto();}
  3420   000950  BE81               	btfsc	3969,7,c	;volatile
  3421   000952  D005               	goto	i2l2977
  3422   000954  0E03               	movlw	3
  3423   000956  6E41               	movwf	_Tecla^0,c
  3424   000958  EC6E  F00B         	call	_borrarTexto	;wreg free
  3425   00095C  D01E               	goto	i2l328
  3426   00095E                     i2l2977:
  3427                           
  3428                           ;PruebaLCD.c: 316: else{;PruebaLCD.c: 317: LATB=0b11110111;
  3429   00095E  0EF7               	movlw	247
  3430   000960  6E8A               	movwf	138,c	;volatile
  3431                           
  3432                           ;PruebaLCD.c: 318: if(RB4==0) {Tecla=13;reiCon();}
  3433   000962  B881               	btfsc	3969,4,c	;volatile
  3434   000964  D005               	goto	i2l327
  3435   000966  0E0D               	movlw	13
  3436   000968  6E41               	movwf	_Tecla^0,c
  3437   00096A  EC0F  F00A         	call	_reiCon	;wreg free
  3438   00096E  D015               	goto	i2l328
  3439   000970                     i2l327:
  3440                           
  3441                           ;PruebaLCD.c: 319: else if(RB5==0){Tecla=14;escribirDig(0);}
  3442   000970  BA81               	btfsc	3969,5,c	;volatile
  3443   000972  D006               	goto	i2l329
  3444   000974  0E0E               	movlw	14
  3445   000976  6E41               	movwf	_Tecla^0,c
  3446   000978  0E00               	movlw	0
  3447   00097A  EC91  F00A         	call	_escribirDig
  3448   00097E  D00D               	goto	i2l328
  3449   000980                     i2l329:
  3450                           
  3451                           ;PruebaLCD.c: 320: else if(RB6==0) {Tecla=15;fin();}
  3452   000980  BC81               	btfsc	3969,6,c	;volatile
  3453   000982  D005               	goto	i2l331
  3454   000984  0E0F               	movlw	15
  3455   000986  6E41               	movwf	_Tecla^0,c
  3456   000988  ECFC  F00A         	call	_fin	;wreg free
  3457   00098C  D006               	goto	i2l328
  3458   00098E                     i2l331:
  3459                           
  3460                           ;PruebaLCD.c: 321: else if(RB7==0) {Tecla=16;luzFondo();}
  3461   00098E  BE81               	btfsc	3969,7,c	;volatile
  3462   000990  D004               	goto	i2l328
  3463   000992  0E10               	movlw	16
  3464   000994  6E41               	movwf	_Tecla^0,c
  3465   000996  EC88  F00B         	call	_luzFondo	;wreg free
  3466   00099A                     i2l328:
  3467                           
  3468                           ;PruebaLCD.c: 322: };PruebaLCD.c: 323: };PruebaLCD.c: 324: };PruebaLCD.c: 325: };PruebaL
      +                          CD.c: 327: LATB=0b11110000;
  3469   00099A  0EF0               	movlw	240
  3470   00099C  6E8A               	movwf	138,c	;volatile
  3471                           
  3472                           ;PruebaLCD.c: 328: _delay((unsigned long)((50)*(1000000/4000.0)));
  3473   00099E  0E11               	movlw	17
  3474   0009A0  6E10               	movwf	??_ISR^0,c
  3475   0009A2  0E3A               	movlw	58
  3476   0009A4                     i2u198_47:
  3477   0009A4  2EE8               	decfsz	wreg,f,c
  3478   0009A6  D7FE               	bra	i2u198_47
  3479   0009A8  2E10               	decfsz	??_ISR^0,f,c
  3480   0009AA  D7FC               	bra	i2u198_47
  3481   0009AC  D000               	nop2	
  3482                           
  3483                           ;PruebaLCD.c: 329: RBIF=0;
  3484   0009AE  90F2               	bcf	4082,0,c	;volatile
  3485   0009B0                     i2l3003:
  3486                           
  3487                           ;PruebaLCD.c: 330: };PruebaLCD.c: 331: if(TMR0IF==1){
  3488   0009B0  A4F2               	btfss	4082,2,c	;volatile
  3489   0009B2  D00A               	goto	i2u180_45
  3490                           
  3491                           ;PruebaLCD.c: 332: TMR0IF=0;
  3492   0009B4  94F2               	bcf	4082,2,c	;volatile
  3493                           
  3494                           ;PruebaLCD.c: 333: TMR0=3036;
  3495   0009B6  0E0B               	movlw	11
  3496   0009B8  6ED7               	movwf	215,c	;volatile
  3497   0009BA  0EDC               	movlw	220
  3498   0009BC  6ED6               	movwf	214,c	;volatile
  3499                           
  3500                           ;PruebaLCD.c: 334: LATD1=LATD1;
  3501   0009BE  A28C               	btfss	3980,1,c	;volatile
  3502   0009C0  D002               	goto	i2u179_40
  3503   0009C2  828C               	bsf	3980,1,c	;volatile
  3504   0009C4  D001               	goto	i2u180_45
  3505   0009C6                     i2u179_40:
  3506   0009C6  928C               	bcf	3980,1,c	;volatile
  3507   0009C8                     i2u180_45:
  3508   0009C8  C016  FFF5         	movff	??_ISR+6,tablat
  3509   0009CC  C015  FFF8         	movff	??_ISR+5,tblptru
  3510   0009D0  C014  FFF7         	movff	??_ISR+4,tblptrh
  3511   0009D4  C013  FFF6         	movff	??_ISR+3,tblptrl
  3512   0009D8  C012  FFF4         	movff	??_ISR+2,prodh
  3513   0009DC  C011  FFF3         	movff	??_ISR+1,prodl
  3514   0009E0  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3515   0009E2  0011               	retfie		f
  3516   0009E4                     __end_of_ISR:
  3517                           	callstack 0
  3518                           
  3519 ;; *************** function _reiCon *****************
  3520 ;; Defined at:
  3521 ;;		line 267 in file "PruebaLCD.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;		None
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;		None
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  1    wreg      void 
  3528 ;; Registers used:
  3529 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3535 ;;      Params:         0       0       0       0       0       0       0       0       0
  3536 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3537 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3538 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3539 ;;Total ram usage:        0 bytes
  3540 ;; Hardware stack levels used: 1
  3541 ;; Hardware stack levels required when called: 4
  3542 ;; This function calls:
  3543 ;;		i2_BorraLCD
  3544 ;;		i2_DireccionaLCD
  3545 ;;		i2_EscribeLCD_n8
  3546 ;;		i2_MensajeLCD_Var
  3547 ;;		i2_RGB
  3548 ;;		i2_SEG
  3549 ;; This function is called by:
  3550 ;;		_ISR
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           	psect	text23
  3555   00141E                     __ptext23:
  3556                           	callstack 0
  3557   00141E                     _reiCon:
  3558                           	callstack 20
  3559                           
  3560                           ;PruebaLCD.c: 268: piezFalt=cuenObj;
  3561                           
  3562                           ;incstack = 0
  3563   00141E  C028  F026         	movff	_cuenObj,_piezFalt
  3564   001422  C029  F027         	movff	_cuenObj+1,_piezFalt+1
  3565                           
  3566                           ;PruebaLCD.c: 269: cuenta=0;
  3567   001426  0E00               	movlw	0
  3568   001428  6E33               	movwf	(_cuenta+1)^0,c
  3569   00142A  0E00               	movlw	0
  3570   00142C  6E32               	movwf	_cuenta^0,c
  3571                           
  3572                           ;PruebaLCD.c: 270: a=0;
  3573   00142E  0E00               	movlw	0
  3574   001430  6E2D               	movwf	(_a+1)^0,c
  3575   001432  0E00               	movlw	0
  3576   001434  6E2C               	movwf	_a^0,c
  3577                           
  3578                           ;PruebaLCD.c: 271: b=0;
  3579   001436  0E00               	movlw	0
  3580   001438  6E2B               	movwf	(_b+1)^0,c
  3581   00143A  0E00               	movlw	0
  3582   00143C  6E2A               	movwf	_b^0,c
  3583                           
  3584                           ;PruebaLCD.c: 272: RGB();
  3585   00143E  ECF3  F008         	call	i2_RGB	;wreg free
  3586                           
  3587                           ;PruebaLCD.c: 273: SEG();
  3588   001442  EC89  F00C         	call	i2_SEG	;wreg free
  3589                           
  3590                           ;PruebaLCD.c: 275: BorraLCD();
  3591   001446  EC6E  F00C         	call	i2_BorraLCD	;wreg free
  3592                           
  3593                           ;PruebaLCD.c: 276: MensajeLCD_Var("Faltan: ");
  3594   00144A  0E5E               	movlw	low STR_3
  3595   00144C  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  3596   00144E  ECF7  F00B         	call	i2_MensajeLCD_Var	;wreg free
  3597                           
  3598                           ;PruebaLCD.c: 277: EscribeLCD_n8(piezFalt,2);
  3599   001452  0E02               	movlw	2
  3600   001454  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3601   001456  5026               	movf	_piezFalt^0,w,c
  3602   001458  ECA8  F006         	call	i2_EscribeLCD_n8
  3603                           
  3604                           ;PruebaLCD.c: 278: DireccionaLCD(0xC0);
  3605   00145C  0EC0               	movlw	192
  3606   00145E  EC4E  F00C         	call	i2_DireccionaLCD
  3607                           
  3608                           ;PruebaLCD.c: 279: MensajeLCD_Var("Objetivo: ");
  3609   001462  0E48               	movlw	low STR_4
  3610   001464  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  3611   001466  ECF7  F00B         	call	i2_MensajeLCD_Var	;wreg free
  3612                           
  3613                           ;PruebaLCD.c: 280: EscribeLCD_n8(cuenObj,2);
  3614   00146A  0E02               	movlw	2
  3615   00146C  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3616   00146E  5028               	movf	_cuenObj^0,w,c
  3617   001470  ECA8  F006         	call	i2_EscribeLCD_n8
  3618   001474  0012               	return		;funcret
  3619   001476                     __end_of_reiCon:
  3620                           	callstack 0
  3621                           
  3622 ;; *************** function _parEmerg *****************
  3623 ;; Defined at:
  3624 ;;		line 258 in file "PruebaLCD.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;		None
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;		None
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  1    wreg      void 
  3631 ;; Registers used:
  3632 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3638 ;;      Params:         0       0       0       0       0       0       0       0       0
  3639 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3640 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3641 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3642 ;;Total ram usage:        0 bytes
  3643 ;; Hardware stack levels used: 1
  3644 ;; Hardware stack levels required when called: 4
  3645 ;; This function calls:
  3646 ;;		i2_BorraLCD
  3647 ;;		i2_MensajeLCD_Var
  3648 ;; This function is called by:
  3649 ;;		_ISR
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           	psect	text24
  3654   00183C                     __ptext24:
  3655                           	callstack 0
  3656   00183C                     _parEmerg:
  3657                           	callstack 20
  3658                           
  3659                           ;PruebaLCD.c: 259: LATE0 = 1;
  3660                           
  3661                           ;incstack = 0
  3662   00183C  808D               	bsf	3981,0,c	;volatile
  3663                           
  3664                           ;PruebaLCD.c: 260: LATE1 = 0;
  3665   00183E  928D               	bcf	3981,1,c	;volatile
  3666                           
  3667                           ;PruebaLCD.c: 261: LATE2 = 0;
  3668   001840  948D               	bcf	3981,2,c	;volatile
  3669                           
  3670                           ;PruebaLCD.c: 262: flagEmergencia = 1;
  3671   001842  0E00               	movlw	0
  3672   001844  6E39               	movwf	(_flagEmergencia+1)^0,c
  3673   001846  0E01               	movlw	1
  3674   001848  6E38               	movwf	_flagEmergencia^0,c
  3675                           
  3676                           ;PruebaLCD.c: 263: BorraLCD();
  3677   00184A  EC6E  F00C         	call	i2_BorraLCD	;wreg free
  3678                           
  3679                           ;PruebaLCD.c: 264: MensajeLCD_Var("Emergencia");
  3680   00184E  0E53               	movlw	low STR_12
  3681   001850  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  3682   001852  ECF7  F00B         	call	i2_MensajeLCD_Var	;wreg free
  3683   001856  0012               	return		;funcret
  3684   001858                     __end_of_parEmerg:
  3685                           	callstack 0
  3686                           
  3687 ;; *************** function _ok *****************
  3688 ;; Defined at:
  3689 ;;		line 130 in file "PruebaLCD.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;		None
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;		None
  3694 ;; Return value:  Size  Location     Type
  3695 ;;                  1    wreg      void 
  3696 ;; Registers used:
  3697 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3703 ;;      Params:         0       0       0       0       0       0       0       0       0
  3704 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3705 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3706 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3707 ;;Total ram usage:        2 bytes
  3708 ;; Hardware stack levels used: 1
  3709 ;; Hardware stack levels required when called: 5
  3710 ;; This function calls:
  3711 ;;		_borrarTexto
  3712 ;;		i2_BorraLCD
  3713 ;;		i2_DireccionaLCD
  3714 ;;		i2_EscribeLCD_n8
  3715 ;;		i2_MensajeLCD_Var
  3716 ;;		i2_RGB
  3717 ;;		i2_SEG
  3718 ;;		i2_contador
  3719 ;; This function is called by:
  3720 ;;		_ISR
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           	psect	text25
  3725   000B3E                     __ptext25:
  3726                           	callstack 0
  3727   000B3E                     _ok:
  3728                           	callstack 19
  3729                           
  3730                           ;PruebaLCD.c: 131: if(flagEscribir == 1 && flagFin==0){
  3731                           
  3732                           ;incstack = 0
  3733   000B3E  043E               	decf	_flagEscribir^0,w,c
  3734   000B40  103F               	iorwf	(_flagEscribir+1)^0,w,c
  3735   000B42  A4D8               	btfss	status,2,c
  3736   000B44  D062               	goto	i2l2737
  3737   000B46  5036               	movf	_flagFin^0,w,c
  3738   000B48  1037               	iorwf	(_flagFin+1)^0,w,c
  3739   000B4A  A4D8               	btfss	status,2,c
  3740   000B4C  D05E               	goto	i2l2737
  3741                           
  3742                           ;PruebaLCD.c: 132: cuenObj=(d*10)+u;
  3743   000B4E  0E0A               	movlw	10
  3744   000B50  022E               	mulwf	_d^0,c
  3745   000B52  CFF3 F00E          	movff	prodl,??_ok
  3746   000B56  CFF4 F00F          	movff	prodh,??_ok+1
  3747   000B5A  022F               	mulwf	(_d+1)^0,c
  3748   000B5C  50F3               	movf	prodl,w,c
  3749   000B5E  260F               	addwf	(??_ok+1)^0,f,c
  3750   000B60  5030               	movf	_u^0,w,c
  3751   000B62  240E               	addwf	??_ok^0,w,c
  3752   000B64  6E28               	movwf	_cuenObj^0,c
  3753   000B66  5031               	movf	(_u+1)^0,w,c
  3754   000B68  200F               	addwfc	(??_ok+1)^0,w,c
  3755   000B6A  6E29               	movwf	(_cuenObj+1)^0,c
  3756                           
  3757                           ;PruebaLCD.c: 134: if(cuenObj<60 && cuenObj>0){
  3758   000B6C  BE29               	btfsc	(_cuenObj+1)^0,7,c
  3759   000B6E  D006               	goto	i2u155_40
  3760   000B70  5029               	movf	(_cuenObj+1)^0,w,c
  3761   000B72  E133               	bnz	i2l2727
  3762   000B74  0E3C               	movlw	60
  3763   000B76  5C28               	subwf	_cuenObj^0,w,c
  3764   000B78  B0D8               	btfsc	status,0,c
  3765   000B7A  D02F               	goto	i2l2727
  3766   000B7C                     i2u155_40:
  3767   000B7C  BE29               	btfsc	(_cuenObj+1)^0,7,c
  3768   000B7E  D02D               	goto	i2l2727
  3769   000B80  5029               	movf	(_cuenObj+1)^0,w,c
  3770   000B82  E103               	bnz	i2u156_40
  3771   000B84  0428               	decf	_cuenObj^0,w,c
  3772   000B86  A0D8               	btfss	status,0,c
  3773   000B88  D028               	goto	i2l2727
  3774   000B8A                     i2u156_40:
  3775                           
  3776                           ;PruebaLCD.c: 135: flagCont=1;
  3777   000B8A  0E00               	movlw	0
  3778   000B8C  6E35               	movwf	(_flagCont+1)^0,c
  3779   000B8E  0E01               	movlw	1
  3780   000B90  6E34               	movwf	_flagCont^0,c
  3781                           
  3782                           ;PruebaLCD.c: 136: piezFalt = cuenObj;
  3783   000B92  C028  F026         	movff	_cuenObj,_piezFalt
  3784   000B96  C029  F027         	movff	_cuenObj+1,_piezFalt+1
  3785                           
  3786                           ;PruebaLCD.c: 137: flagEscribir=0;
  3787   000B9A  0E00               	movlw	0
  3788   000B9C  6E3F               	movwf	(_flagEscribir+1)^0,c
  3789   000B9E  0E00               	movlw	0
  3790   000BA0  6E3E               	movwf	_flagEscribir^0,c
  3791                           
  3792                           ;PruebaLCD.c: 138: BorraLCD();
  3793   000BA2  EC6E  F00C         	call	i2_BorraLCD	;wreg free
  3794                           
  3795                           ;PruebaLCD.c: 140: MensajeLCD_Var("Faltan: ");
  3796   000BA6  0E5E               	movlw	low STR_3
  3797   000BA8  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  3798   000BAA  ECF7  F00B         	call	i2_MensajeLCD_Var	;wreg free
  3799                           
  3800                           ;PruebaLCD.c: 141: EscribeLCD_n8(piezFalt,2);
  3801   000BAE  0E02               	movlw	2
  3802   000BB0  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3803   000BB2  5026               	movf	_piezFalt^0,w,c
  3804   000BB4  ECA8  F006         	call	i2_EscribeLCD_n8
  3805                           
  3806                           ;PruebaLCD.c: 142: DireccionaLCD(0xC0);
  3807   000BB8  0EC0               	movlw	192
  3808   000BBA  EC4E  F00C         	call	i2_DireccionaLCD
  3809                           
  3810                           ;PruebaLCD.c: 143: MensajeLCD_Var("Objetivo: ");
  3811   000BBE  0E48               	movlw	low STR_4
  3812   000BC0  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  3813   000BC2  ECF7  F00B         	call	i2_MensajeLCD_Var	;wreg free
  3814                           
  3815                           ;PruebaLCD.c: 144: EscribeLCD_n8(cuenObj,2);
  3816   000BC6  0E02               	movlw	2
  3817   000BC8  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3818   000BCA  5028               	movf	_cuenObj^0,w,c
  3819   000BCC  ECA8  F006         	call	i2_EscribeLCD_n8
  3820                           
  3821                           ;PruebaLCD.c: 145: flagDig=0;
  3822   000BD0  0E00               	movlw	0
  3823   000BD2  6E3D               	movwf	(_flagDig+1)^0,c
  3824   000BD4  0E00               	movlw	0
  3825   000BD6  6E3C               	movwf	_flagDig^0,c
  3826                           
  3827                           ;PruebaLCD.c: 146: }
  3828   000BD8  D045               	goto	i2l2763
  3829   000BDA                     i2l2727:
  3830                           
  3831                           ;PruebaLCD.c: 147: else{;PruebaLCD.c: 148: BorraLCD();
  3832   000BDA  EC6E  F00C         	call	i2_BorraLCD	;wreg free
  3833                           
  3834                           ;PruebaLCD.c: 149: MensajeLCD_Var("Valor Invalido");
  3835   000BDE  0E13               	movlw	low STR_5
  3836   000BE0  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  3837   000BE2  ECF7  F00B         	call	i2_MensajeLCD_Var	;wreg free
  3838                           
  3839                           ;PruebaLCD.c: 150: flagDig=0;
  3840   000BE6  0E00               	movlw	0
  3841   000BE8  6E3D               	movwf	(_flagDig+1)^0,c
  3842   000BEA  0E00               	movlw	0
  3843   000BEC  6E3C               	movwf	_flagDig^0,c
  3844                           
  3845                           ;PruebaLCD.c: 151: _delay((unsigned long)((3000)*(1000000/4000.0)));
  3846   000BEE  0E04               	movlw	4
  3847   000BF0  6E0F               	movwf	(??_ok+1)^0,c
  3848   000BF2  0ECF               	movlw	207
  3849   000BF4  6E0E               	movwf	??_ok^0,c
  3850   000BF6  0E02               	movlw	2
  3851   000BF8                     i2u199_47:
  3852   000BF8  2EE8               	decfsz	wreg,f,c
  3853   000BFA  D7FE               	bra	i2u199_47
  3854   000BFC  2E0E               	decfsz	??_ok^0,f,c
  3855   000BFE  D7FC               	bra	i2u199_47
  3856   000C00  2E0F               	decfsz	(??_ok+1)^0,f,c
  3857   000C02  D7FA               	bra	i2u199_47
  3858                           
  3859                           ;PruebaLCD.c: 152: borrarTexto();
  3860   000C04  EC6E  F00B         	call	_borrarTexto	;wreg free
  3861   000C08  D02D               	goto	i2l2763
  3862   000C0A                     i2l2737:
  3863                           
  3864                           ;PruebaLCD.c: 155: else if(flagFin==1){
  3865   000C0A  0436               	decf	_flagFin^0,w,c
  3866   000C0C  1037               	iorwf	(_flagFin+1)^0,w,c
  3867   000C0E  A4D8               	btfss	status,2,c
  3868   000C10  D029               	goto	i2l2763
  3869                           
  3870                           ;PruebaLCD.c: 157: BorraLCD();
  3871   000C12  EC6E  F00C         	call	i2_BorraLCD	;wreg free
  3872                           
  3873                           ;PruebaLCD.c: 158: MensajeLCD_Var("Piezas a Contar: ");
  3874   000C16  0E01               	movlw	low STR_2
  3875   000C18  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  3876   000C1A  ECF7  F00B         	call	i2_MensajeLCD_Var	;wreg free
  3877                           
  3878                           ;PruebaLCD.c: 159: DireccionaLCD(0xC0);
  3879   000C1E  0EC0               	movlw	192
  3880   000C20  EC4E  F00C         	call	i2_DireccionaLCD
  3881                           
  3882                           ;PruebaLCD.c: 160: flagEscribir=1;
  3883   000C24  0E00               	movlw	0
  3884   000C26  6E3F               	movwf	(_flagEscribir+1)^0,c
  3885   000C28  0E01               	movlw	1
  3886   000C2A  6E3E               	movwf	_flagEscribir^0,c
  3887                           
  3888                           ;PruebaLCD.c: 161: flagDig=0;
  3889   000C2C  0E00               	movlw	0
  3890   000C2E  6E3D               	movwf	(_flagDig+1)^0,c
  3891   000C30  0E00               	movlw	0
  3892   000C32  6E3C               	movwf	_flagDig^0,c
  3893                           
  3894                           ;PruebaLCD.c: 163: flagFin=0;
  3895   000C34  0E00               	movlw	0
  3896   000C36  6E37               	movwf	(_flagFin+1)^0,c
  3897   000C38  0E00               	movlw	0
  3898   000C3A  6E36               	movwf	_flagFin^0,c
  3899                           
  3900                           ;PruebaLCD.c: 164: piezFalt=cuenObj;
  3901   000C3C  C028  F026         	movff	_cuenObj,_piezFalt
  3902   000C40  C029  F027         	movff	_cuenObj+1,_piezFalt+1
  3903                           
  3904                           ;PruebaLCD.c: 165: cuenta=0;
  3905   000C44  0E00               	movlw	0
  3906   000C46  6E33               	movwf	(_cuenta+1)^0,c
  3907   000C48  0E00               	movlw	0
  3908   000C4A  6E32               	movwf	_cuenta^0,c
  3909                           
  3910                           ;PruebaLCD.c: 166: a=0;
  3911   000C4C  0E00               	movlw	0
  3912   000C4E  6E2D               	movwf	(_a+1)^0,c
  3913   000C50  0E00               	movlw	0
  3914   000C52  6E2C               	movwf	_a^0,c
  3915                           
  3916                           ;PruebaLCD.c: 167: b=0;
  3917   000C54  0E00               	movlw	0
  3918   000C56  6E2B               	movwf	(_b+1)^0,c
  3919   000C58  0E00               	movlw	0
  3920   000C5A  6E2A               	movwf	_b^0,c
  3921                           
  3922                           ;PruebaLCD.c: 168: RGB();
  3923   000C5C  ECF3  F008         	call	i2_RGB	;wreg free
  3924                           
  3925                           ;PruebaLCD.c: 169: SEG();
  3926   000C60  EC89  F00C         	call	i2_SEG	;wreg free
  3927   000C64                     i2l2763:
  3928                           
  3929                           ;PruebaLCD.c: 170: };PruebaLCD.c: 171: contador();
  3930   000C64  EC81  F007         	call	i2_contador	;wreg free
  3931   000C68  0012               	return		;funcret
  3932   000C6A                     __end_of_ok:
  3933                           	callstack 0
  3934                           
  3935 ;; *************** function i2_contador *****************
  3936 ;; Defined at:
  3937 ;;		line 185 in file "PruebaLCD.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;		None
  3940 ;; Auto vars:     Size  Location     Type
  3941 ;;		None
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  1    wreg      void 
  3944 ;; Registers used:
  3945 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3951 ;;      Params:         0       0       0       0       0       0       0       0       0
  3952 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3953 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3954 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3955 ;;Total ram usage:        0 bytes
  3956 ;; Hardware stack levels used: 1
  3957 ;; Hardware stack levels required when called: 4
  3958 ;; This function calls:
  3959 ;;		i2_BorraLCD
  3960 ;;		i2_DireccionaLCD
  3961 ;;		i2_EscribeLCD_n8
  3962 ;;		i2_MensajeLCD_Var
  3963 ;;		i2_RGB
  3964 ;;		i2_SEG
  3965 ;;		i2___awdiv
  3966 ;;		i2___awmod
  3967 ;; This function is called by:
  3968 ;;		_ok
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text26
  3973   000F02                     __ptext26:
  3974                           	callstack 0
  3975   000F02                     i2_contador:
  3976                           	callstack 19
  3977                           
  3978                           ;PruebaLCD.c: 186: if(flagCont==1){
  3979                           
  3980                           ;incstack = 0
  3981   000F02  0434               	decf	_flagCont^0,w,c
  3982   000F04  1035               	iorwf	(_flagCont+1)^0,w,c
  3983   000F06  A4D8               	btfss	status,2,c
  3984   000F08  0012               	return	
  3985                           
  3986                           ;PruebaLCD.c: 187: if(PORTCbits.RC1==0){
  3987   000F0A  B282               	btfsc	130,1,c	;volatile
  3988   000F0C  0012               	return	
  3989                           
  3990                           ;PruebaLCD.c: 188: flagInicio = 1;
  3991   000F0E  0E00               	movlw	0
  3992   000F10  6E3B               	movwf	(_flagInicio+1)^0,c
  3993   000F12  0E01               	movlw	1
  3994   000F14  6E3A               	movwf	_flagInicio^0,c
  3995                           
  3996                           ;PruebaLCD.c: 189: if(flagEmergencia == 0){
  3997   000F16  5038               	movf	_flagEmergencia^0,w,c
  3998   000F18  1039               	iorwf	(_flagEmergencia+1)^0,w,c
  3999   000F1A  A4D8               	btfss	status,2,c
  4000   000F1C  0012               	return	
  4001                           
  4002                           ;PruebaLCD.c: 190: cuenta+=1;
  4003   000F1E  4A32               	infsnz	_cuenta^0,f,c
  4004   000F20  2A33               	incf	(_cuenta+1)^0,f,c
  4005                           
  4006                           ;PruebaLCD.c: 191: piezFalt-=1;
  4007   000F22  0626               	decf	_piezFalt^0,f,c
  4008   000F24  A0D8               	btfss	status,0,c
  4009   000F26  0627               	decf	(_piezFalt+1)^0,f,c
  4010                           
  4011                           ;PruebaLCD.c: 192: a = cuenta % 10;
  4012   000F28  C032  F001         	movff	_cuenta,i2___awmod@dividend
  4013   000F2C  C033  F002         	movff	_cuenta+1,i2___awmod@dividend+1
  4014   000F30  0E00               	movlw	0
  4015   000F32  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  4016   000F34  0E0A               	movlw	10
  4017   000F36  6E03               	movwf	i2___awmod@divisor^0,c
  4018   000F38  ECD8  F009         	call	i2___awmod	;wreg free
  4019   000F3C  C001  F02C         	movff	?i2___awmod,_a
  4020   000F40  C002  F02D         	movff	?i2___awmod+1,_a+1
  4021                           
  4022                           ;PruebaLCD.c: 193: b = (cuenta - a)/10;
  4023   000F44  502C               	movf	_a^0,w,c
  4024   000F46  5C32               	subwf	_cuenta^0,w,c
  4025   000F48  6E01               	movwf	i2___awdiv@dividend^0,c
  4026   000F4A  502D               	movf	(_a+1)^0,w,c
  4027   000F4C  5833               	subwfb	(_cuenta+1)^0,w,c
  4028   000F4E  6E02               	movwf	(i2___awdiv@dividend+1)^0,c
  4029   000F50  0E00               	movlw	0
  4030   000F52  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  4031   000F54  0E0A               	movlw	10
  4032   000F56  6E03               	movwf	i2___awdiv@divisor^0,c
  4033   000F58  EC76  F008         	call	i2___awdiv	;wreg free
  4034   000F5C  C001  F02A         	movff	?i2___awdiv,_b
  4035   000F60  C002  F02B         	movff	?i2___awdiv+1,_b+1
  4036                           
  4037                           ;PruebaLCD.c: 194: RGB();
  4038   000F64  ECF3  F008         	call	i2_RGB	;wreg free
  4039                           
  4040                           ;PruebaLCD.c: 195: SEG();
  4041   000F68  EC89  F00C         	call	i2_SEG	;wreg free
  4042                           
  4043                           ;PruebaLCD.c: 197: BorraLCD();
  4044   000F6C  EC6E  F00C         	call	i2_BorraLCD	;wreg free
  4045                           
  4046                           ;PruebaLCD.c: 198: MensajeLCD_Var("Faltan: ");
  4047   000F70  0E5E               	movlw	low STR_3
  4048   000F72  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  4049   000F74  ECF7  F00B         	call	i2_MensajeLCD_Var	;wreg free
  4050                           
  4051                           ;PruebaLCD.c: 199: EscribeLCD_n8(piezFalt,2);
  4052   000F78  0E02               	movlw	2
  4053   000F7A  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  4054   000F7C  5026               	movf	_piezFalt^0,w,c
  4055   000F7E  ECA8  F006         	call	i2_EscribeLCD_n8
  4056                           
  4057                           ;PruebaLCD.c: 200: DireccionaLCD(0xC0);
  4058   000F82  0EC0               	movlw	192
  4059   000F84  EC4E  F00C         	call	i2_DireccionaLCD
  4060                           
  4061                           ;PruebaLCD.c: 201: MensajeLCD_Var("Objetivo: ");
  4062   000F88  0E48               	movlw	low STR_4
  4063   000F8A  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  4064   000F8C  ECF7  F00B         	call	i2_MensajeLCD_Var	;wreg free
  4065                           
  4066                           ;PruebaLCD.c: 202: EscribeLCD_n8(cuenObj,2);
  4067   000F90  0E02               	movlw	2
  4068   000F92  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  4069   000F94  5028               	movf	_cuenObj^0,w,c
  4070   000F96  ECA8  F006         	call	i2_EscribeLCD_n8
  4071                           
  4072                           ;PruebaLCD.c: 203: if (cuenta==cuenObj){
  4073   000F9A  5028               	movf	_cuenObj^0,w,c
  4074   000F9C  1832               	xorwf	_cuenta^0,w,c
  4075   000F9E  E116               	bnz	i2l264
  4076   000FA0  5029               	movf	(_cuenObj+1)^0,w,c
  4077   000FA2  1833               	xorwf	(_cuenta+1)^0,w,c
  4078   000FA4  A4D8               	btfss	status,2,c
  4079   000FA6  0012               	return	
  4080                           
  4081                           ;PruebaLCD.c: 204: BorraLCD();
  4082   000FA8  EC6E  F00C         	call	i2_BorraLCD	;wreg free
  4083                           
  4084                           ;PruebaLCD.c: 205: MensajeLCD_Var("Fin de Cuenta");
  4085   000FAC  0E22               	movlw	low STR_10
  4086   000FAE  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  4087   000FB0  ECF7  F00B         	call	i2_MensajeLCD_Var	;wreg free
  4088                           
  4089                           ;PruebaLCD.c: 206: DireccionaLCD(0xC0);
  4090   000FB4  0EC0               	movlw	192
  4091   000FB6  EC4E  F00C         	call	i2_DireccionaLCD
  4092                           
  4093                           ;PruebaLCD.c: 207: MensajeLCD_Var("Presione OK");
  4094   000FBA  0E30               	movlw	low STR_11
  4095   000FBC  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  4096   000FBE  ECF7  F00B         	call	i2_MensajeLCD_Var	;wreg free
  4097                           
  4098                           ;PruebaLCD.c: 208: flagFin=1;
  4099   000FC2  0E00               	movlw	0
  4100   000FC4  6E37               	movwf	(_flagFin+1)^0,c
  4101   000FC6  0E01               	movlw	1
  4102   000FC8  6E36               	movwf	_flagFin^0,c
  4103   000FCA  0012               	return	
  4104   000FCC                     i2l264:
  4105   000FCC  0012               	return		;funcret
  4106   000FCE                     __end_ofi2_contador:
  4107                           	callstack 0
  4108                           
  4109 ;; *************** function i2___awmod *****************
  4110 ;; Defined at:
  4111 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;  dividend        2    0[COMRAM] int 
  4114 ;;  divisor         2    2[COMRAM] int 
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;  sign            1    5[COMRAM] unsigned char 
  4117 ;;  counter         1    4[COMRAM] unsigned char 
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  2    0[COMRAM] int 
  4120 ;; Registers used:
  4121 ;;		wreg, status,2, status,0
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4127 ;;      Params:         4       0       0       0       0       0       0       0       0
  4128 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4129 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4130 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4131 ;;Total ram usage:        6 bytes
  4132 ;; Hardware stack levels used: 1
  4133 ;; This function calls:
  4134 ;;		Nothing
  4135 ;; This function is called by:
  4136 ;;		i2_contador
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text27
  4141   0013B0                     __ptext27:
  4142                           	callstack 0
  4143   0013B0                     i2___awmod:
  4144                           	callstack 22
  4145                           
  4146                           ;incstack = 0
  4147   0013B0  6A06               	clrf	i2___awmod@sign^0,c
  4148   0013B2  AE02               	btfss	(i2___awmod@dividend+1)^0,7,c
  4149   0013B4  D006               	goto	i2l2415
  4150   0013B6  6C01               	negf	i2___awmod@dividend^0,c
  4151   0013B8  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  4152   0013BA  B0D8               	btfsc	status,0,c
  4153   0013BC  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  4154   0013BE  0E01               	movlw	1
  4155   0013C0  6E06               	movwf	i2___awmod@sign^0,c
  4156   0013C2                     i2l2415:
  4157   0013C2  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  4158   0013C4  D004               	goto	i2l2419
  4159   0013C6  6C03               	negf	i2___awmod@divisor^0,c
  4160   0013C8  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  4161   0013CA  B0D8               	btfsc	status,0,c
  4162   0013CC  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  4163   0013CE                     i2l2419:
  4164   0013CE  5003               	movf	i2___awmod@divisor^0,w,c
  4165   0013D0  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  4166   0013D2  B4D8               	btfsc	status,2,c
  4167   0013D4  D018               	goto	i2l2435
  4168   0013D6  0E01               	movlw	1
  4169   0013D8  6E05               	movwf	i2___awmod@counter^0,c
  4170   0013DA  D004               	goto	i2l2425
  4171   0013DC                     i2l2423:
  4172   0013DC  90D8               	bcf	status,0,c
  4173   0013DE  3603               	rlcf	i2___awmod@divisor^0,f,c
  4174   0013E0  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  4175   0013E2  2A05               	incf	i2___awmod@counter^0,f,c
  4176   0013E4                     i2l2425:
  4177   0013E4  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  4178   0013E6  D7FA               	goto	i2l2423
  4179   0013E8                     i2u123_40:
  4180   0013E8  5003               	movf	i2___awmod@divisor^0,w,c
  4181   0013EA  5C01               	subwf	i2___awmod@dividend^0,w,c
  4182   0013EC  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  4183   0013EE  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  4184   0013F0  A0D8               	btfss	status,0,c
  4185   0013F2  D004               	goto	i2l2431
  4186   0013F4  5003               	movf	i2___awmod@divisor^0,w,c
  4187   0013F6  5E01               	subwf	i2___awmod@dividend^0,f,c
  4188   0013F8  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  4189   0013FA  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  4190   0013FC                     i2l2431:
  4191   0013FC  90D8               	bcf	status,0,c
  4192   0013FE  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  4193   001400  3203               	rrcf	i2___awmod@divisor^0,f,c
  4194   001402  2E05               	decfsz	i2___awmod@counter^0,f,c
  4195   001404  D7F1               	goto	i2u123_40
  4196   001406                     i2l2435:
  4197   001406  5006               	movf	i2___awmod@sign^0,w,c
  4198   001408  B4D8               	btfsc	status,2,c
  4199   00140A  D004               	goto	i2l2439
  4200   00140C  6C01               	negf	i2___awmod@dividend^0,c
  4201   00140E  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  4202   001410  B0D8               	btfsc	status,0,c
  4203   001412  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  4204   001414                     i2l2439:
  4205   001414  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  4206   001418  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  4207   00141C  0012               	return		;funcret
  4208   00141E                     __end_ofi2___awmod:
  4209                           	callstack 0
  4210                           
  4211 ;; *************** function i2___awdiv *****************
  4212 ;; Defined at:
  4213 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;  dividend        2    0[COMRAM] int 
  4216 ;;  divisor         2    2[COMRAM] int 
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;  quotient        2    6[COMRAM] int 
  4219 ;;  sign            1    5[COMRAM] unsigned char 
  4220 ;;  counter         1    4[COMRAM] unsigned char 
  4221 ;; Return value:  Size  Location     Type
  4222 ;;                  2    0[COMRAM] int 
  4223 ;; Registers used:
  4224 ;;		wreg, status,2, status,0
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4230 ;;      Params:         4       0       0       0       0       0       0       0       0
  4231 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4232 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4233 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4234 ;;Total ram usage:        8 bytes
  4235 ;; Hardware stack levels used: 1
  4236 ;; This function calls:
  4237 ;;		Nothing
  4238 ;; This function is called by:
  4239 ;;		i2_contador
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text28
  4244   0010EC                     __ptext28:
  4245                           	callstack 0
  4246   0010EC                     i2___awdiv:
  4247                           	callstack 22
  4248                           
  4249                           ;incstack = 0
  4250   0010EC  6A06               	clrf	i2___awdiv@sign^0,c
  4251   0010EE  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  4252   0010F0  D006               	goto	i2l2371
  4253   0010F2  6C03               	negf	i2___awdiv@divisor^0,c
  4254   0010F4  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
  4255   0010F6  B0D8               	btfsc	status,0,c
  4256   0010F8  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
  4257   0010FA  0E01               	movlw	1
  4258   0010FC  6E06               	movwf	i2___awdiv@sign^0,c
  4259   0010FE                     i2l2371:
  4260   0010FE  AE02               	btfss	(i2___awdiv@dividend+1)^0,7,c
  4261   001100  D006               	goto	i2l2377
  4262   001102  6C01               	negf	i2___awdiv@dividend^0,c
  4263   001104  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
  4264   001106  B0D8               	btfsc	status,0,c
  4265   001108  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
  4266   00110A  0E01               	movlw	1
  4267   00110C  1A06               	xorwf	i2___awdiv@sign^0,f,c
  4268   00110E                     i2l2377:
  4269   00110E  0E00               	movlw	0
  4270   001110  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
  4271   001112  0E00               	movlw	0
  4272   001114  6E07               	movwf	i2___awdiv@quotient^0,c
  4273   001116  5003               	movf	i2___awdiv@divisor^0,w,c
  4274   001118  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
  4275   00111A  B4D8               	btfsc	status,2,c
  4276   00111C  D01C               	goto	i2l2399
  4277   00111E  0E01               	movlw	1
  4278   001120  6E05               	movwf	i2___awdiv@counter^0,c
  4279   001122  D004               	goto	i2l2385
  4280   001124                     i2l2383:
  4281   001124  90D8               	bcf	status,0,c
  4282   001126  3603               	rlcf	i2___awdiv@divisor^0,f,c
  4283   001128  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
  4284   00112A  2A05               	incf	i2___awdiv@counter^0,f,c
  4285   00112C                     i2l2385:
  4286   00112C  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  4287   00112E  D7FA               	goto	i2l2383
  4288   001130                     i2u117_40:
  4289   001130  90D8               	bcf	status,0,c
  4290   001132  3607               	rlcf	i2___awdiv@quotient^0,f,c
  4291   001134  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
  4292   001136  5003               	movf	i2___awdiv@divisor^0,w,c
  4293   001138  5C01               	subwf	i2___awdiv@dividend^0,w,c
  4294   00113A  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  4295   00113C  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
  4296   00113E  A0D8               	btfss	status,0,c
  4297   001140  D005               	goto	i2l2395
  4298   001142  5003               	movf	i2___awdiv@divisor^0,w,c
  4299   001144  5E01               	subwf	i2___awdiv@dividend^0,f,c
  4300   001146  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  4301   001148  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
  4302   00114A  8007               	bsf	i2___awdiv@quotient^0,0,c
  4303   00114C                     i2l2395:
  4304   00114C  90D8               	bcf	status,0,c
  4305   00114E  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
  4306   001150  3203               	rrcf	i2___awdiv@divisor^0,f,c
  4307   001152  2E05               	decfsz	i2___awdiv@counter^0,f,c
  4308   001154  D7ED               	goto	i2u117_40
  4309   001156                     i2l2399:
  4310   001156  5006               	movf	i2___awdiv@sign^0,w,c
  4311   001158  B4D8               	btfsc	status,2,c
  4312   00115A  D004               	goto	i2l2403
  4313   00115C  6C07               	negf	i2___awdiv@quotient^0,c
  4314   00115E  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
  4315   001160  B0D8               	btfsc	status,0,c
  4316   001162  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
  4317   001164                     i2l2403:
  4318   001164  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  4319   001168  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  4320   00116C  0012               	return		;funcret
  4321   00116E                     __end_ofi2___awdiv:
  4322                           	callstack 0
  4323                           
  4324 ;; *************** function i2_SEG *****************
  4325 ;; Defined at:
  4326 ;;		line 254 in file "PruebaLCD.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;		None
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;		None
  4331 ;; Return value:  Size  Location     Type
  4332 ;;                  1    wreg      void 
  4333 ;; Registers used:
  4334 ;;		None
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4340 ;;      Params:         0       0       0       0       0       0       0       0       0
  4341 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4342 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4343 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4344 ;;Total ram usage:        0 bytes
  4345 ;; Hardware stack levels used: 1
  4346 ;; This function calls:
  4347 ;;		Nothing
  4348 ;; This function is called by:
  4349 ;;		_ok
  4350 ;;		_reiCon
  4351 ;;		i2_contador
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355                           	psect	text29
  4356   001912                     __ptext29:
  4357                           	callstack 0
  4358   001912                     i2_SEG:
  4359                           	callstack 23
  4360                           
  4361                           ;PruebaLCD.c: 255: LATD = a;
  4362                           
  4363                           ;incstack = 0
  4364   001912  C02C  FF8C         	movff	_a,3980	;volatile
  4365   001916  0012               	return		;funcret
  4366   001918                     __end_ofi2_SEG:
  4367                           	callstack 0
  4368                           
  4369 ;; *************** function i2_RGB *****************
  4370 ;; Defined at:
  4371 ;;		line 216 in file "PruebaLCD.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;		None
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;		None
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      void 
  4378 ;; Registers used:
  4379 ;;		wreg, status,2, status,0
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4385 ;;      Params:         0       0       0       0       0       0       0       0       0
  4386 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4388 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4389 ;;Total ram usage:        0 bytes
  4390 ;; Hardware stack levels used: 1
  4391 ;; This function calls:
  4392 ;;		Nothing
  4393 ;; This function is called by:
  4394 ;;		_ok
  4395 ;;		_reiCon
  4396 ;;		i2_contador
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           	psect	text30
  4401   0011E6                     __ptext30:
  4402                           	callstack 0
  4403   0011E6                     i2_RGB:
  4404                           	callstack 23
  4405                           
  4406                           ;PruebaLCD.c: 217: if (flagInicio == 0){
  4407                           
  4408                           ;incstack = 0
  4409   0011E6  503A               	movf	_flagInicio^0,w,c
  4410   0011E8  103B               	iorwf	(_flagInicio+1)^0,w,c
  4411   0011EA  A4D8               	btfss	status,2,c
  4412   0011EC  D004               	goto	i2l1327
  4413                           
  4414                           ;PruebaLCD.c: 218: LATE0 = 0;
  4415   0011EE  908D               	bcf	3981,0,c	;volatile
  4416                           
  4417                           ;PruebaLCD.c: 219: LATE1 = 0;
  4418   0011F0  928D               	bcf	3981,1,c	;volatile
  4419                           
  4420                           ;PruebaLCD.c: 220: LATE2 = 0;
  4421   0011F2  948D               	bcf	3981,2,c	;volatile
  4422                           
  4423                           ;PruebaLCD.c: 221: }
  4424   0011F4  0012               	return	
  4425   0011F6                     i2l1327:
  4426                           
  4427                           ;PruebaLCD.c: 222: else if (b == 0){
  4428   0011F6  502A               	movf	_b^0,w,c
  4429   0011F8  102B               	iorwf	(_b+1)^0,w,c
  4430   0011FA  A4D8               	btfss	status,2,c
  4431   0011FC  D004               	goto	i2l1331
  4432                           
  4433                           ;PruebaLCD.c: 223: LATE0 = 1;
  4434   0011FE  808D               	bsf	3981,0,c	;volatile
  4435                           
  4436                           ;PruebaLCD.c: 224: LATE1 = 0;
  4437   001200  928D               	bcf	3981,1,c	;volatile
  4438                           
  4439                           ;PruebaLCD.c: 225: LATE2 = 1;
  4440   001202  848D               	bsf	3981,2,c	;volatile
  4441                           
  4442                           ;PruebaLCD.c: 226: }
  4443   001204  0012               	return	
  4444   001206                     i2l1331:
  4445                           
  4446                           ;PruebaLCD.c: 227: else if (b == 1){
  4447   001206  042A               	decf	_b^0,w,c
  4448   001208  102B               	iorwf	(_b+1)^0,w,c
  4449   00120A  A4D8               	btfss	status,2,c
  4450   00120C  D004               	goto	i2l1335
  4451                           
  4452                           ;PruebaLCD.c: 228: LATE0 = 0;
  4453   00120E  908D               	bcf	3981,0,c	;volatile
  4454                           
  4455                           ;PruebaLCD.c: 229: LATE1 = 0;
  4456   001210  928D               	bcf	3981,1,c	;volatile
  4457                           
  4458                           ;PruebaLCD.c: 230: LATE2 = 1;
  4459   001212  848D               	bsf	3981,2,c	;volatile
  4460                           
  4461                           ;PruebaLCD.c: 231: }
  4462   001214  0012               	return	
  4463   001216                     i2l1335:
  4464                           
  4465                           ;PruebaLCD.c: 232: else if (b == 2){
  4466   001216  0E02               	movlw	2
  4467   001218  182A               	xorwf	_b^0,w,c
  4468   00121A  102B               	iorwf	(_b+1)^0,w,c
  4469   00121C  A4D8               	btfss	status,2,c
  4470   00121E  D004               	goto	i2l1339
  4471                           
  4472                           ;PruebaLCD.c: 233: LATE0 = 0;
  4473   001220  908D               	bcf	3981,0,c	;volatile
  4474                           
  4475                           ;PruebaLCD.c: 234: LATE1 = 1;
  4476   001222  828D               	bsf	3981,1,c	;volatile
  4477                           
  4478                           ;PruebaLCD.c: 235: LATE2 = 1;
  4479   001224  848D               	bsf	3981,2,c	;volatile
  4480                           
  4481                           ;PruebaLCD.c: 236: }
  4482   001226  0012               	return	
  4483   001228                     i2l1339:
  4484                           
  4485                           ;PruebaLCD.c: 237: else if (b == 3){
  4486   001228  0E03               	movlw	3
  4487   00122A  182A               	xorwf	_b^0,w,c
  4488   00122C  102B               	iorwf	(_b+1)^0,w,c
  4489   00122E  A4D8               	btfss	status,2,c
  4490   001230  D004               	goto	i2l1343
  4491                           
  4492                           ;PruebaLCD.c: 238: LATE0 = 0;
  4493   001232  908D               	bcf	3981,0,c	;volatile
  4494                           
  4495                           ;PruebaLCD.c: 239: LATE1 = 1;
  4496   001234  828D               	bsf	3981,1,c	;volatile
  4497                           
  4498                           ;PruebaLCD.c: 240: LATE2 = 0;
  4499   001236  948D               	bcf	3981,2,c	;volatile
  4500                           
  4501                           ;PruebaLCD.c: 241: }
  4502   001238  0012               	return	
  4503   00123A                     i2l1343:
  4504                           
  4505                           ;PruebaLCD.c: 242: else if (b == 4){
  4506   00123A  0E04               	movlw	4
  4507   00123C  182A               	xorwf	_b^0,w,c
  4508   00123E  102B               	iorwf	(_b+1)^0,w,c
  4509   001240  A4D8               	btfss	status,2,c
  4510   001242  D004               	goto	i2l1347
  4511                           
  4512                           ;PruebaLCD.c: 243: LATE0 = 1;
  4513   001244  808D               	bsf	3981,0,c	;volatile
  4514                           
  4515                           ;PruebaLCD.c: 244: LATE1 = 1;
  4516   001246  828D               	bsf	3981,1,c	;volatile
  4517                           
  4518                           ;PruebaLCD.c: 245: LATE2 = 0;
  4519   001248  948D               	bcf	3981,2,c	;volatile
  4520                           
  4521                           ;PruebaLCD.c: 246: }
  4522   00124A  0012               	return	
  4523   00124C                     i2l1347:
  4524                           
  4525                           ;PruebaLCD.c: 247: else if (b == 5){
  4526   00124C  0E05               	movlw	5
  4527   00124E  182A               	xorwf	_b^0,w,c
  4528   001250  102B               	iorwf	(_b+1)^0,w,c
  4529   001252  A4D8               	btfss	status,2,c
  4530   001254  0012               	return	
  4531                           
  4532                           ;PruebaLCD.c: 248: LATE0 = 1;
  4533   001256  808D               	bsf	3981,0,c	;volatile
  4534                           
  4535                           ;PruebaLCD.c: 249: LATE1 = 1;
  4536   001258  828D               	bsf	3981,1,c	;volatile
  4537                           
  4538                           ;PruebaLCD.c: 250: LATE2 = 1;
  4539   00125A  848D               	bsf	3981,2,c	;volatile
  4540   00125C  0012               	return	
  4541   00125E                     __end_ofi2_RGB:
  4542                           	callstack 0
  4543                           
  4544 ;; *************** function i2_EscribeLCD_n8 *****************
  4545 ;; Defined at:
  4546 ;;		line 140 in file "LibLCDXC9.h"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;  a               1    wreg     unsigned char 
  4549 ;;  b               1    8[COMRAM] unsigned char 
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;  a               1   12[COMRAM] unsigned char 
  4552 ;;  unidad          1   11[COMRAM] unsigned char 
  4553 ;;  decena          1   10[COMRAM] unsigned char 
  4554 ;;  centena         1    9[COMRAM] unsigned char 
  4555 ;; Return value:  Size  Location     Type
  4556 ;;                  1    wreg      void 
  4557 ;; Registers used:
  4558 ;;		wreg, status,2, status,0, cstack
  4559 ;; Tracked objects:
  4560 ;;		On entry : 0/0
  4561 ;;		On exit  : 0/0
  4562 ;;		Unchanged: 0/0
  4563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4564 ;;      Params:         1       0       0       0       0       0       0       0       0
  4565 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4566 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4567 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4568 ;;Total ram usage:        5 bytes
  4569 ;; Hardware stack levels used: 1
  4570 ;; Hardware stack levels required when called: 2
  4571 ;; This function calls:
  4572 ;;		i2_EnviaDato
  4573 ;;		i2_HabilitaLCD
  4574 ;;		i2_RetardoLCD
  4575 ;;		i2___lbdiv
  4576 ;;		i2___lbmod
  4577 ;; This function is called by:
  4578 ;;		_ok
  4579 ;;		_reiCon
  4580 ;;		i2_contador
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584                           	psect	text31
  4585   000D50                     __ptext31:
  4586                           	callstack 0
  4587   000D50                     i2_EscribeLCD_n8:
  4588                           	callstack 21
  4589                           
  4590                           ;incstack = 0
  4591                           ;i2EscribeLCD_n8@a stored from wreg
  4592   000D50  6E0D               	movwf	i2EscribeLCD_n8@a^0,c
  4593                           
  4594                           ;LibLCDXC9.h: 145: unsigned char centena,decena,unidad;;LibLCDXC9.h: 146: LATA4=1;
  4595   000D52  8889               	bsf	3977,4,c	;volatile
  4596                           
  4597                           ;LibLCDXC9.h: 147: switch(b){
  4598   000D54  D065               	goto	i2l2345
  4599   000D56                     i2l2313:
  4600   000D56  0E0A               	movlw	10
  4601   000D58  6E01               	movwf	i2___lbmod@divisor^0,c
  4602   000D5A  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4603   000D5C  ECE3  F00B         	call	i2___lbmod
  4604   000D60  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  4605                           
  4606                           ;LibLCDXC9.h: 149: EnviaDato(unidad+48);
  4607   000D62  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  4608   000D64  0F30               	addlw	48
  4609   000D66  ECD9  F00A         	call	i2_EnviaDato
  4610                           
  4611                           ;LibLCDXC9.h: 150: HabilitaLCD();
  4612   000D6A  EC7F  F00C         	call	i2_HabilitaLCD	;wreg free
  4613                           
  4614                           ;LibLCDXC9.h: 151: RetardoLCD(4);
  4615   000D6E  0E04               	movlw	4
  4616   000D70  EC66  F00A         	call	i2_RetardoLCD
  4617                           
  4618                           ;LibLCDXC9.h: 152: break;
  4619   000D74  0012               	return	
  4620   000D76                     i2l2319:
  4621   000D76  0E0A               	movlw	10
  4622   000D78  6E05               	movwf	i2___lbdiv@divisor^0,c
  4623   000D7A  0E64               	movlw	100
  4624   000D7C  6E01               	movwf	i2___lbmod@divisor^0,c
  4625   000D7E  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4626   000D80  ECE3  F00B         	call	i2___lbmod
  4627   000D84  EC52  F00B         	call	i2___lbdiv
  4628   000D88  6E0B               	movwf	i2EscribeLCD_n8@decena^0,c
  4629                           
  4630                           ;LibLCDXC9.h: 154: unidad=a%10;
  4631   000D8A  0E0A               	movlw	10
  4632   000D8C  6E01               	movwf	i2___lbmod@divisor^0,c
  4633   000D8E  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4634   000D90  ECE3  F00B         	call	i2___lbmod
  4635   000D94  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  4636                           
  4637                           ;LibLCDXC9.h: 155: EnviaDato(decena+48);
  4638   000D96  500B               	movf	i2EscribeLCD_n8@decena^0,w,c
  4639   000D98  0F30               	addlw	48
  4640   000D9A  ECD9  F00A         	call	i2_EnviaDato
  4641                           
  4642                           ;LibLCDXC9.h: 156: HabilitaLCD();
  4643   000D9E  EC7F  F00C         	call	i2_HabilitaLCD	;wreg free
  4644                           
  4645                           ;LibLCDXC9.h: 157: RetardoLCD(4);
  4646   000DA2  0E04               	movlw	4
  4647   000DA4  EC66  F00A         	call	i2_RetardoLCD
  4648                           
  4649                           ;LibLCDXC9.h: 158: EnviaDato(unidad+48);
  4650   000DA8  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  4651   000DAA  0F30               	addlw	48
  4652   000DAC  ECD9  F00A         	call	i2_EnviaDato
  4653                           
  4654                           ;LibLCDXC9.h: 159: HabilitaLCD();
  4655   000DB0  EC7F  F00C         	call	i2_HabilitaLCD	;wreg free
  4656                           
  4657                           ;LibLCDXC9.h: 160: RetardoLCD(4);
  4658   000DB4  0E04               	movlw	4
  4659   000DB6  EC66  F00A         	call	i2_RetardoLCD
  4660                           
  4661                           ;LibLCDXC9.h: 161: break;
  4662   000DBA  0012               	return	
  4663   000DBC                     i2l2329:
  4664   000DBC  0E64               	movlw	100
  4665   000DBE  6E05               	movwf	i2___lbdiv@divisor^0,c
  4666   000DC0  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4667   000DC2  EC52  F00B         	call	i2___lbdiv
  4668   000DC6  6E0A               	movwf	i2EscribeLCD_n8@centena^0,c
  4669                           
  4670                           ;LibLCDXC9.h: 163: decena=(a%100)/10;
  4671   000DC8  0E0A               	movlw	10
  4672   000DCA  6E05               	movwf	i2___lbdiv@divisor^0,c
  4673   000DCC  0E64               	movlw	100
  4674   000DCE  6E01               	movwf	i2___lbmod@divisor^0,c
  4675   000DD0  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4676   000DD2  ECE3  F00B         	call	i2___lbmod
  4677   000DD6  EC52  F00B         	call	i2___lbdiv
  4678   000DDA  6E0B               	movwf	i2EscribeLCD_n8@decena^0,c
  4679                           
  4680                           ;LibLCDXC9.h: 164: unidad=a%10;
  4681   000DDC  0E0A               	movlw	10
  4682   000DDE  6E01               	movwf	i2___lbmod@divisor^0,c
  4683   000DE0  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4684   000DE2  ECE3  F00B         	call	i2___lbmod
  4685   000DE6  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  4686                           
  4687                           ;LibLCDXC9.h: 165: EnviaDato(centena+48);
  4688   000DE8  500A               	movf	i2EscribeLCD_n8@centena^0,w,c
  4689   000DEA  0F30               	addlw	48
  4690   000DEC  ECD9  F00A         	call	i2_EnviaDato
  4691                           
  4692                           ;LibLCDXC9.h: 166: HabilitaLCD();
  4693   000DF0  EC7F  F00C         	call	i2_HabilitaLCD	;wreg free
  4694                           
  4695                           ;LibLCDXC9.h: 167: RetardoLCD(4);
  4696   000DF4  0E04               	movlw	4
  4697   000DF6  EC66  F00A         	call	i2_RetardoLCD
  4698                           
  4699                           ;LibLCDXC9.h: 168: EnviaDato(decena+48);
  4700   000DFA  500B               	movf	i2EscribeLCD_n8@decena^0,w,c
  4701   000DFC  0F30               	addlw	48
  4702   000DFE  ECD9  F00A         	call	i2_EnviaDato
  4703                           
  4704                           ;LibLCDXC9.h: 169: HabilitaLCD();
  4705   000E02  EC7F  F00C         	call	i2_HabilitaLCD	;wreg free
  4706                           
  4707                           ;LibLCDXC9.h: 170: RetardoLCD(4);
  4708   000E06  0E04               	movlw	4
  4709   000E08  EC66  F00A         	call	i2_RetardoLCD
  4710                           
  4711                           ;LibLCDXC9.h: 171: EnviaDato(unidad+48);
  4712   000E0C  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  4713   000E0E  0F30               	addlw	48
  4714   000E10  ECD9  F00A         	call	i2_EnviaDato
  4715                           
  4716                           ;LibLCDXC9.h: 172: HabilitaLCD();
  4717   000E14  EC7F  F00C         	call	i2_HabilitaLCD	;wreg free
  4718                           
  4719                           ;LibLCDXC9.h: 173: RetardoLCD(4);
  4720   000E18  0E04               	movlw	4
  4721   000E1A  EC66  F00A         	call	i2_RetardoLCD
  4722                           
  4723                           ;LibLCDXC9.h: 174: break;
  4724   000E1E  0012               	return	
  4725   000E20                     i2l2345:
  4726   000E20  5009               	movf	i2EscribeLCD_n8@b^0,w,c
  4727                           
  4728                           ; Switch size 1, requested type "simple"
  4729                           ; Number of cases is 3, Range of values is 1 to 3
  4730                           ; switch strategies available:
  4731                           ; Name         Instructions Cycles
  4732                           ; simple_byte           10     6 (average)
  4733                           ;	Chosen strategy is simple_byte
  4734   000E22  0A01               	xorlw	1	; case 1
  4735   000E24  B4D8               	btfsc	status,2,c
  4736   000E26  D797               	goto	i2l2313
  4737   000E28  0A03               	xorlw	3	; case 2
  4738   000E2A  B4D8               	btfsc	status,2,c
  4739   000E2C  D7A4               	goto	i2l2319
  4740   000E2E  0A01               	xorlw	1	; case 3
  4741   000E30  A4D8               	btfss	status,2,c
  4742   000E32  0012               	return	
  4743   000E34  D7C3               	goto	i2l2329
  4744   000E36                     __end_ofi2_EscribeLCD_n8:
  4745                           	callstack 0
  4746                           
  4747 ;; *************** function i2___lbmod *****************
  4748 ;; Defined at:
  4749 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbmod.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;  dividend        1    wreg     unsigned char 
  4752 ;;  divisor         1    0[COMRAM] unsigned char 
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;  dividend        1    1[COMRAM] unsigned char 
  4755 ;;  rem             1    3[COMRAM] unsigned char 
  4756 ;;  counter         1    2[COMRAM] unsigned char 
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  1    wreg      unsigned char 
  4759 ;; Registers used:
  4760 ;;		wreg, status,2, status,0
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4766 ;;      Params:         1       0       0       0       0       0       0       0       0
  4767 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4768 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4769 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4770 ;;Total ram usage:        4 bytes
  4771 ;; Hardware stack levels used: 1
  4772 ;; This function calls:
  4773 ;;		Nothing
  4774 ;; This function is called by:
  4775 ;;		i2_EscribeLCD_n8
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           	psect	text32
  4780   0017C6                     __ptext32:
  4781                           	callstack 0
  4782   0017C6                     i2___lbmod:
  4783                           	callstack 22
  4784                           
  4785                           ;incstack = 0
  4786                           ;i2___lbmod@dividend stored from wreg
  4787   0017C6  6E02               	movwf	i2___lbmod@dividend^0,c
  4788   0017C8  0E08               	movlw	8
  4789   0017CA  6E03               	movwf	i2___lbmod@counter^0,c
  4790   0017CC  6A04               	clrf	i2___lbmod@rem^0,c
  4791   0017CE                     i2l2245:
  4792   0017CE  90D8               	bcf	status,0,c
  4793   0017D0  3402               	rlcf	i2___lbmod@dividend^0,w,c
  4794   0017D2  3404               	rlcf	i2___lbmod@rem^0,w,c
  4795   0017D4  6E04               	movwf	i2___lbmod@rem^0,c
  4796   0017D6  90D8               	bcf	status,0,c
  4797   0017D8  3602               	rlcf	i2___lbmod@dividend^0,f,c
  4798   0017DA  5001               	movf	i2___lbmod@divisor^0,w,c
  4799   0017DC  5C04               	subwf	i2___lbmod@rem^0,w,c
  4800   0017DE  A0D8               	btfss	status,0,c
  4801   0017E0  D002               	goto	i2l2253
  4802   0017E2  5001               	movf	i2___lbmod@divisor^0,w,c
  4803   0017E4  5E04               	subwf	i2___lbmod@rem^0,f,c
  4804   0017E6                     i2l2253:
  4805   0017E6  2E03               	decfsz	i2___lbmod@counter^0,f,c
  4806   0017E8  D7F2               	goto	i2l2245
  4807   0017EA  5004               	movf	i2___lbmod@rem^0,w,c
  4808   0017EC  0012               	return		;funcret
  4809   0017EE                     __end_ofi2___lbmod:
  4810                           	callstack 0
  4811                           
  4812 ;; *************** function i2___lbdiv *****************
  4813 ;; Defined at:
  4814 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbdiv.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;  dividend        1    wreg     unsigned char 
  4817 ;;  divisor         1    4[COMRAM] unsigned char 
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;  dividend        1    5[COMRAM] unsigned char 
  4820 ;;  quotient        1    7[COMRAM] unsigned char 
  4821 ;;  counter         1    6[COMRAM] unsigned char 
  4822 ;; Return value:  Size  Location     Type
  4823 ;;                  1    wreg      unsigned char 
  4824 ;; Registers used:
  4825 ;;		wreg, status,2, status,0
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4831 ;;      Params:         1       0       0       0       0       0       0       0       0
  4832 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4833 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4834 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4835 ;;Total ram usage:        4 bytes
  4836 ;; Hardware stack levels used: 1
  4837 ;; This function calls:
  4838 ;;		Nothing
  4839 ;; This function is called by:
  4840 ;;		i2_EscribeLCD_n8
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           
  4844                           	psect	text33
  4845   0016A4                     __ptext33:
  4846                           	callstack 0
  4847   0016A4                     i2___lbdiv:
  4848                           	callstack 22
  4849                           
  4850                           ;incstack = 0
  4851                           ;i2___lbdiv@dividend stored from wreg
  4852   0016A4  6E06               	movwf	i2___lbdiv@dividend^0,c
  4853   0016A6  6A08               	clrf	i2___lbdiv@quotient^0,c
  4854   0016A8  5005               	movf	i2___lbdiv@divisor^0,w,c
  4855   0016AA  B4D8               	btfsc	status,2,c
  4856   0016AC  D015               	goto	i2l2237
  4857   0016AE  0E01               	movlw	1
  4858   0016B0  6E07               	movwf	i2___lbdiv@counter^0,c
  4859   0016B2  D003               	goto	i2l2225
  4860   0016B4                     i2l2221:
  4861   0016B4  90D8               	bcf	status,0,c
  4862   0016B6  3605               	rlcf	i2___lbdiv@divisor^0,f,c
  4863   0016B8  2A07               	incf	i2___lbdiv@counter^0,f,c
  4864   0016BA                     i2l2225:
  4865   0016BA  AE05               	btfss	i2___lbdiv@divisor^0,7,c
  4866   0016BC  D7FB               	goto	i2l2221
  4867   0016BE                     i2u106_40:
  4868   0016BE  90D8               	bcf	status,0,c
  4869   0016C0  3608               	rlcf	i2___lbdiv@quotient^0,f,c
  4870   0016C2  5005               	movf	i2___lbdiv@divisor^0,w,c
  4871   0016C4  5C06               	subwf	i2___lbdiv@dividend^0,w,c
  4872   0016C6  A0D8               	btfss	status,0,c
  4873   0016C8  D003               	goto	i2l2233
  4874   0016CA  5005               	movf	i2___lbdiv@divisor^0,w,c
  4875   0016CC  5E06               	subwf	i2___lbdiv@dividend^0,f,c
  4876   0016CE  8008               	bsf	i2___lbdiv@quotient^0,0,c
  4877   0016D0                     i2l2233:
  4878   0016D0  90D8               	bcf	status,0,c
  4879   0016D2  3205               	rrcf	i2___lbdiv@divisor^0,f,c
  4880   0016D4  2E07               	decfsz	i2___lbdiv@counter^0,f,c
  4881   0016D6  D7F3               	goto	i2u106_40
  4882   0016D8                     i2l2237:
  4883   0016D8  5008               	movf	i2___lbdiv@quotient^0,w,c
  4884   0016DA  0012               	return		;funcret
  4885   0016DC                     __end_ofi2___lbdiv:
  4886                           	callstack 0
  4887                           
  4888 ;; *************** function _borrarTexto *****************
  4889 ;; Defined at:
  4890 ;;		line 174 in file "PruebaLCD.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;		None
  4893 ;; Auto vars:     Size  Location     Type
  4894 ;;		None
  4895 ;; Return value:  Size  Location     Type
  4896 ;;                  1    wreg      void 
  4897 ;; Registers used:
  4898 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4899 ;; Tracked objects:
  4900 ;;		On entry : 0/0
  4901 ;;		On exit  : 0/0
  4902 ;;		Unchanged: 0/0
  4903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4904 ;;      Params:         0       0       0       0       0       0       0       0       0
  4905 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4906 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4907 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4908 ;;Total ram usage:        0 bytes
  4909 ;; Hardware stack levels used: 1
  4910 ;; Hardware stack levels required when called: 4
  4911 ;; This function calls:
  4912 ;;		i2_BorraLCD
  4913 ;;		i2_DireccionaLCD
  4914 ;;		i2_MensajeLCD_Var
  4915 ;; This function is called by:
  4916 ;;		_ok
  4917 ;;		_ISR
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text34
  4922   0016DC                     __ptext34:
  4923                           	callstack 0
  4924   0016DC                     _borrarTexto:
  4925                           	callstack 19
  4926                           
  4927                           ;PruebaLCD.c: 175: if(flagEscribir == 1){
  4928                           
  4929                           ;incstack = 0
  4930   0016DC  043E               	decf	_flagEscribir^0,w,c
  4931   0016DE  103F               	iorwf	(_flagEscribir+1)^0,w,c
  4932   0016E0  A4D8               	btfss	status,2,c
  4933   0016E2  0012               	return	
  4934                           
  4935                           ;PruebaLCD.c: 176: BorraLCD();
  4936   0016E4  EC6E  F00C         	call	i2_BorraLCD	;wreg free
  4937                           
  4938                           ;PruebaLCD.c: 177: MensajeLCD_Var("Piezas a Contar: ");
  4939   0016E8  0E01               	movlw	low STR_2
  4940   0016EA  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  4941   0016EC  ECF7  F00B         	call	i2_MensajeLCD_Var	;wreg free
  4942                           
  4943                           ;PruebaLCD.c: 178: DireccionaLCD(0xC0);
  4944   0016F0  0EC0               	movlw	192
  4945   0016F2  EC4E  F00C         	call	i2_DireccionaLCD
  4946                           
  4947                           ;PruebaLCD.c: 179: flagEscribir=1;
  4948   0016F6  0E00               	movlw	0
  4949   0016F8  6E3F               	movwf	(_flagEscribir+1)^0,c
  4950   0016FA  0E01               	movlw	1
  4951   0016FC  6E3E               	movwf	_flagEscribir^0,c
  4952                           
  4953                           ;PruebaLCD.c: 180: cuenObj=0;
  4954   0016FE  0E00               	movlw	0
  4955   001700  6E29               	movwf	(_cuenObj+1)^0,c
  4956   001702  0E00               	movlw	0
  4957   001704  6E28               	movwf	_cuenObj^0,c
  4958                           
  4959                           ;PruebaLCD.c: 181: flagDig=0;
  4960   001706  0E00               	movlw	0
  4961   001708  6E3D               	movwf	(_flagDig+1)^0,c
  4962   00170A  0E00               	movlw	0
  4963   00170C  6E3C               	movwf	_flagDig^0,c
  4964   00170E  0012               	return		;funcret
  4965   001710                     __end_of_borrarTexto:
  4966                           	callstack 0
  4967                           
  4968 ;; *************** function _luzFondo *****************
  4969 ;; Defined at:
  4970 ;;		line 106 in file "PruebaLCD.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;		None
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;		None
  4975 ;; Return value:  Size  Location     Type
  4976 ;;                  1    wreg      void 
  4977 ;; Registers used:
  4978 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4984 ;;      Params:         0       0       0       0       0       0       0       0       0
  4985 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4986 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4987 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4988 ;;Total ram usage:        0 bytes
  4989 ;; Hardware stack levels used: 1
  4990 ;; Hardware stack levels required when called: 1
  4991 ;; This function calls:
  4992 ;;		___wmul
  4993 ;; This function is called by:
  4994 ;;		_ISR
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           	psect	text35
  4999   001710                     __ptext35:
  5000                           	callstack 0
  5001   001710                     _luzFondo:
  5002                           	callstack 23
  5003                           
  5004                           ;PruebaLCD.c: 107: flagLuz*=-1;
  5005                           
  5006                           ;incstack = 0
  5007   001710  C042  F001         	movff	_flagLuz,___wmul@multiplier
  5008   001714  C043  F002         	movff	_flagLuz+1,___wmul@multiplier+1
  5009   001718  0EFF               	movlw	255
  5010   00171A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5011   00171C  6803               	setf	___wmul@multiplicand^0,c
  5012   00171E  EC0B  F00C         	call	___wmul	;wreg free
  5013   001722  C001  F042         	movff	?___wmul,_flagLuz
  5014   001726  C002  F043         	movff	?___wmul+1,_flagLuz+1
  5015                           
  5016                           ;PruebaLCD.c: 108: if(flagLuz==1)LATA3=1;
  5017   00172A  0442               	decf	_flagLuz^0,w,c
  5018   00172C  1043               	iorwf	(_flagLuz+1)^0,w,c
  5019   00172E  A4D8               	btfss	status,2,c
  5020   001730  D002               	goto	i2l2673
  5021   001732  8689               	bsf	3977,3,c	;volatile
  5022   001734  0012               	return	
  5023   001736                     i2l2673:
  5024                           
  5025                           ;PruebaLCD.c: 109: else if(flagLuz==-1)LATA3=0;
  5026   001736  2842               	incf	_flagLuz^0,w,c
  5027   001738  E104               	bnz	i2l241
  5028   00173A  2843               	incf	(_flagLuz+1)^0,w,c
  5029   00173C  A4D8               	btfss	status,2,c
  5030   00173E  0012               	return	
  5031   001740  9689               	bcf	3977,3,c	;volatile
  5032   001742                     i2l241:
  5033   001742  0012               	return		;funcret
  5034   001744                     __end_of_luzFondo:
  5035                           	callstack 0
  5036                           
  5037 ;; *************** function ___wmul *****************
  5038 ;; Defined at:
  5039 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\Umul16.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;  multiplier      2    0[COMRAM] unsigned int 
  5042 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;  product         2    4[COMRAM] unsigned int 
  5045 ;; Return value:  Size  Location     Type
  5046 ;;                  2    0[COMRAM] unsigned int 
  5047 ;; Registers used:
  5048 ;;		wreg, status,2, status,0, prodl, prodh
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/0
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5054 ;;      Params:         4       0       0       0       0       0       0       0       0
  5055 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5056 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5057 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5058 ;;Total ram usage:        6 bytes
  5059 ;; Hardware stack levels used: 1
  5060 ;; This function calls:
  5061 ;;		Nothing
  5062 ;; This function is called by:
  5063 ;;		_luzFondo
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           	psect	text36
  5068   001816                     __ptext36:
  5069                           	callstack 0
  5070   001816                     ___wmul:
  5071                           	callstack 23
  5072                           
  5073                           ;incstack = 0
  5074   001816  5001               	movf	___wmul@multiplier^0,w,c
  5075   001818  0203               	mulwf	___wmul@multiplicand^0,c
  5076   00181A  CFF3 F005          	movff	prodl,___wmul@product
  5077   00181E  CFF4 F006          	movff	prodh,___wmul@product+1
  5078   001822  5001               	movf	___wmul@multiplier^0,w,c
  5079   001824  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  5080   001826  50F3               	movf	243,w,c
  5081   001828  2606               	addwf	(___wmul@product+1)^0,f,c
  5082   00182A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  5083   00182C  0203               	mulwf	___wmul@multiplicand^0,c
  5084   00182E  50F3               	movf	243,w,c
  5085   001830  2606               	addwf	(___wmul@product+1)^0,f,c
  5086   001832  C005  F001         	movff	___wmul@product,?___wmul
  5087   001836  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5088   00183A  0012               	return		;funcret
  5089   00183C                     __end_of___wmul:
  5090                           	callstack 0
  5091                           
  5092 ;; *************** function _fin *****************
  5093 ;; Defined at:
  5094 ;;		line 283 in file "PruebaLCD.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;		None
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;		None
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  1    wreg      void 
  5101 ;; Registers used:
  5102 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5108 ;;      Params:         0       0       0       0       0       0       0       0       0
  5109 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5110 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5111 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5112 ;;Total ram usage:        0 bytes
  5113 ;; Hardware stack levels used: 1
  5114 ;; Hardware stack levels required when called: 4
  5115 ;; This function calls:
  5116 ;;		i2_BorraLCD
  5117 ;;		i2_DireccionaLCD
  5118 ;;		i2_MensajeLCD_Var
  5119 ;; This function is called by:
  5120 ;;		_ISR
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124                           	psect	text37
  5125   0015F8                     __ptext37:
  5126                           	callstack 0
  5127   0015F8                     _fin:
  5128                           	callstack 20
  5129                           
  5130                           ;PruebaLCD.c: 284: cuenta=cuenObj;
  5131                           
  5132                           ;incstack = 0
  5133   0015F8  C028  F032         	movff	_cuenObj,_cuenta
  5134   0015FC  C029  F033         	movff	_cuenObj+1,_cuenta+1
  5135                           
  5136                           ;PruebaLCD.c: 285: BorraLCD();
  5137   001600  EC6E  F00C         	call	i2_BorraLCD	;wreg free
  5138                           
  5139                           ;PruebaLCD.c: 286: MensajeLCD_Var("Fin de Cuenta");
  5140   001604  0E22               	movlw	low STR_10
  5141   001606  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  5142   001608  ECF7  F00B         	call	i2_MensajeLCD_Var	;wreg free
  5143                           
  5144                           ;PruebaLCD.c: 287: DireccionaLCD(0xC0);
  5145   00160C  0EC0               	movlw	192
  5146   00160E  EC4E  F00C         	call	i2_DireccionaLCD
  5147                           
  5148                           ;PruebaLCD.c: 288: MensajeLCD_Var("Presione OK");
  5149   001612  0E30               	movlw	low STR_11
  5150   001614  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  5151   001616  ECF7  F00B         	call	i2_MensajeLCD_Var	;wreg free
  5152                           
  5153                           ;PruebaLCD.c: 289: flagFin=1;
  5154   00161A  0E00               	movlw	0
  5155   00161C  6E37               	movwf	(_flagFin+1)^0,c
  5156   00161E  0E01               	movlw	1
  5157   001620  6E36               	movwf	_flagFin^0,c
  5158                           
  5159                           ;PruebaLCD.c: 290: flagDig=0;
  5160   001622  0E00               	movlw	0
  5161   001624  6E3D               	movwf	(_flagDig+1)^0,c
  5162   001626  0E00               	movlw	0
  5163   001628  6E3C               	movwf	_flagDig^0,c
  5164                           
  5165                           ;PruebaLCD.c: 291: flagCont=0;
  5166   00162A  0E00               	movlw	0
  5167   00162C  6E35               	movwf	(_flagCont+1)^0,c
  5168   00162E  0E00               	movlw	0
  5169   001630  6E34               	movwf	_flagCont^0,c
  5170   001632  0012               	return		;funcret
  5171   001634                     __end_of_fin:
  5172                           	callstack 0
  5173                           
  5174 ;; *************** function i2_MensajeLCD_Var *****************
  5175 ;; Defined at:
  5176 ;;		line 234 in file "LibLCDXC9.h"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;  a               1    5[COMRAM] PTR unsigned char 
  5179 ;;		 -> STR_16(12), STR_15(14), STR_14(11), STR_13(9), 
  5180 ;;		 -> STR_12(11), STR_11(12), STR_10(14), STR_9(11), 
  5181 ;;		 -> STR_8(9), STR_7(18), STR_6(18), STR_5(15), 
  5182 ;;		 -> STR_4(11), STR_3(9), STR_2(18), STR_1(12), 
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;		None
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  1    wreg      void 
  5187 ;; Registers used:
  5188 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5194 ;;      Params:         1       0       0       0       0       0       0       0       0
  5195 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5196 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5197 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5198 ;;Total ram usage:        1 bytes
  5199 ;; Hardware stack levels used: 1
  5200 ;; Hardware stack levels required when called: 3
  5201 ;; This function calls:
  5202 ;;		i2_EscribeLCD_c
  5203 ;; This function is called by:
  5204 ;;		_ok
  5205 ;;		_borrarTexto
  5206 ;;		_parEmerg
  5207 ;;		_reiCon
  5208 ;;		_fin
  5209 ;;		i2_contador
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           	psect	text38
  5214   0017EE                     __ptext38:
  5215                           	callstack 0
  5216   0017EE                     i2_MensajeLCD_Var:
  5217                           	callstack 20
  5218                           
  5219                           ;LibLCDXC9.h: 238: while(*a != '\0'){
  5220                           
  5221                           ;incstack = 0
  5222   0017EE  D009               	goto	i2l2353
  5223   0017F0                     i2l2349:
  5224                           
  5225                           ;LibLCDXC9.h: 239: EscribeLCD_c(*a);
  5226   0017F0  C006  FFF6         	movff	i2MensajeLCD_Var@a,tblptrl
  5227   0017F4                     	if	1	;There is more than 1 active tblptr byte
  5228   0017F4  0E08               	movlw	high __smallconst
  5229   0017F6  6EF7               	movwf	tblptrh,c
  5230   0017F8                     	endif
  5231   0017F8                     	if	0	;tblptru may be non-zero
  5232   0017F8                     	endif
  5233   0017F8                     	if	0	;tblptru may be non-zero
  5234   0017F8                     	endif
  5235   0017F8  0008               	tblrd		*
  5236   0017FA  50F5               	movf	tablat,w,c
  5237   0017FC  EC59  F00C         	call	i2_EscribeLCD_c
  5238                           
  5239                           ;LibLCDXC9.h: 240: a++;
  5240   001800  2A06               	incf	i2MensajeLCD_Var@a^0,f,c
  5241   001802                     i2l2353:
  5242   001802  C006  FFF6         	movff	i2MensajeLCD_Var@a,tblptrl
  5243   001806                     	if	1	;There is more than 1 active tblptr byte
  5244   001806  0E08               	movlw	high __smallconst
  5245   001808  6EF7               	movwf	tblptrh,c
  5246   00180A                     	endif
  5247   00180A                     	if	0	;tblptru may be non-zero
  5248   00180A                     	endif
  5249   00180A                     	if	0	;tblptru may be non-zero
  5250   00180A                     	endif
  5251   00180A  0008               	tblrd		*
  5252   00180C  50F5               	movf	tablat,w,c
  5253   00180E  0900               	iorlw	0
  5254   001810  B4D8               	btfsc	status,2,c
  5255   001812  0012               	return	
  5256   001814  D7ED               	goto	i2l2349
  5257   001816                     __end_ofi2_MensajeLCD_Var:
  5258                           	callstack 0
  5259                           
  5260 ;; *************** function i2_DireccionaLCD *****************
  5261 ;; Defined at:
  5262 ;;		line 243 in file "LibLCDXC9.h"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;  a               1    wreg     unsigned char 
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;  a               1    4[COMRAM] unsigned char 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      void 
  5269 ;; Registers used:
  5270 ;;		wreg, status,2, status,0, cstack
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5276 ;;      Params:         0       0       0       0       0       0       0       0       0
  5277 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5279 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5280 ;;Total ram usage:        1 bytes
  5281 ;; Hardware stack levels used: 1
  5282 ;; Hardware stack levels required when called: 2
  5283 ;; This function calls:
  5284 ;;		i2_EnviaDato
  5285 ;;		i2_HabilitaLCD
  5286 ;;		i2_RetardoLCD
  5287 ;; This function is called by:
  5288 ;;		_ok
  5289 ;;		_borrarTexto
  5290 ;;		_reiCon
  5291 ;;		_fin
  5292 ;;		i2_contador
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296                           	psect	text39
  5297   00189C                     __ptext39:
  5298                           	callstack 0
  5299   00189C                     i2_DireccionaLCD:
  5300                           	callstack 21
  5301                           
  5302                           ;incstack = 0
  5303                           ;i2DireccionaLCD@a stored from wreg
  5304   00189C  6E05               	movwf	i2DireccionaLCD@a^0,c
  5305                           
  5306                           ;LibLCDXC9.h: 246: LATA4=0;
  5307   00189E  9889               	bcf	3977,4,c	;volatile
  5308                           
  5309                           ;LibLCDXC9.h: 247: EnviaDato(a);
  5310   0018A0  5005               	movf	i2DireccionaLCD@a^0,w,c
  5311   0018A2  ECD9  F00A         	call	i2_EnviaDato
  5312                           
  5313                           ;LibLCDXC9.h: 248: HabilitaLCD();
  5314   0018A6  EC7F  F00C         	call	i2_HabilitaLCD	;wreg free
  5315                           
  5316                           ;LibLCDXC9.h: 249: RetardoLCD(4);
  5317   0018AA  0E04               	movlw	4
  5318   0018AC  EC66  F00A         	call	i2_RetardoLCD
  5319   0018B0  0012               	return		;funcret
  5320   0018B2                     __end_ofi2_DireccionaLCD:
  5321                           	callstack 0
  5322                           
  5323 ;; *************** function i2_BorraLCD *****************
  5324 ;; Defined at:
  5325 ;;		line 107 in file "LibLCDXC9.h"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;		None
  5328 ;; Auto vars:     Size  Location     Type
  5329 ;;		None
  5330 ;; Return value:  Size  Location     Type
  5331 ;;                  1    wreg      void 
  5332 ;; Registers used:
  5333 ;;		wreg, status,2, status,0, cstack
  5334 ;; Tracked objects:
  5335 ;;		On entry : 0/0
  5336 ;;		On exit  : 0/0
  5337 ;;		Unchanged: 0/0
  5338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5339 ;;      Params:         0       0       0       0       0       0       0       0       0
  5340 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5341 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5342 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5343 ;;Total ram usage:        0 bytes
  5344 ;; Hardware stack levels used: 1
  5345 ;; Hardware stack levels required when called: 2
  5346 ;; This function calls:
  5347 ;;		i2_EnviaDato
  5348 ;;		i2_HabilitaLCD
  5349 ;;		i2_RetardoLCD
  5350 ;; This function is called by:
  5351 ;;		_ok
  5352 ;;		_borrarTexto
  5353 ;;		_parEmerg
  5354 ;;		_reiCon
  5355 ;;		_fin
  5356 ;;		i2_contador
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           	psect	text40
  5361   0018DC                     __ptext40:
  5362                           	callstack 0
  5363   0018DC                     i2_BorraLCD:
  5364                           	callstack 21
  5365                           
  5366                           ;LibLCDXC9.h: 109: LATA4=0;
  5367                           
  5368                           ;incstack = 0
  5369   0018DC  9889               	bcf	3977,4,c	;volatile
  5370                           
  5371                           ;LibLCDXC9.h: 110: EnviaDato(0x01);
  5372   0018DE  0E01               	movlw	1
  5373   0018E0  ECD9  F00A         	call	i2_EnviaDato
  5374                           
  5375                           ;LibLCDXC9.h: 111: HabilitaLCD();
  5376   0018E4  EC7F  F00C         	call	i2_HabilitaLCD	;wreg free
  5377                           
  5378                           ;LibLCDXC9.h: 112: RetardoLCD(2);
  5379   0018E8  0E02               	movlw	2
  5380   0018EA  EC66  F00A         	call	i2_RetardoLCD
  5381   0018EE  0012               	return		;funcret
  5382   0018F0                     __end_ofi2_BorraLCD:
  5383                           	callstack 0
  5384                           
  5385 ;; *************** function _escribirDig *****************
  5386 ;; Defined at:
  5387 ;;		line 112 in file "PruebaLCD.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;  lectura         1    wreg     unsigned char 
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;  lectura         1    5[COMRAM] unsigned char 
  5392 ;; Return value:  Size  Location     Type
  5393 ;;                  2  243[None  ] int 
  5394 ;; Registers used:
  5395 ;;		wreg, status,2, status,0, cstack
  5396 ;; Tracked objects:
  5397 ;;		On entry : 0/0
  5398 ;;		On exit  : 0/0
  5399 ;;		Unchanged: 0/0
  5400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5401 ;;      Params:         0       0       0       0       0       0       0       0       0
  5402 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5403 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5404 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5405 ;;Total ram usage:        1 bytes
  5406 ;; Hardware stack levels used: 1
  5407 ;; Hardware stack levels required when called: 3
  5408 ;; This function calls:
  5409 ;;		i2_EscribeLCD_c
  5410 ;; This function is called by:
  5411 ;;		_ISR
  5412 ;; This function uses a non-reentrant model
  5413 ;;
  5414                           
  5415                           	psect	text41
  5416   001522                     __ptext41:
  5417                           	callstack 0
  5418   001522                     _escribirDig:
  5419                           	callstack 21
  5420                           
  5421                           ;incstack = 0
  5422                           ;escribirDig@lectura stored from wreg
  5423   001522  6E06               	movwf	escribirDig@lectura^0,c
  5424                           
  5425                           ;PruebaLCD.c: 113: if(flagEscribir == 1){
  5426   001524  043E               	decf	_flagEscribir^0,w,c
  5427   001526  103F               	iorwf	(_flagEscribir+1)^0,w,c
  5428   001528  A4D8               	btfss	status,2,c
  5429   00152A  0012               	return	
  5430                           
  5431                           ;PruebaLCD.c: 114: if(flagDig==0){
  5432   00152C  503C               	movf	_flagDig^0,w,c
  5433   00152E  103D               	iorwf	(_flagDig+1)^0,w,c
  5434   001530  A4D8               	btfss	status,2,c
  5435   001532  D00C               	goto	i2l2691
  5436                           
  5437                           ;PruebaLCD.c: 115: d=lectura;
  5438   001534  C006  F02E         	movff	escribirDig@lectura,_d
  5439   001538  6A2F               	clrf	(_d+1)^0,c
  5440                           
  5441                           ;PruebaLCD.c: 116: EscribeLCD_c(d+ '0');
  5442   00153A  502E               	movf	_d^0,w,c
  5443   00153C  0F30               	addlw	48
  5444   00153E  EC59  F00C         	call	i2_EscribeLCD_c
  5445                           
  5446                           ;PruebaLCD.c: 117: flagDig=1;
  5447   001542  0E00               	movlw	0
  5448   001544  6E3D               	movwf	(_flagDig+1)^0,c
  5449   001546  0E01               	movlw	1
  5450   001548  6E3C               	movwf	_flagDig^0,c
  5451   00154A  0012               	return	
  5452   00154C                     i2l2691:
  5453                           
  5454                           ;PruebaLCD.c: 120: else if (flagDig==1){
  5455   00154C  043C               	decf	_flagDig^0,w,c
  5456   00154E  103D               	iorwf	(_flagDig+1)^0,w,c
  5457   001550  A4D8               	btfss	status,2,c
  5458   001552  0012               	return	
  5459                           
  5460                           ;PruebaLCD.c: 121: u=lectura;
  5461   001554  C006  F030         	movff	escribirDig@lectura,_u
  5462   001558  6A31               	clrf	(_u+1)^0,c
  5463                           
  5464                           ;PruebaLCD.c: 122: EscribeLCD_c(u+ '0');
  5465   00155A  5030               	movf	_u^0,w,c
  5466   00155C  0F30               	addlw	48
  5467   00155E  EC59  F00C         	call	i2_EscribeLCD_c
  5468                           
  5469                           ;PruebaLCD.c: 123: flagDig=2;
  5470   001562  0E00               	movlw	0
  5471   001564  6E3D               	movwf	(_flagDig+1)^0,c
  5472   001566  0E02               	movlw	2
  5473   001568  6E3C               	movwf	_flagDig^0,c
  5474   00156A  0012               	return		;funcret
  5475   00156C                     __end_of_escribirDig:
  5476                           	callstack 0
  5477                           
  5478 ;; *************** function i2_EscribeLCD_c *****************
  5479 ;; Defined at:
  5480 ;;		line 131 in file "LibLCDXC9.h"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;  a               1    wreg     unsigned char 
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;  a               1    4[COMRAM] unsigned char 
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  1    wreg      void 
  5487 ;; Registers used:
  5488 ;;		wreg, status,2, status,0, cstack
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5494 ;;      Params:         0       0       0       0       0       0       0       0       0
  5495 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5496 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5497 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5498 ;;Total ram usage:        1 bytes
  5499 ;; Hardware stack levels used: 1
  5500 ;; Hardware stack levels required when called: 2
  5501 ;; This function calls:
  5502 ;;		i2_EnviaDato
  5503 ;;		i2_HabilitaLCD
  5504 ;;		i2_RetardoLCD
  5505 ;; This function is called by:
  5506 ;;		_escribirDig
  5507 ;;		i2_MensajeLCD_Var
  5508 ;; This function uses a non-reentrant model
  5509 ;;
  5510                           
  5511                           	psect	text42
  5512   0018B2                     __ptext42:
  5513                           	callstack 0
  5514   0018B2                     i2_EscribeLCD_c:
  5515                           	callstack 20
  5516                           
  5517                           ;incstack = 0
  5518                           ;i2EscribeLCD_c@a stored from wreg
  5519   0018B2  6E05               	movwf	i2EscribeLCD_c@a^0,c
  5520                           
  5521                           ;LibLCDXC9.h: 135: LATA4=1;
  5522   0018B4  8889               	bsf	3977,4,c	;volatile
  5523                           
  5524                           ;LibLCDXC9.h: 136: EnviaDato(a);
  5525   0018B6  5005               	movf	i2EscribeLCD_c@a^0,w,c
  5526   0018B8  ECD9  F00A         	call	i2_EnviaDato
  5527                           
  5528                           ;LibLCDXC9.h: 137: HabilitaLCD();
  5529   0018BC  EC7F  F00C         	call	i2_HabilitaLCD	;wreg free
  5530                           
  5531                           ;LibLCDXC9.h: 138: RetardoLCD(4);
  5532   0018C0  0E04               	movlw	4
  5533   0018C2  EC66  F00A         	call	i2_RetardoLCD
  5534   0018C6  0012               	return		;funcret
  5535   0018C8                     __end_ofi2_EscribeLCD_c:
  5536                           	callstack 0
  5537                           
  5538 ;; *************** function i2_EnviaDato *****************
  5539 ;; Defined at:
  5540 ;;		line 54 in file "LibLCDXC9.h"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;  a               1    wreg     unsigned char 
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;  a               1    3[COMRAM] unsigned char 
  5545 ;; Return value:  Size  Location     Type
  5546 ;;                  1    wreg      void 
  5547 ;; Registers used:
  5548 ;;		wreg, status,2, status,0, cstack
  5549 ;; Tracked objects:
  5550 ;;		On entry : 0/0
  5551 ;;		On exit  : 0/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5554 ;;      Params:         0       0       0       0       0       0       0       0       0
  5555 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5556 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5557 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5558 ;;Total ram usage:        2 bytes
  5559 ;; Hardware stack levels used: 1
  5560 ;; Hardware stack levels required when called: 1
  5561 ;; This function calls:
  5562 ;;		i2_HabilitaLCD
  5563 ;;		i2_RetardoLCD
  5564 ;; This function is called by:
  5565 ;;		i2_BorraLCD
  5566 ;;		i2_EscribeLCD_c
  5567 ;;		i2_EscribeLCD_n8
  5568 ;;		i2_DireccionaLCD
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           	psect	text43
  5573   0015B2                     __ptext43:
  5574                           	callstack 0
  5575   0015B2                     i2_EnviaDato:
  5576                           	callstack 20
  5577                           
  5578                           ;incstack = 0
  5579                           ;i2EnviaDato@a stored from wreg
  5580   0015B2  6E04               	movwf	i2EnviaDato@a^0,c
  5581                           
  5582                           ;LibLCDXC9.h: 55: if(interfaz==4){
  5583   0015B4  0E04               	movlw	4
  5584   0015B6  1844               	xorwf	_interfaz^0,w,c
  5585   0015B8  A4D8               	btfss	status,2,c
  5586   0015BA  D017               	goto	i2l2203
  5587                           
  5588                           ;LibLCDXC9.h: 56: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  5589   0015BC  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  5590   0015C0  0EF0               	movlw	240
  5591   0015C2  1603               	andwf	??i2_EnviaDato^0,f,c
  5592   0015C4  508C               	movf	140,w,c	;volatile
  5593   0015C6  0B0F               	andlw	15
  5594   0015C8  1003               	iorwf	??i2_EnviaDato^0,w,c
  5595   0015CA  6E8C               	movwf	140,c	;volatile
  5596                           
  5597                           ;LibLCDXC9.h: 57: HabilitaLCD();
  5598   0015CC  EC7F  F00C         	call	i2_HabilitaLCD	;wreg free
  5599                           
  5600                           ;LibLCDXC9.h: 58: RetardoLCD(1);
  5601   0015D0  0E01               	movlw	1
  5602   0015D2  EC66  F00A         	call	i2_RetardoLCD
  5603                           
  5604                           ;LibLCDXC9.h: 59: LATD=(LATD & 0b00001111) | (a<<4);
  5605   0015D6  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  5606   0015DA  3A03               	swapf	??i2_EnviaDato^0,f,c
  5607   0015DC  0EF0               	movlw	240
  5608   0015DE  1603               	andwf	??i2_EnviaDato^0,f,c
  5609   0015E0  508C               	movf	140,w,c	;volatile
  5610   0015E2  0B0F               	andlw	15
  5611   0015E4  1003               	iorwf	??i2_EnviaDato^0,w,c
  5612   0015E6  6E8C               	movwf	140,c	;volatile
  5613                           
  5614                           ;LibLCDXC9.h: 62: }else if(interfaz==8){
  5615   0015E8  0012               	return	
  5616   0015EA                     i2l2203:
  5617   0015EA  0E08               	movlw	8
  5618   0015EC  1844               	xorwf	_interfaz^0,w,c
  5619   0015EE  A4D8               	btfss	status,2,c
  5620   0015F0  0012               	return	
  5621                           
  5622                           ;LibLCDXC9.h: 63: LATD=a;
  5623   0015F2  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  5624   0015F6  0012               	return		;funcret
  5625   0015F8                     __end_ofi2_EnviaDato:
  5626                           	callstack 0
  5627                           
  5628 ;; *************** function i2_RetardoLCD *****************
  5629 ;; Defined at:
  5630 ;;		line 287 in file "LibLCDXC9.h"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;  a               1    wreg     unsigned char 
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;  a               1    1[COMRAM] unsigned char 
  5635 ;; Return value:  Size  Location     Type
  5636 ;;                  1    wreg      void 
  5637 ;; Registers used:
  5638 ;;		wreg, status,2, status,0
  5639 ;; Tracked objects:
  5640 ;;		On entry : 0/0
  5641 ;;		On exit  : 0/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5644 ;;      Params:         0       0       0       0       0       0       0       0       0
  5645 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5646 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5647 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5648 ;;Total ram usage:        2 bytes
  5649 ;; Hardware stack levels used: 1
  5650 ;; This function calls:
  5651 ;;		Nothing
  5652 ;; This function is called by:
  5653 ;;		i2_EnviaDato
  5654 ;;		i2_BorraLCD
  5655 ;;		i2_EscribeLCD_c
  5656 ;;		i2_EscribeLCD_n8
  5657 ;;		i2_DireccionaLCD
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           	psect	text44
  5662   0014CC                     __ptext44:
  5663                           	callstack 0
  5664   0014CC                     i2_RetardoLCD:
  5665                           	callstack 21
  5666                           
  5667                           ;incstack = 0
  5668                           ;i2RetardoLCD@a stored from wreg
  5669   0014CC  6E02               	movwf	i2RetardoLCD@a^0,c
  5670                           
  5671                           ;LibLCDXC9.h: 288: switch(a){
  5672   0014CE  D01B               	goto	i2l2191
  5673   0014D0                     i2l2181:
  5674   0014D0  0E05               	movlw	5
  5675   0014D2  6E01               	movwf	??i2_RetardoLCD^0,c
  5676   0014D4  0EDE               	movlw	222
  5677   0014D6                     i2u200_47:
  5678   0014D6  2EE8               	decfsz	wreg,f,c
  5679   0014D8  D7FE               	bra	i2u200_47
  5680   0014DA  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  5681   0014DC  D7FC               	bra	i2u200_47
  5682                           
  5683                           ;LibLCDXC9.h: 291: break;
  5684   0014DE  0012               	return	
  5685   0014E0                     i2l2183:
  5686   0014E0  0E53               	movlw	83
  5687   0014E2                     i2u201_47:
  5688   0014E2  2EE8               	decfsz	wreg,f,c
  5689   0014E4  D7FE               	bra	i2u201_47
  5690   0014E6  0000               	nop	
  5691                           
  5692                           ;LibLCDXC9.h: 293: _delay((unsigned long)((640)*(1000000/4000000.0)));
  5693   0014E8  0E35               	movlw	53
  5694   0014EA                     i2u202_47:
  5695   0014EA  2EE8               	decfsz	wreg,f,c
  5696   0014EC  D7FE               	bra	i2u202_47
  5697   0014EE  0000               	nop	
  5698                           
  5699                           ;LibLCDXC9.h: 295: break;
  5700   0014F0  0012               	return	
  5701   0014F2                     i2l2185:
  5702   0014F2  0E08               	movlw	8
  5703   0014F4                     i2u203_47:
  5704   0014F4  2EE8               	decfsz	wreg,f,c
  5705   0014F6  D7FE               	bra	i2u203_47
  5706   0014F8  0000               	nop	
  5707                           
  5708                           ;LibLCDXC9.h: 298: break;
  5709   0014FA  0012               	return	
  5710   0014FC                     i2l2187:
  5711   0014FC  0E03               	movlw	3
  5712   0014FE                     i2u204_47:
  5713   0014FE  2EE8               	decfsz	wreg,f,c
  5714   001500  D7FE               	bra	i2u204_47
  5715   001502  0000               	nop	
  5716                           
  5717                           ;LibLCDXC9.h: 301: break;
  5718   001504  0012               	return	
  5719   001506                     i2l2191:
  5720   001506  5002               	movf	i2RetardoLCD@a^0,w,c
  5721                           
  5722                           ; Switch size 1, requested type "simple"
  5723                           ; Number of cases is 4, Range of values is 1 to 4
  5724                           ; switch strategies available:
  5725                           ; Name         Instructions Cycles
  5726                           ; simple_byte           13     7 (average)
  5727                           ;	Chosen strategy is simple_byte
  5728   001508  0A01               	xorlw	1	; case 1
  5729   00150A  B4D8               	btfsc	status,2,c
  5730   00150C  D7E1               	goto	i2l2181
  5731   00150E  0A03               	xorlw	3	; case 2
  5732   001510  B4D8               	btfsc	status,2,c
  5733   001512  D7E6               	goto	i2l2183
  5734   001514  0A01               	xorlw	1	; case 3
  5735   001516  B4D8               	btfsc	status,2,c
  5736   001518  D7EC               	goto	i2l2185
  5737   00151A  0A07               	xorlw	7	; case 4
  5738   00151C  A4D8               	btfss	status,2,c
  5739   00151E  0012               	return	
  5740   001520  D7ED               	goto	i2l2187
  5741   001522                     __end_ofi2_RetardoLCD:
  5742                           	callstack 0
  5743                           
  5744 ;; *************** function i2_HabilitaLCD *****************
  5745 ;; Defined at:
  5746 ;;		line 100 in file "LibLCDXC9.h"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;		None
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;		None
  5751 ;; Return value:  Size  Location     Type
  5752 ;;                  1    wreg      void 
  5753 ;; Registers used:
  5754 ;;		wreg
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5760 ;;      Params:         0       0       0       0       0       0       0       0       0
  5761 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5762 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5763 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5764 ;;Total ram usage:        0 bytes
  5765 ;; Hardware stack levels used: 1
  5766 ;; This function calls:
  5767 ;;		Nothing
  5768 ;; This function is called by:
  5769 ;;		i2_EnviaDato
  5770 ;;		i2_BorraLCD
  5771 ;;		i2_EscribeLCD_c
  5772 ;;		i2_EscribeLCD_n8
  5773 ;;		i2_DireccionaLCD
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777                           	psect	text45
  5778   0018FE                     __ptext45:
  5779                           	callstack 0
  5780   0018FE                     i2_HabilitaLCD:
  5781                           	callstack 21
  5782                           
  5783                           ;LibLCDXC9.h: 102: LATA5=1;
  5784                           
  5785                           ;incstack = 0
  5786   0018FE  8A89               	bsf	3977,5,c	;volatile
  5787                           
  5788                           ;LibLCDXC9.h: 103: _delay((unsigned long)((40)*(1000000/4000000.0)));
  5789   001900  0E03               	movlw	3
  5790   001902                     i2u205_47:
  5791   001902  2EE8               	decfsz	wreg,f,c
  5792   001904  D7FE               	bra	i2u205_47
  5793   001906  0000               	nop	
  5794                           
  5795                           ;LibLCDXC9.h: 105: LATA5=0;
  5796   001908  9A89               	bcf	3977,5,c	;volatile
  5797   00190A  0012               	return		;funcret
  5798   00190C                     __end_ofi2_HabilitaLCD:
  5799                           	callstack 0
  5800                           
  5801                           	psect	rparam
  5802   000001                     ___rparam_used  equ	1
  5803   000000                     ___param_bank   equ	0
  5804   000000                     __Lparam        equ	__Lrparam
  5805   000000                     __Hparam        equ	__Hrparam
  5806                           
  5807                           	psect	temp
  5808   000045                     btemp:
  5809                           	callstack 0
  5810   000045                     	ds	1
  5811   000045                     int$flags       set	btemp
  5812   000046                     wtemp8          set	btemp+1
  5813   000046                     ttemp5          set	btemp+1
  5814   000049                     ttemp6          set	btemp+4
  5815   00004D                     ttemp7          set	btemp+8
  5816                           
  5817                           	psect	idloc
  5818                           
  5819                           ;Config register IDLOC0 @ 0x200000
  5820                           ;	unspecified, using default values
  5821   200000                     	org	2097152
  5822   200000  FF                 	db	255
  5823                           
  5824                           ;Config register IDLOC1 @ 0x200001
  5825                           ;	unspecified, using default values
  5826   200001                     	org	2097153
  5827   200001  FF                 	db	255
  5828                           
  5829                           ;Config register IDLOC2 @ 0x200002
  5830                           ;	unspecified, using default values
  5831   200002                     	org	2097154
  5832   200002  FF                 	db	255
  5833                           
  5834                           ;Config register IDLOC3 @ 0x200003
  5835                           ;	unspecified, using default values
  5836   200003                     	org	2097155
  5837   200003  FF                 	db	255
  5838                           
  5839                           ;Config register IDLOC4 @ 0x200004
  5840                           ;	unspecified, using default values
  5841   200004                     	org	2097156
  5842   200004  FF                 	db	255
  5843                           
  5844                           ;Config register IDLOC5 @ 0x200005
  5845                           ;	unspecified, using default values
  5846   200005                     	org	2097157
  5847   200005  FF                 	db	255
  5848                           
  5849                           ;Config register IDLOC6 @ 0x200006
  5850                           ;	unspecified, using default values
  5851   200006                     	org	2097158
  5852   200006  FF                 	db	255
  5853                           
  5854                           ;Config register IDLOC7 @ 0x200007
  5855                           ;	unspecified, using default values
  5856   200007                     	org	2097159
  5857   200007  FF                 	db	255
  5858                           
  5859                           	psect	config
  5860                           
  5861                           ;Config register CONFIG1L @ 0x300000
  5862                           ;	unspecified, using default values
  5863                           ;	PLL Prescaler Selection bits
  5864                           ;	PLLDIV = 0x0, unprogrammed default
  5865                           ;	System Clock Postscaler Selection bits
  5866                           ;	CPUDIV = 0x0, unprogrammed default
  5867                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5868                           ;	USBDIV = 0x0, unprogrammed default
  5869   300000                     	org	3145728
  5870   300000  00                 	db	0
  5871                           
  5872                           ;Config register CONFIG1H @ 0x300001
  5873                           ;	Oscillator Selection bits
  5874                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  5875                           ;	Fail-Safe Clock Monitor Enable bit
  5876                           ;	FCMEN = 0x0, unprogrammed default
  5877                           ;	Internal/External Oscillator Switchover bit
  5878                           ;	IESO = 0x0, unprogrammed default
  5879   300001                     	org	3145729
  5880   300001  09                 	db	9
  5881                           
  5882                           ;Config register CONFIG2L @ 0x300002
  5883                           ;	unspecified, using default values
  5884                           ;	Power-up Timer Enable bit
  5885                           ;	PWRT = 0x1, unprogrammed default
  5886                           ;	Brown-out Reset Enable bits
  5887                           ;	BOR = 0x3, unprogrammed default
  5888                           ;	Brown-out Reset Voltage bits
  5889                           ;	BORV = 0x3, unprogrammed default
  5890                           ;	USB Voltage Regulator Enable bit
  5891                           ;	VREGEN = 0x0, unprogrammed default
  5892   300002                     	org	3145730
  5893   300002  1F                 	db	31
  5894                           
  5895                           ;Config register CONFIG2H @ 0x300003
  5896                           ;	Watchdog Timer Enable bit
  5897                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5898                           ;	Watchdog Timer Postscale Select bits
  5899                           ;	WDTPS = 0xF, unprogrammed default
  5900   300003                     	org	3145731
  5901   300003  1E                 	db	30
  5902                           
  5903                           ; Padding undefined space
  5904   300004                     	org	3145732
  5905   300004  FF                 	db	255
  5906                           
  5907                           ;Config register CONFIG3H @ 0x300005
  5908                           ;	CCP2 MUX bit
  5909                           ;	CCP2MX = 0x1, unprogrammed default
  5910                           ;	PORTB A/D Enable bit
  5911                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5912                           ;	Low-Power Timer 1 Oscillator Enable bit
  5913                           ;	LPT1OSC = 0x0, unprogrammed default
  5914                           ;	MCLR Pin Enable bit
  5915                           ;	MCLRE = 0x1, unprogrammed default
  5916   300005                     	org	3145733
  5917   300005  81                 	db	129
  5918                           
  5919                           ;Config register CONFIG4L @ 0x300006
  5920                           ;	Stack Full/Underflow Reset Enable bit
  5921                           ;	STVREN = 0x1, unprogrammed default
  5922                           ;	Single-Supply ICSP Enable bit
  5923                           ;	LVP = OFF, Single-Supply ICSP disabled
  5924                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5925                           ;	ICPRT = 0x0, unprogrammed default
  5926                           ;	Extended Instruction Set Enable bit
  5927                           ;	XINST = 0x0, unprogrammed default
  5928                           ;	Background Debugger Enable bit
  5929                           ;	DEBUG = 0x1, unprogrammed default
  5930   300006                     	org	3145734
  5931   300006  81                 	db	129
  5932                           
  5933                           ; Padding undefined space
  5934   300007                     	org	3145735
  5935   300007  FF                 	db	255
  5936                           
  5937                           ;Config register CONFIG5L @ 0x300008
  5938                           ;	unspecified, using default values
  5939                           ;	Code Protection bit
  5940                           ;	CP0 = 0x1, unprogrammed default
  5941                           ;	Code Protection bit
  5942                           ;	CP1 = 0x1, unprogrammed default
  5943                           ;	Code Protection bit
  5944                           ;	CP2 = 0x1, unprogrammed default
  5945                           ;	Code Protection bit
  5946                           ;	CP3 = 0x1, unprogrammed default
  5947   300008                     	org	3145736
  5948   300008  0F                 	db	15
  5949                           
  5950                           ;Config register CONFIG5H @ 0x300009
  5951                           ;	unspecified, using default values
  5952                           ;	Boot Block Code Protection bit
  5953                           ;	CPB = 0x1, unprogrammed default
  5954                           ;	Data EEPROM Code Protection bit
  5955                           ;	CPD = 0x1, unprogrammed default
  5956   300009                     	org	3145737
  5957   300009  C0                 	db	192
  5958                           
  5959                           ;Config register CONFIG6L @ 0x30000A
  5960                           ;	unspecified, using default values
  5961                           ;	Write Protection bit
  5962                           ;	WRT0 = 0x1, unprogrammed default
  5963                           ;	Write Protection bit
  5964                           ;	WRT1 = 0x1, unprogrammed default
  5965                           ;	Write Protection bit
  5966                           ;	WRT2 = 0x1, unprogrammed default
  5967                           ;	Write Protection bit
  5968                           ;	WRT3 = 0x1, unprogrammed default
  5969   30000A                     	org	3145738
  5970   30000A  0F                 	db	15
  5971                           
  5972                           ;Config register CONFIG6H @ 0x30000B
  5973                           ;	unspecified, using default values
  5974                           ;	Configuration Register Write Protection bit
  5975                           ;	WRTC = 0x1, unprogrammed default
  5976                           ;	Boot Block Write Protection bit
  5977                           ;	WRTB = 0x1, unprogrammed default
  5978                           ;	Data EEPROM Write Protection bit
  5979                           ;	WRTD = 0x1, unprogrammed default
  5980   30000B                     	org	3145739
  5981   30000B  E0                 	db	224
  5982                           
  5983                           ;Config register CONFIG7L @ 0x30000C
  5984                           ;	unspecified, using default values
  5985                           ;	Table Read Protection bit
  5986                           ;	EBTR0 = 0x1, unprogrammed default
  5987                           ;	Table Read Protection bit
  5988                           ;	EBTR1 = 0x1, unprogrammed default
  5989                           ;	Table Read Protection bit
  5990                           ;	EBTR2 = 0x1, unprogrammed default
  5991                           ;	Table Read Protection bit
  5992                           ;	EBTR3 = 0x1, unprogrammed default
  5993   30000C                     	org	3145740
  5994   30000C  0F                 	db	15
  5995                           
  5996                           ;Config register CONFIG7H @ 0x30000D
  5997                           ;	unspecified, using default values
  5998                           ;	Boot Block Table Read Protection bit
  5999                           ;	EBTRB = 0x1, unprogrammed default
  6000   30000D                     	org	3145741
  6001   30000D  40                 	db	64
  6002                           tosu	equ	0xFFF
  6003                           tosh	equ	0xFFE
  6004                           tosl	equ	0xFFD
  6005                           stkptr	equ	0xFFC
  6006                           pclatu	equ	0xFFB
  6007                           pclath	equ	0xFFA
  6008                           pcl	equ	0xFF9
  6009                           tblptru	equ	0xFF8
  6010                           tblptrh	equ	0xFF7
  6011                           tblptrl	equ	0xFF6
  6012                           tablat	equ	0xFF5
  6013                           prodh	equ	0xFF4
  6014                           prodl	equ	0xFF3
  6015                           indf0	equ	0xFEF
  6016                           postinc0	equ	0xFEE
  6017                           postdec0	equ	0xFED
  6018                           preinc0	equ	0xFEC
  6019                           plusw0	equ	0xFEB
  6020                           fsr0h	equ	0xFEA
  6021                           fsr0l	equ	0xFE9
  6022                           wreg	equ	0xFE8
  6023                           indf1	equ	0xFE7
  6024                           postinc1	equ	0xFE6
  6025                           postdec1	equ	0xFE5
  6026                           preinc1	equ	0xFE4
  6027                           plusw1	equ	0xFE3
  6028                           fsr1h	equ	0xFE2
  6029                           fsr1l	equ	0xFE1
  6030                           bsr	equ	0xFE0
  6031                           indf2	equ	0xFDF
  6032                           postinc2	equ	0xFDE
  6033                           postdec2	equ	0xFDD
  6034                           preinc2	equ	0xFDC
  6035                           plusw2	equ	0xFDB
  6036                           fsr2h	equ	0xFDA
  6037                           fsr2l	equ	0xFD9
  6038                           status	equ	0xFD8

Data Sizes:
    Strings     102
    Constant    0
    Data        3
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      68
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[12]), STR_10(CODE[14]), STR_11(CODE[12]), STR_12(CODE[11]), 
		 -> STR_13(CODE[9]), STR_14(CODE[11]), STR_15(CODE[14]), STR_16(CODE[12]), 
		 -> STR_2(CODE[18]), STR_3(CODE[9]), STR_4(CODE[11]), STR_5(CODE[15]), 
		 -> STR_6(CODE[18]), STR_7(CODE[18]), STR_8(CODE[9]), STR_9(CODE[11]), 


Critical Paths under _main in COMRAM

    _contador->_EscribeLCD_n8
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _EscribeLCD_n8->___lbdiv
    ___lbdiv->___lbmod
    _DireccionaLCD->_EnviaDato
    _InicializaLCD->_EnviaDato
    _CaracterQbert->_ComandoLCD
    _CaracterCara->_ComandoLCD
    _ComandoLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->_ok
    _reiCon->i2_EscribeLCD_n8
    _parEmerg->i2_MensajeLCD_Var
    _ok->i2_EscribeLCD_n8
    i2_contador->i2_EscribeLCD_n8
    i2_EscribeLCD_n8->i2___lbdiv
    i2___lbdiv->i2___lbmod
    _borrarTexto->i2_MensajeLCD_Var
    _luzFondo->___wmul
    _fin->i2_MensajeLCD_Var
    i2_MensajeLCD_Var->i2_EscribeLCD_c
    i2_DireccionaLCD->i2_EnviaDato
    i2_BorraLCD->i2_EnviaDato
    _escribirDig->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2793
                                             35 COMRAM     2     2      0
                           _BorraLCD
                       _CaracterCara
                      _CaracterQbert
                       _ConfiguraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                     _MensajeLCD_Var
                           _contador
 ---------------------------------------------------------------------------------
 (1) _contador                                             0     0      0    1662
                           _BorraLCD
                      _DireccionaLCD
                      _EscribeLCD_n8
                     _MensajeLCD_Var
                                _RGB
                                _SEG
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     298
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     302
                                             22 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _SEG                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RGB                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Var                                       1     0      1     141
                                             27 COMRAM     1     0      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0      90
                                             26 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_n8                                        5     4      1     756
                                             30 COMRAM     5     4      1
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     172
                                             22 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     173
                                             26 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0      90
                                             26 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CaracterQbert                                        0     0      0     270
                         _ComandoLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _CaracterCara                                         0     0      0     270
                         _ComandoLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _ComandoLCD                                           1     1      0     195
                                             26 COMRAM     1     1      0
                           _BorraLCD
                      _CursorAInicio
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _CursorAInicio                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      60
                                             24 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      15
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  7     7      0    7173
                                             15 COMRAM     7     7      0
                        _borrarTexto
                        _escribirDig
                                _fin
                           _luzFondo
                                 _ok
                           _parEmerg
                             _reiCon
 ---------------------------------------------------------------------------------
 (7) _reiCon                                               0     0      0    1382
                         i2_BorraLCD
                    i2_DireccionaLCD
                    i2_EscribeLCD_n8
                   i2_MensajeLCD_Var
                              i2_RGB
                              i2_SEG
 ---------------------------------------------------------------------------------
 (7) _parEmerg                                             0     0      0     378
                         i2_BorraLCD
                   i2_MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (7) _ok                                                   2     2      0    3916
                                             13 COMRAM     2     2      0
                        _borrarTexto
                         i2_BorraLCD
                    i2_DireccionaLCD
                    i2_EscribeLCD_n8
                   i2_MensajeLCD_Var
                              i2_RGB
                              i2_SEG
                         i2_contador
 ---------------------------------------------------------------------------------
 (8) i2_contador                                           0     0      0    1982
                         i2_BorraLCD
                    i2_DireccionaLCD
                    i2_EscribeLCD_n8
                   i2_MensajeLCD_Var
                              i2_RGB
                              i2_SEG
                          i2___awdiv
                          i2___awmod
 ---------------------------------------------------------------------------------
 (9) i2___awmod                                            6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) i2___awdiv                                            8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) i2_SEG                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_RGB                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_EscribeLCD_n8                                      5     4      1     830
                                              8 COMRAM     5     4      1
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
                          i2___lbdiv
                          i2___lbmod
 ---------------------------------------------------------------------------------
 (9) i2___lbmod                                            4     3      1     172
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (9) i2___lbdiv                                            4     3      1     173
                                              4 COMRAM     4     3      1
                          i2___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (8) _borrarTexto                                          0     0      0     552
                         i2_BorraLCD
                    i2_DireccionaLCD
                   i2_MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (7) _luzFondo                                             0     0      0     161
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     161
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _fin                                                  0     0      0     552
                         i2_BorraLCD
                    i2_DireccionaLCD
                   i2_MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (8) i2_MensajeLCD_Var                                     1     0      1     233
                                              5 COMRAM     1     0      1
                     i2_EscribeLCD_c
 ---------------------------------------------------------------------------------
 (8) i2_DireccionaLCD                                      1     1      0     174
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_BorraLCD                                           0     0      0     145
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) _escribirDig                                          1     1      0     232
                                              5 COMRAM     1     1      0
                     i2_EscribeLCD_c
 ---------------------------------------------------------------------------------
 (9) i2_EscribeLCD_c                                       1     1      0     174
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (10) i2_EnviaDato                                         2     2      0     116
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (10) i2_RetardoLCD                                        2     2      0      29
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) i2_HabilitaLCD                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _CaracterCara
     _ComandoLCD
       _BorraLCD
       _CursorAInicio
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _CaracterQbert
     _ComandoLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _MensajeLCD_Var
     _EscribeLCD_c
   _contador
     _BorraLCD
     _DireccionaLCD
     _EscribeLCD_n8
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
       ___lbdiv
         ___lbmod (ARG)
       ___lbmod
     _MensajeLCD_Var
     _RGB
     _SEG
     ___awdiv
     ___awmod

 _ISR (ROOT)
   _borrarTexto
     i2_BorraLCD
       i2_EnviaDato
         i2_HabilitaLCD
         i2_RetardoLCD
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_DireccionaLCD
       i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_MensajeLCD_Var
       i2_EscribeLCD_c
         i2_EnviaDato
         i2_HabilitaLCD
         i2_RetardoLCD
   _escribirDig
     i2_EscribeLCD_c
   _fin
     i2_BorraLCD
     i2_DireccionaLCD
     i2_MensajeLCD_Var
   _luzFondo
     ___wmul
   _ok
     _borrarTexto
     i2_BorraLCD
     i2_DireccionaLCD
     i2_EscribeLCD_n8
       i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
       i2___lbdiv
         i2___lbmod (ARG)
       i2___lbmod
     i2_MensajeLCD_Var
     i2_RGB
     i2_SEG
     i2_contador
       i2_BorraLCD
       i2_DireccionaLCD
       i2_EscribeLCD_n8
       i2_MensajeLCD_Var
       i2_RGB
       i2_SEG
       i2___awdiv
       i2___awmod
   _parEmerg
     i2_BorraLCD
     i2_MensajeLCD_Var
   _reiCon
     i2_BorraLCD
     i2_DireccionaLCD
     i2_EscribeLCD_n8
     i2_MensajeLCD_Var
     i2_RGB
     i2_SEG

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITBIGSFRh         114      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     37      68     72.3%
BITBIGSFRll         33      0       0      0.0%
BITBIGSFRlh         11      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      68      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Aug 20 20:31:49 2024

                       _a 002C                         _b 002A                         _d 002E  
                       _u 0030          i2DireccionaLCD@a 0005          i2EscribeLCD_n8@a 000D  
        i2EscribeLCD_n8@b 0009              ___awdiv@sign 001C                EnviaDato@a 001A  
                      _ok 0B3E       ___wmul@multiplicand 0003              ?_borrarTexto 0001  
                     ?_ok 0001             _InicializaLCD 0FCE                       l264 0F00  
                     _GIE 7F97                       _RB4 7C0C                       _RB5 7C0D  
                     _RB6 7C0E                       _RB7 7C0F                       _RGB 116E  
                     u610 186A                       _ISR 0008                       _SEG 190C  
                     _fin 15F8              ___awmod@sign 001C                       wreg 0FE8  
                    ??_ok 000E                      ?_RGB 0001                      ?_ISR 0001  
                    ?_SEG 0001          ??i2_EscribeLCD_c 0005              ?_escribirDig 0001  
                    l1111 147A                      l1113 148A                      l1121 14B0  
                    l1115 149C                      l1117 14A6                      l1147 15A4  
                    l1443 1764                      l1531 11B0                      l1523 118E  
                    l1701 101C                      l1439 1754                      l1535 11C2  
                    l1527 119E                      l1519 117E                      l1721 1054  
                    l2265 167C                      l2281 16A0                      l2521 108C  
                    l2451 0C90                      l1539 11D4                      l2515 107C  
                    l2277 1698                      l2269 1682                      l2461 0CD6  
                    l2445 0C70                      l2527 10A2                      l2543 10D4  
                    ?_fin 0001                      l1681 0FE0                      l2297 17BE  
                    l2289 17A6                      l2481 1778                      l2529 10AA  
                    l1691 0FFE                      l2547 10E2                      l2539 10CA  
                    l2563 1360                      l2477 0D3A                      l2485 178A  
                    l2583 13A6                      l2575 138E                      l2567 136E  
                    l2559 1354                      l2569 1376                      l2579 1398  
                    l2877 0AA0                      STR_1 083C                      STR_2 0801  
                    STR_3 085E                      STR_4 0848                      STR_5 0813  
                    STR_6 0801                      STR_7 0801                      STR_8 085E  
                    STR_9 0848                      u1100 1686                      u1310 10AE  
                    _LATB 0F8A                      _LATD 0F8C                i2_contador 0F02  
                    u1370 137A                      u1817 0A02                      u1907 0B1E  
                    u1827 0A34                      u1917 0B32                      u1837 0A7A  
                    u1927 1480                      u1847 0AA8                      u1937 148C  
                    u1857 0ABC                      u1947 1494                      u1867 0AD0  
                    u1957 149E                      u1877 0AE4                      u1967 14A8  
                    u1887 0AF6                      _RBIE 7F93                      _RBIF 7F90  
                    u1977 18F4                      u1897 0B0A                      _RBPU 7F8F  
                    _TMR0 0FD6            ??_EscribeLCD_c 001B                      _main 09E4  
                    btemp 0045                      prodh 0FF4                      prodl 0FF3  
                    start 000E              ___param_bank 0000                     ??_RGB 0017  
                   ??_ISR 0010                     ??_SEG 0017                     ??_fin 0007  
         i2_DireccionaLCD 189C         ??i2_EscribeLCD_n8 000A            ?_InicializaLCD 0001  
                   ?_main 0001           __end_of___awdiv 10EC           __end_of___lbdiv 16A4  
                   STR_10 0822                     STR_11 0830                     STR_12 0853  
                   STR_13 085E                     STR_14 0848                     STR_15 0822  
                   STR_16 0830           __end_of___awmod 13B0                _ComandoLCD 1744  
           EscribeLCD_c@a 001B           __end_of___lbmod 17C6                     _T0CON 0FD5  
         ___awdiv@divisor 0019                     _LATA1 7C49                     _LATA3 7C4B  
                   _LATA4 7C4C                     _LATA5 7C4D                     _LATD1 7C61  
                   _LATE0 7C68                     _LATE1 7C69                     _LATE2 7C6A  
                   i2l311 08EE                     i2l303 08AC                     i2l241 1742  
                   i2l321 0940                     i2l313 08FE                     i2l305 08BC  
                   i2l331 098E                     i2l323 0950                     i2l315 090E  
                   i2l307 08CC                     i2l327 0970                     i2l319 0930  
                   i2l264 0FCC                     i2l328 099A                     i2l329 0980  
         ___awdiv@counter 001B                     i2_RGB 11E6                     i2_SEG 1912  
                   _PORTB 0F81                     _TRISA 0F92                     _TRISB 0F93  
                   _TRISD 0F95           ??_EscribeLCD_n8 0020                     _Tecla 0041  
             ?i2_BorraLCD 0001                     tablat 0FF5               _HabilitaLCD 18F0  
                   ttemp5 0046                     ttemp6 0049                     ttemp7 004D  
                   status 0FD8                     wtemp8 0046             i2___lbmod@rem 0004  
         ___lbdiv@divisor 001B           ___lbdiv@counter 001D          __end_of_BorraLCD 18DC  
         __initialization 1634              __end_of_main 0B3E             _CursorAInicio 191C  
        i2_MensajeLCD_Var 17EE                    ??_main 0024      __end_of_ConfiguraLCD 1870  
            _CaracterCara 12D0             __activetblptr 0002                    ?i2_RGB 0001  
                  ?i2_SEG 0001                    _ADCON1 0FC1            DireccionaLCD@a 001B  
          EscribeLCD_n8@a 0023            EscribeLCD_n8@b 001F          ___awdiv@dividend 0017  
             ?i2_contador 0001                    i2l2203 15EA                    i2l1331 1206  
                  i2l3003 09B0                    i2l2221 16B4                    i2l1343 123A  
                  i2l1335 1216                    i2l1327 11F6                    i2l2233 16D0  
                  i2l2225 16BA                    i2l2313 0D56                    i2l1347 124C  
                  i2l1339 1228                    i2l2403 1164                    i2l2181 14D0  
                  i2l2237 16D8                    i2l2253 17E6                    i2l2245 17CE  
                  i2l2183 14E0                    i2l2191 1506                    i2l2319 0D76  
                  i2l2431 13FC                    i2l2423 13DC                    i2l2415 13C2  
                  i2l2185 14F2                    i2l2353 1802                    i2l2329 0DBC  
                  i2l2345 0E20                    i2l2425 13E4                    i2l2187 14FC  
                  i2l2371 10FE                    i2l2435 1406                    i2l2419 13CE  
                  i2l2349 17F0                    i2l2383 1124                    i2l2439 1414  
                  i2l2385 112C                    i2l2377 110E                    i2l2395 114C  
                  i2l2399 1156                    i2l2727 0BDA                    i2l2673 1736  
                  i2l2737 0C0A                    i2l2691 154C                    i2l2763 0C64  
                  i2l2937 08DA                    i2l2957 091C                    i2l2977 095E  
                  _TMR0IE 7F95                    _TMR0IF 7F92                    _TMR0ON 7EAF  
                  _TRISC1 7CA1                    _TRISE0 7CB0                    _TRISE1 7CB1  
                  _TRISE2 7CB2     __end_of_DireccionaLCD 189C                _RetardoLCD 1476  
 __end_ofi2_DireccionaLCD 18B2      EscribeLCD_n8@centena 0020            ?_CursorAInicio 0001  
        __end_of_contador 0F02                    ___wmul 1816                 ??___awdiv 001B  
               ??___lbdiv 001C                 ??___awmod 001B                 ??___lbmod 0018  
        __end_of_parEmerg 1858           ??_InicializaLCD 001B                    _cuenta 0032  
                  _reiCon 141E                    clear_0 1658          ___awdiv@quotient 001D  
         ___awmod@divisor 0019                    isa$std 0001           ___awmod@counter 001B  
    __end_of_EscribeLCD_c 1886               ?_ComandoLCD 0001            i2___awdiv@sign 0006  
            ?i2_EnviaDato 0001          __end_of_luzFondo 1744              __pdataCOMRAM 0042  
       __end_ofi2___awdiv 116E         __end_ofi2___lbdiv 16DC         __end_ofi2___awmod 141E  
       __end_ofi2___lbmod 17EE              __mediumconst 0000                    tblptrh 0FF7  
                  tblptrl 0FF6                    tblptru 0FF8            i2___awmod@sign 0006  
        ___lbdiv@dividend 001C           ___lbmod@divisor 0017     __end_ofi2_HabilitaLCD 190C  
              __accesstop 0060   __end_of__initialization 165E           ___lbmod@counter 0019  
           ___rparam_used 0001             __end_ofi2_RGB 125E             __end_ofi2_SEG 1918  
          __pcstackCOMRAM 0001         __end_of_EnviaDato 15B2          ___lbdiv@quotient 001E  
              __end_of_ok 0C6A                   ??i2_RGB 0001                   ??i2_SEG 0001  
               ?_BorraLCD 0001            _MensajeLCD_Var 1776           MensajeLCD_Var@a 001C  
           _CaracterQbert 125E               ?_RetardoLCD 0001               RetardoLCD@a 0018  
         i2_EscribeLCD_n8 0D50           ??_CursorAInicio 0017          ?i2_DireccionaLCD 0001  
              _flagInicio 003A                   ?___wmul 0001                   ?_reiCon 0001  
            _flagEscribir 003E    __end_of_MensajeLCD_Var 179E              ??i2_BorraLCD 0005  
          _flagEmergencia 0038        escribirDig@lectura 0006                ??_BorraLCD 001B  
               ?_contador 0001            ?_CaracterQbert 0001  __end_ofi2_MensajeLCD_Var 1816  
               ?_parEmerg 0001              ?_HabilitaLCD 0001              _ConfiguraLCD 1858  
                 __Hparam 0000     i2EscribeLCD_n8@decena 000B                   __Lparam 0000  
               ?_luzFondo 0001                   ___awdiv 106A                   ___lbdiv 166C  
                 ___awmod 1342                   ___lbmod 179E     i2EscribeLCD_n8@unidad 000C  
            __psmallconst 0800        __end_ofi2_BorraLCD 18F0                   __pcinit 1634  
                 _flagDig 003C                   __ramtop 0800                   _flagFin 0036  
                 _flagLuz 0042                   __ptext0 09E4                   __ptext1 0E36  
                 __ptext2 1342                   __ptext3 106A                   __ptext4 190C  
                 __ptext5 116E                   __ptext6 1776                   __ptext7 1870  
                 __ptext8 0C6A                   __ptext9 179E                   _cuenObj 0028  
                 _cuenMos 0040          ___awmod@dividend 0017           ?_MensajeLCD_Var 001C  
   __end_of_EscribeLCD_n8 0D50            __pintcode_body 0868      end_of_initialization 165E  
            ??i2_contador 000E                ??_contador 0024   __end_ofi2_EscribeLCD_n8 0E36  
              ??_parEmerg 0007             __Lmediumconst 0000                   int_func 0868  
            _EscribeLCD_c 1870                ??_luzFondo 0007                   postinc0 0FEE  
               _PORTCbits 0F82              ??_ComandoLCD 001B        __end_ofi2_contador 0FCE  
        ___lbmod@dividend 0018           ??_CaracterQbert 001C           i2EscribeLCD_c@a 0005  
               i2___awdiv 10EC                 i2___lbdiv 16A4                 i2___awmod 13B0  
               i2___lbmod 17C6               ___lbmod@rem 001A             ?i2_RetardoLCD 0001  
      i2___awdiv@dividend 0001        __end_of_ComandoLCD 1776            __end_of___wmul 183C  
           __pidataCOMRAM 1918             ??_borrarTexto 0007     __end_of_InicializaLCD 106A  
          __end_of_reiCon 1476                 _EnviaDato 156C       start_initialization 1634  
      i2___awdiv@quotient 0007               __end_of_RGB 11E6               __end_of_ISR 09E4  
             __end_of_SEG 1912               __end_of_fin 1634                ?i2___awdiv 0001  
              ?i2___lbdiv 0005             ??_escribirDig 0006                ?i2___awmod 0001  
              ?i2___lbmod 0001          ?i2_EscribeLCD_n8 0009            ??i2_RetardoLCD 0001  
            ??_RetardoLCD 0017        i2___lbdiv@dividend 0006       EscribeLCD_n8@decena 0021  
                ??___wmul 0005       EscribeLCD_n8@unidad 0022                  ??_reiCon 000E  
              ?_EnviaDato 0001               __pbssCOMRAM 0026        __end_of_RetardoLCD 14CC  
      i2___lbdiv@quotient 0008       __end_of_borrarTexto 1710         ?i2_MensajeLCD_Var 0006  
      ??i2_MensajeLCD_Var 0007             _DireccionaLCD 1886       __end_of_escribirDig 156C  
          i2_EscribeLCD_c 18B2     __end_of_CursorAInicio 191E                 __pintcode 0008  
                ?___awdiv 0017                  ?___lbdiv 001B                  ?___awmod 0017  
                ?___lbmod 0017          ??_MensajeLCD_Var 001D             ?_CaracterCara 0001  
             __smallconst 0800               ??i2___awdiv 0005               ??i2___lbdiv 0006  
             ??i2___awmod 0005               ??i2___lbmod 0002            ___wmul@product 0005  
           i2_HabilitaLCD 18FE            ?_DireccionaLCD 0001    __end_ofi2_EscribeLCD_c 18C8  
                i2u200_47 14D6                  i2u201_47 14E2                  i2u106_40 16BE  
                i2u202_47 14EA                  i2u123_40 13E8                  i2u203_47 14F4  
                i2u204_47 14FE                  i2u117_40 1130                  i2u205_47 1902  
                i2u155_40 0B7C                  i2u156_40 0B8A                  i2u180_45 09C8  
                i2u179_40 09C6                  i2u198_47 09A4                  i2u199_47 0BF8  
          ??_CaracterCara 001C               _borrarTexto 16DC         ___wmul@multiplier 0001  
           ??i2_EnviaDato 0003      __end_ofi2_RetardoLCD 1522               ??_EnviaDato 0019  
       i2___awdiv@divisor 0003         i2___awdiv@counter 0005                  _BorraLCD 18C8  
             _escribirDig 1522        i2___awmod@dividend 0001            ?i2_HabilitaLCD 0001  
         ?i2_EscribeLCD_c 0001                  __Hrparam 0000         i2___lbdiv@divisor 0005  
  i2EscribeLCD_n8@centena 000A         i2___lbdiv@counter 0007                  __Lrparam 0000  
            i2EnviaDato@a 0004             ConfiguraLCD@a 0017         ??i2_DireccionaLCD 0005  
                _flagCont 0034                  __ptext10 166C                  __ptext11 1886  
                __ptext20 1476                  __ptext12 0FCE                  __ptext21 18F0  
                __ptext13 1858                  __ptext30 11E6                  __ptext14 125E  
                __ptext31 0D50                  __ptext23 141E                  __ptext15 12D0  
                __ptext40 18DC                  __ptext32 17C6                  __ptext24 183C  
                __ptext16 1744                  __ptext41 1522                  __ptext33 16A4  
                __ptext25 0B3E                  __ptext17 191C                  __ptext42 18B2  
                __ptext34 16DC                  __ptext26 0F02                  __ptext18 18C8  
                __ptext43 15B2                  __ptext35 1710                  __ptext27 13B0  
                __ptext19 156C                  __ptext44 14CC                  __ptext36 1816  
                __ptext28 10EC                  __ptext45 18FE                  __ptext37 15F8  
                __ptext29 1912                  __ptext38 17EE                  __ptext39 189C  
     __end_ofi2_EnviaDato 15F8                  _contador 0E36     __end_of_CaracterQbert 12D0  
      i2___lbmod@dividend 0002           ??_DireccionaLCD 001B                  _parEmerg 183C  
                _interfaz 0044                  _piezFalt 0026                  _luzFondo 1710  
                isa$xinst 0000                  int$flags 0045         i2___awmod@divisor 0003  
       i2___awmod@counter 0005             _EscribeLCD_n8 0C6A           ??i2_HabilitaLCD 0001  
                intlevel2 0000             ??_HabilitaLCD 0017               ComandoLCD@a 001B  
           ?_ConfiguraLCD 0001      __end_of_CaracterCara 1342         i2___lbmod@divisor 0001  
       i2___lbmod@counter 0003             i2RetardoLCD@a 0002               i2_EnviaDato 15B2  
          ?_EscribeLCD_n8 001F                i2_BorraLCD 18DC            ??_ConfiguraLCD 0017  
           ?_EscribeLCD_c 0001         i2MensajeLCD_Var@a 0006              i2_RetardoLCD 14CC  
     __end_of_HabilitaLCD 18FE  
