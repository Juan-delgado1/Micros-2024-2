

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Aug 17 21:38:59 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=1
    47                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63   000000                     
    64                           ; Generated 25/07/2024 GMT
    65                           ; 
    66                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F4550 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98   000FE0                     bsr             equ	4064
    99   000FE9                     fsr0            equ	4073
   100   000FEA                     fsr0h           equ	4074
   101   000FE9                     fsr0l           equ	4073
   102   000FE1                     fsr1            equ	4065
   103   000FE2                     fsr1h           equ	4066
   104   000FE1                     fsr1l           equ	4065
   105   000FD9                     fsr2            equ	4057
   106   000FDA                     fsr2h           equ	4058
   107   000FD9                     fsr2l           equ	4057
   108   000FEF                     indf0           equ	4079
   109   000FE7                     indf1           equ	4071
   110   000FDF                     indf2           equ	4063
   111   000FF2                     intcon          equ	4082
   112   000000                     nvmcon          equ	0
   113   000FF9                     pcl             equ	4089
   114   000FFA                     pclath          equ	4090
   115   000FFB                     pclatu          equ	4091
   116   000FEB                     plusw0          equ	4075
   117   000FE3                     plusw1          equ	4067
   118   000FDB                     plusw2          equ	4059
   119   000FED                     postdec0        equ	4077
   120   000FE5                     postdec1        equ	4069
   121   000FDD                     postdec2        equ	4061
   122   000FEE                     postinc0        equ	4078
   123   000FE6                     postinc1        equ	4070
   124   000FDE                     postinc2        equ	4062
   125   000FEC                     preinc0         equ	4076
   126   000FE4                     preinc1         equ	4068
   127   000FDC                     preinc2         equ	4060
   128   000FF3                     prod            equ	4083
   129   000FF4                     prodh           equ	4084
   130   000FF3                     prodl           equ	4083
   131   000FD8                     status          equ	4056
   132   000FF5                     tablat          equ	4085
   133   000FF6                     tblptr          equ	4086
   134   000FF7                     tblptrh         equ	4087
   135   000FF6                     tblptrl         equ	4086
   136   000FF8                     tblptru         equ	4088
   137   000FFD                     tosl            equ	4093
   138   000FE8                     wreg            equ	4072
   139   000F62                     SPPDATA         equ	3938	;# 
   140   000F63                     SPPCFG          equ	3939	;# 
   141   000F64                     SPPEPS          equ	3940	;# 
   142   000F65                     SPPCON          equ	3941	;# 
   143   000F66                     UFRM            equ	3942	;# 
   144   000F66                     UFRML           equ	3942	;# 
   145   000F67                     UFRMH           equ	3943	;# 
   146   000F68                     UIR             equ	3944	;# 
   147   000F69                     UIE             equ	3945	;# 
   148   000F6A                     UEIR            equ	3946	;# 
   149   000F6B                     UEIE            equ	3947	;# 
   150   000F6C                     USTAT           equ	3948	;# 
   151   000F6D                     UCON            equ	3949	;# 
   152   000F6E                     UADDR           equ	3950	;# 
   153   000F6F                     UCFG            equ	3951	;# 
   154   000F70                     UEP0            equ	3952	;# 
   155   000F71                     UEP1            equ	3953	;# 
   156   000F72                     UEP2            equ	3954	;# 
   157   000F73                     UEP3            equ	3955	;# 
   158   000F74                     UEP4            equ	3956	;# 
   159   000F75                     UEP5            equ	3957	;# 
   160   000F76                     UEP6            equ	3958	;# 
   161   000F77                     UEP7            equ	3959	;# 
   162   000F78                     UEP8            equ	3960	;# 
   163   000F79                     UEP9            equ	3961	;# 
   164   000F7A                     UEP10           equ	3962	;# 
   165   000F7B                     UEP11           equ	3963	;# 
   166   000F7C                     UEP12           equ	3964	;# 
   167   000F7D                     UEP13           equ	3965	;# 
   168   000F7E                     UEP14           equ	3966	;# 
   169   000F7F                     UEP15           equ	3967	;# 
   170   000F80                     PORTA           equ	3968	;# 
   171   000F81                     PORTB           equ	3969	;# 
   172   000F82                     PORTC           equ	3970	;# 
   173   000F83                     PORTD           equ	3971	;# 
   174   000F84                     PORTE           equ	3972	;# 
   175   000F89                     LATA            equ	3977	;# 
   176   000F8A                     LATB            equ	3978	;# 
   177   000F8B                     LATC            equ	3979	;# 
   178   000F8C                     LATD            equ	3980	;# 
   179   000F8D                     LATE            equ	3981	;# 
   180   000F92                     TRISA           equ	3986	;# 
   181   000F92                     DDRA            equ	3986	;# 
   182   000F93                     TRISB           equ	3987	;# 
   183   000F93                     DDRB            equ	3987	;# 
   184   000F94                     TRISC           equ	3988	;# 
   185   000F94                     DDRC            equ	3988	;# 
   186   000F95                     TRISD           equ	3989	;# 
   187   000F95                     DDRD            equ	3989	;# 
   188   000F96                     TRISE           equ	3990	;# 
   189   000F96                     DDRE            equ	3990	;# 
   190   000F9B                     OSCTUNE         equ	3995	;# 
   191   000F9D                     PIE1            equ	3997	;# 
   192   000F9E                     PIR1            equ	3998	;# 
   193   000F9F                     IPR1            equ	3999	;# 
   194   000FA0                     PIE2            equ	4000	;# 
   195   000FA1                     PIR2            equ	4001	;# 
   196   000FA2                     IPR2            equ	4002	;# 
   197   000FA6                     EECON1          equ	4006	;# 
   198   000FA7                     EECON2          equ	4007	;# 
   199   000FA8                     EEDATA          equ	4008	;# 
   200   000FA9                     EEADR           equ	4009	;# 
   201   000FAB                     RCSTA           equ	4011	;# 
   202   000FAB                     RCSTA1          equ	4011	;# 
   203   000FAC                     TXSTA           equ	4012	;# 
   204   000FAC                     TXSTA1          equ	4012	;# 
   205   000FAD                     TXREG           equ	4013	;# 
   206   000FAD                     TXREG1          equ	4013	;# 
   207   000FAE                     RCREG           equ	4014	;# 
   208   000FAE                     RCREG1          equ	4014	;# 
   209   000FAF                     SPBRG           equ	4015	;# 
   210   000FAF                     SPBRG1          equ	4015	;# 
   211   000FB0                     SPBRGH          equ	4016	;# 
   212   000FB1                     T3CON           equ	4017	;# 
   213   000FB2                     TMR3            equ	4018	;# 
   214   000FB2                     TMR3L           equ	4018	;# 
   215   000FB3                     TMR3H           equ	4019	;# 
   216   000FB4                     CMCON           equ	4020	;# 
   217   000FB5                     CVRCON          equ	4021	;# 
   218   000FB6                     ECCP1AS         equ	4022	;# 
   219   000FB6                     CCP1AS          equ	4022	;# 
   220   000FB7                     ECCP1DEL        equ	4023	;# 
   221   000FB7                     CCP1DEL         equ	4023	;# 
   222   000FB8                     BAUDCON         equ	4024	;# 
   223   000FB8                     BAUDCTL         equ	4024	;# 
   224   000FBA                     CCP2CON         equ	4026	;# 
   225   000FBB                     CCPR2           equ	4027	;# 
   226   000FBB                     CCPR2L          equ	4027	;# 
   227   000FBC                     CCPR2H          equ	4028	;# 
   228   000FBD                     CCP1CON         equ	4029	;# 
   229   000FBD                     ECCP1CON        equ	4029	;# 
   230   000FBE                     CCPR1           equ	4030	;# 
   231   000FBE                     CCPR1L          equ	4030	;# 
   232   000FBF                     CCPR1H          equ	4031	;# 
   233   000FC0                     ADCON2          equ	4032	;# 
   234   000FC1                     ADCON1          equ	4033	;# 
   235   000FC2                     ADCON0          equ	4034	;# 
   236   000FC3                     ADRES           equ	4035	;# 
   237   000FC3                     ADRESL          equ	4035	;# 
   238   000FC4                     ADRESH          equ	4036	;# 
   239   000FC5                     SSPCON2         equ	4037	;# 
   240   000FC6                     SSPCON1         equ	4038	;# 
   241   000FC7                     SSPSTAT         equ	4039	;# 
   242   000FC8                     SSPADD          equ	4040	;# 
   243   000FC9                     SSPBUF          equ	4041	;# 
   244   000FCA                     T2CON           equ	4042	;# 
   245   000FCB                     PR2             equ	4043	;# 
   246   000FCB                     MEMCON          equ	4043	;# 
   247   000FCC                     TMR2            equ	4044	;# 
   248   000FCD                     T1CON           equ	4045	;# 
   249   000FCE                     TMR1            equ	4046	;# 
   250   000FCE                     TMR1L           equ	4046	;# 
   251   000FCF                     TMR1H           equ	4047	;# 
   252   000FD0                     RCON            equ	4048	;# 
   253   000FD1                     WDTCON          equ	4049	;# 
   254   000FD2                     HLVDCON         equ	4050	;# 
   255   000FD2                     LVDCON          equ	4050	;# 
   256   000FD3                     OSCCON          equ	4051	;# 
   257   000FD5                     T0CON           equ	4053	;# 
   258   000FD6                     TMR0            equ	4054	;# 
   259   000FD6                     TMR0L           equ	4054	;# 
   260   000FD7                     TMR0H           equ	4055	;# 
   261   000FD8                     STATUS          equ	4056	;# 
   262   000FD9                     FSR2            equ	4057	;# 
   263   000FD9                     FSR2L           equ	4057	;# 
   264   000FDA                     FSR2H           equ	4058	;# 
   265   000FDB                     PLUSW2          equ	4059	;# 
   266   000FDC                     PREINC2         equ	4060	;# 
   267   000FDD                     POSTDEC2        equ	4061	;# 
   268   000FDE                     POSTINC2        equ	4062	;# 
   269   000FDF                     INDF2           equ	4063	;# 
   270   000FE0                     BSR             equ	4064	;# 
   271   000FE1                     FSR1            equ	4065	;# 
   272   000FE1                     FSR1L           equ	4065	;# 
   273   000FE2                     FSR1H           equ	4066	;# 
   274   000FE3                     PLUSW1          equ	4067	;# 
   275   000FE4                     PREINC1         equ	4068	;# 
   276   000FE5                     POSTDEC1        equ	4069	;# 
   277   000FE6                     POSTINC1        equ	4070	;# 
   278   000FE7                     INDF1           equ	4071	;# 
   279   000FE8                     WREG            equ	4072	;# 
   280   000FE9                     FSR0            equ	4073	;# 
   281   000FE9                     FSR0L           equ	4073	;# 
   282   000FEA                     FSR0H           equ	4074	;# 
   283   000FEB                     PLUSW0          equ	4075	;# 
   284   000FEC                     PREINC0         equ	4076	;# 
   285   000FED                     POSTDEC0        equ	4077	;# 
   286   000FEE                     POSTINC0        equ	4078	;# 
   287   000FEF                     INDF0           equ	4079	;# 
   288   000FF0                     INTCON3         equ	4080	;# 
   289   000FF1                     INTCON2         equ	4081	;# 
   290   000FF2                     INTCON          equ	4082	;# 
   291   000FF3                     PROD            equ	4083	;# 
   292   000FF3                     PRODL           equ	4083	;# 
   293   000FF4                     PRODH           equ	4084	;# 
   294   000FF5                     TABLAT          equ	4085	;# 
   295   000FF6                     TBLPTR          equ	4086	;# 
   296   000FF6                     TBLPTRL         equ	4086	;# 
   297   000FF7                     TBLPTRH         equ	4087	;# 
   298   000FF8                     TBLPTRU         equ	4088	;# 
   299   000FF9                     PCLAT           equ	4089	;# 
   300   000FF9                     PC              equ	4089	;# 
   301   000FF9                     PCL             equ	4089	;# 
   302   000FFA                     PCLATH          equ	4090	;# 
   303   000FFB                     PCLATU          equ	4091	;# 
   304   000FFC                     STKPTR          equ	4092	;# 
   305   000FFD                     TOS             equ	4093	;# 
   306   000FFD                     TOSL            equ	4093	;# 
   307   000FFE                     TOSH            equ	4094	;# 
   308   000FFF                     TOSU            equ	4095	;# 
   309                           
   310                           	psect	idataCOMRAM
   311   00188E                     __pidataCOMRAM:
   312                           	callstack 0
   313                           
   314                           ;initializer for _flagLuz
   315   00188E  FFFF               	dw	65535
   316                           
   317                           ;initializer for _interfaz
   318   001890  08                 	db	8
   319   007C61                     _LATD1          set	31841
   320   007C0F                     _RB7            set	31759
   321   007C0E                     _RB6            set	31758
   322   007C0D                     _RB5            set	31757
   323   007C0C                     _RB4            set	31756
   324   007C6A                     _LATE2          set	31850
   325   007C69                     _LATE1          set	31849
   326   007C68                     _LATE0          set	31848
   327   007C4B                     _LATA3          set	31819
   328   007C49                     _LATA1          set	31817
   329   007F97                     _GIE            set	32663
   330   007F93                     _RBIE           set	32659
   331   007F90                     _RBIF           set	32656
   332   007EAF                     _TMR0ON         set	32431
   333   007F95                     _TMR0IE         set	32661
   334   007F92                     _TMR0IF         set	32658
   335   007F8F                     _RBPU           set	32655
   336   007CB2                     _TRISE2         set	31922
   337   007CB1                     _TRISE1         set	31921
   338   007CB0                     _TRISE0         set	31920
   339   007CA1                     _TRISC1         set	31905
   340   007C4D                     _LATA5          set	31821
   341   007C4C                     _LATA4          set	31820
   342   000FD6                     _TMR0           set	4054
   343   000F8A                     _LATB           set	3978
   344   000F81                     _PORTB          set	3969
   345   000F82                     _PORTCbits      set	3970
   346   000FD5                     _T0CON          set	4053
   347   000F93                     _TRISB          set	3987
   348   000F92                     _TRISA          set	3986
   349   000F95                     _TRISD          set	3989
   350   000FC1                     _ADCON1         set	4033
   351   000F8C                     _LATD           set	3980
   352                           
   353                           	psect	smallconst
   354   000800                     __psmallconst:
   355                           	callstack 0
   356   000800  00                 	db	0
   357   000801                     STR_2:
   358   000801  50                 	db	80	;'P'
   359   000802  69                 	db	105	;'i'
   360   000803  65                 	db	101	;'e'
   361   000804  7A                 	db	122	;'z'
   362   000805  61                 	db	97	;'a'
   363   000806  73                 	db	115	;'s'
   364   000807  20                 	db	32
   365   000808  61                 	db	97	;'a'
   366   000809  20                 	db	32
   367   00080A  43                 	db	67	;'C'
   368   00080B  6F                 	db	111	;'o'
   369   00080C  6E                 	db	110	;'n'
   370   00080D  74                 	db	116	;'t'
   371   00080E  61                 	db	97	;'a'
   372   00080F  72                 	db	114	;'r'
   373   000810  3A                 	db	58	;':'
   374   000811  20                 	db	32
   375   000812  00                 	db	0
   376   000813                     STR_5:
   377   000813  56                 	db	86	;'V'
   378   000814  61                 	db	97	;'a'
   379   000815  6C                 	db	108	;'l'
   380   000816  6F                 	db	111	;'o'
   381   000817  72                 	db	114	;'r'
   382   000818  20                 	db	32
   383   000819  49                 	db	73	;'I'
   384   00081A  6E                 	db	110	;'n'
   385   00081B  76                 	db	118	;'v'
   386   00081C  61                 	db	97	;'a'
   387   00081D  6C                 	db	108	;'l'
   388   00081E  69                 	db	105	;'i'
   389   00081F  64                 	db	100	;'d'
   390   000820  6F                 	db	111	;'o'
   391   000821  00                 	db	0
   392   000822                     STR_10:
   393   000822  46                 	db	70	;'F'
   394   000823  69                 	db	105	;'i'
   395   000824  6E                 	db	110	;'n'
   396   000825  20                 	db	32
   397   000826  64                 	db	100	;'d'
   398   000827  65                 	db	101	;'e'
   399   000828  20                 	db	32
   400   000829  43                 	db	67	;'C'
   401   00082A  75                 	db	117	;'u'
   402   00082B  65                 	db	101	;'e'
   403   00082C  6E                 	db	110	;'n'
   404   00082D  74                 	db	116	;'t'
   405   00082E  61                 	db	97	;'a'
   406   00082F  00                 	db	0
   407   000830                     STR_11:
   408   000830  50                 	db	80	;'P'
   409   000831  72                 	db	114	;'r'
   410   000832  65                 	db	101	;'e'
   411   000833  73                 	db	115	;'s'
   412   000834  69                 	db	105	;'i'
   413   000835  6F                 	db	111	;'o'
   414   000836  6E                 	db	110	;'n'
   415   000837  65                 	db	101	;'e'
   416   000838  20                 	db	32
   417   000839  4F                 	db	79	;'O'
   418   00083A  4B                 	db	75	;'K'
   419   00083B  00                 	db	0
   420   00083C                     STR_1:
   421   00083C  42                 	db	66	;'B'
   422   00083D  69                 	db	105	;'i'
   423   00083E  65                 	db	101	;'e'
   424   00083F  6E                 	db	110	;'n'
   425   000840  76                 	db	118	;'v'
   426   000841  65                 	db	101	;'e'
   427   000842  6E                 	db	110	;'n'
   428   000843  69                 	db	105	;'i'
   429   000844  64                 	db	100	;'d'
   430   000845  6F                 	db	111	;'o'
   431   000846  73                 	db	115	;'s'
   432   000847  00                 	db	0
   433   000848                     STR_4:
   434   000848  4F                 	db	79	;'O'
   435   000849  62                 	db	98	;'b'
   436   00084A  6A                 	db	106	;'j'
   437   00084B  65                 	db	101	;'e'
   438   00084C  74                 	db	116	;'t'
   439   00084D  69                 	db	105	;'i'
   440   00084E  76                 	db	118	;'v'
   441   00084F  6F                 	db	111	;'o'
   442   000850  3A                 	db	58	;':'
   443   000851  20                 	db	32
   444   000852  00                 	db	0
   445   000853                     STR_12:
   446   000853  45                 	db	69	;'E'
   447   000854  6D                 	db	109	;'m'
   448   000855  65                 	db	101	;'e'
   449   000856  72                 	db	114	;'r'
   450   000857  67                 	db	103	;'g'
   451   000858  65                 	db	101	;'e'
   452   000859  6E                 	db	110	;'n'
   453   00085A  63                 	db	99	;'c'
   454   00085B  69                 	db	105	;'i'
   455   00085C  61                 	db	97	;'a'
   456   00085D  00                 	db	0
   457   00085E                     STR_3:
   458   00085E  46                 	db	70	;'F'
   459   00085F  61                 	db	97	;'a'
   460   000860  6C                 	db	108	;'l'
   461   000861  74                 	db	116	;'t'
   462   000862  61                 	db	97	;'a'
   463   000863  6E                 	db	110	;'n'
   464   000864  3A                 	db	58	;':'
   465   000865  20                 	db	32
   466   000866  00                 	db	0
   467   000801                     STR_6           equ	STR_2
   468   000801                     STR_7           equ	STR_2
   469   000801                     STR_15          equ	STR_2
   470   000848                     STR_9           equ	STR_4
   471   000848                     STR_14          equ	STR_4
   472   00085E                     STR_8           equ	STR_3
   473   00085E                     STR_13          equ	STR_3
   474   000867  00                 	db	0	; dummy byte at the end
   475   000002                     __activetblptr  equ	2
   476                           
   477                           ; #config settings
   478                           
   479                           	psect	cinit
   480   0015B2                     __pcinit:
   481                           	callstack 0
   482   0015B2                     start_initialization:
   483                           	callstack 0
   484   0015B2                     __initialization:
   485                           	callstack 0
   486                           
   487                           ; Initialize objects allocated to COMRAM (3 bytes)
   488                           ; load TBLPTR registers with __pidataCOMRAM
   489   0015B2  0E8E               	movlw	low __pidataCOMRAM
   490   0015B4  6EF6               	movwf	tblptrl,c
   491   0015B6  0E18               	movlw	high __pidataCOMRAM
   492   0015B8  6EF7               	movwf	tblptrh,c
   493   0015BA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   494   0015BC  6EF8               	movwf	tblptru,c
   495   0015BE  0009               	tblrd		*+	;fetch initializer
   496   0015C0  CFF5 F040          	movff	tablat,__pdataCOMRAM
   497   0015C4  0009               	tblrd		*+	;fetch initializer
   498   0015C6  CFF5 F041          	movff	tablat,__pdataCOMRAM+1
   499   0015CA  0009               	tblrd		*+	;fetch initializer
   500   0015CC  CFF5 F042          	movff	tablat,__pdataCOMRAM+2
   501                           
   502                           ; Clear objects allocated to COMRAM (26 bytes)
   503   0015D0  EE00  F026         	lfsr	0,__pbssCOMRAM
   504   0015D4  0E1A               	movlw	26
   505   0015D6                     clear_0:
   506   0015D6  6AEE               	clrf	postinc0,c
   507   0015D8  06E8               	decf	wreg,f,c
   508   0015DA  E1FD               	bnz	clear_0
   509   0015DC                     end_of_initialization:
   510                           	callstack 0
   511   0015DC                     __end_of__initialization:
   512                           	callstack 0
   513   0015DC  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   514   0015DE  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   515   0015E0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   516   0015E2  6EF8               	movwf	tblptru,c
   517   0015E4  0100               	movlb	0
   518   0015E6  EF78  F005         	goto	_main	;jump to C main() function
   519                           
   520                           	psect	bssCOMRAM
   521   000026                     __pbssCOMRAM:
   522                           	callstack 0
   523   000026                     _piezFalt:
   524                           	callstack 0
   525   000026                     	ds	2
   526   000028                     _cuenObj:
   527                           	callstack 0
   528   000028                     	ds	2
   529   00002A                     _b:
   530                           	callstack 0
   531   00002A                     	ds	2
   532   00002C                     _a:
   533                           	callstack 0
   534   00002C                     	ds	2
   535   00002E                     _d:
   536                           	callstack 0
   537   00002E                     	ds	2
   538   000030                     _u:
   539                           	callstack 0
   540   000030                     	ds	2
   541   000032                     _cuenta:
   542                           	callstack 0
   543   000032                     	ds	2
   544   000034                     _flagFin:
   545                           	callstack 0
   546   000034                     	ds	2
   547   000036                     _flagEmergencia:
   548                           	callstack 0
   549   000036                     	ds	2
   550   000038                     _flagInicio:
   551                           	callstack 0
   552   000038                     	ds	2
   553   00003A                     _flagDig:
   554                           	callstack 0
   555   00003A                     	ds	2
   556   00003C                     _flagEscribir:
   557                           	callstack 0
   558   00003C                     	ds	2
   559   00003E                     _cuenMos:
   560                           	callstack 0
   561   00003E                     	ds	1
   562   00003F                     _Tecla:
   563                           	callstack 0
   564   00003F                     	ds	1
   565                           
   566                           	psect	dataCOMRAM
   567   000040                     __pdataCOMRAM:
   568                           	callstack 0
   569   000040                     _flagLuz:
   570                           	callstack 0
   571   000040                     	ds	2
   572   000042                     _interfaz:
   573                           	callstack 0
   574   000042                     	ds	1
   575                           
   576                           	psect	cstackCOMRAM
   577   000001                     __pcstackCOMRAM:
   578                           	callstack 0
   579   000001                     ?___wmul:
   580                           	callstack 0
   581   000001                     ?i2___awdiv:
   582                           	callstack 0
   583   000001                     ?i2___awmod:
   584                           	callstack 0
   585   000001                     i2___lbmod@divisor:
   586                           	callstack 0
   587   000001                     ___wmul@multiplier:
   588                           	callstack 0
   589   000001                     i2___awdiv@dividend:
   590                           	callstack 0
   591   000001                     i2___awmod@dividend:
   592                           	callstack 0
   593   000001                     ??i2_RetardoLCD:
   594   000001                     
   595                           ; 1 bytes @ 0x0
   596   000001                     	ds	1
   597   000002                     i2RetardoLCD@a:
   598                           	callstack 0
   599   000002                     i2___lbmod@dividend:
   600                           	callstack 0
   601   000002                     
   602                           ; 1 bytes @ 0x1
   603   000002                     	ds	1
   604   000003                     i2___lbmod@counter:
   605                           	callstack 0
   606   000003                     ___wmul@multiplicand:
   607                           	callstack 0
   608   000003                     i2___awdiv@divisor:
   609                           	callstack 0
   610   000003                     i2___awmod@divisor:
   611                           	callstack 0
   612   000003                     ??i2_EnviaDato:
   613                           
   614                           ; 1 bytes @ 0x2
   615   000003                     	ds	1
   616   000004                     i2EnviaDato@a:
   617                           	callstack 0
   618   000004                     i2___lbmod@rem:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x3
   622   000004                     	ds	1
   623   000005                     i2EscribeLCD_c@a:
   624                           	callstack 0
   625   000005                     i2DireccionaLCD@a:
   626                           	callstack 0
   627   000005                     i2___awdiv@counter:
   628                           	callstack 0
   629   000005                     i2___awmod@counter:
   630                           	callstack 0
   631   000005                     i2___lbdiv@divisor:
   632                           	callstack 0
   633   000005                     ___wmul@product:
   634                           	callstack 0
   635   000005                     
   636                           ; 1 bytes @ 0x4
   637   000005                     	ds	1
   638   000006                     escribirDig@lectura:
   639                           	callstack 0
   640   000006                     i2MensajeLCD_Var@a:
   641                           	callstack 0
   642   000006                     i2___awdiv@sign:
   643                           	callstack 0
   644   000006                     i2___awmod@sign:
   645                           	callstack 0
   646   000006                     i2___lbdiv@dividend:
   647                           	callstack 0
   648   000006                     
   649                           ; 1 bytes @ 0x5
   650   000006                     	ds	1
   651   000007                     i2___lbdiv@counter:
   652                           	callstack 0
   653   000007                     i2___awdiv@quotient:
   654                           	callstack 0
   655   000007                     
   656                           ; 1 bytes @ 0x6
   657   000007                     	ds	1
   658   000008                     i2___lbdiv@quotient:
   659                           	callstack 0
   660                           
   661                           ; 1 bytes @ 0x7
   662   000008                     	ds	1
   663   000009                     i2EscribeLCD_n8@b:
   664                           	callstack 0
   665                           
   666                           ; 1 bytes @ 0x8
   667   000009                     	ds	1
   668   00000A                     i2EscribeLCD_n8@centena:
   669                           	callstack 0
   670   00000A                     
   671                           ; 1 bytes @ 0x9
   672   00000A                     	ds	1
   673   00000B                     i2EscribeLCD_n8@decena:
   674                           	callstack 0
   675                           
   676                           ; 1 bytes @ 0xA
   677   00000B                     	ds	1
   678   00000C                     i2EscribeLCD_n8@unidad:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0xB
   682   00000C                     	ds	1
   683   00000D                     i2EscribeLCD_n8@a:
   684                           	callstack 0
   685                           
   686                           ; 1 bytes @ 0xC
   687   00000D                     	ds	1
   688   00000E                     ??_ok:
   689   00000E                     
   690                           ; 1 bytes @ 0xD
   691   00000E                     	ds	2
   692   000010                     ??_ISR:
   693                           
   694                           ; 1 bytes @ 0xF
   695   000010                     	ds	7
   696   000017                     ?___awdiv:
   697                           	callstack 0
   698   000017                     ?___awmod:
   699                           	callstack 0
   700   000017                     ConfiguraLCD@a:
   701                           	callstack 0
   702   000017                     ___lbmod@divisor:
   703                           	callstack 0
   704   000017                     ___awdiv@dividend:
   705                           	callstack 0
   706   000017                     ___awmod@dividend:
   707                           	callstack 0
   708   000017                     ??_RetardoLCD:
   709   000017                     
   710                           ; 1 bytes @ 0x16
   711   000017                     	ds	1
   712   000018                     RetardoLCD@a:
   713                           	callstack 0
   714   000018                     ___lbmod@dividend:
   715                           	callstack 0
   716   000018                     
   717                           ; 1 bytes @ 0x17
   718   000018                     	ds	1
   719   000019                     ___lbmod@counter:
   720                           	callstack 0
   721   000019                     ___awdiv@divisor:
   722                           	callstack 0
   723   000019                     ___awmod@divisor:
   724                           	callstack 0
   725   000019                     ??_EnviaDato:
   726                           
   727                           ; 1 bytes @ 0x18
   728   000019                     	ds	1
   729   00001A                     EnviaDato@a:
   730                           	callstack 0
   731   00001A                     ___lbmod@rem:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x19
   735   00001A                     	ds	1
   736   00001B                     ComandoLCD@a:
   737                           	callstack 0
   738   00001B                     EscribeLCD_c@a:
   739                           	callstack 0
   740   00001B                     DireccionaLCD@a:
   741                           	callstack 0
   742   00001B                     ___awdiv@counter:
   743                           	callstack 0
   744   00001B                     ___awmod@counter:
   745                           	callstack 0
   746   00001B                     ___lbdiv@divisor:
   747                           	callstack 0
   748   00001B                     
   749                           ; 1 bytes @ 0x1A
   750   00001B                     	ds	1
   751   00001C                     MensajeLCD_Var@a:
   752                           	callstack 0
   753   00001C                     ___awdiv@sign:
   754                           	callstack 0
   755   00001C                     ___awmod@sign:
   756                           	callstack 0
   757   00001C                     ___lbdiv@dividend:
   758                           	callstack 0
   759   00001C                     
   760                           ; 1 bytes @ 0x1B
   761   00001C                     	ds	1
   762   00001D                     ___lbdiv@counter:
   763                           	callstack 0
   764   00001D                     ___awdiv@quotient:
   765                           	callstack 0
   766   00001D                     
   767                           ; 1 bytes @ 0x1C
   768   00001D                     	ds	1
   769   00001E                     ___lbdiv@quotient:
   770                           	callstack 0
   771                           
   772                           ; 1 bytes @ 0x1D
   773   00001E                     	ds	1
   774   00001F                     EscribeLCD_n8@b:
   775                           	callstack 0
   776                           
   777                           ; 1 bytes @ 0x1E
   778   00001F                     	ds	1
   779   000020                     EscribeLCD_n8@centena:
   780                           	callstack 0
   781   000020                     
   782                           ; 1 bytes @ 0x1F
   783   000020                     	ds	1
   784   000021                     EscribeLCD_n8@decena:
   785                           	callstack 0
   786                           
   787                           ; 1 bytes @ 0x20
   788   000021                     	ds	1
   789   000022                     EscribeLCD_n8@unidad:
   790                           	callstack 0
   791                           
   792                           ; 1 bytes @ 0x21
   793   000022                     	ds	1
   794   000023                     EscribeLCD_n8@a:
   795                           	callstack 0
   796                           
   797                           ; 1 bytes @ 0x22
   798   000023                     	ds	1
   799   000024                     ??_main:
   800                           
   801                           ; 1 bytes @ 0x23
   802   000024                     	ds	2
   803                           
   804 ;;
   805 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   806 ;;
   807 ;; *************** function _main *****************
   808 ;; Defined at:
   809 ;;		line 37 in file "PruebaLCD.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;		None
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   823 ;;      Params:         0       0       0       0       0       0       0       0       0
   824 ;;      Locals:         0       0       0       0       0       0       0       0       0
   825 ;;      Temps:          2       0       0       0       0       0       0       0       0
   826 ;;      Totals:         2       0       0       0       0       0       0       0       0
   827 ;;Total ram usage:        2 bytes
   828 ;; Hardware stack levels required when called: 12
   829 ;; This function calls:
   830 ;;		_BorraLCD
   831 ;;		_CaracterCara
   832 ;;		_CaracterQbert
   833 ;;		_ConfiguraLCD
   834 ;;		_DireccionaLCD
   835 ;;		_EscribeLCD_c
   836 ;;		_InicializaLCD
   837 ;;		_MensajeLCD_Var
   838 ;;		_contador
   839 ;; This function is called by:
   840 ;;		Startup code after reset
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           	psect	text0
   845   000AF0                     __ptext0:
   846                           	callstack 0
   847   000AF0                     _main:
   848                           	callstack 19
   849                           
   850                           ;PruebaLCD.c: 38: ADCON1=15;
   851                           
   852                           ;incstack = 0
   853   000AF0  0E0F               	movlw	15
   854   000AF2  6EC1               	movwf	193,c	;volatile
   855                           
   856                           ;PruebaLCD.c: 39: TRISD=0;
   857   000AF4  6A95               	clrf	149,c	;volatile
   858                           
   859                           ;PruebaLCD.c: 40: TRISA=0;
   860   000AF6  6A92               	clrf	146,c	;volatile
   861                           
   862                           ;PruebaLCD.c: 41: TRISC1=1;
   863   000AF8  8294               	bsf	3988,1,c	;volatile
   864                           
   865                           ;PruebaLCD.c: 42: TRISE0 = 0;
   866   000AFA  9096               	bcf	3990,0,c	;volatile
   867                           
   868                           ;PruebaLCD.c: 43: TRISE1 = 0;
   869   000AFC  9296               	bcf	3990,1,c	;volatile
   870                           
   871                           ;PruebaLCD.c: 44: TRISE2 = 0;
   872   000AFE  9496               	bcf	3990,2,c	;volatile
   873                           
   874                           ;PruebaLCD.c: 45: LATD=0;
   875   000B00  6A8C               	clrf	140,c	;volatile
   876                           
   877                           ;PruebaLCD.c: 46: TRISB=0b11110000;;
   878   000B02  0EF0               	movlw	240
   879   000B04  6E93               	movwf	147,c	;volatile
   880                           
   881                           ;PruebaLCD.c: 47: RBPU=0;
   882   000B06  9EF1               	bcf	4081,7,c	;volatile
   883                           
   884                           ;PruebaLCD.c: 48: _delay((unsigned long)((100)*(1000000/4000.0)));
   885   000B08  0E21               	movlw	33
   886   000B0A  6E24               	movwf	??_main^0,c
   887   000B0C  0E76               	movlw	118
   888   000B0E                     u1777:
   889   000B0E  2EE8               	decfsz	wreg,f,c
   890   000B10  D7FE               	bra	u1777
   891   000B12  2E24               	decfsz	??_main^0,f,c
   892   000B14  D7FC               	bra	u1777
   893   000B16  D000               	nop2	
   894                           
   895                           ;PruebaLCD.c: 49: TMR0=3036;
   896   000B18  0E0B               	movlw	11
   897   000B1A  6ED7               	movwf	215,c	;volatile
   898   000B1C  0EDC               	movlw	220
   899   000B1E  6ED6               	movwf	214,c	;volatile
   900                           
   901                           ;PruebaLCD.c: 50: T0CON=0b00000001;
   902   000B20  0E01               	movlw	1
   903   000B22  6ED5               	movwf	213,c	;volatile
   904                           
   905                           ;PruebaLCD.c: 51: TMR0IF=0;
   906   000B24  94F2               	bcf	4082,2,c	;volatile
   907                           
   908                           ;PruebaLCD.c: 52: TMR0IE=1;
   909   000B26  8AF2               	bsf	4082,5,c	;volatile
   910                           
   911                           ;PruebaLCD.c: 53: TMR0ON=1;
   912   000B28  8ED5               	bsf	4053,7,c	;volatile
   913                           
   914                           ;PruebaLCD.c: 54: RBIF=0;
   915   000B2A  90F2               	bcf	4082,0,c	;volatile
   916                           
   917                           ;PruebaLCD.c: 55: RBIE=1;
   918   000B2C  86F2               	bsf	4082,3,c	;volatile
   919                           
   920                           ;PruebaLCD.c: 56: GIE=1;
   921   000B2E  8EF2               	bsf	4082,7,c	;volatile
   922                           
   923                           ;PruebaLCD.c: 59: _delay((unsigned long)((1000)*(1000000/4000.0)));
   924   000B30  0E02               	movlw	2
   925   000B32  6E25               	movwf	(??_main+1)^0,c
   926   000B34  0E45               	movlw	69
   927   000B36  6E24               	movwf	??_main^0,c
   928   000B38  0EAA               	movlw	170
   929   000B3A                     u1787:
   930   000B3A  2EE8               	decfsz	wreg,f,c
   931   000B3C  D7FE               	bra	u1787
   932   000B3E  2E24               	decfsz	??_main^0,f,c
   933   000B40  D7FC               	bra	u1787
   934   000B42  2E25               	decfsz	(??_main+1)^0,f,c
   935   000B44  D7FA               	bra	u1787
   936                           
   937                           ;PruebaLCD.c: 60: ConfiguraLCD(4);
   938   000B46  0E04               	movlw	4
   939   000B48  ECE7  F00B         	call	_ConfiguraLCD
   940                           
   941                           ;PruebaLCD.c: 61: InicializaLCD();
   942   000B4C  EC9E  F007         	call	_InicializaLCD	;wreg free
   943                           
   944                           ;PruebaLCD.c: 63: if(flagEmergencia == 0){
   945   000B50  5036               	movf	_flagEmergencia^0,w,c
   946   000B52  1037               	iorwf	(_flagEmergencia+1)^0,w,c
   947   000B54  A4D8               	btfss	status,2,c
   948   000B56  EF07  F000         	goto	start
   949                           
   950                           ;PruebaLCD.c: 65: MensajeLCD_Var("Bienvenidos");
   951   000B5A  0E3C               	movlw	low STR_1
   952   000B5C  6E1C               	movwf	MensajeLCD_Var@a^0,c
   953   000B5E  EC76  F00B         	call	_MensajeLCD_Var	;wreg free
   954                           
   955                           ;PruebaLCD.c: 66: CaracterCara();
   956   000B62  EC1F  F009         	call	_CaracterCara	;wreg free
   957                           
   958                           ;PruebaLCD.c: 67: EscribeLCD_c(1);
   959   000B66  0E01               	movlw	1
   960   000B68  ECF3  F00B         	call	_EscribeLCD_c
   961                           
   962                           ;PruebaLCD.c: 68: CaracterQbert();
   963   000B6C  ECE6  F008         	call	_CaracterQbert	;wreg free
   964                           
   965                           ;PruebaLCD.c: 69: EscribeLCD_c(2);
   966   000B70  0E02               	movlw	2
   967   000B72  ECF3  F00B         	call	_EscribeLCD_c
   968                           
   969                           ;PruebaLCD.c: 70: _delay((unsigned long)((5000)*(1000000/4000.0)));
   970   000B76  0E07               	movlw	7
   971   000B78  6E25               	movwf	(??_main+1)^0,c
   972   000B7A  0E58               	movlw	88
   973   000B7C  6E24               	movwf	??_main^0,c
   974   000B7E  0E5A               	movlw	90
   975   000B80                     u1797:
   976   000B80  2EE8               	decfsz	wreg,f,c
   977   000B82  D7FE               	bra	u1797
   978   000B84  2E24               	decfsz	??_main^0,f,c
   979   000B86  D7FC               	bra	u1797
   980   000B88  2E25               	decfsz	(??_main+1)^0,f,c
   981   000B8A  D7FA               	bra	u1797
   982                           
   983                           ;PruebaLCD.c: 71: BorraLCD();
   984   000B8C  EC1F  F00C         	call	_BorraLCD	;wreg free
   985                           
   986                           ;PruebaLCD.c: 74: MensajeLCD_Var("Piezas a Contar: ");
   987   000B90  0E01               	movlw	low STR_2
   988   000B92  6E1C               	movwf	MensajeLCD_Var@a^0,c
   989   000B94  EC76  F00B         	call	_MensajeLCD_Var	;wreg free
   990                           
   991                           ;PruebaLCD.c: 75: DireccionaLCD(0xC0);
   992   000B98  0EC0               	movlw	192
   993   000B9A  ECFE  F00B         	call	_DireccionaLCD
   994                           
   995                           ;PruebaLCD.c: 76: flagEscribir=1;
   996   000B9E  0E00               	movlw	0
   997   000BA0  6E3D               	movwf	(_flagEscribir+1)^0,c
   998   000BA2  0E01               	movlw	1
   999   000BA4  6E3C               	movwf	_flagEscribir^0,c
  1000   000BA6                     l2842:
  1001                           
  1002                           ;PruebaLCD.c: 78: LATA1=1;
  1003   000BA6  8289               	bsf	3977,1,c	;volatile
  1004                           
  1005                           ;PruebaLCD.c: 79: _delay((unsigned long)((250)*(1000000/4000.0)));
  1006   000BA8  0E52               	movlw	82
  1007   000BAA  6E24               	movwf	??_main^0,c
  1008   000BAC  0E2A               	movlw	42
  1009   000BAE                     u1807:
  1010   000BAE  2EE8               	decfsz	wreg,f,c
  1011   000BB0  D7FE               	bra	u1807
  1012   000BB2  2E24               	decfsz	??_main^0,f,c
  1013   000BB4  D7FC               	bra	u1807
  1014                           
  1015                           ;PruebaLCD.c: 80: contador();
  1016   000BB6  ECDC  F006         	call	_contador	;wreg free
  1017                           
  1018                           ;PruebaLCD.c: 81: _delay((unsigned long)((250)*(1000000/4000.0)));
  1019   000BBA  0E52               	movlw	82
  1020   000BBC  6E24               	movwf	??_main^0,c
  1021   000BBE  0E2A               	movlw	42
  1022   000BC0                     u1817:
  1023   000BC0  2EE8               	decfsz	wreg,f,c
  1024   000BC2  D7FE               	bra	u1817
  1025   000BC4  2E24               	decfsz	??_main^0,f,c
  1026   000BC6  D7FC               	bra	u1817
  1027                           
  1028                           ;PruebaLCD.c: 82: LATA1=0;
  1029   000BC8  9289               	bcf	3977,1,c	;volatile
  1030                           
  1031                           ;PruebaLCD.c: 83: _delay((unsigned long)((250)*(1000000/4000.0)));
  1032   000BCA  0E52               	movlw	82
  1033   000BCC  6E24               	movwf	??_main^0,c
  1034   000BCE  0E2A               	movlw	42
  1035   000BD0                     u1827:
  1036   000BD0  2EE8               	decfsz	wreg,f,c
  1037   000BD2  D7FE               	bra	u1827
  1038   000BD4  2E24               	decfsz	??_main^0,f,c
  1039   000BD6  D7FC               	bra	u1827
  1040                           
  1041                           ;PruebaLCD.c: 84: contador();
  1042   000BD8  ECDC  F006         	call	_contador	;wreg free
  1043                           
  1044                           ;PruebaLCD.c: 85: _delay((unsigned long)((250)*(1000000/4000.0)));
  1045   000BDC  0E52               	movlw	82
  1046   000BDE  6E24               	movwf	??_main^0,c
  1047   000BE0  0E2A               	movlw	42
  1048   000BE2                     u1837:
  1049   000BE2  2EE8               	decfsz	wreg,f,c
  1050   000BE4  D7FE               	bra	u1837
  1051   000BE6  2E24               	decfsz	??_main^0,f,c
  1052   000BE8  D7FC               	bra	u1837
  1053   000BEA  D7DD               	goto	l2842
  1054   000BEC                     __end_of_main:
  1055                           	callstack 0
  1056                           
  1057 ;; *************** function _contador *****************
  1058 ;; Defined at:
  1059 ;;		line 163 in file "PruebaLCD.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;		None
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;		None
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  1    wreg      void 
  1066 ;; Registers used:
  1067 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1073 ;;      Params:         0       0       0       0       0       0       0       0       0
  1074 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1075 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1076 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1077 ;;Total ram usage:        0 bytes
  1078 ;; Hardware stack levels used: 1
  1079 ;; Hardware stack levels required when called: 11
  1080 ;; This function calls:
  1081 ;;		_BorraLCD
  1082 ;;		_DireccionaLCD
  1083 ;;		_EscribeLCD_n8
  1084 ;;		_MensajeLCD_Var
  1085 ;;		_RGB
  1086 ;;		_SEG
  1087 ;;		___awdiv
  1088 ;;		___awmod
  1089 ;; This function is called by:
  1090 ;;		_main
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           	psect	text1
  1095   000DB8                     __ptext1:
  1096                           	callstack 0
  1097   000DB8                     _contador:
  1098                           	callstack 19
  1099                           
  1100                           ;PruebaLCD.c: 164: if(PORTCbits.RC1==0){
  1101                           
  1102                           ;incstack = 0
  1103   000DB8  B282               	btfsc	130,1,c	;volatile
  1104   000DBA  0012               	return	
  1105                           
  1106                           ;PruebaLCD.c: 165: flagInicio = 1;
  1107   000DBC  0E00               	movlw	0
  1108   000DBE  6E39               	movwf	(_flagInicio+1)^0,c
  1109   000DC0  0E01               	movlw	1
  1110   000DC2  6E38               	movwf	_flagInicio^0,c
  1111                           
  1112                           ;PruebaLCD.c: 166: if(flagEmergencia == 0){
  1113   000DC4  5036               	movf	_flagEmergencia^0,w,c
  1114   000DC6  1037               	iorwf	(_flagEmergencia+1)^0,w,c
  1115   000DC8  A4D8               	btfss	status,2,c
  1116   000DCA  0012               	return	
  1117                           
  1118                           ;PruebaLCD.c: 167: cuenta+=1;
  1119   000DCC  4A32               	infsnz	_cuenta^0,f,c
  1120   000DCE  2A33               	incf	(_cuenta+1)^0,f,c
  1121                           
  1122                           ;PruebaLCD.c: 168: piezFalt-=1;
  1123   000DD0  0626               	decf	_piezFalt^0,f,c
  1124   000DD2  A0D8               	btfss	status,0,c
  1125   000DD4  0627               	decf	(_piezFalt+1)^0,f,c
  1126                           
  1127                           ;PruebaLCD.c: 169: a = cuenta % 10;
  1128   000DD6  C032  F017         	movff	_cuenta,___awmod@dividend
  1129   000DDA  C033  F018         	movff	_cuenta+1,___awmod@dividend+1
  1130   000DDE  0E00               	movlw	0
  1131   000DE0  6E1A               	movwf	(___awmod@divisor+1)^0,c
  1132   000DE2  0E0A               	movlw	10
  1133   000DE4  6E19               	movwf	___awmod@divisor^0,c
  1134   000DE6  EC58  F009         	call	___awmod	;wreg free
  1135   000DEA  C017  F02C         	movff	?___awmod,_a
  1136   000DEE  C018  F02D         	movff	?___awmod+1,_a+1
  1137                           
  1138                           ;PruebaLCD.c: 170: b = (cuenta - a)/10;
  1139   000DF2  502C               	movf	_a^0,w,c
  1140   000DF4  5C32               	subwf	_cuenta^0,w,c
  1141   000DF6  6E17               	movwf	___awdiv@dividend^0,c
  1142   000DF8  502D               	movf	(_a+1)^0,w,c
  1143   000DFA  5833               	subwfb	(_cuenta+1)^0,w,c
  1144   000DFC  6E18               	movwf	(___awdiv@dividend+1)^0,c
  1145   000DFE  0E00               	movlw	0
  1146   000E00  6E1A               	movwf	(___awdiv@divisor+1)^0,c
  1147   000E02  0E0A               	movlw	10
  1148   000E04  6E19               	movwf	___awdiv@divisor^0,c
  1149   000E06  ECEC  F007         	call	___awdiv	;wreg free
  1150   000E0A  C017  F02A         	movff	?___awdiv,_b
  1151   000E0E  C018  F02B         	movff	?___awdiv+1,_b+1
  1152                           
  1153                           ;PruebaLCD.c: 171: RGB();
  1154   000E12  EC6E  F008         	call	_RGB	;wreg free
  1155                           
  1156                           ;PruebaLCD.c: 172: SEG();
  1157   000E16  EC41  F00C         	call	_SEG	;wreg free
  1158                           
  1159                           ;PruebaLCD.c: 174: BorraLCD();
  1160   000E1A  EC1F  F00C         	call	_BorraLCD	;wreg free
  1161                           
  1162                           ;PruebaLCD.c: 175: MensajeLCD_Var("Faltan: ");
  1163   000E1E  0E5E               	movlw	low STR_3
  1164   000E20  6E1C               	movwf	MensajeLCD_Var@a^0,c
  1165   000E22  EC76  F00B         	call	_MensajeLCD_Var	;wreg free
  1166                           
  1167                           ;PruebaLCD.c: 176: EscribeLCD_n8(piezFalt,2);
  1168   000E26  0E02               	movlw	2
  1169   000E28  6E1F               	movwf	EscribeLCD_n8@b^0,c
  1170   000E2A  5026               	movf	_piezFalt^0,w,c
  1171   000E2C  ECF6  F005         	call	_EscribeLCD_n8
  1172                           
  1173                           ;PruebaLCD.c: 177: DireccionaLCD(0xC0);
  1174   000E30  0EC0               	movlw	192
  1175   000E32  ECFE  F00B         	call	_DireccionaLCD
  1176                           
  1177                           ;PruebaLCD.c: 178: MensajeLCD_Var("Objetivo: ");
  1178   000E36  0E48               	movlw	low STR_4
  1179   000E38  6E1C               	movwf	MensajeLCD_Var@a^0,c
  1180   000E3A  EC76  F00B         	call	_MensajeLCD_Var	;wreg free
  1181                           
  1182                           ;PruebaLCD.c: 179: EscribeLCD_n8(cuenObj,2);
  1183   000E3E  0E02               	movlw	2
  1184   000E40  6E1F               	movwf	EscribeLCD_n8@b^0,c
  1185   000E42  5028               	movf	_cuenObj^0,w,c
  1186   000E44  ECF6  F005         	call	_EscribeLCD_n8
  1187                           
  1188                           ;PruebaLCD.c: 180: if (cuenta==cuenObj){
  1189   000E48  5028               	movf	_cuenObj^0,w,c
  1190   000E4A  1832               	xorwf	_cuenta^0,w,c
  1191   000E4C  E115               	bnz	l264
  1192   000E4E  5029               	movf	(_cuenObj+1)^0,w,c
  1193   000E50  1833               	xorwf	(_cuenta+1)^0,w,c
  1194   000E52  A4D8               	btfss	status,2,c
  1195   000E54  0012               	return	
  1196                           
  1197                           ;PruebaLCD.c: 181: BorraLCD();
  1198   000E56  EC1F  F00C         	call	_BorraLCD	;wreg free
  1199                           
  1200                           ;PruebaLCD.c: 182: MensajeLCD_Var("Fin de Cuenta");
  1201   000E5A  0E22               	movlw	low STR_10
  1202   000E5C  6E1C               	movwf	MensajeLCD_Var@a^0,c
  1203   000E5E  EC76  F00B         	call	_MensajeLCD_Var	;wreg free
  1204                           
  1205                           ;PruebaLCD.c: 183: DireccionaLCD(0xC0);
  1206   000E62  0EC0               	movlw	192
  1207   000E64  ECFE  F00B         	call	_DireccionaLCD
  1208                           
  1209                           ;PruebaLCD.c: 184: MensajeLCD_Var("Presione OK");
  1210   000E68  0E30               	movlw	low STR_11
  1211   000E6A  6E1C               	movwf	MensajeLCD_Var@a^0,c
  1212   000E6C  EC76  F00B         	call	_MensajeLCD_Var	;wreg free
  1213                           
  1214                           ;PruebaLCD.c: 185: flagFin=1;
  1215   000E70  0E00               	movlw	0
  1216   000E72  6E35               	movwf	(_flagFin+1)^0,c
  1217   000E74  0E01               	movlw	1
  1218   000E76  6E34               	movwf	_flagFin^0,c
  1219   000E78                     l264:
  1220   000E78  0012               	return		;funcret
  1221   000E7A                     __end_of_contador:
  1222                           	callstack 0
  1223                           
  1224 ;; *************** function ___awmod *****************
  1225 ;; Defined at:
  1226 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;  dividend        2   22[COMRAM] int 
  1229 ;;  divisor         2   24[COMRAM] int 
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  sign            1   27[COMRAM] unsigned char 
  1232 ;;  counter         1   26[COMRAM] unsigned char 
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  2   22[COMRAM] int 
  1235 ;; Registers used:
  1236 ;;		wreg, status,2, status,0
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1242 ;;      Params:         4       0       0       0       0       0       0       0       0
  1243 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1244 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1245 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1246 ;;Total ram usage:        6 bytes
  1247 ;; Hardware stack levels used: 1
  1248 ;; Hardware stack levels required when called: 7
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_contador
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text2
  1257   0012B0                     __ptext2:
  1258                           	callstack 0
  1259   0012B0                     ___awmod:
  1260                           	callstack 22
  1261                           
  1262                           ;incstack = 0
  1263   0012B0  6A1C               	clrf	___awmod@sign^0,c
  1264   0012B2  AE18               	btfss	(___awmod@dividend+1)^0,7,c
  1265   0012B4  D006               	goto	l2530
  1266   0012B6  6C17               	negf	___awmod@dividend^0,c
  1267   0012B8  1E18               	comf	(___awmod@dividend+1)^0,f,c
  1268   0012BA  B0D8               	btfsc	status,0,c
  1269   0012BC  2A18               	incf	(___awmod@dividend+1)^0,f,c
  1270   0012BE  0E01               	movlw	1
  1271   0012C0  6E1C               	movwf	___awmod@sign^0,c
  1272   0012C2                     l2530:
  1273   0012C2  AE1A               	btfss	(___awmod@divisor+1)^0,7,c
  1274   0012C4  D004               	goto	l2534
  1275   0012C6  6C19               	negf	___awmod@divisor^0,c
  1276   0012C8  1E1A               	comf	(___awmod@divisor+1)^0,f,c
  1277   0012CA  B0D8               	btfsc	status,0,c
  1278   0012CC  2A1A               	incf	(___awmod@divisor+1)^0,f,c
  1279   0012CE                     l2534:
  1280   0012CE  5019               	movf	___awmod@divisor^0,w,c
  1281   0012D0  101A               	iorwf	(___awmod@divisor+1)^0,w,c
  1282   0012D2  B4D8               	btfsc	status,2,c
  1283   0012D4  D018               	goto	l2550
  1284   0012D6  0E01               	movlw	1
  1285   0012D8  6E1B               	movwf	___awmod@counter^0,c
  1286   0012DA  D004               	goto	l2540
  1287   0012DC                     l2538:
  1288   0012DC  90D8               	bcf	status,0,c
  1289   0012DE  3619               	rlcf	___awmod@divisor^0,f,c
  1290   0012E0  361A               	rlcf	(___awmod@divisor+1)^0,f,c
  1291   0012E2  2A1B               	incf	___awmod@counter^0,f,c
  1292   0012E4                     l2540:
  1293   0012E4  AE1A               	btfss	(___awmod@divisor+1)^0,7,c
  1294   0012E6  D7FA               	goto	l2538
  1295   0012E8                     u1350:
  1296   0012E8  5019               	movf	___awmod@divisor^0,w,c
  1297   0012EA  5C17               	subwf	___awmod@dividend^0,w,c
  1298   0012EC  501A               	movf	(___awmod@divisor+1)^0,w,c
  1299   0012EE  5818               	subwfb	(___awmod@dividend+1)^0,w,c
  1300   0012F0  A0D8               	btfss	status,0,c
  1301   0012F2  D004               	goto	l2546
  1302   0012F4  5019               	movf	___awmod@divisor^0,w,c
  1303   0012F6  5E17               	subwf	___awmod@dividend^0,f,c
  1304   0012F8  501A               	movf	(___awmod@divisor+1)^0,w,c
  1305   0012FA  5A18               	subwfb	(___awmod@dividend+1)^0,f,c
  1306   0012FC                     l2546:
  1307   0012FC  90D8               	bcf	status,0,c
  1308   0012FE  321A               	rrcf	(___awmod@divisor+1)^0,f,c
  1309   001300  3219               	rrcf	___awmod@divisor^0,f,c
  1310   001302  2E1B               	decfsz	___awmod@counter^0,f,c
  1311   001304  D7F1               	goto	u1350
  1312   001306                     l2550:
  1313   001306  501C               	movf	___awmod@sign^0,w,c
  1314   001308  B4D8               	btfsc	status,2,c
  1315   00130A  D004               	goto	l2554
  1316   00130C  6C17               	negf	___awmod@dividend^0,c
  1317   00130E  1E18               	comf	(___awmod@dividend+1)^0,f,c
  1318   001310  B0D8               	btfsc	status,0,c
  1319   001312  2A18               	incf	(___awmod@dividend+1)^0,f,c
  1320   001314                     l2554:
  1321   001314  C017  F017         	movff	___awmod@dividend,?___awmod
  1322   001318  C018  F018         	movff	___awmod@dividend+1,?___awmod+1
  1323   00131C  0012               	return		;funcret
  1324   00131E                     __end_of___awmod:
  1325                           	callstack 0
  1326                           
  1327 ;; *************** function ___awdiv *****************
  1328 ;; Defined at:
  1329 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;  dividend        2   22[COMRAM] int 
  1332 ;;  divisor         2   24[COMRAM] int 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  quotient        2   28[COMRAM] int 
  1335 ;;  sign            1   27[COMRAM] unsigned char 
  1336 ;;  counter         1   26[COMRAM] unsigned char 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  2   22[COMRAM] int 
  1339 ;; Registers used:
  1340 ;;		wreg, status,2, status,0
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1346 ;;      Params:         4       0       0       0       0       0       0       0       0
  1347 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1348 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1349 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1350 ;;Total ram usage:        8 bytes
  1351 ;; Hardware stack levels used: 1
  1352 ;; Hardware stack levels required when called: 7
  1353 ;; This function calls:
  1354 ;;		Nothing
  1355 ;; This function is called by:
  1356 ;;		_contador
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text3
  1361   000FD8                     __ptext3:
  1362                           	callstack 0
  1363   000FD8                     ___awdiv:
  1364                           	callstack 22
  1365                           
  1366                           ;incstack = 0
  1367   000FD8  6A1C               	clrf	___awdiv@sign^0,c
  1368   000FDA  AE1A               	btfss	(___awdiv@divisor+1)^0,7,c
  1369   000FDC  D006               	goto	l2486
  1370   000FDE  6C19               	negf	___awdiv@divisor^0,c
  1371   000FE0  1E1A               	comf	(___awdiv@divisor+1)^0,f,c
  1372   000FE2  B0D8               	btfsc	status,0,c
  1373   000FE4  2A1A               	incf	(___awdiv@divisor+1)^0,f,c
  1374   000FE6  0E01               	movlw	1
  1375   000FE8  6E1C               	movwf	___awdiv@sign^0,c
  1376   000FEA                     l2486:
  1377   000FEA  AE18               	btfss	(___awdiv@dividend+1)^0,7,c
  1378   000FEC  D006               	goto	l2492
  1379   000FEE  6C17               	negf	___awdiv@dividend^0,c
  1380   000FF0  1E18               	comf	(___awdiv@dividend+1)^0,f,c
  1381   000FF2  B0D8               	btfsc	status,0,c
  1382   000FF4  2A18               	incf	(___awdiv@dividend+1)^0,f,c
  1383   000FF6  0E01               	movlw	1
  1384   000FF8  1A1C               	xorwf	___awdiv@sign^0,f,c
  1385   000FFA                     l2492:
  1386   000FFA  0E00               	movlw	0
  1387   000FFC  6E1E               	movwf	(___awdiv@quotient+1)^0,c
  1388   000FFE  0E00               	movlw	0
  1389   001000  6E1D               	movwf	___awdiv@quotient^0,c
  1390   001002  5019               	movf	___awdiv@divisor^0,w,c
  1391   001004  101A               	iorwf	(___awdiv@divisor+1)^0,w,c
  1392   001006  B4D8               	btfsc	status,2,c
  1393   001008  D01C               	goto	l2514
  1394   00100A  0E01               	movlw	1
  1395   00100C  6E1B               	movwf	___awdiv@counter^0,c
  1396   00100E  D004               	goto	l2500
  1397   001010                     l2498:
  1398   001010  90D8               	bcf	status,0,c
  1399   001012  3619               	rlcf	___awdiv@divisor^0,f,c
  1400   001014  361A               	rlcf	(___awdiv@divisor+1)^0,f,c
  1401   001016  2A1B               	incf	___awdiv@counter^0,f,c
  1402   001018                     l2500:
  1403   001018  AE1A               	btfss	(___awdiv@divisor+1)^0,7,c
  1404   00101A  D7FA               	goto	l2498
  1405   00101C                     u1290:
  1406   00101C  90D8               	bcf	status,0,c
  1407   00101E  361D               	rlcf	___awdiv@quotient^0,f,c
  1408   001020  361E               	rlcf	(___awdiv@quotient+1)^0,f,c
  1409   001022  5019               	movf	___awdiv@divisor^0,w,c
  1410   001024  5C17               	subwf	___awdiv@dividend^0,w,c
  1411   001026  501A               	movf	(___awdiv@divisor+1)^0,w,c
  1412   001028  5818               	subwfb	(___awdiv@dividend+1)^0,w,c
  1413   00102A  A0D8               	btfss	status,0,c
  1414   00102C  D005               	goto	l2510
  1415   00102E  5019               	movf	___awdiv@divisor^0,w,c
  1416   001030  5E17               	subwf	___awdiv@dividend^0,f,c
  1417   001032  501A               	movf	(___awdiv@divisor+1)^0,w,c
  1418   001034  5A18               	subwfb	(___awdiv@dividend+1)^0,f,c
  1419   001036  801D               	bsf	___awdiv@quotient^0,0,c
  1420   001038                     l2510:
  1421   001038  90D8               	bcf	status,0,c
  1422   00103A  321A               	rrcf	(___awdiv@divisor+1)^0,f,c
  1423   00103C  3219               	rrcf	___awdiv@divisor^0,f,c
  1424   00103E  2E1B               	decfsz	___awdiv@counter^0,f,c
  1425   001040  D7ED               	goto	u1290
  1426   001042                     l2514:
  1427   001042  501C               	movf	___awdiv@sign^0,w,c
  1428   001044  B4D8               	btfsc	status,2,c
  1429   001046  D004               	goto	l2518
  1430   001048  6C1D               	negf	___awdiv@quotient^0,c
  1431   00104A  1E1E               	comf	(___awdiv@quotient+1)^0,f,c
  1432   00104C  B0D8               	btfsc	status,0,c
  1433   00104E  2A1E               	incf	(___awdiv@quotient+1)^0,f,c
  1434   001050                     l2518:
  1435   001050  C01D  F017         	movff	___awdiv@quotient,?___awdiv
  1436   001054  C01E  F018         	movff	___awdiv@quotient+1,?___awdiv+1
  1437   001058  0012               	return		;funcret
  1438   00105A                     __end_of___awdiv:
  1439                           	callstack 0
  1440                           
  1441 ;; *************** function _SEG *****************
  1442 ;; Defined at:
  1443 ;;		line 230 in file "PruebaLCD.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;		None
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;		None
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		None
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1457 ;;      Params:         0       0       0       0       0       0       0       0       0
  1458 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1459 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1460 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1461 ;;Total ram usage:        0 bytes
  1462 ;; Hardware stack levels used: 1
  1463 ;; Hardware stack levels required when called: 7
  1464 ;; This function calls:
  1465 ;;		Nothing
  1466 ;; This function is called by:
  1467 ;;		_contador
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text4
  1472   001882                     __ptext4:
  1473                           	callstack 0
  1474   001882                     _SEG:
  1475                           	callstack 22
  1476                           
  1477                           ;PruebaLCD.c: 231: LATD = a;
  1478                           
  1479                           ;incstack = 0
  1480   001882  C02C  FF8C         	movff	_a,3980	;volatile
  1481   001886  0012               	return		;funcret
  1482   001888                     __end_of_SEG:
  1483                           	callstack 0
  1484                           
  1485 ;; *************** function _RGB *****************
  1486 ;; Defined at:
  1487 ;;		line 192 in file "PruebaLCD.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;		None
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;		None
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      void 
  1494 ;; Registers used:
  1495 ;;		wreg, status,2, status,0
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1501 ;;      Params:         0       0       0       0       0       0       0       0       0
  1502 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1503 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1504 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1505 ;;Total ram usage:        0 bytes
  1506 ;; Hardware stack levels used: 1
  1507 ;; Hardware stack levels required when called: 7
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_contador
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           	psect	text5
  1516   0010DC                     __ptext5:
  1517                           	callstack 0
  1518   0010DC                     _RGB:
  1519                           	callstack 22
  1520                           
  1521                           ;PruebaLCD.c: 193: if (flagInicio == 0){
  1522                           
  1523                           ;incstack = 0
  1524   0010DC  5038               	movf	_flagInicio^0,w,c
  1525   0010DE  1039               	iorwf	(_flagInicio+1)^0,w,c
  1526   0010E0  A4D8               	btfss	status,2,c
  1527   0010E2  D004               	goto	l1514
  1528                           
  1529                           ;PruebaLCD.c: 194: LATE0 = 0;
  1530   0010E4  908D               	bcf	3981,0,c	;volatile
  1531                           
  1532                           ;PruebaLCD.c: 195: LATE1 = 0;
  1533   0010E6  928D               	bcf	3981,1,c	;volatile
  1534                           
  1535                           ;PruebaLCD.c: 196: LATE2 = 0;
  1536   0010E8  948D               	bcf	3981,2,c	;volatile
  1537                           
  1538                           ;PruebaLCD.c: 197: }
  1539   0010EA  0012               	return	
  1540   0010EC                     l1514:
  1541                           
  1542                           ;PruebaLCD.c: 198: else if (b == 0){
  1543   0010EC  502A               	movf	_b^0,w,c
  1544   0010EE  102B               	iorwf	(_b+1)^0,w,c
  1545   0010F0  A4D8               	btfss	status,2,c
  1546   0010F2  D004               	goto	l1518
  1547                           
  1548                           ;PruebaLCD.c: 199: LATE0 = 1;
  1549   0010F4  808D               	bsf	3981,0,c	;volatile
  1550                           
  1551                           ;PruebaLCD.c: 200: LATE1 = 0;
  1552   0010F6  928D               	bcf	3981,1,c	;volatile
  1553                           
  1554                           ;PruebaLCD.c: 201: LATE2 = 1;
  1555   0010F8  848D               	bsf	3981,2,c	;volatile
  1556                           
  1557                           ;PruebaLCD.c: 202: }
  1558   0010FA  0012               	return	
  1559   0010FC                     l1518:
  1560                           
  1561                           ;PruebaLCD.c: 203: else if (b == 1){
  1562   0010FC  042A               	decf	_b^0,w,c
  1563   0010FE  102B               	iorwf	(_b+1)^0,w,c
  1564   001100  A4D8               	btfss	status,2,c
  1565   001102  D004               	goto	l1522
  1566                           
  1567                           ;PruebaLCD.c: 204: LATE0 = 0;
  1568   001104  908D               	bcf	3981,0,c	;volatile
  1569                           
  1570                           ;PruebaLCD.c: 205: LATE1 = 0;
  1571   001106  928D               	bcf	3981,1,c	;volatile
  1572                           
  1573                           ;PruebaLCD.c: 206: LATE2 = 1;
  1574   001108  848D               	bsf	3981,2,c	;volatile
  1575                           
  1576                           ;PruebaLCD.c: 207: }
  1577   00110A  0012               	return	
  1578   00110C                     l1522:
  1579                           
  1580                           ;PruebaLCD.c: 208: else if (b == 2){
  1581   00110C  0E02               	movlw	2
  1582   00110E  182A               	xorwf	_b^0,w,c
  1583   001110  102B               	iorwf	(_b+1)^0,w,c
  1584   001112  A4D8               	btfss	status,2,c
  1585   001114  D004               	goto	l1526
  1586                           
  1587                           ;PruebaLCD.c: 209: LATE0 = 0;
  1588   001116  908D               	bcf	3981,0,c	;volatile
  1589                           
  1590                           ;PruebaLCD.c: 210: LATE1 = 1;
  1591   001118  828D               	bsf	3981,1,c	;volatile
  1592                           
  1593                           ;PruebaLCD.c: 211: LATE2 = 1;
  1594   00111A  848D               	bsf	3981,2,c	;volatile
  1595                           
  1596                           ;PruebaLCD.c: 212: }
  1597   00111C  0012               	return	
  1598   00111E                     l1526:
  1599                           
  1600                           ;PruebaLCD.c: 213: else if (b == 3){
  1601   00111E  0E03               	movlw	3
  1602   001120  182A               	xorwf	_b^0,w,c
  1603   001122  102B               	iorwf	(_b+1)^0,w,c
  1604   001124  A4D8               	btfss	status,2,c
  1605   001126  D004               	goto	l1530
  1606                           
  1607                           ;PruebaLCD.c: 214: LATE0 = 0;
  1608   001128  908D               	bcf	3981,0,c	;volatile
  1609                           
  1610                           ;PruebaLCD.c: 215: LATE1 = 1;
  1611   00112A  828D               	bsf	3981,1,c	;volatile
  1612                           
  1613                           ;PruebaLCD.c: 216: LATE2 = 0;
  1614   00112C  948D               	bcf	3981,2,c	;volatile
  1615                           
  1616                           ;PruebaLCD.c: 217: }
  1617   00112E  0012               	return	
  1618   001130                     l1530:
  1619                           
  1620                           ;PruebaLCD.c: 218: else if (b == 4){
  1621   001130  0E04               	movlw	4
  1622   001132  182A               	xorwf	_b^0,w,c
  1623   001134  102B               	iorwf	(_b+1)^0,w,c
  1624   001136  A4D8               	btfss	status,2,c
  1625   001138  D004               	goto	l1534
  1626                           
  1627                           ;PruebaLCD.c: 219: LATE0 = 1;
  1628   00113A  808D               	bsf	3981,0,c	;volatile
  1629                           
  1630                           ;PruebaLCD.c: 220: LATE1 = 1;
  1631   00113C  828D               	bsf	3981,1,c	;volatile
  1632                           
  1633                           ;PruebaLCD.c: 221: LATE2 = 0;
  1634   00113E  948D               	bcf	3981,2,c	;volatile
  1635                           
  1636                           ;PruebaLCD.c: 222: }
  1637   001140  0012               	return	
  1638   001142                     l1534:
  1639                           
  1640                           ;PruebaLCD.c: 223: else if (b == 5){
  1641   001142  0E05               	movlw	5
  1642   001144  182A               	xorwf	_b^0,w,c
  1643   001146  102B               	iorwf	(_b+1)^0,w,c
  1644   001148  A4D8               	btfss	status,2,c
  1645   00114A  0012               	return	
  1646                           
  1647                           ;PruebaLCD.c: 224: LATE0 = 1;
  1648   00114C  808D               	bsf	3981,0,c	;volatile
  1649                           
  1650                           ;PruebaLCD.c: 225: LATE1 = 1;
  1651   00114E  828D               	bsf	3981,1,c	;volatile
  1652                           
  1653                           ;PruebaLCD.c: 226: LATE2 = 1;
  1654   001150  848D               	bsf	3981,2,c	;volatile
  1655   001152  0012               	return	
  1656   001154                     __end_of_RGB:
  1657                           	callstack 0
  1658                           
  1659 ;; *************** function _MensajeLCD_Var *****************
  1660 ;; Defined at:
  1661 ;;		line 234 in file "LibLCDXC9.h"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;  a               1   27[COMRAM] PTR unsigned char 
  1664 ;;		 -> STR_15(18), STR_14(11), STR_13(9), STR_12(11), 
  1665 ;;		 -> STR_11(12), STR_10(14), STR_9(11), STR_8(9), 
  1666 ;;		 -> STR_7(18), STR_6(18), STR_5(15), STR_4(11), 
  1667 ;;		 -> STR_3(9), STR_2(18), STR_1(12), 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1679 ;;      Params:         1       0       0       0       0       0       0       0       0
  1680 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1681 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1682 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1683 ;;Total ram usage:        1 bytes
  1684 ;; Hardware stack levels used: 1
  1685 ;; Hardware stack levels required when called: 10
  1686 ;; This function calls:
  1687 ;;		_EscribeLCD_c
  1688 ;; This function is called by:
  1689 ;;		_main
  1690 ;;		_contador
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text6
  1695   0016EC                     __ptext6:
  1696                           	callstack 0
  1697   0016EC                     _MensajeLCD_Var:
  1698                           	callstack 19
  1699                           
  1700                           ;LibLCDXC9.h: 238: while(*a != '\0'){
  1701                           
  1702                           ;incstack = 0
  1703   0016EC  D009               	goto	l2458
  1704   0016EE                     l2454:
  1705                           
  1706                           ;LibLCDXC9.h: 239: EscribeLCD_c(*a);
  1707   0016EE  C01C  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  1708   0016F2                     	if	1	;There is more than 1 active tblptr byte
  1709   0016F2  0E08               	movlw	high __smallconst
  1710   0016F4  6EF7               	movwf	tblptrh,c
  1711   0016F6                     	endif
  1712   0016F6                     	if	0	;tblptru may be non-zero
  1713   0016F6                     	endif
  1714   0016F6                     	if	0	;tblptru may be non-zero
  1715   0016F6                     	endif
  1716   0016F6  0008               	tblrd		*
  1717   0016F8  50F5               	movf	tablat,w,c
  1718   0016FA  ECF3  F00B         	call	_EscribeLCD_c
  1719                           
  1720                           ;LibLCDXC9.h: 240: a++;
  1721   0016FE  2A1C               	incf	MensajeLCD_Var@a^0,f,c
  1722   001700                     l2458:
  1723   001700  C01C  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  1724   001704                     	if	1	;There is more than 1 active tblptr byte
  1725   001704  0E08               	movlw	high __smallconst
  1726   001706  6EF7               	movwf	tblptrh,c
  1727   001708                     	endif
  1728   001708                     	if	0	;tblptru may be non-zero
  1729   001708                     	endif
  1730   001708                     	if	0	;tblptru may be non-zero
  1731   001708                     	endif
  1732   001708  0008               	tblrd		*
  1733   00170A  50F5               	movf	tablat,w,c
  1734   00170C  0900               	iorlw	0
  1735   00170E  B4D8               	btfsc	status,2,c
  1736   001710  0012               	return	
  1737   001712  D7ED               	goto	l2454
  1738   001714                     __end_of_MensajeLCD_Var:
  1739                           	callstack 0
  1740                           
  1741 ;; *************** function _EscribeLCD_c *****************
  1742 ;; Defined at:
  1743 ;;		line 131 in file "LibLCDXC9.h"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  a               1    wreg     unsigned char 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;  a               1   26[COMRAM] unsigned char 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2, status,0, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1757 ;;      Params:         0       0       0       0       0       0       0       0       0
  1758 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1759 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1760 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1761 ;;Total ram usage:        1 bytes
  1762 ;; Hardware stack levels used: 1
  1763 ;; Hardware stack levels required when called: 9
  1764 ;; This function calls:
  1765 ;;		_EnviaDato
  1766 ;;		_HabilitaLCD
  1767 ;;		_RetardoLCD
  1768 ;; This function is called by:
  1769 ;;		_MensajeLCD_Var
  1770 ;;		_main
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           	psect	text7
  1775   0017E6                     __ptext7:
  1776                           	callstack 0
  1777   0017E6                     _EscribeLCD_c:
  1778                           	callstack 19
  1779                           
  1780                           ;incstack = 0
  1781                           ;EscribeLCD_c@a stored from wreg
  1782   0017E6  6E1B               	movwf	EscribeLCD_c@a^0,c
  1783                           
  1784                           ;LibLCDXC9.h: 135: LATA4=1;
  1785   0017E8  8889               	bsf	3977,4,c	;volatile
  1786                           
  1787                           ;LibLCDXC9.h: 136: EnviaDato(a);
  1788   0017EA  501B               	movf	EscribeLCD_c@a^0,w,c
  1789   0017EC  EC93  F00A         	call	_EnviaDato
  1790                           
  1791                           ;LibLCDXC9.h: 137: HabilitaLCD();
  1792   0017F0  EC33  F00C         	call	_HabilitaLCD	;wreg free
  1793                           
  1794                           ;LibLCDXC9.h: 138: RetardoLCD(4);
  1795   0017F4  0E04               	movlw	4
  1796   0017F6  ECF2  F009         	call	_RetardoLCD
  1797   0017FA  0012               	return		;funcret
  1798   0017FC                     __end_of_EscribeLCD_c:
  1799                           	callstack 0
  1800                           
  1801 ;; *************** function _EscribeLCD_n8 *****************
  1802 ;; Defined at:
  1803 ;;		line 140 in file "LibLCDXC9.h"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  a               1    wreg     unsigned char 
  1806 ;;  b               1   30[COMRAM] unsigned char 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  a               1   34[COMRAM] unsigned char 
  1809 ;;  unidad          1   33[COMRAM] unsigned char 
  1810 ;;  decena          1   32[COMRAM] unsigned char 
  1811 ;;  centena         1   31[COMRAM] unsigned char 
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  1    wreg      void 
  1814 ;; Registers used:
  1815 ;;		wreg, status,2, status,0, cstack
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1821 ;;      Params:         1       0       0       0       0       0       0       0       0
  1822 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1823 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1824 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1825 ;;Total ram usage:        5 bytes
  1826 ;; Hardware stack levels used: 1
  1827 ;; Hardware stack levels required when called: 9
  1828 ;; This function calls:
  1829 ;;		_EnviaDato
  1830 ;;		_HabilitaLCD
  1831 ;;		_RetardoLCD
  1832 ;;		___lbdiv
  1833 ;;		___lbmod
  1834 ;; This function is called by:
  1835 ;;		_contador
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           	psect	text8
  1840   000BEC                     __ptext8:
  1841                           	callstack 0
  1842   000BEC                     _EscribeLCD_n8:
  1843                           	callstack 20
  1844                           
  1845                           ;incstack = 0
  1846                           ;EscribeLCD_n8@a stored from wreg
  1847   000BEC  6E23               	movwf	EscribeLCD_n8@a^0,c
  1848                           
  1849                           ;LibLCDXC9.h: 145: unsigned char centena,decena,unidad;;LibLCDXC9.h: 146: LATA4=1;
  1850   000BEE  8889               	bsf	3977,4,c	;volatile
  1851                           
  1852                           ;LibLCDXC9.h: 147: switch(b){
  1853   000BF0  D065               	goto	l2450
  1854   000BF2                     l2418:
  1855   000BF2  0E0A               	movlw	10
  1856   000BF4  6E17               	movwf	___lbmod@divisor^0,c
  1857   000BF6  5023               	movf	EscribeLCD_n8@a^0,w,c
  1858   000BF8  EC8A  F00B         	call	___lbmod
  1859   000BFC  6E22               	movwf	EscribeLCD_n8@unidad^0,c
  1860                           
  1861                           ;LibLCDXC9.h: 149: EnviaDato(unidad+48);
  1862   000BFE  5022               	movf	EscribeLCD_n8@unidad^0,w,c
  1863   000C00  0F30               	addlw	48
  1864   000C02  EC93  F00A         	call	_EnviaDato
  1865                           
  1866                           ;LibLCDXC9.h: 150: HabilitaLCD();
  1867   000C06  EC33  F00C         	call	_HabilitaLCD	;wreg free
  1868                           
  1869                           ;LibLCDXC9.h: 151: RetardoLCD(4);
  1870   000C0A  0E04               	movlw	4
  1871   000C0C  ECF2  F009         	call	_RetardoLCD
  1872                           
  1873                           ;LibLCDXC9.h: 152: break;
  1874   000C10  0012               	return	
  1875   000C12                     l2424:
  1876   000C12  0E0A               	movlw	10
  1877   000C14  6E1B               	movwf	___lbdiv@divisor^0,c
  1878   000C16  0E64               	movlw	100
  1879   000C18  6E17               	movwf	___lbmod@divisor^0,c
  1880   000C1A  5023               	movf	EscribeLCD_n8@a^0,w,c
  1881   000C1C  EC8A  F00B         	call	___lbmod
  1882   000C20  ECF5  F00A         	call	___lbdiv
  1883   000C24  6E21               	movwf	EscribeLCD_n8@decena^0,c
  1884                           
  1885                           ;LibLCDXC9.h: 154: unidad=a%10;
  1886   000C26  0E0A               	movlw	10
  1887   000C28  6E17               	movwf	___lbmod@divisor^0,c
  1888   000C2A  5023               	movf	EscribeLCD_n8@a^0,w,c
  1889   000C2C  EC8A  F00B         	call	___lbmod
  1890   000C30  6E22               	movwf	EscribeLCD_n8@unidad^0,c
  1891                           
  1892                           ;LibLCDXC9.h: 155: EnviaDato(decena+48);
  1893   000C32  5021               	movf	EscribeLCD_n8@decena^0,w,c
  1894   000C34  0F30               	addlw	48
  1895   000C36  EC93  F00A         	call	_EnviaDato
  1896                           
  1897                           ;LibLCDXC9.h: 156: HabilitaLCD();
  1898   000C3A  EC33  F00C         	call	_HabilitaLCD	;wreg free
  1899                           
  1900                           ;LibLCDXC9.h: 157: RetardoLCD(4);
  1901   000C3E  0E04               	movlw	4
  1902   000C40  ECF2  F009         	call	_RetardoLCD
  1903                           
  1904                           ;LibLCDXC9.h: 158: EnviaDato(unidad+48);
  1905   000C44  5022               	movf	EscribeLCD_n8@unidad^0,w,c
  1906   000C46  0F30               	addlw	48
  1907   000C48  EC93  F00A         	call	_EnviaDato
  1908                           
  1909                           ;LibLCDXC9.h: 159: HabilitaLCD();
  1910   000C4C  EC33  F00C         	call	_HabilitaLCD	;wreg free
  1911                           
  1912                           ;LibLCDXC9.h: 160: RetardoLCD(4);
  1913   000C50  0E04               	movlw	4
  1914   000C52  ECF2  F009         	call	_RetardoLCD
  1915                           
  1916                           ;LibLCDXC9.h: 161: break;
  1917   000C56  0012               	return	
  1918   000C58                     l2434:
  1919   000C58  0E64               	movlw	100
  1920   000C5A  6E1B               	movwf	___lbdiv@divisor^0,c
  1921   000C5C  5023               	movf	EscribeLCD_n8@a^0,w,c
  1922   000C5E  ECF5  F00A         	call	___lbdiv
  1923   000C62  6E20               	movwf	EscribeLCD_n8@centena^0,c
  1924                           
  1925                           ;LibLCDXC9.h: 163: decena=(a%100)/10;
  1926   000C64  0E0A               	movlw	10
  1927   000C66  6E1B               	movwf	___lbdiv@divisor^0,c
  1928   000C68  0E64               	movlw	100
  1929   000C6A  6E17               	movwf	___lbmod@divisor^0,c
  1930   000C6C  5023               	movf	EscribeLCD_n8@a^0,w,c
  1931   000C6E  EC8A  F00B         	call	___lbmod
  1932   000C72  ECF5  F00A         	call	___lbdiv
  1933   000C76  6E21               	movwf	EscribeLCD_n8@decena^0,c
  1934                           
  1935                           ;LibLCDXC9.h: 164: unidad=a%10;
  1936   000C78  0E0A               	movlw	10
  1937   000C7A  6E17               	movwf	___lbmod@divisor^0,c
  1938   000C7C  5023               	movf	EscribeLCD_n8@a^0,w,c
  1939   000C7E  EC8A  F00B         	call	___lbmod
  1940   000C82  6E22               	movwf	EscribeLCD_n8@unidad^0,c
  1941                           
  1942                           ;LibLCDXC9.h: 165: EnviaDato(centena+48);
  1943   000C84  5020               	movf	EscribeLCD_n8@centena^0,w,c
  1944   000C86  0F30               	addlw	48
  1945   000C88  EC93  F00A         	call	_EnviaDato
  1946                           
  1947                           ;LibLCDXC9.h: 166: HabilitaLCD();
  1948   000C8C  EC33  F00C         	call	_HabilitaLCD	;wreg free
  1949                           
  1950                           ;LibLCDXC9.h: 167: RetardoLCD(4);
  1951   000C90  0E04               	movlw	4
  1952   000C92  ECF2  F009         	call	_RetardoLCD
  1953                           
  1954                           ;LibLCDXC9.h: 168: EnviaDato(decena+48);
  1955   000C96  5021               	movf	EscribeLCD_n8@decena^0,w,c
  1956   000C98  0F30               	addlw	48
  1957   000C9A  EC93  F00A         	call	_EnviaDato
  1958                           
  1959                           ;LibLCDXC9.h: 169: HabilitaLCD();
  1960   000C9E  EC33  F00C         	call	_HabilitaLCD	;wreg free
  1961                           
  1962                           ;LibLCDXC9.h: 170: RetardoLCD(4);
  1963   000CA2  0E04               	movlw	4
  1964   000CA4  ECF2  F009         	call	_RetardoLCD
  1965                           
  1966                           ;LibLCDXC9.h: 171: EnviaDato(unidad+48);
  1967   000CA8  5022               	movf	EscribeLCD_n8@unidad^0,w,c
  1968   000CAA  0F30               	addlw	48
  1969   000CAC  EC93  F00A         	call	_EnviaDato
  1970                           
  1971                           ;LibLCDXC9.h: 172: HabilitaLCD();
  1972   000CB0  EC33  F00C         	call	_HabilitaLCD	;wreg free
  1973                           
  1974                           ;LibLCDXC9.h: 173: RetardoLCD(4);
  1975   000CB4  0E04               	movlw	4
  1976   000CB6  ECF2  F009         	call	_RetardoLCD
  1977                           
  1978                           ;LibLCDXC9.h: 174: break;
  1979   000CBA  0012               	return	
  1980   000CBC                     l2450:
  1981   000CBC  501F               	movf	EscribeLCD_n8@b^0,w,c
  1982                           
  1983                           ; Switch size 1, requested type "simple"
  1984                           ; Number of cases is 3, Range of values is 1 to 3
  1985                           ; switch strategies available:
  1986                           ; Name         Instructions Cycles
  1987                           ; simple_byte           10     6 (average)
  1988                           ;	Chosen strategy is simple_byte
  1989   000CBE  0A01               	xorlw	1	; case 1
  1990   000CC0  B4D8               	btfsc	status,2,c
  1991   000CC2  D797               	goto	l2418
  1992   000CC4  0A03               	xorlw	3	; case 2
  1993   000CC6  B4D8               	btfsc	status,2,c
  1994   000CC8  D7A4               	goto	l2424
  1995   000CCA  0A01               	xorlw	1	; case 3
  1996   000CCC  A4D8               	btfss	status,2,c
  1997   000CCE  0012               	return	
  1998   000CD0  D7C3               	goto	l2434
  1999   000CD2                     __end_of_EscribeLCD_n8:
  2000                           	callstack 0
  2001                           
  2002 ;; *************** function ___lbmod *****************
  2003 ;; Defined at:
  2004 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbmod.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  dividend        1    wreg     unsigned char 
  2007 ;;  divisor         1   22[COMRAM] unsigned char 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  dividend        1   23[COMRAM] unsigned char 
  2010 ;;  rem             1   25[COMRAM] unsigned char 
  2011 ;;  counter         1   24[COMRAM] unsigned char 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      unsigned char 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2, status,0
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2021 ;;      Params:         1       0       0       0       0       0       0       0       0
  2022 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2023 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2024 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2025 ;;Total ram usage:        4 bytes
  2026 ;; Hardware stack levels used: 1
  2027 ;; Hardware stack levels required when called: 7
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_EscribeLCD_n8
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           	psect	text9
  2036   001714                     __ptext9:
  2037                           	callstack 0
  2038   001714                     ___lbmod:
  2039                           	callstack 21
  2040                           
  2041                           ;incstack = 0
  2042                           ;___lbmod@dividend stored from wreg
  2043   001714  6E18               	movwf	___lbmod@dividend^0,c
  2044   001716  0E08               	movlw	8
  2045   001718  6E19               	movwf	___lbmod@counter^0,c
  2046   00171A  6A1A               	clrf	___lbmod@rem^0,c
  2047   00171C                     l2262:
  2048   00171C  90D8               	bcf	status,0,c
  2049   00171E  3418               	rlcf	___lbmod@dividend^0,w,c
  2050   001720  341A               	rlcf	___lbmod@rem^0,w,c
  2051   001722  6E1A               	movwf	___lbmod@rem^0,c
  2052   001724  90D8               	bcf	status,0,c
  2053   001726  3618               	rlcf	___lbmod@dividend^0,f,c
  2054   001728  5017               	movf	___lbmod@divisor^0,w,c
  2055   00172A  5C1A               	subwf	___lbmod@rem^0,w,c
  2056   00172C  A0D8               	btfss	status,0,c
  2057   00172E  D002               	goto	l2270
  2058   001730  5017               	movf	___lbmod@divisor^0,w,c
  2059   001732  5E1A               	subwf	___lbmod@rem^0,f,c
  2060   001734                     l2270:
  2061   001734  2E19               	decfsz	___lbmod@counter^0,f,c
  2062   001736  D7F2               	goto	l2262
  2063   001738  501A               	movf	___lbmod@rem^0,w,c
  2064   00173A  0012               	return		;funcret
  2065   00173C                     __end_of___lbmod:
  2066                           	callstack 0
  2067                           
  2068 ;; *************** function ___lbdiv *****************
  2069 ;; Defined at:
  2070 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbdiv.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  dividend        1    wreg     unsigned char 
  2073 ;;  divisor         1   26[COMRAM] unsigned char 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  dividend        1   27[COMRAM] unsigned char 
  2076 ;;  quotient        1   29[COMRAM] unsigned char 
  2077 ;;  counter         1   28[COMRAM] unsigned char 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      unsigned char 
  2080 ;; Registers used:
  2081 ;;		wreg, status,2, status,0
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2087 ;;      Params:         1       0       0       0       0       0       0       0       0
  2088 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2089 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2090 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2091 ;;Total ram usage:        4 bytes
  2092 ;; Hardware stack levels used: 1
  2093 ;; Hardware stack levels required when called: 7
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_EscribeLCD_n8
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text10
  2102   0015EA                     __ptext10:
  2103                           	callstack 0
  2104   0015EA                     ___lbdiv:
  2105                           	callstack 21
  2106                           
  2107                           ;incstack = 0
  2108                           ;___lbdiv@dividend stored from wreg
  2109   0015EA  6E1C               	movwf	___lbdiv@dividend^0,c
  2110   0015EC  6A1E               	clrf	___lbdiv@quotient^0,c
  2111   0015EE  501B               	movf	___lbdiv@divisor^0,w,c
  2112   0015F0  B4D8               	btfsc	status,2,c
  2113   0015F2  D015               	goto	l2254
  2114   0015F4  0E01               	movlw	1
  2115   0015F6  6E1D               	movwf	___lbdiv@counter^0,c
  2116   0015F8  D003               	goto	l2242
  2117   0015FA                     l2238:
  2118   0015FA  90D8               	bcf	status,0,c
  2119   0015FC  361B               	rlcf	___lbdiv@divisor^0,f,c
  2120   0015FE  2A1D               	incf	___lbdiv@counter^0,f,c
  2121   001600                     l2242:
  2122   001600  AE1B               	btfss	___lbdiv@divisor^0,7,c
  2123   001602  D7FB               	goto	l2238
  2124   001604                     u1080:
  2125   001604  90D8               	bcf	status,0,c
  2126   001606  361E               	rlcf	___lbdiv@quotient^0,f,c
  2127   001608  501B               	movf	___lbdiv@divisor^0,w,c
  2128   00160A  5C1C               	subwf	___lbdiv@dividend^0,w,c
  2129   00160C  A0D8               	btfss	status,0,c
  2130   00160E  D003               	goto	l2250
  2131   001610  501B               	movf	___lbdiv@divisor^0,w,c
  2132   001612  5E1C               	subwf	___lbdiv@dividend^0,f,c
  2133   001614  801E               	bsf	___lbdiv@quotient^0,0,c
  2134   001616                     l2250:
  2135   001616  90D8               	bcf	status,0,c
  2136   001618  321B               	rrcf	___lbdiv@divisor^0,f,c
  2137   00161A  2E1D               	decfsz	___lbdiv@counter^0,f,c
  2138   00161C  D7F3               	goto	u1080
  2139   00161E                     l2254:
  2140   00161E  501E               	movf	___lbdiv@quotient^0,w,c
  2141   001620  0012               	return		;funcret
  2142   001622                     __end_of___lbdiv:
  2143                           	callstack 0
  2144                           
  2145 ;; *************** function _DireccionaLCD *****************
  2146 ;; Defined at:
  2147 ;;		line 243 in file "LibLCDXC9.h"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  a               1    wreg     unsigned char 
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;  a               1   26[COMRAM] unsigned char 
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  1    wreg      void 
  2154 ;; Registers used:
  2155 ;;		wreg, status,2, status,0, cstack
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2161 ;;      Params:         0       0       0       0       0       0       0       0       0
  2162 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2163 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2164 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2165 ;;Total ram usage:        1 bytes
  2166 ;; Hardware stack levels used: 1
  2167 ;; Hardware stack levels required when called: 9
  2168 ;; This function calls:
  2169 ;;		_EnviaDato
  2170 ;;		_HabilitaLCD
  2171 ;;		_RetardoLCD
  2172 ;; This function is called by:
  2173 ;;		_main
  2174 ;;		_contador
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text11
  2179   0017FC                     __ptext11:
  2180                           	callstack 0
  2181   0017FC                     _DireccionaLCD:
  2182                           	callstack 20
  2183                           
  2184                           ;incstack = 0
  2185                           ;DireccionaLCD@a stored from wreg
  2186   0017FC  6E1B               	movwf	DireccionaLCD@a^0,c
  2187                           
  2188                           ;LibLCDXC9.h: 246: LATA4=0;
  2189   0017FE  9889               	bcf	3977,4,c	;volatile
  2190                           
  2191                           ;LibLCDXC9.h: 247: EnviaDato(a);
  2192   001800  501B               	movf	DireccionaLCD@a^0,w,c
  2193   001802  EC93  F00A         	call	_EnviaDato
  2194                           
  2195                           ;LibLCDXC9.h: 248: HabilitaLCD();
  2196   001806  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2197                           
  2198                           ;LibLCDXC9.h: 249: RetardoLCD(4);
  2199   00180A  0E04               	movlw	4
  2200   00180C  ECF2  F009         	call	_RetardoLCD
  2201   001810  0012               	return		;funcret
  2202   001812                     __end_of_DireccionaLCD:
  2203                           	callstack 0
  2204                           
  2205 ;; *************** function _InicializaLCD *****************
  2206 ;; Defined at:
  2207 ;;		line 66 in file "LibLCDXC9.h"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;		None
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;		None
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		wreg, status,2, status,0, cstack
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2221 ;;      Params:         0       0       0       0       0       0       0       0       0
  2222 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2223 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2224 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2225 ;;Total ram usage:        0 bytes
  2226 ;; Hardware stack levels used: 1
  2227 ;; Hardware stack levels required when called: 10
  2228 ;; This function calls:
  2229 ;;		_BorraLCD
  2230 ;;		_EnviaDato
  2231 ;;		_HabilitaLCD
  2232 ;;		_RetardoLCD
  2233 ;; This function is called by:
  2234 ;;		_main
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           	psect	text12
  2239   000F3C                     __ptext12:
  2240                           	callstack 0
  2241   000F3C                     _InicializaLCD:
  2242                           	callstack 20
  2243                           
  2244                           ;LibLCDXC9.h: 68: LATA4=0;
  2245                           
  2246                           ;incstack = 0
  2247   000F3C  9889               	bcf	3977,4,c	;volatile
  2248                           
  2249                           ;LibLCDXC9.h: 69: if(interfaz==4)
  2250   000F3E  0E04               	movlw	4
  2251   000F40  1842               	xorwf	_interfaz^0,w,c
  2252   000F42  A4D8               	btfss	status,2,c
  2253   000F44  D004               	goto	l1674
  2254                           
  2255                           ;LibLCDXC9.h: 70: LATD=(LATD & 0b00001111) | 0x30;
  2256   000F46  508C               	movf	140,w,c	;volatile
  2257   000F48  0B0F               	andlw	15
  2258   000F4A  0930               	iorlw	48
  2259   000F4C  D001               	goto	L1
  2260   000F4E                     l1674:
  2261                           
  2262                           ;LibLCDXC9.h: 71: else;LibLCDXC9.h: 72: LATD=0x3F;
  2263   000F4E  0E3F               	movlw	63
  2264   000F50                     L1:
  2265   000F50  6E8C               	movwf	140,c	;volatile
  2266                           
  2267                           ;LibLCDXC9.h: 73: HabilitaLCD();
  2268   000F52  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2269                           
  2270                           ;LibLCDXC9.h: 74: RetardoLCD(1);
  2271   000F56  0E01               	movlw	1
  2272   000F58  ECF2  F009         	call	_RetardoLCD
  2273                           
  2274                           ;LibLCDXC9.h: 75: if(interfaz==4)
  2275   000F5C  0E04               	movlw	4
  2276   000F5E  1842               	xorwf	_interfaz^0,w,c
  2277   000F60  A4D8               	btfss	status,2,c
  2278   000F62  D004               	goto	l1684
  2279                           
  2280                           ;LibLCDXC9.h: 76: LATD=(LATD & 0b00001111) | 0x30;
  2281   000F64  508C               	movf	140,w,c	;volatile
  2282   000F66  0B0F               	andlw	15
  2283   000F68  0930               	iorlw	48
  2284   000F6A  D001               	goto	L2
  2285   000F6C                     l1684:
  2286                           
  2287                           ;LibLCDXC9.h: 77: else;LibLCDXC9.h: 78: LATD=0x3F;
  2288   000F6C  0E3F               	movlw	63
  2289   000F6E                     L2:
  2290   000F6E  6E8C               	movwf	140,c	;volatile
  2291                           
  2292                           ;LibLCDXC9.h: 79: HabilitaLCD();
  2293   000F70  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2294                           
  2295                           ;LibLCDXC9.h: 80: RetardoLCD(3);
  2296   000F74  0E03               	movlw	3
  2297   000F76  ECF2  F009         	call	_RetardoLCD
  2298                           
  2299                           ;LibLCDXC9.h: 81: if(interfaz==4)
  2300   000F7A  0E04               	movlw	4
  2301   000F7C  1842               	xorwf	_interfaz^0,w,c
  2302   000F7E  A4D8               	btfss	status,2,c
  2303   000F80  D004               	goto	l1694
  2304                           
  2305                           ;LibLCDXC9.h: 82: LATD=(LATD & 0b00001111) | 0x30;
  2306   000F82  508C               	movf	140,w,c	;volatile
  2307   000F84  0B0F               	andlw	15
  2308   000F86  0930               	iorlw	48
  2309   000F88  D001               	goto	L3
  2310   000F8A                     l1694:
  2311                           
  2312                           ;LibLCDXC9.h: 83: else;LibLCDXC9.h: 84: LATD=0x3F;
  2313   000F8A  0E3F               	movlw	63
  2314   000F8C                     L3:
  2315   000F8C  6E8C               	movwf	140,c	;volatile
  2316                           
  2317                           ;LibLCDXC9.h: 85: HabilitaLCD();
  2318   000F8E  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2319                           
  2320                           ;LibLCDXC9.h: 86: RetardoLCD(4);
  2321   000F92  0E04               	movlw	4
  2322   000F94  ECF2  F009         	call	_RetardoLCD
  2323                           
  2324                           ;LibLCDXC9.h: 87: if(interfaz==4){
  2325   000F98  0E04               	movlw	4
  2326   000F9A  1842               	xorwf	_interfaz^0,w,c
  2327   000F9C  A4D8               	btfss	status,2,c
  2328   000F9E  D011               	goto	l1714
  2329                           
  2330                           ;LibLCDXC9.h: 88: LATD=(LATD & 0b00001111) | 0x20;
  2331   000FA0  508C               	movf	140,w,c	;volatile
  2332   000FA2  0B0F               	andlw	15
  2333   000FA4  0920               	iorlw	32
  2334   000FA6  6E8C               	movwf	140,c	;volatile
  2335                           
  2336                           ;LibLCDXC9.h: 89: HabilitaLCD();
  2337   000FA8  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2338                           
  2339                           ;LibLCDXC9.h: 90: RetardoLCD(4);
  2340   000FAC  0E04               	movlw	4
  2341   000FAE  ECF2  F009         	call	_RetardoLCD
  2342                           
  2343                           ;LibLCDXC9.h: 91: EnviaDato(0x2F);
  2344   000FB2  0E2F               	movlw	47
  2345   000FB4  EC93  F00A         	call	_EnviaDato
  2346                           
  2347                           ;LibLCDXC9.h: 92: HabilitaLCD();
  2348   000FB8  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2349                           
  2350                           ;LibLCDXC9.h: 93: RetardoLCD(4);
  2351   000FBC  0E04               	movlw	4
  2352   000FBE  ECF2  F009         	call	_RetardoLCD
  2353   000FC2                     l1714:
  2354                           
  2355                           ;LibLCDXC9.h: 94: };LibLCDXC9.h: 95: BorraLCD();
  2356   000FC2  EC1F  F00C         	call	_BorraLCD	;wreg free
  2357                           
  2358                           ;LibLCDXC9.h: 96: EnviaDato(0xF);
  2359   000FC6  0E0F               	movlw	15
  2360   000FC8  EC93  F00A         	call	_EnviaDato
  2361                           
  2362                           ;LibLCDXC9.h: 97: HabilitaLCD();
  2363   000FCC  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2364                           
  2365                           ;LibLCDXC9.h: 98: RetardoLCD(4);
  2366   000FD0  0E04               	movlw	4
  2367   000FD2  ECF2  F009         	call	_RetardoLCD
  2368   000FD6  0012               	return		;funcret
  2369   000FD8                     __end_of_InicializaLCD:
  2370                           	callstack 0
  2371                           
  2372 ;; *************** function _ConfiguraLCD *****************
  2373 ;; Defined at:
  2374 ;;		line 50 in file "LibLCDXC9.h"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  a               1    wreg     unsigned char 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  a               1   22[COMRAM] unsigned char 
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      void 
  2381 ;; Registers used:
  2382 ;;		wreg, status,2, status,0
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2388 ;;      Params:         0       0       0       0       0       0       0       0       0
  2389 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2390 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2391 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2392 ;;Total ram usage:        1 bytes
  2393 ;; Hardware stack levels used: 1
  2394 ;; Hardware stack levels required when called: 7
  2395 ;; This function calls:
  2396 ;;		Nothing
  2397 ;; This function is called by:
  2398 ;;		_main
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           	psect	text13
  2403   0017CE                     __ptext13:
  2404                           	callstack 0
  2405   0017CE                     _ConfiguraLCD:
  2406                           	callstack 23
  2407                           
  2408                           ;incstack = 0
  2409                           ;ConfiguraLCD@a stored from wreg
  2410   0017CE  6E17               	movwf	ConfiguraLCD@a^0,c
  2411                           
  2412                           ;LibLCDXC9.h: 51: if(a==4 | a ==8)
  2413   0017D0  0E04               	movlw	4
  2414   0017D2  1817               	xorwf	ConfiguraLCD@a^0,w,c
  2415   0017D4  B4D8               	btfsc	status,2,c
  2416   0017D6  D004               	goto	u600
  2417   0017D8  0E08               	movlw	8
  2418   0017DA  1817               	xorwf	ConfiguraLCD@a^0,w,c
  2419   0017DC  A4D8               	btfss	status,2,c
  2420   0017DE  0012               	return	
  2421   0017E0                     u600:
  2422                           
  2423                           ;LibLCDXC9.h: 52: interfaz=a;
  2424   0017E0  C017  F042         	movff	ConfiguraLCD@a,_interfaz
  2425   0017E4  0012               	return		;funcret
  2426   0017E6                     __end_of_ConfiguraLCD:
  2427                           	callstack 0
  2428                           
  2429 ;; *************** function _CaracterQbert *****************
  2430 ;; Defined at:
  2431 ;;		line 333 in file "LibLCDXC9.h"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;		None
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;		None
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      void 
  2438 ;; Registers used:
  2439 ;;		wreg, status,2, status,0, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2445 ;;      Params:         0       0       0       0       0       0       0       0       0
  2446 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2447 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2448 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2449 ;;Total ram usage:        0 bytes
  2450 ;; Hardware stack levels used: 1
  2451 ;; Hardware stack levels required when called: 11
  2452 ;; This function calls:
  2453 ;;		_ComandoLCD
  2454 ;;		_EnviaDato
  2455 ;;		_HabilitaLCD
  2456 ;;		_RetardoLCD
  2457 ;; This function is called by:
  2458 ;;		_main
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text14
  2463   0011CC                     __ptext14:
  2464                           	callstack 0
  2465   0011CC                     _CaracterQbert:
  2466                           	callstack 19
  2467                           
  2468                           ;LibLCDXC9.h: 334: ComandoLCD(0b01010000);
  2469                           
  2470                           ;incstack = 0
  2471   0011CC  0E50               	movlw	80
  2472   0011CE  EC47  F00B         	call	_ComandoLCD
  2473                           
  2474                           ;LibLCDXC9.h: 335: LATA4=1;
  2475   0011D2  8889               	bsf	3977,4,c	;volatile
  2476                           
  2477                           ;LibLCDXC9.h: 336: RetardoLCD(4);
  2478   0011D4  0E04               	movlw	4
  2479   0011D6  ECF2  F009         	call	_RetardoLCD
  2480                           
  2481                           ;LibLCDXC9.h: 337: EnviaDato(0b11111);
  2482   0011DA  0E1F               	movlw	31
  2483   0011DC  EC93  F00A         	call	_EnviaDato
  2484                           
  2485                           ;LibLCDXC9.h: 338: HabilitaLCD();
  2486   0011E0  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2487                           
  2488                           ;LibLCDXC9.h: 339: EnviaDato(0b10101);
  2489   0011E4  0E15               	movlw	21
  2490   0011E6  EC93  F00A         	call	_EnviaDato
  2491                           
  2492                           ;LibLCDXC9.h: 340: HabilitaLCD();
  2493   0011EA  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2494                           
  2495                           ;LibLCDXC9.h: 341: EnviaDato(0b11111);
  2496   0011EE  0E1F               	movlw	31
  2497   0011F0  EC93  F00A         	call	_EnviaDato
  2498                           
  2499                           ;LibLCDXC9.h: 342: HabilitaLCD();
  2500   0011F4  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2501                           
  2502                           ;LibLCDXC9.h: 343: EnviaDato(0b11111);
  2503   0011F8  0E1F               	movlw	31
  2504   0011FA  EC93  F00A         	call	_EnviaDato
  2505                           
  2506                           ;LibLCDXC9.h: 344: HabilitaLCD();
  2507   0011FE  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2508                           
  2509                           ;LibLCDXC9.h: 345: EnviaDato(0b01110);
  2510   001202  0E0E               	movlw	14
  2511   001204  EC93  F00A         	call	_EnviaDato
  2512                           
  2513                           ;LibLCDXC9.h: 346: HabilitaLCD();
  2514   001208  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2515                           
  2516                           ;LibLCDXC9.h: 347: EnviaDato(0b01010);
  2517   00120C  0E0A               	movlw	10
  2518   00120E  EC93  F00A         	call	_EnviaDato
  2519                           
  2520                           ;LibLCDXC9.h: 348: HabilitaLCD();
  2521   001212  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2522                           
  2523                           ;LibLCDXC9.h: 349: EnviaDato(0b11011);
  2524   001216  0E1B               	movlw	27
  2525   001218  EC93  F00A         	call	_EnviaDato
  2526                           
  2527                           ;LibLCDXC9.h: 350: HabilitaLCD();
  2528   00121C  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2529                           
  2530                           ;LibLCDXC9.h: 351: EnviaDato(0b00000);
  2531   001220  0E00               	movlw	0
  2532   001222  EC93  F00A         	call	_EnviaDato
  2533                           
  2534                           ;LibLCDXC9.h: 352: HabilitaLCD();
  2535   001226  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2536                           
  2537                           ;LibLCDXC9.h: 353: LATA4 = 0;
  2538   00122A  9889               	bcf	3977,4,c	;volatile
  2539                           
  2540                           ;LibLCDXC9.h: 354: EnviaDato(0xC1);
  2541   00122C  0EC1               	movlw	193
  2542   00122E  EC93  F00A         	call	_EnviaDato
  2543                           
  2544                           ;LibLCDXC9.h: 355: HabilitaLCD();
  2545   001232  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2546                           
  2547                           ;LibLCDXC9.h: 356: RetardoLCD(2);
  2548   001236  0E02               	movlw	2
  2549   001238  ECF2  F009         	call	_RetardoLCD
  2550   00123C  0012               	return		;funcret
  2551   00123E                     __end_of_CaracterQbert:
  2552                           	callstack 0
  2553                           
  2554 ;; *************** function _CaracterCara *****************
  2555 ;; Defined at:
  2556 ;;		line 307 in file "LibLCDXC9.h"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;		None
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;		None
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      void 
  2563 ;; Registers used:
  2564 ;;		wreg, status,2, status,0, cstack
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2570 ;;      Params:         0       0       0       0       0       0       0       0       0
  2571 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2572 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2573 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2574 ;;Total ram usage:        0 bytes
  2575 ;; Hardware stack levels used: 1
  2576 ;; Hardware stack levels required when called: 11
  2577 ;; This function calls:
  2578 ;;		_ComandoLCD
  2579 ;;		_EnviaDato
  2580 ;;		_HabilitaLCD
  2581 ;;		_RetardoLCD
  2582 ;; This function is called by:
  2583 ;;		_main
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text15
  2588   00123E                     __ptext15:
  2589                           	callstack 0
  2590   00123E                     _CaracterCara:
  2591                           	callstack 19
  2592                           
  2593                           ;LibLCDXC9.h: 308: ComandoLCD(0b01001000);
  2594                           
  2595                           ;incstack = 0
  2596   00123E  0E48               	movlw	72
  2597   001240  EC47  F00B         	call	_ComandoLCD
  2598                           
  2599                           ;LibLCDXC9.h: 309: LATA4=1;
  2600   001244  8889               	bsf	3977,4,c	;volatile
  2601                           
  2602                           ;LibLCDXC9.h: 310: RetardoLCD(4);
  2603   001246  0E04               	movlw	4
  2604   001248  ECF2  F009         	call	_RetardoLCD
  2605                           
  2606                           ;LibLCDXC9.h: 311: EnviaDato(0b11011);
  2607   00124C  0E1B               	movlw	27
  2608   00124E  EC93  F00A         	call	_EnviaDato
  2609                           
  2610                           ;LibLCDXC9.h: 312: HabilitaLCD();
  2611   001252  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2612                           
  2613                           ;LibLCDXC9.h: 313: EnviaDato(0b00000);
  2614   001256  0E00               	movlw	0
  2615   001258  EC93  F00A         	call	_EnviaDato
  2616                           
  2617                           ;LibLCDXC9.h: 314: HabilitaLCD();
  2618   00125C  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2619                           
  2620                           ;LibLCDXC9.h: 315: EnviaDato(0b11011);
  2621   001260  0E1B               	movlw	27
  2622   001262  EC93  F00A         	call	_EnviaDato
  2623                           
  2624                           ;LibLCDXC9.h: 316: HabilitaLCD();
  2625   001266  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2626                           
  2627                           ;LibLCDXC9.h: 317: EnviaDato(0b11011);
  2628   00126A  0E1B               	movlw	27
  2629   00126C  EC93  F00A         	call	_EnviaDato
  2630                           
  2631                           ;LibLCDXC9.h: 318: HabilitaLCD();
  2632   001270  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2633                           
  2634                           ;LibLCDXC9.h: 319: EnviaDato(0b00000);
  2635   001274  0E00               	movlw	0
  2636   001276  EC93  F00A         	call	_EnviaDato
  2637                           
  2638                           ;LibLCDXC9.h: 320: HabilitaLCD();
  2639   00127A  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2640                           
  2641                           ;LibLCDXC9.h: 321: EnviaDato(0b10001);
  2642   00127E  0E11               	movlw	17
  2643   001280  EC93  F00A         	call	_EnviaDato
  2644                           
  2645                           ;LibLCDXC9.h: 322: HabilitaLCD();
  2646   001284  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2647                           
  2648                           ;LibLCDXC9.h: 323: EnviaDato(0b01110);
  2649   001288  0E0E               	movlw	14
  2650   00128A  EC93  F00A         	call	_EnviaDato
  2651                           
  2652                           ;LibLCDXC9.h: 324: HabilitaLCD();
  2653   00128E  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2654                           
  2655                           ;LibLCDXC9.h: 325: EnviaDato(0b00000);
  2656   001292  0E00               	movlw	0
  2657   001294  EC93  F00A         	call	_EnviaDato
  2658                           
  2659                           ;LibLCDXC9.h: 326: HabilitaLCD();
  2660   001298  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2661                           
  2662                           ;LibLCDXC9.h: 327: LATA4 = 0;
  2663   00129C  9889               	bcf	3977,4,c	;volatile
  2664                           
  2665                           ;LibLCDXC9.h: 328: EnviaDato(0xC0);
  2666   00129E  0EC0               	movlw	192
  2667   0012A0  EC93  F00A         	call	_EnviaDato
  2668                           
  2669                           ;LibLCDXC9.h: 329: HabilitaLCD();
  2670   0012A4  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2671                           
  2672                           ;LibLCDXC9.h: 330: RetardoLCD(2);
  2673   0012A8  0E02               	movlw	2
  2674   0012AA  ECF2  F009         	call	_RetardoLCD
  2675   0012AE  0012               	return		;funcret
  2676   0012B0                     __end_of_CaracterCara:
  2677                           	callstack 0
  2678                           
  2679 ;; *************** function _ComandoLCD *****************
  2680 ;; Defined at:
  2681 ;;		line 118 in file "LibLCDXC9.h"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;  a               1    wreg     unsigned char 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;  a               1   26[COMRAM] unsigned char 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      void 
  2688 ;; Registers used:
  2689 ;;		wreg, status,2, status,0, cstack
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2695 ;;      Params:         0       0       0       0       0       0       0       0       0
  2696 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2697 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2698 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2699 ;;Total ram usage:        1 bytes
  2700 ;; Hardware stack levels used: 1
  2701 ;; Hardware stack levels required when called: 10
  2702 ;; This function calls:
  2703 ;;		_BorraLCD
  2704 ;;		_CursorAInicio
  2705 ;;		_EnviaDato
  2706 ;;		_HabilitaLCD
  2707 ;;		_RetardoLCD
  2708 ;; This function is called by:
  2709 ;;		_CaracterCara
  2710 ;;		_CaracterQbert
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text16
  2715   00168E                     __ptext16:
  2716                           	callstack 0
  2717   00168E                     _ComandoLCD:
  2718                           	callstack 19
  2719                           
  2720                           ;incstack = 0
  2721                           ;ComandoLCD@a stored from wreg
  2722   00168E  6E1B               	movwf	ComandoLCD@a^0,c
  2723                           
  2724                           ;LibLCDXC9.h: 120: LATA4=0;
  2725   001690  9889               	bcf	3977,4,c	;volatile
  2726                           
  2727                           ;LibLCDXC9.h: 121: if(a==1)
  2728   001692  041B               	decf	ComandoLCD@a^0,w,c
  2729   001694  A4D8               	btfss	status,2,c
  2730   001696  D003               	goto	l1436
  2731                           
  2732                           ;LibLCDXC9.h: 122: BorraLCD();
  2733   001698  EC1F  F00C         	call	_BorraLCD	;wreg free
  2734   00169C  0012               	return	
  2735   00169E                     l1436:
  2736                           
  2737                           ;LibLCDXC9.h: 123: else if((a&0b11111110)==2)
  2738   00169E  501B               	movf	ComandoLCD@a^0,w,c
  2739   0016A0  0BFE               	andlw	254
  2740   0016A2  0A02               	xorlw	2
  2741   0016A4  A4D8               	btfss	status,2,c
  2742   0016A6  D003               	goto	l1440
  2743                           
  2744                           ;LibLCDXC9.h: 124: CursorAInicio();
  2745   0016A8  EC49  F00C         	call	_CursorAInicio	;wreg free
  2746   0016AC  0012               	return	
  2747   0016AE                     l1440:
  2748                           
  2749                           ;LibLCDXC9.h: 125: else{;LibLCDXC9.h: 126: EnviaDato(a);
  2750   0016AE  501B               	movf	ComandoLCD@a^0,w,c
  2751   0016B0  EC93  F00A         	call	_EnviaDato
  2752                           
  2753                           ;LibLCDXC9.h: 127: HabilitaLCD();
  2754   0016B4  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2755                           
  2756                           ;LibLCDXC9.h: 128: RetardoLCD(4);
  2757   0016B8  0E04               	movlw	4
  2758   0016BA  ECF2  F009         	call	_RetardoLCD
  2759   0016BE  0012               	return		;funcret
  2760   0016C0                     __end_of_ComandoLCD:
  2761                           	callstack 0
  2762                           
  2763 ;; *************** function _CursorAInicio *****************
  2764 ;; Defined at:
  2765 ;;		line 114 in file "LibLCDXC9.h"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;		None
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;		None
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  1    wreg      void 
  2772 ;; Registers used:
  2773 ;;		None
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2779 ;;      Params:         0       0       0       0       0       0       0       0       0
  2780 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2781 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2782 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2783 ;;Total ram usage:        0 bytes
  2784 ;; Hardware stack levels used: 1
  2785 ;; Hardware stack levels required when called: 7
  2786 ;; This function calls:
  2787 ;;		Nothing
  2788 ;; This function is called by:
  2789 ;;		_ComandoLCD
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text17
  2794   001892                     __ptext17:
  2795                           	callstack 0
  2796   001892                     _CursorAInicio:
  2797                           	callstack 21
  2798                           
  2799                           ;incstack = 0
  2800   001892  0012               	return		;funcret
  2801   001894                     __end_of_CursorAInicio:
  2802                           	callstack 0
  2803                           
  2804 ;; *************** function _BorraLCD *****************
  2805 ;; Defined at:
  2806 ;;		line 107 in file "LibLCDXC9.h"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;		None
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;		None
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2, status,0, cstack
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2820 ;;      Params:         0       0       0       0       0       0       0       0       0
  2821 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2822 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2823 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2824 ;;Total ram usage:        0 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; Hardware stack levels required when called: 9
  2827 ;; This function calls:
  2828 ;;		_EnviaDato
  2829 ;;		_HabilitaLCD
  2830 ;;		_RetardoLCD
  2831 ;; This function is called by:
  2832 ;;		_InicializaLCD
  2833 ;;		_ComandoLCD
  2834 ;;		_main
  2835 ;;		_contador
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text18
  2840   00183E                     __ptext18:
  2841                           	callstack 0
  2842   00183E                     _BorraLCD:
  2843                           	callstack 20
  2844                           
  2845                           ;LibLCDXC9.h: 109: LATA4=0;
  2846                           
  2847                           ;incstack = 0
  2848   00183E  9889               	bcf	3977,4,c	;volatile
  2849                           
  2850                           ;LibLCDXC9.h: 110: EnviaDato(0x01);
  2851   001840  0E01               	movlw	1
  2852   001842  EC93  F00A         	call	_EnviaDato
  2853                           
  2854                           ;LibLCDXC9.h: 111: HabilitaLCD();
  2855   001846  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2856                           
  2857                           ;LibLCDXC9.h: 112: RetardoLCD(2);
  2858   00184A  0E02               	movlw	2
  2859   00184C  ECF2  F009         	call	_RetardoLCD
  2860   001850  0012               	return		;funcret
  2861   001852                     __end_of_BorraLCD:
  2862                           	callstack 0
  2863                           
  2864 ;; *************** function _EnviaDato *****************
  2865 ;; Defined at:
  2866 ;;		line 54 in file "LibLCDXC9.h"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;  a               1    wreg     unsigned char 
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;  a               1   25[COMRAM] unsigned char 
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1    wreg      void 
  2873 ;; Registers used:
  2874 ;;		wreg, status,2, status,0, cstack
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2880 ;;      Params:         0       0       0       0       0       0       0       0       0
  2881 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2882 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2883 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2884 ;;Total ram usage:        2 bytes
  2885 ;; Hardware stack levels used: 1
  2886 ;; Hardware stack levels required when called: 8
  2887 ;; This function calls:
  2888 ;;		_HabilitaLCD
  2889 ;;		_RetardoLCD
  2890 ;; This function is called by:
  2891 ;;		_InicializaLCD
  2892 ;;		_BorraLCD
  2893 ;;		_ComandoLCD
  2894 ;;		_EscribeLCD_c
  2895 ;;		_EscribeLCD_n8
  2896 ;;		_DireccionaLCD
  2897 ;;		_CaracterCara
  2898 ;;		_CaracterQbert
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           	psect	text19
  2903   001526                     __ptext19:
  2904                           	callstack 0
  2905   001526                     _EnviaDato:
  2906                           	callstack 19
  2907                           
  2908                           ;incstack = 0
  2909                           ;EnviaDato@a stored from wreg
  2910   001526  6E1A               	movwf	EnviaDato@a^0,c
  2911                           
  2912                           ;LibLCDXC9.h: 55: if(interfaz==4){
  2913   001528  0E04               	movlw	4
  2914   00152A  1842               	xorwf	_interfaz^0,w,c
  2915   00152C  A4D8               	btfss	status,2,c
  2916   00152E  D017               	goto	l1144
  2917                           
  2918                           ;LibLCDXC9.h: 56: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  2919   001530  C01A  F019         	movff	EnviaDato@a,??_EnviaDato
  2920   001534  0EF0               	movlw	240
  2921   001536  1619               	andwf	??_EnviaDato^0,f,c
  2922   001538  508C               	movf	140,w,c	;volatile
  2923   00153A  0B0F               	andlw	15
  2924   00153C  1019               	iorwf	??_EnviaDato^0,w,c
  2925   00153E  6E8C               	movwf	140,c	;volatile
  2926                           
  2927                           ;LibLCDXC9.h: 57: HabilitaLCD();
  2928   001540  EC33  F00C         	call	_HabilitaLCD	;wreg free
  2929                           
  2930                           ;LibLCDXC9.h: 58: RetardoLCD(1);
  2931   001544  0E01               	movlw	1
  2932   001546  ECF2  F009         	call	_RetardoLCD
  2933                           
  2934                           ;LibLCDXC9.h: 59: LATD=(LATD & 0b00001111) | (a<<4);
  2935   00154A  C01A  F019         	movff	EnviaDato@a,??_EnviaDato
  2936   00154E  3A19               	swapf	??_EnviaDato^0,f,c
  2937   001550  0EF0               	movlw	240
  2938   001552  1619               	andwf	??_EnviaDato^0,f,c
  2939   001554  508C               	movf	140,w,c	;volatile
  2940   001556  0B0F               	andlw	15
  2941   001558  1019               	iorwf	??_EnviaDato^0,w,c
  2942   00155A  6E8C               	movwf	140,c	;volatile
  2943                           
  2944                           ;LibLCDXC9.h: 62: }else if(interfaz==8){
  2945   00155C  0012               	return	
  2946   00155E                     l1144:
  2947   00155E  0E08               	movlw	8
  2948   001560  1842               	xorwf	_interfaz^0,w,c
  2949   001562  A4D8               	btfss	status,2,c
  2950   001564  0012               	return	
  2951                           
  2952                           ;LibLCDXC9.h: 63: LATD=a;
  2953   001566  C01A  FF8C         	movff	EnviaDato@a,3980	;volatile
  2954   00156A  0012               	return		;funcret
  2955   00156C                     __end_of_EnviaDato:
  2956                           	callstack 0
  2957                           
  2958 ;; *************** function _RetardoLCD *****************
  2959 ;; Defined at:
  2960 ;;		line 287 in file "LibLCDXC9.h"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  a               1    wreg     unsigned char 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;  a               1   23[COMRAM] unsigned char 
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      void 
  2967 ;; Registers used:
  2968 ;;		wreg, status,2, status,0
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2974 ;;      Params:         0       0       0       0       0       0       0       0       0
  2975 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2976 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2977 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2978 ;;Total ram usage:        2 bytes
  2979 ;; Hardware stack levels used: 1
  2980 ;; Hardware stack levels required when called: 7
  2981 ;; This function calls:
  2982 ;;		Nothing
  2983 ;; This function is called by:
  2984 ;;		_EnviaDato
  2985 ;;		_InicializaLCD
  2986 ;;		_BorraLCD
  2987 ;;		_ComandoLCD
  2988 ;;		_EscribeLCD_c
  2989 ;;		_EscribeLCD_n8
  2990 ;;		_DireccionaLCD
  2991 ;;		_CaracterCara
  2992 ;;		_CaracterQbert
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           	psect	text20
  2997   0013E4                     __ptext20:
  2998                           	callstack 0
  2999   0013E4                     _RetardoLCD:
  3000                           	callstack 20
  3001                           
  3002                           ;incstack = 0
  3003                           ;RetardoLCD@a stored from wreg
  3004   0013E4  6E18               	movwf	RetardoLCD@a^0,c
  3005                           
  3006                           ;LibLCDXC9.h: 288: switch(a){
  3007   0013E6  D01B               	goto	l1118
  3008   0013E8                     l1108:
  3009   0013E8  0E05               	movlw	5
  3010   0013EA  6E17               	movwf	??_RetardoLCD^0,c
  3011   0013EC  0EDE               	movlw	222
  3012   0013EE                     u1847:
  3013   0013EE  2EE8               	decfsz	wreg,f,c
  3014   0013F0  D7FE               	bra	u1847
  3015   0013F2  2E17               	decfsz	??_RetardoLCD^0,f,c
  3016   0013F4  D7FC               	bra	u1847
  3017                           
  3018                           ;LibLCDXC9.h: 291: break;
  3019   0013F6  0012               	return	
  3020   0013F8                     l1110:
  3021   0013F8  0E53               	movlw	83
  3022   0013FA                     u1857:
  3023   0013FA  2EE8               	decfsz	wreg,f,c
  3024   0013FC  D7FE               	bra	u1857
  3025   0013FE  0000               	nop	
  3026                           
  3027                           ;LibLCDXC9.h: 293: _delay((unsigned long)((640)*(1000000/4000000.0)));
  3028   001400  0E35               	movlw	53
  3029   001402                     u1867:
  3030   001402  2EE8               	decfsz	wreg,f,c
  3031   001404  D7FE               	bra	u1867
  3032   001406  0000               	nop	
  3033                           
  3034                           ;LibLCDXC9.h: 295: break;
  3035   001408  0012               	return	
  3036   00140A                     l1112:
  3037   00140A  0E08               	movlw	8
  3038   00140C                     u1877:
  3039   00140C  2EE8               	decfsz	wreg,f,c
  3040   00140E  D7FE               	bra	u1877
  3041   001410  0000               	nop	
  3042                           
  3043                           ;LibLCDXC9.h: 298: break;
  3044   001412  0012               	return	
  3045   001414                     l1114:
  3046   001414  0E03               	movlw	3
  3047   001416                     u1887:
  3048   001416  2EE8               	decfsz	wreg,f,c
  3049   001418  D7FE               	bra	u1887
  3050   00141A  0000               	nop	
  3051                           
  3052                           ;LibLCDXC9.h: 301: break;
  3053   00141C  0012               	return	
  3054   00141E                     l1118:
  3055   00141E  5018               	movf	RetardoLCD@a^0,w,c
  3056                           
  3057                           ; Switch size 1, requested type "simple"
  3058                           ; Number of cases is 4, Range of values is 1 to 4
  3059                           ; switch strategies available:
  3060                           ; Name         Instructions Cycles
  3061                           ; simple_byte           13     7 (average)
  3062                           ;	Chosen strategy is simple_byte
  3063   001420  0A01               	xorlw	1	; case 1
  3064   001422  B4D8               	btfsc	status,2,c
  3065   001424  D7E1               	goto	l1108
  3066   001426  0A03               	xorlw	3	; case 2
  3067   001428  B4D8               	btfsc	status,2,c
  3068   00142A  D7E6               	goto	l1110
  3069   00142C  0A01               	xorlw	1	; case 3
  3070   00142E  B4D8               	btfsc	status,2,c
  3071   001430  D7EC               	goto	l1112
  3072   001432  0A07               	xorlw	7	; case 4
  3073   001434  A4D8               	btfss	status,2,c
  3074   001436  0012               	return	
  3075   001438  D7ED               	goto	l1114
  3076   00143A                     __end_of_RetardoLCD:
  3077                           	callstack 0
  3078                           
  3079 ;; *************** function _HabilitaLCD *****************
  3080 ;; Defined at:
  3081 ;;		line 100 in file "LibLCDXC9.h"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;		None
  3084 ;; Auto vars:     Size  Location     Type
  3085 ;;		None
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  1    wreg      void 
  3088 ;; Registers used:
  3089 ;;		wreg
  3090 ;; Tracked objects:
  3091 ;;		On entry : 0/0
  3092 ;;		On exit  : 0/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3095 ;;      Params:         0       0       0       0       0       0       0       0       0
  3096 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3097 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3098 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3099 ;;Total ram usage:        0 bytes
  3100 ;; Hardware stack levels used: 1
  3101 ;; Hardware stack levels required when called: 7
  3102 ;; This function calls:
  3103 ;;		Nothing
  3104 ;; This function is called by:
  3105 ;;		_EnviaDato
  3106 ;;		_InicializaLCD
  3107 ;;		_BorraLCD
  3108 ;;		_ComandoLCD
  3109 ;;		_EscribeLCD_c
  3110 ;;		_EscribeLCD_n8
  3111 ;;		_DireccionaLCD
  3112 ;;		_CaracterCara
  3113 ;;		_CaracterQbert
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text21
  3118   001866                     __ptext21:
  3119                           	callstack 0
  3120   001866                     _HabilitaLCD:
  3121                           	callstack 20
  3122                           
  3123                           ;LibLCDXC9.h: 102: LATA5=1;
  3124                           
  3125                           ;incstack = 0
  3126   001866  8A89               	bsf	3977,5,c	;volatile
  3127                           
  3128                           ;LibLCDXC9.h: 103: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3129   001868  0E03               	movlw	3
  3130   00186A                     u1897:
  3131   00186A  2EE8               	decfsz	wreg,f,c
  3132   00186C  D7FE               	bra	u1897
  3133   00186E  0000               	nop	
  3134                           
  3135                           ;LibLCDXC9.h: 105: LATA5=0;
  3136   001870  9A89               	bcf	3977,5,c	;volatile
  3137   001872  0012               	return		;funcret
  3138   001874                     __end_of_HabilitaLCD:
  3139                           	callstack 0
  3140                           
  3141 ;; *************** function _ISR *****************
  3142 ;; Defined at:
  3143 ;;		line 275 in file "PruebaLCD.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;		None
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;		None
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  1    wreg      void 
  3150 ;; Registers used:
  3151 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3157 ;;      Params:         0       0       0       0       0       0       0       0       0
  3158 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3159 ;;      Temps:          7       0       0       0       0       0       0       0       0
  3160 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3161 ;;Total ram usage:        7 bytes
  3162 ;; Hardware stack levels used: 1
  3163 ;; Hardware stack levels required when called: 6
  3164 ;; This function calls:
  3165 ;;		_borrarTexto
  3166 ;;		_escribirDig
  3167 ;;		_fin
  3168 ;;		_luzFondo
  3169 ;;		_ok
  3170 ;;		_parEmerg
  3171 ;;		_reiCon
  3172 ;; This function is called by:
  3173 ;;		Interrupt level 2
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           	psect	intcode
  3178   000008                     __pintcode:
  3179                           	callstack 0
  3180   000008                     _ISR:
  3181                           	callstack 19
  3182                           
  3183                           ;incstack = 0
  3184   000008  8243               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3185   00000A  ED34  F004         	call	int_func,f	;refresh shadow registers
  3186                           
  3187                           	psect	intcode_body
  3188   000868                     __pintcode_body:
  3189                           	callstack 19
  3190   000868                     int_func:
  3191                           	callstack 19
  3192   000868  0006               	pop		; remove dummy address from shadow register refresh
  3193   00086A  CFF3 F011          	movff	prodl,??_ISR+1
  3194   00086E  CFF4 F012          	movff	prodh,??_ISR+2
  3195   000872  CFF6 F013          	movff	tblptrl,??_ISR+3
  3196   000876  CFF7 F014          	movff	tblptrh,??_ISR+4
  3197   00087A  CFF8 F015          	movff	tblptru,??_ISR+5
  3198   00087E  CFF5 F016          	movff	tablat,??_ISR+6
  3199                           
  3200                           ;PruebaLCD.c: 276: if(flagEmergencia==0){
  3201   000882  5036               	movf	_flagEmergencia^0,w,c
  3202   000884  1037               	iorwf	(_flagEmergencia+1)^0,w,c
  3203   000886  A4D8               	btfss	status,2,c
  3204   000888  D09F               	goto	i2u176_45
  3205                           
  3206                           ;PruebaLCD.c: 277: if(RBIF==1){
  3207   00088A  A0F2               	btfss	4082,0,c	;volatile
  3208   00088C  D091               	goto	i2l2952
  3209                           
  3210                           ;PruebaLCD.c: 278: if(PORTB!=0b11110000){
  3211   00088E  0EF0               	movlw	240
  3212   000890  1881               	xorwf	129,w,c	;volatile
  3213   000892  B4D8               	btfsc	status,2,c
  3214   000894  D082               	goto	i2l325
  3215                           
  3216                           ;PruebaLCD.c: 279: Tecla=0;
  3217   000896  6A3F               	clrf	_Tecla^0,c
  3218                           
  3219                           ;PruebaLCD.c: 280: LATB=0b11111110;
  3220   000898  0EFE               	movlw	254
  3221   00089A  6E8A               	movwf	138,c	;volatile
  3222                           
  3223                           ;PruebaLCD.c: 281: if(RB4==0){Tecla=1;escribirDig(1);}
  3224   00089C  B881               	btfsc	3969,4,c	;volatile
  3225   00089E  D006               	goto	i2l300
  3226   0008A0  0E01               	movlw	1
  3227   0008A2  6E3F               	movwf	_Tecla^0,c
  3228   0008A4  0E01               	movlw	1
  3229   0008A6  EC6E  F00A         	call	_escribirDig
  3230   0008AA  D077               	goto	i2l325
  3231   0008AC                     i2l300:
  3232                           
  3233                           ;PruebaLCD.c: 282: else if(RB5==0){Tecla=2;escribirDig(2);}
  3234   0008AC  BA81               	btfsc	3969,5,c	;volatile
  3235   0008AE  D006               	goto	i2l302
  3236   0008B0  0E02               	movlw	2
  3237   0008B2  6E3F               	movwf	_Tecla^0,c
  3238   0008B4  0E02               	movlw	2
  3239   0008B6  EC6E  F00A         	call	_escribirDig
  3240   0008BA  D06F               	goto	i2l325
  3241   0008BC                     i2l302:
  3242                           
  3243                           ;PruebaLCD.c: 283: else if(RB6==0){Tecla=3;escribirDig(3);}
  3244   0008BC  BC81               	btfsc	3969,6,c	;volatile
  3245   0008BE  D006               	goto	i2l304
  3246   0008C0  0E03               	movlw	3
  3247   0008C2  6E3F               	movwf	_Tecla^0,c
  3248   0008C4  0E03               	movlw	3
  3249   0008C6  EC6E  F00A         	call	_escribirDig
  3250   0008CA  D067               	goto	i2l325
  3251   0008CC                     i2l304:
  3252                           
  3253                           ;PruebaLCD.c: 284: else if(RB7==0){Tecla=4;ok();}
  3254   0008CC  BE81               	btfsc	3969,7,c	;volatile
  3255   0008CE  D005               	goto	i2l2886
  3256   0008D0  0E04               	movlw	4
  3257   0008D2  6E3F               	movwf	_Tecla^0,c
  3258   0008D4  ECF2  F004         	call	_ok	;wreg free
  3259   0008D8  D060               	goto	i2l325
  3260   0008DA                     i2l2886:
  3261                           
  3262                           ;PruebaLCD.c: 285: else{;PruebaLCD.c: 286: LATB=0b11111101;
  3263   0008DA  0EFD               	movlw	253
  3264   0008DC  6E8A               	movwf	138,c	;volatile
  3265                           
  3266                           ;PruebaLCD.c: 287: if(RB4==0) {Tecla=5;escribirDig(4);}
  3267   0008DE  B881               	btfsc	3969,4,c	;volatile
  3268   0008E0  D006               	goto	i2l308
  3269   0008E2  0E05               	movlw	5
  3270   0008E4  6E3F               	movwf	_Tecla^0,c
  3271   0008E6  0E04               	movlw	4
  3272   0008E8  EC6E  F00A         	call	_escribirDig
  3273   0008EC  D056               	goto	i2l325
  3274   0008EE                     i2l308:
  3275                           
  3276                           ;PruebaLCD.c: 288: else if(RB5==0) {Tecla=6;escribirDig(5);}
  3277   0008EE  BA81               	btfsc	3969,5,c	;volatile
  3278   0008F0  D006               	goto	i2l310
  3279   0008F2  0E06               	movlw	6
  3280   0008F4  6E3F               	movwf	_Tecla^0,c
  3281   0008F6  0E05               	movlw	5
  3282   0008F8  EC6E  F00A         	call	_escribirDig
  3283   0008FC  D04E               	goto	i2l325
  3284   0008FE                     i2l310:
  3285                           
  3286                           ;PruebaLCD.c: 289: else if(RB6==0) {Tecla=7;escribirDig(6);}
  3287   0008FE  BC81               	btfsc	3969,6,c	;volatile
  3288   000900  D006               	goto	i2l312
  3289   000902  0E07               	movlw	7
  3290   000904  6E3F               	movwf	_Tecla^0,c
  3291   000906  0E06               	movlw	6
  3292   000908  EC6E  F00A         	call	_escribirDig
  3293   00090C  D046               	goto	i2l325
  3294   00090E                     i2l312:
  3295                           
  3296                           ;PruebaLCD.c: 290: else if(RB7==0) {Tecla=8; parEmerg();}
  3297   00090E  BE81               	btfsc	3969,7,c	;volatile
  3298   000910  D005               	goto	i2l2906
  3299   000912  0E08               	movlw	8
  3300   000914  6E3F               	movwf	_Tecla^0,c
  3301   000916  ECD9  F00B         	call	_parEmerg	;wreg free
  3302   00091A  D03F               	goto	i2l325
  3303   00091C                     i2l2906:
  3304                           
  3305                           ;PruebaLCD.c: 291: else{;PruebaLCD.c: 292: LATB=0b11111011;
  3306   00091C  0EFB               	movlw	251
  3307   00091E  6E8A               	movwf	138,c	;volatile
  3308                           
  3309                           ;PruebaLCD.c: 293: if(RB4==0){Tecla=9;escribirDig(7);}
  3310   000920  B881               	btfsc	3969,4,c	;volatile
  3311   000922  D006               	goto	i2l316
  3312   000924  0E09               	movlw	9
  3313   000926  6E3F               	movwf	_Tecla^0,c
  3314   000928  0E07               	movlw	7
  3315   00092A  EC6E  F00A         	call	_escribirDig
  3316   00092E  D035               	goto	i2l325
  3317   000930                     i2l316:
  3318                           
  3319                           ;PruebaLCD.c: 294: else if(RB5==0) {Tecla=10;escribirDig(8);}
  3320   000930  BA81               	btfsc	3969,5,c	;volatile
  3321   000932  D006               	goto	i2l318
  3322   000934  0E0A               	movlw	10
  3323   000936  6E3F               	movwf	_Tecla^0,c
  3324   000938  0E08               	movlw	8
  3325   00093A  EC6E  F00A         	call	_escribirDig
  3326   00093E  D02D               	goto	i2l325
  3327   000940                     i2l318:
  3328                           
  3329                           ;PruebaLCD.c: 295: else if(RB6==0) {Tecla=11;escribirDig(9);}
  3330   000940  BC81               	btfsc	3969,6,c	;volatile
  3331   000942  D006               	goto	i2l320
  3332   000944  0E0B               	movlw	11
  3333   000946  6E3F               	movwf	_Tecla^0,c
  3334   000948  0E09               	movlw	9
  3335   00094A  EC6E  F00A         	call	_escribirDig
  3336   00094E  D025               	goto	i2l325
  3337   000950                     i2l320:
  3338                           
  3339                           ;PruebaLCD.c: 296: else if(RB7==0) {Tecla=3;borrarTexto();}
  3340   000950  BE81               	btfsc	3969,7,c	;volatile
  3341   000952  D005               	goto	i2l2926
  3342   000954  0E03               	movlw	3
  3343   000956  6E3F               	movwf	_Tecla^0,c
  3344   000958  EC60  F00B         	call	_borrarTexto	;wreg free
  3345   00095C  D01E               	goto	i2l325
  3346   00095E                     i2l2926:
  3347                           
  3348                           ;PruebaLCD.c: 297: else{;PruebaLCD.c: 298: LATB=0b11110111;
  3349   00095E  0EF7               	movlw	247
  3350   000960  6E8A               	movwf	138,c	;volatile
  3351                           
  3352                           ;PruebaLCD.c: 299: if(RB4==0) {Tecla=13;reiCon();}
  3353   000962  B881               	btfsc	3969,4,c	;volatile
  3354   000964  D005               	goto	i2l324
  3355   000966  0E0D               	movlw	13
  3356   000968  6E3F               	movwf	_Tecla^0,c
  3357   00096A  ECC6  F009         	call	_reiCon	;wreg free
  3358   00096E  D015               	goto	i2l325
  3359   000970                     i2l324:
  3360                           
  3361                           ;PruebaLCD.c: 300: else if(RB5==0){Tecla=14;escribirDig(0);}
  3362   000970  BA81               	btfsc	3969,5,c	;volatile
  3363   000972  D006               	goto	i2l326
  3364   000974  0E0E               	movlw	14
  3365   000976  6E3F               	movwf	_Tecla^0,c
  3366   000978  0E00               	movlw	0
  3367   00097A  EC6E  F00A         	call	_escribirDig
  3368   00097E  D00D               	goto	i2l325
  3369   000980                     i2l326:
  3370                           
  3371                           ;PruebaLCD.c: 301: else if(RB6==0) {Tecla=15;fin();}
  3372   000980  BC81               	btfsc	3969,6,c	;volatile
  3373   000982  D005               	goto	i2l328
  3374   000984  0E0F               	movlw	15
  3375   000986  6E3F               	movwf	_Tecla^0,c
  3376   000988  EC48  F00A         	call	_fin	;wreg free
  3377   00098C  D006               	goto	i2l325
  3378   00098E                     i2l328:
  3379                           
  3380                           ;PruebaLCD.c: 302: else if(RB7==0) {Tecla=16;luzFondo();}
  3381   00098E  BE81               	btfsc	3969,7,c	;volatile
  3382   000990  D004               	goto	i2l325
  3383   000992  0E10               	movlw	16
  3384   000994  6E3F               	movwf	_Tecla^0,c
  3385   000996  EC2D  F00B         	call	_luzFondo	;wreg free
  3386   00099A                     i2l325:
  3387                           
  3388                           ;PruebaLCD.c: 303: };PruebaLCD.c: 304: };PruebaLCD.c: 305: };PruebaLCD.c: 306: };PruebaL
      +                          CD.c: 308: LATB=0b11110000;
  3389   00099A  0EF0               	movlw	240
  3390   00099C  6E8A               	movwf	138,c	;volatile
  3391                           
  3392                           ;PruebaLCD.c: 309: _delay((unsigned long)((50)*(1000000/4000.0)));
  3393   00099E  0E11               	movlw	17
  3394   0009A0  6E10               	movwf	??_ISR^0,c
  3395   0009A2  0E3A               	movlw	58
  3396   0009A4                     i2u190_47:
  3397   0009A4  2EE8               	decfsz	wreg,f,c
  3398   0009A6  D7FE               	bra	i2u190_47
  3399   0009A8  2E10               	decfsz	??_ISR^0,f,c
  3400   0009AA  D7FC               	bra	i2u190_47
  3401   0009AC  D000               	nop2	
  3402                           
  3403                           ;PruebaLCD.c: 310: RBIF=0;
  3404   0009AE  90F2               	bcf	4082,0,c	;volatile
  3405   0009B0                     i2l2952:
  3406                           
  3407                           ;PruebaLCD.c: 311: };PruebaLCD.c: 312: if(TMR0IF==1){
  3408   0009B0  A4F2               	btfss	4082,2,c	;volatile
  3409   0009B2  D00A               	goto	i2u176_45
  3410                           
  3411                           ;PruebaLCD.c: 313: TMR0IF=0;
  3412   0009B4  94F2               	bcf	4082,2,c	;volatile
  3413                           
  3414                           ;PruebaLCD.c: 314: TMR0=3036;
  3415   0009B6  0E0B               	movlw	11
  3416   0009B8  6ED7               	movwf	215,c	;volatile
  3417   0009BA  0EDC               	movlw	220
  3418   0009BC  6ED6               	movwf	214,c	;volatile
  3419                           
  3420                           ;PruebaLCD.c: 315: LATD1=LATD1;
  3421   0009BE  A28C               	btfss	3980,1,c	;volatile
  3422   0009C0  D002               	goto	i2u175_40
  3423   0009C2  828C               	bsf	3980,1,c	;volatile
  3424   0009C4  D001               	goto	i2u176_45
  3425   0009C6                     i2u175_40:
  3426   0009C6  928C               	bcf	3980,1,c	;volatile
  3427   0009C8                     i2u176_45:
  3428   0009C8  C016  FFF5         	movff	??_ISR+6,tablat
  3429   0009CC  C015  FFF8         	movff	??_ISR+5,tblptru
  3430   0009D0  C014  FFF7         	movff	??_ISR+4,tblptrh
  3431   0009D4  C013  FFF6         	movff	??_ISR+3,tblptrl
  3432   0009D8  C012  FFF4         	movff	??_ISR+2,prodh
  3433   0009DC  C011  FFF3         	movff	??_ISR+1,prodl
  3434   0009E0  9243               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3435   0009E2  0011               	retfie		f
  3436   0009E4                     __end_of_ISR:
  3437                           	callstack 0
  3438                           
  3439 ;; *************** function _reiCon *****************
  3440 ;; Defined at:
  3441 ;;		line 243 in file "PruebaLCD.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;		None
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;		None
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      void 
  3448 ;; Registers used:
  3449 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3455 ;;      Params:         0       0       0       0       0       0       0       0       0
  3456 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3457 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3458 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3459 ;;Total ram usage:        0 bytes
  3460 ;; Hardware stack levels used: 1
  3461 ;; Hardware stack levels required when called: 4
  3462 ;; This function calls:
  3463 ;;		i2_BorraLCD
  3464 ;;		i2_DireccionaLCD
  3465 ;;		i2_EscribeLCD_n8
  3466 ;;		i2_MensajeLCD_Var
  3467 ;;		i2_RGB
  3468 ;;		i2_SEG
  3469 ;; This function is called by:
  3470 ;;		_ISR
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           	psect	text23
  3475   00138C                     __ptext23:
  3476                           	callstack 0
  3477   00138C                     _reiCon:
  3478                           	callstack 20
  3479                           
  3480                           ;PruebaLCD.c: 244: piezFalt=cuenObj;
  3481                           
  3482                           ;incstack = 0
  3483   00138C  C028  F026         	movff	_cuenObj,_piezFalt
  3484   001390  C029  F027         	movff	_cuenObj+1,_piezFalt+1
  3485                           
  3486                           ;PruebaLCD.c: 245: cuenta=0;
  3487   001394  0E00               	movlw	0
  3488   001396  6E33               	movwf	(_cuenta+1)^0,c
  3489   001398  0E00               	movlw	0
  3490   00139A  6E32               	movwf	_cuenta^0,c
  3491                           
  3492                           ;PruebaLCD.c: 246: a=0;
  3493   00139C  0E00               	movlw	0
  3494   00139E  6E2D               	movwf	(_a+1)^0,c
  3495   0013A0  0E00               	movlw	0
  3496   0013A2  6E2C               	movwf	_a^0,c
  3497                           
  3498                           ;PruebaLCD.c: 247: b=0;
  3499   0013A4  0E00               	movlw	0
  3500   0013A6  6E2B               	movwf	(_b+1)^0,c
  3501   0013A8  0E00               	movlw	0
  3502   0013AA  6E2A               	movwf	_b^0,c
  3503                           
  3504                           ;PruebaLCD.c: 248: RGB();
  3505   0013AC  ECAA  F008         	call	i2_RGB	;wreg free
  3506                           
  3507                           ;PruebaLCD.c: 249: SEG();
  3508   0013B0  EC44  F00C         	call	i2_SEG	;wreg free
  3509                           
  3510                           ;PruebaLCD.c: 251: BorraLCD();
  3511   0013B4  EC29  F00C         	call	i2_BorraLCD	;wreg free
  3512                           
  3513                           ;PruebaLCD.c: 252: MensajeLCD_Var("Faltan: ");
  3514   0013B8  0E5E               	movlw	low STR_3
  3515   0013BA  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  3516   0013BC  ECB2  F00B         	call	i2_MensajeLCD_Var	;wreg free
  3517                           
  3518                           ;PruebaLCD.c: 253: EscribeLCD_n8(piezFalt,2);
  3519   0013C0  0E02               	movlw	2
  3520   0013C2  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3521   0013C4  5026               	movf	_piezFalt^0,w,c
  3522   0013C6  EC69  F006         	call	i2_EscribeLCD_n8
  3523                           
  3524                           ;PruebaLCD.c: 254: DireccionaLCD(0xC0);
  3525   0013CA  0EC0               	movlw	192
  3526   0013CC  EC09  F00C         	call	i2_DireccionaLCD
  3527                           
  3528                           ;PruebaLCD.c: 255: MensajeLCD_Var("Objetivo: ");
  3529   0013D0  0E48               	movlw	low STR_4
  3530   0013D2  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  3531   0013D4  ECB2  F00B         	call	i2_MensajeLCD_Var	;wreg free
  3532                           
  3533                           ;PruebaLCD.c: 256: EscribeLCD_n8(cuenObj,2);
  3534   0013D8  0E02               	movlw	2
  3535   0013DA  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3536   0013DC  5028               	movf	_cuenObj^0,w,c
  3537   0013DE  EC69  F006         	call	i2_EscribeLCD_n8
  3538   0013E2  0012               	return		;funcret
  3539   0013E4                     __end_of_reiCon:
  3540                           	callstack 0
  3541                           
  3542 ;; *************** function _parEmerg *****************
  3543 ;; Defined at:
  3544 ;;		line 234 in file "PruebaLCD.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;		None
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;		None
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1    wreg      void 
  3551 ;; Registers used:
  3552 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3558 ;;      Params:         0       0       0       0       0       0       0       0       0
  3559 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3560 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3561 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3562 ;;Total ram usage:        0 bytes
  3563 ;; Hardware stack levels used: 1
  3564 ;; Hardware stack levels required when called: 4
  3565 ;; This function calls:
  3566 ;;		i2_BorraLCD
  3567 ;;		i2_MensajeLCD_Var
  3568 ;; This function is called by:
  3569 ;;		_ISR
  3570 ;; This function uses a non-reentrant model
  3571 ;;
  3572                           
  3573                           	psect	text24
  3574   0017B2                     __ptext24:
  3575                           	callstack 0
  3576   0017B2                     _parEmerg:
  3577                           	callstack 20
  3578                           
  3579                           ;PruebaLCD.c: 235: LATE0 = 1;
  3580                           
  3581                           ;incstack = 0
  3582   0017B2  808D               	bsf	3981,0,c	;volatile
  3583                           
  3584                           ;PruebaLCD.c: 236: LATE1 = 0;
  3585   0017B4  928D               	bcf	3981,1,c	;volatile
  3586                           
  3587                           ;PruebaLCD.c: 237: LATE2 = 0;
  3588   0017B6  948D               	bcf	3981,2,c	;volatile
  3589                           
  3590                           ;PruebaLCD.c: 238: flagEmergencia = 1;
  3591   0017B8  0E00               	movlw	0
  3592   0017BA  6E37               	movwf	(_flagEmergencia+1)^0,c
  3593   0017BC  0E01               	movlw	1
  3594   0017BE  6E36               	movwf	_flagEmergencia^0,c
  3595                           
  3596                           ;PruebaLCD.c: 239: BorraLCD();
  3597   0017C0  EC29  F00C         	call	i2_BorraLCD	;wreg free
  3598                           
  3599                           ;PruebaLCD.c: 240: MensajeLCD_Var("Emergencia");
  3600   0017C4  0E53               	movlw	low STR_12
  3601   0017C6  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  3602   0017C8  ECB2  F00B         	call	i2_MensajeLCD_Var	;wreg free
  3603   0017CC  0012               	return		;funcret
  3604   0017CE                     __end_of_parEmerg:
  3605                           	callstack 0
  3606                           
  3607 ;; *************** function _ok *****************
  3608 ;; Defined at:
  3609 ;;		line 113 in file "PruebaLCD.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;		None
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;		None
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  1    wreg      void 
  3616 ;; Registers used:
  3617 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3623 ;;      Params:         0       0       0       0       0       0       0       0       0
  3624 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3625 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3626 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3627 ;;Total ram usage:        2 bytes
  3628 ;; Hardware stack levels used: 1
  3629 ;; Hardware stack levels required when called: 5
  3630 ;; This function calls:
  3631 ;;		_borrarTexto
  3632 ;;		i2_BorraLCD
  3633 ;;		i2_DireccionaLCD
  3634 ;;		i2_EscribeLCD_n8
  3635 ;;		i2_MensajeLCD_Var
  3636 ;;		i2_RGB
  3637 ;;		i2_SEG
  3638 ;;		i2_contador
  3639 ;; This function is called by:
  3640 ;;		_ISR
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           	psect	text25
  3645   0009E4                     __ptext25:
  3646                           	callstack 0
  3647   0009E4                     _ok:
  3648                           	callstack 19
  3649                           
  3650                           ;PruebaLCD.c: 114: if(flagEscribir == 1 && flagFin==0){
  3651                           
  3652                           ;incstack = 0
  3653   0009E4  043C               	decf	_flagEscribir^0,w,c
  3654   0009E6  103D               	iorwf	(_flagEscribir+1)^0,w,c
  3655   0009E8  A4D8               	btfss	status,2,c
  3656   0009EA  D056               	goto	i2l2702
  3657   0009EC  5034               	movf	_flagFin^0,w,c
  3658   0009EE  1035               	iorwf	(_flagFin+1)^0,w,c
  3659   0009F0  A4D8               	btfss	status,2,c
  3660   0009F2  D052               	goto	i2l2702
  3661                           
  3662                           ;PruebaLCD.c: 115: cuenObj=(d*10)+u;
  3663   0009F4  0E0A               	movlw	10
  3664   0009F6  022E               	mulwf	_d^0,c
  3665   0009F8  CFF3 F00E          	movff	prodl,??_ok
  3666   0009FC  CFF4 F00F          	movff	prodh,??_ok+1
  3667   000A00  022F               	mulwf	(_d+1)^0,c
  3668   000A02  50F3               	movf	prodl,w,c
  3669   000A04  260F               	addwf	(??_ok+1)^0,f,c
  3670   000A06  5030               	movf	_u^0,w,c
  3671   000A08  240E               	addwf	??_ok^0,w,c
  3672   000A0A  6E28               	movwf	_cuenObj^0,c
  3673   000A0C  5031               	movf	(_u+1)^0,w,c
  3674   000A0E  200F               	addwfc	(??_ok+1)^0,w,c
  3675   000A10  6E29               	movwf	(_cuenObj+1)^0,c
  3676                           
  3677                           ;PruebaLCD.c: 117: if(cuenObj<60 && cuenObj>0){
  3678   000A12  BE29               	btfsc	(_cuenObj+1)^0,7,c
  3679   000A14  D006               	goto	i2u151_40
  3680   000A16  5029               	movf	(_cuenObj+1)^0,w,c
  3681   000A18  E12B               	bnz	i2l2694
  3682   000A1A  0E3C               	movlw	60
  3683   000A1C  5C28               	subwf	_cuenObj^0,w,c
  3684   000A1E  B0D8               	btfsc	status,0,c
  3685   000A20  D027               	goto	i2l2694
  3686   000A22                     i2u151_40:
  3687   000A22  BE29               	btfsc	(_cuenObj+1)^0,7,c
  3688   000A24  D025               	goto	i2l2694
  3689   000A26  5029               	movf	(_cuenObj+1)^0,w,c
  3690   000A28  E103               	bnz	i2u152_40
  3691   000A2A  0428               	decf	_cuenObj^0,w,c
  3692   000A2C  A0D8               	btfss	status,0,c
  3693   000A2E  D020               	goto	i2l2694
  3694   000A30                     i2u152_40:
  3695                           
  3696                           ;PruebaLCD.c: 118: piezFalt = cuenObj;
  3697   000A30  C028  F026         	movff	_cuenObj,_piezFalt
  3698   000A34  C029  F027         	movff	_cuenObj+1,_piezFalt+1
  3699                           
  3700                           ;PruebaLCD.c: 119: flagEscribir=0;
  3701   000A38  0E00               	movlw	0
  3702   000A3A  6E3D               	movwf	(_flagEscribir+1)^0,c
  3703   000A3C  0E00               	movlw	0
  3704   000A3E  6E3C               	movwf	_flagEscribir^0,c
  3705                           
  3706                           ;PruebaLCD.c: 120: BorraLCD();
  3707   000A40  EC29  F00C         	call	i2_BorraLCD	;wreg free
  3708                           
  3709                           ;PruebaLCD.c: 122: MensajeLCD_Var("Faltan: ");
  3710   000A44  0E5E               	movlw	low STR_3
  3711   000A46  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  3712   000A48  ECB2  F00B         	call	i2_MensajeLCD_Var	;wreg free
  3713                           
  3714                           ;PruebaLCD.c: 123: EscribeLCD_n8(piezFalt,2);
  3715   000A4C  0E02               	movlw	2
  3716   000A4E  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3717   000A50  5026               	movf	_piezFalt^0,w,c
  3718   000A52  EC69  F006         	call	i2_EscribeLCD_n8
  3719                           
  3720                           ;PruebaLCD.c: 124: DireccionaLCD(0xC0);
  3721   000A56  0EC0               	movlw	192
  3722   000A58  EC09  F00C         	call	i2_DireccionaLCD
  3723                           
  3724                           ;PruebaLCD.c: 125: MensajeLCD_Var("Objetivo: ");
  3725   000A5C  0E48               	movlw	low STR_4
  3726   000A5E  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  3727   000A60  ECB2  F00B         	call	i2_MensajeLCD_Var	;wreg free
  3728                           
  3729                           ;PruebaLCD.c: 126: EscribeLCD_n8(cuenObj,2);
  3730   000A64  0E02               	movlw	2
  3731   000A66  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3732   000A68  5028               	movf	_cuenObj^0,w,c
  3733   000A6A  EC69  F006         	call	i2_EscribeLCD_n8
  3734                           
  3735                           ;PruebaLCD.c: 127: }
  3736   000A6E  D03D               	goto	i2l2726
  3737   000A70                     i2l2694:
  3738                           
  3739                           ;PruebaLCD.c: 128: else{;PruebaLCD.c: 129: BorraLCD();
  3740   000A70  EC29  F00C         	call	i2_BorraLCD	;wreg free
  3741                           
  3742                           ;PruebaLCD.c: 130: MensajeLCD_Var("Valor Invalido");
  3743   000A74  0E13               	movlw	low STR_5
  3744   000A76  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  3745   000A78  ECB2  F00B         	call	i2_MensajeLCD_Var	;wreg free
  3746                           
  3747                           ;PruebaLCD.c: 131: _delay((unsigned long)((3000)*(1000000/4000.0)));
  3748   000A7C  0E04               	movlw	4
  3749   000A7E  6E0F               	movwf	(??_ok+1)^0,c
  3750   000A80  0ECF               	movlw	207
  3751   000A82  6E0E               	movwf	??_ok^0,c
  3752   000A84  0E02               	movlw	2
  3753   000A86                     i2u191_47:
  3754   000A86  2EE8               	decfsz	wreg,f,c
  3755   000A88  D7FE               	bra	i2u191_47
  3756   000A8A  2E0E               	decfsz	??_ok^0,f,c
  3757   000A8C  D7FC               	bra	i2u191_47
  3758   000A8E  2E0F               	decfsz	(??_ok+1)^0,f,c
  3759   000A90  D7FA               	bra	i2u191_47
  3760                           
  3761                           ;PruebaLCD.c: 132: borrarTexto();
  3762   000A92  EC60  F00B         	call	_borrarTexto	;wreg free
  3763   000A96  D029               	goto	i2l2726
  3764   000A98                     i2l2702:
  3765                           
  3766                           ;PruebaLCD.c: 135: else if(flagFin==1){
  3767   000A98  0434               	decf	_flagFin^0,w,c
  3768   000A9A  1035               	iorwf	(_flagFin+1)^0,w,c
  3769   000A9C  A4D8               	btfss	status,2,c
  3770   000A9E  D025               	goto	i2l2726
  3771                           
  3772                           ;PruebaLCD.c: 137: BorraLCD();
  3773   000AA0  EC29  F00C         	call	i2_BorraLCD	;wreg free
  3774                           
  3775                           ;PruebaLCD.c: 138: MensajeLCD_Var("Piezas a Contar: ");
  3776   000AA4  0E01               	movlw	low STR_2
  3777   000AA6  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  3778   000AA8  ECB2  F00B         	call	i2_MensajeLCD_Var	;wreg free
  3779                           
  3780                           ;PruebaLCD.c: 139: DireccionaLCD(0xC0);
  3781   000AAC  0EC0               	movlw	192
  3782   000AAE  EC09  F00C         	call	i2_DireccionaLCD
  3783                           
  3784                           ;PruebaLCD.c: 140: flagEscribir=1;
  3785   000AB2  0E00               	movlw	0
  3786   000AB4  6E3D               	movwf	(_flagEscribir+1)^0,c
  3787   000AB6  0E01               	movlw	1
  3788   000AB8  6E3C               	movwf	_flagEscribir^0,c
  3789                           
  3790                           ;PruebaLCD.c: 141: flagFin=0;
  3791   000ABA  0E00               	movlw	0
  3792   000ABC  6E35               	movwf	(_flagFin+1)^0,c
  3793   000ABE  0E00               	movlw	0
  3794   000AC0  6E34               	movwf	_flagFin^0,c
  3795                           
  3796                           ;PruebaLCD.c: 142: piezFalt=cuenObj;
  3797   000AC2  C028  F026         	movff	_cuenObj,_piezFalt
  3798   000AC6  C029  F027         	movff	_cuenObj+1,_piezFalt+1
  3799                           
  3800                           ;PruebaLCD.c: 143: cuenta=0;
  3801   000ACA  0E00               	movlw	0
  3802   000ACC  6E33               	movwf	(_cuenta+1)^0,c
  3803   000ACE  0E00               	movlw	0
  3804   000AD0  6E32               	movwf	_cuenta^0,c
  3805                           
  3806                           ;PruebaLCD.c: 144: a=0;
  3807   000AD2  0E00               	movlw	0
  3808   000AD4  6E2D               	movwf	(_a+1)^0,c
  3809   000AD6  0E00               	movlw	0
  3810   000AD8  6E2C               	movwf	_a^0,c
  3811                           
  3812                           ;PruebaLCD.c: 145: b=0;
  3813   000ADA  0E00               	movlw	0
  3814   000ADC  6E2B               	movwf	(_b+1)^0,c
  3815   000ADE  0E00               	movlw	0
  3816   000AE0  6E2A               	movwf	_b^0,c
  3817                           
  3818                           ;PruebaLCD.c: 146: RGB();
  3819   000AE2  ECAA  F008         	call	i2_RGB	;wreg free
  3820                           
  3821                           ;PruebaLCD.c: 147: SEG();
  3822   000AE6  EC44  F00C         	call	i2_SEG	;wreg free
  3823   000AEA                     i2l2726:
  3824                           
  3825                           ;PruebaLCD.c: 148: };PruebaLCD.c: 149: contador();
  3826   000AEA  EC3D  F007         	call	i2_contador	;wreg free
  3827   000AEE  0012               	return		;funcret
  3828   000AF0                     __end_of_ok:
  3829                           	callstack 0
  3830                           
  3831 ;; *************** function i2_contador *****************
  3832 ;; Defined at:
  3833 ;;		line 163 in file "PruebaLCD.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;		None
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;		None
  3838 ;; Return value:  Size  Location     Type
  3839 ;;                  1    wreg      void 
  3840 ;; Registers used:
  3841 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3847 ;;      Params:         0       0       0       0       0       0       0       0       0
  3848 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3849 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3850 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3851 ;;Total ram usage:        0 bytes
  3852 ;; Hardware stack levels used: 1
  3853 ;; Hardware stack levels required when called: 4
  3854 ;; This function calls:
  3855 ;;		i2_BorraLCD
  3856 ;;		i2_DireccionaLCD
  3857 ;;		i2_EscribeLCD_n8
  3858 ;;		i2_MensajeLCD_Var
  3859 ;;		i2_RGB
  3860 ;;		i2_SEG
  3861 ;;		i2___awdiv
  3862 ;;		i2___awmod
  3863 ;; This function is called by:
  3864 ;;		_ok
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868                           	psect	text26
  3869   000E7A                     __ptext26:
  3870                           	callstack 0
  3871   000E7A                     i2_contador:
  3872                           	callstack 19
  3873                           
  3874                           ;PruebaLCD.c: 164: if(PORTCbits.RC1==0){
  3875                           
  3876                           ;incstack = 0
  3877   000E7A  B282               	btfsc	130,1,c	;volatile
  3878   000E7C  0012               	return	
  3879                           
  3880                           ;PruebaLCD.c: 165: flagInicio = 1;
  3881   000E7E  0E00               	movlw	0
  3882   000E80  6E39               	movwf	(_flagInicio+1)^0,c
  3883   000E82  0E01               	movlw	1
  3884   000E84  6E38               	movwf	_flagInicio^0,c
  3885                           
  3886                           ;PruebaLCD.c: 166: if(flagEmergencia == 0){
  3887   000E86  5036               	movf	_flagEmergencia^0,w,c
  3888   000E88  1037               	iorwf	(_flagEmergencia+1)^0,w,c
  3889   000E8A  A4D8               	btfss	status,2,c
  3890   000E8C  0012               	return	
  3891                           
  3892                           ;PruebaLCD.c: 167: cuenta+=1;
  3893   000E8E  4A32               	infsnz	_cuenta^0,f,c
  3894   000E90  2A33               	incf	(_cuenta+1)^0,f,c
  3895                           
  3896                           ;PruebaLCD.c: 168: piezFalt-=1;
  3897   000E92  0626               	decf	_piezFalt^0,f,c
  3898   000E94  A0D8               	btfss	status,0,c
  3899   000E96  0627               	decf	(_piezFalt+1)^0,f,c
  3900                           
  3901                           ;PruebaLCD.c: 169: a = cuenta % 10;
  3902   000E98  C032  F001         	movff	_cuenta,i2___awmod@dividend
  3903   000E9C  C033  F002         	movff	_cuenta+1,i2___awmod@dividend+1
  3904   000EA0  0E00               	movlw	0
  3905   000EA2  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  3906   000EA4  0E0A               	movlw	10
  3907   000EA6  6E03               	movwf	i2___awmod@divisor^0,c
  3908   000EA8  EC8F  F009         	call	i2___awmod	;wreg free
  3909   000EAC  C001  F02C         	movff	?i2___awmod,_a
  3910   000EB0  C002  F02D         	movff	?i2___awmod+1,_a+1
  3911                           
  3912                           ;PruebaLCD.c: 170: b = (cuenta - a)/10;
  3913   000EB4  502C               	movf	_a^0,w,c
  3914   000EB6  5C32               	subwf	_cuenta^0,w,c
  3915   000EB8  6E01               	movwf	i2___awdiv@dividend^0,c
  3916   000EBA  502D               	movf	(_a+1)^0,w,c
  3917   000EBC  5833               	subwfb	(_cuenta+1)^0,w,c
  3918   000EBE  6E02               	movwf	(i2___awdiv@dividend+1)^0,c
  3919   000EC0  0E00               	movlw	0
  3920   000EC2  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  3921   000EC4  0E0A               	movlw	10
  3922   000EC6  6E03               	movwf	i2___awdiv@divisor^0,c
  3923   000EC8  EC2D  F008         	call	i2___awdiv	;wreg free
  3924   000ECC  C001  F02A         	movff	?i2___awdiv,_b
  3925   000ED0  C002  F02B         	movff	?i2___awdiv+1,_b+1
  3926                           
  3927                           ;PruebaLCD.c: 171: RGB();
  3928   000ED4  ECAA  F008         	call	i2_RGB	;wreg free
  3929                           
  3930                           ;PruebaLCD.c: 172: SEG();
  3931   000ED8  EC44  F00C         	call	i2_SEG	;wreg free
  3932                           
  3933                           ;PruebaLCD.c: 174: BorraLCD();
  3934   000EDC  EC29  F00C         	call	i2_BorraLCD	;wreg free
  3935                           
  3936                           ;PruebaLCD.c: 175: MensajeLCD_Var("Faltan: ");
  3937   000EE0  0E5E               	movlw	low STR_3
  3938   000EE2  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  3939   000EE4  ECB2  F00B         	call	i2_MensajeLCD_Var	;wreg free
  3940                           
  3941                           ;PruebaLCD.c: 176: EscribeLCD_n8(piezFalt,2);
  3942   000EE8  0E02               	movlw	2
  3943   000EEA  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3944   000EEC  5026               	movf	_piezFalt^0,w,c
  3945   000EEE  EC69  F006         	call	i2_EscribeLCD_n8
  3946                           
  3947                           ;PruebaLCD.c: 177: DireccionaLCD(0xC0);
  3948   000EF2  0EC0               	movlw	192
  3949   000EF4  EC09  F00C         	call	i2_DireccionaLCD
  3950                           
  3951                           ;PruebaLCD.c: 178: MensajeLCD_Var("Objetivo: ");
  3952   000EF8  0E48               	movlw	low STR_4
  3953   000EFA  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  3954   000EFC  ECB2  F00B         	call	i2_MensajeLCD_Var	;wreg free
  3955                           
  3956                           ;PruebaLCD.c: 179: EscribeLCD_n8(cuenObj,2);
  3957   000F00  0E02               	movlw	2
  3958   000F02  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3959   000F04  5028               	movf	_cuenObj^0,w,c
  3960   000F06  EC69  F006         	call	i2_EscribeLCD_n8
  3961                           
  3962                           ;PruebaLCD.c: 180: if (cuenta==cuenObj){
  3963   000F0A  5028               	movf	_cuenObj^0,w,c
  3964   000F0C  1832               	xorwf	_cuenta^0,w,c
  3965   000F0E  E115               	bnz	i2l264
  3966   000F10  5029               	movf	(_cuenObj+1)^0,w,c
  3967   000F12  1833               	xorwf	(_cuenta+1)^0,w,c
  3968   000F14  A4D8               	btfss	status,2,c
  3969   000F16  0012               	return	
  3970                           
  3971                           ;PruebaLCD.c: 181: BorraLCD();
  3972   000F18  EC29  F00C         	call	i2_BorraLCD	;wreg free
  3973                           
  3974                           ;PruebaLCD.c: 182: MensajeLCD_Var("Fin de Cuenta");
  3975   000F1C  0E22               	movlw	low STR_10
  3976   000F1E  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  3977   000F20  ECB2  F00B         	call	i2_MensajeLCD_Var	;wreg free
  3978                           
  3979                           ;PruebaLCD.c: 183: DireccionaLCD(0xC0);
  3980   000F24  0EC0               	movlw	192
  3981   000F26  EC09  F00C         	call	i2_DireccionaLCD
  3982                           
  3983                           ;PruebaLCD.c: 184: MensajeLCD_Var("Presione OK");
  3984   000F2A  0E30               	movlw	low STR_11
  3985   000F2C  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  3986   000F2E  ECB2  F00B         	call	i2_MensajeLCD_Var	;wreg free
  3987                           
  3988                           ;PruebaLCD.c: 185: flagFin=1;
  3989   000F32  0E00               	movlw	0
  3990   000F34  6E35               	movwf	(_flagFin+1)^0,c
  3991   000F36  0E01               	movlw	1
  3992   000F38  6E34               	movwf	_flagFin^0,c
  3993   000F3A                     i2l264:
  3994   000F3A  0012               	return		;funcret
  3995   000F3C                     __end_ofi2_contador:
  3996                           	callstack 0
  3997                           
  3998 ;; *************** function i2___awmod *****************
  3999 ;; Defined at:
  4000 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;  dividend        2    0[COMRAM] int 
  4003 ;;  divisor         2    2[COMRAM] int 
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;  sign            1    5[COMRAM] unsigned char 
  4006 ;;  counter         1    4[COMRAM] unsigned char 
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  2    0[COMRAM] int 
  4009 ;; Registers used:
  4010 ;;		wreg, status,2, status,0
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4016 ;;      Params:         4       0       0       0       0       0       0       0       0
  4017 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4018 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4019 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4020 ;;Total ram usage:        6 bytes
  4021 ;; Hardware stack levels used: 1
  4022 ;; This function calls:
  4023 ;;		Nothing
  4024 ;; This function is called by:
  4025 ;;		i2_contador
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029                           	psect	text27
  4030   00131E                     __ptext27:
  4031                           	callstack 0
  4032   00131E                     i2___awmod:
  4033                           	callstack 22
  4034                           
  4035                           ;incstack = 0
  4036   00131E  6A06               	clrf	i2___awmod@sign^0,c
  4037   001320  AE02               	btfss	(i2___awmod@dividend+1)^0,7,c
  4038   001322  D006               	goto	i2l2388
  4039   001324  6C01               	negf	i2___awmod@dividend^0,c
  4040   001326  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  4041   001328  B0D8               	btfsc	status,0,c
  4042   00132A  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  4043   00132C  0E01               	movlw	1
  4044   00132E  6E06               	movwf	i2___awmod@sign^0,c
  4045   001330                     i2l2388:
  4046   001330  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  4047   001332  D004               	goto	i2l2392
  4048   001334  6C03               	negf	i2___awmod@divisor^0,c
  4049   001336  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  4050   001338  B0D8               	btfsc	status,0,c
  4051   00133A  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  4052   00133C                     i2l2392:
  4053   00133C  5003               	movf	i2___awmod@divisor^0,w,c
  4054   00133E  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  4055   001340  B4D8               	btfsc	status,2,c
  4056   001342  D018               	goto	i2l2408
  4057   001344  0E01               	movlw	1
  4058   001346  6E05               	movwf	i2___awmod@counter^0,c
  4059   001348  D004               	goto	i2l2398
  4060   00134A                     i2l2396:
  4061   00134A  90D8               	bcf	status,0,c
  4062   00134C  3603               	rlcf	i2___awmod@divisor^0,f,c
  4063   00134E  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  4064   001350  2A05               	incf	i2___awmod@counter^0,f,c
  4065   001352                     i2l2398:
  4066   001352  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  4067   001354  D7FA               	goto	i2l2396
  4068   001356                     i2u121_40:
  4069   001356  5003               	movf	i2___awmod@divisor^0,w,c
  4070   001358  5C01               	subwf	i2___awmod@dividend^0,w,c
  4071   00135A  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  4072   00135C  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  4073   00135E  A0D8               	btfss	status,0,c
  4074   001360  D004               	goto	i2l2404
  4075   001362  5003               	movf	i2___awmod@divisor^0,w,c
  4076   001364  5E01               	subwf	i2___awmod@dividend^0,f,c
  4077   001366  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  4078   001368  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  4079   00136A                     i2l2404:
  4080   00136A  90D8               	bcf	status,0,c
  4081   00136C  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  4082   00136E  3203               	rrcf	i2___awmod@divisor^0,f,c
  4083   001370  2E05               	decfsz	i2___awmod@counter^0,f,c
  4084   001372  D7F1               	goto	i2u121_40
  4085   001374                     i2l2408:
  4086   001374  5006               	movf	i2___awmod@sign^0,w,c
  4087   001376  B4D8               	btfsc	status,2,c
  4088   001378  D004               	goto	i2l2412
  4089   00137A  6C01               	negf	i2___awmod@dividend^0,c
  4090   00137C  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  4091   00137E  B0D8               	btfsc	status,0,c
  4092   001380  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  4093   001382                     i2l2412:
  4094   001382  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  4095   001386  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  4096   00138A  0012               	return		;funcret
  4097   00138C                     __end_ofi2___awmod:
  4098                           	callstack 0
  4099                           
  4100 ;; *************** function i2___awdiv *****************
  4101 ;; Defined at:
  4102 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;  dividend        2    0[COMRAM] int 
  4105 ;;  divisor         2    2[COMRAM] int 
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;  quotient        2    6[COMRAM] int 
  4108 ;;  sign            1    5[COMRAM] unsigned char 
  4109 ;;  counter         1    4[COMRAM] unsigned char 
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  2    0[COMRAM] int 
  4112 ;; Registers used:
  4113 ;;		wreg, status,2, status,0
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4119 ;;      Params:         4       0       0       0       0       0       0       0       0
  4120 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4122 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4123 ;;Total ram usage:        8 bytes
  4124 ;; Hardware stack levels used: 1
  4125 ;; This function calls:
  4126 ;;		Nothing
  4127 ;; This function is called by:
  4128 ;;		i2_contador
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text28
  4133   00105A                     __ptext28:
  4134                           	callstack 0
  4135   00105A                     i2___awdiv:
  4136                           	callstack 22
  4137                           
  4138                           ;incstack = 0
  4139   00105A  6A06               	clrf	i2___awdiv@sign^0,c
  4140   00105C  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  4141   00105E  D006               	goto	i2l2344
  4142   001060  6C03               	negf	i2___awdiv@divisor^0,c
  4143   001062  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
  4144   001064  B0D8               	btfsc	status,0,c
  4145   001066  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
  4146   001068  0E01               	movlw	1
  4147   00106A  6E06               	movwf	i2___awdiv@sign^0,c
  4148   00106C                     i2l2344:
  4149   00106C  AE02               	btfss	(i2___awdiv@dividend+1)^0,7,c
  4150   00106E  D006               	goto	i2l2350
  4151   001070  6C01               	negf	i2___awdiv@dividend^0,c
  4152   001072  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
  4153   001074  B0D8               	btfsc	status,0,c
  4154   001076  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
  4155   001078  0E01               	movlw	1
  4156   00107A  1A06               	xorwf	i2___awdiv@sign^0,f,c
  4157   00107C                     i2l2350:
  4158   00107C  0E00               	movlw	0
  4159   00107E  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
  4160   001080  0E00               	movlw	0
  4161   001082  6E07               	movwf	i2___awdiv@quotient^0,c
  4162   001084  5003               	movf	i2___awdiv@divisor^0,w,c
  4163   001086  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
  4164   001088  B4D8               	btfsc	status,2,c
  4165   00108A  D01C               	goto	i2l2372
  4166   00108C  0E01               	movlw	1
  4167   00108E  6E05               	movwf	i2___awdiv@counter^0,c
  4168   001090  D004               	goto	i2l2358
  4169   001092                     i2l2356:
  4170   001092  90D8               	bcf	status,0,c
  4171   001094  3603               	rlcf	i2___awdiv@divisor^0,f,c
  4172   001096  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
  4173   001098  2A05               	incf	i2___awdiv@counter^0,f,c
  4174   00109A                     i2l2358:
  4175   00109A  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  4176   00109C  D7FA               	goto	i2l2356
  4177   00109E                     i2u115_40:
  4178   00109E  90D8               	bcf	status,0,c
  4179   0010A0  3607               	rlcf	i2___awdiv@quotient^0,f,c
  4180   0010A2  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
  4181   0010A4  5003               	movf	i2___awdiv@divisor^0,w,c
  4182   0010A6  5C01               	subwf	i2___awdiv@dividend^0,w,c
  4183   0010A8  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  4184   0010AA  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
  4185   0010AC  A0D8               	btfss	status,0,c
  4186   0010AE  D005               	goto	i2l2368
  4187   0010B0  5003               	movf	i2___awdiv@divisor^0,w,c
  4188   0010B2  5E01               	subwf	i2___awdiv@dividend^0,f,c
  4189   0010B4  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  4190   0010B6  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
  4191   0010B8  8007               	bsf	i2___awdiv@quotient^0,0,c
  4192   0010BA                     i2l2368:
  4193   0010BA  90D8               	bcf	status,0,c
  4194   0010BC  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
  4195   0010BE  3203               	rrcf	i2___awdiv@divisor^0,f,c
  4196   0010C0  2E05               	decfsz	i2___awdiv@counter^0,f,c
  4197   0010C2  D7ED               	goto	i2u115_40
  4198   0010C4                     i2l2372:
  4199   0010C4  5006               	movf	i2___awdiv@sign^0,w,c
  4200   0010C6  B4D8               	btfsc	status,2,c
  4201   0010C8  D004               	goto	i2l2376
  4202   0010CA  6C07               	negf	i2___awdiv@quotient^0,c
  4203   0010CC  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
  4204   0010CE  B0D8               	btfsc	status,0,c
  4205   0010D0  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
  4206   0010D2                     i2l2376:
  4207   0010D2  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  4208   0010D6  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  4209   0010DA  0012               	return		;funcret
  4210   0010DC                     __end_ofi2___awdiv:
  4211                           	callstack 0
  4212                           
  4213 ;; *************** function i2_EscribeLCD_n8 *****************
  4214 ;; Defined at:
  4215 ;;		line 140 in file "LibLCDXC9.h"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;  a               1    wreg     unsigned char 
  4218 ;;  b               1    8[COMRAM] unsigned char 
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;  a               1   12[COMRAM] unsigned char 
  4221 ;;  unidad          1   11[COMRAM] unsigned char 
  4222 ;;  decena          1   10[COMRAM] unsigned char 
  4223 ;;  centena         1    9[COMRAM] unsigned char 
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1    wreg      void 
  4226 ;; Registers used:
  4227 ;;		wreg, status,2, status,0, cstack
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4233 ;;      Params:         1       0       0       0       0       0       0       0       0
  4234 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4235 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4236 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4237 ;;Total ram usage:        5 bytes
  4238 ;; Hardware stack levels used: 1
  4239 ;; Hardware stack levels required when called: 2
  4240 ;; This function calls:
  4241 ;;		i2_EnviaDato
  4242 ;;		i2_HabilitaLCD
  4243 ;;		i2_RetardoLCD
  4244 ;;		i2___lbdiv
  4245 ;;		i2___lbmod
  4246 ;; This function is called by:
  4247 ;;		_ok
  4248 ;;		_reiCon
  4249 ;;		i2_contador
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252                           
  4253                           	psect	text29
  4254   000CD2                     __ptext29:
  4255                           	callstack 0
  4256   000CD2                     i2_EscribeLCD_n8:
  4257                           	callstack 21
  4258                           
  4259                           ;incstack = 0
  4260                           ;i2EscribeLCD_n8@a stored from wreg
  4261   000CD2  6E0D               	movwf	i2EscribeLCD_n8@a^0,c
  4262                           
  4263                           ;LibLCDXC9.h: 145: unsigned char centena,decena,unidad;;LibLCDXC9.h: 146: LATA4=1;
  4264   000CD4  8889               	bsf	3977,4,c	;volatile
  4265                           
  4266                           ;LibLCDXC9.h: 147: switch(b){
  4267   000CD6  D065               	goto	i2l2318
  4268   000CD8                     i2l2286:
  4269   000CD8  0E0A               	movlw	10
  4270   000CDA  6E01               	movwf	i2___lbmod@divisor^0,c
  4271   000CDC  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4272   000CDE  EC9E  F00B         	call	i2___lbmod
  4273   000CE2  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  4274                           
  4275                           ;LibLCDXC9.h: 149: EnviaDato(unidad+48);
  4276   000CE4  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  4277   000CE6  0F30               	addlw	48
  4278   000CE8  ECB6  F00A         	call	i2_EnviaDato
  4279                           
  4280                           ;LibLCDXC9.h: 150: HabilitaLCD();
  4281   000CEC  EC3A  F00C         	call	i2_HabilitaLCD	;wreg free
  4282                           
  4283                           ;LibLCDXC9.h: 151: RetardoLCD(4);
  4284   000CF0  0E04               	movlw	4
  4285   000CF2  EC1D  F00A         	call	i2_RetardoLCD
  4286                           
  4287                           ;LibLCDXC9.h: 152: break;
  4288   000CF6  0012               	return	
  4289   000CF8                     i2l2292:
  4290   000CF8  0E0A               	movlw	10
  4291   000CFA  6E05               	movwf	i2___lbdiv@divisor^0,c
  4292   000CFC  0E64               	movlw	100
  4293   000CFE  6E01               	movwf	i2___lbmod@divisor^0,c
  4294   000D00  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4295   000D02  EC9E  F00B         	call	i2___lbmod
  4296   000D06  EC11  F00B         	call	i2___lbdiv
  4297   000D0A  6E0B               	movwf	i2EscribeLCD_n8@decena^0,c
  4298                           
  4299                           ;LibLCDXC9.h: 154: unidad=a%10;
  4300   000D0C  0E0A               	movlw	10
  4301   000D0E  6E01               	movwf	i2___lbmod@divisor^0,c
  4302   000D10  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4303   000D12  EC9E  F00B         	call	i2___lbmod
  4304   000D16  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  4305                           
  4306                           ;LibLCDXC9.h: 155: EnviaDato(decena+48);
  4307   000D18  500B               	movf	i2EscribeLCD_n8@decena^0,w,c
  4308   000D1A  0F30               	addlw	48
  4309   000D1C  ECB6  F00A         	call	i2_EnviaDato
  4310                           
  4311                           ;LibLCDXC9.h: 156: HabilitaLCD();
  4312   000D20  EC3A  F00C         	call	i2_HabilitaLCD	;wreg free
  4313                           
  4314                           ;LibLCDXC9.h: 157: RetardoLCD(4);
  4315   000D24  0E04               	movlw	4
  4316   000D26  EC1D  F00A         	call	i2_RetardoLCD
  4317                           
  4318                           ;LibLCDXC9.h: 158: EnviaDato(unidad+48);
  4319   000D2A  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  4320   000D2C  0F30               	addlw	48
  4321   000D2E  ECB6  F00A         	call	i2_EnviaDato
  4322                           
  4323                           ;LibLCDXC9.h: 159: HabilitaLCD();
  4324   000D32  EC3A  F00C         	call	i2_HabilitaLCD	;wreg free
  4325                           
  4326                           ;LibLCDXC9.h: 160: RetardoLCD(4);
  4327   000D36  0E04               	movlw	4
  4328   000D38  EC1D  F00A         	call	i2_RetardoLCD
  4329                           
  4330                           ;LibLCDXC9.h: 161: break;
  4331   000D3C  0012               	return	
  4332   000D3E                     i2l2302:
  4333   000D3E  0E64               	movlw	100
  4334   000D40  6E05               	movwf	i2___lbdiv@divisor^0,c
  4335   000D42  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4336   000D44  EC11  F00B         	call	i2___lbdiv
  4337   000D48  6E0A               	movwf	i2EscribeLCD_n8@centena^0,c
  4338                           
  4339                           ;LibLCDXC9.h: 163: decena=(a%100)/10;
  4340   000D4A  0E0A               	movlw	10
  4341   000D4C  6E05               	movwf	i2___lbdiv@divisor^0,c
  4342   000D4E  0E64               	movlw	100
  4343   000D50  6E01               	movwf	i2___lbmod@divisor^0,c
  4344   000D52  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4345   000D54  EC9E  F00B         	call	i2___lbmod
  4346   000D58  EC11  F00B         	call	i2___lbdiv
  4347   000D5C  6E0B               	movwf	i2EscribeLCD_n8@decena^0,c
  4348                           
  4349                           ;LibLCDXC9.h: 164: unidad=a%10;
  4350   000D5E  0E0A               	movlw	10
  4351   000D60  6E01               	movwf	i2___lbmod@divisor^0,c
  4352   000D62  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4353   000D64  EC9E  F00B         	call	i2___lbmod
  4354   000D68  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  4355                           
  4356                           ;LibLCDXC9.h: 165: EnviaDato(centena+48);
  4357   000D6A  500A               	movf	i2EscribeLCD_n8@centena^0,w,c
  4358   000D6C  0F30               	addlw	48
  4359   000D6E  ECB6  F00A         	call	i2_EnviaDato
  4360                           
  4361                           ;LibLCDXC9.h: 166: HabilitaLCD();
  4362   000D72  EC3A  F00C         	call	i2_HabilitaLCD	;wreg free
  4363                           
  4364                           ;LibLCDXC9.h: 167: RetardoLCD(4);
  4365   000D76  0E04               	movlw	4
  4366   000D78  EC1D  F00A         	call	i2_RetardoLCD
  4367                           
  4368                           ;LibLCDXC9.h: 168: EnviaDato(decena+48);
  4369   000D7C  500B               	movf	i2EscribeLCD_n8@decena^0,w,c
  4370   000D7E  0F30               	addlw	48
  4371   000D80  ECB6  F00A         	call	i2_EnviaDato
  4372                           
  4373                           ;LibLCDXC9.h: 169: HabilitaLCD();
  4374   000D84  EC3A  F00C         	call	i2_HabilitaLCD	;wreg free
  4375                           
  4376                           ;LibLCDXC9.h: 170: RetardoLCD(4);
  4377   000D88  0E04               	movlw	4
  4378   000D8A  EC1D  F00A         	call	i2_RetardoLCD
  4379                           
  4380                           ;LibLCDXC9.h: 171: EnviaDato(unidad+48);
  4381   000D8E  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  4382   000D90  0F30               	addlw	48
  4383   000D92  ECB6  F00A         	call	i2_EnviaDato
  4384                           
  4385                           ;LibLCDXC9.h: 172: HabilitaLCD();
  4386   000D96  EC3A  F00C         	call	i2_HabilitaLCD	;wreg free
  4387                           
  4388                           ;LibLCDXC9.h: 173: RetardoLCD(4);
  4389   000D9A  0E04               	movlw	4
  4390   000D9C  EC1D  F00A         	call	i2_RetardoLCD
  4391                           
  4392                           ;LibLCDXC9.h: 174: break;
  4393   000DA0  0012               	return	
  4394   000DA2                     i2l2318:
  4395   000DA2  5009               	movf	i2EscribeLCD_n8@b^0,w,c
  4396                           
  4397                           ; Switch size 1, requested type "simple"
  4398                           ; Number of cases is 3, Range of values is 1 to 3
  4399                           ; switch strategies available:
  4400                           ; Name         Instructions Cycles
  4401                           ; simple_byte           10     6 (average)
  4402                           ;	Chosen strategy is simple_byte
  4403   000DA4  0A01               	xorlw	1	; case 1
  4404   000DA6  B4D8               	btfsc	status,2,c
  4405   000DA8  D797               	goto	i2l2286
  4406   000DAA  0A03               	xorlw	3	; case 2
  4407   000DAC  B4D8               	btfsc	status,2,c
  4408   000DAE  D7A4               	goto	i2l2292
  4409   000DB0  0A01               	xorlw	1	; case 3
  4410   000DB2  A4D8               	btfss	status,2,c
  4411   000DB4  0012               	return	
  4412   000DB6  D7C3               	goto	i2l2302
  4413   000DB8                     __end_ofi2_EscribeLCD_n8:
  4414                           	callstack 0
  4415                           
  4416 ;; *************** function i2___lbmod *****************
  4417 ;; Defined at:
  4418 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbmod.c"
  4419 ;; Parameters:    Size  Location     Type
  4420 ;;  dividend        1    wreg     unsigned char 
  4421 ;;  divisor         1    0[COMRAM] unsigned char 
  4422 ;; Auto vars:     Size  Location     Type
  4423 ;;  dividend        1    1[COMRAM] unsigned char 
  4424 ;;  rem             1    3[COMRAM] unsigned char 
  4425 ;;  counter         1    2[COMRAM] unsigned char 
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  1    wreg      unsigned char 
  4428 ;; Registers used:
  4429 ;;		wreg, status,2, status,0
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4435 ;;      Params:         1       0       0       0       0       0       0       0       0
  4436 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4437 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4438 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4439 ;;Total ram usage:        4 bytes
  4440 ;; Hardware stack levels used: 1
  4441 ;; This function calls:
  4442 ;;		Nothing
  4443 ;; This function is called by:
  4444 ;;		i2_EscribeLCD_n8
  4445 ;; This function uses a non-reentrant model
  4446 ;;
  4447                           
  4448                           	psect	text30
  4449   00173C                     __ptext30:
  4450                           	callstack 0
  4451   00173C                     i2___lbmod:
  4452                           	callstack 22
  4453                           
  4454                           ;incstack = 0
  4455                           ;i2___lbmod@dividend stored from wreg
  4456   00173C  6E02               	movwf	i2___lbmod@dividend^0,c
  4457   00173E  0E08               	movlw	8
  4458   001740  6E03               	movwf	i2___lbmod@counter^0,c
  4459   001742  6A04               	clrf	i2___lbmod@rem^0,c
  4460   001744                     i2l2218:
  4461   001744  90D8               	bcf	status,0,c
  4462   001746  3402               	rlcf	i2___lbmod@dividend^0,w,c
  4463   001748  3404               	rlcf	i2___lbmod@rem^0,w,c
  4464   00174A  6E04               	movwf	i2___lbmod@rem^0,c
  4465   00174C  90D8               	bcf	status,0,c
  4466   00174E  3602               	rlcf	i2___lbmod@dividend^0,f,c
  4467   001750  5001               	movf	i2___lbmod@divisor^0,w,c
  4468   001752  5C04               	subwf	i2___lbmod@rem^0,w,c
  4469   001754  A0D8               	btfss	status,0,c
  4470   001756  D002               	goto	i2l2226
  4471   001758  5001               	movf	i2___lbmod@divisor^0,w,c
  4472   00175A  5E04               	subwf	i2___lbmod@rem^0,f,c
  4473   00175C                     i2l2226:
  4474   00175C  2E03               	decfsz	i2___lbmod@counter^0,f,c
  4475   00175E  D7F2               	goto	i2l2218
  4476   001760  5004               	movf	i2___lbmod@rem^0,w,c
  4477   001762  0012               	return		;funcret
  4478   001764                     __end_ofi2___lbmod:
  4479                           	callstack 0
  4480                           
  4481 ;; *************** function i2___lbdiv *****************
  4482 ;; Defined at:
  4483 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbdiv.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;  dividend        1    wreg     unsigned char 
  4486 ;;  divisor         1    4[COMRAM] unsigned char 
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;  dividend        1    5[COMRAM] unsigned char 
  4489 ;;  quotient        1    7[COMRAM] unsigned char 
  4490 ;;  counter         1    6[COMRAM] unsigned char 
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  1    wreg      unsigned char 
  4493 ;; Registers used:
  4494 ;;		wreg, status,2, status,0
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4500 ;;      Params:         1       0       0       0       0       0       0       0       0
  4501 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4502 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4503 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4504 ;;Total ram usage:        4 bytes
  4505 ;; Hardware stack levels used: 1
  4506 ;; This function calls:
  4507 ;;		Nothing
  4508 ;; This function is called by:
  4509 ;;		i2_EscribeLCD_n8
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           	psect	text31
  4514   001622                     __ptext31:
  4515                           	callstack 0
  4516   001622                     i2___lbdiv:
  4517                           	callstack 22
  4518                           
  4519                           ;incstack = 0
  4520                           ;i2___lbdiv@dividend stored from wreg
  4521   001622  6E06               	movwf	i2___lbdiv@dividend^0,c
  4522   001624  6A08               	clrf	i2___lbdiv@quotient^0,c
  4523   001626  5005               	movf	i2___lbdiv@divisor^0,w,c
  4524   001628  B4D8               	btfsc	status,2,c
  4525   00162A  D015               	goto	i2l2210
  4526   00162C  0E01               	movlw	1
  4527   00162E  6E07               	movwf	i2___lbdiv@counter^0,c
  4528   001630  D003               	goto	i2l2198
  4529   001632                     i2l2194:
  4530   001632  90D8               	bcf	status,0,c
  4531   001634  3605               	rlcf	i2___lbdiv@divisor^0,f,c
  4532   001636  2A07               	incf	i2___lbdiv@counter^0,f,c
  4533   001638                     i2l2198:
  4534   001638  AE05               	btfss	i2___lbdiv@divisor^0,7,c
  4535   00163A  D7FB               	goto	i2l2194
  4536   00163C                     i2u104_40:
  4537   00163C  90D8               	bcf	status,0,c
  4538   00163E  3608               	rlcf	i2___lbdiv@quotient^0,f,c
  4539   001640  5005               	movf	i2___lbdiv@divisor^0,w,c
  4540   001642  5C06               	subwf	i2___lbdiv@dividend^0,w,c
  4541   001644  A0D8               	btfss	status,0,c
  4542   001646  D003               	goto	i2l2206
  4543   001648  5005               	movf	i2___lbdiv@divisor^0,w,c
  4544   00164A  5E06               	subwf	i2___lbdiv@dividend^0,f,c
  4545   00164C  8008               	bsf	i2___lbdiv@quotient^0,0,c
  4546   00164E                     i2l2206:
  4547   00164E  90D8               	bcf	status,0,c
  4548   001650  3205               	rrcf	i2___lbdiv@divisor^0,f,c
  4549   001652  2E07               	decfsz	i2___lbdiv@counter^0,f,c
  4550   001654  D7F3               	goto	i2u104_40
  4551   001656                     i2l2210:
  4552   001656  5008               	movf	i2___lbdiv@quotient^0,w,c
  4553   001658  0012               	return		;funcret
  4554   00165A                     __end_ofi2___lbdiv:
  4555                           	callstack 0
  4556                           
  4557 ;; *************** function _borrarTexto *****************
  4558 ;; Defined at:
  4559 ;;		line 153 in file "PruebaLCD.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;		None
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;		None
  4564 ;; Return value:  Size  Location     Type
  4565 ;;                  1    wreg      void 
  4566 ;; Registers used:
  4567 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4568 ;; Tracked objects:
  4569 ;;		On entry : 0/0
  4570 ;;		On exit  : 0/0
  4571 ;;		Unchanged: 0/0
  4572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4573 ;;      Params:         0       0       0       0       0       0       0       0       0
  4574 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4575 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4576 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4577 ;;Total ram usage:        0 bytes
  4578 ;; Hardware stack levels used: 1
  4579 ;; Hardware stack levels required when called: 4
  4580 ;; This function calls:
  4581 ;;		i2_BorraLCD
  4582 ;;		i2_DireccionaLCD
  4583 ;;		i2_MensajeLCD_Var
  4584 ;; This function is called by:
  4585 ;;		_ok
  4586 ;;		_ISR
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           	psect	text32
  4591   0016C0                     __ptext32:
  4592                           	callstack 0
  4593   0016C0                     _borrarTexto:
  4594                           	callstack 19
  4595                           
  4596                           ;PruebaLCD.c: 154: if(flagEscribir == 1){
  4597                           
  4598                           ;incstack = 0
  4599   0016C0  043C               	decf	_flagEscribir^0,w,c
  4600   0016C2  103D               	iorwf	(_flagEscribir+1)^0,w,c
  4601   0016C4  A4D8               	btfss	status,2,c
  4602   0016C6  0012               	return	
  4603                           
  4604                           ;PruebaLCD.c: 155: BorraLCD();
  4605   0016C8  EC29  F00C         	call	i2_BorraLCD	;wreg free
  4606                           
  4607                           ;PruebaLCD.c: 156: MensajeLCD_Var("Piezas a Contar: ");
  4608   0016CC  0E01               	movlw	low STR_2
  4609   0016CE  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  4610   0016D0  ECB2  F00B         	call	i2_MensajeLCD_Var	;wreg free
  4611                           
  4612                           ;PruebaLCD.c: 157: DireccionaLCD(0xC0);
  4613   0016D4  0EC0               	movlw	192
  4614   0016D6  EC09  F00C         	call	i2_DireccionaLCD
  4615                           
  4616                           ;PruebaLCD.c: 158: flagEscribir=1;
  4617   0016DA  0E00               	movlw	0
  4618   0016DC  6E3D               	movwf	(_flagEscribir+1)^0,c
  4619   0016DE  0E01               	movlw	1
  4620   0016E0  6E3C               	movwf	_flagEscribir^0,c
  4621                           
  4622                           ;PruebaLCD.c: 159: cuenObj=0;
  4623   0016E2  0E00               	movlw	0
  4624   0016E4  6E29               	movwf	(_cuenObj+1)^0,c
  4625   0016E6  0E00               	movlw	0
  4626   0016E8  6E28               	movwf	_cuenObj^0,c
  4627   0016EA  0012               	return		;funcret
  4628   0016EC                     __end_of_borrarTexto:
  4629                           	callstack 0
  4630                           
  4631 ;; *************** function _luzFondo *****************
  4632 ;; Defined at:
  4633 ;;		line 89 in file "PruebaLCD.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;		None
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;		None
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  1    wreg      void 
  4640 ;; Registers used:
  4641 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4647 ;;      Params:         0       0       0       0       0       0       0       0       0
  4648 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4649 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4650 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4651 ;;Total ram usage:        0 bytes
  4652 ;; Hardware stack levels used: 1
  4653 ;; Hardware stack levels required when called: 1
  4654 ;; This function calls:
  4655 ;;		___wmul
  4656 ;; This function is called by:
  4657 ;;		_ISR
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           	psect	text33
  4662   00165A                     __ptext33:
  4663                           	callstack 0
  4664   00165A                     _luzFondo:
  4665                           	callstack 23
  4666                           
  4667                           ;PruebaLCD.c: 90: flagLuz*=-1;
  4668                           
  4669                           ;incstack = 0
  4670   00165A  C040  F001         	movff	_flagLuz,___wmul@multiplier
  4671   00165E  C041  F002         	movff	_flagLuz+1,___wmul@multiplier+1
  4672   001662  0EFF               	movlw	255
  4673   001664  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4674   001666  6803               	setf	___wmul@multiplicand^0,c
  4675   001668  ECC6  F00B         	call	___wmul	;wreg free
  4676   00166C  C001  F040         	movff	?___wmul,_flagLuz
  4677   001670  C002  F041         	movff	?___wmul+1,_flagLuz+1
  4678                           
  4679                           ;PruebaLCD.c: 91: if(flagLuz==1)LATA3=1;
  4680   001674  0440               	decf	_flagLuz^0,w,c
  4681   001676  1041               	iorwf	(_flagLuz+1)^0,w,c
  4682   001678  A4D8               	btfss	status,2,c
  4683   00167A  D002               	goto	i2l2640
  4684   00167C  8689               	bsf	3977,3,c	;volatile
  4685   00167E  0012               	return	
  4686   001680                     i2l2640:
  4687                           
  4688                           ;PruebaLCD.c: 92: else if(flagLuz==-1)LATA3=0;
  4689   001680  2840               	incf	_flagLuz^0,w,c
  4690   001682  E104               	bnz	i2l239
  4691   001684  2841               	incf	(_flagLuz+1)^0,w,c
  4692   001686  A4D8               	btfss	status,2,c
  4693   001688  0012               	return	
  4694   00168A  9689               	bcf	3977,3,c	;volatile
  4695   00168C                     i2l239:
  4696   00168C  0012               	return		;funcret
  4697   00168E                     __end_of_luzFondo:
  4698                           	callstack 0
  4699                           
  4700 ;; *************** function ___wmul *****************
  4701 ;; Defined at:
  4702 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\Umul16.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;  multiplier      2    0[COMRAM] unsigned int 
  4705 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;  product         2    4[COMRAM] unsigned int 
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  2    0[COMRAM] unsigned int 
  4710 ;; Registers used:
  4711 ;;		wreg, status,2, status,0, prodl, prodh
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4717 ;;      Params:         4       0       0       0       0       0       0       0       0
  4718 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4719 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4720 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4721 ;;Total ram usage:        6 bytes
  4722 ;; Hardware stack levels used: 1
  4723 ;; This function calls:
  4724 ;;		Nothing
  4725 ;; This function is called by:
  4726 ;;		_luzFondo
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           
  4730                           	psect	text34
  4731   00178C                     __ptext34:
  4732                           	callstack 0
  4733   00178C                     ___wmul:
  4734                           	callstack 23
  4735                           
  4736                           ;incstack = 0
  4737   00178C  5001               	movf	___wmul@multiplier^0,w,c
  4738   00178E  0203               	mulwf	___wmul@multiplicand^0,c
  4739   001790  CFF3 F005          	movff	prodl,___wmul@product
  4740   001794  CFF4 F006          	movff	prodh,___wmul@product+1
  4741   001798  5001               	movf	___wmul@multiplier^0,w,c
  4742   00179A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4743   00179C  50F3               	movf	243,w,c
  4744   00179E  2606               	addwf	(___wmul@product+1)^0,f,c
  4745   0017A0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4746   0017A2  0203               	mulwf	___wmul@multiplicand^0,c
  4747   0017A4  50F3               	movf	243,w,c
  4748   0017A6  2606               	addwf	(___wmul@product+1)^0,f,c
  4749   0017A8  C005  F001         	movff	___wmul@product,?___wmul
  4750   0017AC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4751   0017B0  0012               	return		;funcret
  4752   0017B2                     __end_of___wmul:
  4753                           	callstack 0
  4754                           
  4755 ;; *************** function _fin *****************
  4756 ;; Defined at:
  4757 ;;		line 259 in file "PruebaLCD.c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;		None
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;		None
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  1    wreg      void 
  4764 ;; Registers used:
  4765 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4771 ;;      Params:         0       0       0       0       0       0       0       0       0
  4772 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4773 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4774 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4775 ;;Total ram usage:        0 bytes
  4776 ;; Hardware stack levels used: 1
  4777 ;; Hardware stack levels required when called: 4
  4778 ;; This function calls:
  4779 ;;		i2_BorraLCD
  4780 ;;		i2_DireccionaLCD
  4781 ;;		i2_MensajeLCD_Var
  4782 ;;		i2_RGB
  4783 ;;		i2_SEG
  4784 ;; This function is called by:
  4785 ;;		_ISR
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           	psect	text35
  4790   001490                     __ptext35:
  4791                           	callstack 0
  4792   001490                     _fin:
  4793                           	callstack 20
  4794                           
  4795                           ;PruebaLCD.c: 261: BorraLCD();
  4796                           
  4797                           ;incstack = 0
  4798   001490  EC29  F00C         	call	i2_BorraLCD	;wreg free
  4799                           
  4800                           ;PruebaLCD.c: 262: MensajeLCD_Var("Piezas a Contar: ");
  4801   001494  0E01               	movlw	low STR_2
  4802   001496  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  4803   001498  ECB2  F00B         	call	i2_MensajeLCD_Var	;wreg free
  4804                           
  4805                           ;PruebaLCD.c: 263: DireccionaLCD(0xC0);
  4806   00149C  0EC0               	movlw	192
  4807   00149E  EC09  F00C         	call	i2_DireccionaLCD
  4808                           
  4809                           ;PruebaLCD.c: 264: flagEscribir=1;
  4810   0014A2  0E00               	movlw	0
  4811   0014A4  6E3D               	movwf	(_flagEscribir+1)^0,c
  4812   0014A6  0E01               	movlw	1
  4813   0014A8  6E3C               	movwf	_flagEscribir^0,c
  4814                           
  4815                           ;PruebaLCD.c: 265: flagFin=0;
  4816   0014AA  0E00               	movlw	0
  4817   0014AC  6E35               	movwf	(_flagFin+1)^0,c
  4818   0014AE  0E00               	movlw	0
  4819   0014B0  6E34               	movwf	_flagFin^0,c
  4820                           
  4821                           ;PruebaLCD.c: 266: piezFalt=cuenObj;
  4822   0014B2  C028  F026         	movff	_cuenObj,_piezFalt
  4823   0014B6  C029  F027         	movff	_cuenObj+1,_piezFalt+1
  4824                           
  4825                           ;PruebaLCD.c: 267: cuenta=0;
  4826   0014BA  0E00               	movlw	0
  4827   0014BC  6E33               	movwf	(_cuenta+1)^0,c
  4828   0014BE  0E00               	movlw	0
  4829   0014C0  6E32               	movwf	_cuenta^0,c
  4830                           
  4831                           ;PruebaLCD.c: 268: a=0;
  4832   0014C2  0E00               	movlw	0
  4833   0014C4  6E2D               	movwf	(_a+1)^0,c
  4834   0014C6  0E00               	movlw	0
  4835   0014C8  6E2C               	movwf	_a^0,c
  4836                           
  4837                           ;PruebaLCD.c: 269: b=0;
  4838   0014CA  0E00               	movlw	0
  4839   0014CC  6E2B               	movwf	(_b+1)^0,c
  4840   0014CE  0E00               	movlw	0
  4841   0014D0  6E2A               	movwf	_b^0,c
  4842                           
  4843                           ;PruebaLCD.c: 270: RGB();
  4844   0014D2  ECAA  F008         	call	i2_RGB	;wreg free
  4845                           
  4846                           ;PruebaLCD.c: 271: SEG();
  4847   0014D6  EC44  F00C         	call	i2_SEG	;wreg free
  4848   0014DA  0012               	return		;funcret
  4849   0014DC                     __end_of_fin:
  4850                           	callstack 0
  4851                           
  4852 ;; *************** function i2_SEG *****************
  4853 ;; Defined at:
  4854 ;;		line 230 in file "PruebaLCD.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;		None
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;		None
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1    wreg      void 
  4861 ;; Registers used:
  4862 ;;		None
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4868 ;;      Params:         0       0       0       0       0       0       0       0       0
  4869 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4870 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4871 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4872 ;;Total ram usage:        0 bytes
  4873 ;; Hardware stack levels used: 1
  4874 ;; This function calls:
  4875 ;;		Nothing
  4876 ;; This function is called by:
  4877 ;;		_ok
  4878 ;;		_reiCon
  4879 ;;		_fin
  4880 ;;		i2_contador
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           	psect	text36
  4885   001888                     __ptext36:
  4886                           	callstack 0
  4887   001888                     i2_SEG:
  4888                           	callstack 23
  4889                           
  4890                           ;PruebaLCD.c: 231: LATD = a;
  4891                           
  4892                           ;incstack = 0
  4893   001888  C02C  FF8C         	movff	_a,3980	;volatile
  4894   00188C  0012               	return		;funcret
  4895   00188E                     __end_ofi2_SEG:
  4896                           	callstack 0
  4897                           
  4898 ;; *************** function i2_RGB *****************
  4899 ;; Defined at:
  4900 ;;		line 192 in file "PruebaLCD.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;		None
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;		None
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      void 
  4907 ;; Registers used:
  4908 ;;		wreg, status,2, status,0
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4914 ;;      Params:         0       0       0       0       0       0       0       0       0
  4915 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4916 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4917 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4918 ;;Total ram usage:        0 bytes
  4919 ;; Hardware stack levels used: 1
  4920 ;; This function calls:
  4921 ;;		Nothing
  4922 ;; This function is called by:
  4923 ;;		_ok
  4924 ;;		_reiCon
  4925 ;;		_fin
  4926 ;;		i2_contador
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           	psect	text37
  4931   001154                     __ptext37:
  4932                           	callstack 0
  4933   001154                     i2_RGB:
  4934                           	callstack 23
  4935                           
  4936                           ;PruebaLCD.c: 193: if (flagInicio == 0){
  4937                           
  4938                           ;incstack = 0
  4939   001154  5038               	movf	_flagInicio^0,w,c
  4940   001156  1039               	iorwf	(_flagInicio+1)^0,w,c
  4941   001158  A4D8               	btfss	status,2,c
  4942   00115A  D004               	goto	i2l1324
  4943                           
  4944                           ;PruebaLCD.c: 194: LATE0 = 0;
  4945   00115C  908D               	bcf	3981,0,c	;volatile
  4946                           
  4947                           ;PruebaLCD.c: 195: LATE1 = 0;
  4948   00115E  928D               	bcf	3981,1,c	;volatile
  4949                           
  4950                           ;PruebaLCD.c: 196: LATE2 = 0;
  4951   001160  948D               	bcf	3981,2,c	;volatile
  4952                           
  4953                           ;PruebaLCD.c: 197: }
  4954   001162  0012               	return	
  4955   001164                     i2l1324:
  4956                           
  4957                           ;PruebaLCD.c: 198: else if (b == 0){
  4958   001164  502A               	movf	_b^0,w,c
  4959   001166  102B               	iorwf	(_b+1)^0,w,c
  4960   001168  A4D8               	btfss	status,2,c
  4961   00116A  D004               	goto	i2l1328
  4962                           
  4963                           ;PruebaLCD.c: 199: LATE0 = 1;
  4964   00116C  808D               	bsf	3981,0,c	;volatile
  4965                           
  4966                           ;PruebaLCD.c: 200: LATE1 = 0;
  4967   00116E  928D               	bcf	3981,1,c	;volatile
  4968                           
  4969                           ;PruebaLCD.c: 201: LATE2 = 1;
  4970   001170  848D               	bsf	3981,2,c	;volatile
  4971                           
  4972                           ;PruebaLCD.c: 202: }
  4973   001172  0012               	return	
  4974   001174                     i2l1328:
  4975                           
  4976                           ;PruebaLCD.c: 203: else if (b == 1){
  4977   001174  042A               	decf	_b^0,w,c
  4978   001176  102B               	iorwf	(_b+1)^0,w,c
  4979   001178  A4D8               	btfss	status,2,c
  4980   00117A  D004               	goto	i2l1332
  4981                           
  4982                           ;PruebaLCD.c: 204: LATE0 = 0;
  4983   00117C  908D               	bcf	3981,0,c	;volatile
  4984                           
  4985                           ;PruebaLCD.c: 205: LATE1 = 0;
  4986   00117E  928D               	bcf	3981,1,c	;volatile
  4987                           
  4988                           ;PruebaLCD.c: 206: LATE2 = 1;
  4989   001180  848D               	bsf	3981,2,c	;volatile
  4990                           
  4991                           ;PruebaLCD.c: 207: }
  4992   001182  0012               	return	
  4993   001184                     i2l1332:
  4994                           
  4995                           ;PruebaLCD.c: 208: else if (b == 2){
  4996   001184  0E02               	movlw	2
  4997   001186  182A               	xorwf	_b^0,w,c
  4998   001188  102B               	iorwf	(_b+1)^0,w,c
  4999   00118A  A4D8               	btfss	status,2,c
  5000   00118C  D004               	goto	i2l1336
  5001                           
  5002                           ;PruebaLCD.c: 209: LATE0 = 0;
  5003   00118E  908D               	bcf	3981,0,c	;volatile
  5004                           
  5005                           ;PruebaLCD.c: 210: LATE1 = 1;
  5006   001190  828D               	bsf	3981,1,c	;volatile
  5007                           
  5008                           ;PruebaLCD.c: 211: LATE2 = 1;
  5009   001192  848D               	bsf	3981,2,c	;volatile
  5010                           
  5011                           ;PruebaLCD.c: 212: }
  5012   001194  0012               	return	
  5013   001196                     i2l1336:
  5014                           
  5015                           ;PruebaLCD.c: 213: else if (b == 3){
  5016   001196  0E03               	movlw	3
  5017   001198  182A               	xorwf	_b^0,w,c
  5018   00119A  102B               	iorwf	(_b+1)^0,w,c
  5019   00119C  A4D8               	btfss	status,2,c
  5020   00119E  D004               	goto	i2l1340
  5021                           
  5022                           ;PruebaLCD.c: 214: LATE0 = 0;
  5023   0011A0  908D               	bcf	3981,0,c	;volatile
  5024                           
  5025                           ;PruebaLCD.c: 215: LATE1 = 1;
  5026   0011A2  828D               	bsf	3981,1,c	;volatile
  5027                           
  5028                           ;PruebaLCD.c: 216: LATE2 = 0;
  5029   0011A4  948D               	bcf	3981,2,c	;volatile
  5030                           
  5031                           ;PruebaLCD.c: 217: }
  5032   0011A6  0012               	return	
  5033   0011A8                     i2l1340:
  5034                           
  5035                           ;PruebaLCD.c: 218: else if (b == 4){
  5036   0011A8  0E04               	movlw	4
  5037   0011AA  182A               	xorwf	_b^0,w,c
  5038   0011AC  102B               	iorwf	(_b+1)^0,w,c
  5039   0011AE  A4D8               	btfss	status,2,c
  5040   0011B0  D004               	goto	i2l1344
  5041                           
  5042                           ;PruebaLCD.c: 219: LATE0 = 1;
  5043   0011B2  808D               	bsf	3981,0,c	;volatile
  5044                           
  5045                           ;PruebaLCD.c: 220: LATE1 = 1;
  5046   0011B4  828D               	bsf	3981,1,c	;volatile
  5047                           
  5048                           ;PruebaLCD.c: 221: LATE2 = 0;
  5049   0011B6  948D               	bcf	3981,2,c	;volatile
  5050                           
  5051                           ;PruebaLCD.c: 222: }
  5052   0011B8  0012               	return	
  5053   0011BA                     i2l1344:
  5054                           
  5055                           ;PruebaLCD.c: 223: else if (b == 5){
  5056   0011BA  0E05               	movlw	5
  5057   0011BC  182A               	xorwf	_b^0,w,c
  5058   0011BE  102B               	iorwf	(_b+1)^0,w,c
  5059   0011C0  A4D8               	btfss	status,2,c
  5060   0011C2  0012               	return	
  5061                           
  5062                           ;PruebaLCD.c: 224: LATE0 = 1;
  5063   0011C4  808D               	bsf	3981,0,c	;volatile
  5064                           
  5065                           ;PruebaLCD.c: 225: LATE1 = 1;
  5066   0011C6  828D               	bsf	3981,1,c	;volatile
  5067                           
  5068                           ;PruebaLCD.c: 226: LATE2 = 1;
  5069   0011C8  848D               	bsf	3981,2,c	;volatile
  5070   0011CA  0012               	return	
  5071   0011CC                     __end_ofi2_RGB:
  5072                           	callstack 0
  5073                           
  5074 ;; *************** function i2_MensajeLCD_Var *****************
  5075 ;; Defined at:
  5076 ;;		line 234 in file "LibLCDXC9.h"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;  a               1    5[COMRAM] PTR unsigned char 
  5079 ;;		 -> STR_15(18), STR_14(11), STR_13(9), STR_12(11), 
  5080 ;;		 -> STR_11(12), STR_10(14), STR_9(11), STR_8(9), 
  5081 ;;		 -> STR_7(18), STR_6(18), STR_5(15), STR_4(11), 
  5082 ;;		 -> STR_3(9), STR_2(18), STR_1(12), 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;		None
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  1    wreg      void 
  5087 ;; Registers used:
  5088 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5094 ;;      Params:         1       0       0       0       0       0       0       0       0
  5095 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5096 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5097 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5098 ;;Total ram usage:        1 bytes
  5099 ;; Hardware stack levels used: 1
  5100 ;; Hardware stack levels required when called: 3
  5101 ;; This function calls:
  5102 ;;		i2_EscribeLCD_c
  5103 ;; This function is called by:
  5104 ;;		_ok
  5105 ;;		_borrarTexto
  5106 ;;		_parEmerg
  5107 ;;		_reiCon
  5108 ;;		_fin
  5109 ;;		i2_contador
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113                           	psect	text38
  5114   001764                     __ptext38:
  5115                           	callstack 0
  5116   001764                     i2_MensajeLCD_Var:
  5117                           	callstack 20
  5118                           
  5119                           ;LibLCDXC9.h: 238: while(*a != '\0'){
  5120                           
  5121                           ;incstack = 0
  5122   001764  D009               	goto	i2l2326
  5123   001766                     i2l2322:
  5124                           
  5125                           ;LibLCDXC9.h: 239: EscribeLCD_c(*a);
  5126   001766  C006  FFF6         	movff	i2MensajeLCD_Var@a,tblptrl
  5127   00176A                     	if	1	;There is more than 1 active tblptr byte
  5128   00176A  0E08               	movlw	high __smallconst
  5129   00176C  6EF7               	movwf	tblptrh,c
  5130   00176E                     	endif
  5131   00176E                     	if	0	;tblptru may be non-zero
  5132   00176E                     	endif
  5133   00176E                     	if	0	;tblptru may be non-zero
  5134   00176E                     	endif
  5135   00176E  0008               	tblrd		*
  5136   001770  50F5               	movf	tablat,w,c
  5137   001772  EC14  F00C         	call	i2_EscribeLCD_c
  5138                           
  5139                           ;LibLCDXC9.h: 240: a++;
  5140   001776  2A06               	incf	i2MensajeLCD_Var@a^0,f,c
  5141   001778                     i2l2326:
  5142   001778  C006  FFF6         	movff	i2MensajeLCD_Var@a,tblptrl
  5143   00177C                     	if	1	;There is more than 1 active tblptr byte
  5144   00177C  0E08               	movlw	high __smallconst
  5145   00177E  6EF7               	movwf	tblptrh,c
  5146   001780                     	endif
  5147   001780                     	if	0	;tblptru may be non-zero
  5148   001780                     	endif
  5149   001780                     	if	0	;tblptru may be non-zero
  5150   001780                     	endif
  5151   001780  0008               	tblrd		*
  5152   001782  50F5               	movf	tablat,w,c
  5153   001784  0900               	iorlw	0
  5154   001786  B4D8               	btfsc	status,2,c
  5155   001788  0012               	return	
  5156   00178A  D7ED               	goto	i2l2322
  5157   00178C                     __end_ofi2_MensajeLCD_Var:
  5158                           	callstack 0
  5159                           
  5160 ;; *************** function i2_DireccionaLCD *****************
  5161 ;; Defined at:
  5162 ;;		line 243 in file "LibLCDXC9.h"
  5163 ;; Parameters:    Size  Location     Type
  5164 ;;  a               1    wreg     unsigned char 
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;  a               1    4[COMRAM] unsigned char 
  5167 ;; Return value:  Size  Location     Type
  5168 ;;                  1    wreg      void 
  5169 ;; Registers used:
  5170 ;;		wreg, status,2, status,0, cstack
  5171 ;; Tracked objects:
  5172 ;;		On entry : 0/0
  5173 ;;		On exit  : 0/0
  5174 ;;		Unchanged: 0/0
  5175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5176 ;;      Params:         0       0       0       0       0       0       0       0       0
  5177 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5178 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5179 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5180 ;;Total ram usage:        1 bytes
  5181 ;; Hardware stack levels used: 1
  5182 ;; Hardware stack levels required when called: 2
  5183 ;; This function calls:
  5184 ;;		i2_EnviaDato
  5185 ;;		i2_HabilitaLCD
  5186 ;;		i2_RetardoLCD
  5187 ;; This function is called by:
  5188 ;;		_ok
  5189 ;;		_borrarTexto
  5190 ;;		_reiCon
  5191 ;;		_fin
  5192 ;;		i2_contador
  5193 ;; This function uses a non-reentrant model
  5194 ;;
  5195                           
  5196                           	psect	text39
  5197   001812                     __ptext39:
  5198                           	callstack 0
  5199   001812                     i2_DireccionaLCD:
  5200                           	callstack 21
  5201                           
  5202                           ;incstack = 0
  5203                           ;i2DireccionaLCD@a stored from wreg
  5204   001812  6E05               	movwf	i2DireccionaLCD@a^0,c
  5205                           
  5206                           ;LibLCDXC9.h: 246: LATA4=0;
  5207   001814  9889               	bcf	3977,4,c	;volatile
  5208                           
  5209                           ;LibLCDXC9.h: 247: EnviaDato(a);
  5210   001816  5005               	movf	i2DireccionaLCD@a^0,w,c
  5211   001818  ECB6  F00A         	call	i2_EnviaDato
  5212                           
  5213                           ;LibLCDXC9.h: 248: HabilitaLCD();
  5214   00181C  EC3A  F00C         	call	i2_HabilitaLCD	;wreg free
  5215                           
  5216                           ;LibLCDXC9.h: 249: RetardoLCD(4);
  5217   001820  0E04               	movlw	4
  5218   001822  EC1D  F00A         	call	i2_RetardoLCD
  5219   001826  0012               	return		;funcret
  5220   001828                     __end_ofi2_DireccionaLCD:
  5221                           	callstack 0
  5222                           
  5223 ;; *************** function i2_BorraLCD *****************
  5224 ;; Defined at:
  5225 ;;		line 107 in file "LibLCDXC9.h"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;		None
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;		None
  5230 ;; Return value:  Size  Location     Type
  5231 ;;                  1    wreg      void 
  5232 ;; Registers used:
  5233 ;;		wreg, status,2, status,0, cstack
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5239 ;;      Params:         0       0       0       0       0       0       0       0       0
  5240 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5241 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5242 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5243 ;;Total ram usage:        0 bytes
  5244 ;; Hardware stack levels used: 1
  5245 ;; Hardware stack levels required when called: 2
  5246 ;; This function calls:
  5247 ;;		i2_EnviaDato
  5248 ;;		i2_HabilitaLCD
  5249 ;;		i2_RetardoLCD
  5250 ;; This function is called by:
  5251 ;;		_ok
  5252 ;;		_borrarTexto
  5253 ;;		_parEmerg
  5254 ;;		_reiCon
  5255 ;;		_fin
  5256 ;;		i2_contador
  5257 ;; This function uses a non-reentrant model
  5258 ;;
  5259                           
  5260                           	psect	text40
  5261   001852                     __ptext40:
  5262                           	callstack 0
  5263   001852                     i2_BorraLCD:
  5264                           	callstack 21
  5265                           
  5266                           ;LibLCDXC9.h: 109: LATA4=0;
  5267                           
  5268                           ;incstack = 0
  5269   001852  9889               	bcf	3977,4,c	;volatile
  5270                           
  5271                           ;LibLCDXC9.h: 110: EnviaDato(0x01);
  5272   001854  0E01               	movlw	1
  5273   001856  ECB6  F00A         	call	i2_EnviaDato
  5274                           
  5275                           ;LibLCDXC9.h: 111: HabilitaLCD();
  5276   00185A  EC3A  F00C         	call	i2_HabilitaLCD	;wreg free
  5277                           
  5278                           ;LibLCDXC9.h: 112: RetardoLCD(2);
  5279   00185E  0E02               	movlw	2
  5280   001860  EC1D  F00A         	call	i2_RetardoLCD
  5281   001864  0012               	return		;funcret
  5282   001866                     __end_ofi2_BorraLCD:
  5283                           	callstack 0
  5284                           
  5285 ;; *************** function _escribirDig *****************
  5286 ;; Defined at:
  5287 ;;		line 95 in file "PruebaLCD.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;  lectura         1    wreg     unsigned char 
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;  lectura         1    5[COMRAM] unsigned char 
  5292 ;; Return value:  Size  Location     Type
  5293 ;;                  2  241[None  ] int 
  5294 ;; Registers used:
  5295 ;;		wreg, status,2, status,0, cstack
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5301 ;;      Params:         0       0       0       0       0       0       0       0       0
  5302 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5303 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5304 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5305 ;;Total ram usage:        1 bytes
  5306 ;; Hardware stack levels used: 1
  5307 ;; Hardware stack levels required when called: 3
  5308 ;; This function calls:
  5309 ;;		i2_EscribeLCD_c
  5310 ;; This function is called by:
  5311 ;;		_ISR
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           	psect	text41
  5316   0014DC                     __ptext41:
  5317                           	callstack 0
  5318   0014DC                     _escribirDig:
  5319                           	callstack 21
  5320                           
  5321                           ;incstack = 0
  5322                           ;escribirDig@lectura stored from wreg
  5323   0014DC  6E06               	movwf	escribirDig@lectura^0,c
  5324                           
  5325                           ;PruebaLCD.c: 96: if(flagEscribir == 1){
  5326   0014DE  043C               	decf	_flagEscribir^0,w,c
  5327   0014E0  103D               	iorwf	(_flagEscribir+1)^0,w,c
  5328   0014E2  A4D8               	btfss	status,2,c
  5329   0014E4  0012               	return	
  5330                           
  5331                           ;PruebaLCD.c: 97: if(flagDig==0){
  5332   0014E6  503A               	movf	_flagDig^0,w,c
  5333   0014E8  103B               	iorwf	(_flagDig+1)^0,w,c
  5334   0014EA  A4D8               	btfss	status,2,c
  5335   0014EC  D00C               	goto	i2l2658
  5336                           
  5337                           ;PruebaLCD.c: 98: d=lectura;
  5338   0014EE  C006  F02E         	movff	escribirDig@lectura,_d
  5339   0014F2  6A2F               	clrf	(_d+1)^0,c
  5340                           
  5341                           ;PruebaLCD.c: 99: EscribeLCD_c(d+ '0');
  5342   0014F4  502E               	movf	_d^0,w,c
  5343   0014F6  0F30               	addlw	48
  5344   0014F8  EC14  F00C         	call	i2_EscribeLCD_c
  5345                           
  5346                           ;PruebaLCD.c: 100: flagDig=1;
  5347   0014FC  0E00               	movlw	0
  5348   0014FE  6E3B               	movwf	(_flagDig+1)^0,c
  5349   001500  0E01               	movlw	1
  5350   001502  6E3A               	movwf	_flagDig^0,c
  5351   001504  0012               	return	
  5352   001506                     i2l2658:
  5353                           
  5354                           ;PruebaLCD.c: 103: else if (flagDig==1){
  5355   001506  043A               	decf	_flagDig^0,w,c
  5356   001508  103B               	iorwf	(_flagDig+1)^0,w,c
  5357   00150A  A4D8               	btfss	status,2,c
  5358   00150C  0012               	return	
  5359                           
  5360                           ;PruebaLCD.c: 104: u=lectura;
  5361   00150E  C006  F030         	movff	escribirDig@lectura,_u
  5362   001512  6A31               	clrf	(_u+1)^0,c
  5363                           
  5364                           ;PruebaLCD.c: 105: EscribeLCD_c(u+ '0');
  5365   001514  5030               	movf	_u^0,w,c
  5366   001516  0F30               	addlw	48
  5367   001518  EC14  F00C         	call	i2_EscribeLCD_c
  5368                           
  5369                           ;PruebaLCD.c: 106: flagDig=0;
  5370   00151C  0E00               	movlw	0
  5371   00151E  6E3B               	movwf	(_flagDig+1)^0,c
  5372   001520  0E00               	movlw	0
  5373   001522  6E3A               	movwf	_flagDig^0,c
  5374   001524  0012               	return		;funcret
  5375   001526                     __end_of_escribirDig:
  5376                           	callstack 0
  5377                           
  5378 ;; *************** function i2_EscribeLCD_c *****************
  5379 ;; Defined at:
  5380 ;;		line 131 in file "LibLCDXC9.h"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;  a               1    wreg     unsigned char 
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;  a               1    4[COMRAM] unsigned char 
  5385 ;; Return value:  Size  Location     Type
  5386 ;;                  1    wreg      void 
  5387 ;; Registers used:
  5388 ;;		wreg, status,2, status,0, cstack
  5389 ;; Tracked objects:
  5390 ;;		On entry : 0/0
  5391 ;;		On exit  : 0/0
  5392 ;;		Unchanged: 0/0
  5393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5394 ;;      Params:         0       0       0       0       0       0       0       0       0
  5395 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5396 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5397 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5398 ;;Total ram usage:        1 bytes
  5399 ;; Hardware stack levels used: 1
  5400 ;; Hardware stack levels required when called: 2
  5401 ;; This function calls:
  5402 ;;		i2_EnviaDato
  5403 ;;		i2_HabilitaLCD
  5404 ;;		i2_RetardoLCD
  5405 ;; This function is called by:
  5406 ;;		_escribirDig
  5407 ;;		i2_MensajeLCD_Var
  5408 ;; This function uses a non-reentrant model
  5409 ;;
  5410                           
  5411                           	psect	text42
  5412   001828                     __ptext42:
  5413                           	callstack 0
  5414   001828                     i2_EscribeLCD_c:
  5415                           	callstack 20
  5416                           
  5417                           ;incstack = 0
  5418                           ;i2EscribeLCD_c@a stored from wreg
  5419   001828  6E05               	movwf	i2EscribeLCD_c@a^0,c
  5420                           
  5421                           ;LibLCDXC9.h: 135: LATA4=1;
  5422   00182A  8889               	bsf	3977,4,c	;volatile
  5423                           
  5424                           ;LibLCDXC9.h: 136: EnviaDato(a);
  5425   00182C  5005               	movf	i2EscribeLCD_c@a^0,w,c
  5426   00182E  ECB6  F00A         	call	i2_EnviaDato
  5427                           
  5428                           ;LibLCDXC9.h: 137: HabilitaLCD();
  5429   001832  EC3A  F00C         	call	i2_HabilitaLCD	;wreg free
  5430                           
  5431                           ;LibLCDXC9.h: 138: RetardoLCD(4);
  5432   001836  0E04               	movlw	4
  5433   001838  EC1D  F00A         	call	i2_RetardoLCD
  5434   00183C  0012               	return		;funcret
  5435   00183E                     __end_ofi2_EscribeLCD_c:
  5436                           	callstack 0
  5437                           
  5438 ;; *************** function i2_EnviaDato *****************
  5439 ;; Defined at:
  5440 ;;		line 54 in file "LibLCDXC9.h"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;  a               1    wreg     unsigned char 
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;  a               1    3[COMRAM] unsigned char 
  5445 ;; Return value:  Size  Location     Type
  5446 ;;                  1    wreg      void 
  5447 ;; Registers used:
  5448 ;;		wreg, status,2, status,0, cstack
  5449 ;; Tracked objects:
  5450 ;;		On entry : 0/0
  5451 ;;		On exit  : 0/0
  5452 ;;		Unchanged: 0/0
  5453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5454 ;;      Params:         0       0       0       0       0       0       0       0       0
  5455 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5456 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5457 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5458 ;;Total ram usage:        2 bytes
  5459 ;; Hardware stack levels used: 1
  5460 ;; Hardware stack levels required when called: 1
  5461 ;; This function calls:
  5462 ;;		i2_HabilitaLCD
  5463 ;;		i2_RetardoLCD
  5464 ;; This function is called by:
  5465 ;;		i2_BorraLCD
  5466 ;;		i2_EscribeLCD_c
  5467 ;;		i2_EscribeLCD_n8
  5468 ;;		i2_DireccionaLCD
  5469 ;; This function uses a non-reentrant model
  5470 ;;
  5471                           
  5472                           	psect	text43
  5473   00156C                     __ptext43:
  5474                           	callstack 0
  5475   00156C                     i2_EnviaDato:
  5476                           	callstack 20
  5477                           
  5478                           ;incstack = 0
  5479                           ;i2EnviaDato@a stored from wreg
  5480   00156C  6E04               	movwf	i2EnviaDato@a^0,c
  5481                           
  5482                           ;LibLCDXC9.h: 55: if(interfaz==4){
  5483   00156E  0E04               	movlw	4
  5484   001570  1842               	xorwf	_interfaz^0,w,c
  5485   001572  A4D8               	btfss	status,2,c
  5486   001574  D017               	goto	i2l2176
  5487                           
  5488                           ;LibLCDXC9.h: 56: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  5489   001576  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  5490   00157A  0EF0               	movlw	240
  5491   00157C  1603               	andwf	??i2_EnviaDato^0,f,c
  5492   00157E  508C               	movf	140,w,c	;volatile
  5493   001580  0B0F               	andlw	15
  5494   001582  1003               	iorwf	??i2_EnviaDato^0,w,c
  5495   001584  6E8C               	movwf	140,c	;volatile
  5496                           
  5497                           ;LibLCDXC9.h: 57: HabilitaLCD();
  5498   001586  EC3A  F00C         	call	i2_HabilitaLCD	;wreg free
  5499                           
  5500                           ;LibLCDXC9.h: 58: RetardoLCD(1);
  5501   00158A  0E01               	movlw	1
  5502   00158C  EC1D  F00A         	call	i2_RetardoLCD
  5503                           
  5504                           ;LibLCDXC9.h: 59: LATD=(LATD & 0b00001111) | (a<<4);
  5505   001590  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  5506   001594  3A03               	swapf	??i2_EnviaDato^0,f,c
  5507   001596  0EF0               	movlw	240
  5508   001598  1603               	andwf	??i2_EnviaDato^0,f,c
  5509   00159A  508C               	movf	140,w,c	;volatile
  5510   00159C  0B0F               	andlw	15
  5511   00159E  1003               	iorwf	??i2_EnviaDato^0,w,c
  5512   0015A0  6E8C               	movwf	140,c	;volatile
  5513                           
  5514                           ;LibLCDXC9.h: 62: }else if(interfaz==8){
  5515   0015A2  0012               	return	
  5516   0015A4                     i2l2176:
  5517   0015A4  0E08               	movlw	8
  5518   0015A6  1842               	xorwf	_interfaz^0,w,c
  5519   0015A8  A4D8               	btfss	status,2,c
  5520   0015AA  0012               	return	
  5521                           
  5522                           ;LibLCDXC9.h: 63: LATD=a;
  5523   0015AC  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  5524   0015B0  0012               	return		;funcret
  5525   0015B2                     __end_ofi2_EnviaDato:
  5526                           	callstack 0
  5527                           
  5528 ;; *************** function i2_RetardoLCD *****************
  5529 ;; Defined at:
  5530 ;;		line 287 in file "LibLCDXC9.h"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;  a               1    wreg     unsigned char 
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;  a               1    1[COMRAM] unsigned char 
  5535 ;; Return value:  Size  Location     Type
  5536 ;;                  1    wreg      void 
  5537 ;; Registers used:
  5538 ;;		wreg, status,2, status,0
  5539 ;; Tracked objects:
  5540 ;;		On entry : 0/0
  5541 ;;		On exit  : 0/0
  5542 ;;		Unchanged: 0/0
  5543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5544 ;;      Params:         0       0       0       0       0       0       0       0       0
  5545 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5546 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5547 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5548 ;;Total ram usage:        2 bytes
  5549 ;; Hardware stack levels used: 1
  5550 ;; This function calls:
  5551 ;;		Nothing
  5552 ;; This function is called by:
  5553 ;;		i2_EnviaDato
  5554 ;;		i2_BorraLCD
  5555 ;;		i2_EscribeLCD_c
  5556 ;;		i2_EscribeLCD_n8
  5557 ;;		i2_DireccionaLCD
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561                           	psect	text44
  5562   00143A                     __ptext44:
  5563                           	callstack 0
  5564   00143A                     i2_RetardoLCD:
  5565                           	callstack 21
  5566                           
  5567                           ;incstack = 0
  5568                           ;i2RetardoLCD@a stored from wreg
  5569   00143A  6E02               	movwf	i2RetardoLCD@a^0,c
  5570                           
  5571                           ;LibLCDXC9.h: 288: switch(a){
  5572   00143C  D01B               	goto	i2l2164
  5573   00143E                     i2l2154:
  5574   00143E  0E05               	movlw	5
  5575   001440  6E01               	movwf	??i2_RetardoLCD^0,c
  5576   001442  0EDE               	movlw	222
  5577   001444                     i2u192_47:
  5578   001444  2EE8               	decfsz	wreg,f,c
  5579   001446  D7FE               	bra	i2u192_47
  5580   001448  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  5581   00144A  D7FC               	bra	i2u192_47
  5582                           
  5583                           ;LibLCDXC9.h: 291: break;
  5584   00144C  0012               	return	
  5585   00144E                     i2l2156:
  5586   00144E  0E53               	movlw	83
  5587   001450                     i2u193_47:
  5588   001450  2EE8               	decfsz	wreg,f,c
  5589   001452  D7FE               	bra	i2u193_47
  5590   001454  0000               	nop	
  5591                           
  5592                           ;LibLCDXC9.h: 293: _delay((unsigned long)((640)*(1000000/4000000.0)));
  5593   001456  0E35               	movlw	53
  5594   001458                     i2u194_47:
  5595   001458  2EE8               	decfsz	wreg,f,c
  5596   00145A  D7FE               	bra	i2u194_47
  5597   00145C  0000               	nop	
  5598                           
  5599                           ;LibLCDXC9.h: 295: break;
  5600   00145E  0012               	return	
  5601   001460                     i2l2158:
  5602   001460  0E08               	movlw	8
  5603   001462                     i2u195_47:
  5604   001462  2EE8               	decfsz	wreg,f,c
  5605   001464  D7FE               	bra	i2u195_47
  5606   001466  0000               	nop	
  5607                           
  5608                           ;LibLCDXC9.h: 298: break;
  5609   001468  0012               	return	
  5610   00146A                     i2l2160:
  5611   00146A  0E03               	movlw	3
  5612   00146C                     i2u196_47:
  5613   00146C  2EE8               	decfsz	wreg,f,c
  5614   00146E  D7FE               	bra	i2u196_47
  5615   001470  0000               	nop	
  5616                           
  5617                           ;LibLCDXC9.h: 301: break;
  5618   001472  0012               	return	
  5619   001474                     i2l2164:
  5620   001474  5002               	movf	i2RetardoLCD@a^0,w,c
  5621                           
  5622                           ; Switch size 1, requested type "simple"
  5623                           ; Number of cases is 4, Range of values is 1 to 4
  5624                           ; switch strategies available:
  5625                           ; Name         Instructions Cycles
  5626                           ; simple_byte           13     7 (average)
  5627                           ;	Chosen strategy is simple_byte
  5628   001476  0A01               	xorlw	1	; case 1
  5629   001478  B4D8               	btfsc	status,2,c
  5630   00147A  D7E1               	goto	i2l2154
  5631   00147C  0A03               	xorlw	3	; case 2
  5632   00147E  B4D8               	btfsc	status,2,c
  5633   001480  D7E6               	goto	i2l2156
  5634   001482  0A01               	xorlw	1	; case 3
  5635   001484  B4D8               	btfsc	status,2,c
  5636   001486  D7EC               	goto	i2l2158
  5637   001488  0A07               	xorlw	7	; case 4
  5638   00148A  A4D8               	btfss	status,2,c
  5639   00148C  0012               	return	
  5640   00148E  D7ED               	goto	i2l2160
  5641   001490                     __end_ofi2_RetardoLCD:
  5642                           	callstack 0
  5643                           
  5644 ;; *************** function i2_HabilitaLCD *****************
  5645 ;; Defined at:
  5646 ;;		line 100 in file "LibLCDXC9.h"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;		None
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;		None
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  1    wreg      void 
  5653 ;; Registers used:
  5654 ;;		wreg
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5660 ;;      Params:         0       0       0       0       0       0       0       0       0
  5661 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5662 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5663 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5664 ;;Total ram usage:        0 bytes
  5665 ;; Hardware stack levels used: 1
  5666 ;; This function calls:
  5667 ;;		Nothing
  5668 ;; This function is called by:
  5669 ;;		i2_EnviaDato
  5670 ;;		i2_BorraLCD
  5671 ;;		i2_EscribeLCD_c
  5672 ;;		i2_EscribeLCD_n8
  5673 ;;		i2_DireccionaLCD
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           
  5677                           	psect	text45
  5678   001874                     __ptext45:
  5679                           	callstack 0
  5680   001874                     i2_HabilitaLCD:
  5681                           	callstack 21
  5682                           
  5683                           ;LibLCDXC9.h: 102: LATA5=1;
  5684                           
  5685                           ;incstack = 0
  5686   001874  8A89               	bsf	3977,5,c	;volatile
  5687                           
  5688                           ;LibLCDXC9.h: 103: _delay((unsigned long)((40)*(1000000/4000000.0)));
  5689   001876  0E03               	movlw	3
  5690   001878                     i2u197_47:
  5691   001878  2EE8               	decfsz	wreg,f,c
  5692   00187A  D7FE               	bra	i2u197_47
  5693   00187C  0000               	nop	
  5694                           
  5695                           ;LibLCDXC9.h: 105: LATA5=0;
  5696   00187E  9A89               	bcf	3977,5,c	;volatile
  5697   001880  0012               	return		;funcret
  5698   001882                     __end_ofi2_HabilitaLCD:
  5699                           	callstack 0
  5700                           
  5701                           	psect	rparam
  5702   000001                     ___rparam_used  equ	1
  5703   000000                     ___param_bank   equ	0
  5704   000000                     __Lparam        equ	__Lrparam
  5705   000000                     __Hparam        equ	__Hrparam
  5706                           
  5707                           	psect	temp
  5708   000043                     btemp:
  5709                           	callstack 0
  5710   000043                     	ds	1
  5711   000043                     int$flags       set	btemp
  5712   000044                     wtemp8          set	btemp+1
  5713   000044                     ttemp5          set	btemp+1
  5714   000047                     ttemp6          set	btemp+4
  5715   00004B                     ttemp7          set	btemp+8
  5716                           
  5717                           	psect	idloc
  5718                           
  5719                           ;Config register IDLOC0 @ 0x200000
  5720                           ;	unspecified, using default values
  5721   200000                     	org	2097152
  5722   200000  FF                 	db	255
  5723                           
  5724                           ;Config register IDLOC1 @ 0x200001
  5725                           ;	unspecified, using default values
  5726   200001                     	org	2097153
  5727   200001  FF                 	db	255
  5728                           
  5729                           ;Config register IDLOC2 @ 0x200002
  5730                           ;	unspecified, using default values
  5731   200002                     	org	2097154
  5732   200002  FF                 	db	255
  5733                           
  5734                           ;Config register IDLOC3 @ 0x200003
  5735                           ;	unspecified, using default values
  5736   200003                     	org	2097155
  5737   200003  FF                 	db	255
  5738                           
  5739                           ;Config register IDLOC4 @ 0x200004
  5740                           ;	unspecified, using default values
  5741   200004                     	org	2097156
  5742   200004  FF                 	db	255
  5743                           
  5744                           ;Config register IDLOC5 @ 0x200005
  5745                           ;	unspecified, using default values
  5746   200005                     	org	2097157
  5747   200005  FF                 	db	255
  5748                           
  5749                           ;Config register IDLOC6 @ 0x200006
  5750                           ;	unspecified, using default values
  5751   200006                     	org	2097158
  5752   200006  FF                 	db	255
  5753                           
  5754                           ;Config register IDLOC7 @ 0x200007
  5755                           ;	unspecified, using default values
  5756   200007                     	org	2097159
  5757   200007  FF                 	db	255
  5758                           
  5759                           	psect	config
  5760                           
  5761                           ;Config register CONFIG1L @ 0x300000
  5762                           ;	unspecified, using default values
  5763                           ;	PLL Prescaler Selection bits
  5764                           ;	PLLDIV = 0x0, unprogrammed default
  5765                           ;	System Clock Postscaler Selection bits
  5766                           ;	CPUDIV = 0x0, unprogrammed default
  5767                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5768                           ;	USBDIV = 0x0, unprogrammed default
  5769   300000                     	org	3145728
  5770   300000  00                 	db	0
  5771                           
  5772                           ;Config register CONFIG1H @ 0x300001
  5773                           ;	Oscillator Selection bits
  5774                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  5775                           ;	Fail-Safe Clock Monitor Enable bit
  5776                           ;	FCMEN = 0x0, unprogrammed default
  5777                           ;	Internal/External Oscillator Switchover bit
  5778                           ;	IESO = 0x0, unprogrammed default
  5779   300001                     	org	3145729
  5780   300001  09                 	db	9
  5781                           
  5782                           ;Config register CONFIG2L @ 0x300002
  5783                           ;	unspecified, using default values
  5784                           ;	Power-up Timer Enable bit
  5785                           ;	PWRT = 0x1, unprogrammed default
  5786                           ;	Brown-out Reset Enable bits
  5787                           ;	BOR = 0x3, unprogrammed default
  5788                           ;	Brown-out Reset Voltage bits
  5789                           ;	BORV = 0x3, unprogrammed default
  5790                           ;	USB Voltage Regulator Enable bit
  5791                           ;	VREGEN = 0x0, unprogrammed default
  5792   300002                     	org	3145730
  5793   300002  1F                 	db	31
  5794                           
  5795                           ;Config register CONFIG2H @ 0x300003
  5796                           ;	Watchdog Timer Enable bit
  5797                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5798                           ;	Watchdog Timer Postscale Select bits
  5799                           ;	WDTPS = 0xF, unprogrammed default
  5800   300003                     	org	3145731
  5801   300003  1E                 	db	30
  5802                           
  5803                           ; Padding undefined space
  5804   300004                     	org	3145732
  5805   300004  FF                 	db	255
  5806                           
  5807                           ;Config register CONFIG3H @ 0x300005
  5808                           ;	CCP2 MUX bit
  5809                           ;	CCP2MX = 0x1, unprogrammed default
  5810                           ;	PORTB A/D Enable bit
  5811                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5812                           ;	Low-Power Timer 1 Oscillator Enable bit
  5813                           ;	LPT1OSC = 0x0, unprogrammed default
  5814                           ;	MCLR Pin Enable bit
  5815                           ;	MCLRE = 0x1, unprogrammed default
  5816   300005                     	org	3145733
  5817   300005  81                 	db	129
  5818                           
  5819                           ;Config register CONFIG4L @ 0x300006
  5820                           ;	Stack Full/Underflow Reset Enable bit
  5821                           ;	STVREN = 0x1, unprogrammed default
  5822                           ;	Single-Supply ICSP Enable bit
  5823                           ;	LVP = OFF, Single-Supply ICSP disabled
  5824                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5825                           ;	ICPRT = 0x0, unprogrammed default
  5826                           ;	Extended Instruction Set Enable bit
  5827                           ;	XINST = 0x0, unprogrammed default
  5828                           ;	Background Debugger Enable bit
  5829                           ;	DEBUG = 0x1, unprogrammed default
  5830   300006                     	org	3145734
  5831   300006  81                 	db	129
  5832                           
  5833                           ; Padding undefined space
  5834   300007                     	org	3145735
  5835   300007  FF                 	db	255
  5836                           
  5837                           ;Config register CONFIG5L @ 0x300008
  5838                           ;	unspecified, using default values
  5839                           ;	Code Protection bit
  5840                           ;	CP0 = 0x1, unprogrammed default
  5841                           ;	Code Protection bit
  5842                           ;	CP1 = 0x1, unprogrammed default
  5843                           ;	Code Protection bit
  5844                           ;	CP2 = 0x1, unprogrammed default
  5845                           ;	Code Protection bit
  5846                           ;	CP3 = 0x1, unprogrammed default
  5847   300008                     	org	3145736
  5848   300008  0F                 	db	15
  5849                           
  5850                           ;Config register CONFIG5H @ 0x300009
  5851                           ;	unspecified, using default values
  5852                           ;	Boot Block Code Protection bit
  5853                           ;	CPB = 0x1, unprogrammed default
  5854                           ;	Data EEPROM Code Protection bit
  5855                           ;	CPD = 0x1, unprogrammed default
  5856   300009                     	org	3145737
  5857   300009  C0                 	db	192
  5858                           
  5859                           ;Config register CONFIG6L @ 0x30000A
  5860                           ;	unspecified, using default values
  5861                           ;	Write Protection bit
  5862                           ;	WRT0 = 0x1, unprogrammed default
  5863                           ;	Write Protection bit
  5864                           ;	WRT1 = 0x1, unprogrammed default
  5865                           ;	Write Protection bit
  5866                           ;	WRT2 = 0x1, unprogrammed default
  5867                           ;	Write Protection bit
  5868                           ;	WRT3 = 0x1, unprogrammed default
  5869   30000A                     	org	3145738
  5870   30000A  0F                 	db	15
  5871                           
  5872                           ;Config register CONFIG6H @ 0x30000B
  5873                           ;	unspecified, using default values
  5874                           ;	Configuration Register Write Protection bit
  5875                           ;	WRTC = 0x1, unprogrammed default
  5876                           ;	Boot Block Write Protection bit
  5877                           ;	WRTB = 0x1, unprogrammed default
  5878                           ;	Data EEPROM Write Protection bit
  5879                           ;	WRTD = 0x1, unprogrammed default
  5880   30000B                     	org	3145739
  5881   30000B  E0                 	db	224
  5882                           
  5883                           ;Config register CONFIG7L @ 0x30000C
  5884                           ;	unspecified, using default values
  5885                           ;	Table Read Protection bit
  5886                           ;	EBTR0 = 0x1, unprogrammed default
  5887                           ;	Table Read Protection bit
  5888                           ;	EBTR1 = 0x1, unprogrammed default
  5889                           ;	Table Read Protection bit
  5890                           ;	EBTR2 = 0x1, unprogrammed default
  5891                           ;	Table Read Protection bit
  5892                           ;	EBTR3 = 0x1, unprogrammed default
  5893   30000C                     	org	3145740
  5894   30000C  0F                 	db	15
  5895                           
  5896                           ;Config register CONFIG7H @ 0x30000D
  5897                           ;	unspecified, using default values
  5898                           ;	Boot Block Table Read Protection bit
  5899                           ;	EBTRB = 0x1, unprogrammed default
  5900   30000D                     	org	3145741
  5901   30000D  40                 	db	64
  5902                           tosu	equ	0xFFF
  5903                           tosh	equ	0xFFE
  5904                           tosl	equ	0xFFD
  5905                           stkptr	equ	0xFFC
  5906                           pclatu	equ	0xFFB
  5907                           pclath	equ	0xFFA
  5908                           pcl	equ	0xFF9
  5909                           tblptru	equ	0xFF8
  5910                           tblptrh	equ	0xFF7
  5911                           tblptrl	equ	0xFF6
  5912                           tablat	equ	0xFF5
  5913                           prodh	equ	0xFF4
  5914                           prodl	equ	0xFF3
  5915                           indf0	equ	0xFEF
  5916                           postinc0	equ	0xFEE
  5917                           postdec0	equ	0xFED
  5918                           preinc0	equ	0xFEC
  5919                           plusw0	equ	0xFEB
  5920                           fsr0h	equ	0xFEA
  5921                           fsr0l	equ	0xFE9
  5922                           wreg	equ	0xFE8
  5923                           indf1	equ	0xFE7
  5924                           postinc1	equ	0xFE6
  5925                           postdec1	equ	0xFE5
  5926                           preinc1	equ	0xFE4
  5927                           plusw1	equ	0xFE3
  5928                           fsr1h	equ	0xFE2
  5929                           fsr1l	equ	0xFE1
  5930                           bsr	equ	0xFE0
  5931                           indf2	equ	0xFDF
  5932                           postinc2	equ	0xFDE
  5933                           postdec2	equ	0xFDD
  5934                           preinc2	equ	0xFDC
  5935                           plusw2	equ	0xFDB
  5936                           fsr2h	equ	0xFDA
  5937                           fsr2l	equ	0xFD9
  5938                           status	equ	0xFD8

Data Sizes:
    Strings     102
    Constant    0
    Data        3
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      66
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[12]), STR_10(CODE[14]), STR_11(CODE[12]), STR_12(CODE[11]), 
		 -> STR_13(CODE[9]), STR_14(CODE[11]), STR_15(CODE[18]), STR_2(CODE[18]), 
		 -> STR_3(CODE[9]), STR_4(CODE[11]), STR_5(CODE[15]), STR_6(CODE[18]), 
		 -> STR_7(CODE[18]), STR_8(CODE[9]), STR_9(CODE[11]), 


Critical Paths under _main in COMRAM

    _contador->_EscribeLCD_n8
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _EscribeLCD_n8->___lbdiv
    ___lbdiv->___lbmod
    _DireccionaLCD->_EnviaDato
    _InicializaLCD->_EnviaDato
    _CaracterQbert->_ComandoLCD
    _CaracterCara->_ComandoLCD
    _ComandoLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->_ok
    _reiCon->i2_EscribeLCD_n8
    _parEmerg->i2_MensajeLCD_Var
    _ok->i2_EscribeLCD_n8
    i2_contador->i2_EscribeLCD_n8
    i2_EscribeLCD_n8->i2___lbdiv
    i2___lbdiv->i2___lbmod
    _borrarTexto->i2_MensajeLCD_Var
    _luzFondo->___wmul
    _fin->i2_MensajeLCD_Var
    i2_MensajeLCD_Var->i2_EscribeLCD_c
    i2_DireccionaLCD->i2_EnviaDato
    i2_BorraLCD->i2_EnviaDato
    _escribirDig->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2793
                                             35 COMRAM     2     2      0
                           _BorraLCD
                       _CaracterCara
                      _CaracterQbert
                       _ConfiguraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                     _MensajeLCD_Var
                           _contador
 ---------------------------------------------------------------------------------
 (1) _contador                                             0     0      0    1662
                           _BorraLCD
                      _DireccionaLCD
                      _EscribeLCD_n8
                     _MensajeLCD_Var
                                _RGB
                                _SEG
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     298
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     302
                                             22 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _SEG                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RGB                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Var                                       1     0      1     141
                                             27 COMRAM     1     0      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0      90
                                             26 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_n8                                        5     4      1     756
                                             30 COMRAM     5     4      1
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     172
                                             22 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     173
                                             26 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0      90
                                             26 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CaracterQbert                                        0     0      0     270
                         _ComandoLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _CaracterCara                                         0     0      0     270
                         _ComandoLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _ComandoLCD                                           1     1      0     195
                                             26 COMRAM     1     1      0
                           _BorraLCD
                      _CursorAInicio
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _CursorAInicio                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      60
                                             24 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      15
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  7     7      0    7166
                                             15 COMRAM     7     7      0
                        _borrarTexto
                        _escribirDig
                                _fin
                           _luzFondo
                                 _ok
                           _parEmerg
                             _reiCon
 ---------------------------------------------------------------------------------
 (7) _reiCon                                               0     0      0    1381
                         i2_BorraLCD
                    i2_DireccionaLCD
                    i2_EscribeLCD_n8
                   i2_MensajeLCD_Var
                              i2_RGB
                              i2_SEG
 ---------------------------------------------------------------------------------
 (7) _parEmerg                                             0     0      0     377
                         i2_BorraLCD
                   i2_MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (7) _ok                                                   2     2      0    3913
                                             13 COMRAM     2     2      0
                        _borrarTexto
                         i2_BorraLCD
                    i2_DireccionaLCD
                    i2_EscribeLCD_n8
                   i2_MensajeLCD_Var
                              i2_RGB
                              i2_SEG
                         i2_contador
 ---------------------------------------------------------------------------------
 (8) i2_contador                                           0     0      0    1981
                         i2_BorraLCD
                    i2_DireccionaLCD
                    i2_EscribeLCD_n8
                   i2_MensajeLCD_Var
                              i2_RGB
                              i2_SEG
                          i2___awdiv
                          i2___awmod
 ---------------------------------------------------------------------------------
 (9) i2___awmod                                            6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) i2___awdiv                                            8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) i2_EscribeLCD_n8                                      5     4      1     830
                                              8 COMRAM     5     4      1
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
                          i2___lbdiv
                          i2___lbmod
 ---------------------------------------------------------------------------------
 (9) i2___lbmod                                            4     3      1     172
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (9) i2___lbdiv                                            4     3      1     173
                                              4 COMRAM     4     3      1
                          i2___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (8) _borrarTexto                                          0     0      0     551
                         i2_BorraLCD
                    i2_DireccionaLCD
                   i2_MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (7) _luzFondo                                             0     0      0     161
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     161
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _fin                                                  0     0      0     551
                         i2_BorraLCD
                    i2_DireccionaLCD
                   i2_MensajeLCD_Var
                              i2_RGB
                              i2_SEG
 ---------------------------------------------------------------------------------
 (8) i2_SEG                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_RGB                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_MensajeLCD_Var                                     1     0      1     232
                                              5 COMRAM     1     0      1
                     i2_EscribeLCD_c
 ---------------------------------------------------------------------------------
 (8) i2_DireccionaLCD                                      1     1      0     174
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_BorraLCD                                           0     0      0     145
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) _escribirDig                                          1     1      0     232
                                              5 COMRAM     1     1      0
                     i2_EscribeLCD_c
 ---------------------------------------------------------------------------------
 (9) i2_EscribeLCD_c                                       1     1      0     174
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (10) i2_EnviaDato                                         2     2      0     116
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (10) i2_RetardoLCD                                        2     2      0      29
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) i2_HabilitaLCD                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _CaracterCara
     _ComandoLCD
       _BorraLCD
       _CursorAInicio
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _CaracterQbert
     _ComandoLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _MensajeLCD_Var
     _EscribeLCD_c
   _contador
     _BorraLCD
     _DireccionaLCD
     _EscribeLCD_n8
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
       ___lbdiv
         ___lbmod (ARG)
       ___lbmod
     _MensajeLCD_Var
     _RGB
     _SEG
     ___awdiv
     ___awmod

 _ISR (ROOT)
   _borrarTexto
     i2_BorraLCD
       i2_EnviaDato
         i2_HabilitaLCD
         i2_RetardoLCD
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_DireccionaLCD
       i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_MensajeLCD_Var
       i2_EscribeLCD_c
         i2_EnviaDato
         i2_HabilitaLCD
         i2_RetardoLCD
   _escribirDig
     i2_EscribeLCD_c
   _fin
     i2_BorraLCD
     i2_DireccionaLCD
     i2_MensajeLCD_Var
     i2_RGB
     i2_SEG
   _luzFondo
     ___wmul
   _ok
     _borrarTexto
     i2_BorraLCD
     i2_DireccionaLCD
     i2_EscribeLCD_n8
       i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
       i2___lbdiv
         i2___lbmod (ARG)
       i2___lbmod
     i2_MensajeLCD_Var
     i2_RGB
     i2_SEG
     i2_contador
       i2_BorraLCD
       i2_DireccionaLCD
       i2_EscribeLCD_n8
       i2_MensajeLCD_Var
       i2_RGB
       i2_SEG
       i2___awdiv
       i2___awmod
   _parEmerg
     i2_BorraLCD
     i2_MensajeLCD_Var
   _reiCon
     i2_BorraLCD
     i2_DireccionaLCD
     i2_EscribeLCD_n8
     i2_MensajeLCD_Var
     i2_RGB
     i2_SEG

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITBIGSFRh         114      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     37      66     70.2%
BITBIGSFRll         33      0       0      0.0%
BITBIGSFRlh         11      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      66      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Aug 17 21:38:59 2024

                       _a 002C                         _b 002A                         _d 002E  
                       _u 0030          i2DireccionaLCD@a 0005          i2EscribeLCD_n8@a 000D  
        i2EscribeLCD_n8@b 0009              ___awdiv@sign 001C                EnviaDato@a 001A  
                      _ok 09E4       ___wmul@multiplicand 0003              ?_borrarTexto 0001  
                     ?_ok 0001             _InicializaLCD 0F3C                       l264 0E78  
                     _GIE 7F97                       _RB4 7C0C                       _RB5 7C0D  
                     _RB6 7C0E                       _RB7 7C0F                       u600 17E0  
                     _RGB 10DC                       _ISR 0008                       _SEG 1882  
                     _fin 1490              ___awmod@sign 001C                       wreg 0FE8  
                    ??_ok 000E                      ?_RGB 0001                      ?_ISR 0001  
                    ?_SEG 0001          ??i2_EscribeLCD_c 0005              ?_escribirDig 0001  
                    l1110 13F8                      l1112 140A                      l1114 1414  
                    l1108 13E8                      l1118 141E                      l1144 155E  
                    l1440 16AE                      l2250 1616                      l2242 1600  
                    l1530 1130                      l1522 110C                      l1514 10EC  
                    l1436 169E                      l2500 1018                      l2238 15FA  
                    l2254 161E                      l2270 1734                      l2262 171C  
                    l1534 1142                      l1526 111E                      l1518 10FC  
                    l2510 1038                      l2424 0C12                      l1714 0FC2  
                    l2434 0C58                      l2418 0BF2                      l2450 0CBC  
                    l2514 1042                      l2530 12C2                      l2540 12E4  
                    l2454 16EE                      l2518 1050                      l2550 1306  
                    l2534 12CE                      ?_fin 0001                      l1674 0F4E  
                    l2458 1700                      l2554 1314                      l2546 12FC  
                    l2538 12DC                      l1684 0F6C                      l2492 0FFA  
                    l1694 0F8A                      l2486 0FEA                      l2498 1010  
                    l2842 0BA6                      STR_1 083C                      STR_2 0801  
                    STR_3 085E                      STR_4 0848                      STR_5 0813  
                    STR_6 0801                      STR_7 0801                      STR_8 085E  
                    STR_9 0848                      u1080 1604                      u1350 12E8  
                    _LATB 0F8A                      _LATD 0F8C                i2_contador 0E7A  
                    u1290 101C                      u1807 0BAE                      u1817 0BC0  
                    u1827 0BD0                      u1837 0BE2                      u1847 13EE  
                    u1857 13FA                      u1777 0B0E                      u1867 1402  
                    u1787 0B3A                      u1877 140C                      u1797 0B80  
                    u1887 1416                      _RBIE 7F93                      _RBIF 7F90  
                    u1897 186A                      _RBPU 7F8F                      _TMR0 0FD6  
          ??_EscribeLCD_c 001B                      _main 0AF0                      btemp 0043  
                    prodh 0FF4                      prodl 0FF3                      start 000E  
            ___param_bank 0000                     ??_RGB 0017                     ??_ISR 0010  
                   ??_SEG 0017                     ??_fin 0007           i2_DireccionaLCD 1812  
       ??i2_EscribeLCD_n8 000A            ?_InicializaLCD 0001                     ?_main 0001  
         __end_of___awdiv 105A           __end_of___lbdiv 1622                     STR_10 0822  
                   STR_11 0830                     STR_12 0853                     STR_13 085E  
                   STR_14 0848                     STR_15 0801           __end_of___awmod 131E  
              _ComandoLCD 168E             EscribeLCD_c@a 001B           __end_of___lbmod 173C  
                   _T0CON 0FD5           ___awdiv@divisor 0019                     _LATA1 7C49  
                   _LATA3 7C4B                     _LATA4 7C4C                     _LATA5 7C4D  
                   _LATD1 7C61                     _LATE0 7C68                     _LATE1 7C69  
                   _LATE2 7C6A                     i2l300 08AC                     i2l310 08FE  
                   i2l302 08BC                     i2l320 0950                     i2l312 090E  
                   i2l304 08CC                     i2l324 0970                     i2l316 0930  
                   i2l308 08EE                     i2l325 099A                     i2l326 0980  
                   i2l318 0940                     i2l239 168C                     i2l264 0F3A  
                   i2l328 098E           ___awdiv@counter 001B                     i2_RGB 1154  
                   i2_SEG 1888                     _PORTB 0F81                     _TRISA 0F92  
                   _TRISB 0F93                     _TRISD 0F95           ??_EscribeLCD_n8 0020  
                   _Tecla 003F               ?i2_BorraLCD 0001                     tablat 0FF5  
             _HabilitaLCD 1866                     ttemp5 0044                     ttemp6 0047  
                   ttemp7 004B                     status 0FD8                     wtemp8 0044  
           i2___lbmod@rem 0004           ___lbdiv@divisor 001B           ___lbdiv@counter 001D  
        __end_of_BorraLCD 1852           __initialization 15B2              __end_of_main 0BEC  
           _CursorAInicio 1892          i2_MensajeLCD_Var 1764                    ??_main 0024  
    __end_of_ConfiguraLCD 17E6              _CaracterCara 123E             __activetblptr 0002  
                  ?i2_RGB 0001                    ?i2_SEG 0001                    _ADCON1 0FC1  
          DireccionaLCD@a 001B            EscribeLCD_n8@a 0023            EscribeLCD_n8@b 001F  
        ___awdiv@dividend 0017               ?i2_contador 0001                    i2l2210 1656  
                  i2l1340 11A8                    i2l1332 1184                    i2l1324 1164  
                  i2l2206 164E                    i2l2302 0D3E                    i2l2160 146A  
                  i2l1344 11BA                    i2l1336 1196                    i2l1328 1174  
                  i2l2154 143E                    i2l2322 1766                    i2l2226 175C  
                  i2l2218 1744                    i2l2156 144E                    i2l2164 1474  
                  i2l2412 1382                    i2l2404 136A                    i2l2158 1460  
                  i2l2326 1778                    i2l2318 0DA2                    i2l2350 107C  
                  i2l2176 15A4                    i2l2344 106C                    i2l2408 1374  
                  i2l2194 1632                    i2l2292 0CF8                    i2l2356 1092  
                  i2l2372 10C4                    i2l2198 1638                    i2l2286 0CD8  
                  i2l2358 109A                    i2l2702 0A98                    i2l2640 1680  
                  i2l2376 10D2                    i2l2368 10BA                    i2l2392 133C  
                  i2l2396 134A                    i2l2388 1330                    i2l2398 1352  
                  i2l2726 0AEA                    i2l2658 1506                    i2l2906 091C  
                  i2l2694 0A70                    i2l2926 095E                    i2l2952 09B0  
                  i2l2886 08DA                    _TMR0IE 7F95                    _TMR0IF 7F92  
                  _TMR0ON 7EAF                    _TRISC1 7CA1                    _TRISE0 7CB0  
                  _TRISE1 7CB1                    _TRISE2 7CB2     __end_of_DireccionaLCD 1812  
              _RetardoLCD 13E4   __end_ofi2_DireccionaLCD 1828      EscribeLCD_n8@centena 0020  
          ?_CursorAInicio 0001          __end_of_contador 0E7A                    ___wmul 178C  
               ??___awdiv 001B                 ??___lbdiv 001C                 ??___awmod 001B  
               ??___lbmod 0018          __end_of_parEmerg 17CE           ??_InicializaLCD 001B  
                  _cuenta 0032                    _reiCon 138C                    clear_0 15D6  
        ___awdiv@quotient 001D           ___awmod@divisor 0019                    isa$std 0001  
         ___awmod@counter 001B      __end_of_EscribeLCD_c 17FC               ?_ComandoLCD 0001  
          i2___awdiv@sign 0006              ?i2_EnviaDato 0001          __end_of_luzFondo 168E  
            __pdataCOMRAM 0040         __end_ofi2___awdiv 10DC         __end_ofi2___lbdiv 165A  
       __end_ofi2___awmod 138C         __end_ofi2___lbmod 1764              __mediumconst 0000  
                  tblptrh 0FF7                    tblptrl 0FF6                    tblptru 0FF8  
          i2___awmod@sign 0006          ___lbdiv@dividend 001C           ___lbmod@divisor 0017  
   __end_ofi2_HabilitaLCD 1882                __accesstop 0060   __end_of__initialization 15DC  
         ___lbmod@counter 0019             ___rparam_used 0001             __end_ofi2_RGB 11CC  
           __end_ofi2_SEG 188E            __pcstackCOMRAM 0001         __end_of_EnviaDato 156C  
        ___lbdiv@quotient 001E                __end_of_ok 0AF0                   ??i2_RGB 0001  
                 ??i2_SEG 0001                 ?_BorraLCD 0001            _MensajeLCD_Var 16EC  
         MensajeLCD_Var@a 001C             _CaracterQbert 11CC               ?_RetardoLCD 0001  
             RetardoLCD@a 0018           i2_EscribeLCD_n8 0CD2           ??_CursorAInicio 0017  
        ?i2_DireccionaLCD 0001                _flagInicio 0038                   ?___wmul 0001  
                 ?_reiCon 0001              _flagEscribir 003C    __end_of_MensajeLCD_Var 1714  
            ??i2_BorraLCD 0005            _flagEmergencia 0036        escribirDig@lectura 0006  
              ??_BorraLCD 001B                 ?_contador 0001            ?_CaracterQbert 0001  
__end_ofi2_MensajeLCD_Var 178C                 ?_parEmerg 0001              ?_HabilitaLCD 0001  
            _ConfiguraLCD 17CE                   __Hparam 0000     i2EscribeLCD_n8@decena 000B  
                 __Lparam 0000                 ?_luzFondo 0001                   ___awdiv 0FD8  
                 ___lbdiv 15EA                   ___awmod 12B0                   ___lbmod 1714  
   i2EscribeLCD_n8@unidad 000C              __psmallconst 0800        __end_ofi2_BorraLCD 1866  
                 __pcinit 15B2                   _flagDig 003A                   __ramtop 0800  
                 _flagFin 0034                   _flagLuz 0040                   __ptext0 0AF0  
                 __ptext1 0DB8                   __ptext2 12B0                   __ptext3 0FD8  
                 __ptext4 1882                   __ptext5 10DC                   __ptext6 16EC  
                 __ptext7 17E6                   __ptext8 0BEC                   __ptext9 1714  
                 _cuenObj 0028                   _cuenMos 003E          ___awmod@dividend 0017  
         ?_MensajeLCD_Var 001C     __end_of_EscribeLCD_n8 0CD2            __pintcode_body 0868  
    end_of_initialization 15DC              ??i2_contador 000E                ??_contador 0024  
 __end_ofi2_EscribeLCD_n8 0DB8                ??_parEmerg 0007             __Lmediumconst 0000  
                 int_func 0868              _EscribeLCD_c 17E6                ??_luzFondo 0007  
                 postinc0 0FEE                 _PORTCbits 0F82              ??_ComandoLCD 001B  
      __end_ofi2_contador 0F3C          ___lbmod@dividend 0018           ??_CaracterQbert 001C  
         i2EscribeLCD_c@a 0005                 i2___awdiv 105A                 i2___lbdiv 1622  
               i2___awmod 131E                 i2___lbmod 173C               ___lbmod@rem 001A  
           ?i2_RetardoLCD 0001        i2___awdiv@dividend 0001        __end_of_ComandoLCD 16C0  
          __end_of___wmul 17B2             __pidataCOMRAM 188E             ??_borrarTexto 0007  
   __end_of_InicializaLCD 0FD8            __end_of_reiCon 13E4                 _EnviaDato 1526  
     start_initialization 15B2        i2___awdiv@quotient 0007               __end_of_RGB 1154  
             __end_of_ISR 09E4               __end_of_SEG 1888               __end_of_fin 14DC  
              ?i2___awdiv 0001                ?i2___lbdiv 0005             ??_escribirDig 0006  
              ?i2___awmod 0001                ?i2___lbmod 0001          ?i2_EscribeLCD_n8 0009  
          ??i2_RetardoLCD 0001              ??_RetardoLCD 0017        i2___lbdiv@dividend 0006  
     EscribeLCD_n8@decena 0021                  ??___wmul 0005       EscribeLCD_n8@unidad 0022  
                ??_reiCon 000E                ?_EnviaDato 0001               __pbssCOMRAM 0026  
      __end_of_RetardoLCD 143A        i2___lbdiv@quotient 0008       __end_of_borrarTexto 16EC  
       ?i2_MensajeLCD_Var 0006        ??i2_MensajeLCD_Var 0007             _DireccionaLCD 17FC  
     __end_of_escribirDig 1526            i2_EscribeLCD_c 1828     __end_of_CursorAInicio 1894  
               __pintcode 0008                  ?___awdiv 0017                  ?___lbdiv 001B  
                ?___awmod 0017                  ?___lbmod 0017          ??_MensajeLCD_Var 001D  
           ?_CaracterCara 0001               __smallconst 0800               ??i2___awdiv 0005  
             ??i2___lbdiv 0006               ??i2___awmod 0005               ??i2___lbmod 0002  
          ___wmul@product 0005             i2_HabilitaLCD 1874            ?_DireccionaLCD 0001  
  __end_ofi2_EscribeLCD_c 183E                  i2u104_40 163C                  i2u121_40 1356  
                i2u115_40 109E                  i2u151_40 0A22                  i2u152_40 0A30  
                i2u190_47 09A4                  i2u175_40 09C6                  i2u191_47 0A86  
                i2u176_45 09C8                  i2u192_47 1444                  i2u193_47 1450  
                i2u194_47 1458                  i2u195_47 1462                  i2u196_47 146C  
                i2u197_47 1878            ??_CaracterCara 001C               _borrarTexto 16C0  
       ___wmul@multiplier 0001             ??i2_EnviaDato 0003      __end_ofi2_RetardoLCD 1490  
             ??_EnviaDato 0019         i2___awdiv@divisor 0003         i2___awdiv@counter 0005  
                _BorraLCD 183E               _escribirDig 14DC        i2___awmod@dividend 0001  
          ?i2_HabilitaLCD 0001           ?i2_EscribeLCD_c 0001                  __Hrparam 0000  
       i2___lbdiv@divisor 0005    i2EscribeLCD_n8@centena 000A         i2___lbdiv@counter 0007  
                __Lrparam 0000              i2EnviaDato@a 0004             ConfiguraLCD@a 0017  
       ??i2_DireccionaLCD 0005                  __ptext10 15EA                  __ptext11 17FC  
                __ptext20 13E4                  __ptext12 0F3C                  __ptext21 1866  
                __ptext13 17CE                  __ptext30 173C                  __ptext14 11CC  
                __ptext31 1622                  __ptext23 138C                  __ptext15 123E  
                __ptext40 1852                  __ptext32 16C0                  __ptext24 17B2  
                __ptext16 168E                  __ptext41 14DC                  __ptext33 165A  
                __ptext25 09E4                  __ptext17 1892                  __ptext42 1828  
                __ptext34 178C                  __ptext26 0E7A                  __ptext18 183E  
                __ptext43 156C                  __ptext35 1490                  __ptext27 131E  
                __ptext19 1526                  __ptext44 143A                  __ptext36 1888  
                __ptext28 105A                  __ptext45 1874                  __ptext37 1154  
                __ptext29 0CD2                  __ptext38 1764                  __ptext39 1812  
     __end_ofi2_EnviaDato 15B2                  _contador 0DB8     __end_of_CaracterQbert 123E  
      i2___lbmod@dividend 0002           ??_DireccionaLCD 001B                  _parEmerg 17B2  
                _interfaz 0042                  _piezFalt 0026                  _luzFondo 165A  
                isa$xinst 0000                  int$flags 0043         i2___awmod@divisor 0003  
       i2___awmod@counter 0005             _EscribeLCD_n8 0BEC           ??i2_HabilitaLCD 0001  
                intlevel2 0000             ??_HabilitaLCD 0017               ComandoLCD@a 001B  
           ?_ConfiguraLCD 0001      __end_of_CaracterCara 12B0         i2___lbmod@divisor 0001  
       i2___lbmod@counter 0003             i2RetardoLCD@a 0002               i2_EnviaDato 156C  
          ?_EscribeLCD_n8 001F                i2_BorraLCD 1852            ??_ConfiguraLCD 0017  
           ?_EscribeLCD_c 0001         i2MensajeLCD_Var@a 0006              i2_RetardoLCD 143A  
     __end_of_HabilitaLCD 1874  
