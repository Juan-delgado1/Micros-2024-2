

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Aug 31 17:52:56 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=2
    16                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=2
    17                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=2
    48                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1,group=2
    60                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    76                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    78   000000                     
    79                           ; Generated 25/07/2024 GMT
    80                           ; 
    81                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution. Publication is not required when
    95                           ;        this file is used in an embedded application.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F4550 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113   000FE0                     bsr             equ	4064
   114   000FE9                     fsr0            equ	4073
   115   000FEA                     fsr0h           equ	4074
   116   000FE9                     fsr0l           equ	4073
   117   000FE1                     fsr1            equ	4065
   118   000FE2                     fsr1h           equ	4066
   119   000FE1                     fsr1l           equ	4065
   120   000FD9                     fsr2            equ	4057
   121   000FDA                     fsr2h           equ	4058
   122   000FD9                     fsr2l           equ	4057
   123   000FEF                     indf0           equ	4079
   124   000FE7                     indf1           equ	4071
   125   000FDF                     indf2           equ	4063
   126   000FF2                     intcon          equ	4082
   127   000000                     nvmcon          equ	0
   128   000FF9                     pcl             equ	4089
   129   000FFA                     pclath          equ	4090
   130   000FFB                     pclatu          equ	4091
   131   000FEB                     plusw0          equ	4075
   132   000FE3                     plusw1          equ	4067
   133   000FDB                     plusw2          equ	4059
   134   000FED                     postdec0        equ	4077
   135   000FE5                     postdec1        equ	4069
   136   000FDD                     postdec2        equ	4061
   137   000FEE                     postinc0        equ	4078
   138   000FE6                     postinc1        equ	4070
   139   000FDE                     postinc2        equ	4062
   140   000FEC                     preinc0         equ	4076
   141   000FE4                     preinc1         equ	4068
   142   000FDC                     preinc2         equ	4060
   143   000FF3                     prod            equ	4083
   144   000FF4                     prodh           equ	4084
   145   000FF3                     prodl           equ	4083
   146   000FD8                     status          equ	4056
   147   000FF5                     tablat          equ	4085
   148   000FF6                     tblptr          equ	4086
   149   000FF7                     tblptrh         equ	4087
   150   000FF6                     tblptrl         equ	4086
   151   000FF8                     tblptru         equ	4088
   152   000FFD                     tosl            equ	4093
   153   000FE8                     wreg            equ	4072
   154   000F62                     SPPDATA         equ	3938	;# 
   155   000F63                     SPPCFG          equ	3939	;# 
   156   000F64                     SPPEPS          equ	3940	;# 
   157   000F65                     SPPCON          equ	3941	;# 
   158   000F66                     UFRM            equ	3942	;# 
   159   000F66                     UFRML           equ	3942	;# 
   160   000F67                     UFRMH           equ	3943	;# 
   161   000F68                     UIR             equ	3944	;# 
   162   000F69                     UIE             equ	3945	;# 
   163   000F6A                     UEIR            equ	3946	;# 
   164   000F6B                     UEIE            equ	3947	;# 
   165   000F6C                     USTAT           equ	3948	;# 
   166   000F6D                     UCON            equ	3949	;# 
   167   000F6E                     UADDR           equ	3950	;# 
   168   000F6F                     UCFG            equ	3951	;# 
   169   000F70                     UEP0            equ	3952	;# 
   170   000F71                     UEP1            equ	3953	;# 
   171   000F72                     UEP2            equ	3954	;# 
   172   000F73                     UEP3            equ	3955	;# 
   173   000F74                     UEP4            equ	3956	;# 
   174   000F75                     UEP5            equ	3957	;# 
   175   000F76                     UEP6            equ	3958	;# 
   176   000F77                     UEP7            equ	3959	;# 
   177   000F78                     UEP8            equ	3960	;# 
   178   000F79                     UEP9            equ	3961	;# 
   179   000F7A                     UEP10           equ	3962	;# 
   180   000F7B                     UEP11           equ	3963	;# 
   181   000F7C                     UEP12           equ	3964	;# 
   182   000F7D                     UEP13           equ	3965	;# 
   183   000F7E                     UEP14           equ	3966	;# 
   184   000F7F                     UEP15           equ	3967	;# 
   185   000F80                     PORTA           equ	3968	;# 
   186   000F81                     PORTB           equ	3969	;# 
   187   000F82                     PORTC           equ	3970	;# 
   188   000F83                     PORTD           equ	3971	;# 
   189   000F84                     PORTE           equ	3972	;# 
   190   000F89                     LATA            equ	3977	;# 
   191   000F8A                     LATB            equ	3978	;# 
   192   000F8B                     LATC            equ	3979	;# 
   193   000F8C                     LATD            equ	3980	;# 
   194   000F8D                     LATE            equ	3981	;# 
   195   000F92                     TRISA           equ	3986	;# 
   196   000F92                     DDRA            equ	3986	;# 
   197   000F93                     TRISB           equ	3987	;# 
   198   000F93                     DDRB            equ	3987	;# 
   199   000F94                     TRISC           equ	3988	;# 
   200   000F94                     DDRC            equ	3988	;# 
   201   000F95                     TRISD           equ	3989	;# 
   202   000F95                     DDRD            equ	3989	;# 
   203   000F96                     TRISE           equ	3990	;# 
   204   000F96                     DDRE            equ	3990	;# 
   205   000F9B                     OSCTUNE         equ	3995	;# 
   206   000F9D                     PIE1            equ	3997	;# 
   207   000F9E                     PIR1            equ	3998	;# 
   208   000F9F                     IPR1            equ	3999	;# 
   209   000FA0                     PIE2            equ	4000	;# 
   210   000FA1                     PIR2            equ	4001	;# 
   211   000FA2                     IPR2            equ	4002	;# 
   212   000FA6                     EECON1          equ	4006	;# 
   213   000FA7                     EECON2          equ	4007	;# 
   214   000FA8                     EEDATA          equ	4008	;# 
   215   000FA9                     EEADR           equ	4009	;# 
   216   000FAB                     RCSTA           equ	4011	;# 
   217   000FAB                     RCSTA1          equ	4011	;# 
   218   000FAC                     TXSTA           equ	4012	;# 
   219   000FAC                     TXSTA1          equ	4012	;# 
   220   000FAD                     TXREG           equ	4013	;# 
   221   000FAD                     TXREG1          equ	4013	;# 
   222   000FAE                     RCREG           equ	4014	;# 
   223   000FAE                     RCREG1          equ	4014	;# 
   224   000FAF                     SPBRG           equ	4015	;# 
   225   000FAF                     SPBRG1          equ	4015	;# 
   226   000FB0                     SPBRGH          equ	4016	;# 
   227   000FB1                     T3CON           equ	4017	;# 
   228   000FB2                     TMR3            equ	4018	;# 
   229   000FB2                     TMR3L           equ	4018	;# 
   230   000FB3                     TMR3H           equ	4019	;# 
   231   000FB4                     CMCON           equ	4020	;# 
   232   000FB5                     CVRCON          equ	4021	;# 
   233   000FB6                     ECCP1AS         equ	4022	;# 
   234   000FB6                     CCP1AS          equ	4022	;# 
   235   000FB7                     ECCP1DEL        equ	4023	;# 
   236   000FB7                     CCP1DEL         equ	4023	;# 
   237   000FB8                     BAUDCON         equ	4024	;# 
   238   000FB8                     BAUDCTL         equ	4024	;# 
   239   000FBA                     CCP2CON         equ	4026	;# 
   240   000FBB                     CCPR2           equ	4027	;# 
   241   000FBB                     CCPR2L          equ	4027	;# 
   242   000FBC                     CCPR2H          equ	4028	;# 
   243   000FBD                     CCP1CON         equ	4029	;# 
   244   000FBD                     ECCP1CON        equ	4029	;# 
   245   000FBE                     CCPR1           equ	4030	;# 
   246   000FBE                     CCPR1L          equ	4030	;# 
   247   000FBF                     CCPR1H          equ	4031	;# 
   248   000FC0                     ADCON2          equ	4032	;# 
   249   000FC1                     ADCON1          equ	4033	;# 
   250   000FC2                     ADCON0          equ	4034	;# 
   251   000FC3                     ADRES           equ	4035	;# 
   252   000FC3                     ADRESL          equ	4035	;# 
   253   000FC4                     ADRESH          equ	4036	;# 
   254   000FC5                     SSPCON2         equ	4037	;# 
   255   000FC6                     SSPCON1         equ	4038	;# 
   256   000FC7                     SSPSTAT         equ	4039	;# 
   257   000FC8                     SSPADD          equ	4040	;# 
   258   000FC9                     SSPBUF          equ	4041	;# 
   259   000FCA                     T2CON           equ	4042	;# 
   260   000FCB                     PR2             equ	4043	;# 
   261   000FCB                     MEMCON          equ	4043	;# 
   262   000FCC                     TMR2            equ	4044	;# 
   263   000FCD                     T1CON           equ	4045	;# 
   264   000FCE                     TMR1            equ	4046	;# 
   265   000FCE                     TMR1L           equ	4046	;# 
   266   000FCF                     TMR1H           equ	4047	;# 
   267   000FD0                     RCON            equ	4048	;# 
   268   000FD1                     WDTCON          equ	4049	;# 
   269   000FD2                     HLVDCON         equ	4050	;# 
   270   000FD2                     LVDCON          equ	4050	;# 
   271   000FD3                     OSCCON          equ	4051	;# 
   272   000FD5                     T0CON           equ	4053	;# 
   273   000FD6                     TMR0            equ	4054	;# 
   274   000FD6                     TMR0L           equ	4054	;# 
   275   000FD7                     TMR0H           equ	4055	;# 
   276   000FD8                     STATUS          equ	4056	;# 
   277   000FD9                     FSR2            equ	4057	;# 
   278   000FD9                     FSR2L           equ	4057	;# 
   279   000FDA                     FSR2H           equ	4058	;# 
   280   000FDB                     PLUSW2          equ	4059	;# 
   281   000FDC                     PREINC2         equ	4060	;# 
   282   000FDD                     POSTDEC2        equ	4061	;# 
   283   000FDE                     POSTINC2        equ	4062	;# 
   284   000FDF                     INDF2           equ	4063	;# 
   285   000FE0                     BSR             equ	4064	;# 
   286   000FE1                     FSR1            equ	4065	;# 
   287   000FE1                     FSR1L           equ	4065	;# 
   288   000FE2                     FSR1H           equ	4066	;# 
   289   000FE3                     PLUSW1          equ	4067	;# 
   290   000FE4                     PREINC1         equ	4068	;# 
   291   000FE5                     POSTDEC1        equ	4069	;# 
   292   000FE6                     POSTINC1        equ	4070	;# 
   293   000FE7                     INDF1           equ	4071	;# 
   294   000FE8                     WREG            equ	4072	;# 
   295   000FE9                     FSR0            equ	4073	;# 
   296   000FE9                     FSR0L           equ	4073	;# 
   297   000FEA                     FSR0H           equ	4074	;# 
   298   000FEB                     PLUSW0          equ	4075	;# 
   299   000FEC                     PREINC0         equ	4076	;# 
   300   000FED                     POSTDEC0        equ	4077	;# 
   301   000FEE                     POSTINC0        equ	4078	;# 
   302   000FEF                     INDF0           equ	4079	;# 
   303   000FF0                     INTCON3         equ	4080	;# 
   304   000FF1                     INTCON2         equ	4081	;# 
   305   000FF2                     INTCON          equ	4082	;# 
   306   000FF3                     PROD            equ	4083	;# 
   307   000FF3                     PRODL           equ	4083	;# 
   308   000FF4                     PRODH           equ	4084	;# 
   309   000FF5                     TABLAT          equ	4085	;# 
   310   000FF6                     TBLPTR          equ	4086	;# 
   311   000FF6                     TBLPTRL         equ	4086	;# 
   312   000FF7                     TBLPTRH         equ	4087	;# 
   313   000FF8                     TBLPTRU         equ	4088	;# 
   314   000FF9                     PCLAT           equ	4089	;# 
   315   000FF9                     PC              equ	4089	;# 
   316   000FF9                     PCL             equ	4089	;# 
   317   000FFA                     PCLATH          equ	4090	;# 
   318   000FFB                     PCLATU          equ	4091	;# 
   319   000FFC                     STKPTR          equ	4092	;# 
   320   000FFD                     TOS             equ	4093	;# 
   321   000FFD                     TOSL            equ	4093	;# 
   322   000FFE                     TOSH            equ	4094	;# 
   323   000FFF                     TOSU            equ	4095	;# 
   324                           
   325                           	psect	idataCOMRAM
   326   002006                     __pidataCOMRAM:
   327                           	callstack 0
   328                           
   329                           ;initializer for _flagLuz
   330   002006  FFFF               	dw	65535
   331                           
   332                           ;initializer for _interfaz
   333   002008  08                 	db	8
   334                           
   335                           	psect	smallconst
   336   000800                     __psmallconst:
   337                           	callstack 0
   338   000800  00                 	db	0
   339   000801                     _dpowers:
   340                           	callstack 0
   341   000801  0001               	dw	1
   342   000803  000A               	dw	10
   343   000805  0064               	dw	100
   344   000807  03E8               	dw	1000
   345   000809  2710               	dw	10000
   346   00080B                     __end_of_dpowers:
   347                           	callstack 0
   348   007C0F                     _RB7            set	31759
   349   007C0E                     _RB6            set	31758
   350   007C0D                     _RB5            set	31757
   351   007C0C                     _RB4            set	31756
   352   007CF5                     _RCIF           set	31989
   353   007D61                     _TRMT           set	32097
   354   007C5A                     _LATC2          set	31834
   355   007C4B                     _LATA3          set	31819
   356   007C49                     _LATA1          set	31817
   357   007F97                     _GIE            set	32663
   358   007F93                     _RBIE           set	32659
   359   007F90                     _RBIF           set	32656
   360   007F8F                     _RBPU           set	32655
   361   007CB2                     _TRISE2         set	31922
   362   007CB1                     _TRISE1         set	31921
   363   007CB0                     _TRISE0         set	31920
   364   007CA1                     _TRISC1         set	31905
   365   007CA2                     _TRISC2         set	31906
   366   007C90                     _TRISA0         set	31888
   367   007C6A                     _LATE2          set	31850
   368   007C69                     _LATE1          set	31849
   369   007C68                     _LATE0          set	31848
   370   007C4D                     _LATA5          set	31821
   371   007C4C                     _LATA4          set	31820
   372   000F8A                     _LATB           set	3978
   373   000F81                     _PORTB          set	3969
   374   000FAE                     _RCREG          set	4014
   375   000FAD                     _TXREG          set	4013
   376   000FC3                     _ADRESL         set	4035
   377   000FC4                     _ADRESH         set	4036
   378   000FC2                     _ADCON0bits     set	4034
   379   000F82                     _PORTCbits      set	3970
   380   000F93                     _TRISB          set	3987
   381   000FAF                     _SPBRG          set	4015
   382   000FB8                     _BAUDCON        set	4024
   383   000FAB                     _RCSTA          set	4011
   384   000FAC                     _TXSTA          set	4012
   385   000FC2                     _ADCON0         set	4034
   386   000FC0                     _ADCON2         set	4032
   387   000FC1                     _ADCON1         set	4033
   388   000F92                     _TRISA          set	3986
   389   000F95                     _TRISD          set	3989
   390   000F8C                     _LATD           set	3980
   391   00080B                     STR_17:
   392   00080B  56                 	db	86	;'V'
   393   00080C  61                 	db	97	;'a'
   394   00080D  6C                 	db	108	;'l'
   395   00080E  6F                 	db	111	;'o'
   396   00080F  72                 	db	114	;'r'
   397   000810  20                 	db	32
   398   000811  64                 	db	100	;'d'
   399   000812  65                 	db	101	;'e'
   400   000813  20                 	db	32
   401   000814  41                 	db	65	;'A'
   402   000815  44                 	db	68	;'D'
   403   000816  43                 	db	67	;'C'
   404   000817  3A                 	db	58	;':'
   405   000818  20                 	db	32
   406   000819  25                 	db	37
   407   00081A  75                 	db	117	;'u'
   408   00081B  0D                 	db	13
   409   00081C  00                 	db	0
   410   00081D                     STR_2:
   411   00081D  50                 	db	80	;'P'
   412   00081E  69                 	db	105	;'i'
   413   00081F  65                 	db	101	;'e'
   414   000820  7A                 	db	122	;'z'
   415   000821  61                 	db	97	;'a'
   416   000822  73                 	db	115	;'s'
   417   000823  20                 	db	32
   418   000824  61                 	db	97	;'a'
   419   000825  20                 	db	32
   420   000826  43                 	db	67	;'C'
   421   000827  6F                 	db	111	;'o'
   422   000828  6E                 	db	110	;'n'
   423   000829  74                 	db	116	;'t'
   424   00082A  61                 	db	97	;'a'
   425   00082B  72                 	db	114	;'r'
   426   00082C  3A                 	db	58	;':'
   427   00082D  20                 	db	32
   428   00082E  00                 	db	0
   429   00082F                     STR_5:
   430   00082F  56                 	db	86	;'V'
   431   000830  61                 	db	97	;'a'
   432   000831  6C                 	db	108	;'l'
   433   000832  6F                 	db	111	;'o'
   434   000833  72                 	db	114	;'r'
   435   000834  20                 	db	32
   436   000835  49                 	db	73	;'I'
   437   000836  6E                 	db	110	;'n'
   438   000837  76                 	db	118	;'v'
   439   000838  61                 	db	97	;'a'
   440   000839  6C                 	db	108	;'l'
   441   00083A  69                 	db	105	;'i'
   442   00083B  64                 	db	100	;'d'
   443   00083C  6F                 	db	111	;'o'
   444   00083D  00                 	db	0
   445   00083E                     STR_10:
   446   00083E  46                 	db	70	;'F'
   447   00083F  69                 	db	105	;'i'
   448   000840  6E                 	db	110	;'n'
   449   000841  20                 	db	32
   450   000842  64                 	db	100	;'d'
   451   000843  65                 	db	101	;'e'
   452   000844  20                 	db	32
   453   000845  43                 	db	67	;'C'
   454   000846  75                 	db	117	;'u'
   455   000847  65                 	db	101	;'e'
   456   000848  6E                 	db	110	;'n'
   457   000849  74                 	db	116	;'t'
   458   00084A  61                 	db	97	;'a'
   459   00084B  00                 	db	0
   460   00084C                     STR_11:
   461   00084C  50                 	db	80	;'P'
   462   00084D  72                 	db	114	;'r'
   463   00084E  65                 	db	101	;'e'
   464   00084F  73                 	db	115	;'s'
   465   000850  69                 	db	105	;'i'
   466   000851  6F                 	db	111	;'o'
   467   000852  6E                 	db	110	;'n'
   468   000853  65                 	db	101	;'e'
   469   000854  20                 	db	32
   470   000855  4F                 	db	79	;'O'
   471   000856  4B                 	db	75	;'K'
   472   000857  00                 	db	0
   473   000858                     STR_1:
   474   000858  42                 	db	66	;'B'
   475   000859  69                 	db	105	;'i'
   476   00085A  65                 	db	101	;'e'
   477   00085B  6E                 	db	110	;'n'
   478   00085C  76                 	db	118	;'v'
   479   00085D  65                 	db	101	;'e'
   480   00085E  6E                 	db	110	;'n'
   481   00085F  69                 	db	105	;'i'
   482   000860  64                 	db	100	;'d'
   483   000861  6F                 	db	111	;'o'
   484   000862  73                 	db	115	;'s'
   485   000863  00                 	db	0
   486   000864                     STR_4:
   487   000864  4F                 	db	79	;'O'
   488   000865  62                 	db	98	;'b'
   489   000866  6A                 	db	106	;'j'
   490   000867  65                 	db	101	;'e'
   491   000868  74                 	db	116	;'t'
   492   000869  69                 	db	105	;'i'
   493   00086A  76                 	db	118	;'v'
   494   00086B  6F                 	db	111	;'o'
   495   00086C  3A                 	db	58	;':'
   496   00086D  20                 	db	32
   497   00086E  00                 	db	0
   498   00086F                     STR_12:
   499   00086F  45                 	db	69	;'E'
   500   000870  6D                 	db	109	;'m'
   501   000871  65                 	db	101	;'e'
   502   000872  72                 	db	114	;'r'
   503   000873  67                 	db	103	;'g'
   504   000874  65                 	db	101	;'e'
   505   000875  6E                 	db	110	;'n'
   506   000876  63                 	db	99	;'c'
   507   000877  69                 	db	105	;'i'
   508   000878  61                 	db	97	;'a'
   509   000879  00                 	db	0
   510   00087A                     STR_3:
   511   00087A  46                 	db	70	;'F'
   512   00087B  61                 	db	97	;'a'
   513   00087C  6C                 	db	108	;'l'
   514   00087D  74                 	db	116	;'t'
   515   00087E  61                 	db	97	;'a'
   516   00087F  6E                 	db	110	;'n'
   517   000880  3A                 	db	58	;':'
   518   000881  20                 	db	32
   519   000882  00                 	db	0
   520   00083E                     STR_15          equ	STR_10
   521   00084C                     STR_16          equ	STR_11
   522   00081D                     STR_6           equ	STR_2
   523   00081D                     STR_7           equ	STR_2
   524   000864                     STR_9           equ	STR_4
   525   000864                     STR_14          equ	STR_4
   526   00087A                     STR_8           equ	STR_3
   527   00087A                     STR_13          equ	STR_3
   528   000883  00                 	db	0	; dummy byte at the end
   529   000002                     __activetblptr  equ	2
   530                           
   531                           ; #config settings
   532                           
   533                           	psect	cinit
   534   001C4C                     __pcinit:
   535                           	callstack 0
   536   001C4C                     start_initialization:
   537                           	callstack 0
   538   001C4C                     __initialization:
   539                           	callstack 0
   540                           
   541                           ; Initialize objects allocated to COMRAM (3 bytes)
   542                           ; load TBLPTR registers with __pidataCOMRAM
   543   001C4C  0E06               	movlw	low __pidataCOMRAM
   544   001C4E  6EF6               	movwf	tblptrl,c
   545   001C50  0E20               	movlw	high __pidataCOMRAM
   546   001C52  6EF7               	movwf	tblptrh,c
   547   001C54  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   548   001C56  6EF8               	movwf	tblptru,c
   549   001C58  0009               	tblrd		*+	;fetch initializer
   550   001C5A  CFF5 F045          	movff	tablat,__pdataCOMRAM
   551   001C5E  0009               	tblrd		*+	;fetch initializer
   552   001C60  CFF5 F046          	movff	tablat,__pdataCOMRAM+1
   553   001C64  0009               	tblrd		*+	;fetch initializer
   554   001C66  CFF5 F047          	movff	tablat,__pdataCOMRAM+2
   555                           
   556                           ; Clear objects allocated to BANK0 (12 bytes)
   557   001C6A  EE00  F09B         	lfsr	0,__pbssBANK0
   558   001C6E  0E0C               	movlw	12
   559   001C70                     clear_0:
   560   001C70  6AEE               	clrf	postinc0,c
   561   001C72  06E8               	decf	wreg,f,c
   562   001C74  E1FD               	bnz	clear_0
   563                           
   564                           ; Clear objects allocated to COMRAM (20 bytes)
   565   001C76  EE00  F031         	lfsr	0,__pbssCOMRAM
   566   001C7A  0E14               	movlw	20
   567   001C7C                     clear_1:
   568   001C7C  6AEE               	clrf	postinc0,c
   569   001C7E  06E8               	decf	wreg,f,c
   570   001C80  E1FD               	bnz	clear_1
   571   001C82                     end_of_initialization:
   572                           	callstack 0
   573   001C82                     __end_of__initialization:
   574                           	callstack 0
   575   001C82  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   576   001C84  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   577   001C86  0E00               	movlw	low (__Lmediumconst shr (0+16))
   578   001C88  6EF8               	movwf	tblptru,c
   579   001C8A  0100               	movlb	0
   580   001C8C  EF42  F004         	goto	_main	;jump to C main() function
   581                           
   582                           	psect	bssCOMRAM
   583   000031                     __pbssCOMRAM:
   584                           	callstack 0
   585   000031                     _piezFalt:
   586                           	callstack 0
   587   000031                     	ds	2
   588   000033                     _cuenObj:
   589                           	callstack 0
   590   000033                     	ds	2
   591   000035                     _b:
   592                           	callstack 0
   593   000035                     	ds	2
   594   000037                     _a:
   595                           	callstack 0
   596   000037                     	ds	2
   597   000039                     _cuenta:
   598                           	callstack 0
   599   000039                     	ds	2
   600   00003B                     _flagEmergencia:
   601                           	callstack 0
   602   00003B                     	ds	2
   603   00003D                     _flagInicio:
   604                           	callstack 0
   605   00003D                     	ds	2
   606   00003F                     _flagDig:
   607                           	callstack 0
   608   00003F                     	ds	2
   609   000041                     _flagEscribir:
   610                           	callstack 0
   611   000041                     	ds	2
   612   000043                     _cuenMos:
   613                           	callstack 0
   614   000043                     	ds	1
   615   000044                     _Tecla:
   616                           	callstack 0
   617   000044                     	ds	1
   618                           
   619                           	psect	dataCOMRAM
   620   000045                     __pdataCOMRAM:
   621                           	callstack 0
   622   000045                     _flagLuz:
   623                           	callstack 0
   624   000045                     	ds	2
   625   000047                     _interfaz:
   626                           	callstack 0
   627   000047                     	ds	1
   628                           
   629                           	psect	bssBANK0
   630   00009B                     __pbssBANK0:
   631                           	callstack 0
   632   00009B                     _adcVal:
   633                           	callstack 0
   634   00009B                     	ds	2
   635   00009D                     _d:
   636                           	callstack 0
   637   00009D                     	ds	2
   638   00009F                     _u:
   639                           	callstack 0
   640   00009F                     	ds	2
   641   0000A1                     _flagADC:
   642                           	callstack 0
   643   0000A1                     	ds	2
   644   0000A3                     _flagCont:
   645                           	callstack 0
   646   0000A3                     	ds	2
   647   0000A5                     _flagFin:
   648                           	callstack 0
   649   0000A5                     	ds	2
   650                           
   651                           	psect	cstackBANK0
   652   000060                     __pcstackBANK0:
   653                           	callstack 0
   654   000060                     ?___ftdiv:
   655                           	callstack 0
   656   000060                     ___ftdiv@f1:
   657                           	callstack 0
   658   000060                     Transmitir@buffer:
   659                           	callstack 0
   660                           
   661                           ; 50 bytes @ 0x0
   662   000060                     	ds	3
   663   000063                     ___ftdiv@f2:
   664                           	callstack 0
   665                           
   666                           ; 3 bytes @ 0x3
   667   000063                     	ds	3
   668   000066                     ??___ftdiv:
   669                           
   670                           ; 1 bytes @ 0x6
   671   000066                     	ds	3
   672   000069                     ___ftdiv@cntr:
   673                           	callstack 0
   674                           
   675                           ; 1 bytes @ 0x9
   676   000069                     	ds	1
   677   00006A                     ___ftdiv@f3:
   678                           	callstack 0
   679                           
   680                           ; 3 bytes @ 0xA
   681   00006A                     	ds	3
   682   00006D                     ___ftdiv@exp:
   683                           	callstack 0
   684                           
   685                           ; 1 bytes @ 0xD
   686   00006D                     	ds	1
   687   00006E                     ___ftdiv@sign:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0xE
   691   00006E                     	ds	36
   692   000092                     Transmitir@i:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x32
   696   000092                     	ds	2
   697   000094                     ??_ADC:
   698                           
   699                           ; 1 bytes @ 0x34
   700   000094                     	ds	2
   701   000096                     ADC@voltaje:
   702                           	callstack 0
   703                           
   704                           ; 3 bytes @ 0x36
   705   000096                     	ds	3
   706   000099                     ??_main:
   707                           
   708                           ; 1 bytes @ 0x39
   709   000099                     	ds	2
   710                           
   711                           	psect	cstackCOMRAM
   712   000001                     __pcstackCOMRAM:
   713                           	callstack 0
   714   000001                     ?___wmul:
   715                           	callstack 0
   716   000001                     ?i2___awdiv:
   717                           	callstack 0
   718   000001                     ?i2___awmod:
   719                           	callstack 0
   720   000001                     i2___lbmod@divisor:
   721                           	callstack 0
   722   000001                     ___wmul@multiplier:
   723                           	callstack 0
   724   000001                     i2___awdiv@dividend:
   725                           	callstack 0
   726   000001                     i2___awmod@dividend:
   727                           	callstack 0
   728   000001                     ??i2_RetardoLCD:
   729   000001                     
   730                           ; 1 bytes @ 0x0
   731   000001                     	ds	1
   732   000002                     i2RetardoLCD@a:
   733                           	callstack 0
   734   000002                     i2___lbmod@dividend:
   735                           	callstack 0
   736   000002                     
   737                           ; 1 bytes @ 0x1
   738   000002                     	ds	1
   739   000003                     i2___lbmod@counter:
   740                           	callstack 0
   741   000003                     ___wmul@multiplicand:
   742                           	callstack 0
   743   000003                     i2___awdiv@divisor:
   744                           	callstack 0
   745   000003                     i2___awmod@divisor:
   746                           	callstack 0
   747   000003                     ??i2_EnviaDato:
   748                           
   749                           ; 1 bytes @ 0x2
   750   000003                     	ds	1
   751   000004                     i2EnviaDato@a:
   752                           	callstack 0
   753   000004                     i2___lbmod@rem:
   754                           	callstack 0
   755                           
   756                           ; 1 bytes @ 0x3
   757   000004                     	ds	1
   758   000005                     i2EscribeLCD_c@a:
   759                           	callstack 0
   760   000005                     i2DireccionaLCD@a:
   761                           	callstack 0
   762   000005                     i2___awdiv@counter:
   763                           	callstack 0
   764   000005                     i2___awmod@counter:
   765                           	callstack 0
   766   000005                     i2___lbdiv@divisor:
   767                           	callstack 0
   768   000005                     ___wmul@product:
   769                           	callstack 0
   770   000005                     
   771                           ; 1 bytes @ 0x4
   772   000005                     	ds	1
   773   000006                     escribirDig@lectura:
   774                           	callstack 0
   775   000006                     i2MensajeLCD_Var@a:
   776                           	callstack 0
   777   000006                     i2___awdiv@sign:
   778                           	callstack 0
   779   000006                     i2___awmod@sign:
   780                           	callstack 0
   781   000006                     i2___lbdiv@dividend:
   782                           	callstack 0
   783   000006                     
   784                           ; 1 bytes @ 0x5
   785   000006                     	ds	1
   786   000007                     i2___lbdiv@counter:
   787                           	callstack 0
   788   000007                     i2___awdiv@quotient:
   789                           	callstack 0
   790   000007                     
   791                           ; 1 bytes @ 0x6
   792   000007                     	ds	1
   793   000008                     i2___lbdiv@quotient:
   794                           	callstack 0
   795                           
   796                           ; 1 bytes @ 0x7
   797   000008                     	ds	1
   798   000009                     i2EscribeLCD_n8@b:
   799                           	callstack 0
   800   000009                     
   801                           ; 1 bytes @ 0x8
   802   000009                     	ds	1
   803   00000A                     i2EscribeLCD_n8@centena:
   804                           	callstack 0
   805   00000A                     
   806                           ; 1 bytes @ 0x9
   807   00000A                     	ds	1
   808   00000B                     i2EscribeLCD_n8@decena:
   809                           	callstack 0
   810                           
   811                           ; 1 bytes @ 0xA
   812   00000B                     	ds	1
   813   00000C                     i2EscribeLCD_n8@unidad:
   814                           	callstack 0
   815                           
   816                           ; 1 bytes @ 0xB
   817   00000C                     	ds	1
   818   00000D                     i2EscribeLCD_n8@a:
   819                           	callstack 0
   820                           
   821                           ; 1 bytes @ 0xC
   822   00000D                     	ds	1
   823   00000E                     ??_ok:
   824   00000E                     
   825                           ; 1 bytes @ 0xD
   826   00000E                     	ds	2
   827   000010                     ??_ISR:
   828                           
   829                           ; 1 bytes @ 0xF
   830   000010                     	ds	7
   831   000017                     ?___awdiv:
   832                           	callstack 0
   833   000017                     ?___awmod:
   834                           	callstack 0
   835   000017                     ?___lwdiv:
   836                           	callstack 0
   837   000017                     ?___ftpack:
   838                           	callstack 0
   839   000017                     ConfiguraLCD@a:
   840                           	callstack 0
   841   000017                     ___lbmod@divisor:
   842                           	callstack 0
   843   000017                     ___awdiv@dividend:
   844                           	callstack 0
   845   000017                     ___awmod@dividend:
   846                           	callstack 0
   847   000017                     ___lwdiv@dividend:
   848                           	callstack 0
   849   000017                     ___ftpack@arg:
   850                           	callstack 0
   851   000017                     ___ftge@ff1:
   852                           	callstack 0
   853   000017                     ??_RetardoLCD:
   854   000017                     
   855                           ; 1 bytes @ 0x16
   856   000017                     	ds	1
   857   000018                     RetardoLCD@a:
   858                           	callstack 0
   859   000018                     ___lbmod@dividend:
   860                           	callstack 0
   861   000018                     
   862                           ; 1 bytes @ 0x17
   863   000018                     	ds	1
   864   000019                     ___lbmod@counter:
   865                           	callstack 0
   866   000019                     ___awdiv@divisor:
   867                           	callstack 0
   868   000019                     ___awmod@divisor:
   869                           	callstack 0
   870   000019                     ___lwdiv@divisor:
   871                           	callstack 0
   872   000019                     ??_EnviaDato:
   873                           
   874                           ; 1 bytes @ 0x18
   875   000019                     	ds	1
   876   00001A                     EnviaDato@a:
   877                           	callstack 0
   878   00001A                     ___ftpack@exp:
   879                           	callstack 0
   880   00001A                     ___lbmod@rem:
   881                           	callstack 0
   882   00001A                     ___ftge@ff2:
   883                           	callstack 0
   884                           
   885                           ; 3 bytes @ 0x19
   886   00001A                     	ds	1
   887   00001B                     ComandoLCD@a:
   888                           	callstack 0
   889   00001B                     EscribeLCD_c@a:
   890                           	callstack 0
   891   00001B                     DireccionaLCD@a:
   892                           	callstack 0
   893   00001B                     ___awdiv@counter:
   894                           	callstack 0
   895   00001B                     ___awmod@counter:
   896                           	callstack 0
   897   00001B                     ___ftpack@sign:
   898                           	callstack 0
   899   00001B                     ___lbdiv@divisor:
   900                           	callstack 0
   901   00001B                     ___lwdiv@counter:
   902                           	callstack 0
   903   00001B                     
   904                           ; 1 bytes @ 0x1A
   905   00001B                     	ds	1
   906   00001C                     MensajeLCD_Var@a:
   907                           	callstack 0
   908   00001C                     ___awdiv@sign:
   909                           	callstack 0
   910   00001C                     ___awmod@sign:
   911                           	callstack 0
   912   00001C                     ___lbdiv@dividend:
   913                           	callstack 0
   914   00001C                     ___lwdiv@quotient:
   915                           	callstack 0
   916   00001C                     ??___ftpack:
   917   00001C                     
   918                           ; 1 bytes @ 0x1B
   919   00001C                     	ds	1
   920   00001D                     ___lbdiv@counter:
   921                           	callstack 0
   922   00001D                     ___awdiv@quotient:
   923                           	callstack 0
   924   00001D                     ??___ftge:
   925                           
   926                           ; 1 bytes @ 0x1C
   927   00001D                     	ds	1
   928   00001E                     ?___lwmod:
   929                           	callstack 0
   930   00001E                     ___lbdiv@quotient:
   931                           	callstack 0
   932   00001E                     ___lwmod@dividend:
   933                           	callstack 0
   934                           
   935                           ; 2 bytes @ 0x1D
   936   00001E                     	ds	1
   937   00001F                     ?___lwtoft:
   938                           	callstack 0
   939   00001F                     EscribeLCD_n8@b:
   940                           	callstack 0
   941   00001F                     ___lwtoft@c:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x1E
   945   00001F                     	ds	1
   946   000020                     EscribeLCD_n8@centena:
   947                           	callstack 0
   948   000020                     ___lwmod@divisor:
   949                           	callstack 0
   950   000020                     
   951                           ; 1 bytes @ 0x1F
   952   000020                     	ds	1
   953   000021                     EscribeLCD_n8@decena:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x20
   957   000021                     	ds	1
   958   000022                     ?___ftmul:
   959                           	callstack 0
   960   000022                     EscribeLCD_n8@unidad:
   961                           	callstack 0
   962   000022                     ___lwmod@counter:
   963                           	callstack 0
   964   000022                     ___ftmul@f1:
   965                           	callstack 0
   966   000022                     
   967                           ; 1 bytes @ 0x21
   968   000022                     	ds	1
   969   000023                     ?_sprintf:
   970                           	callstack 0
   971   000023                     EscribeLCD_n8@a:
   972                           	callstack 0
   973   000023                     sprintf@sp:
   974                           	callstack 0
   975                           
   976                           ; 1 bytes @ 0x22
   977   000023                     	ds	1
   978   000024                     RecibirComando@comando:
   979                           	callstack 0
   980   000024                     sprintf@f:
   981                           	callstack 0
   982   000024                     
   983                           ; 1 bytes @ 0x23
   984   000024                     	ds	1
   985   000025                     ___ftmul@f2:
   986                           	callstack 0
   987                           
   988                           ; 3 bytes @ 0x24
   989   000025                     	ds	2
   990   000027                     ??_sprintf:
   991                           
   992                           ; 1 bytes @ 0x26
   993   000027                     	ds	1
   994   000028                     sprintf@flag:
   995                           	callstack 0
   996   000028                     ??___ftmul:
   997                           
   998                           ; 1 bytes @ 0x27
   999   000028                     	ds	1
  1000   000029                     sprintf@ap:
  1001                           	callstack 0
  1002                           
  1003                           ; 1 bytes @ 0x28
  1004   000029                     	ds	1
  1005   00002A                     sprintf@val:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x29
  1009   00002A                     	ds	1
  1010   00002B                     ___ftmul@exp:
  1011                           	callstack 0
  1012                           
  1013                           ; 1 bytes @ 0x2A
  1014   00002B                     	ds	1
  1015   00002C                     sprintf@prec:
  1016                           	callstack 0
  1017   00002C                     ___ftmul@f3_as_product:
  1018                           	callstack 0
  1019                           
  1020                           ; 3 bytes @ 0x2B
  1021   00002C                     	ds	1
  1022   00002D                     sprintf@c:
  1023                           	callstack 0
  1024                           
  1025                           ; 1 bytes @ 0x2C
  1026   00002D                     	ds	1
  1027   00002E                     Transmitir@adcVal:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x2D
  1031   00002E                     	ds	1
  1032   00002F                     ___ftmul@cntr:
  1033                           	callstack 0
  1034                           
  1035                           ; 1 bytes @ 0x2E
  1036   00002F                     	ds	1
  1037   000030                     ___ftmul@sign:
  1038                           	callstack 0
  1039   000030                     
  1040                           ; 1 bytes @ 0x2F
  1041   000030                     	ds	1
  1042                           
  1043 ;;
  1044 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1045 ;;
  1046 ;; *************** function _main *****************
  1047 ;; Defined at:
  1048 ;;		line 51 in file "Lab5.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;		None
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1062 ;;      Params:         0       0       0       0       0       0       0       0       0
  1063 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1064 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1065 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1066 ;;Total ram usage:        2 bytes
  1067 ;; Hardware stack levels required when called: 13
  1068 ;; This function calls:
  1069 ;;		_ADC
  1070 ;;		_BorraLCD
  1071 ;;		_CaracterCara
  1072 ;;		_CaracterQbert
  1073 ;;		_ConfiguraLCD
  1074 ;;		_DireccionaLCD
  1075 ;;		_EscribeLCD_c
  1076 ;;		_InicializaLCD
  1077 ;;		_MensajeLCD_Var
  1078 ;;		_RecibirComando
  1079 ;;		_contador
  1080 ;; This function is called by:
  1081 ;;		Startup code after reset
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           	psect	text0
  1086   000884                     __ptext0:
  1087                           	callstack 0
  1088   000884                     _main:
  1089                           	callstack 18
  1090                           
  1091                           ;Lab5.c: 52: TRISD=0;
  1092                           
  1093                           ;incstack = 0
  1094   000884  6A95               	clrf	149,c	;volatile
  1095                           
  1096                           ;Lab5.c: 53: TRISA=0;
  1097   000886  6A92               	clrf	146,c	;volatile
  1098                           
  1099                           ;Lab5.c: 56: LATE0 = 0;
  1100   000888  908D               	bcf	3981,0,c	;volatile
  1101                           
  1102                           ;Lab5.c: 57: LATE1 = 0;
  1103   00088A  928D               	bcf	3981,1,c	;volatile
  1104                           
  1105                           ;Lab5.c: 58: LATE2 = 0;
  1106   00088C  948D               	bcf	3981,2,c	;volatile
  1107                           
  1108                           ;Lab5.c: 60: TRISA0=1;
  1109   00088E  8092               	bsf	3986,0,c	;volatile
  1110                           
  1111                           ;Lab5.c: 61: TRISC2=0;
  1112   000890  9494               	bcf	3988,2,c	;volatile
  1113                           
  1114                           ;Lab5.c: 64: ADCON1 = 0x0E;
  1115   000892  0E0E               	movlw	14
  1116   000894  6EC1               	movwf	193,c	;volatile
  1117                           
  1118                           ;Lab5.c: 65: ADCON2 = 0xA9;
  1119   000896  0EA9               	movlw	169
  1120   000898  6EC0               	movwf	192,c	;volatile
  1121                           
  1122                           ;Lab5.c: 66: ADCON0 = 0x01;
  1123   00089A  0E01               	movlw	1
  1124   00089C  6EC2               	movwf	194,c	;volatile
  1125                           
  1126                           ;Lab5.c: 69: TXSTA=0b00100100;
  1127   00089E  0E24               	movlw	36
  1128   0008A0  6EAC               	movwf	172,c	;volatile
  1129                           
  1130                           ;Lab5.c: 70: RCSTA=0b10010000;
  1131   0008A2  0E90               	movlw	144
  1132   0008A4  6EAB               	movwf	171,c	;volatile
  1133                           
  1134                           ;Lab5.c: 71: BAUDCON=0b00001000;
  1135   0008A6  0E08               	movlw	8
  1136   0008A8  6EB8               	movwf	184,c	;volatile
  1137                           
  1138                           ;Lab5.c: 72: SPBRG=25;
  1139   0008AA  0E19               	movlw	25
  1140   0008AC  6EAF               	movwf	175,c	;volatile
  1141                           
  1142                           ;Lab5.c: 74: TRISC1=1;
  1143   0008AE  8294               	bsf	3988,1,c	;volatile
  1144                           
  1145                           ;Lab5.c: 77: TRISE0 = 0;
  1146   0008B0  9096               	bcf	3990,0,c	;volatile
  1147                           
  1148                           ;Lab5.c: 78: TRISE1 = 0;
  1149   0008B2  9296               	bcf	3990,1,c	;volatile
  1150                           
  1151                           ;Lab5.c: 79: TRISE2 = 0;
  1152   0008B4  9496               	bcf	3990,2,c	;volatile
  1153                           
  1154                           ;Lab5.c: 81: LATD=0;
  1155   0008B6  6A8C               	clrf	140,c	;volatile
  1156                           
  1157                           ;Lab5.c: 83: TRISB=0b11110000;
  1158   0008B8  0EF0               	movlw	240
  1159   0008BA  6E93               	movwf	147,c	;volatile
  1160                           
  1161                           ;Lab5.c: 84: RBPU=0;
  1162   0008BC  9EF1               	bcf	4081,7,c	;volatile
  1163                           
  1164                           ;Lab5.c: 85: _delay((unsigned long)((100)*(1000000/4000.0)));
  1165   0008BE  0E21               	movlw	33
  1166   0008C0  0100               	movlb	0	; () banked
  1167   0008C2  6F99               	movwf	??_main& (0+255),b
  1168   0008C4  0E76               	movlw	118
  1169   0008C6                     u3217:
  1170   0008C6  2EE8               	decfsz	wreg,f,c
  1171   0008C8  D7FE               	bra	u3217
  1172   0008CA  2F99               	decfsz	??_main& (0+255),f,b
  1173   0008CC  D7FC               	bra	u3217
  1174   0008CE  0000               	nop	
  1175                           
  1176                           ;Lab5.c: 88: RBIF=0;
  1177   0008D0  90F2               	bcf	4082,0,c	;volatile
  1178                           
  1179                           ;Lab5.c: 89: RBIE=1;
  1180   0008D2  86F2               	bsf	4082,3,c	;volatile
  1181                           
  1182                           ;Lab5.c: 90: GIE=1;
  1183   0008D4  8EF2               	bsf	4082,7,c	;volatile
  1184                           
  1185                           ;Lab5.c: 93: _delay((unsigned long)((1000)*(1000000/4000.0)));
  1186   0008D6  0E02               	movlw	2
  1187   0008D8  0100               	movlb	0	; () banked
  1188   0008DA  6F9A               	movwf	(??_main+1)& (0+255),b
  1189   0008DC  0E45               	movlw	69
  1190   0008DE  6F99               	movwf	??_main& (0+255),b
  1191   0008E0  0EA9               	movlw	169
  1192   0008E2                     u3227:
  1193   0008E2  2EE8               	decfsz	wreg,f,c
  1194   0008E4  D7FE               	bra	u3227
  1195   0008E6  2F99               	decfsz	??_main& (0+255),f,b
  1196   0008E8  D7FC               	bra	u3227
  1197   0008EA  2F9A               	decfsz	(??_main+1)& (0+255),f,b
  1198   0008EC  D7FA               	bra	u3227
  1199   0008EE  D000               	nop2	
  1200                           
  1201                           ;Lab5.c: 94: ConfiguraLCD(4);
  1202   0008F0  0E04               	movlw	4
  1203   0008F2  ECA3  F00F         	call	_ConfiguraLCD
  1204                           
  1205                           ;Lab5.c: 95: InicializaLCD();
  1206   0008F6  EC08  F00A         	call	_InicializaLCD	;wreg free
  1207                           
  1208                           ;Lab5.c: 97: if(flagEmergencia == 0){
  1209   0008FA  503B               	movf	_flagEmergencia^0,w,c
  1210   0008FC  103C               	iorwf	(_flagEmergencia+1)^0,w,c
  1211   0008FE  A4D8               	btfss	status,2,c
  1212   000900  EF07  F000         	goto	start
  1213                           
  1214                           ;Lab5.c: 99: MensajeLCD_Var("Bienvenidos");
  1215   000904  0E58               	movlw	low STR_1
  1216   000906  6E1C               	movwf	MensajeLCD_Var@a^0,c
  1217   000908  EC24  F00F         	call	_MensajeLCD_Var	;wreg free
  1218                           
  1219                           ;Lab5.c: 100: CaracterCara();
  1220   00090C  EC04  F00C         	call	_CaracterCara	;wreg free
  1221                           
  1222                           ;Lab5.c: 101: EscribeLCD_c(1);
  1223   000910  0E01               	movlw	1
  1224   000912  ECBA  F00F         	call	_EscribeLCD_c
  1225                           
  1226                           ;Lab5.c: 102: CaracterQbert();
  1227   000916  ECCB  F00B         	call	_CaracterQbert	;wreg free
  1228                           
  1229                           ;Lab5.c: 103: EscribeLCD_c(2);
  1230   00091A  0E02               	movlw	2
  1231   00091C  ECBA  F00F         	call	_EscribeLCD_c
  1232                           
  1233                           ;Lab5.c: 104: _delay((unsigned long)((5000)*(1000000/4000.0)));
  1234   000920  0E07               	movlw	7
  1235   000922  0100               	movlb	0	; () banked
  1236   000924  6F9A               	movwf	(??_main+1)& (0+255),b
  1237   000926  0E58               	movlw	88
  1238   000928  6F99               	movwf	??_main& (0+255),b
  1239   00092A  0E59               	movlw	89
  1240   00092C                     u3237:
  1241   00092C  2EE8               	decfsz	wreg,f,c
  1242   00092E  D7FE               	bra	u3237
  1243   000930  2F99               	decfsz	??_main& (0+255),f,b
  1244   000932  D7FC               	bra	u3237
  1245   000934  2F9A               	decfsz	(??_main+1)& (0+255),f,b
  1246   000936  D7FA               	bra	u3237
  1247   000938  D000               	nop2	
  1248                           
  1249                           ;Lab5.c: 105: BorraLCD();
  1250   00093A  ECDB  F00F         	call	_BorraLCD	;wreg free
  1251                           
  1252                           ;Lab5.c: 108: MensajeLCD_Var("Piezas a Contar: ");
  1253   00093E  0E1D               	movlw	low STR_2
  1254   000940  6E1C               	movwf	MensajeLCD_Var@a^0,c
  1255   000942  EC24  F00F         	call	_MensajeLCD_Var	;wreg free
  1256                           
  1257                           ;Lab5.c: 109: DireccionaLCD(0xC0);
  1258   000946  0EC0               	movlw	192
  1259   000948  ECAF  F00F         	call	_DireccionaLCD
  1260                           
  1261                           ;Lab5.c: 110: flagEscribir=1;
  1262   00094C  0E00               	movlw	0
  1263   00094E  6E42               	movwf	(_flagEscribir+1)^0,c
  1264   000950  0E01               	movlw	1
  1265   000952  6E41               	movwf	_flagEscribir^0,c
  1266   000954                     l4221:
  1267                           
  1268                           ;Lab5.c: 112: LATA1=1;
  1269   000954  8289               	bsf	3977,1,c	;volatile
  1270                           
  1271                           ;Lab5.c: 113: ADC();
  1272   000956  EC58  F009         	call	_ADC	;wreg free
  1273                           
  1274                           ;Lab5.c: 114: RecibirComando();
  1275   00095A  EC74  F00C         	call	_RecibirComando	;wreg free
  1276                           
  1277                           ;Lab5.c: 115: _delay((unsigned long)((125)*(1000000/4000.0)));
  1278   00095E  0E29               	movlw	41
  1279   000960  0100               	movlb	0	; () banked
  1280   000962  6F99               	movwf	??_main& (0+255),b
  1281   000964  0E94               	movlw	148
  1282   000966                     u3247:
  1283   000966  2EE8               	decfsz	wreg,f,c
  1284   000968  D7FE               	bra	u3247
  1285   00096A  2F99               	decfsz	??_main& (0+255),f,b
  1286   00096C  D7FC               	bra	u3247
  1287   00096E  0000               	nop	
  1288                           
  1289                           ;Lab5.c: 116: contador();
  1290   000970  EC88  F008         	call	_contador	;wreg free
  1291                           
  1292                           ;Lab5.c: 117: _delay((unsigned long)((125)*(1000000/4000.0)));
  1293   000974  0E29               	movlw	41
  1294   000976  0100               	movlb	0	; () banked
  1295   000978  6F99               	movwf	??_main& (0+255),b
  1296   00097A  0E94               	movlw	148
  1297   00097C                     u3257:
  1298   00097C  2EE8               	decfsz	wreg,f,c
  1299   00097E  D7FE               	bra	u3257
  1300   000980  2F99               	decfsz	??_main& (0+255),f,b
  1301   000982  D7FC               	bra	u3257
  1302   000984  0000               	nop	
  1303                           
  1304                           ;Lab5.c: 118: contador();
  1305   000986  EC88  F008         	call	_contador	;wreg free
  1306                           
  1307                           ;Lab5.c: 119: _delay((unsigned long)((125)*(1000000/4000.0)));
  1308   00098A  0E29               	movlw	41
  1309   00098C  0100               	movlb	0	; () banked
  1310   00098E  6F99               	movwf	??_main& (0+255),b
  1311   000990  0E94               	movlw	148
  1312   000992                     u3267:
  1313   000992  2EE8               	decfsz	wreg,f,c
  1314   000994  D7FE               	bra	u3267
  1315   000996  2F99               	decfsz	??_main& (0+255),f,b
  1316   000998  D7FC               	bra	u3267
  1317   00099A  0000               	nop	
  1318                           
  1319                           ;Lab5.c: 120: contador();
  1320   00099C  EC88  F008         	call	_contador	;wreg free
  1321                           
  1322                           ;Lab5.c: 121: _delay((unsigned long)((125)*(1000000/4000.0)));
  1323   0009A0  0E29               	movlw	41
  1324   0009A2  0100               	movlb	0	; () banked
  1325   0009A4  6F99               	movwf	??_main& (0+255),b
  1326   0009A6  0E94               	movlw	148
  1327   0009A8                     u3277:
  1328   0009A8  2EE8               	decfsz	wreg,f,c
  1329   0009AA  D7FE               	bra	u3277
  1330   0009AC  2F99               	decfsz	??_main& (0+255),f,b
  1331   0009AE  D7FC               	bra	u3277
  1332   0009B0  0000               	nop	
  1333                           
  1334                           ;Lab5.c: 122: LATA1=0;
  1335   0009B2  9289               	bcf	3977,1,c	;volatile
  1336                           
  1337                           ;Lab5.c: 123: _delay((unsigned long)((125)*(1000000/4000.0)));
  1338   0009B4  0E29               	movlw	41
  1339   0009B6  0100               	movlb	0	; () banked
  1340   0009B8  6F99               	movwf	??_main& (0+255),b
  1341   0009BA  0E94               	movlw	148
  1342   0009BC                     u3287:
  1343   0009BC  2EE8               	decfsz	wreg,f,c
  1344   0009BE  D7FE               	bra	u3287
  1345   0009C0  2F99               	decfsz	??_main& (0+255),f,b
  1346   0009C2  D7FC               	bra	u3287
  1347   0009C4  0000               	nop	
  1348                           
  1349                           ;Lab5.c: 124: contador();
  1350   0009C6  EC88  F008         	call	_contador	;wreg free
  1351                           
  1352                           ;Lab5.c: 125: _delay((unsigned long)((125)*(1000000/4000.0)));
  1353   0009CA  0E29               	movlw	41
  1354   0009CC  0100               	movlb	0	; () banked
  1355   0009CE  6F99               	movwf	??_main& (0+255),b
  1356   0009D0  0E94               	movlw	148
  1357   0009D2                     u3297:
  1358   0009D2  2EE8               	decfsz	wreg,f,c
  1359   0009D4  D7FE               	bra	u3297
  1360   0009D6  2F99               	decfsz	??_main& (0+255),f,b
  1361   0009D8  D7FC               	bra	u3297
  1362   0009DA  0000               	nop	
  1363                           
  1364                           ;Lab5.c: 126: contador();
  1365   0009DC  EC88  F008         	call	_contador	;wreg free
  1366                           
  1367                           ;Lab5.c: 127: _delay((unsigned long)((125)*(1000000/4000.0)));
  1368   0009E0  0E29               	movlw	41
  1369   0009E2  0100               	movlb	0	; () banked
  1370   0009E4  6F99               	movwf	??_main& (0+255),b
  1371   0009E6  0E94               	movlw	148
  1372   0009E8                     u3307:
  1373   0009E8  2EE8               	decfsz	wreg,f,c
  1374   0009EA  D7FE               	bra	u3307
  1375   0009EC  2F99               	decfsz	??_main& (0+255),f,b
  1376   0009EE  D7FC               	bra	u3307
  1377   0009F0  0000               	nop	
  1378                           
  1379                           ;Lab5.c: 128: contador();
  1380   0009F2  EC88  F008         	call	_contador	;wreg free
  1381                           
  1382                           ;Lab5.c: 129: _delay((unsigned long)((125)*(1000000/4000.0)));
  1383   0009F6  0E29               	movlw	41
  1384   0009F8  0100               	movlb	0	; () banked
  1385   0009FA  6F99               	movwf	??_main& (0+255),b
  1386   0009FC  0E94               	movlw	148
  1387   0009FE                     u3317:
  1388   0009FE  2EE8               	decfsz	wreg,f,c
  1389   000A00  D7FE               	bra	u3317
  1390   000A02  2F99               	decfsz	??_main& (0+255),f,b
  1391   000A04  D7FC               	bra	u3317
  1392   000A06  0000               	nop	
  1393   000A08  D7A5               	goto	l4221
  1394   000A0A                     __end_of_main:
  1395                           	callstack 0
  1396                           
  1397 ;; *************** function _contador *****************
  1398 ;; Defined at:
  1399 ;;		line 213 in file "Lab5.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;		None
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;		None
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  1    wreg      void 
  1406 ;; Registers used:
  1407 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1413 ;;      Params:         0       0       0       0       0       0       0       0       0
  1414 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1415 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1416 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1417 ;;Total ram usage:        0 bytes
  1418 ;; Hardware stack levels used: 1
  1419 ;; Hardware stack levels required when called: 11
  1420 ;; This function calls:
  1421 ;;		_BorraLCD
  1422 ;;		_DireccionaLCD
  1423 ;;		_EscribeLCD_n8
  1424 ;;		_MensajeLCD_Var
  1425 ;;		_RGB
  1426 ;;		_SEG
  1427 ;;		___awdiv
  1428 ;;		___awmod
  1429 ;; This function is called by:
  1430 ;;		_main
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text1
  1435   001110                     __ptext1:
  1436                           	callstack 0
  1437   001110                     _contador:
  1438                           	callstack 19
  1439                           
  1440                           ;Lab5.c: 214: if(flagCont==1){
  1441                           
  1442                           ;incstack = 0
  1443   001110  0100               	movlb	0	; () banked
  1444   001112  05A3               	decf	_flagCont& (0+255),w,b
  1445   001114  11A4               	iorwf	(_flagCont+1)& (0+255),w,b
  1446   001116  A4D8               	btfss	status,2,c
  1447   001118  0012               	return	
  1448                           
  1449                           ; BSR set to: 0
  1450                           ;Lab5.c: 215: if(PORTCbits.RC1==0){
  1451   00111A  B282               	btfsc	130,1,c	;volatile
  1452   00111C  0012               	return	
  1453                           
  1454                           ; BSR set to: 0
  1455                           ;Lab5.c: 216: flagInicio = 1;
  1456   00111E  0E00               	movlw	0
  1457   001120  6E3E               	movwf	(_flagInicio+1)^0,c
  1458   001122  0E01               	movlw	1
  1459   001124  6E3D               	movwf	_flagInicio^0,c
  1460                           
  1461                           ; BSR set to: 0
  1462                           ;Lab5.c: 217: if(flagEmergencia == 0){
  1463   001126  503B               	movf	_flagEmergencia^0,w,c
  1464   001128  103C               	iorwf	(_flagEmergencia+1)^0,w,c
  1465   00112A  A4D8               	btfss	status,2,c
  1466   00112C  0012               	return	
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;Lab5.c: 218: cuenta+=1;
  1470   00112E  4A39               	infsnz	_cuenta^0,f,c
  1471   001130  2A3A               	incf	(_cuenta+1)^0,f,c
  1472                           
  1473                           ;Lab5.c: 219: piezFalt-=1;
  1474   001132  0631               	decf	_piezFalt^0,f,c
  1475   001134  A0D8               	btfss	status,0,c
  1476   001136  0632               	decf	(_piezFalt+1)^0,f,c
  1477                           
  1478                           ; BSR set to: 0
  1479                           ;Lab5.c: 220: a = cuenta % 10;
  1480   001138  C039  F017         	movff	_cuenta,___awmod@dividend
  1481   00113C  C03A  F018         	movff	_cuenta+1,___awmod@dividend+1
  1482   001140  0E00               	movlw	0
  1483   001142  6E1A               	movwf	(___awmod@divisor+1)^0,c
  1484   001144  0E0A               	movlw	10
  1485   001146  6E19               	movwf	___awmod@divisor^0,c
  1486   001148  EC3D  F00C         	call	___awmod	;wreg free
  1487   00114C  C017  F037         	movff	?___awmod,_a
  1488   001150  C018  F038         	movff	?___awmod+1,_a+1
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;Lab5.c: 221: b = (cuenta - a)/10;
  1492   001154  5037               	movf	_a^0,w,c
  1493   001156  5C39               	subwf	_cuenta^0,w,c
  1494   001158  6E17               	movwf	___awdiv@dividend^0,c
  1495   00115A  5038               	movf	(_a+1)^0,w,c
  1496   00115C  583A               	subwfb	(_cuenta+1)^0,w,c
  1497   00115E  6E18               	movwf	(___awdiv@dividend+1)^0,c
  1498   001160  0E00               	movlw	0
  1499   001162  6E1A               	movwf	(___awdiv@divisor+1)^0,c
  1500   001164  0E0A               	movlw	10
  1501   001166  6E19               	movwf	___awdiv@divisor^0,c
  1502   001168  EC56  F00A         	call	___awdiv	;wreg free
  1503   00116C  C017  F035         	movff	?___awdiv,_b
  1504   001170  C018  F036         	movff	?___awdiv+1,_b+1
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;Lab5.c: 222: RGB();
  1508   001174  EC19  F00B         	call	_RGB	;wreg free
  1509                           
  1510                           ;Lab5.c: 223: SEG();
  1511   001178  ECFD  F00F         	call	_SEG	;wreg free
  1512                           
  1513                           ;Lab5.c: 225: BorraLCD();
  1514   00117C  ECDB  F00F         	call	_BorraLCD	;wreg free
  1515                           
  1516                           ;Lab5.c: 226: MensajeLCD_Var("Faltan: ");
  1517   001180  0E7A               	movlw	low STR_3
  1518   001182  6E1C               	movwf	MensajeLCD_Var@a^0,c
  1519   001184  EC24  F00F         	call	_MensajeLCD_Var	;wreg free
  1520                           
  1521                           ;Lab5.c: 227: EscribeLCD_n8(piezFalt,2);
  1522   001188  0E02               	movlw	2
  1523   00118A  6E1F               	movwf	EscribeLCD_n8@b^0,c
  1524   00118C  5031               	movf	_piezFalt^0,w,c
  1525   00118E  EC2F  F007         	call	_EscribeLCD_n8
  1526                           
  1527                           ;Lab5.c: 228: DireccionaLCD(0xC0);
  1528   001192  0EC0               	movlw	192
  1529   001194  ECAF  F00F         	call	_DireccionaLCD
  1530                           
  1531                           ;Lab5.c: 229: MensajeLCD_Var("Objetivo: ");
  1532   001198  0E64               	movlw	low STR_4
  1533   00119A  6E1C               	movwf	MensajeLCD_Var@a^0,c
  1534   00119C  EC24  F00F         	call	_MensajeLCD_Var	;wreg free
  1535                           
  1536                           ;Lab5.c: 230: EscribeLCD_n8(cuenObj,2);
  1537   0011A0  0E02               	movlw	2
  1538   0011A2  6E1F               	movwf	EscribeLCD_n8@b^0,c
  1539   0011A4  5033               	movf	_cuenObj^0,w,c
  1540   0011A6  EC2F  F007         	call	_EscribeLCD_n8
  1541                           
  1542                           ;Lab5.c: 231: if (cuenta==cuenObj){
  1543   0011AA  5033               	movf	_cuenObj^0,w,c
  1544   0011AC  1839               	xorwf	_cuenta^0,w,c
  1545   0011AE  E117               	bnz	l296
  1546   0011B0  5034               	movf	(_cuenObj+1)^0,w,c
  1547   0011B2  183A               	xorwf	(_cuenta+1)^0,w,c
  1548   0011B4  A4D8               	btfss	status,2,c
  1549   0011B6  0012               	return	
  1550                           
  1551                           ;Lab5.c: 232: BorraLCD();
  1552   0011B8  ECDB  F00F         	call	_BorraLCD	;wreg free
  1553                           
  1554                           ;Lab5.c: 233: MensajeLCD_Var("Fin de Cuenta");
  1555   0011BC  0E3E               	movlw	low STR_10
  1556   0011BE  6E1C               	movwf	MensajeLCD_Var@a^0,c
  1557   0011C0  EC24  F00F         	call	_MensajeLCD_Var	;wreg free
  1558                           
  1559                           ;Lab5.c: 234: DireccionaLCD(0xC0);
  1560   0011C4  0EC0               	movlw	192
  1561   0011C6  ECAF  F00F         	call	_DireccionaLCD
  1562                           
  1563                           ;Lab5.c: 235: MensajeLCD_Var("Presione OK");
  1564   0011CA  0E4C               	movlw	low STR_11
  1565   0011CC  6E1C               	movwf	MensajeLCD_Var@a^0,c
  1566   0011CE  EC24  F00F         	call	_MensajeLCD_Var	;wreg free
  1567                           
  1568                           ;Lab5.c: 236: flagFin=1;
  1569   0011D2  0E00               	movlw	0
  1570   0011D4  0100               	movlb	0	; () banked
  1571   0011D6  6FA6               	movwf	(_flagFin+1)& (0+255),b
  1572   0011D8  0E01               	movlw	1
  1573   0011DA  6FA5               	movwf	_flagFin& (0+255),b
  1574   0011DC  0012               	return	
  1575   0011DE                     l296:
  1576   0011DE  0012               	return		;funcret
  1577   0011E0                     __end_of_contador:
  1578                           	callstack 0
  1579                           
  1580 ;; *************** function ___awmod *****************
  1581 ;; Defined at:
  1582 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;  dividend        2   22[COMRAM] int 
  1585 ;;  divisor         2   24[COMRAM] int 
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;  sign            1   27[COMRAM] unsigned char 
  1588 ;;  counter         1   26[COMRAM] unsigned char 
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  2   22[COMRAM] int 
  1591 ;; Registers used:
  1592 ;;		wreg, status,2, status,0
  1593 ;; Tracked objects:
  1594 ;;		On entry : 3F/0
  1595 ;;		On exit  : 3F/0
  1596 ;;		Unchanged: 3F/0
  1597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1598 ;;      Params:         4       0       0       0       0       0       0       0       0
  1599 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1600 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1601 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1602 ;;Total ram usage:        6 bytes
  1603 ;; Hardware stack levels used: 1
  1604 ;; Hardware stack levels required when called: 7
  1605 ;; This function calls:
  1606 ;;		Nothing
  1607 ;; This function is called by:
  1608 ;;		_contador
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           	psect	text2
  1613   00187A                     __ptext2:
  1614                           	callstack 0
  1615   00187A                     ___awmod:
  1616                           	callstack 22
  1617                           
  1618                           ; BSR set to: 0
  1619                           
  1620                           ;incstack = 0
  1621   00187A  6A1C               	clrf	___awmod@sign^0,c
  1622                           
  1623                           ; BSR set to: 0
  1624   00187C  AE18               	btfss	(___awmod@dividend+1)^0,7,c
  1625   00187E  D006               	goto	l3321
  1626                           
  1627                           ; BSR set to: 0
  1628   001880  6C17               	negf	___awmod@dividend^0,c
  1629   001882  1E18               	comf	(___awmod@dividend+1)^0,f,c
  1630   001884  B0D8               	btfsc	status,0,c
  1631   001886  2A18               	incf	(___awmod@dividend+1)^0,f,c
  1632                           
  1633                           ; BSR set to: 0
  1634   001888  0E01               	movlw	1
  1635   00188A  6E1C               	movwf	___awmod@sign^0,c
  1636   00188C                     l3321:
  1637                           
  1638                           ; BSR set to: 0
  1639   00188C  AE1A               	btfss	(___awmod@divisor+1)^0,7,c
  1640   00188E  D004               	goto	l3325
  1641                           
  1642                           ; BSR set to: 0
  1643   001890  6C19               	negf	___awmod@divisor^0,c
  1644   001892  1E1A               	comf	(___awmod@divisor+1)^0,f,c
  1645   001894  B0D8               	btfsc	status,0,c
  1646   001896  2A1A               	incf	(___awmod@divisor+1)^0,f,c
  1647   001898                     l3325:
  1648                           
  1649                           ; BSR set to: 0
  1650   001898  5019               	movf	___awmod@divisor^0,w,c
  1651   00189A  101A               	iorwf	(___awmod@divisor+1)^0,w,c
  1652   00189C  B4D8               	btfsc	status,2,c
  1653   00189E  D018               	goto	l3341
  1654                           
  1655                           ; BSR set to: 0
  1656   0018A0  0E01               	movlw	1
  1657   0018A2  6E1B               	movwf	___awmod@counter^0,c
  1658   0018A4  D004               	goto	l3331
  1659   0018A6                     l3329:
  1660                           
  1661                           ; BSR set to: 0
  1662   0018A6  90D8               	bcf	status,0,c
  1663   0018A8  3619               	rlcf	___awmod@divisor^0,f,c
  1664   0018AA  361A               	rlcf	(___awmod@divisor+1)^0,f,c
  1665   0018AC  2A1B               	incf	___awmod@counter^0,f,c
  1666   0018AE                     l3331:
  1667                           
  1668                           ; BSR set to: 0
  1669   0018AE  AE1A               	btfss	(___awmod@divisor+1)^0,7,c
  1670   0018B0  D7FA               	goto	l3329
  1671   0018B2                     u2260:
  1672                           
  1673                           ; BSR set to: 0
  1674   0018B2  5019               	movf	___awmod@divisor^0,w,c
  1675   0018B4  5C17               	subwf	___awmod@dividend^0,w,c
  1676   0018B6  501A               	movf	(___awmod@divisor+1)^0,w,c
  1677   0018B8  5818               	subwfb	(___awmod@dividend+1)^0,w,c
  1678   0018BA  A0D8               	btfss	status,0,c
  1679   0018BC  D004               	goto	l3337
  1680                           
  1681                           ; BSR set to: 0
  1682   0018BE  5019               	movf	___awmod@divisor^0,w,c
  1683   0018C0  5E17               	subwf	___awmod@dividend^0,f,c
  1684   0018C2  501A               	movf	(___awmod@divisor+1)^0,w,c
  1685   0018C4  5A18               	subwfb	(___awmod@dividend+1)^0,f,c
  1686   0018C6                     l3337:
  1687                           
  1688                           ; BSR set to: 0
  1689   0018C6  90D8               	bcf	status,0,c
  1690   0018C8  321A               	rrcf	(___awmod@divisor+1)^0,f,c
  1691   0018CA  3219               	rrcf	___awmod@divisor^0,f,c
  1692                           
  1693                           ; BSR set to: 0
  1694   0018CC  2E1B               	decfsz	___awmod@counter^0,f,c
  1695   0018CE  D7F1               	goto	u2260
  1696   0018D0                     l3341:
  1697                           
  1698                           ; BSR set to: 0
  1699   0018D0  501C               	movf	___awmod@sign^0,w,c
  1700   0018D2  B4D8               	btfsc	status,2,c
  1701   0018D4  D004               	goto	l3345
  1702                           
  1703                           ; BSR set to: 0
  1704   0018D6  6C17               	negf	___awmod@dividend^0,c
  1705   0018D8  1E18               	comf	(___awmod@dividend+1)^0,f,c
  1706   0018DA  B0D8               	btfsc	status,0,c
  1707   0018DC  2A18               	incf	(___awmod@dividend+1)^0,f,c
  1708   0018DE                     l3345:
  1709                           
  1710                           ; BSR set to: 0
  1711   0018DE  C017  F017         	movff	___awmod@dividend,?___awmod
  1712   0018E2  C018  F018         	movff	___awmod@dividend+1,?___awmod+1
  1713                           
  1714                           ; BSR set to: 0
  1715   0018E6  0012               	return		;funcret
  1716   0018E8                     __end_of___awmod:
  1717                           	callstack 0
  1718                           
  1719 ;; *************** function ___awdiv *****************
  1720 ;; Defined at:
  1721 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  dividend        2   22[COMRAM] int 
  1724 ;;  divisor         2   24[COMRAM] int 
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  quotient        2   28[COMRAM] int 
  1727 ;;  sign            1   27[COMRAM] unsigned char 
  1728 ;;  counter         1   26[COMRAM] unsigned char 
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  2   22[COMRAM] int 
  1731 ;; Registers used:
  1732 ;;		wreg, status,2, status,0
  1733 ;; Tracked objects:
  1734 ;;		On entry : 3F/0
  1735 ;;		On exit  : 3F/0
  1736 ;;		Unchanged: 3F/0
  1737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1738 ;;      Params:         4       0       0       0       0       0       0       0       0
  1739 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1740 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1741 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1742 ;;Total ram usage:        8 bytes
  1743 ;; Hardware stack levels used: 1
  1744 ;; Hardware stack levels required when called: 7
  1745 ;; This function calls:
  1746 ;;		Nothing
  1747 ;; This function is called by:
  1748 ;;		_contador
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text3
  1753   0014AC                     __ptext3:
  1754                           	callstack 0
  1755   0014AC                     ___awdiv:
  1756                           	callstack 22
  1757                           
  1758                           ; BSR set to: 0
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;incstack = 0
  1762   0014AC  6A1C               	clrf	___awdiv@sign^0,c
  1763                           
  1764                           ; BSR set to: 0
  1765   0014AE  AE1A               	btfss	(___awdiv@divisor+1)^0,7,c
  1766   0014B0  D006               	goto	l3277
  1767                           
  1768                           ; BSR set to: 0
  1769   0014B2  6C19               	negf	___awdiv@divisor^0,c
  1770   0014B4  1E1A               	comf	(___awdiv@divisor+1)^0,f,c
  1771   0014B6  B0D8               	btfsc	status,0,c
  1772   0014B8  2A1A               	incf	(___awdiv@divisor+1)^0,f,c
  1773                           
  1774                           ; BSR set to: 0
  1775   0014BA  0E01               	movlw	1
  1776   0014BC  6E1C               	movwf	___awdiv@sign^0,c
  1777   0014BE                     l3277:
  1778                           
  1779                           ; BSR set to: 0
  1780   0014BE  AE18               	btfss	(___awdiv@dividend+1)^0,7,c
  1781   0014C0  D006               	goto	l3283
  1782                           
  1783                           ; BSR set to: 0
  1784   0014C2  6C17               	negf	___awdiv@dividend^0,c
  1785   0014C4  1E18               	comf	(___awdiv@dividend+1)^0,f,c
  1786   0014C6  B0D8               	btfsc	status,0,c
  1787   0014C8  2A18               	incf	(___awdiv@dividend+1)^0,f,c
  1788                           
  1789                           ; BSR set to: 0
  1790   0014CA  0E01               	movlw	1
  1791   0014CC  1A1C               	xorwf	___awdiv@sign^0,f,c
  1792   0014CE                     l3283:
  1793                           
  1794                           ; BSR set to: 0
  1795   0014CE  0E00               	movlw	0
  1796   0014D0  6E1E               	movwf	(___awdiv@quotient+1)^0,c
  1797   0014D2  0E00               	movlw	0
  1798   0014D4  6E1D               	movwf	___awdiv@quotient^0,c
  1799                           
  1800                           ; BSR set to: 0
  1801   0014D6  5019               	movf	___awdiv@divisor^0,w,c
  1802   0014D8  101A               	iorwf	(___awdiv@divisor+1)^0,w,c
  1803   0014DA  B4D8               	btfsc	status,2,c
  1804   0014DC  D01C               	goto	l3305
  1805                           
  1806                           ; BSR set to: 0
  1807   0014DE  0E01               	movlw	1
  1808   0014E0  6E1B               	movwf	___awdiv@counter^0,c
  1809   0014E2  D004               	goto	l3291
  1810   0014E4                     l3289:
  1811                           
  1812                           ; BSR set to: 0
  1813   0014E4  90D8               	bcf	status,0,c
  1814   0014E6  3619               	rlcf	___awdiv@divisor^0,f,c
  1815   0014E8  361A               	rlcf	(___awdiv@divisor+1)^0,f,c
  1816   0014EA  2A1B               	incf	___awdiv@counter^0,f,c
  1817   0014EC                     l3291:
  1818                           
  1819                           ; BSR set to: 0
  1820   0014EC  AE1A               	btfss	(___awdiv@divisor+1)^0,7,c
  1821   0014EE  D7FA               	goto	l3289
  1822   0014F0                     u2200:
  1823                           
  1824                           ; BSR set to: 0
  1825   0014F0  90D8               	bcf	status,0,c
  1826   0014F2  361D               	rlcf	___awdiv@quotient^0,f,c
  1827   0014F4  361E               	rlcf	(___awdiv@quotient+1)^0,f,c
  1828                           
  1829                           ; BSR set to: 0
  1830   0014F6  5019               	movf	___awdiv@divisor^0,w,c
  1831   0014F8  5C17               	subwf	___awdiv@dividend^0,w,c
  1832   0014FA  501A               	movf	(___awdiv@divisor+1)^0,w,c
  1833   0014FC  5818               	subwfb	(___awdiv@dividend+1)^0,w,c
  1834   0014FE  A0D8               	btfss	status,0,c
  1835   001500  D005               	goto	l3301
  1836                           
  1837                           ; BSR set to: 0
  1838   001502  5019               	movf	___awdiv@divisor^0,w,c
  1839   001504  5E17               	subwf	___awdiv@dividend^0,f,c
  1840   001506  501A               	movf	(___awdiv@divisor+1)^0,w,c
  1841   001508  5A18               	subwfb	(___awdiv@dividend+1)^0,f,c
  1842                           
  1843                           ; BSR set to: 0
  1844   00150A  801D               	bsf	___awdiv@quotient^0,0,c
  1845   00150C                     l3301:
  1846                           
  1847                           ; BSR set to: 0
  1848   00150C  90D8               	bcf	status,0,c
  1849   00150E  321A               	rrcf	(___awdiv@divisor+1)^0,f,c
  1850   001510  3219               	rrcf	___awdiv@divisor^0,f,c
  1851                           
  1852                           ; BSR set to: 0
  1853   001512  2E1B               	decfsz	___awdiv@counter^0,f,c
  1854   001514  D7ED               	goto	u2200
  1855   001516                     l3305:
  1856                           
  1857                           ; BSR set to: 0
  1858   001516  501C               	movf	___awdiv@sign^0,w,c
  1859   001518  B4D8               	btfsc	status,2,c
  1860   00151A  D004               	goto	l3309
  1861                           
  1862                           ; BSR set to: 0
  1863   00151C  6C1D               	negf	___awdiv@quotient^0,c
  1864   00151E  1E1E               	comf	(___awdiv@quotient+1)^0,f,c
  1865   001520  B0D8               	btfsc	status,0,c
  1866   001522  2A1E               	incf	(___awdiv@quotient+1)^0,f,c
  1867   001524                     l3309:
  1868                           
  1869                           ; BSR set to: 0
  1870   001524  C01D  F017         	movff	___awdiv@quotient,?___awdiv
  1871   001528  C01E  F018         	movff	___awdiv@quotient+1,?___awdiv+1
  1872                           
  1873                           ; BSR set to: 0
  1874   00152C  0012               	return		;funcret
  1875   00152E                     __end_of___awdiv:
  1876                           	callstack 0
  1877                           
  1878 ;; *************** function _RecibirComando *****************
  1879 ;; Defined at:
  1880 ;;		line 364 in file "Lab5.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  comando         1   35[COMRAM] unsigned char 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1894 ;;      Params:         0       0       0       0       0       0       0       0       0
  1895 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1897 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1898 ;;Total ram usage:        1 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; Hardware stack levels required when called: 12
  1901 ;; This function calls:
  1902 ;;		_parEmerg
  1903 ;;		_reiCon
  1904 ;; This function is called by:
  1905 ;;		_main
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           	psect	text4
  1910   0018E8                     __ptext4:
  1911                           	callstack 0
  1912   0018E8                     _RecibirComando:
  1913                           	callstack 18
  1914                           
  1915                           ;Lab5.c: 365: if (RCIF){
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;incstack = 0
  1919   0018E8  AA9E               	btfss	3998,5,c	;volatile
  1920   0018EA  0012               	return	
  1921                           
  1922                           ;Lab5.c: 366: char comando = RCREG;
  1923   0018EC  CFAE F024          	movff	4014,RecibirComando@comando	;volatile
  1924                           
  1925                           ;Lab5.c: 369: switch (comando){
  1926   0018F0  D017               	goto	l3565
  1927   0018F2                     l3545:
  1928                           
  1929                           ;Lab5.c: 371: case 'p':;Lab5.c: 372: parEmerg();
  1930   0018F2  EC85  F00F         	call	_parEmerg	;wreg free
  1931                           
  1932                           ;Lab5.c: 373: break;
  1933   0018F6  D02D               	goto	l353
  1934   0018F8                     l3547:
  1935                           
  1936                           ;Lab5.c: 375: case 'e':;Lab5.c: 376: if(flagEmergencia==0){LATC2 = 1;flagADC=1;}
  1937   0018F8  503B               	movf	_flagEmergencia^0,w,c
  1938   0018FA  103C               	iorwf	(_flagEmergencia+1)^0,w,c
  1939   0018FC  A4D8               	btfss	status,2,c
  1940   0018FE  D029               	goto	l353
  1941   001900  848B               	bsf	3979,2,c	;volatile
  1942   001902                     l3551:
  1943   001902  0E00               	movlw	0
  1944   001904  0100               	movlb	0	; () banked
  1945   001906  6FA2               	movwf	(_flagADC+1)& (0+255),b
  1946   001908  0E01               	movlw	1
  1947   00190A  6FA1               	movwf	_flagADC& (0+255),b
  1948   00190C  D022               	goto	l353
  1949   00190E                     l3553:
  1950                           
  1951                           ;Lab5.c: 379: case 'a':;Lab5.c: 380: if(flagEmergencia==0){LATC2 = 0;flagADC=1;}
  1952   00190E  503B               	movf	_flagEmergencia^0,w,c
  1953   001910  103C               	iorwf	(_flagEmergencia+1)^0,w,c
  1954   001912  A4D8               	btfss	status,2,c
  1955   001914  D01E               	goto	l353
  1956   001916  948B               	bcf	3979,2,c	;volatile
  1957   001918  D7F4               	goto	l3551
  1958   00191A                     l3559:
  1959                           
  1960                           ;Lab5.c: 383: case 'r':;Lab5.c: 384: reiCon();
  1961   00191A  ECE2  F00C         	call	_reiCon	;wreg free
  1962   00191E  D7F1               	goto	l3551
  1963   001920                     l3565:
  1964   001920  5024               	movf	RecibirComando@comando^0,w,c
  1965                           
  1966                           ; Switch size 1, requested type "simple"
  1967                           ; Number of cases is 8, Range of values is 65 to 114
  1968                           ; switch strategies available:
  1969                           ; Name         Instructions Cycles
  1970                           ; simple_byte           25    13 (average)
  1971                           ;	Chosen strategy is simple_byte
  1972   001922  0A41               	xorlw	65	; case 65
  1973   001924  B4D8               	btfsc	status,2,c
  1974   001926  D7F3               	goto	l3553
  1975   001928  0A04               	xorlw	4	; case 69
  1976   00192A  B4D8               	btfsc	status,2,c
  1977   00192C  D7E5               	goto	l3547
  1978   00192E  0A15               	xorlw	21	; case 80
  1979   001930  B4D8               	btfsc	status,2,c
  1980   001932  D7DF               	goto	l3545
  1981   001934  0A02               	xorlw	2	; case 82
  1982   001936  B4D8               	btfsc	status,2,c
  1983   001938  D7F0               	goto	l3559
  1984   00193A  0A33               	xorlw	51	; case 97
  1985   00193C  B4D8               	btfsc	status,2,c
  1986   00193E  D7E7               	goto	l3553
  1987   001940  0A04               	xorlw	4	; case 101
  1988   001942  B4D8               	btfsc	status,2,c
  1989   001944  D7D9               	goto	l3547
  1990   001946  0A15               	xorlw	21	; case 112
  1991   001948  B4D8               	btfsc	status,2,c
  1992   00194A  D7D3               	goto	l3545
  1993   00194C  0A02               	xorlw	2	; case 114
  1994   00194E  B4D8               	btfsc	status,2,c
  1995   001950  D7E4               	goto	l3559
  1996   001952                     l353:
  1997                           
  1998                           ;Lab5.c: 393: RCIF = 0;
  1999   001952  9A9E               	bcf	3998,5,c	;volatile
  2000   001954  0012               	return		;funcret
  2001   001956                     __end_of_RecibirComando:
  2002                           	callstack 0
  2003                           
  2004 ;; *************** function _reiCon *****************
  2005 ;; Defined at:
  2006 ;;		line 296 in file "Lab5.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;		None
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;		None
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2020 ;;      Params:         0       0       0       0       0       0       0       0       0
  2021 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2022 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2023 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2024 ;;Total ram usage:        0 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; Hardware stack levels required when called: 11
  2027 ;; This function calls:
  2028 ;;		_BorraLCD
  2029 ;;		_DireccionaLCD
  2030 ;;		_EscribeLCD_n8
  2031 ;;		_MensajeLCD_Var
  2032 ;;		_RGB
  2033 ;;		_SEG
  2034 ;; This function is called by:
  2035 ;;		_RecibirComando
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text5
  2040   0019C4                     __ptext5:
  2041                           	callstack 0
  2042   0019C4                     _reiCon:
  2043                           	callstack 18
  2044                           
  2045                           ;Lab5.c: 297: piezFalt=cuenObj;
  2046                           
  2047                           ;incstack = 0
  2048   0019C4  C033  F031         	movff	_cuenObj,_piezFalt
  2049   0019C8  C034  F032         	movff	_cuenObj+1,_piezFalt+1
  2050                           
  2051                           ;Lab5.c: 298: cuenta=0;
  2052   0019CC  0E00               	movlw	0
  2053   0019CE  6E3A               	movwf	(_cuenta+1)^0,c
  2054   0019D0  0E00               	movlw	0
  2055   0019D2  6E39               	movwf	_cuenta^0,c
  2056                           
  2057                           ;Lab5.c: 299: a=0;
  2058   0019D4  0E00               	movlw	0
  2059   0019D6  6E38               	movwf	(_a+1)^0,c
  2060   0019D8  0E00               	movlw	0
  2061   0019DA  6E37               	movwf	_a^0,c
  2062                           
  2063                           ;Lab5.c: 300: b=0;
  2064   0019DC  0E00               	movlw	0
  2065   0019DE  6E36               	movwf	(_b+1)^0,c
  2066   0019E0  0E00               	movlw	0
  2067   0019E2  6E35               	movwf	_b^0,c
  2068                           
  2069                           ;Lab5.c: 301: RGB();
  2070   0019E4  EC19  F00B         	call	_RGB	;wreg free
  2071                           
  2072                           ;Lab5.c: 302: SEG();
  2073   0019E8  ECFD  F00F         	call	_SEG	;wreg free
  2074                           
  2075                           ;Lab5.c: 304: BorraLCD();
  2076   0019EC  ECDB  F00F         	call	_BorraLCD	;wreg free
  2077                           
  2078                           ;Lab5.c: 305: MensajeLCD_Var("Faltan: ");
  2079   0019F0  0E7A               	movlw	low STR_3
  2080   0019F2  6E1C               	movwf	MensajeLCD_Var@a^0,c
  2081   0019F4  EC24  F00F         	call	_MensajeLCD_Var	;wreg free
  2082                           
  2083                           ;Lab5.c: 306: EscribeLCD_n8(piezFalt,2);
  2084   0019F8  0E02               	movlw	2
  2085   0019FA  6E1F               	movwf	EscribeLCD_n8@b^0,c
  2086   0019FC  5031               	movf	_piezFalt^0,w,c
  2087   0019FE  EC2F  F007         	call	_EscribeLCD_n8
  2088                           
  2089                           ;Lab5.c: 307: DireccionaLCD(0xC0);
  2090   001A02  0EC0               	movlw	192
  2091   001A04  ECAF  F00F         	call	_DireccionaLCD
  2092                           
  2093                           ;Lab5.c: 308: MensajeLCD_Var("Objetivo: ");
  2094   001A08  0E64               	movlw	low STR_4
  2095   001A0A  6E1C               	movwf	MensajeLCD_Var@a^0,c
  2096   001A0C  EC24  F00F         	call	_MensajeLCD_Var	;wreg free
  2097                           
  2098                           ;Lab5.c: 309: EscribeLCD_n8(cuenObj,2);
  2099   001A10  0E02               	movlw	2
  2100   001A12  6E1F               	movwf	EscribeLCD_n8@b^0,c
  2101   001A14  5033               	movf	_cuenObj^0,w,c
  2102   001A16  EC2F  F007         	call	_EscribeLCD_n8
  2103   001A1A  0012               	return		;funcret
  2104   001A1C                     __end_of_reiCon:
  2105                           	callstack 0
  2106                           
  2107 ;; *************** function _SEG *****************
  2108 ;; Defined at:
  2109 ;;		line 282 in file "Lab5.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		None
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2123 ;;      Params:         0       0       0       0       0       0       0       0       0
  2124 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2125 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2126 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2127 ;;Total ram usage:        0 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; Hardware stack levels required when called: 7
  2130 ;; This function calls:
  2131 ;;		Nothing
  2132 ;; This function is called by:
  2133 ;;		_contador
  2134 ;;		_reiCon
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text6
  2139   001FFA                     __ptext6:
  2140                           	callstack 0
  2141   001FFA                     _SEG:
  2142                           	callstack 22
  2143                           
  2144                           ;Lab5.c: 283: LATD = a;
  2145                           
  2146                           ;incstack = 0
  2147   001FFA  C037  FF8C         	movff	_a,3980	;volatile
  2148   001FFE  0012               	return		;funcret
  2149   002000                     __end_of_SEG:
  2150                           	callstack 0
  2151                           
  2152 ;; *************** function _RGB *****************
  2153 ;; Defined at:
  2154 ;;		line 244 in file "Lab5.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;		None
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;		None
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  1    wreg      void 
  2161 ;; Registers used:
  2162 ;;		wreg, status,2, status,0
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2168 ;;      Params:         0       0       0       0       0       0       0       0       0
  2169 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2170 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2171 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2172 ;;Total ram usage:        0 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; Hardware stack levels required when called: 7
  2175 ;; This function calls:
  2176 ;;		Nothing
  2177 ;; This function is called by:
  2178 ;;		_contador
  2179 ;;		_reiCon
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	text7
  2184   001632                     __ptext7:
  2185                           	callstack 0
  2186   001632                     _RGB:
  2187                           	callstack 22
  2188                           
  2189                           ;Lab5.c: 245: if (flagInicio == 0){
  2190                           
  2191                           ;incstack = 0
  2192   001632  503D               	movf	_flagInicio^0,w,c
  2193   001634  103E               	iorwf	(_flagInicio+1)^0,w,c
  2194   001636  A4D8               	btfss	status,2,c
  2195   001638  D004               	goto	l2823
  2196                           
  2197                           ;Lab5.c: 246: LATE0 = 0;
  2198   00163A  908D               	bcf	3981,0,c	;volatile
  2199                           
  2200                           ;Lab5.c: 247: LATE1 = 0;
  2201   00163C  928D               	bcf	3981,1,c	;volatile
  2202                           
  2203                           ;Lab5.c: 248: LATE2 = 0;
  2204   00163E  948D               	bcf	3981,2,c	;volatile
  2205                           
  2206                           ;Lab5.c: 249: }
  2207   001640  0012               	return	
  2208   001642                     l2823:
  2209                           
  2210                           ;Lab5.c: 250: else if (b == 0){
  2211   001642  5035               	movf	_b^0,w,c
  2212   001644  1036               	iorwf	(_b+1)^0,w,c
  2213   001646  A4D8               	btfss	status,2,c
  2214   001648  D004               	goto	l2827
  2215                           
  2216                           ;Lab5.c: 251: LATE0 = 1;
  2217   00164A  808D               	bsf	3981,0,c	;volatile
  2218                           
  2219                           ;Lab5.c: 252: LATE1 = 0;
  2220   00164C  928D               	bcf	3981,1,c	;volatile
  2221                           
  2222                           ;Lab5.c: 253: LATE2 = 1;
  2223   00164E  848D               	bsf	3981,2,c	;volatile
  2224                           
  2225                           ;Lab5.c: 254: }
  2226   001650  0012               	return	
  2227   001652                     l2827:
  2228                           
  2229                           ;Lab5.c: 255: else if (b == 1){
  2230   001652  0435               	decf	_b^0,w,c
  2231   001654  1036               	iorwf	(_b+1)^0,w,c
  2232   001656  A4D8               	btfss	status,2,c
  2233   001658  D004               	goto	l2831
  2234                           
  2235                           ;Lab5.c: 256: LATE0 = 0;
  2236   00165A  908D               	bcf	3981,0,c	;volatile
  2237                           
  2238                           ;Lab5.c: 257: LATE1 = 0;
  2239   00165C  928D               	bcf	3981,1,c	;volatile
  2240                           
  2241                           ;Lab5.c: 258: LATE2 = 1;
  2242   00165E  848D               	bsf	3981,2,c	;volatile
  2243                           
  2244                           ;Lab5.c: 259: }
  2245   001660  0012               	return	
  2246   001662                     l2831:
  2247                           
  2248                           ;Lab5.c: 260: else if (b == 2){
  2249   001662  0E02               	movlw	2
  2250   001664  1835               	xorwf	_b^0,w,c
  2251   001666  1036               	iorwf	(_b+1)^0,w,c
  2252   001668  A4D8               	btfss	status,2,c
  2253   00166A  D004               	goto	l2835
  2254                           
  2255                           ;Lab5.c: 261: LATE0 = 0;
  2256   00166C  908D               	bcf	3981,0,c	;volatile
  2257                           
  2258                           ;Lab5.c: 262: LATE1 = 1;
  2259   00166E  828D               	bsf	3981,1,c	;volatile
  2260                           
  2261                           ;Lab5.c: 263: LATE2 = 1;
  2262   001670  848D               	bsf	3981,2,c	;volatile
  2263                           
  2264                           ;Lab5.c: 264: }
  2265   001672  0012               	return	
  2266   001674                     l2835:
  2267                           
  2268                           ;Lab5.c: 265: else if (b == 3){
  2269   001674  0E03               	movlw	3
  2270   001676  1835               	xorwf	_b^0,w,c
  2271   001678  1036               	iorwf	(_b+1)^0,w,c
  2272   00167A  A4D8               	btfss	status,2,c
  2273   00167C  D004               	goto	l2839
  2274                           
  2275                           ;Lab5.c: 266: LATE0 = 0;
  2276   00167E  908D               	bcf	3981,0,c	;volatile
  2277                           
  2278                           ;Lab5.c: 267: LATE1 = 1;
  2279   001680  828D               	bsf	3981,1,c	;volatile
  2280                           
  2281                           ;Lab5.c: 268: LATE2 = 0;
  2282   001682  948D               	bcf	3981,2,c	;volatile
  2283                           
  2284                           ;Lab5.c: 269: }
  2285   001684  0012               	return	
  2286   001686                     l2839:
  2287                           
  2288                           ;Lab5.c: 270: else if (b == 4){
  2289   001686  0E04               	movlw	4
  2290   001688  1835               	xorwf	_b^0,w,c
  2291   00168A  1036               	iorwf	(_b+1)^0,w,c
  2292   00168C  A4D8               	btfss	status,2,c
  2293   00168E  D004               	goto	l2843
  2294                           
  2295                           ;Lab5.c: 271: LATE0 = 1;
  2296   001690  808D               	bsf	3981,0,c	;volatile
  2297                           
  2298                           ;Lab5.c: 272: LATE1 = 1;
  2299   001692  828D               	bsf	3981,1,c	;volatile
  2300                           
  2301                           ;Lab5.c: 273: LATE2 = 0;
  2302   001694  948D               	bcf	3981,2,c	;volatile
  2303                           
  2304                           ;Lab5.c: 274: }
  2305   001696  0012               	return	
  2306   001698                     l2843:
  2307                           
  2308                           ;Lab5.c: 275: else if (b == 5){
  2309   001698  0E05               	movlw	5
  2310   00169A  1835               	xorwf	_b^0,w,c
  2311   00169C  1036               	iorwf	(_b+1)^0,w,c
  2312   00169E  A4D8               	btfss	status,2,c
  2313   0016A0  0012               	return	
  2314                           
  2315                           ;Lab5.c: 276: LATE0 = 1;
  2316   0016A2  808D               	bsf	3981,0,c	;volatile
  2317                           
  2318                           ;Lab5.c: 277: LATE1 = 1;
  2319   0016A4  828D               	bsf	3981,1,c	;volatile
  2320                           
  2321                           ;Lab5.c: 278: LATE2 = 1;
  2322   0016A6  848D               	bsf	3981,2,c	;volatile
  2323   0016A8  0012               	return	
  2324   0016AA                     __end_of_RGB:
  2325                           	callstack 0
  2326                           
  2327 ;; *************** function _EscribeLCD_n8 *****************
  2328 ;; Defined at:
  2329 ;;		line 140 in file "LibLCDXC9.h"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  a               1    wreg     unsigned char 
  2332 ;;  b               1   30[COMRAM] unsigned char 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  a               1   34[COMRAM] unsigned char 
  2335 ;;  unidad          1   33[COMRAM] unsigned char 
  2336 ;;  decena          1   32[COMRAM] unsigned char 
  2337 ;;  centena         1   31[COMRAM] unsigned char 
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  1    wreg      void 
  2340 ;; Registers used:
  2341 ;;		wreg, status,2, status,0, cstack
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2347 ;;      Params:         1       0       0       0       0       0       0       0       0
  2348 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2349 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2350 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2351 ;;Total ram usage:        5 bytes
  2352 ;; Hardware stack levels used: 1
  2353 ;; Hardware stack levels required when called: 9
  2354 ;; This function calls:
  2355 ;;		_EnviaDato
  2356 ;;		_HabilitaLCD
  2357 ;;		_RetardoLCD
  2358 ;;		___lbdiv
  2359 ;;		___lbmod
  2360 ;; This function is called by:
  2361 ;;		_contador
  2362 ;;		_reiCon
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           	psect	text8
  2367   000E5E                     __ptext8:
  2368                           	callstack 0
  2369   000E5E                     _EscribeLCD_n8:
  2370                           	callstack 20
  2371                           
  2372                           ;incstack = 0
  2373                           ;EscribeLCD_n8@a stored from wreg
  2374   000E5E  6E23               	movwf	EscribeLCD_n8@a^0,c
  2375                           
  2376                           ;LibLCDXC9.h: 145: unsigned char centena,decena,unidad;;LibLCDXC9.h: 146: LATA4=1;
  2377   000E60  8889               	bsf	3977,4,c	;volatile
  2378                           
  2379                           ;LibLCDXC9.h: 147: switch(b){
  2380   000E62  D065               	goto	l2801
  2381   000E64                     l2769:
  2382   000E64  0E0A               	movlw	10
  2383   000E66  6E17               	movwf	___lbmod@divisor^0,c
  2384   000E68  5023               	movf	EscribeLCD_n8@a^0,w,c
  2385   000E6A  EC10  F00F         	call	___lbmod
  2386   000E6E  6E22               	movwf	EscribeLCD_n8@unidad^0,c
  2387                           
  2388                           ;LibLCDXC9.h: 149: EnviaDato(unidad+48);
  2389   000E70  5022               	movf	EscribeLCD_n8@unidad^0,w,c
  2390   000E72  0F30               	addlw	48
  2391   000E74  ECE0  F00D         	call	_EnviaDato
  2392                           
  2393                           ;LibLCDXC9.h: 150: HabilitaLCD();
  2394   000E78  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  2395                           
  2396                           ;LibLCDXC9.h: 151: RetardoLCD(4);
  2397   000E7C  0E04               	movlw	4
  2398   000E7E  EC3A  F00D         	call	_RetardoLCD
  2399                           
  2400                           ;LibLCDXC9.h: 152: break;
  2401   000E82  0012               	return	
  2402   000E84                     l2775:
  2403   000E84  0E0A               	movlw	10
  2404   000E86  6E1B               	movwf	___lbdiv@divisor^0,c
  2405   000E88  0E64               	movlw	100
  2406   000E8A  6E17               	movwf	___lbmod@divisor^0,c
  2407   000E8C  5023               	movf	EscribeLCD_n8@a^0,w,c
  2408   000E8E  EC10  F00F         	call	___lbmod
  2409   000E92  EC8B  F00E         	call	___lbdiv
  2410   000E96  6E21               	movwf	EscribeLCD_n8@decena^0,c
  2411                           
  2412                           ;LibLCDXC9.h: 154: unidad=a%10;
  2413   000E98  0E0A               	movlw	10
  2414   000E9A  6E17               	movwf	___lbmod@divisor^0,c
  2415   000E9C  5023               	movf	EscribeLCD_n8@a^0,w,c
  2416   000E9E  EC10  F00F         	call	___lbmod
  2417   000EA2  6E22               	movwf	EscribeLCD_n8@unidad^0,c
  2418                           
  2419                           ;LibLCDXC9.h: 155: EnviaDato(decena+48);
  2420   000EA4  5021               	movf	EscribeLCD_n8@decena^0,w,c
  2421   000EA6  0F30               	addlw	48
  2422   000EA8  ECE0  F00D         	call	_EnviaDato
  2423                           
  2424                           ;LibLCDXC9.h: 156: HabilitaLCD();
  2425   000EAC  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  2426                           
  2427                           ;LibLCDXC9.h: 157: RetardoLCD(4);
  2428   000EB0  0E04               	movlw	4
  2429   000EB2  EC3A  F00D         	call	_RetardoLCD
  2430                           
  2431                           ;LibLCDXC9.h: 158: EnviaDato(unidad+48);
  2432   000EB6  5022               	movf	EscribeLCD_n8@unidad^0,w,c
  2433   000EB8  0F30               	addlw	48
  2434   000EBA  ECE0  F00D         	call	_EnviaDato
  2435                           
  2436                           ;LibLCDXC9.h: 159: HabilitaLCD();
  2437   000EBE  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  2438                           
  2439                           ;LibLCDXC9.h: 160: RetardoLCD(4);
  2440   000EC2  0E04               	movlw	4
  2441   000EC4  EC3A  F00D         	call	_RetardoLCD
  2442                           
  2443                           ;LibLCDXC9.h: 161: break;
  2444   000EC8  0012               	return	
  2445   000ECA                     l2785:
  2446   000ECA  0E64               	movlw	100
  2447   000ECC  6E1B               	movwf	___lbdiv@divisor^0,c
  2448   000ECE  5023               	movf	EscribeLCD_n8@a^0,w,c
  2449   000ED0  EC8B  F00E         	call	___lbdiv
  2450   000ED4  6E20               	movwf	EscribeLCD_n8@centena^0,c
  2451                           
  2452                           ;LibLCDXC9.h: 163: decena=(a%100)/10;
  2453   000ED6  0E0A               	movlw	10
  2454   000ED8  6E1B               	movwf	___lbdiv@divisor^0,c
  2455   000EDA  0E64               	movlw	100
  2456   000EDC  6E17               	movwf	___lbmod@divisor^0,c
  2457   000EDE  5023               	movf	EscribeLCD_n8@a^0,w,c
  2458   000EE0  EC10  F00F         	call	___lbmod
  2459   000EE4  EC8B  F00E         	call	___lbdiv
  2460   000EE8  6E21               	movwf	EscribeLCD_n8@decena^0,c
  2461                           
  2462                           ;LibLCDXC9.h: 164: unidad=a%10;
  2463   000EEA  0E0A               	movlw	10
  2464   000EEC  6E17               	movwf	___lbmod@divisor^0,c
  2465   000EEE  5023               	movf	EscribeLCD_n8@a^0,w,c
  2466   000EF0  EC10  F00F         	call	___lbmod
  2467   000EF4  6E22               	movwf	EscribeLCD_n8@unidad^0,c
  2468                           
  2469                           ;LibLCDXC9.h: 165: EnviaDato(centena+48);
  2470   000EF6  5020               	movf	EscribeLCD_n8@centena^0,w,c
  2471   000EF8  0F30               	addlw	48
  2472   000EFA  ECE0  F00D         	call	_EnviaDato
  2473                           
  2474                           ;LibLCDXC9.h: 166: HabilitaLCD();
  2475   000EFE  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  2476                           
  2477                           ;LibLCDXC9.h: 167: RetardoLCD(4);
  2478   000F02  0E04               	movlw	4
  2479   000F04  EC3A  F00D         	call	_RetardoLCD
  2480                           
  2481                           ;LibLCDXC9.h: 168: EnviaDato(decena+48);
  2482   000F08  5021               	movf	EscribeLCD_n8@decena^0,w,c
  2483   000F0A  0F30               	addlw	48
  2484   000F0C  ECE0  F00D         	call	_EnviaDato
  2485                           
  2486                           ;LibLCDXC9.h: 169: HabilitaLCD();
  2487   000F10  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  2488                           
  2489                           ;LibLCDXC9.h: 170: RetardoLCD(4);
  2490   000F14  0E04               	movlw	4
  2491   000F16  EC3A  F00D         	call	_RetardoLCD
  2492                           
  2493                           ;LibLCDXC9.h: 171: EnviaDato(unidad+48);
  2494   000F1A  5022               	movf	EscribeLCD_n8@unidad^0,w,c
  2495   000F1C  0F30               	addlw	48
  2496   000F1E  ECE0  F00D         	call	_EnviaDato
  2497                           
  2498                           ;LibLCDXC9.h: 172: HabilitaLCD();
  2499   000F22  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  2500                           
  2501                           ;LibLCDXC9.h: 173: RetardoLCD(4);
  2502   000F26  0E04               	movlw	4
  2503   000F28  EC3A  F00D         	call	_RetardoLCD
  2504                           
  2505                           ;LibLCDXC9.h: 174: break;
  2506   000F2C  0012               	return	
  2507   000F2E                     l2801:
  2508   000F2E  501F               	movf	EscribeLCD_n8@b^0,w,c
  2509                           
  2510                           ; Switch size 1, requested type "simple"
  2511                           ; Number of cases is 3, Range of values is 1 to 3
  2512                           ; switch strategies available:
  2513                           ; Name         Instructions Cycles
  2514                           ; simple_byte           10     6 (average)
  2515                           ;	Chosen strategy is simple_byte
  2516   000F30  0A01               	xorlw	1	; case 1
  2517   000F32  B4D8               	btfsc	status,2,c
  2518   000F34  D797               	goto	l2769
  2519   000F36  0A03               	xorlw	3	; case 2
  2520   000F38  B4D8               	btfsc	status,2,c
  2521   000F3A  D7A4               	goto	l2775
  2522   000F3C  0A01               	xorlw	1	; case 3
  2523   000F3E  A4D8               	btfss	status,2,c
  2524   000F40  0012               	return	
  2525   000F42  D7C3               	goto	l2785
  2526   000F44                     __end_of_EscribeLCD_n8:
  2527                           	callstack 0
  2528                           
  2529 ;; *************** function ___lbmod *****************
  2530 ;; Defined at:
  2531 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbmod.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;  dividend        1    wreg     unsigned char 
  2534 ;;  divisor         1   22[COMRAM] unsigned char 
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;  dividend        1   23[COMRAM] unsigned char 
  2537 ;;  rem             1   25[COMRAM] unsigned char 
  2538 ;;  counter         1   24[COMRAM] unsigned char 
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      unsigned char 
  2541 ;; Registers used:
  2542 ;;		wreg, status,2, status,0
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2548 ;;      Params:         1       0       0       0       0       0       0       0       0
  2549 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2550 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2551 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2552 ;;Total ram usage:        4 bytes
  2553 ;; Hardware stack levels used: 1
  2554 ;; Hardware stack levels required when called: 7
  2555 ;; This function calls:
  2556 ;;		Nothing
  2557 ;; This function is called by:
  2558 ;;		_EscribeLCD_n8
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           	psect	text9
  2563   001E20                     __ptext9:
  2564                           	callstack 0
  2565   001E20                     ___lbmod:
  2566                           	callstack 21
  2567                           
  2568                           ;incstack = 0
  2569                           ;___lbmod@dividend stored from wreg
  2570   001E20  6E18               	movwf	___lbmod@dividend^0,c
  2571   001E22  0E08               	movlw	8
  2572   001E24  6E19               	movwf	___lbmod@counter^0,c
  2573   001E26  6A1A               	clrf	___lbmod@rem^0,c
  2574   001E28                     l2655:
  2575   001E28  90D8               	bcf	status,0,c
  2576   001E2A  3418               	rlcf	___lbmod@dividend^0,w,c
  2577   001E2C  341A               	rlcf	___lbmod@rem^0,w,c
  2578   001E2E  6E1A               	movwf	___lbmod@rem^0,c
  2579   001E30  90D8               	bcf	status,0,c
  2580   001E32  3618               	rlcf	___lbmod@dividend^0,f,c
  2581   001E34  5017               	movf	___lbmod@divisor^0,w,c
  2582   001E36  5C1A               	subwf	___lbmod@rem^0,w,c
  2583   001E38  A0D8               	btfss	status,0,c
  2584   001E3A  D002               	goto	l2663
  2585   001E3C  5017               	movf	___lbmod@divisor^0,w,c
  2586   001E3E  5E1A               	subwf	___lbmod@rem^0,f,c
  2587   001E40                     l2663:
  2588   001E40  2E19               	decfsz	___lbmod@counter^0,f,c
  2589   001E42  D7F2               	goto	l2655
  2590   001E44  501A               	movf	___lbmod@rem^0,w,c
  2591   001E46  0012               	return		;funcret
  2592   001E48                     __end_of___lbmod:
  2593                           	callstack 0
  2594                           
  2595 ;; *************** function ___lbdiv *****************
  2596 ;; Defined at:
  2597 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbdiv.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  dividend        1    wreg     unsigned char 
  2600 ;;  divisor         1   26[COMRAM] unsigned char 
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;  dividend        1   27[COMRAM] unsigned char 
  2603 ;;  quotient        1   29[COMRAM] unsigned char 
  2604 ;;  counter         1   28[COMRAM] unsigned char 
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      unsigned char 
  2607 ;; Registers used:
  2608 ;;		wreg, status,2, status,0
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2614 ;;      Params:         1       0       0       0       0       0       0       0       0
  2615 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2616 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2617 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2618 ;;Total ram usage:        4 bytes
  2619 ;; Hardware stack levels used: 1
  2620 ;; Hardware stack levels required when called: 7
  2621 ;; This function calls:
  2622 ;;		Nothing
  2623 ;; This function is called by:
  2624 ;;		_EscribeLCD_n8
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text10
  2629   001D16                     __ptext10:
  2630                           	callstack 0
  2631   001D16                     ___lbdiv:
  2632                           	callstack 21
  2633                           
  2634                           ;incstack = 0
  2635                           ;___lbdiv@dividend stored from wreg
  2636   001D16  6E1C               	movwf	___lbdiv@dividend^0,c
  2637   001D18  6A1E               	clrf	___lbdiv@quotient^0,c
  2638   001D1A  501B               	movf	___lbdiv@divisor^0,w,c
  2639   001D1C  B4D8               	btfsc	status,2,c
  2640   001D1E  D015               	goto	l2647
  2641   001D20  0E01               	movlw	1
  2642   001D22  6E1D               	movwf	___lbdiv@counter^0,c
  2643   001D24  D003               	goto	l2635
  2644   001D26                     l2631:
  2645   001D26  90D8               	bcf	status,0,c
  2646   001D28  361B               	rlcf	___lbdiv@divisor^0,f,c
  2647   001D2A  2A1D               	incf	___lbdiv@counter^0,f,c
  2648   001D2C                     l2635:
  2649   001D2C  AE1B               	btfss	___lbdiv@divisor^0,7,c
  2650   001D2E  D7FB               	goto	l2631
  2651   001D30                     u1470:
  2652   001D30  90D8               	bcf	status,0,c
  2653   001D32  361E               	rlcf	___lbdiv@quotient^0,f,c
  2654   001D34  501B               	movf	___lbdiv@divisor^0,w,c
  2655   001D36  5C1C               	subwf	___lbdiv@dividend^0,w,c
  2656   001D38  A0D8               	btfss	status,0,c
  2657   001D3A  D003               	goto	l2643
  2658   001D3C  501B               	movf	___lbdiv@divisor^0,w,c
  2659   001D3E  5E1C               	subwf	___lbdiv@dividend^0,f,c
  2660   001D40  801E               	bsf	___lbdiv@quotient^0,0,c
  2661   001D42                     l2643:
  2662   001D42  90D8               	bcf	status,0,c
  2663   001D44  321B               	rrcf	___lbdiv@divisor^0,f,c
  2664   001D46  2E1D               	decfsz	___lbdiv@counter^0,f,c
  2665   001D48  D7F3               	goto	u1470
  2666   001D4A                     l2647:
  2667   001D4A  501E               	movf	___lbdiv@quotient^0,w,c
  2668   001D4C  0012               	return		;funcret
  2669   001D4E                     __end_of___lbdiv:
  2670                           	callstack 0
  2671                           
  2672 ;; *************** function _DireccionaLCD *****************
  2673 ;; Defined at:
  2674 ;;		line 243 in file "LibLCDXC9.h"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  a               1    wreg     unsigned char 
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;  a               1   26[COMRAM] unsigned char 
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		wreg, status,2, status,0, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2688 ;;      Params:         0       0       0       0       0       0       0       0       0
  2689 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2691 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2692 ;;Total ram usage:        1 bytes
  2693 ;; Hardware stack levels used: 1
  2694 ;; Hardware stack levels required when called: 9
  2695 ;; This function calls:
  2696 ;;		_EnviaDato
  2697 ;;		_HabilitaLCD
  2698 ;;		_RetardoLCD
  2699 ;; This function is called by:
  2700 ;;		_main
  2701 ;;		_contador
  2702 ;;		_reiCon
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           	psect	text11
  2707   001F5E                     __ptext11:
  2708                           	callstack 0
  2709   001F5E                     _DireccionaLCD:
  2710                           	callstack 20
  2711                           
  2712                           ;incstack = 0
  2713                           ;DireccionaLCD@a stored from wreg
  2714   001F5E  6E1B               	movwf	DireccionaLCD@a^0,c
  2715                           
  2716                           ;LibLCDXC9.h: 246: LATA4=0;
  2717   001F60  9889               	bcf	3977,4,c	;volatile
  2718                           
  2719                           ;LibLCDXC9.h: 247: EnviaDato(a);
  2720   001F62  501B               	movf	DireccionaLCD@a^0,w,c
  2721   001F64  ECE0  F00D         	call	_EnviaDato
  2722                           
  2723                           ;LibLCDXC9.h: 248: HabilitaLCD();
  2724   001F68  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  2725                           
  2726                           ;LibLCDXC9.h: 249: RetardoLCD(4);
  2727   001F6C  0E04               	movlw	4
  2728   001F6E  EC3A  F00D         	call	_RetardoLCD
  2729   001F72  0012               	return		;funcret
  2730   001F74                     __end_of_DireccionaLCD:
  2731                           	callstack 0
  2732                           
  2733 ;; *************** function _parEmerg *****************
  2734 ;; Defined at:
  2735 ;;		line 286 in file "Lab5.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;		None
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;		None
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  1    wreg      void 
  2742 ;; Registers used:
  2743 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2749 ;;      Params:         0       0       0       0       0       0       0       0       0
  2750 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2751 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2752 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2753 ;;Total ram usage:        0 bytes
  2754 ;; Hardware stack levels used: 1
  2755 ;; Hardware stack levels required when called: 11
  2756 ;; This function calls:
  2757 ;;		_BorraLCD
  2758 ;;		_MensajeLCD_Var
  2759 ;; This function is called by:
  2760 ;;		_RecibirComando
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           	psect	text12
  2765   001F0A                     __ptext12:
  2766                           	callstack 0
  2767   001F0A                     _parEmerg:
  2768                           	callstack 18
  2769                           
  2770                           ;Lab5.c: 287: LATE0 = 1;
  2771                           
  2772                           ;incstack = 0
  2773   001F0A  808D               	bsf	3981,0,c	;volatile
  2774                           
  2775                           ;Lab5.c: 288: LATE1 = 0;
  2776   001F0C  928D               	bcf	3981,1,c	;volatile
  2777                           
  2778                           ;Lab5.c: 289: LATE2 = 0;
  2779   001F0E  948D               	bcf	3981,2,c	;volatile
  2780                           
  2781                           ;Lab5.c: 290: LATC2 = 0;
  2782   001F10  948B               	bcf	3979,2,c	;volatile
  2783                           
  2784                           ;Lab5.c: 291: flagEmergencia = 1;
  2785   001F12  0E00               	movlw	0
  2786   001F14  6E3C               	movwf	(_flagEmergencia+1)^0,c
  2787   001F16  0E01               	movlw	1
  2788   001F18  6E3B               	movwf	_flagEmergencia^0,c
  2789                           
  2790                           ;Lab5.c: 292: BorraLCD();
  2791   001F1A  ECDB  F00F         	call	_BorraLCD	;wreg free
  2792                           
  2793                           ;Lab5.c: 293: MensajeLCD_Var("Emergencia");
  2794   001F1E  0E6F               	movlw	low STR_12
  2795   001F20  6E1C               	movwf	MensajeLCD_Var@a^0,c
  2796   001F22  EC24  F00F         	call	_MensajeLCD_Var	;wreg free
  2797   001F26  0012               	return		;funcret
  2798   001F28                     __end_of_parEmerg:
  2799                           	callstack 0
  2800                           
  2801 ;; *************** function _MensajeLCD_Var *****************
  2802 ;; Defined at:
  2803 ;;		line 234 in file "LibLCDXC9.h"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;  a               1   27[COMRAM] PTR unsigned char 
  2806 ;;		 -> STR_16(12), STR_15(14), STR_14(11), STR_13(9), 
  2807 ;;		 -> STR_12(11), STR_11(12), STR_10(14), STR_9(11), 
  2808 ;;		 -> STR_8(9), STR_7(18), STR_6(18), STR_5(15), 
  2809 ;;		 -> STR_4(11), STR_3(9), STR_2(18), STR_1(12), 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;		None
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  1    wreg      void 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2821 ;;      Params:         1       0       0       0       0       0       0       0       0
  2822 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2823 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2824 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2825 ;;Total ram usage:        1 bytes
  2826 ;; Hardware stack levels used: 1
  2827 ;; Hardware stack levels required when called: 10
  2828 ;; This function calls:
  2829 ;;		_EscribeLCD_c
  2830 ;; This function is called by:
  2831 ;;		_main
  2832 ;;		_contador
  2833 ;;		_parEmerg
  2834 ;;		_reiCon
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text13
  2839   001E48                     __ptext13:
  2840                           	callstack 0
  2841   001E48                     _MensajeLCD_Var:
  2842                           	callstack 19
  2843                           
  2844                           ;LibLCDXC9.h: 238: while(*a != '\0'){
  2845                           
  2846                           ;incstack = 0
  2847   001E48  D009               	goto	l2809
  2848   001E4A                     l2805:
  2849                           
  2850                           ;LibLCDXC9.h: 239: EscribeLCD_c(*a);
  2851   001E4A  C01C  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  2852   001E4E                     	if	1	;There is more than 1 active tblptr byte
  2853   001E4E  0E08               	movlw	high __smallconst
  2854   001E50  6EF7               	movwf	tblptrh,c
  2855   001E52                     	endif
  2856   001E52                     	if	0	;tblptru may be non-zero
  2857   001E52                     	endif
  2858   001E52                     	if	0	;tblptru may be non-zero
  2859   001E52                     	endif
  2860   001E52  0008               	tblrd		*
  2861   001E54  50F5               	movf	tablat,w,c
  2862   001E56  ECBA  F00F         	call	_EscribeLCD_c
  2863                           
  2864                           ;LibLCDXC9.h: 240: a++;
  2865   001E5A  2A1C               	incf	MensajeLCD_Var@a^0,f,c
  2866   001E5C                     l2809:
  2867   001E5C  C01C  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  2868   001E60                     	if	1	;There is more than 1 active tblptr byte
  2869   001E60  0E08               	movlw	high __smallconst
  2870   001E62  6EF7               	movwf	tblptrh,c
  2871   001E64                     	endif
  2872   001E64                     	if	0	;tblptru may be non-zero
  2873   001E64                     	endif
  2874   001E64                     	if	0	;tblptru may be non-zero
  2875   001E64                     	endif
  2876   001E64  0008               	tblrd		*
  2877   001E66  50F5               	movf	tablat,w,c
  2878   001E68  0900               	iorlw	0
  2879   001E6A  B4D8               	btfsc	status,2,c
  2880   001E6C  0012               	return	
  2881   001E6E  D7ED               	goto	l2805
  2882   001E70                     __end_of_MensajeLCD_Var:
  2883                           	callstack 0
  2884                           
  2885 ;; *************** function _EscribeLCD_c *****************
  2886 ;; Defined at:
  2887 ;;		line 131 in file "LibLCDXC9.h"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;  a               1    wreg     unsigned char 
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;  a               1   26[COMRAM] unsigned char 
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  1    wreg      void 
  2894 ;; Registers used:
  2895 ;;		wreg, status,2, status,0, cstack
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2901 ;;      Params:         0       0       0       0       0       0       0       0       0
  2902 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2903 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2904 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2905 ;;Total ram usage:        1 bytes
  2906 ;; Hardware stack levels used: 1
  2907 ;; Hardware stack levels required when called: 9
  2908 ;; This function calls:
  2909 ;;		_EnviaDato
  2910 ;;		_HabilitaLCD
  2911 ;;		_RetardoLCD
  2912 ;; This function is called by:
  2913 ;;		_MensajeLCD_Var
  2914 ;;		_main
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text14
  2919   001F74                     __ptext14:
  2920                           	callstack 0
  2921   001F74                     _EscribeLCD_c:
  2922                           	callstack 19
  2923                           
  2924                           ;incstack = 0
  2925                           ;EscribeLCD_c@a stored from wreg
  2926   001F74  6E1B               	movwf	EscribeLCD_c@a^0,c
  2927                           
  2928                           ;LibLCDXC9.h: 135: LATA4=1;
  2929   001F76  8889               	bsf	3977,4,c	;volatile
  2930                           
  2931                           ;LibLCDXC9.h: 136: EnviaDato(a);
  2932   001F78  501B               	movf	EscribeLCD_c@a^0,w,c
  2933   001F7A  ECE0  F00D         	call	_EnviaDato
  2934                           
  2935                           ;LibLCDXC9.h: 137: HabilitaLCD();
  2936   001F7E  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  2937                           
  2938                           ;LibLCDXC9.h: 138: RetardoLCD(4);
  2939   001F82  0E04               	movlw	4
  2940   001F84  EC3A  F00D         	call	_RetardoLCD
  2941   001F88  0012               	return		;funcret
  2942   001F8A                     __end_of_EscribeLCD_c:
  2943                           	callstack 0
  2944                           
  2945 ;; *************** function _InicializaLCD *****************
  2946 ;; Defined at:
  2947 ;;		line 66 in file "LibLCDXC9.h"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;		None
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;		None
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  1    wreg      void 
  2954 ;; Registers used:
  2955 ;;		wreg, status,2, status,0, cstack
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2961 ;;      Params:         0       0       0       0       0       0       0       0       0
  2962 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2963 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2964 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2965 ;;Total ram usage:        0 bytes
  2966 ;; Hardware stack levels used: 1
  2967 ;; Hardware stack levels required when called: 10
  2968 ;; This function calls:
  2969 ;;		_BorraLCD
  2970 ;;		_EnviaDato
  2971 ;;		_HabilitaLCD
  2972 ;;		_RetardoLCD
  2973 ;; This function is called by:
  2974 ;;		_main
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           	psect	text15
  2979   001410                     __ptext15:
  2980                           	callstack 0
  2981   001410                     _InicializaLCD:
  2982                           	callstack 20
  2983                           
  2984                           ;LibLCDXC9.h: 68: LATA4=0;
  2985                           
  2986                           ;incstack = 0
  2987   001410  9889               	bcf	3977,4,c	;volatile
  2988                           
  2989                           ;LibLCDXC9.h: 69: if(interfaz==4)
  2990   001412  0E04               	movlw	4
  2991   001414  1847               	xorwf	_interfaz^0,w,c
  2992   001416  A4D8               	btfss	status,2,c
  2993   001418  D004               	goto	l3417
  2994                           
  2995                           ;LibLCDXC9.h: 70: LATD=(LATD & 0b00001111) | 0x30;
  2996   00141A  508C               	movf	140,w,c	;volatile
  2997   00141C  0B0F               	andlw	15
  2998   00141E  0930               	iorlw	48
  2999   001420  D001               	goto	L1
  3000   001422                     l3417:
  3001                           
  3002                           ;LibLCDXC9.h: 71: else;LibLCDXC9.h: 72: LATD=0x3F;
  3003   001422  0E3F               	movlw	63
  3004   001424                     L1:
  3005   001424  6E8C               	movwf	140,c	;volatile
  3006                           
  3007                           ;LibLCDXC9.h: 73: HabilitaLCD();
  3008   001426  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3009                           
  3010                           ;LibLCDXC9.h: 74: RetardoLCD(1);
  3011   00142A  0E01               	movlw	1
  3012   00142C  EC3A  F00D         	call	_RetardoLCD
  3013                           
  3014                           ;LibLCDXC9.h: 75: if(interfaz==4)
  3015   001430  0E04               	movlw	4
  3016   001432  1847               	xorwf	_interfaz^0,w,c
  3017   001434  A4D8               	btfss	status,2,c
  3018   001436  D004               	goto	l3427
  3019                           
  3020                           ;LibLCDXC9.h: 76: LATD=(LATD & 0b00001111) | 0x30;
  3021   001438  508C               	movf	140,w,c	;volatile
  3022   00143A  0B0F               	andlw	15
  3023   00143C  0930               	iorlw	48
  3024   00143E  D001               	goto	L2
  3025   001440                     l3427:
  3026                           
  3027                           ;LibLCDXC9.h: 77: else;LibLCDXC9.h: 78: LATD=0x3F;
  3028   001440  0E3F               	movlw	63
  3029   001442                     L2:
  3030   001442  6E8C               	movwf	140,c	;volatile
  3031                           
  3032                           ;LibLCDXC9.h: 79: HabilitaLCD();
  3033   001444  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3034                           
  3035                           ;LibLCDXC9.h: 80: RetardoLCD(3);
  3036   001448  0E03               	movlw	3
  3037   00144A  EC3A  F00D         	call	_RetardoLCD
  3038                           
  3039                           ;LibLCDXC9.h: 81: if(interfaz==4)
  3040   00144E  0E04               	movlw	4
  3041   001450  1847               	xorwf	_interfaz^0,w,c
  3042   001452  A4D8               	btfss	status,2,c
  3043   001454  D004               	goto	l3437
  3044                           
  3045                           ;LibLCDXC9.h: 82: LATD=(LATD & 0b00001111) | 0x30;
  3046   001456  508C               	movf	140,w,c	;volatile
  3047   001458  0B0F               	andlw	15
  3048   00145A  0930               	iorlw	48
  3049   00145C  D001               	goto	L3
  3050   00145E                     l3437:
  3051                           
  3052                           ;LibLCDXC9.h: 83: else;LibLCDXC9.h: 84: LATD=0x3F;
  3053   00145E  0E3F               	movlw	63
  3054   001460                     L3:
  3055   001460  6E8C               	movwf	140,c	;volatile
  3056                           
  3057                           ;LibLCDXC9.h: 85: HabilitaLCD();
  3058   001462  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3059                           
  3060                           ;LibLCDXC9.h: 86: RetardoLCD(4);
  3061   001466  0E04               	movlw	4
  3062   001468  EC3A  F00D         	call	_RetardoLCD
  3063                           
  3064                           ;LibLCDXC9.h: 87: if(interfaz==4){
  3065   00146C  0E04               	movlw	4
  3066   00146E  1847               	xorwf	_interfaz^0,w,c
  3067   001470  A4D8               	btfss	status,2,c
  3068   001472  D011               	goto	l3457
  3069                           
  3070                           ;LibLCDXC9.h: 88: LATD=(LATD & 0b00001111) | 0x20;
  3071   001474  508C               	movf	140,w,c	;volatile
  3072   001476  0B0F               	andlw	15
  3073   001478  0920               	iorlw	32
  3074   00147A  6E8C               	movwf	140,c	;volatile
  3075                           
  3076                           ;LibLCDXC9.h: 89: HabilitaLCD();
  3077   00147C  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3078                           
  3079                           ;LibLCDXC9.h: 90: RetardoLCD(4);
  3080   001480  0E04               	movlw	4
  3081   001482  EC3A  F00D         	call	_RetardoLCD
  3082                           
  3083                           ;LibLCDXC9.h: 91: EnviaDato(0x2F);
  3084   001486  0E2F               	movlw	47
  3085   001488  ECE0  F00D         	call	_EnviaDato
  3086                           
  3087                           ;LibLCDXC9.h: 92: HabilitaLCD();
  3088   00148C  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3089                           
  3090                           ;LibLCDXC9.h: 93: RetardoLCD(4);
  3091   001490  0E04               	movlw	4
  3092   001492  EC3A  F00D         	call	_RetardoLCD
  3093   001496                     l3457:
  3094                           
  3095                           ;LibLCDXC9.h: 94: };LibLCDXC9.h: 95: BorraLCD();
  3096   001496  ECDB  F00F         	call	_BorraLCD	;wreg free
  3097                           
  3098                           ;LibLCDXC9.h: 96: EnviaDato(0xF);
  3099   00149A  0E0F               	movlw	15
  3100   00149C  ECE0  F00D         	call	_EnviaDato
  3101                           
  3102                           ;LibLCDXC9.h: 97: HabilitaLCD();
  3103   0014A0  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3104                           
  3105                           ;LibLCDXC9.h: 98: RetardoLCD(4);
  3106   0014A4  0E04               	movlw	4
  3107   0014A6  EC3A  F00D         	call	_RetardoLCD
  3108   0014AA  0012               	return		;funcret
  3109   0014AC                     __end_of_InicializaLCD:
  3110                           	callstack 0
  3111                           
  3112 ;; *************** function _ConfiguraLCD *****************
  3113 ;; Defined at:
  3114 ;;		line 50 in file "LibLCDXC9.h"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;  a               1    wreg     unsigned char 
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;  a               1   22[COMRAM] unsigned char 
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  1    wreg      void 
  3121 ;; Registers used:
  3122 ;;		wreg, status,2, status,0
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3128 ;;      Params:         0       0       0       0       0       0       0       0       0
  3129 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3130 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3131 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3132 ;;Total ram usage:        1 bytes
  3133 ;; Hardware stack levels used: 1
  3134 ;; Hardware stack levels required when called: 7
  3135 ;; This function calls:
  3136 ;;		Nothing
  3137 ;; This function is called by:
  3138 ;;		_main
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           	psect	text16
  3143   001F46                     __ptext16:
  3144                           	callstack 0
  3145   001F46                     _ConfiguraLCD:
  3146                           	callstack 23
  3147                           
  3148                           ;incstack = 0
  3149                           ;ConfiguraLCD@a stored from wreg
  3150   001F46  6E17               	movwf	ConfiguraLCD@a^0,c
  3151                           
  3152                           ;LibLCDXC9.h: 51: if(a==4 | a ==8)
  3153   001F48  0E04               	movlw	4
  3154   001F4A  1817               	xorwf	ConfiguraLCD@a^0,w,c
  3155   001F4C  B4D8               	btfsc	status,2,c
  3156   001F4E  D004               	goto	u960
  3157   001F50  0E08               	movlw	8
  3158   001F52  1817               	xorwf	ConfiguraLCD@a^0,w,c
  3159   001F54  A4D8               	btfss	status,2,c
  3160   001F56  0012               	return	
  3161   001F58                     u960:
  3162                           
  3163                           ;LibLCDXC9.h: 52: interfaz=a;
  3164   001F58  C017  F047         	movff	ConfiguraLCD@a,_interfaz
  3165   001F5C  0012               	return		;funcret
  3166   001F5E                     __end_of_ConfiguraLCD:
  3167                           	callstack 0
  3168                           
  3169 ;; *************** function _CaracterQbert *****************
  3170 ;; Defined at:
  3171 ;;		line 333 in file "LibLCDXC9.h"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;		None
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;		None
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  1    wreg      void 
  3178 ;; Registers used:
  3179 ;;		wreg, status,2, status,0, cstack
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3185 ;;      Params:         0       0       0       0       0       0       0       0       0
  3186 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3187 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3188 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3189 ;;Total ram usage:        0 bytes
  3190 ;; Hardware stack levels used: 1
  3191 ;; Hardware stack levels required when called: 11
  3192 ;; This function calls:
  3193 ;;		_ComandoLCD
  3194 ;;		_EnviaDato
  3195 ;;		_HabilitaLCD
  3196 ;;		_RetardoLCD
  3197 ;; This function is called by:
  3198 ;;		_main
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text17
  3203   001796                     __ptext17:
  3204                           	callstack 0
  3205   001796                     _CaracterQbert:
  3206                           	callstack 19
  3207                           
  3208                           ;LibLCDXC9.h: 334: ComandoLCD(0b01010000);
  3209                           
  3210                           ;incstack = 0
  3211   001796  0E50               	movlw	80
  3212   001798  ECF7  F00E         	call	_ComandoLCD
  3213                           
  3214                           ;LibLCDXC9.h: 335: LATA4=1;
  3215   00179C  8889               	bsf	3977,4,c	;volatile
  3216                           
  3217                           ;LibLCDXC9.h: 336: RetardoLCD(4);
  3218   00179E  0E04               	movlw	4
  3219   0017A0  EC3A  F00D         	call	_RetardoLCD
  3220                           
  3221                           ;LibLCDXC9.h: 337: EnviaDato(0b11111);
  3222   0017A4  0E1F               	movlw	31
  3223   0017A6  ECE0  F00D         	call	_EnviaDato
  3224                           
  3225                           ;LibLCDXC9.h: 338: HabilitaLCD();
  3226   0017AA  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3227                           
  3228                           ;LibLCDXC9.h: 339: EnviaDato(0b10101);
  3229   0017AE  0E15               	movlw	21
  3230   0017B0  ECE0  F00D         	call	_EnviaDato
  3231                           
  3232                           ;LibLCDXC9.h: 340: HabilitaLCD();
  3233   0017B4  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3234                           
  3235                           ;LibLCDXC9.h: 341: EnviaDato(0b11111);
  3236   0017B8  0E1F               	movlw	31
  3237   0017BA  ECE0  F00D         	call	_EnviaDato
  3238                           
  3239                           ;LibLCDXC9.h: 342: HabilitaLCD();
  3240   0017BE  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3241                           
  3242                           ;LibLCDXC9.h: 343: EnviaDato(0b11111);
  3243   0017C2  0E1F               	movlw	31
  3244   0017C4  ECE0  F00D         	call	_EnviaDato
  3245                           
  3246                           ;LibLCDXC9.h: 344: HabilitaLCD();
  3247   0017C8  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3248                           
  3249                           ;LibLCDXC9.h: 345: EnviaDato(0b01110);
  3250   0017CC  0E0E               	movlw	14
  3251   0017CE  ECE0  F00D         	call	_EnviaDato
  3252                           
  3253                           ;LibLCDXC9.h: 346: HabilitaLCD();
  3254   0017D2  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3255                           
  3256                           ;LibLCDXC9.h: 347: EnviaDato(0b01010);
  3257   0017D6  0E0A               	movlw	10
  3258   0017D8  ECE0  F00D         	call	_EnviaDato
  3259                           
  3260                           ;LibLCDXC9.h: 348: HabilitaLCD();
  3261   0017DC  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3262                           
  3263                           ;LibLCDXC9.h: 349: EnviaDato(0b11011);
  3264   0017E0  0E1B               	movlw	27
  3265   0017E2  ECE0  F00D         	call	_EnviaDato
  3266                           
  3267                           ;LibLCDXC9.h: 350: HabilitaLCD();
  3268   0017E6  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3269                           
  3270                           ;LibLCDXC9.h: 351: EnviaDato(0b00000);
  3271   0017EA  0E00               	movlw	0
  3272   0017EC  ECE0  F00D         	call	_EnviaDato
  3273                           
  3274                           ;LibLCDXC9.h: 352: HabilitaLCD();
  3275   0017F0  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3276                           
  3277                           ;LibLCDXC9.h: 353: LATA4 = 0;
  3278   0017F4  9889               	bcf	3977,4,c	;volatile
  3279                           
  3280                           ;LibLCDXC9.h: 354: EnviaDato(0xC1);
  3281   0017F6  0EC1               	movlw	193
  3282   0017F8  ECE0  F00D         	call	_EnviaDato
  3283                           
  3284                           ;LibLCDXC9.h: 355: HabilitaLCD();
  3285   0017FC  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3286                           
  3287                           ;LibLCDXC9.h: 356: RetardoLCD(2);
  3288   001800  0E02               	movlw	2
  3289   001802  EC3A  F00D         	call	_RetardoLCD
  3290   001806  0012               	return		;funcret
  3291   001808                     __end_of_CaracterQbert:
  3292                           	callstack 0
  3293                           
  3294 ;; *************** function _CaracterCara *****************
  3295 ;; Defined at:
  3296 ;;		line 307 in file "LibLCDXC9.h"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;		None
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;		None
  3301 ;; Return value:  Size  Location     Type
  3302 ;;                  1    wreg      void 
  3303 ;; Registers used:
  3304 ;;		wreg, status,2, status,0, cstack
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3310 ;;      Params:         0       0       0       0       0       0       0       0       0
  3311 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3312 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3313 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3314 ;;Total ram usage:        0 bytes
  3315 ;; Hardware stack levels used: 1
  3316 ;; Hardware stack levels required when called: 11
  3317 ;; This function calls:
  3318 ;;		_ComandoLCD
  3319 ;;		_EnviaDato
  3320 ;;		_HabilitaLCD
  3321 ;;		_RetardoLCD
  3322 ;; This function is called by:
  3323 ;;		_main
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           
  3327                           	psect	text18
  3328   001808                     __ptext18:
  3329                           	callstack 0
  3330   001808                     _CaracterCara:
  3331                           	callstack 19
  3332                           
  3333                           ;LibLCDXC9.h: 308: ComandoLCD(0b01001000);
  3334                           
  3335                           ;incstack = 0
  3336   001808  0E48               	movlw	72
  3337   00180A  ECF7  F00E         	call	_ComandoLCD
  3338                           
  3339                           ;LibLCDXC9.h: 309: LATA4=1;
  3340   00180E  8889               	bsf	3977,4,c	;volatile
  3341                           
  3342                           ;LibLCDXC9.h: 310: RetardoLCD(4);
  3343   001810  0E04               	movlw	4
  3344   001812  EC3A  F00D         	call	_RetardoLCD
  3345                           
  3346                           ;LibLCDXC9.h: 311: EnviaDato(0b11011);
  3347   001816  0E1B               	movlw	27
  3348   001818  ECE0  F00D         	call	_EnviaDato
  3349                           
  3350                           ;LibLCDXC9.h: 312: HabilitaLCD();
  3351   00181C  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3352                           
  3353                           ;LibLCDXC9.h: 313: EnviaDato(0b00000);
  3354   001820  0E00               	movlw	0
  3355   001822  ECE0  F00D         	call	_EnviaDato
  3356                           
  3357                           ;LibLCDXC9.h: 314: HabilitaLCD();
  3358   001826  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3359                           
  3360                           ;LibLCDXC9.h: 315: EnviaDato(0b11011);
  3361   00182A  0E1B               	movlw	27
  3362   00182C  ECE0  F00D         	call	_EnviaDato
  3363                           
  3364                           ;LibLCDXC9.h: 316: HabilitaLCD();
  3365   001830  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3366                           
  3367                           ;LibLCDXC9.h: 317: EnviaDato(0b11011);
  3368   001834  0E1B               	movlw	27
  3369   001836  ECE0  F00D         	call	_EnviaDato
  3370                           
  3371                           ;LibLCDXC9.h: 318: HabilitaLCD();
  3372   00183A  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3373                           
  3374                           ;LibLCDXC9.h: 319: EnviaDato(0b00000);
  3375   00183E  0E00               	movlw	0
  3376   001840  ECE0  F00D         	call	_EnviaDato
  3377                           
  3378                           ;LibLCDXC9.h: 320: HabilitaLCD();
  3379   001844  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3380                           
  3381                           ;LibLCDXC9.h: 321: EnviaDato(0b10001);
  3382   001848  0E11               	movlw	17
  3383   00184A  ECE0  F00D         	call	_EnviaDato
  3384                           
  3385                           ;LibLCDXC9.h: 322: HabilitaLCD();
  3386   00184E  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3387                           
  3388                           ;LibLCDXC9.h: 323: EnviaDato(0b01110);
  3389   001852  0E0E               	movlw	14
  3390   001854  ECE0  F00D         	call	_EnviaDato
  3391                           
  3392                           ;LibLCDXC9.h: 324: HabilitaLCD();
  3393   001858  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3394                           
  3395                           ;LibLCDXC9.h: 325: EnviaDato(0b00000);
  3396   00185C  0E00               	movlw	0
  3397   00185E  ECE0  F00D         	call	_EnviaDato
  3398                           
  3399                           ;LibLCDXC9.h: 326: HabilitaLCD();
  3400   001862  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3401                           
  3402                           ;LibLCDXC9.h: 327: LATA4 = 0;
  3403   001866  9889               	bcf	3977,4,c	;volatile
  3404                           
  3405                           ;LibLCDXC9.h: 328: EnviaDato(0xC0);
  3406   001868  0EC0               	movlw	192
  3407   00186A  ECE0  F00D         	call	_EnviaDato
  3408                           
  3409                           ;LibLCDXC9.h: 329: HabilitaLCD();
  3410   00186E  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3411                           
  3412                           ;LibLCDXC9.h: 330: RetardoLCD(2);
  3413   001872  0E02               	movlw	2
  3414   001874  EC3A  F00D         	call	_RetardoLCD
  3415   001878  0012               	return		;funcret
  3416   00187A                     __end_of_CaracterCara:
  3417                           	callstack 0
  3418                           
  3419 ;; *************** function _ComandoLCD *****************
  3420 ;; Defined at:
  3421 ;;		line 118 in file "LibLCDXC9.h"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  a               1    wreg     unsigned char 
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;  a               1   26[COMRAM] unsigned char 
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  1    wreg      void 
  3428 ;; Registers used:
  3429 ;;		wreg, status,2, status,0, cstack
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3435 ;;      Params:         0       0       0       0       0       0       0       0       0
  3436 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3437 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3438 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3439 ;;Total ram usage:        1 bytes
  3440 ;; Hardware stack levels used: 1
  3441 ;; Hardware stack levels required when called: 10
  3442 ;; This function calls:
  3443 ;;		_BorraLCD
  3444 ;;		_CursorAInicio
  3445 ;;		_EnviaDato
  3446 ;;		_HabilitaLCD
  3447 ;;		_RetardoLCD
  3448 ;; This function is called by:
  3449 ;;		_CaracterCara
  3450 ;;		_CaracterQbert
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           	psect	text19
  3455   001DEE                     __ptext19:
  3456                           	callstack 0
  3457   001DEE                     _ComandoLCD:
  3458                           	callstack 19
  3459                           
  3460                           ;incstack = 0
  3461                           ;ComandoLCD@a stored from wreg
  3462   001DEE  6E1B               	movwf	ComandoLCD@a^0,c
  3463                           
  3464                           ;LibLCDXC9.h: 120: LATA4=0;
  3465   001DF0  9889               	bcf	3977,4,c	;volatile
  3466                           
  3467                           ;LibLCDXC9.h: 121: if(a==1)
  3468   001DF2  041B               	decf	ComandoLCD@a^0,w,c
  3469   001DF4  A4D8               	btfss	status,2,c
  3470   001DF6  D003               	goto	l3107
  3471                           
  3472                           ;LibLCDXC9.h: 122: BorraLCD();
  3473   001DF8  ECDB  F00F         	call	_BorraLCD	;wreg free
  3474   001DFC  0012               	return	
  3475   001DFE                     l3107:
  3476                           
  3477                           ;LibLCDXC9.h: 123: else if((a&0b11111110)==2)
  3478   001DFE  501B               	movf	ComandoLCD@a^0,w,c
  3479   001E00  0BFE               	andlw	254
  3480   001E02  0A02               	xorlw	2
  3481   001E04  A4D8               	btfss	status,2,c
  3482   001E06  D003               	goto	l3111
  3483                           
  3484                           ;LibLCDXC9.h: 124: CursorAInicio();
  3485   001E08  EC05  F010         	call	_CursorAInicio	;wreg free
  3486   001E0C  0012               	return	
  3487   001E0E                     l3111:
  3488                           
  3489                           ;LibLCDXC9.h: 125: else{;LibLCDXC9.h: 126: EnviaDato(a);
  3490   001E0E  501B               	movf	ComandoLCD@a^0,w,c
  3491   001E10  ECE0  F00D         	call	_EnviaDato
  3492                           
  3493                           ;LibLCDXC9.h: 127: HabilitaLCD();
  3494   001E14  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3495                           
  3496                           ;LibLCDXC9.h: 128: RetardoLCD(4);
  3497   001E18  0E04               	movlw	4
  3498   001E1A  EC3A  F00D         	call	_RetardoLCD
  3499   001E1E  0012               	return		;funcret
  3500   001E20                     __end_of_ComandoLCD:
  3501                           	callstack 0
  3502                           
  3503 ;; *************** function _CursorAInicio *****************
  3504 ;; Defined at:
  3505 ;;		line 114 in file "LibLCDXC9.h"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;		None
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;		None
  3510 ;; Return value:  Size  Location     Type
  3511 ;;                  1    wreg      void 
  3512 ;; Registers used:
  3513 ;;		None
  3514 ;; Tracked objects:
  3515 ;;		On entry : 0/0
  3516 ;;		On exit  : 0/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3519 ;;      Params:         0       0       0       0       0       0       0       0       0
  3520 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3521 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3522 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3523 ;;Total ram usage:        0 bytes
  3524 ;; Hardware stack levels used: 1
  3525 ;; Hardware stack levels required when called: 7
  3526 ;; This function calls:
  3527 ;;		Nothing
  3528 ;; This function is called by:
  3529 ;;		_ComandoLCD
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           
  3533                           	psect	text20
  3534   00200A                     __ptext20:
  3535                           	callstack 0
  3536   00200A                     _CursorAInicio:
  3537                           	callstack 21
  3538                           
  3539                           ;incstack = 0
  3540   00200A  0012               	return		;funcret
  3541   00200C                     __end_of_CursorAInicio:
  3542                           	callstack 0
  3543                           
  3544 ;; *************** function _BorraLCD *****************
  3545 ;; Defined at:
  3546 ;;		line 107 in file "LibLCDXC9.h"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;		None
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;		None
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      void 
  3553 ;; Registers used:
  3554 ;;		wreg, status,2, status,0, cstack
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3560 ;;      Params:         0       0       0       0       0       0       0       0       0
  3561 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3562 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3563 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3564 ;;Total ram usage:        0 bytes
  3565 ;; Hardware stack levels used: 1
  3566 ;; Hardware stack levels required when called: 9
  3567 ;; This function calls:
  3568 ;;		_EnviaDato
  3569 ;;		_HabilitaLCD
  3570 ;;		_RetardoLCD
  3571 ;; This function is called by:
  3572 ;;		_InicializaLCD
  3573 ;;		_ComandoLCD
  3574 ;;		_main
  3575 ;;		_contador
  3576 ;;		_parEmerg
  3577 ;;		_reiCon
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           	psect	text21
  3582   001FB6                     __ptext21:
  3583                           	callstack 0
  3584   001FB6                     _BorraLCD:
  3585                           	callstack 20
  3586                           
  3587                           ;LibLCDXC9.h: 109: LATA4=0;
  3588                           
  3589                           ;incstack = 0
  3590   001FB6  9889               	bcf	3977,4,c	;volatile
  3591                           
  3592                           ;LibLCDXC9.h: 110: EnviaDato(0x01);
  3593   001FB8  0E01               	movlw	1
  3594   001FBA  ECE0  F00D         	call	_EnviaDato
  3595                           
  3596                           ;LibLCDXC9.h: 111: HabilitaLCD();
  3597   001FBE  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3598                           
  3599                           ;LibLCDXC9.h: 112: RetardoLCD(2);
  3600   001FC2  0E02               	movlw	2
  3601   001FC4  EC3A  F00D         	call	_RetardoLCD
  3602   001FC8  0012               	return		;funcret
  3603   001FCA                     __end_of_BorraLCD:
  3604                           	callstack 0
  3605                           
  3606 ;; *************** function _EnviaDato *****************
  3607 ;; Defined at:
  3608 ;;		line 54 in file "LibLCDXC9.h"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;  a               1    wreg     unsigned char 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  a               1   25[COMRAM] unsigned char 
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  1    wreg      void 
  3615 ;; Registers used:
  3616 ;;		wreg, status,2, status,0, cstack
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3622 ;;      Params:         0       0       0       0       0       0       0       0       0
  3623 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3624 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3625 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3626 ;;Total ram usage:        2 bytes
  3627 ;; Hardware stack levels used: 1
  3628 ;; Hardware stack levels required when called: 8
  3629 ;; This function calls:
  3630 ;;		_HabilitaLCD
  3631 ;;		_RetardoLCD
  3632 ;; This function is called by:
  3633 ;;		_InicializaLCD
  3634 ;;		_BorraLCD
  3635 ;;		_ComandoLCD
  3636 ;;		_EscribeLCD_c
  3637 ;;		_EscribeLCD_n8
  3638 ;;		_DireccionaLCD
  3639 ;;		_CaracterCara
  3640 ;;		_CaracterQbert
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           	psect	text22
  3645   001BC0                     __ptext22:
  3646                           	callstack 0
  3647   001BC0                     _EnviaDato:
  3648                           	callstack 19
  3649                           
  3650                           ;incstack = 0
  3651                           ;EnviaDato@a stored from wreg
  3652   001BC0  6E1A               	movwf	EnviaDato@a^0,c
  3653                           
  3654                           ;LibLCDXC9.h: 55: if(interfaz==4){
  3655   001BC2  0E04               	movlw	4
  3656   001BC4  1847               	xorwf	_interfaz^0,w,c
  3657   001BC6  A4D8               	btfss	status,2,c
  3658   001BC8  D017               	goto	l2599
  3659                           
  3660                           ;LibLCDXC9.h: 56: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3661   001BCA  C01A  F019         	movff	EnviaDato@a,??_EnviaDato
  3662   001BCE  0EF0               	movlw	240
  3663   001BD0  1619               	andwf	??_EnviaDato^0,f,c
  3664   001BD2  508C               	movf	140,w,c	;volatile
  3665   001BD4  0B0F               	andlw	15
  3666   001BD6  1019               	iorwf	??_EnviaDato^0,w,c
  3667   001BD8  6E8C               	movwf	140,c	;volatile
  3668                           
  3669                           ;LibLCDXC9.h: 57: HabilitaLCD();
  3670   001BDA  ECEF  F00F         	call	_HabilitaLCD	;wreg free
  3671                           
  3672                           ;LibLCDXC9.h: 58: RetardoLCD(1);
  3673   001BDE  0E01               	movlw	1
  3674   001BE0  EC3A  F00D         	call	_RetardoLCD
  3675                           
  3676                           ;LibLCDXC9.h: 59: LATD=(LATD & 0b00001111) | (a<<4);
  3677   001BE4  C01A  F019         	movff	EnviaDato@a,??_EnviaDato
  3678   001BE8  3A19               	swapf	??_EnviaDato^0,f,c
  3679   001BEA  0EF0               	movlw	240
  3680   001BEC  1619               	andwf	??_EnviaDato^0,f,c
  3681   001BEE  508C               	movf	140,w,c	;volatile
  3682   001BF0  0B0F               	andlw	15
  3683   001BF2  1019               	iorwf	??_EnviaDato^0,w,c
  3684   001BF4  6E8C               	movwf	140,c	;volatile
  3685                           
  3686                           ;LibLCDXC9.h: 62: }else if(interfaz==8){
  3687   001BF6  0012               	return	
  3688   001BF8                     l2599:
  3689   001BF8  0E08               	movlw	8
  3690   001BFA  1847               	xorwf	_interfaz^0,w,c
  3691   001BFC  A4D8               	btfss	status,2,c
  3692   001BFE  0012               	return	
  3693                           
  3694                           ;LibLCDXC9.h: 63: LATD=a;
  3695   001C00  C01A  FF8C         	movff	EnviaDato@a,3980	;volatile
  3696   001C04  0012               	return		;funcret
  3697   001C06                     __end_of_EnviaDato:
  3698                           	callstack 0
  3699                           
  3700 ;; *************** function _RetardoLCD *****************
  3701 ;; Defined at:
  3702 ;;		line 287 in file "LibLCDXC9.h"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;  a               1    wreg     unsigned char 
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;  a               1   23[COMRAM] unsigned char 
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      void 
  3709 ;; Registers used:
  3710 ;;		wreg, status,2, status,0
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3716 ;;      Params:         0       0       0       0       0       0       0       0       0
  3717 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3718 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3719 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3720 ;;Total ram usage:        2 bytes
  3721 ;; Hardware stack levels used: 1
  3722 ;; Hardware stack levels required when called: 7
  3723 ;; This function calls:
  3724 ;;		Nothing
  3725 ;; This function is called by:
  3726 ;;		_EnviaDato
  3727 ;;		_InicializaLCD
  3728 ;;		_BorraLCD
  3729 ;;		_ComandoLCD
  3730 ;;		_EscribeLCD_c
  3731 ;;		_EscribeLCD_n8
  3732 ;;		_DireccionaLCD
  3733 ;;		_CaracterCara
  3734 ;;		_CaracterQbert
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           	psect	text23
  3739   001A74                     __ptext23:
  3740                           	callstack 0
  3741   001A74                     _RetardoLCD:
  3742                           	callstack 20
  3743                           
  3744                           ;incstack = 0
  3745                           ;RetardoLCD@a stored from wreg
  3746   001A74  6E18               	movwf	RetardoLCD@a^0,c
  3747                           
  3748                           ;LibLCDXC9.h: 288: switch(a){
  3749   001A76  D01B               	goto	l2567
  3750   001A78                     l2557:
  3751   001A78  0E05               	movlw	5
  3752   001A7A  6E17               	movwf	??_RetardoLCD^0,c
  3753   001A7C  0EDE               	movlw	222
  3754   001A7E                     u3327:
  3755   001A7E  2EE8               	decfsz	wreg,f,c
  3756   001A80  D7FE               	bra	u3327
  3757   001A82  2E17               	decfsz	??_RetardoLCD^0,f,c
  3758   001A84  D7FC               	bra	u3327
  3759                           
  3760                           ;LibLCDXC9.h: 291: break;
  3761   001A86  0012               	return	
  3762   001A88                     l2559:
  3763   001A88  0E53               	movlw	83
  3764   001A8A                     u3337:
  3765   001A8A  2EE8               	decfsz	wreg,f,c
  3766   001A8C  D7FE               	bra	u3337
  3767   001A8E  0000               	nop	
  3768                           
  3769                           ;LibLCDXC9.h: 293: _delay((unsigned long)((640)*(1000000/4000000.0)));
  3770   001A90  0E35               	movlw	53
  3771   001A92                     u3347:
  3772   001A92  2EE8               	decfsz	wreg,f,c
  3773   001A94  D7FE               	bra	u3347
  3774   001A96  0000               	nop	
  3775                           
  3776                           ;LibLCDXC9.h: 295: break;
  3777   001A98  0012               	return	
  3778   001A9A                     l2561:
  3779   001A9A  0E08               	movlw	8
  3780   001A9C                     u3357:
  3781   001A9C  2EE8               	decfsz	wreg,f,c
  3782   001A9E  D7FE               	bra	u3357
  3783   001AA0  0000               	nop	
  3784                           
  3785                           ;LibLCDXC9.h: 298: break;
  3786   001AA2  0012               	return	
  3787   001AA4                     l2563:
  3788   001AA4  0E03               	movlw	3
  3789   001AA6                     u3367:
  3790   001AA6  2EE8               	decfsz	wreg,f,c
  3791   001AA8  D7FE               	bra	u3367
  3792   001AAA  0000               	nop	
  3793                           
  3794                           ;LibLCDXC9.h: 301: break;
  3795   001AAC  0012               	return	
  3796   001AAE                     l2567:
  3797   001AAE  5018               	movf	RetardoLCD@a^0,w,c
  3798                           
  3799                           ; Switch size 1, requested type "simple"
  3800                           ; Number of cases is 4, Range of values is 1 to 4
  3801                           ; switch strategies available:
  3802                           ; Name         Instructions Cycles
  3803                           ; simple_byte           13     7 (average)
  3804                           ;	Chosen strategy is simple_byte
  3805   001AB0  0A01               	xorlw	1	; case 1
  3806   001AB2  B4D8               	btfsc	status,2,c
  3807   001AB4  D7E1               	goto	l2557
  3808   001AB6  0A03               	xorlw	3	; case 2
  3809   001AB8  B4D8               	btfsc	status,2,c
  3810   001ABA  D7E6               	goto	l2559
  3811   001ABC  0A01               	xorlw	1	; case 3
  3812   001ABE  B4D8               	btfsc	status,2,c
  3813   001AC0  D7EC               	goto	l2561
  3814   001AC2  0A07               	xorlw	7	; case 4
  3815   001AC4  A4D8               	btfss	status,2,c
  3816   001AC6  0012               	return	
  3817   001AC8  D7ED               	goto	l2563
  3818   001ACA                     __end_of_RetardoLCD:
  3819                           	callstack 0
  3820                           
  3821 ;; *************** function _HabilitaLCD *****************
  3822 ;; Defined at:
  3823 ;;		line 100 in file "LibLCDXC9.h"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;		None
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;		None
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  1    wreg      void 
  3830 ;; Registers used:
  3831 ;;		wreg
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3837 ;;      Params:         0       0       0       0       0       0       0       0       0
  3838 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3839 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3840 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3841 ;;Total ram usage:        0 bytes
  3842 ;; Hardware stack levels used: 1
  3843 ;; Hardware stack levels required when called: 7
  3844 ;; This function calls:
  3845 ;;		Nothing
  3846 ;; This function is called by:
  3847 ;;		_EnviaDato
  3848 ;;		_InicializaLCD
  3849 ;;		_BorraLCD
  3850 ;;		_ComandoLCD
  3851 ;;		_EscribeLCD_c
  3852 ;;		_EscribeLCD_n8
  3853 ;;		_DireccionaLCD
  3854 ;;		_CaracterCara
  3855 ;;		_CaracterQbert
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           	psect	text24
  3860   001FDE                     __ptext24:
  3861                           	callstack 0
  3862   001FDE                     _HabilitaLCD:
  3863                           	callstack 20
  3864                           
  3865                           ;LibLCDXC9.h: 102: LATA5=1;
  3866                           
  3867                           ;incstack = 0
  3868   001FDE  8A89               	bsf	3977,5,c	;volatile
  3869                           
  3870                           ;LibLCDXC9.h: 103: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3871   001FE0  0E03               	movlw	3
  3872   001FE2                     u3377:
  3873   001FE2  2EE8               	decfsz	wreg,f,c
  3874   001FE4  D7FE               	bra	u3377
  3875   001FE6  0000               	nop	
  3876                           
  3877                           ;LibLCDXC9.h: 105: LATA5=0;
  3878   001FE8  9A89               	bcf	3977,5,c	;volatile
  3879   001FEA  0012               	return		;funcret
  3880   001FEC                     __end_of_HabilitaLCD:
  3881                           	callstack 0
  3882                           
  3883 ;; *************** function _ADC *****************
  3884 ;; Defined at:
  3885 ;;		line 327 in file "Lab5.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;		None
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  voltaje         3   54[BANK0 ] float 
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  1    wreg      void 
  3892 ;; Registers used:
  3893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3899 ;;      Params:         0       0       0       0       0       0       0       0       0
  3900 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3901 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3902 ;;      Totals:         0       5       0       0       0       0       0       0       0
  3903 ;;Total ram usage:        5 bytes
  3904 ;; Hardware stack levels used: 1
  3905 ;; Hardware stack levels required when called: 10
  3906 ;; This function calls:
  3907 ;;		_Transmitir
  3908 ;;		___ftdiv
  3909 ;;		___ftge
  3910 ;;		___ftmul
  3911 ;;		___lwtoft
  3912 ;; This function is called by:
  3913 ;;		_main
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           	psect	text25
  3918   0012B0                     __ptext25:
  3919                           	callstack 0
  3920   0012B0                     _ADC:
  3921                           	callstack 20
  3922                           
  3923                           ;Lab5.c: 328: if(flagEmergencia==0){
  3924                           
  3925                           ;incstack = 0
  3926   0012B0  503B               	movf	_flagEmergencia^0,w,c
  3927   0012B2  103C               	iorwf	(_flagEmergencia+1)^0,w,c
  3928   0012B4  A4D8               	btfss	status,2,c
  3929   0012B6  0012               	return	
  3930                           
  3931                           ;Lab5.c: 330: ADCON0bits.GO = 1;
  3932   0012B8  82C2               	bsf	194,1,c	;volatile
  3933   0012BA                     l331:
  3934   0012BA  B2C2               	btfsc	194,1,c	;volatile
  3935   0012BC  D7FE               	goto	l331
  3936                           
  3937                           ;Lab5.c: 334: adcVal = ((ADRESH << 8) + ADRESL);
  3938   0012BE  50C4               	movf	196,w,c	;volatile
  3939   0012C0  0100               	movlb	0	; () banked
  3940   0012C2  6F95               	movwf	(??_ADC+1)& (0+255),b
  3941   0012C4  6B94               	clrf	??_ADC& (0+255),b
  3942   0012C6  50C3               	movf	195,w,c	;volatile
  3943   0012C8  2594               	addwf	??_ADC& (0+255),w,b
  3944   0012CA  6F9B               	movwf	_adcVal& (0+255),b
  3945   0012CC  0E00               	movlw	0
  3946   0012CE  2195               	addwfc	(??_ADC+1)& (0+255),w,b
  3947   0012D0  6F9C               	movwf	(_adcVal+1)& (0+255),b
  3948                           
  3949                           ; BSR set to: 0
  3950                           ;Lab5.c: 336: float voltaje = (adcVal * 5.0) / 1023.0;
  3951   0012D2  0E00               	movlw	0
  3952   0012D4  6E25               	movwf	___ftmul@f2^0,c
  3953   0012D6  0EA0               	movlw	160
  3954   0012D8  6E26               	movwf	(___ftmul@f2+1)^0,c
  3955   0012DA  0E40               	movlw	64
  3956   0012DC  6E27               	movwf	(___ftmul@f2+2)^0,c
  3957   0012DE  C09B  F01F         	movff	_adcVal,___lwtoft@c
  3958   0012E2  C09C  F020         	movff	_adcVal+1,___lwtoft@c+1
  3959   0012E6  EC73  F00F         	call	___lwtoft	;wreg free
  3960   0012EA  C01F  F022         	movff	?___lwtoft,___ftmul@f1
  3961   0012EE  C020  F023         	movff	?___lwtoft+1,___ftmul@f1+1
  3962   0012F2  C021  F024         	movff	?___lwtoft+2,___ftmul@f1+2
  3963   0012F6  ECB5  F006         	call	___ftmul	;wreg free
  3964   0012FA  C022  F060         	movff	?___ftmul,___ftdiv@f1
  3965   0012FE  C023  F061         	movff	?___ftmul+1,___ftdiv@f1+1
  3966   001302  C024  F062         	movff	?___ftmul+2,___ftdiv@f1+2
  3967   001306  0EC0               	movlw	192
  3968   001308  0100               	movlb	0	; () banked
  3969   00130A  6F63               	movwf	___ftdiv@f2& (0+255),b
  3970   00130C  0E7F               	movlw	127
  3971   00130E  6F64               	movwf	(___ftdiv@f2+1)& (0+255),b
  3972   001310  0E44               	movlw	68
  3973   001312  6F65               	movwf	(___ftdiv@f2+2)& (0+255),b
  3974   001314  ECA2  F007         	call	___ftdiv	;wreg free
  3975   001318  C060  F096         	movff	?___ftdiv,ADC@voltaje
  3976   00131C  C061  F097         	movff	?___ftdiv+1,ADC@voltaje+1
  3977   001320  C062  F098         	movff	?___ftdiv+2,ADC@voltaje+2
  3978                           
  3979                           ;Lab5.c: 339: if(flagADC==0){
  3980   001324  0100               	movlb	0	; () banked
  3981   001326  51A1               	movf	_flagADC& (0+255),w,b
  3982   001328  11A2               	iorwf	(_flagADC+1)& (0+255),w,b
  3983   00132A  A4D8               	btfss	status,2,c
  3984   00132C  D013               	goto	l4167
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;Lab5.c: 340: if (voltaje > 2.5) {
  3988   00132E  0E00               	movlw	0
  3989   001330  6E17               	movwf	___ftge@ff1^0,c
  3990   001332  0E20               	movlw	32
  3991   001334  6E18               	movwf	(___ftge@ff1+1)^0,c
  3992   001336  0E40               	movlw	64
  3993   001338  6E19               	movwf	(___ftge@ff1+2)^0,c
  3994   00133A  C096  F01A         	movff	ADC@voltaje,___ftge@ff2
  3995   00133E  C097  F01B         	movff	ADC@voltaje+1,___ftge@ff2+1
  3996   001342  C098  F01C         	movff	ADC@voltaje+2,___ftge@ff2+2
  3997   001346  EC91  F00B         	call	___ftge	;wreg free
  3998   00134A  B0D8               	btfsc	status,0,c
  3999   00134C  D002               	goto	l335
  4000                           
  4001                           ; BSR set to: 0
  4002                           ;Lab5.c: 341: LATC2 = 1;
  4003   00134E  848B               	bsf	3979,2,c	;volatile
  4004                           
  4005                           ;Lab5.c: 342: } else {
  4006   001350  D001               	goto	l4167
  4007   001352                     l335:
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;Lab5.c: 343: LATC2 = 0;
  4011   001352  948B               	bcf	3979,2,c	;volatile
  4012   001354                     l4167:
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;Lab5.c: 344: };Lab5.c: 345: };Lab5.c: 347: Transmitir(adcVal);
  4016   001354  C09B  F02E         	movff	_adcVal,Transmitir@adcVal
  4017   001358  C09C  F02F         	movff	_adcVal+1,Transmitir@adcVal+1
  4018   00135C  EC48  F00E         	call	_Transmitir	;wreg free
  4019   001360  0012               	return		;funcret
  4020   001362                     __end_of_ADC:
  4021                           	callstack 0
  4022                           
  4023 ;; *************** function ___lwtoft *****************
  4024 ;; Defined at:
  4025 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lwtoft.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;  c               2   30[COMRAM] unsigned int 
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;		None
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  3   30[COMRAM] float 
  4032 ;; Registers used:
  4033 ;;		wreg, status,2, status,0, cstack
  4034 ;; Tracked objects:
  4035 ;;		On entry : 3F/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4039 ;;      Params:         3       0       0       0       0       0       0       0       0
  4040 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4041 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4042 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4043 ;;Total ram usage:        3 bytes
  4044 ;; Hardware stack levels used: 1
  4045 ;; Hardware stack levels required when called: 8
  4046 ;; This function calls:
  4047 ;;		___ftpack
  4048 ;; This function is called by:
  4049 ;;		_ADC
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text26
  4054   001EE6                     __ptext26:
  4055                           	callstack 0
  4056   001EE6                     ___lwtoft:
  4057                           	callstack 21
  4058                           
  4059                           ; BSR set to: 0
  4060                           
  4061                           ;incstack = 0
  4062   001EE6  C01F  F017         	movff	___lwtoft@c,___ftpack@arg
  4063   001EEA  C020  F018         	movff	___lwtoft@c+1,___ftpack@arg+1
  4064   001EEE  6A19               	clrf	(___ftpack@arg+2)^0,c
  4065   001EF0  0E8E               	movlw	142
  4066   001EF2  6E1A               	movwf	___ftpack@exp^0,c
  4067   001EF4  0E00               	movlw	0
  4068   001EF6  6E1B               	movwf	___ftpack@sign^0,c
  4069   001EF8  ECB1  F009         	call	___ftpack	;wreg free
  4070   001EFC  C017  F01F         	movff	?___ftpack,?___lwtoft
  4071   001F00  C018  F020         	movff	?___ftpack+1,?___lwtoft+1
  4072   001F04  C019  F021         	movff	?___ftpack+2,?___lwtoft+2
  4073   001F08  0012               	return		;funcret
  4074   001F0A                     __end_of___lwtoft:
  4075                           	callstack 0
  4076                           
  4077 ;; *************** function ___ftmul *****************
  4078 ;; Defined at:
  4079 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\ftmul.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  f1              3   33[COMRAM] float 
  4082 ;;  f2              3   36[COMRAM] float 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;  f3_as_produc    3   43[COMRAM] unsigned um
  4085 ;;  sign            1   47[COMRAM] unsigned char 
  4086 ;;  cntr            1   46[COMRAM] unsigned char 
  4087 ;;  exp             1   42[COMRAM] unsigned char 
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  3   33[COMRAM] float 
  4090 ;; Registers used:
  4091 ;;		wreg, status,2, status,0, cstack
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4097 ;;      Params:         6       0       0       0       0       0       0       0       0
  4098 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4099 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4100 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4101 ;;Total ram usage:       15 bytes
  4102 ;; Hardware stack levels used: 1
  4103 ;; Hardware stack levels required when called: 8
  4104 ;; This function calls:
  4105 ;;		___ftpack
  4106 ;; This function is called by:
  4107 ;;		_ADC
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           	psect	text27
  4112   000D6A                     __ptext27:
  4113                           	callstack 0
  4114   000D6A                     ___ftmul:
  4115                           	callstack 21
  4116                           
  4117                           ;incstack = 0
  4118   000D6A  C024  F028         	movff	___ftmul@f1+2,??___ftmul
  4119   000D6E  6A29               	clrf	(??___ftmul+1)^0,c
  4120   000D70  6A2A               	clrf	(??___ftmul+2)^0,c
  4121   000D72  3423               	rlcf	(___ftmul@f1+1)^0,w,c
  4122   000D74  3628               	rlcf	??___ftmul^0,f,c
  4123   000D76  E301               	bnc	u3071
  4124   000D78  8029               	bsf	(??___ftmul+1)^0,0,c
  4125   000D7A                     u3071:
  4126   000D7A  5028               	movf	??___ftmul^0,w,c
  4127   000D7C  6E2B               	movwf	___ftmul@exp^0,c
  4128   000D7E  502B               	movf	___ftmul@exp^0,w,c
  4129   000D80  A4D8               	btfss	status,2,c
  4130   000D82  D007               	goto	l4089
  4131   000D84  0E00               	movlw	0
  4132   000D86  6E22               	movwf	?___ftmul^0,c
  4133   000D88  0E00               	movlw	0
  4134   000D8A  6E23               	movwf	(?___ftmul+1)^0,c
  4135   000D8C  0E00               	movlw	0
  4136   000D8E  6E24               	movwf	(?___ftmul+2)^0,c
  4137   000D90  0012               	return	
  4138   000D92                     l4089:
  4139   000D92  C027  F028         	movff	___ftmul@f2+2,??___ftmul
  4140   000D96  6A29               	clrf	(??___ftmul+1)^0,c
  4141   000D98  6A2A               	clrf	(??___ftmul+2)^0,c
  4142   000D9A  3426               	rlcf	(___ftmul@f2+1)^0,w,c
  4143   000D9C  3628               	rlcf	??___ftmul^0,f,c
  4144   000D9E  E301               	bnc	u3091
  4145   000DA0  8029               	bsf	(??___ftmul+1)^0,0,c
  4146   000DA2                     u3091:
  4147   000DA2  5028               	movf	??___ftmul^0,w,c
  4148   000DA4  6E30               	movwf	___ftmul@sign^0,c
  4149   000DA6  5030               	movf	___ftmul@sign^0,w,c
  4150   000DA8  A4D8               	btfss	status,2,c
  4151   000DAA  D007               	goto	l4095
  4152   000DAC  0E00               	movlw	0
  4153   000DAE  6E22               	movwf	?___ftmul^0,c
  4154   000DB0  0E00               	movlw	0
  4155   000DB2  6E23               	movwf	(?___ftmul+1)^0,c
  4156   000DB4  0E00               	movlw	0
  4157   000DB6  6E24               	movwf	(?___ftmul+2)^0,c
  4158   000DB8  0012               	return	
  4159   000DBA                     l4095:
  4160   000DBA  5030               	movf	___ftmul@sign^0,w,c
  4161   000DBC  0F7B               	addlw	123
  4162   000DBE  262B               	addwf	___ftmul@exp^0,f,c
  4163   000DC0  C024  F030         	movff	___ftmul@f1+2,___ftmul@sign
  4164   000DC4  5027               	movf	(___ftmul@f2+2)^0,w,c
  4165   000DC6  1A30               	xorwf	___ftmul@sign^0,f,c
  4166   000DC8  0E80               	movlw	128
  4167   000DCA  1630               	andwf	___ftmul@sign^0,f,c
  4168   000DCC  8E23               	bsf	(___ftmul@f1+1)^0,7,c
  4169   000DCE  8E26               	bsf	(___ftmul@f2+1)^0,7,c
  4170   000DD0  0EFF               	movlw	255
  4171   000DD2  1625               	andwf	___ftmul@f2^0,f,c
  4172   000DD4  0EFF               	movlw	255
  4173   000DD6  1626               	andwf	(___ftmul@f2+1)^0,f,c
  4174   000DD8  0E00               	movlw	0
  4175   000DDA  1627               	andwf	(___ftmul@f2+2)^0,f,c
  4176   000DDC  0E00               	movlw	0
  4177   000DDE  6E2C               	movwf	___ftmul@f3_as_product^0,c
  4178   000DE0  0E00               	movlw	0
  4179   000DE2  6E2D               	movwf	(___ftmul@f3_as_product+1)^0,c
  4180   000DE4  0E00               	movlw	0
  4181   000DE6  6E2E               	movwf	(___ftmul@f3_as_product+2)^0,c
  4182   000DE8  0E07               	movlw	7
  4183   000DEA  6E2F               	movwf	___ftmul@cntr^0,c
  4184   000DEC                     l4109:
  4185   000DEC  A022               	btfss	___ftmul@f1^0,0,c
  4186   000DEE  D006               	goto	l4113
  4187   000DF0  5025               	movf	___ftmul@f2^0,w,c
  4188   000DF2  262C               	addwf	___ftmul@f3_as_product^0,f,c
  4189   000DF4  5026               	movf	(___ftmul@f2+1)^0,w,c
  4190   000DF6  222D               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  4191   000DF8  5027               	movf	(___ftmul@f2+2)^0,w,c
  4192   000DFA  222E               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  4193   000DFC                     l4113:
  4194   000DFC  90D8               	bcf	status,0,c
  4195   000DFE  3224               	rrcf	(___ftmul@f1+2)^0,f,c
  4196   000E00  3223               	rrcf	(___ftmul@f1+1)^0,f,c
  4197   000E02  3222               	rrcf	___ftmul@f1^0,f,c
  4198   000E04  90D8               	bcf	status,0,c
  4199   000E06  3625               	rlcf	___ftmul@f2^0,f,c
  4200   000E08  3626               	rlcf	(___ftmul@f2+1)^0,f,c
  4201   000E0A  3627               	rlcf	(___ftmul@f2+2)^0,f,c
  4202   000E0C  2E2F               	decfsz	___ftmul@cntr^0,f,c
  4203   000E0E  D7EE               	goto	l4109
  4204   000E10  0E09               	movlw	9
  4205   000E12  6E2F               	movwf	___ftmul@cntr^0,c
  4206   000E14                     l4119:
  4207   000E14  A022               	btfss	___ftmul@f1^0,0,c
  4208   000E16  D006               	goto	l4123
  4209   000E18  5025               	movf	___ftmul@f2^0,w,c
  4210   000E1A  262C               	addwf	___ftmul@f3_as_product^0,f,c
  4211   000E1C  5026               	movf	(___ftmul@f2+1)^0,w,c
  4212   000E1E  222D               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  4213   000E20  5027               	movf	(___ftmul@f2+2)^0,w,c
  4214   000E22  222E               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  4215   000E24                     l4123:
  4216   000E24  90D8               	bcf	status,0,c
  4217   000E26  3224               	rrcf	(___ftmul@f1+2)^0,f,c
  4218   000E28  3223               	rrcf	(___ftmul@f1+1)^0,f,c
  4219   000E2A  3222               	rrcf	___ftmul@f1^0,f,c
  4220   000E2C  90D8               	bcf	status,0,c
  4221   000E2E  322E               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  4222   000E30  322D               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  4223   000E32  322C               	rrcf	___ftmul@f3_as_product^0,f,c
  4224   000E34  2E2F               	decfsz	___ftmul@cntr^0,f,c
  4225   000E36  D7EE               	goto	l4119
  4226   000E38  C02C  F017         	movff	___ftmul@f3_as_product,___ftpack@arg
  4227   000E3C  C02D  F018         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4228   000E40  C02E  F019         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4229   000E44  C02B  F01A         	movff	___ftmul@exp,___ftpack@exp
  4230   000E48  C030  F01B         	movff	___ftmul@sign,___ftpack@sign
  4231   000E4C  ECB1  F009         	call	___ftpack	;wreg free
  4232   000E50  C017  F022         	movff	?___ftpack,?___ftmul
  4233   000E54  C018  F023         	movff	?___ftpack+1,?___ftmul+1
  4234   000E58  C019  F024         	movff	?___ftpack+2,?___ftmul+2
  4235   000E5C  0012               	return		;funcret
  4236   000E5E                     __end_of___ftmul:
  4237                           	callstack 0
  4238                           
  4239 ;; *************** function ___ftge *****************
  4240 ;; Defined at:
  4241 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\ftge.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;  ff1             3   22[COMRAM] float 
  4244 ;;  ff2             3   25[COMRAM] float 
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;		None
  4247 ;; Return value:  Size  Location     Type
  4248 ;;		None               void
  4249 ;; Registers used:
  4250 ;;		wreg, status,2, status,0
  4251 ;; Tracked objects:
  4252 ;;		On entry : 3F/0
  4253 ;;		On exit  : 3F/0
  4254 ;;		Unchanged: 3F/0
  4255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4256 ;;      Params:         6       0       0       0       0       0       0       0       0
  4257 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4258 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4259 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4260 ;;Total ram usage:        9 bytes
  4261 ;; Hardware stack levels used: 1
  4262 ;; Hardware stack levels required when called: 7
  4263 ;; This function calls:
  4264 ;;		Nothing
  4265 ;; This function is called by:
  4266 ;;		_ADC
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           	psect	text28
  4271   001722                     __ptext28:
  4272                           	callstack 0
  4273   001722                     ___ftge:
  4274                           	callstack 22
  4275                           
  4276                           ; BSR set to: 0
  4277                           
  4278                           ;incstack = 0
  4279   001722  AE19               	btfss	(___ftge@ff1+2)^0,7,c
  4280   001724  D00F               	goto	l4135
  4281                           
  4282                           ; BSR set to: 0
  4283   001726  0E00               	movlw	0
  4284   001728  6E1D               	movwf	??___ftge^0,c
  4285   00172A  0E00               	movlw	0
  4286   00172C  6E1E               	movwf	(??___ftge+1)^0,c
  4287   00172E  0E80               	movlw	128
  4288   001730  6E1F               	movwf	(??___ftge+2)^0,c
  4289   001732  5017               	movf	___ftge@ff1^0,w,c
  4290   001734  5C1D               	subwf	??___ftge^0,w,c
  4291   001736  6E17               	movwf	___ftge@ff1^0,c
  4292   001738  5018               	movf	(___ftge@ff1+1)^0,w,c
  4293   00173A  581E               	subwfb	(??___ftge+1)^0,w,c
  4294   00173C  6E18               	movwf	(___ftge@ff1+1)^0,c
  4295   00173E  5019               	movf	(___ftge@ff1+2)^0,w,c
  4296   001740  581F               	subwfb	(??___ftge+2)^0,w,c
  4297   001742  6E19               	movwf	(___ftge@ff1+2)^0,c
  4298   001744                     l4135:
  4299                           
  4300                           ; BSR set to: 0
  4301   001744  AE1C               	btfss	(___ftge@ff2+2)^0,7,c
  4302   001746  D00F               	goto	l4139
  4303                           
  4304                           ; BSR set to: 0
  4305   001748  0E00               	movlw	0
  4306   00174A  6E1D               	movwf	??___ftge^0,c
  4307   00174C  0E00               	movlw	0
  4308   00174E  6E1E               	movwf	(??___ftge+1)^0,c
  4309   001750  0E80               	movlw	128
  4310   001752  6E1F               	movwf	(??___ftge+2)^0,c
  4311   001754  501A               	movf	___ftge@ff2^0,w,c
  4312   001756  5C1D               	subwf	??___ftge^0,w,c
  4313   001758  6E1A               	movwf	___ftge@ff2^0,c
  4314   00175A  501B               	movf	(___ftge@ff2+1)^0,w,c
  4315   00175C  581E               	subwfb	(??___ftge+1)^0,w,c
  4316   00175E  6E1B               	movwf	(___ftge@ff2+1)^0,c
  4317   001760  501C               	movf	(___ftge@ff2+2)^0,w,c
  4318   001762  581F               	subwfb	(??___ftge+2)^0,w,c
  4319   001764  6E1C               	movwf	(___ftge@ff2+2)^0,c
  4320   001766                     l4139:
  4321                           
  4322                           ; BSR set to: 0
  4323   001766  0E00               	movlw	0
  4324   001768  1A17               	xorwf	___ftge@ff1^0,f,c
  4325   00176A  0E00               	movlw	0
  4326   00176C  1A18               	xorwf	(___ftge@ff1+1)^0,f,c
  4327   00176E  0E80               	movlw	128
  4328   001770  1A19               	xorwf	(___ftge@ff1+2)^0,f,c
  4329                           
  4330                           ; BSR set to: 0
  4331   001772  0E00               	movlw	0
  4332   001774  1A1A               	xorwf	___ftge@ff2^0,f,c
  4333   001776  0E00               	movlw	0
  4334   001778  1A1B               	xorwf	(___ftge@ff2+1)^0,f,c
  4335   00177A  0E80               	movlw	128
  4336   00177C  1A1C               	xorwf	(___ftge@ff2+2)^0,f,c
  4337   00177E  501A               	movf	___ftge@ff2^0,w,c
  4338   001780  5C17               	subwf	___ftge@ff1^0,w,c
  4339   001782  501B               	movf	(___ftge@ff2+1)^0,w,c
  4340   001784  5818               	subwfb	(___ftge@ff1+1)^0,w,c
  4341   001786  501C               	movf	(___ftge@ff2+2)^0,w,c
  4342   001788  5819               	subwfb	(___ftge@ff1+2)^0,w,c
  4343   00178A  B0D8               	btfsc	status,0,c
  4344   00178C  D002               	goto	l4145
  4345                           
  4346                           ; BSR set to: 0
  4347   00178E  90D8               	bcf	status,0,c
  4348   001790  0012               	return	
  4349   001792                     l4145:
  4350                           
  4351                           ; BSR set to: 0
  4352   001792  80D8               	bsf	status,0,c
  4353                           
  4354                           ; BSR set to: 0
  4355   001794  0012               	return		;funcret
  4356   001796                     __end_of___ftge:
  4357                           	callstack 0
  4358                           
  4359 ;; *************** function ___ftdiv *****************
  4360 ;; Defined at:
  4361 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\ftdiv.c"
  4362 ;; Parameters:    Size  Location     Type
  4363 ;;  f1              3    0[BANK0 ] float 
  4364 ;;  f2              3    3[BANK0 ] float 
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;  f3              3   10[BANK0 ] float 
  4367 ;;  sign            1   14[BANK0 ] unsigned char 
  4368 ;;  exp             1   13[BANK0 ] unsigned char 
  4369 ;;  cntr            1    9[BANK0 ] unsigned char 
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  3    0[BANK0 ] float 
  4372 ;; Registers used:
  4373 ;;		wreg, status,2, status,0, cstack
  4374 ;; Tracked objects:
  4375 ;;		On entry : 3F/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4379 ;;      Params:         0       6       0       0       0       0       0       0       0
  4380 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4381 ;;      Temps:          0       3       0       0       0       0       0       0       0
  4382 ;;      Totals:         0      15       0       0       0       0       0       0       0
  4383 ;;Total ram usage:       15 bytes
  4384 ;; Hardware stack levels used: 1
  4385 ;; Hardware stack levels required when called: 8
  4386 ;; This function calls:
  4387 ;;		___ftpack
  4388 ;; This function is called by:
  4389 ;;		_ADC
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           	psect	text29
  4394   000F44                     __ptext29:
  4395                           	callstack 0
  4396   000F44                     ___ftdiv:
  4397                           	callstack 21
  4398                           
  4399                           ; BSR set to: 0
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;incstack = 0
  4403   000F44  C062  F066         	movff	___ftdiv@f1+2,??___ftdiv
  4404   000F48  6B67               	clrf	(??___ftdiv+1)& (0+255),b
  4405   000F4A  6B68               	clrf	(??___ftdiv+2)& (0+255),b
  4406   000F4C  3561               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  4407   000F4E  3766               	rlcf	??___ftdiv& (0+255),f,b
  4408   000F50  E301               	bnc	u3021
  4409   000F52  8167               	bsf	(??___ftdiv+1)& (0+255),0,b
  4410   000F54                     u3021:
  4411   000F54  5166               	movf	??___ftdiv& (0+255),w,b
  4412   000F56  6F6D               	movwf	___ftdiv@exp& (0+255),b
  4413   000F58  516D               	movf	___ftdiv@exp& (0+255),w,b
  4414   000F5A  A4D8               	btfss	status,2,c
  4415   000F5C  D007               	goto	l4043
  4416                           
  4417                           ; BSR set to: 0
  4418   000F5E  0E00               	movlw	0
  4419   000F60  6F60               	movwf	?___ftdiv& (0+255),b
  4420   000F62  0E00               	movlw	0
  4421   000F64  6F61               	movwf	(?___ftdiv+1)& (0+255),b
  4422   000F66  0E00               	movlw	0
  4423   000F68  6F62               	movwf	(?___ftdiv+2)& (0+255),b
  4424   000F6A  0012               	return	
  4425   000F6C                     l4043:
  4426                           
  4427                           ; BSR set to: 0
  4428   000F6C  C065  F066         	movff	___ftdiv@f2+2,??___ftdiv
  4429   000F70  6B67               	clrf	(??___ftdiv+1)& (0+255),b
  4430   000F72  6B68               	clrf	(??___ftdiv+2)& (0+255),b
  4431   000F74  3564               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  4432   000F76  3766               	rlcf	??___ftdiv& (0+255),f,b
  4433   000F78  E301               	bnc	u3041
  4434   000F7A  8167               	bsf	(??___ftdiv+1)& (0+255),0,b
  4435   000F7C                     u3041:
  4436   000F7C  5166               	movf	??___ftdiv& (0+255),w,b
  4437   000F7E  6F6E               	movwf	___ftdiv@sign& (0+255),b
  4438   000F80  516E               	movf	___ftdiv@sign& (0+255),w,b
  4439   000F82  A4D8               	btfss	status,2,c
  4440   000F84  D007               	goto	l4049
  4441                           
  4442                           ; BSR set to: 0
  4443   000F86  0E00               	movlw	0
  4444   000F88  6F60               	movwf	?___ftdiv& (0+255),b
  4445   000F8A  0E00               	movlw	0
  4446   000F8C  6F61               	movwf	(?___ftdiv+1)& (0+255),b
  4447   000F8E  0E00               	movlw	0
  4448   000F90  6F62               	movwf	(?___ftdiv+2)& (0+255),b
  4449   000F92  0012               	return	
  4450   000F94                     l4049:
  4451                           
  4452                           ; BSR set to: 0
  4453   000F94  0E00               	movlw	0
  4454   000F96  6F6A               	movwf	___ftdiv@f3& (0+255),b
  4455   000F98  0E00               	movlw	0
  4456   000F9A  6F6B               	movwf	(___ftdiv@f3+1)& (0+255),b
  4457   000F9C  0E00               	movlw	0
  4458   000F9E  6F6C               	movwf	(___ftdiv@f3+2)& (0+255),b
  4459                           
  4460                           ; BSR set to: 0
  4461   000FA0  516E               	movf	___ftdiv@sign& (0+255),w,b
  4462   000FA2  0F89               	addlw	137
  4463   000FA4  5F6D               	subwf	___ftdiv@exp& (0+255),f,b
  4464                           
  4465                           ; BSR set to: 0
  4466   000FA6  C062  F06E         	movff	___ftdiv@f1+2,___ftdiv@sign
  4467                           
  4468                           ; BSR set to: 0
  4469   000FAA  5165               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4470   000FAC  1B6E               	xorwf	___ftdiv@sign& (0+255),f,b
  4471                           
  4472                           ; BSR set to: 0
  4473   000FAE  0E80               	movlw	128
  4474   000FB0  176E               	andwf	___ftdiv@sign& (0+255),f,b
  4475                           
  4476                           ; BSR set to: 0
  4477   000FB2  8F61               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  4478                           
  4479                           ; BSR set to: 0
  4480   000FB4  0EFF               	movlw	255
  4481   000FB6  1760               	andwf	___ftdiv@f1& (0+255),f,b
  4482   000FB8  0EFF               	movlw	255
  4483   000FBA  1761               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  4484   000FBC  0E00               	movlw	0
  4485   000FBE  1762               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  4486                           
  4487                           ; BSR set to: 0
  4488   000FC0  8F64               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  4489                           
  4490                           ; BSR set to: 0
  4491   000FC2  0EFF               	movlw	255
  4492   000FC4  1763               	andwf	___ftdiv@f2& (0+255),f,b
  4493   000FC6  0EFF               	movlw	255
  4494   000FC8  1764               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  4495   000FCA  0E00               	movlw	0
  4496   000FCC  1765               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  4497                           
  4498                           ; BSR set to: 0
  4499   000FCE  0E18               	movlw	24
  4500   000FD0  6F69               	movwf	___ftdiv@cntr& (0+255),b
  4501   000FD2                     l4069:
  4502                           
  4503                           ; BSR set to: 0
  4504   000FD2  90D8               	bcf	status,0,c
  4505   000FD4  376A               	rlcf	___ftdiv@f3& (0+255),f,b
  4506   000FD6  376B               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  4507   000FD8  376C               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  4508                           
  4509                           ; BSR set to: 0
  4510   000FDA  5163               	movf	___ftdiv@f2& (0+255),w,b
  4511   000FDC  5D60               	subwf	___ftdiv@f1& (0+255),w,b
  4512   000FDE  5164               	movf	(___ftdiv@f2+1)& (0+255),w,b
  4513   000FE0  5961               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  4514   000FE2  5165               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4515   000FE4  5962               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  4516   000FE6  A0D8               	btfss	status,0,c
  4517   000FE8  D007               	goto	l771
  4518                           
  4519                           ; BSR set to: 0
  4520   000FEA  5163               	movf	___ftdiv@f2& (0+255),w,b
  4521   000FEC  5F60               	subwf	___ftdiv@f1& (0+255),f,b
  4522   000FEE  5164               	movf	(___ftdiv@f2+1)& (0+255),w,b
  4523   000FF0  5B61               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  4524   000FF2  5165               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4525   000FF4  5B62               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  4526                           
  4527                           ; BSR set to: 0
  4528   000FF6  816A               	bsf	___ftdiv@f3& (0+255),0,b
  4529   000FF8                     l771:
  4530                           
  4531                           ; BSR set to: 0
  4532   000FF8  90D8               	bcf	status,0,c
  4533   000FFA  3760               	rlcf	___ftdiv@f1& (0+255),f,b
  4534   000FFC  3761               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  4535   000FFE  3762               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  4536                           
  4537                           ; BSR set to: 0
  4538   001000  2F69               	decfsz	___ftdiv@cntr& (0+255),f,b
  4539   001002  D7E7               	goto	l4069
  4540                           
  4541                           ; BSR set to: 0
  4542   001004  C06A  F017         	movff	___ftdiv@f3,___ftpack@arg
  4543   001008  C06B  F018         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4544   00100C  C06C  F019         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4545   001010  C06D  F01A         	movff	___ftdiv@exp,___ftpack@exp
  4546   001014  C06E  F01B         	movff	___ftdiv@sign,___ftpack@sign
  4547   001018  ECB1  F009         	call	___ftpack	;wreg free
  4548   00101C  C017  F060         	movff	?___ftpack,?___ftdiv
  4549   001020  C018  F061         	movff	?___ftpack+1,?___ftdiv+1
  4550   001024  C019  F062         	movff	?___ftpack+2,?___ftdiv+2
  4551   001028  0012               	return		;funcret
  4552   00102A                     __end_of___ftdiv:
  4553                           	callstack 0
  4554                           
  4555 ;; *************** function ___ftpack *****************
  4556 ;; Defined at:
  4557 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\float.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;  arg             3   22[COMRAM] unsigned um
  4560 ;;  exp             1   25[COMRAM] unsigned char 
  4561 ;;  sign            1   26[COMRAM] unsigned char 
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;		None
  4564 ;; Return value:  Size  Location     Type
  4565 ;;                  3   22[COMRAM] float 
  4566 ;; Registers used:
  4567 ;;		wreg, status,2, status,0
  4568 ;; Tracked objects:
  4569 ;;		On entry : 0/0
  4570 ;;		On exit  : 0/0
  4571 ;;		Unchanged: 0/0
  4572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4573 ;;      Params:         5       0       0       0       0       0       0       0       0
  4574 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4575 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4576 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4577 ;;Total ram usage:        8 bytes
  4578 ;; Hardware stack levels used: 1
  4579 ;; Hardware stack levels required when called: 7
  4580 ;; This function calls:
  4581 ;;		Nothing
  4582 ;; This function is called by:
  4583 ;;		___ftdiv
  4584 ;;		___ftmul
  4585 ;;		___lwtoft
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           	psect	text30
  4590   001362                     __ptext30:
  4591                           	callstack 0
  4592   001362                     ___ftpack:
  4593                           	callstack 21
  4594                           
  4595                           ;incstack = 0
  4596   001362  501A               	movf	___ftpack@exp^0,w,c
  4597   001364  B4D8               	btfsc	status,2,c
  4598   001366  D005               	goto	u2930
  4599   001368  5017               	movf	___ftpack@arg^0,w,c
  4600   00136A  1018               	iorwf	(___ftpack@arg+1)^0,w,c
  4601   00136C  1019               	iorwf	(___ftpack@arg+2)^0,w,c
  4602   00136E  A4D8               	btfss	status,2,c
  4603   001370  D00C               	goto	l4001
  4604   001372                     u2930:
  4605   001372  0E00               	movlw	0
  4606   001374  6E17               	movwf	?___ftpack^0,c
  4607   001376  0E00               	movlw	0
  4608   001378  6E18               	movwf	(?___ftpack+1)^0,c
  4609   00137A  0E00               	movlw	0
  4610   00137C  6E19               	movwf	(?___ftpack+2)^0,c
  4611   00137E  0012               	return	
  4612   001380                     l3999:
  4613   001380  2A1A               	incf	___ftpack@exp^0,f,c
  4614   001382  90D8               	bcf	status,0,c
  4615   001384  3219               	rrcf	(___ftpack@arg+2)^0,f,c
  4616   001386  3218               	rrcf	(___ftpack@arg+1)^0,f,c
  4617   001388  3217               	rrcf	___ftpack@arg^0,f,c
  4618   00138A                     l4001:
  4619   00138A  0E00               	movlw	0
  4620   00138C  1417               	andwf	___ftpack@arg^0,w,c
  4621   00138E  6E1C               	movwf	??___ftpack^0,c
  4622   001390  0E00               	movlw	0
  4623   001392  1418               	andwf	(___ftpack@arg+1)^0,w,c
  4624   001394  6E1D               	movwf	(??___ftpack+1)^0,c
  4625   001396  0EFE               	movlw	254
  4626   001398  1419               	andwf	(___ftpack@arg+2)^0,w,c
  4627   00139A  6E1E               	movwf	(??___ftpack+2)^0,c
  4628   00139C  501C               	movf	??___ftpack^0,w,c
  4629   00139E  101D               	iorwf	(??___ftpack+1)^0,w,c
  4630   0013A0  101E               	iorwf	(??___ftpack+2)^0,w,c
  4631   0013A2  B4D8               	btfsc	status,2,c
  4632   0013A4  D00C               	goto	l4007
  4633   0013A6  D7EC               	goto	l3999
  4634   0013A8                     l4003:
  4635   0013A8  2A1A               	incf	___ftpack@exp^0,f,c
  4636   0013AA  0E01               	movlw	1
  4637   0013AC  2617               	addwf	___ftpack@arg^0,f,c
  4638   0013AE  0E00               	movlw	0
  4639   0013B0  2218               	addwfc	(___ftpack@arg+1)^0,f,c
  4640   0013B2  0E00               	movlw	0
  4641   0013B4  2219               	addwfc	(___ftpack@arg+2)^0,f,c
  4642   0013B6  90D8               	bcf	status,0,c
  4643   0013B8  3219               	rrcf	(___ftpack@arg+2)^0,f,c
  4644   0013BA  3218               	rrcf	(___ftpack@arg+1)^0,f,c
  4645   0013BC  3217               	rrcf	___ftpack@arg^0,f,c
  4646   0013BE                     l4007:
  4647   0013BE  0E00               	movlw	0
  4648   0013C0  1417               	andwf	___ftpack@arg^0,w,c
  4649   0013C2  6E1C               	movwf	??___ftpack^0,c
  4650   0013C4  0E00               	movlw	0
  4651   0013C6  1418               	andwf	(___ftpack@arg+1)^0,w,c
  4652   0013C8  6E1D               	movwf	(??___ftpack+1)^0,c
  4653   0013CA  0EFF               	movlw	255
  4654   0013CC  1419               	andwf	(___ftpack@arg+2)^0,w,c
  4655   0013CE  6E1E               	movwf	(??___ftpack+2)^0,c
  4656   0013D0  501C               	movf	??___ftpack^0,w,c
  4657   0013D2  101D               	iorwf	(??___ftpack+1)^0,w,c
  4658   0013D4  101E               	iorwf	(??___ftpack+2)^0,w,c
  4659   0013D6  B4D8               	btfsc	status,2,c
  4660   0013D8  D006               	goto	l4011
  4661   0013DA  D7E6               	goto	l4003
  4662   0013DC                     l4009:
  4663   0013DC  061A               	decf	___ftpack@exp^0,f,c
  4664   0013DE  90D8               	bcf	status,0,c
  4665   0013E0  3617               	rlcf	___ftpack@arg^0,f,c
  4666   0013E2  3618               	rlcf	(___ftpack@arg+1)^0,f,c
  4667   0013E4  3619               	rlcf	(___ftpack@arg+2)^0,f,c
  4668   0013E6                     l4011:
  4669   0013E6  BE18               	btfsc	(___ftpack@arg+1)^0,7,c
  4670   0013E8  D003               	goto	u2970
  4671   0013EA  0E02               	movlw	2
  4672   0013EC  601A               	cpfslt	___ftpack@exp^0,c
  4673   0013EE  D7F6               	goto	l4009
  4674   0013F0                     u2970:
  4675   0013F0  A01A               	btfss	___ftpack@exp^0,0,c
  4676   0013F2  9E18               	bcf	(___ftpack@arg+1)^0,7,c
  4677   0013F4  90D8               	bcf	status,0,c
  4678   0013F6  321A               	rrcf	___ftpack@exp^0,f,c
  4679   0013F8  501A               	movf	___ftpack@exp^0,w,c
  4680   0013FA  1219               	iorwf	(___ftpack@arg+2)^0,f,c
  4681   0013FC  501B               	movf	___ftpack@sign^0,w,c
  4682   0013FE  A4D8               	btfss	status,2,c
  4683   001400  8E19               	bsf	(___ftpack@arg+2)^0,7,c
  4684   001402  C017  F017         	movff	___ftpack@arg,?___ftpack
  4685   001406  C018  F018         	movff	___ftpack@arg+1,?___ftpack+1
  4686   00140A  C019  F019         	movff	___ftpack@arg+2,?___ftpack+2
  4687   00140E  0012               	return		;funcret
  4688   001410                     __end_of___ftpack:
  4689                           	callstack 0
  4690                           
  4691 ;; *************** function _Transmitir *****************
  4692 ;; Defined at:
  4693 ;;		line 351 in file "Lab5.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;  adcVal          2   45[COMRAM] unsigned int 
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;  i               2   50[BANK0 ] int 
  4698 ;;  buffer         50    0[BANK0 ] unsigned char [50]
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  1    wreg      void 
  4701 ;; Registers used:
  4702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4703 ;; Tracked objects:
  4704 ;;		On entry : 3F/0
  4705 ;;		On exit  : 3F/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4708 ;;      Params:         2       0       0       0       0       0       0       0       0
  4709 ;;      Locals:         0      52       0       0       0       0       0       0       0
  4710 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4711 ;;      Totals:         2      52       0       0       0       0       0       0       0
  4712 ;;Total ram usage:       54 bytes
  4713 ;; Hardware stack levels used: 1
  4714 ;; Hardware stack levels required when called: 9
  4715 ;; This function calls:
  4716 ;;		_sprintf
  4717 ;; This function is called by:
  4718 ;;		_ADC
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722                           	psect	text31
  4723   001C90                     __ptext31:
  4724                           	callstack 0
  4725   001C90                     _Transmitir:
  4726                           	callstack 20
  4727                           
  4728                           ; BSR set to: 0
  4729                           ;Lab5.c: 352: char buffer[50];;Lab5.c: 355: sprintf(buffer, "Valor de ADC: %u\r", adcVal
      +                          );
  4730                           
  4731                           ;incstack = 0
  4732   001C90  0E60               	movlw	low Transmitir@buffer
  4733   001C92  6E23               	movwf	sprintf@sp^0,c
  4734   001C94  0E0B               	movlw	low STR_17
  4735   001C96  6E24               	movwf	sprintf@f^0,c
  4736   001C98  C02E  F025         	movff	Transmitir@adcVal,?_sprintf+2
  4737   001C9C  C02F  F026         	movff	Transmitir@adcVal+1,?_sprintf+3
  4738   001CA0  EC2E  F006         	call	_sprintf	;wreg free
  4739                           
  4740                           ;Lab5.c: 358: for (int i = 0; buffer[i] != '\0'; i++) {
  4741   001CA4  0E00               	movlw	0
  4742   001CA6  0100               	movlb	0	; () banked
  4743   001CA8  6F93               	movwf	(Transmitir@i+1)& (0+255),b
  4744   001CAA  0E00               	movlw	0
  4745   001CAC  6F92               	movwf	Transmitir@i& (0+255),b
  4746   001CAE  D00A               	goto	l4035
  4747   001CB0                     l342:
  4748                           
  4749                           ; BSR set to: 0
  4750   001CB0  A2AC               	btfss	4012,1,c	;volatile
  4751   001CB2  D7FE               	goto	l342
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;Lab5.c: 360: TXREG = buffer[i];
  4755   001CB4  5192               	movf	Transmitir@i& (0+255),w,b
  4756   001CB6  0F60               	addlw	low Transmitir@buffer
  4757   001CB8  6ED9               	movwf	fsr2l,c
  4758   001CBA  6ADA               	clrf	fsr2h,c
  4759   001CBC  50DF               	movf	indf2,w,c
  4760   001CBE  6EAD               	movwf	173,c	;volatile
  4761                           
  4762                           ; BSR set to: 0
  4763   001CC0  4B92               	infsnz	Transmitir@i& (0+255),f,b
  4764   001CC2  2B93               	incf	(Transmitir@i+1)& (0+255),f,b
  4765   001CC4                     l4035:
  4766                           
  4767                           ; BSR set to: 0
  4768   001CC4  5192               	movf	Transmitir@i& (0+255),w,b
  4769   001CC6  0F60               	addlw	low Transmitir@buffer
  4770   001CC8  6ED9               	movwf	fsr2l,c
  4771   001CCA  6ADA               	clrf	fsr2h,c
  4772   001CCC  50DF               	movf	indf2,w,c
  4773   001CCE  B4D8               	btfsc	status,2,c
  4774   001CD0  0012               	return	
  4775   001CD2  D7EE               	goto	l342
  4776   001CD4                     __end_of_Transmitir:
  4777                           	callstack 0
  4778                           
  4779 ;; *************** function _sprintf *****************
  4780 ;; Defined at:
  4781 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\doprnt.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;  sp              1   34[COMRAM] PTR unsigned char 
  4784 ;;		 -> Transmitir@buffer(50), 
  4785 ;;  f               1   35[COMRAM] PTR const unsigned char 
  4786 ;;		 -> STR_17(18), 
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;  tmpval          4    0        struct .
  4789 ;;  val             2   41[COMRAM] unsigned int 
  4790 ;;  cp              2    0        PTR const unsigned char 
  4791 ;;  len             2    0        unsigned int 
  4792 ;;  c               1   44[COMRAM] unsigned char 
  4793 ;;  prec            1   43[COMRAM] char 
  4794 ;;  ap              1   40[COMRAM] PTR void [1]
  4795 ;;		 -> ?_sprintf(2), 
  4796 ;;  flag            1   39[COMRAM] unsigned char 
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  2   34[COMRAM] int 
  4799 ;; Registers used:
  4800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4801 ;; Tracked objects:
  4802 ;;		On entry : 3F/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4806 ;;      Params:         4       0       0       0       0       0       0       0       0
  4807 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4808 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4809 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4810 ;;Total ram usage:       11 bytes
  4811 ;; Hardware stack levels used: 1
  4812 ;; Hardware stack levels required when called: 8
  4813 ;; This function calls:
  4814 ;;		___lwdiv
  4815 ;;		___lwmod
  4816 ;; This function is called by:
  4817 ;;		_Transmitir
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           	psect	text32
  4822   000C5C                     __ptext32:
  4823                           	callstack 0
  4824   000C5C                     _sprintf:
  4825                           	callstack 20
  4826                           
  4827                           ; BSR set to: 0
  4828                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;incstack = 0
  4832   000C5C  0E25               	movlw	low (?_sprintf+2)
  4833   000C5E  6E29               	movwf	sprintf@ap^0,c
  4834                           
  4835                           ;doprnt.c: 553: while((c = *f++)) {
  4836   000C60  D072               	goto	u2900
  4837   000C62                     l3947:
  4838                           
  4839                           ;doprnt.c: 555: if(c != '%')
  4840   000C62  0E25               	movlw	37
  4841   000C64  182D               	xorwf	sprintf@c^0,w,c
  4842   000C66  B4D8               	btfsc	status,2,c
  4843   000C68  D007               	goto	l413
  4844                           
  4845                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  4846   000C6A  5023               	movf	sprintf@sp^0,w,c
  4847   000C6C  6ED9               	movwf	fsr2l,c
  4848   000C6E  6ADA               	clrf	fsr2h,c
  4849   000C70  C02D  FFDF         	movff	sprintf@c,indf2
  4850   000C74  2A23               	incf	sprintf@sp^0,f,c
  4851                           
  4852                           ;doprnt.c: 559: continue;
  4853   000C76  D067               	goto	u2900
  4854   000C78                     l413:
  4855                           
  4856                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  4857   000C78  6A28               	clrf	sprintf@flag^0,c
  4858                           
  4859                           ;doprnt.c: 661: switch(c = *f++) {
  4860   000C7A  D003               	goto	l3957
  4861   000C7C                     l3953:
  4862                           
  4863                           ;doprnt.c: 844: flag |= 0xC0;
  4864   000C7C  0EC0               	movlw	192
  4865   000C7E  1228               	iorwf	sprintf@flag^0,f,c
  4866                           
  4867                           ;doprnt.c: 845: break;
  4868   000C80  D012               	goto	l3959
  4869   000C82                     l3957:
  4870   000C82  2A24               	incf	sprintf@f^0,f,c
  4871   000C84  0424               	decf	sprintf@f^0,w,c
  4872   000C86  6E27               	movwf	??_sprintf^0,c
  4873   000C88  C027  FFF6         	movff	??_sprintf,tblptrl
  4874   000C8C                     	if	1	;There is more than 1 active tblptr byte
  4875   000C8C  0E08               	movlw	high __smallconst
  4876   000C8E  6EF7               	movwf	tblptrh,c
  4877   000C90                     	endif
  4878   000C90                     	if	0	;tblptru may be non-zero
  4879   000C90                     	endif
  4880   000C90                     	if	0	;tblptru may be non-zero
  4881   000C90                     	endif
  4882   000C90  0008               	tblrd		*
  4883   000C92  CFF5 F02D          	movff	tablat,sprintf@c
  4884   000C96  502D               	movf	sprintf@c^0,w,c
  4885                           
  4886                           ; Switch size 1, requested type "simple"
  4887                           ; Number of cases is 2, Range of values is 0 to 117
  4888                           ; switch strategies available:
  4889                           ; Name         Instructions Cycles
  4890                           ; simple_byte            7     4 (average)
  4891                           ;	Chosen strategy is simple_byte
  4892   000C98  0A00               	xorlw	0	; case 0
  4893   000C9A  B4D8               	btfsc	status,2,c
  4894   000C9C  D061               	goto	u2910
  4895   000C9E  0A75               	xorlw	117	; case 117
  4896   000CA0  B4D8               	btfsc	status,2,c
  4897   000CA2  D7EC               	goto	l3953
  4898   000CA4  D050               	goto	u2900
  4899   000CA6                     l3959:
  4900                           
  4901                           ;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (uns
      +                          igned)0));
  4902   000CA6  5029               	movf	sprintf@ap^0,w,c
  4903   000CA8  6ED9               	movwf	fsr2l,c
  4904   000CAA  6ADA               	clrf	fsr2h,c
  4905   000CAC  CFDE F02A          	movff	postinc2,sprintf@val
  4906   000CB0  CFDD F02B          	movff	postdec2,sprintf@val+1
  4907   000CB4  0E02               	movlw	2
  4908   000CB6  2629               	addwf	sprintf@ap^0,f,c
  4909                           
  4910                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  4911   000CB8  0E01               	movlw	1
  4912   000CBA  6E2D               	movwf	sprintf@c^0,c
  4913   000CBC                     l3969:
  4914                           
  4915                           ;doprnt.c: 1332: if(val < dpowers[c])
  4916   000CBC  502D               	movf	sprintf@c^0,w,c
  4917   000CBE  0D02               	mullw	2
  4918   000CC0  50F3               	movf	243,w,c
  4919   000CC2  0F01               	addlw	low _dpowers
  4920   000CC4  6E27               	movwf	??_sprintf^0,c
  4921   000CC6  C027  FFF6         	movff	??_sprintf,tblptrl
  4922   000CCA                     	if	1	;There is more than 1 active tblptr byte
  4923   000CCA  0E08               	movlw	high __smallconst
  4924   000CCC  6EF7               	movwf	tblptrh,c
  4925   000CCE                     	endif
  4926   000CCE                     	if	0	;tblptru may be non-zero
  4927   000CCE                     	endif
  4928   000CCE                     	if	0	;tblptru may be non-zero
  4929   000CCE                     	endif
  4930   000CCE  0009               	tblrd		*+
  4931   000CD0  50F5               	movf	tablat,w,c
  4932   000CD2  5C2A               	subwf	sprintf@val^0,w,c
  4933   000CD4  0009               	tblrd		*+
  4934   000CD6  50F5               	movf	tablat,w,c
  4935   000CD8  582B               	subwfb	(sprintf@val+1)^0,w,c
  4936   000CDA  A0D8               	btfss	status,0,c
  4937   000CDC  D005               	goto	u2890
  4938   000CDE  2A2D               	incf	sprintf@c^0,f,c
  4939   000CE0  0E05               	movlw	5
  4940   000CE2  182D               	xorwf	sprintf@c^0,w,c
  4941   000CE4  A4D8               	btfss	status,2,c
  4942   000CE6  D7EA               	goto	l3969
  4943   000CE8                     u2890:
  4944                           
  4945                           ;doprnt.c: 1448: {;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  4946   000CE8  C02D  F02C         	movff	sprintf@c,sprintf@prec
  4947                           
  4948                           ;doprnt.c: 1500: while(prec--) {
  4949   000CEC  D028               	goto	l3983
  4950   000CEE                     l3977:
  4951                           
  4952                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  4953   000CEE  502C               	movf	sprintf@prec^0,w,c
  4954   000CF0  0D02               	mullw	2
  4955   000CF2  50F3               	movf	243,w,c
  4956   000CF4  0F01               	addlw	low _dpowers
  4957   000CF6  6E27               	movwf	??_sprintf^0,c
  4958   000CF8  C027  FFF6         	movff	??_sprintf,tblptrl
  4959   000CFC                     	if	1	;There is more than 1 active tblptr byte
  4960   000CFC  0E08               	movlw	high __smallconst
  4961   000CFE  6EF7               	movwf	tblptrh,c
  4962   000D00                     	endif
  4963   000D00                     	if	0	;tblptru may be non-zero
  4964   000D00                     	endif
  4965   000D00                     	if	0	;tblptru may be non-zero
  4966   000D00                     	endif
  4967   000D00  0009               	tblrd		*+
  4968   000D02  CFF5 F019          	movff	tablat,___lwdiv@divisor
  4969   000D06  000A               	tblrd		*-
  4970   000D08  CFF5 F01A          	movff	tablat,___lwdiv@divisor+1
  4971   000D0C  C02A  F017         	movff	sprintf@val,___lwdiv@dividend
  4972   000D10  C02B  F018         	movff	sprintf@val+1,___lwdiv@dividend+1
  4973   000D14  EC90  F00D         	call	___lwdiv	;wreg free
  4974   000D18  C017  F01E         	movff	?___lwdiv,___lwmod@dividend
  4975   000D1C  C018  F01F         	movff	?___lwdiv+1,___lwmod@dividend+1
  4976   000D20  0E00               	movlw	0
  4977   000D22  6E21               	movwf	(___lwmod@divisor+1)^0,c
  4978   000D24  0E0A               	movlw	10
  4979   000D26  6E20               	movwf	___lwmod@divisor^0,c
  4980   000D28  EC6A  F00E         	call	___lwmod	;wreg free
  4981   000D2C  501E               	movf	?___lwmod^0,w,c
  4982   000D2E  0F30               	addlw	48
  4983   000D30  6E2D               	movwf	sprintf@c^0,c
  4984                           
  4985                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  4986   000D32  5023               	movf	sprintf@sp^0,w,c
  4987   000D34  6ED9               	movwf	fsr2l,c
  4988   000D36  6ADA               	clrf	fsr2h,c
  4989   000D38  C02D  FFDF         	movff	sprintf@c,indf2
  4990   000D3C  2A23               	incf	sprintf@sp^0,f,c
  4991   000D3E                     l3983:
  4992   000D3E  062C               	decf	sprintf@prec^0,f,c
  4993   000D40  282C               	incf	sprintf@prec^0,w,c
  4994   000D42  A4D8               	btfss	status,2,c
  4995   000D44  D7D4               	goto	l3977
  4996   000D46                     u2900:
  4997   000D46  2A24               	incf	sprintf@f^0,f,c
  4998   000D48  0424               	decf	sprintf@f^0,w,c
  4999   000D4A  6E27               	movwf	??_sprintf^0,c
  5000   000D4C  C027  FFF6         	movff	??_sprintf,tblptrl
  5001   000D50                     	if	1	;There is more than 1 active tblptr byte
  5002   000D50  0E08               	movlw	high __smallconst
  5003   000D52  6EF7               	movwf	tblptrh,c
  5004   000D54                     	endif
  5005   000D54                     	if	0	;tblptru may be non-zero
  5006   000D54                     	endif
  5007   000D54                     	if	0	;tblptru may be non-zero
  5008   000D54                     	endif
  5009   000D54  0008               	tblrd		*
  5010   000D56  CFF5 F02D          	movff	tablat,sprintf@c
  5011   000D5A  502D               	movf	sprintf@c^0,w,c
  5012   000D5C  A4D8               	btfss	status,2,c
  5013   000D5E  D781               	goto	l3947
  5014   000D60                     u2910:
  5015                           
  5016                           ;doprnt.c: 1564: *sp = 0;
  5017   000D60  5023               	movf	sprintf@sp^0,w,c
  5018   000D62  6ED9               	movwf	fsr2l,c
  5019   000D64  6ADA               	clrf	fsr2h,c
  5020   000D66  6ADF               	clrf	indf2,c
  5021   000D68  0012               	return		;funcret
  5022   000D6A                     __end_of_sprintf:
  5023                           	callstack 0
  5024                           
  5025 ;; *************** function ___lwmod *****************
  5026 ;; Defined at:
  5027 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lwmod.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  dividend        2   29[COMRAM] unsigned int 
  5030 ;;  divisor         2   31[COMRAM] unsigned int 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;  counter         1   33[COMRAM] unsigned char 
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  2   29[COMRAM] unsigned int 
  5035 ;; Registers used:
  5036 ;;		wreg, status,2, status,0
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5042 ;;      Params:         4       0       0       0       0       0       0       0       0
  5043 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5045 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5046 ;;Total ram usage:        5 bytes
  5047 ;; Hardware stack levels used: 1
  5048 ;; Hardware stack levels required when called: 7
  5049 ;; This function calls:
  5050 ;;		Nothing
  5051 ;; This function is called by:
  5052 ;;		_sprintf
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           	psect	text33
  5057   001CD4                     __ptext33:
  5058                           	callstack 0
  5059   001CD4                     ___lwmod:
  5060                           	callstack 20
  5061                           
  5062                           ;incstack = 0
  5063   001CD4  5020               	movf	___lwmod@divisor^0,w,c
  5064   001CD6  1021               	iorwf	(___lwmod@divisor+1)^0,w,c
  5065   001CD8  B4D8               	btfsc	status,2,c
  5066   001CDA  D018               	goto	l919
  5067   001CDC  0E01               	movlw	1
  5068   001CDE  6E22               	movwf	___lwmod@counter^0,c
  5069   001CE0  D004               	goto	l3935
  5070   001CE2                     l3933:
  5071   001CE2  90D8               	bcf	status,0,c
  5072   001CE4  3620               	rlcf	___lwmod@divisor^0,f,c
  5073   001CE6  3621               	rlcf	(___lwmod@divisor+1)^0,f,c
  5074   001CE8  2A22               	incf	___lwmod@counter^0,f,c
  5075   001CEA                     l3935:
  5076   001CEA  AE21               	btfss	(___lwmod@divisor+1)^0,7,c
  5077   001CEC  D7FA               	goto	l3933
  5078   001CEE                     u2850:
  5079   001CEE  5020               	movf	___lwmod@divisor^0,w,c
  5080   001CF0  5C1E               	subwf	___lwmod@dividend^0,w,c
  5081   001CF2  5021               	movf	(___lwmod@divisor+1)^0,w,c
  5082   001CF4  581F               	subwfb	(___lwmod@dividend+1)^0,w,c
  5083   001CF6  A0D8               	btfss	status,0,c
  5084   001CF8  D004               	goto	l3941
  5085   001CFA  5020               	movf	___lwmod@divisor^0,w,c
  5086   001CFC  5E1E               	subwf	___lwmod@dividend^0,f,c
  5087   001CFE  5021               	movf	(___lwmod@divisor+1)^0,w,c
  5088   001D00  5A1F               	subwfb	(___lwmod@dividend+1)^0,f,c
  5089   001D02                     l3941:
  5090   001D02  90D8               	bcf	status,0,c
  5091   001D04  3221               	rrcf	(___lwmod@divisor+1)^0,f,c
  5092   001D06  3220               	rrcf	___lwmod@divisor^0,f,c
  5093   001D08  2E22               	decfsz	___lwmod@counter^0,f,c
  5094   001D0A  D7F1               	goto	u2850
  5095   001D0C                     l919:
  5096   001D0C  C01E  F01E         	movff	___lwmod@dividend,?___lwmod
  5097   001D10  C01F  F01F         	movff	___lwmod@dividend+1,?___lwmod+1
  5098   001D14  0012               	return		;funcret
  5099   001D16                     __end_of___lwmod:
  5100                           	callstack 0
  5101                           
  5102 ;; *************** function ___lwdiv *****************
  5103 ;; Defined at:
  5104 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lwdiv.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;  dividend        2   22[COMRAM] unsigned int 
  5107 ;;  divisor         2   24[COMRAM] unsigned int 
  5108 ;; Auto vars:     Size  Location     Type
  5109 ;;  quotient        2   27[COMRAM] unsigned int 
  5110 ;;  counter         1   26[COMRAM] unsigned char 
  5111 ;; Return value:  Size  Location     Type
  5112 ;;                  2   22[COMRAM] unsigned int 
  5113 ;; Registers used:
  5114 ;;		wreg, status,2, status,0
  5115 ;; Tracked objects:
  5116 ;;		On entry : 0/0
  5117 ;;		On exit  : 0/0
  5118 ;;		Unchanged: 0/0
  5119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5120 ;;      Params:         4       0       0       0       0       0       0       0       0
  5121 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5123 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5124 ;;Total ram usage:        7 bytes
  5125 ;; Hardware stack levels used: 1
  5126 ;; Hardware stack levels required when called: 7
  5127 ;; This function calls:
  5128 ;;		Nothing
  5129 ;; This function is called by:
  5130 ;;		_sprintf
  5131 ;; This function uses a non-reentrant model
  5132 ;;
  5133                           
  5134                           	psect	text34
  5135   001B20                     __ptext34:
  5136                           	callstack 0
  5137   001B20                     ___lwdiv:
  5138                           	callstack 20
  5139                           
  5140                           ;incstack = 0
  5141   001B20  0E00               	movlw	0
  5142   001B22  6E1D               	movwf	(___lwdiv@quotient+1)^0,c
  5143   001B24  0E00               	movlw	0
  5144   001B26  6E1C               	movwf	___lwdiv@quotient^0,c
  5145   001B28  5019               	movf	___lwdiv@divisor^0,w,c
  5146   001B2A  101A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5147   001B2C  B4D8               	btfsc	status,2,c
  5148   001B2E  D01C               	goto	l909
  5149   001B30  0E01               	movlw	1
  5150   001B32  6E1B               	movwf	___lwdiv@counter^0,c
  5151   001B34  D004               	goto	l3915
  5152   001B36                     l3913:
  5153   001B36  90D8               	bcf	status,0,c
  5154   001B38  3619               	rlcf	___lwdiv@divisor^0,f,c
  5155   001B3A  361A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5156   001B3C  2A1B               	incf	___lwdiv@counter^0,f,c
  5157   001B3E                     l3915:
  5158   001B3E  AE1A               	btfss	(___lwdiv@divisor+1)^0,7,c
  5159   001B40  D7FA               	goto	l3913
  5160   001B42                     u2820:
  5161   001B42  90D8               	bcf	status,0,c
  5162   001B44  361C               	rlcf	___lwdiv@quotient^0,f,c
  5163   001B46  361D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5164   001B48  5019               	movf	___lwdiv@divisor^0,w,c
  5165   001B4A  5C17               	subwf	___lwdiv@dividend^0,w,c
  5166   001B4C  501A               	movf	(___lwdiv@divisor+1)^0,w,c
  5167   001B4E  5818               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5168   001B50  A0D8               	btfss	status,0,c
  5169   001B52  D005               	goto	l3925
  5170   001B54  5019               	movf	___lwdiv@divisor^0,w,c
  5171   001B56  5E17               	subwf	___lwdiv@dividend^0,f,c
  5172   001B58  501A               	movf	(___lwdiv@divisor+1)^0,w,c
  5173   001B5A  5A18               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5174   001B5C  801C               	bsf	___lwdiv@quotient^0,0,c
  5175   001B5E                     l3925:
  5176   001B5E  90D8               	bcf	status,0,c
  5177   001B60  321A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5178   001B62  3219               	rrcf	___lwdiv@divisor^0,f,c
  5179   001B64  2E1B               	decfsz	___lwdiv@counter^0,f,c
  5180   001B66  D7ED               	goto	u2820
  5181   001B68                     l909:
  5182   001B68  C01C  F017         	movff	___lwdiv@quotient,?___lwdiv
  5183   001B6C  C01D  F018         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5184   001B70  0012               	return		;funcret
  5185   001B72                     __end_of___lwdiv:
  5186                           	callstack 0
  5187                           
  5188 ;; *************** function _ISR *****************
  5189 ;; Defined at:
  5190 ;;		line 397 in file "Lab5.c"
  5191 ;; Parameters:    Size  Location     Type
  5192 ;;		None
  5193 ;; Auto vars:     Size  Location     Type
  5194 ;;		None
  5195 ;; Return value:  Size  Location     Type
  5196 ;;                  1    wreg      void 
  5197 ;; Registers used:
  5198 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5204 ;;      Params:         0       0       0       0       0       0       0       0       0
  5205 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5206 ;;      Temps:          7       0       0       0       0       0       0       0       0
  5207 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5208 ;;Total ram usage:        7 bytes
  5209 ;; Hardware stack levels used: 1
  5210 ;; Hardware stack levels required when called: 6
  5211 ;; This function calls:
  5212 ;;		_borrarTexto
  5213 ;;		_escribirDig
  5214 ;;		_fin
  5215 ;;		_luzFondo
  5216 ;;		_ok
  5217 ;;		i2_parEmerg
  5218 ;;		i2_reiCon
  5219 ;; This function is called by:
  5220 ;;		Interrupt level 2
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           	psect	intcode
  5225   000008                     __pintcode:
  5226                           	callstack 0
  5227   000008                     _ISR:
  5228                           	callstack 18
  5229                           
  5230                           ;incstack = 0
  5231   000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5232   00000A  ED9E  F005         	call	int_func,f	;refresh shadow registers
  5233                           
  5234                           	psect	intcode_body
  5235   000B3C                     __pintcode_body:
  5236                           	callstack 18
  5237   000B3C                     int_func:
  5238                           	callstack 18
  5239   000B3C  0006               	pop		; remove dummy address from shadow register refresh
  5240   000B3E  CFF3 F011          	movff	prodl,??_ISR+1
  5241   000B42  CFF4 F012          	movff	prodh,??_ISR+2
  5242   000B46  CFF6 F013          	movff	tblptrl,??_ISR+3
  5243   000B4A  CFF7 F014          	movff	tblptrh,??_ISR+4
  5244   000B4E  CFF8 F015          	movff	tblptru,??_ISR+5
  5245   000B52  CFF5 F016          	movff	tablat,??_ISR+6
  5246                           
  5247                           ;Lab5.c: 398: if(flagEmergencia==0){
  5248   000B56  503B               	movf	_flagEmergencia^0,w,c
  5249   000B58  103C               	iorwf	(_flagEmergencia+1)^0,w,c
  5250   000B5A  B4D8               	btfsc	status,2,c
  5251                           
  5252                           ;Lab5.c: 399: if(RBIF==1){
  5253   000B5C  A0F2               	btfss	4082,0,c	;volatile
  5254   000B5E  D070               	goto	i2l402
  5255                           
  5256                           ;Lab5.c: 400: if(PORTB!=0b11110000){
  5257   000B60  0EF0               	movlw	240
  5258   000B62  1881               	xorwf	129,w,c	;volatile
  5259   000B64  B4D8               	btfsc	status,2,c
  5260   000B66  D061               	goto	i2l396
  5261                           
  5262                           ;Lab5.c: 401: Tecla=0;
  5263   000B68  6A44               	clrf	_Tecla^0,c
  5264                           
  5265                           ;Lab5.c: 402: LATB=0b11111110;
  5266   000B6A  0EFE               	movlw	254
  5267   000B6C  6E8A               	movwf	138,c	;volatile
  5268                           
  5269                           ;Lab5.c: 403: if(RB4==0)escribirDig(1);
  5270   000B6E  B881               	btfsc	3969,4,c	;volatile
  5271   000B70  D004               	goto	i2l371
  5272   000B72  0E01               	movlw	1
  5273   000B74  ECB9  F00D         	call	_escribirDig
  5274   000B78  D058               	goto	i2l396
  5275   000B7A                     i2l371:
  5276                           
  5277                           ;Lab5.c: 404: else if(RB5==0)escribirDig(2);
  5278   000B7A  BA81               	btfsc	3969,5,c	;volatile
  5279   000B7C  D004               	goto	i2l373
  5280   000B7E  0E02               	movlw	2
  5281   000B80  ECB9  F00D         	call	_escribirDig
  5282   000B84  D052               	goto	i2l396
  5283   000B86                     i2l373:
  5284                           
  5285                           ;Lab5.c: 405: else if(RB6==0)escribirDig(3);
  5286   000B86  BC81               	btfsc	3969,6,c	;volatile
  5287   000B88  D004               	goto	i2l375
  5288   000B8A  0E03               	movlw	3
  5289   000B8C  ECB9  F00D         	call	_escribirDig
  5290   000B90  D04C               	goto	i2l396
  5291   000B92                     i2l375:
  5292                           
  5293                           ;Lab5.c: 406: else if(RB7==0)ok();
  5294   000B92  BE81               	btfsc	3969,7,c	;volatile
  5295   000B94  D003               	goto	i2l3861
  5296   000B96  EC05  F005         	call	_ok	;wreg free
  5297   000B9A  D047               	goto	i2l396
  5298   000B9C                     i2l3861:
  5299                           
  5300                           ;Lab5.c: 407: else{;Lab5.c: 408: LATB=0b11111101;
  5301   000B9C  0EFD               	movlw	253
  5302   000B9E  6E8A               	movwf	138,c	;volatile
  5303                           
  5304                           ;Lab5.c: 409: if(RB4==0)escribirDig(4);
  5305   000BA0  B881               	btfsc	3969,4,c	;volatile
  5306   000BA2  D004               	goto	i2l379
  5307   000BA4  0E04               	movlw	4
  5308   000BA6  ECB9  F00D         	call	_escribirDig
  5309   000BAA  D03F               	goto	i2l396
  5310   000BAC                     i2l379:
  5311                           
  5312                           ;Lab5.c: 410: else if(RB5==0)escribirDig(5);
  5313   000BAC  BA81               	btfsc	3969,5,c	;volatile
  5314   000BAE  D004               	goto	i2l381
  5315   000BB0  0E05               	movlw	5
  5316   000BB2  ECB9  F00D         	call	_escribirDig
  5317   000BB6  D039               	goto	i2l396
  5318   000BB8                     i2l381:
  5319                           
  5320                           ;Lab5.c: 411: else if(RB6==0)escribirDig(6);
  5321   000BB8  BC81               	btfsc	3969,6,c	;volatile
  5322   000BBA  D004               	goto	i2l383
  5323   000BBC  0E06               	movlw	6
  5324   000BBE  ECB9  F00D         	call	_escribirDig
  5325   000BC2  D033               	goto	i2l396
  5326   000BC4                     i2l383:
  5327                           
  5328                           ;Lab5.c: 412: else if(RB7==0)parEmerg();
  5329   000BC4  BE81               	btfsc	3969,7,c	;volatile
  5330   000BC6  D003               	goto	i2l3873
  5331   000BC8  EC94  F00F         	call	i2_parEmerg	;wreg free
  5332   000BCC  D02E               	goto	i2l396
  5333   000BCE                     i2l3873:
  5334                           
  5335                           ;Lab5.c: 413: else{;Lab5.c: 414: LATB=0b11111011;
  5336   000BCE  0EFB               	movlw	251
  5337   000BD0  6E8A               	movwf	138,c	;volatile
  5338                           
  5339                           ;Lab5.c: 415: if(RB4==0)escribirDig(7);
  5340   000BD2  B881               	btfsc	3969,4,c	;volatile
  5341   000BD4  D004               	goto	i2l387
  5342   000BD6  0E07               	movlw	7
  5343   000BD8  ECB9  F00D         	call	_escribirDig
  5344   000BDC  D026               	goto	i2l396
  5345   000BDE                     i2l387:
  5346                           
  5347                           ;Lab5.c: 416: else if(RB5==0)escribirDig(8);
  5348   000BDE  BA81               	btfsc	3969,5,c	;volatile
  5349   000BE0  D004               	goto	i2l389
  5350   000BE2  0E08               	movlw	8
  5351   000BE4  ECB9  F00D         	call	_escribirDig
  5352   000BE8  D020               	goto	i2l396
  5353   000BEA                     i2l389:
  5354                           
  5355                           ;Lab5.c: 417: else if(RB6==0)escribirDig(9);
  5356   000BEA  BC81               	btfsc	3969,6,c	;volatile
  5357   000BEC  D004               	goto	i2l391
  5358   000BEE  0E09               	movlw	9
  5359   000BF0  ECB9  F00D         	call	_escribirDig
  5360   000BF4  D01A               	goto	i2l396
  5361   000BF6                     i2l391:
  5362                           
  5363                           ;Lab5.c: 418: else if(RB7==0)borrarTexto();
  5364   000BF6  BE81               	btfsc	3969,7,c	;volatile
  5365   000BF8  D003               	goto	i2l3885
  5366   000BFA  ECC3  F00E         	call	_borrarTexto	;wreg free
  5367   000BFE  D015               	goto	i2l396
  5368   000C00                     i2l3885:
  5369                           
  5370                           ;Lab5.c: 419: else{;Lab5.c: 420: LATB=0b11110111;
  5371   000C00  0EF7               	movlw	247
  5372   000C02  6E8A               	movwf	138,c	;volatile
  5373                           
  5374                           ;Lab5.c: 421: if(RB4==0)reiCon();
  5375   000C04  B881               	btfsc	3969,4,c	;volatile
  5376   000C06  D003               	goto	i2l395
  5377   000C08  EC0E  F00D         	call	i2_reiCon	;wreg free
  5378   000C0C  D00E               	goto	i2l396
  5379   000C0E                     i2l395:
  5380                           
  5381                           ;Lab5.c: 422: else if(RB5==0)escribirDig(0);
  5382   000C0E  BA81               	btfsc	3969,5,c	;volatile
  5383   000C10  D004               	goto	i2l397
  5384   000C12  0E00               	movlw	0
  5385   000C14  ECB9  F00D         	call	_escribirDig
  5386   000C18  D008               	goto	i2l396
  5387   000C1A                     i2l397:
  5388                           
  5389                           ;Lab5.c: 423: else if(RB6==0)fin();
  5390   000C1A  BC81               	btfsc	3969,6,c	;volatile
  5391   000C1C  D003               	goto	i2l399
  5392   000C1E  EC97  F00A         	call	_fin	;wreg free
  5393   000C22  D003               	goto	i2l396
  5394   000C24                     i2l399:
  5395                           
  5396                           ;Lab5.c: 424: else if(RB7==0)luzFondo();
  5397   000C24  AE81               	btfss	3969,7,c	;volatile
  5398   000C26  ECDD  F00E         	call	_luzFondo	;wreg free
  5399   000C2A                     i2l396:
  5400                           
  5401                           ;Lab5.c: 425: };Lab5.c: 426: };Lab5.c: 427: };Lab5.c: 428: };Lab5.c: 430: LATB=0b1111000
      +                          0;
  5402   000C2A  0EF0               	movlw	240
  5403   000C2C  6E8A               	movwf	138,c	;volatile
  5404                           
  5405                           ;Lab5.c: 431: _delay((unsigned long)((50)*(1000000/4000.0)));
  5406   000C2E  0E11               	movlw	17
  5407   000C30  6E10               	movwf	??_ISR^0,c
  5408   000C32  0E3A               	movlw	58
  5409   000C34                     i2u338_47:
  5410   000C34  2EE8               	decfsz	wreg,f,c
  5411   000C36  D7FE               	bra	i2u338_47
  5412   000C38  2E10               	decfsz	??_ISR^0,f,c
  5413   000C3A  D7FC               	bra	i2u338_47
  5414   000C3C  D000               	nop2	
  5415                           
  5416                           ;Lab5.c: 432: RBIF=0;
  5417   000C3E  90F2               	bcf	4082,0,c	;volatile
  5418   000C40                     i2l402:
  5419   000C40  C016  FFF5         	movff	??_ISR+6,tablat
  5420   000C44  C015  FFF8         	movff	??_ISR+5,tblptru
  5421   000C48  C014  FFF7         	movff	??_ISR+4,tblptrh
  5422   000C4C  C013  FFF6         	movff	??_ISR+3,tblptrl
  5423   000C50  C012  FFF4         	movff	??_ISR+2,prodh
  5424   000C54  C011  FFF3         	movff	??_ISR+1,prodl
  5425   000C58  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5426   000C5A  0011               	retfie		f
  5427   000C5C                     __end_of_ISR:
  5428                           	callstack 0
  5429                           
  5430 ;; *************** function i2_reiCon *****************
  5431 ;; Defined at:
  5432 ;;		line 296 in file "Lab5.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;		None
  5435 ;; Auto vars:     Size  Location     Type
  5436 ;;		None
  5437 ;; Return value:  Size  Location     Type
  5438 ;;                  1    wreg      void 
  5439 ;; Registers used:
  5440 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5441 ;; Tracked objects:
  5442 ;;		On entry : 0/0
  5443 ;;		On exit  : 0/0
  5444 ;;		Unchanged: 0/0
  5445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5446 ;;      Params:         0       0       0       0       0       0       0       0       0
  5447 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5448 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5449 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5450 ;;Total ram usage:        0 bytes
  5451 ;; Hardware stack levels used: 1
  5452 ;; Hardware stack levels required when called: 4
  5453 ;; This function calls:
  5454 ;;		i2_BorraLCD
  5455 ;;		i2_DireccionaLCD
  5456 ;;		i2_EscribeLCD_n8
  5457 ;;		i2_MensajeLCD_Var
  5458 ;;		i2_RGB
  5459 ;;		i2_SEG
  5460 ;; This function is called by:
  5461 ;;		_ISR
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464                           
  5465                           	psect	text36
  5466   001A1C                     __ptext36:
  5467                           	callstack 0
  5468   001A1C                     i2_reiCon:
  5469                           	callstack 19
  5470                           
  5471                           ;Lab5.c: 297: piezFalt=cuenObj;
  5472                           
  5473                           ;incstack = 0
  5474   001A1C  C033  F031         	movff	_cuenObj,_piezFalt
  5475   001A20  C034  F032         	movff	_cuenObj+1,_piezFalt+1
  5476                           
  5477                           ;Lab5.c: 298: cuenta=0;
  5478   001A24  0E00               	movlw	0
  5479   001A26  6E3A               	movwf	(_cuenta+1)^0,c
  5480   001A28  0E00               	movlw	0
  5481   001A2A  6E39               	movwf	_cuenta^0,c
  5482                           
  5483                           ;Lab5.c: 299: a=0;
  5484   001A2C  0E00               	movlw	0
  5485   001A2E  6E38               	movwf	(_a+1)^0,c
  5486   001A30  0E00               	movlw	0
  5487   001A32  6E37               	movwf	_a^0,c
  5488                           
  5489                           ;Lab5.c: 300: b=0;
  5490   001A34  0E00               	movlw	0
  5491   001A36  6E36               	movwf	(_b+1)^0,c
  5492   001A38  0E00               	movlw	0
  5493   001A3A  6E35               	movwf	_b^0,c
  5494                           
  5495                           ;Lab5.c: 301: RGB();
  5496   001A3C  EC55  F00B         	call	i2_RGB	;wreg free
  5497                           
  5498                           ;Lab5.c: 302: SEG();
  5499   001A40  EC00  F010         	call	i2_SEG	;wreg free
  5500                           
  5501                           ;Lab5.c: 304: BorraLCD();
  5502   001A44  ECE5  F00F         	call	i2_BorraLCD	;wreg free
  5503                           
  5504                           ;Lab5.c: 305: MensajeLCD_Var("Faltan: ");
  5505   001A48  0E7A               	movlw	low STR_3
  5506   001A4A  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  5507   001A4C  EC4C  F00F         	call	i2_MensajeLCD_Var	;wreg free
  5508                           
  5509                           ;Lab5.c: 306: EscribeLCD_n8(piezFalt,2);
  5510   001A50  0E02               	movlw	2
  5511   001A52  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  5512   001A54  5031               	movf	_piezFalt^0,w,c
  5513   001A56  EC15  F008         	call	i2_EscribeLCD_n8
  5514                           
  5515                           ;Lab5.c: 307: DireccionaLCD(0xC0);
  5516   001A5A  0EC0               	movlw	192
  5517   001A5C  ECC5  F00F         	call	i2_DireccionaLCD
  5518                           
  5519                           ;Lab5.c: 308: MensajeLCD_Var("Objetivo: ");
  5520   001A60  0E64               	movlw	low STR_4
  5521   001A62  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  5522   001A64  EC4C  F00F         	call	i2_MensajeLCD_Var	;wreg free
  5523                           
  5524                           ;Lab5.c: 309: EscribeLCD_n8(cuenObj,2);
  5525   001A68  0E02               	movlw	2
  5526   001A6A  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  5527   001A6C  5033               	movf	_cuenObj^0,w,c
  5528   001A6E  EC15  F008         	call	i2_EscribeLCD_n8
  5529   001A72  0012               	return		;funcret
  5530   001A74                     __end_ofi2_reiCon:
  5531                           	callstack 0
  5532                           
  5533 ;; *************** function i2_parEmerg *****************
  5534 ;; Defined at:
  5535 ;;		line 286 in file "Lab5.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;		None
  5538 ;; Auto vars:     Size  Location     Type
  5539 ;;		None
  5540 ;; Return value:  Size  Location     Type
  5541 ;;                  1    wreg      void 
  5542 ;; Registers used:
  5543 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5544 ;; Tracked objects:
  5545 ;;		On entry : 0/0
  5546 ;;		On exit  : 0/0
  5547 ;;		Unchanged: 0/0
  5548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5549 ;;      Params:         0       0       0       0       0       0       0       0       0
  5550 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5551 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5552 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5553 ;;Total ram usage:        0 bytes
  5554 ;; Hardware stack levels used: 1
  5555 ;; Hardware stack levels required when called: 4
  5556 ;; This function calls:
  5557 ;;		i2_BorraLCD
  5558 ;;		i2_MensajeLCD_Var
  5559 ;; This function is called by:
  5560 ;;		_ISR
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           	psect	text37
  5565   001F28                     __ptext37:
  5566                           	callstack 0
  5567   001F28                     i2_parEmerg:
  5568                           	callstack 19
  5569                           
  5570                           ;Lab5.c: 287: LATE0 = 1;
  5571                           
  5572                           ;incstack = 0
  5573   001F28  808D               	bsf	3981,0,c	;volatile
  5574                           
  5575                           ;Lab5.c: 288: LATE1 = 0;
  5576   001F2A  928D               	bcf	3981,1,c	;volatile
  5577                           
  5578                           ;Lab5.c: 289: LATE2 = 0;
  5579   001F2C  948D               	bcf	3981,2,c	;volatile
  5580                           
  5581                           ;Lab5.c: 290: LATC2 = 0;
  5582   001F2E  948B               	bcf	3979,2,c	;volatile
  5583                           
  5584                           ;Lab5.c: 291: flagEmergencia = 1;
  5585   001F30  0E00               	movlw	0
  5586   001F32  6E3C               	movwf	(_flagEmergencia+1)^0,c
  5587   001F34  0E01               	movlw	1
  5588   001F36  6E3B               	movwf	_flagEmergencia^0,c
  5589                           
  5590                           ;Lab5.c: 292: BorraLCD();
  5591   001F38  ECE5  F00F         	call	i2_BorraLCD	;wreg free
  5592                           
  5593                           ;Lab5.c: 293: MensajeLCD_Var("Emergencia");
  5594   001F3C  0E6F               	movlw	low STR_12
  5595   001F3E  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  5596   001F40  EC4C  F00F         	call	i2_MensajeLCD_Var	;wreg free
  5597   001F44  0012               	return		;funcret
  5598   001F46                     __end_ofi2_parEmerg:
  5599                           	callstack 0
  5600                           
  5601 ;; *************** function _ok *****************
  5602 ;; Defined at:
  5603 ;;		line 158 in file "Lab5.c"
  5604 ;; Parameters:    Size  Location     Type
  5605 ;;		None
  5606 ;; Auto vars:     Size  Location     Type
  5607 ;;		None
  5608 ;; Return value:  Size  Location     Type
  5609 ;;                  1    wreg      void 
  5610 ;; Registers used:
  5611 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5612 ;; Tracked objects:
  5613 ;;		On entry : 0/0
  5614 ;;		On exit  : 0/0
  5615 ;;		Unchanged: 0/0
  5616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5617 ;;      Params:         0       0       0       0       0       0       0       0       0
  5618 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5619 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5620 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5621 ;;Total ram usage:        2 bytes
  5622 ;; Hardware stack levels used: 1
  5623 ;; Hardware stack levels required when called: 5
  5624 ;; This function calls:
  5625 ;;		_borrarTexto
  5626 ;;		i2_BorraLCD
  5627 ;;		i2_DireccionaLCD
  5628 ;;		i2_EscribeLCD_n8
  5629 ;;		i2_MensajeLCD_Var
  5630 ;;		i2_RGB
  5631 ;;		i2_SEG
  5632 ;;		i2_contador
  5633 ;; This function is called by:
  5634 ;;		_ISR
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638                           	psect	text38
  5639   000A0A                     __ptext38:
  5640                           	callstack 0
  5641   000A0A                     _ok:
  5642                           	callstack 18
  5643                           
  5644                           ;Lab5.c: 159: if(flagEscribir == 1 && flagFin==0){
  5645                           
  5646                           ;incstack = 0
  5647   000A0A  0441               	decf	_flagEscribir^0,w,c
  5648   000A0C  1042               	iorwf	(_flagEscribir+1)^0,w,c
  5649   000A0E  A4D8               	btfss	status,2,c
  5650   000A10  D063               	goto	i2l3677
  5651   000A12  0100               	movlb	0	; () banked
  5652   000A14  51A5               	movf	_flagFin& (0+255),w,b
  5653   000A16  11A6               	iorwf	(_flagFin+1)& (0+255),w,b
  5654   000A18  A4D8               	btfss	status,2,c
  5655   000A1A  D05E               	goto	i2l3677
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;Lab5.c: 160: cuenObj=(d*10)+u;
  5659   000A1C  0E0A               	movlw	10
  5660   000A1E  039D               	mulwf	_d& (0+255),b
  5661   000A20  CFF3 F00E          	movff	prodl,??_ok
  5662   000A24  CFF4 F00F          	movff	prodh,??_ok+1
  5663   000A28  039E               	mulwf	(_d+1)& (0+255),b
  5664   000A2A  50F3               	movf	prodl,w,c
  5665   000A2C  260F               	addwf	(??_ok+1)^0,f,c
  5666   000A2E  519F               	movf	_u& (0+255),w,b
  5667   000A30  240E               	addwf	??_ok^0,w,c
  5668   000A32  6E33               	movwf	_cuenObj^0,c
  5669   000A34  51A0               	movf	(_u+1)& (0+255),w,b
  5670   000A36  200F               	addwfc	(??_ok+1)^0,w,c
  5671   000A38  6E34               	movwf	(_cuenObj+1)^0,c
  5672                           
  5673                           ; BSR set to: 0
  5674                           ;Lab5.c: 162: if(cuenObj<60 && cuenObj>0){
  5675   000A3A  BE34               	btfsc	(_cuenObj+1)^0,7,c
  5676   000A3C  D006               	goto	i2u258_40
  5677   000A3E  5034               	movf	(_cuenObj+1)^0,w,c
  5678   000A40  E133               	bnz	i2l3667
  5679   000A42  0E3C               	movlw	60
  5680   000A44  5C33               	subwf	_cuenObj^0,w,c
  5681   000A46  B0D8               	btfsc	status,0,c
  5682   000A48  D02F               	goto	i2l3667
  5683   000A4A                     i2u258_40:
  5684                           
  5685                           ; BSR set to: 0
  5686   000A4A  BE34               	btfsc	(_cuenObj+1)^0,7,c
  5687   000A4C  D02D               	goto	i2l3667
  5688   000A4E  5034               	movf	(_cuenObj+1)^0,w,c
  5689   000A50  E103               	bnz	i2u259_40
  5690   000A52  0433               	decf	_cuenObj^0,w,c
  5691   000A54  A0D8               	btfss	status,0,c
  5692   000A56  D028               	goto	i2l3667
  5693   000A58                     i2u259_40:
  5694                           
  5695                           ; BSR set to: 0
  5696                           ;Lab5.c: 163: flagCont=1;
  5697   000A58  0E00               	movlw	0
  5698   000A5A  6FA4               	movwf	(_flagCont+1)& (0+255),b
  5699   000A5C  0E01               	movlw	1
  5700   000A5E  6FA3               	movwf	_flagCont& (0+255),b
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;Lab5.c: 164: piezFalt = cuenObj;
  5704   000A60  C033  F031         	movff	_cuenObj,_piezFalt
  5705   000A64  C034  F032         	movff	_cuenObj+1,_piezFalt+1
  5706                           
  5707                           ;Lab5.c: 165: flagEscribir=0;
  5708   000A68  0E00               	movlw	0
  5709   000A6A  6E42               	movwf	(_flagEscribir+1)^0,c
  5710   000A6C  0E00               	movlw	0
  5711   000A6E  6E41               	movwf	_flagEscribir^0,c
  5712                           
  5713                           ; BSR set to: 0
  5714                           ;Lab5.c: 166: BorraLCD();
  5715   000A70  ECE5  F00F         	call	i2_BorraLCD	;wreg free
  5716                           
  5717                           ;Lab5.c: 168: MensajeLCD_Var("Faltan: ");
  5718   000A74  0E7A               	movlw	low STR_3
  5719   000A76  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  5720   000A78  EC4C  F00F         	call	i2_MensajeLCD_Var	;wreg free
  5721                           
  5722                           ;Lab5.c: 169: EscribeLCD_n8(piezFalt,2);
  5723   000A7C  0E02               	movlw	2
  5724   000A7E  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  5725   000A80  5031               	movf	_piezFalt^0,w,c
  5726   000A82  EC15  F008         	call	i2_EscribeLCD_n8
  5727                           
  5728                           ;Lab5.c: 170: DireccionaLCD(0xC0);
  5729   000A86  0EC0               	movlw	192
  5730   000A88  ECC5  F00F         	call	i2_DireccionaLCD
  5731                           
  5732                           ;Lab5.c: 171: MensajeLCD_Var("Objetivo: ");
  5733   000A8C  0E64               	movlw	low STR_4
  5734   000A8E  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  5735   000A90  EC4C  F00F         	call	i2_MensajeLCD_Var	;wreg free
  5736                           
  5737                           ;Lab5.c: 172: EscribeLCD_n8(cuenObj,2);
  5738   000A94  0E02               	movlw	2
  5739   000A96  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  5740   000A98  5033               	movf	_cuenObj^0,w,c
  5741   000A9A  EC15  F008         	call	i2_EscribeLCD_n8
  5742                           
  5743                           ;Lab5.c: 173: flagDig=0;
  5744   000A9E  0E00               	movlw	0
  5745   000AA0  6E40               	movwf	(_flagDig+1)^0,c
  5746   000AA2  0E00               	movlw	0
  5747   000AA4  6E3F               	movwf	_flagDig^0,c
  5748                           
  5749                           ;Lab5.c: 174: }
  5750   000AA6  D047               	goto	i2l3703
  5751   000AA8                     i2l3667:
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;Lab5.c: 175: else{;Lab5.c: 176: BorraLCD();
  5755   000AA8  ECE5  F00F         	call	i2_BorraLCD	;wreg free
  5756                           
  5757                           ;Lab5.c: 177: MensajeLCD_Var("Valor Invalido");
  5758   000AAC  0E2F               	movlw	low STR_5
  5759   000AAE  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  5760   000AB0  EC4C  F00F         	call	i2_MensajeLCD_Var	;wreg free
  5761                           
  5762                           ;Lab5.c: 178: flagDig=0;
  5763   000AB4  0E00               	movlw	0
  5764   000AB6  6E40               	movwf	(_flagDig+1)^0,c
  5765   000AB8  0E00               	movlw	0
  5766   000ABA  6E3F               	movwf	_flagDig^0,c
  5767                           
  5768                           ;Lab5.c: 179: _delay((unsigned long)((3000)*(1000000/4000.0)));
  5769   000ABC  0E04               	movlw	4
  5770   000ABE  6E0F               	movwf	(??_ok+1)^0,c
  5771   000AC0  0ECF               	movlw	207
  5772   000AC2  6E0E               	movwf	??_ok^0,c
  5773   000AC4  0E02               	movlw	2
  5774   000AC6                     i2u339_47:
  5775   000AC6  2EE8               	decfsz	wreg,f,c
  5776   000AC8  D7FE               	bra	i2u339_47
  5777   000ACA  2E0E               	decfsz	??_ok^0,f,c
  5778   000ACC  D7FC               	bra	i2u339_47
  5779   000ACE  2E0F               	decfsz	(??_ok+1)^0,f,c
  5780   000AD0  D7FA               	bra	i2u339_47
  5781                           
  5782                           ;Lab5.c: 180: borrarTexto();
  5783   000AD2  ECC3  F00E         	call	_borrarTexto	;wreg free
  5784   000AD6  D02F               	goto	i2l3703
  5785   000AD8                     i2l3677:
  5786                           
  5787                           ;Lab5.c: 183: else if(flagFin==1){
  5788   000AD8  0100               	movlb	0	; () banked
  5789   000ADA  05A5               	decf	_flagFin& (0+255),w,b
  5790   000ADC  11A6               	iorwf	(_flagFin+1)& (0+255),w,b
  5791   000ADE  A4D8               	btfss	status,2,c
  5792   000AE0  D02A               	goto	i2l3703
  5793                           
  5794                           ; BSR set to: 0
  5795                           ;Lab5.c: 185: BorraLCD();
  5796   000AE2  ECE5  F00F         	call	i2_BorraLCD	;wreg free
  5797                           
  5798                           ;Lab5.c: 186: MensajeLCD_Var("Piezas a Contar: ");
  5799   000AE6  0E1D               	movlw	low STR_2
  5800   000AE8  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  5801   000AEA  EC4C  F00F         	call	i2_MensajeLCD_Var	;wreg free
  5802                           
  5803                           ;Lab5.c: 187: DireccionaLCD(0xC0);
  5804   000AEE  0EC0               	movlw	192
  5805   000AF0  ECC5  F00F         	call	i2_DireccionaLCD
  5806                           
  5807                           ;Lab5.c: 188: flagEscribir=1;
  5808   000AF4  0E00               	movlw	0
  5809   000AF6  6E42               	movwf	(_flagEscribir+1)^0,c
  5810   000AF8  0E01               	movlw	1
  5811   000AFA  6E41               	movwf	_flagEscribir^0,c
  5812                           
  5813                           ;Lab5.c: 189: flagDig=0;
  5814   000AFC  0E00               	movlw	0
  5815   000AFE  6E40               	movwf	(_flagDig+1)^0,c
  5816   000B00  0E00               	movlw	0
  5817   000B02  6E3F               	movwf	_flagDig^0,c
  5818                           
  5819                           ;Lab5.c: 191: flagFin=0;
  5820   000B04  0E00               	movlw	0
  5821   000B06  0100               	movlb	0	; () banked
  5822   000B08  6FA6               	movwf	(_flagFin+1)& (0+255),b
  5823   000B0A  0E00               	movlw	0
  5824   000B0C  6FA5               	movwf	_flagFin& (0+255),b
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;Lab5.c: 192: piezFalt=cuenObj;
  5828   000B0E  C033  F031         	movff	_cuenObj,_piezFalt
  5829   000B12  C034  F032         	movff	_cuenObj+1,_piezFalt+1
  5830                           
  5831                           ; BSR set to: 0
  5832                           ;Lab5.c: 193: cuenta=0;
  5833   000B16  0E00               	movlw	0
  5834   000B18  6E3A               	movwf	(_cuenta+1)^0,c
  5835   000B1A  0E00               	movlw	0
  5836   000B1C  6E39               	movwf	_cuenta^0,c
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;Lab5.c: 194: a=0;
  5840   000B1E  0E00               	movlw	0
  5841   000B20  6E38               	movwf	(_a+1)^0,c
  5842   000B22  0E00               	movlw	0
  5843   000B24  6E37               	movwf	_a^0,c
  5844                           
  5845                           ; BSR set to: 0
  5846                           ;Lab5.c: 195: b=0;
  5847   000B26  0E00               	movlw	0
  5848   000B28  6E36               	movwf	(_b+1)^0,c
  5849   000B2A  0E00               	movlw	0
  5850   000B2C  6E35               	movwf	_b^0,c
  5851                           
  5852                           ; BSR set to: 0
  5853                           ;Lab5.c: 196: RGB();
  5854   000B2E  EC55  F00B         	call	i2_RGB	;wreg free
  5855                           
  5856                           ;Lab5.c: 197: SEG();
  5857   000B32  EC00  F010         	call	i2_SEG	;wreg free
  5858   000B36                     i2l3703:
  5859                           
  5860                           ;Lab5.c: 198: };Lab5.c: 199: contador();
  5861   000B36  ECF0  F008         	call	i2_contador	;wreg free
  5862   000B3A  0012               	return		;funcret
  5863   000B3C                     __end_of_ok:
  5864                           	callstack 0
  5865                           
  5866 ;; *************** function i2_contador *****************
  5867 ;; Defined at:
  5868 ;;		line 213 in file "Lab5.c"
  5869 ;; Parameters:    Size  Location     Type
  5870 ;;		None
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;		None
  5873 ;; Return value:  Size  Location     Type
  5874 ;;                  1    wreg      void 
  5875 ;; Registers used:
  5876 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5882 ;;      Params:         0       0       0       0       0       0       0       0       0
  5883 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5884 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5885 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5886 ;;Total ram usage:        0 bytes
  5887 ;; Hardware stack levels used: 1
  5888 ;; Hardware stack levels required when called: 4
  5889 ;; This function calls:
  5890 ;;		i2_BorraLCD
  5891 ;;		i2_DireccionaLCD
  5892 ;;		i2_EscribeLCD_n8
  5893 ;;		i2_MensajeLCD_Var
  5894 ;;		i2_RGB
  5895 ;;		i2_SEG
  5896 ;;		i2___awdiv
  5897 ;;		i2___awmod
  5898 ;; This function is called by:
  5899 ;;		_ok
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           	psect	text39
  5904   0011E0                     __ptext39:
  5905                           	callstack 0
  5906   0011E0                     i2_contador:
  5907                           	callstack 18
  5908                           
  5909                           ;Lab5.c: 214: if(flagCont==1){
  5910                           
  5911                           ;incstack = 0
  5912   0011E0  0100               	movlb	0	; () banked
  5913   0011E2  05A3               	decf	_flagCont& (0+255),w,b
  5914   0011E4  11A4               	iorwf	(_flagCont+1)& (0+255),w,b
  5915   0011E6  A4D8               	btfss	status,2,c
  5916   0011E8  0012               	return	
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;Lab5.c: 215: if(PORTCbits.RC1==0){
  5920   0011EA  B282               	btfsc	130,1,c	;volatile
  5921   0011EC  0012               	return	
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;Lab5.c: 216: flagInicio = 1;
  5925   0011EE  0E00               	movlw	0
  5926   0011F0  6E3E               	movwf	(_flagInicio+1)^0,c
  5927   0011F2  0E01               	movlw	1
  5928   0011F4  6E3D               	movwf	_flagInicio^0,c
  5929                           
  5930                           ; BSR set to: 0
  5931                           ;Lab5.c: 217: if(flagEmergencia == 0){
  5932   0011F6  503B               	movf	_flagEmergencia^0,w,c
  5933   0011F8  103C               	iorwf	(_flagEmergencia+1)^0,w,c
  5934   0011FA  A4D8               	btfss	status,2,c
  5935   0011FC  0012               	return	
  5936                           
  5937                           ; BSR set to: 0
  5938                           ;Lab5.c: 218: cuenta+=1;
  5939   0011FE  4A39               	infsnz	_cuenta^0,f,c
  5940   001200  2A3A               	incf	(_cuenta+1)^0,f,c
  5941                           
  5942                           ;Lab5.c: 219: piezFalt-=1;
  5943   001202  0631               	decf	_piezFalt^0,f,c
  5944   001204  A0D8               	btfss	status,0,c
  5945   001206  0632               	decf	(_piezFalt+1)^0,f,c
  5946                           
  5947                           ; BSR set to: 0
  5948                           ;Lab5.c: 220: a = cuenta % 10;
  5949   001208  C039  F001         	movff	_cuenta,i2___awmod@dividend
  5950   00120C  C03A  F002         	movff	_cuenta+1,i2___awmod@dividend+1
  5951   001210  0E00               	movlw	0
  5952   001212  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  5953   001214  0E0A               	movlw	10
  5954   001216  6E03               	movwf	i2___awmod@divisor^0,c
  5955   001218  ECAB  F00C         	call	i2___awmod	;wreg free
  5956   00121C  C001  F037         	movff	?i2___awmod,_a
  5957   001220  C002  F038         	movff	?i2___awmod+1,_a+1
  5958                           
  5959                           ;Lab5.c: 221: b = (cuenta - a)/10;
  5960   001224  5037               	movf	_a^0,w,c
  5961   001226  5C39               	subwf	_cuenta^0,w,c
  5962   001228  6E01               	movwf	i2___awdiv@dividend^0,c
  5963   00122A  5038               	movf	(_a+1)^0,w,c
  5964   00122C  583A               	subwfb	(_cuenta+1)^0,w,c
  5965   00122E  6E02               	movwf	(i2___awdiv@dividend+1)^0,c
  5966   001230  0E00               	movlw	0
  5967   001232  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  5968   001234  0E0A               	movlw	10
  5969   001236  6E03               	movwf	i2___awdiv@divisor^0,c
  5970   001238  ECD8  F00A         	call	i2___awdiv	;wreg free
  5971   00123C  C001  F035         	movff	?i2___awdiv,_b
  5972   001240  C002  F036         	movff	?i2___awdiv+1,_b+1
  5973                           
  5974                           ;Lab5.c: 222: RGB();
  5975   001244  EC55  F00B         	call	i2_RGB	;wreg free
  5976                           
  5977                           ;Lab5.c: 223: SEG();
  5978   001248  EC00  F010         	call	i2_SEG	;wreg free
  5979                           
  5980                           ;Lab5.c: 225: BorraLCD();
  5981   00124C  ECE5  F00F         	call	i2_BorraLCD	;wreg free
  5982                           
  5983                           ;Lab5.c: 226: MensajeLCD_Var("Faltan: ");
  5984   001250  0E7A               	movlw	low STR_3
  5985   001252  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  5986   001254  EC4C  F00F         	call	i2_MensajeLCD_Var	;wreg free
  5987                           
  5988                           ;Lab5.c: 227: EscribeLCD_n8(piezFalt,2);
  5989   001258  0E02               	movlw	2
  5990   00125A  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  5991   00125C  5031               	movf	_piezFalt^0,w,c
  5992   00125E  EC15  F008         	call	i2_EscribeLCD_n8
  5993                           
  5994                           ;Lab5.c: 228: DireccionaLCD(0xC0);
  5995   001262  0EC0               	movlw	192
  5996   001264  ECC5  F00F         	call	i2_DireccionaLCD
  5997                           
  5998                           ;Lab5.c: 229: MensajeLCD_Var("Objetivo: ");
  5999   001268  0E64               	movlw	low STR_4
  6000   00126A  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  6001   00126C  EC4C  F00F         	call	i2_MensajeLCD_Var	;wreg free
  6002                           
  6003                           ;Lab5.c: 230: EscribeLCD_n8(cuenObj,2);
  6004   001270  0E02               	movlw	2
  6005   001272  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  6006   001274  5033               	movf	_cuenObj^0,w,c
  6007   001276  EC15  F008         	call	i2_EscribeLCD_n8
  6008                           
  6009                           ;Lab5.c: 231: if (cuenta==cuenObj){
  6010   00127A  5033               	movf	_cuenObj^0,w,c
  6011   00127C  1839               	xorwf	_cuenta^0,w,c
  6012   00127E  E117               	bnz	i2l296
  6013   001280  5034               	movf	(_cuenObj+1)^0,w,c
  6014   001282  183A               	xorwf	(_cuenta+1)^0,w,c
  6015   001284  A4D8               	btfss	status,2,c
  6016   001286  0012               	return	
  6017                           
  6018                           ;Lab5.c: 232: BorraLCD();
  6019   001288  ECE5  F00F         	call	i2_BorraLCD	;wreg free
  6020                           
  6021                           ;Lab5.c: 233: MensajeLCD_Var("Fin de Cuenta");
  6022   00128C  0E3E               	movlw	low STR_10
  6023   00128E  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  6024   001290  EC4C  F00F         	call	i2_MensajeLCD_Var	;wreg free
  6025                           
  6026                           ;Lab5.c: 234: DireccionaLCD(0xC0);
  6027   001294  0EC0               	movlw	192
  6028   001296  ECC5  F00F         	call	i2_DireccionaLCD
  6029                           
  6030                           ;Lab5.c: 235: MensajeLCD_Var("Presione OK");
  6031   00129A  0E4C               	movlw	low STR_11
  6032   00129C  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  6033   00129E  EC4C  F00F         	call	i2_MensajeLCD_Var	;wreg free
  6034                           
  6035                           ;Lab5.c: 236: flagFin=1;
  6036   0012A2  0E00               	movlw	0
  6037   0012A4  0100               	movlb	0	; () banked
  6038   0012A6  6FA6               	movwf	(_flagFin+1)& (0+255),b
  6039   0012A8  0E01               	movlw	1
  6040   0012AA  6FA5               	movwf	_flagFin& (0+255),b
  6041   0012AC  0012               	return	
  6042   0012AE                     i2l296:
  6043   0012AE  0012               	return		;funcret
  6044   0012B0                     __end_ofi2_contador:
  6045                           	callstack 0
  6046                           
  6047 ;; *************** function i2_EscribeLCD_n8 *****************
  6048 ;; Defined at:
  6049 ;;		line 140 in file "LibLCDXC9.h"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;  a               1    wreg     unsigned char 
  6052 ;;  b               1    8[COMRAM] unsigned char 
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;  a               1   12[COMRAM] unsigned char 
  6055 ;;  unidad          1   11[COMRAM] unsigned char 
  6056 ;;  decena          1   10[COMRAM] unsigned char 
  6057 ;;  centena         1    9[COMRAM] unsigned char 
  6058 ;; Return value:  Size  Location     Type
  6059 ;;                  1    wreg      void 
  6060 ;; Registers used:
  6061 ;;		wreg, status,2, status,0, cstack
  6062 ;; Tracked objects:
  6063 ;;		On entry : 0/0
  6064 ;;		On exit  : 0/0
  6065 ;;		Unchanged: 0/0
  6066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6067 ;;      Params:         1       0       0       0       0       0       0       0       0
  6068 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6069 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6070 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6071 ;;Total ram usage:        5 bytes
  6072 ;; Hardware stack levels used: 1
  6073 ;; Hardware stack levels required when called: 2
  6074 ;; This function calls:
  6075 ;;		i2_EnviaDato
  6076 ;;		i2_HabilitaLCD
  6077 ;;		i2_RetardoLCD
  6078 ;;		i2___lbdiv
  6079 ;;		i2___lbmod
  6080 ;; This function is called by:
  6081 ;;		_ok
  6082 ;;		i2_contador
  6083 ;;		i2_reiCon
  6084 ;; This function uses a non-reentrant model
  6085 ;;
  6086                           
  6087                           	psect	text40
  6088   00102A                     __ptext40:
  6089                           	callstack 0
  6090   00102A                     i2_EscribeLCD_n8:
  6091                           	callstack 20
  6092                           
  6093                           ;incstack = 0
  6094                           ;i2EscribeLCD_n8@a stored from wreg
  6095   00102A  6E0D               	movwf	i2EscribeLCD_n8@a^0,c
  6096                           
  6097                           ;LibLCDXC9.h: 145: unsigned char centena,decena,unidad;;LibLCDXC9.h: 146: LATA4=1;
  6098   00102C  8889               	bsf	3977,4,c	;volatile
  6099                           
  6100                           ;LibLCDXC9.h: 147: switch(b){
  6101   00102E  D065               	goto	i2l2973
  6102   001030                     i2l2941:
  6103   001030  0E0A               	movlw	10
  6104   001032  6E01               	movwf	i2___lbmod@divisor^0,c
  6105   001034  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  6106   001036  EC38  F00F         	call	i2___lbmod
  6107   00103A  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  6108                           
  6109                           ;LibLCDXC9.h: 149: EnviaDato(unidad+48);
  6110   00103C  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  6111   00103E  0F30               	addlw	48
  6112   001040  EC03  F00E         	call	i2_EnviaDato
  6113                           
  6114                           ;LibLCDXC9.h: 150: HabilitaLCD();
  6115   001044  ECF6  F00F         	call	i2_HabilitaLCD	;wreg free
  6116                           
  6117                           ;LibLCDXC9.h: 151: RetardoLCD(4);
  6118   001048  0E04               	movlw	4
  6119   00104A  EC65  F00D         	call	i2_RetardoLCD
  6120                           
  6121                           ;LibLCDXC9.h: 152: break;
  6122   00104E  0012               	return	
  6123   001050                     i2l2947:
  6124   001050  0E0A               	movlw	10
  6125   001052  6E05               	movwf	i2___lbdiv@divisor^0,c
  6126   001054  0E64               	movlw	100
  6127   001056  6E01               	movwf	i2___lbmod@divisor^0,c
  6128   001058  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  6129   00105A  EC38  F00F         	call	i2___lbmod
  6130   00105E  ECA7  F00E         	call	i2___lbdiv
  6131   001062  6E0B               	movwf	i2EscribeLCD_n8@decena^0,c
  6132                           
  6133                           ;LibLCDXC9.h: 154: unidad=a%10;
  6134   001064  0E0A               	movlw	10
  6135   001066  6E01               	movwf	i2___lbmod@divisor^0,c
  6136   001068  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  6137   00106A  EC38  F00F         	call	i2___lbmod
  6138   00106E  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  6139                           
  6140                           ;LibLCDXC9.h: 155: EnviaDato(decena+48);
  6141   001070  500B               	movf	i2EscribeLCD_n8@decena^0,w,c
  6142   001072  0F30               	addlw	48
  6143   001074  EC03  F00E         	call	i2_EnviaDato
  6144                           
  6145                           ;LibLCDXC9.h: 156: HabilitaLCD();
  6146   001078  ECF6  F00F         	call	i2_HabilitaLCD	;wreg free
  6147                           
  6148                           ;LibLCDXC9.h: 157: RetardoLCD(4);
  6149   00107C  0E04               	movlw	4
  6150   00107E  EC65  F00D         	call	i2_RetardoLCD
  6151                           
  6152                           ;LibLCDXC9.h: 158: EnviaDato(unidad+48);
  6153   001082  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  6154   001084  0F30               	addlw	48
  6155   001086  EC03  F00E         	call	i2_EnviaDato
  6156                           
  6157                           ;LibLCDXC9.h: 159: HabilitaLCD();
  6158   00108A  ECF6  F00F         	call	i2_HabilitaLCD	;wreg free
  6159                           
  6160                           ;LibLCDXC9.h: 160: RetardoLCD(4);
  6161   00108E  0E04               	movlw	4
  6162   001090  EC65  F00D         	call	i2_RetardoLCD
  6163                           
  6164                           ;LibLCDXC9.h: 161: break;
  6165   001094  0012               	return	
  6166   001096                     i2l2957:
  6167   001096  0E64               	movlw	100
  6168   001098  6E05               	movwf	i2___lbdiv@divisor^0,c
  6169   00109A  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  6170   00109C  ECA7  F00E         	call	i2___lbdiv
  6171   0010A0  6E0A               	movwf	i2EscribeLCD_n8@centena^0,c
  6172                           
  6173                           ;LibLCDXC9.h: 163: decena=(a%100)/10;
  6174   0010A2  0E0A               	movlw	10
  6175   0010A4  6E05               	movwf	i2___lbdiv@divisor^0,c
  6176   0010A6  0E64               	movlw	100
  6177   0010A8  6E01               	movwf	i2___lbmod@divisor^0,c
  6178   0010AA  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  6179   0010AC  EC38  F00F         	call	i2___lbmod
  6180   0010B0  ECA7  F00E         	call	i2___lbdiv
  6181   0010B4  6E0B               	movwf	i2EscribeLCD_n8@decena^0,c
  6182                           
  6183                           ;LibLCDXC9.h: 164: unidad=a%10;
  6184   0010B6  0E0A               	movlw	10
  6185   0010B8  6E01               	movwf	i2___lbmod@divisor^0,c
  6186   0010BA  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  6187   0010BC  EC38  F00F         	call	i2___lbmod
  6188   0010C0  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  6189                           
  6190                           ;LibLCDXC9.h: 165: EnviaDato(centena+48);
  6191   0010C2  500A               	movf	i2EscribeLCD_n8@centena^0,w,c
  6192   0010C4  0F30               	addlw	48
  6193   0010C6  EC03  F00E         	call	i2_EnviaDato
  6194                           
  6195                           ;LibLCDXC9.h: 166: HabilitaLCD();
  6196   0010CA  ECF6  F00F         	call	i2_HabilitaLCD	;wreg free
  6197                           
  6198                           ;LibLCDXC9.h: 167: RetardoLCD(4);
  6199   0010CE  0E04               	movlw	4
  6200   0010D0  EC65  F00D         	call	i2_RetardoLCD
  6201                           
  6202                           ;LibLCDXC9.h: 168: EnviaDato(decena+48);
  6203   0010D4  500B               	movf	i2EscribeLCD_n8@decena^0,w,c
  6204   0010D6  0F30               	addlw	48
  6205   0010D8  EC03  F00E         	call	i2_EnviaDato
  6206                           
  6207                           ;LibLCDXC9.h: 169: HabilitaLCD();
  6208   0010DC  ECF6  F00F         	call	i2_HabilitaLCD	;wreg free
  6209                           
  6210                           ;LibLCDXC9.h: 170: RetardoLCD(4);
  6211   0010E0  0E04               	movlw	4
  6212   0010E2  EC65  F00D         	call	i2_RetardoLCD
  6213                           
  6214                           ;LibLCDXC9.h: 171: EnviaDato(unidad+48);
  6215   0010E6  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  6216   0010E8  0F30               	addlw	48
  6217   0010EA  EC03  F00E         	call	i2_EnviaDato
  6218                           
  6219                           ;LibLCDXC9.h: 172: HabilitaLCD();
  6220   0010EE  ECF6  F00F         	call	i2_HabilitaLCD	;wreg free
  6221                           
  6222                           ;LibLCDXC9.h: 173: RetardoLCD(4);
  6223   0010F2  0E04               	movlw	4
  6224   0010F4  EC65  F00D         	call	i2_RetardoLCD
  6225                           
  6226                           ;LibLCDXC9.h: 174: break;
  6227   0010F8  0012               	return	
  6228   0010FA                     i2l2973:
  6229   0010FA  5009               	movf	i2EscribeLCD_n8@b^0,w,c
  6230                           
  6231                           ; Switch size 1, requested type "simple"
  6232                           ; Number of cases is 3, Range of values is 1 to 3
  6233                           ; switch strategies available:
  6234                           ; Name         Instructions Cycles
  6235                           ; simple_byte           10     6 (average)
  6236                           ;	Chosen strategy is simple_byte
  6237   0010FC  0A01               	xorlw	1	; case 1
  6238   0010FE  B4D8               	btfsc	status,2,c
  6239   001100  D797               	goto	i2l2941
  6240   001102  0A03               	xorlw	3	; case 2
  6241   001104  B4D8               	btfsc	status,2,c
  6242   001106  D7A4               	goto	i2l2947
  6243   001108  0A01               	xorlw	1	; case 3
  6244   00110A  A4D8               	btfss	status,2,c
  6245   00110C  0012               	return	
  6246   00110E  D7C3               	goto	i2l2957
  6247   001110                     __end_ofi2_EscribeLCD_n8:
  6248                           	callstack 0
  6249                           
  6250 ;; *************** function i2___lbmod *****************
  6251 ;; Defined at:
  6252 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbmod.c"
  6253 ;; Parameters:    Size  Location     Type
  6254 ;;  dividend        1    wreg     unsigned char 
  6255 ;;  divisor         1    0[COMRAM] unsigned char 
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;  dividend        1    1[COMRAM] unsigned char 
  6258 ;;  rem             1    3[COMRAM] unsigned char 
  6259 ;;  counter         1    2[COMRAM] unsigned char 
  6260 ;; Return value:  Size  Location     Type
  6261 ;;                  1    wreg      unsigned char 
  6262 ;; Registers used:
  6263 ;;		wreg, status,2, status,0
  6264 ;; Tracked objects:
  6265 ;;		On entry : 0/0
  6266 ;;		On exit  : 0/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6269 ;;      Params:         1       0       0       0       0       0       0       0       0
  6270 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6271 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6272 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6273 ;;Total ram usage:        4 bytes
  6274 ;; Hardware stack levels used: 1
  6275 ;; This function calls:
  6276 ;;		Nothing
  6277 ;; This function is called by:
  6278 ;;		i2_EscribeLCD_n8
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           
  6282                           	psect	text41
  6283   001E70                     __ptext41:
  6284                           	callstack 0
  6285   001E70                     i2___lbmod:
  6286                           	callstack 21
  6287                           
  6288                           ;incstack = 0
  6289                           ;i2___lbmod@dividend stored from wreg
  6290   001E70  6E02               	movwf	i2___lbmod@dividend^0,c
  6291   001E72  0E08               	movlw	8
  6292   001E74  6E03               	movwf	i2___lbmod@counter^0,c
  6293   001E76  6A04               	clrf	i2___lbmod@rem^0,c
  6294   001E78                     i2l2745:
  6295   001E78  90D8               	bcf	status,0,c
  6296   001E7A  3402               	rlcf	i2___lbmod@dividend^0,w,c
  6297   001E7C  3404               	rlcf	i2___lbmod@rem^0,w,c
  6298   001E7E  6E04               	movwf	i2___lbmod@rem^0,c
  6299   001E80  90D8               	bcf	status,0,c
  6300   001E82  3602               	rlcf	i2___lbmod@dividend^0,f,c
  6301   001E84  5001               	movf	i2___lbmod@divisor^0,w,c
  6302   001E86  5C04               	subwf	i2___lbmod@rem^0,w,c
  6303   001E88  A0D8               	btfss	status,0,c
  6304   001E8A  D002               	goto	i2l2753
  6305   001E8C  5001               	movf	i2___lbmod@divisor^0,w,c
  6306   001E8E  5E04               	subwf	i2___lbmod@rem^0,f,c
  6307   001E90                     i2l2753:
  6308   001E90  2E03               	decfsz	i2___lbmod@counter^0,f,c
  6309   001E92  D7F2               	goto	i2l2745
  6310   001E94  5004               	movf	i2___lbmod@rem^0,w,c
  6311   001E96  0012               	return		;funcret
  6312   001E98                     __end_ofi2___lbmod:
  6313                           	callstack 0
  6314                           
  6315 ;; *************** function i2___lbdiv *****************
  6316 ;; Defined at:
  6317 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbdiv.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;  dividend        1    wreg     unsigned char 
  6320 ;;  divisor         1    4[COMRAM] unsigned char 
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;  dividend        1    5[COMRAM] unsigned char 
  6323 ;;  quotient        1    7[COMRAM] unsigned char 
  6324 ;;  counter         1    6[COMRAM] unsigned char 
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  1    wreg      unsigned char 
  6327 ;; Registers used:
  6328 ;;		wreg, status,2, status,0
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6334 ;;      Params:         1       0       0       0       0       0       0       0       0
  6335 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6337 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6338 ;;Total ram usage:        4 bytes
  6339 ;; Hardware stack levels used: 1
  6340 ;; This function calls:
  6341 ;;		Nothing
  6342 ;; This function is called by:
  6343 ;;		i2_EscribeLCD_n8
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347                           	psect	text42
  6348   001D4E                     __ptext42:
  6349                           	callstack 0
  6350   001D4E                     i2___lbdiv:
  6351                           	callstack 21
  6352                           
  6353                           ;incstack = 0
  6354                           ;i2___lbdiv@dividend stored from wreg
  6355   001D4E  6E06               	movwf	i2___lbdiv@dividend^0,c
  6356   001D50  6A08               	clrf	i2___lbdiv@quotient^0,c
  6357   001D52  5005               	movf	i2___lbdiv@divisor^0,w,c
  6358   001D54  B4D8               	btfsc	status,2,c
  6359   001D56  D015               	goto	i2l2737
  6360   001D58  0E01               	movlw	1
  6361   001D5A  6E07               	movwf	i2___lbdiv@counter^0,c
  6362   001D5C  D003               	goto	i2l2725
  6363   001D5E                     i2l2721:
  6364   001D5E  90D8               	bcf	status,0,c
  6365   001D60  3605               	rlcf	i2___lbdiv@divisor^0,f,c
  6366   001D62  2A07               	incf	i2___lbdiv@counter^0,f,c
  6367   001D64                     i2l2725:
  6368   001D64  AE05               	btfss	i2___lbdiv@divisor^0,7,c
  6369   001D66  D7FB               	goto	i2l2721
  6370   001D68                     i2u157_40:
  6371   001D68  90D8               	bcf	status,0,c
  6372   001D6A  3608               	rlcf	i2___lbdiv@quotient^0,f,c
  6373   001D6C  5005               	movf	i2___lbdiv@divisor^0,w,c
  6374   001D6E  5C06               	subwf	i2___lbdiv@dividend^0,w,c
  6375   001D70  A0D8               	btfss	status,0,c
  6376   001D72  D003               	goto	i2l2733
  6377   001D74  5005               	movf	i2___lbdiv@divisor^0,w,c
  6378   001D76  5E06               	subwf	i2___lbdiv@dividend^0,f,c
  6379   001D78  8008               	bsf	i2___lbdiv@quotient^0,0,c
  6380   001D7A                     i2l2733:
  6381   001D7A  90D8               	bcf	status,0,c
  6382   001D7C  3205               	rrcf	i2___lbdiv@divisor^0,f,c
  6383   001D7E  2E07               	decfsz	i2___lbdiv@counter^0,f,c
  6384   001D80  D7F3               	goto	i2u157_40
  6385   001D82                     i2l2737:
  6386   001D82  5008               	movf	i2___lbdiv@quotient^0,w,c
  6387   001D84  0012               	return		;funcret
  6388   001D86                     __end_ofi2___lbdiv:
  6389                           	callstack 0
  6390                           
  6391 ;; *************** function _borrarTexto *****************
  6392 ;; Defined at:
  6393 ;;		line 202 in file "Lab5.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;		None
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;		None
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  1    wreg      void 
  6400 ;; Registers used:
  6401 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6407 ;;      Params:         0       0       0       0       0       0       0       0       0
  6408 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6409 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6410 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6411 ;;Total ram usage:        0 bytes
  6412 ;; Hardware stack levels used: 1
  6413 ;; Hardware stack levels required when called: 4
  6414 ;; This function calls:
  6415 ;;		i2_BorraLCD
  6416 ;;		i2_DireccionaLCD
  6417 ;;		i2_MensajeLCD_Var
  6418 ;; This function is called by:
  6419 ;;		_ok
  6420 ;;		_ISR
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424                           	psect	text43
  6425   001D86                     __ptext43:
  6426                           	callstack 0
  6427   001D86                     _borrarTexto:
  6428                           	callstack 18
  6429                           
  6430                           ;Lab5.c: 203: if(flagEscribir == 1){
  6431                           
  6432                           ;incstack = 0
  6433   001D86  0441               	decf	_flagEscribir^0,w,c
  6434   001D88  1042               	iorwf	(_flagEscribir+1)^0,w,c
  6435   001D8A  A4D8               	btfss	status,2,c
  6436   001D8C  0012               	return	
  6437                           
  6438                           ;Lab5.c: 204: BorraLCD();
  6439   001D8E  ECE5  F00F         	call	i2_BorraLCD	;wreg free
  6440                           
  6441                           ;Lab5.c: 205: MensajeLCD_Var("Piezas a Contar: ");
  6442   001D92  0E1D               	movlw	low STR_2
  6443   001D94  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  6444   001D96  EC4C  F00F         	call	i2_MensajeLCD_Var	;wreg free
  6445                           
  6446                           ;Lab5.c: 206: DireccionaLCD(0xC0);
  6447   001D9A  0EC0               	movlw	192
  6448   001D9C  ECC5  F00F         	call	i2_DireccionaLCD
  6449                           
  6450                           ;Lab5.c: 207: flagEscribir=1;
  6451   001DA0  0E00               	movlw	0
  6452   001DA2  6E42               	movwf	(_flagEscribir+1)^0,c
  6453   001DA4  0E01               	movlw	1
  6454   001DA6  6E41               	movwf	_flagEscribir^0,c
  6455                           
  6456                           ;Lab5.c: 208: cuenObj=0;
  6457   001DA8  0E00               	movlw	0
  6458   001DAA  6E34               	movwf	(_cuenObj+1)^0,c
  6459   001DAC  0E00               	movlw	0
  6460   001DAE  6E33               	movwf	_cuenObj^0,c
  6461                           
  6462                           ;Lab5.c: 209: flagDig=0;
  6463   001DB0  0E00               	movlw	0
  6464   001DB2  6E40               	movwf	(_flagDig+1)^0,c
  6465   001DB4  0E00               	movlw	0
  6466   001DB6  6E3F               	movwf	_flagDig^0,c
  6467   001DB8  0012               	return		;funcret
  6468   001DBA                     __end_of_borrarTexto:
  6469                           	callstack 0
  6470                           
  6471 ;; *************** function _luzFondo *****************
  6472 ;; Defined at:
  6473 ;;		line 134 in file "Lab5.c"
  6474 ;; Parameters:    Size  Location     Type
  6475 ;;		None
  6476 ;; Auto vars:     Size  Location     Type
  6477 ;;		None
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  1    wreg      void 
  6480 ;; Registers used:
  6481 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6487 ;;      Params:         0       0       0       0       0       0       0       0       0
  6488 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6489 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6490 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6491 ;;Total ram usage:        0 bytes
  6492 ;; Hardware stack levels used: 1
  6493 ;; Hardware stack levels required when called: 1
  6494 ;; This function calls:
  6495 ;;		___wmul
  6496 ;; This function is called by:
  6497 ;;		_ISR
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           
  6501                           	psect	text44
  6502   001DBA                     __ptext44:
  6503                           	callstack 0
  6504   001DBA                     _luzFondo:
  6505                           	callstack 22
  6506                           
  6507                           ;Lab5.c: 135: flagLuz*=-1;
  6508                           
  6509                           ;incstack = 0
  6510   001DBA  C045  F001         	movff	_flagLuz,___wmul@multiplier
  6511   001DBE  C046  F002         	movff	_flagLuz+1,___wmul@multiplier+1
  6512   001DC2  0EFF               	movlw	255
  6513   001DC4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6514   001DC6  6803               	setf	___wmul@multiplicand^0,c
  6515   001DC8  EC60  F00F         	call	___wmul	;wreg free
  6516   001DCC  C001  F045         	movff	?___wmul,_flagLuz
  6517   001DD0  C002  F046         	movff	?___wmul+1,_flagLuz+1
  6518                           
  6519                           ;Lab5.c: 136: if(flagLuz==1)LATA3=1;
  6520   001DD4  0445               	decf	_flagLuz^0,w,c
  6521   001DD6  1046               	iorwf	(_flagLuz+1)^0,w,c
  6522   001DD8  A4D8               	btfss	status,2,c
  6523   001DDA  D002               	goto	i2l3613
  6524   001DDC  8689               	bsf	3977,3,c	;volatile
  6525   001DDE  0012               	return	
  6526   001DE0                     i2l3613:
  6527                           
  6528                           ;Lab5.c: 137: else if(flagLuz==-1)LATA3=0;
  6529   001DE0  2845               	incf	_flagLuz^0,w,c
  6530   001DE2  E104               	bnz	i2l273
  6531   001DE4  2846               	incf	(_flagLuz+1)^0,w,c
  6532   001DE6  A4D8               	btfss	status,2,c
  6533   001DE8  0012               	return	
  6534   001DEA  9689               	bcf	3977,3,c	;volatile
  6535   001DEC                     i2l273:
  6536   001DEC  0012               	return		;funcret
  6537   001DEE                     __end_of_luzFondo:
  6538                           	callstack 0
  6539                           
  6540 ;; *************** function ___wmul *****************
  6541 ;; Defined at:
  6542 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\Umul16.c"
  6543 ;; Parameters:    Size  Location     Type
  6544 ;;  multiplier      2    0[COMRAM] unsigned int 
  6545 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6546 ;; Auto vars:     Size  Location     Type
  6547 ;;  product         2    4[COMRAM] unsigned int 
  6548 ;; Return value:  Size  Location     Type
  6549 ;;                  2    0[COMRAM] unsigned int 
  6550 ;; Registers used:
  6551 ;;		wreg, status,2, status,0, prodl, prodh
  6552 ;; Tracked objects:
  6553 ;;		On entry : 0/0
  6554 ;;		On exit  : 0/0
  6555 ;;		Unchanged: 0/0
  6556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6557 ;;      Params:         4       0       0       0       0       0       0       0       0
  6558 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6559 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6560 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6561 ;;Total ram usage:        6 bytes
  6562 ;; Hardware stack levels used: 1
  6563 ;; This function calls:
  6564 ;;		Nothing
  6565 ;; This function is called by:
  6566 ;;		_luzFondo
  6567 ;; This function uses a non-reentrant model
  6568 ;;
  6569                           
  6570                           	psect	text45
  6571   001EC0                     __ptext45:
  6572                           	callstack 0
  6573   001EC0                     ___wmul:
  6574                           	callstack 22
  6575                           
  6576                           ;incstack = 0
  6577   001EC0  5001               	movf	___wmul@multiplier^0,w,c
  6578   001EC2  0203               	mulwf	___wmul@multiplicand^0,c
  6579   001EC4  CFF3 F005          	movff	prodl,___wmul@product
  6580   001EC8  CFF4 F006          	movff	prodh,___wmul@product+1
  6581   001ECC  5001               	movf	___wmul@multiplier^0,w,c
  6582   001ECE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6583   001ED0  50F3               	movf	243,w,c
  6584   001ED2  2606               	addwf	(___wmul@product+1)^0,f,c
  6585   001ED4  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6586   001ED6  0203               	mulwf	___wmul@multiplicand^0,c
  6587   001ED8  50F3               	movf	243,w,c
  6588   001EDA  2606               	addwf	(___wmul@product+1)^0,f,c
  6589   001EDC  C005  F001         	movff	___wmul@product,?___wmul
  6590   001EE0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6591   001EE4  0012               	return		;funcret
  6592   001EE6                     __end_of___wmul:
  6593                           	callstack 0
  6594                           
  6595 ;; *************** function _fin *****************
  6596 ;; Defined at:
  6597 ;;		line 312 in file "Lab5.c"
  6598 ;; Parameters:    Size  Location     Type
  6599 ;;		None
  6600 ;; Auto vars:     Size  Location     Type
  6601 ;;		None
  6602 ;; Return value:  Size  Location     Type
  6603 ;;                  1    wreg      void 
  6604 ;; Registers used:
  6605 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6606 ;; Tracked objects:
  6607 ;;		On entry : 0/0
  6608 ;;		On exit  : 3F/0
  6609 ;;		Unchanged: 0/0
  6610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6611 ;;      Params:         0       0       0       0       0       0       0       0       0
  6612 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6613 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6614 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6615 ;;Total ram usage:        0 bytes
  6616 ;; Hardware stack levels used: 1
  6617 ;; Hardware stack levels required when called: 4
  6618 ;; This function calls:
  6619 ;;		i2_BorraLCD
  6620 ;;		i2_DireccionaLCD
  6621 ;;		i2_MensajeLCD_Var
  6622 ;;		i2_RGB
  6623 ;;		i2_SEG
  6624 ;;		i2___awdiv
  6625 ;;		i2___awmod
  6626 ;; This function is called by:
  6627 ;;		_ISR
  6628 ;; This function uses a non-reentrant model
  6629 ;;
  6630                           
  6631                           	psect	text46
  6632   00152E                     __ptext46:
  6633                           	callstack 0
  6634   00152E                     _fin:
  6635                           	callstack 19
  6636                           
  6637                           ;Lab5.c: 313: cuenta=cuenObj;
  6638                           
  6639                           ;incstack = 0
  6640   00152E  C033  F039         	movff	_cuenObj,_cuenta
  6641   001532  C034  F03A         	movff	_cuenObj+1,_cuenta+1
  6642                           
  6643                           ;Lab5.c: 314: a = cuenta % 10;
  6644   001536  C039  F001         	movff	_cuenta,i2___awmod@dividend
  6645   00153A  C03A  F002         	movff	_cuenta+1,i2___awmod@dividend+1
  6646   00153E  0E00               	movlw	0
  6647   001540  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  6648   001542  0E0A               	movlw	10
  6649   001544  6E03               	movwf	i2___awmod@divisor^0,c
  6650   001546  ECAB  F00C         	call	i2___awmod	;wreg free
  6651   00154A  C001  F037         	movff	?i2___awmod,_a
  6652   00154E  C002  F038         	movff	?i2___awmod+1,_a+1
  6653                           
  6654                           ;Lab5.c: 315: b = (cuenta - a)/10;
  6655   001552  5037               	movf	_a^0,w,c
  6656   001554  5C39               	subwf	_cuenta^0,w,c
  6657   001556  6E01               	movwf	i2___awdiv@dividend^0,c
  6658   001558  5038               	movf	(_a+1)^0,w,c
  6659   00155A  583A               	subwfb	(_cuenta+1)^0,w,c
  6660   00155C  6E02               	movwf	(i2___awdiv@dividend+1)^0,c
  6661   00155E  0E00               	movlw	0
  6662   001560  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  6663   001562  0E0A               	movlw	10
  6664   001564  6E03               	movwf	i2___awdiv@divisor^0,c
  6665   001566  ECD8  F00A         	call	i2___awdiv	;wreg free
  6666   00156A  C001  F035         	movff	?i2___awdiv,_b
  6667   00156E  C002  F036         	movff	?i2___awdiv+1,_b+1
  6668                           
  6669                           ;Lab5.c: 316: RGB();
  6670   001572  EC55  F00B         	call	i2_RGB	;wreg free
  6671                           
  6672                           ;Lab5.c: 317: SEG();
  6673   001576  EC00  F010         	call	i2_SEG	;wreg free
  6674                           
  6675                           ;Lab5.c: 318: BorraLCD();
  6676   00157A  ECE5  F00F         	call	i2_BorraLCD	;wreg free
  6677                           
  6678                           ;Lab5.c: 319: MensajeLCD_Var("Fin de Cuenta");
  6679   00157E  0E3E               	movlw	low STR_10
  6680   001580  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  6681   001582  EC4C  F00F         	call	i2_MensajeLCD_Var	;wreg free
  6682                           
  6683                           ;Lab5.c: 320: DireccionaLCD(0xC0);
  6684   001586  0EC0               	movlw	192
  6685   001588  ECC5  F00F         	call	i2_DireccionaLCD
  6686                           
  6687                           ;Lab5.c: 321: MensajeLCD_Var("Presione OK");
  6688   00158C  0E4C               	movlw	low STR_11
  6689   00158E  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  6690   001590  EC4C  F00F         	call	i2_MensajeLCD_Var	;wreg free
  6691                           
  6692                           ;Lab5.c: 322: flagFin=1;
  6693   001594  0E00               	movlw	0
  6694   001596  0100               	movlb	0	; () banked
  6695   001598  6FA6               	movwf	(_flagFin+1)& (0+255),b
  6696   00159A  0E01               	movlw	1
  6697   00159C  6FA5               	movwf	_flagFin& (0+255),b
  6698                           
  6699                           ; BSR set to: 0
  6700                           ;Lab5.c: 323: flagDig=0;
  6701   00159E  0E00               	movlw	0
  6702   0015A0  6E40               	movwf	(_flagDig+1)^0,c
  6703   0015A2  0E00               	movlw	0
  6704   0015A4  6E3F               	movwf	_flagDig^0,c
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;Lab5.c: 324: flagCont=0;
  6708   0015A6  0E00               	movlw	0
  6709   0015A8  6FA4               	movwf	(_flagCont+1)& (0+255),b
  6710   0015AA  0E00               	movlw	0
  6711   0015AC  6FA3               	movwf	_flagCont& (0+255),b
  6712                           
  6713                           ; BSR set to: 0
  6714   0015AE  0012               	return		;funcret
  6715   0015B0                     __end_of_fin:
  6716                           	callstack 0
  6717                           
  6718 ;; *************** function i2___awmod *****************
  6719 ;; Defined at:
  6720 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c"
  6721 ;; Parameters:    Size  Location     Type
  6722 ;;  dividend        2    0[COMRAM] int 
  6723 ;;  divisor         2    2[COMRAM] int 
  6724 ;; Auto vars:     Size  Location     Type
  6725 ;;  sign            1    5[COMRAM] unsigned char 
  6726 ;;  counter         1    4[COMRAM] unsigned char 
  6727 ;; Return value:  Size  Location     Type
  6728 ;;                  2    0[COMRAM] int 
  6729 ;; Registers used:
  6730 ;;		wreg, status,2, status,0
  6731 ;; Tracked objects:
  6732 ;;		On entry : 0/0
  6733 ;;		On exit  : 0/0
  6734 ;;		Unchanged: 0/0
  6735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6736 ;;      Params:         4       0       0       0       0       0       0       0       0
  6737 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6738 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6739 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6740 ;;Total ram usage:        6 bytes
  6741 ;; Hardware stack levels used: 1
  6742 ;; This function calls:
  6743 ;;		Nothing
  6744 ;; This function is called by:
  6745 ;;		_fin
  6746 ;;		i2_contador
  6747 ;; This function uses a non-reentrant model
  6748 ;;
  6749                           
  6750                           	psect	text47
  6751   001956                     __ptext47:
  6752                           	callstack 0
  6753   001956                     i2___awmod:
  6754                           	callstack 21
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;incstack = 0
  6758   001956  6A06               	clrf	i2___awmod@sign^0,c
  6759   001958  AE02               	btfss	(i2___awmod@dividend+1)^0,7,c
  6760   00195A  D006               	goto	i2l3073
  6761   00195C  6C01               	negf	i2___awmod@dividend^0,c
  6762   00195E  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  6763   001960  B0D8               	btfsc	status,0,c
  6764   001962  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  6765   001964  0E01               	movlw	1
  6766   001966  6E06               	movwf	i2___awmod@sign^0,c
  6767   001968                     i2l3073:
  6768   001968  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  6769   00196A  D004               	goto	i2l3077
  6770   00196C  6C03               	negf	i2___awmod@divisor^0,c
  6771   00196E  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  6772   001970  B0D8               	btfsc	status,0,c
  6773   001972  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  6774   001974                     i2l3077:
  6775   001974  5003               	movf	i2___awmod@divisor^0,w,c
  6776   001976  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  6777   001978  B4D8               	btfsc	status,2,c
  6778   00197A  D018               	goto	i2l3093
  6779   00197C  0E01               	movlw	1
  6780   00197E  6E05               	movwf	i2___awmod@counter^0,c
  6781   001980  D004               	goto	i2l3083
  6782   001982                     i2l3081:
  6783   001982  90D8               	bcf	status,0,c
  6784   001984  3603               	rlcf	i2___awmod@divisor^0,f,c
  6785   001986  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  6786   001988  2A05               	incf	i2___awmod@counter^0,f,c
  6787   00198A                     i2l3083:
  6788   00198A  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  6789   00198C  D7FA               	goto	i2l3081
  6790   00198E                     i2u198_40:
  6791   00198E  5003               	movf	i2___awmod@divisor^0,w,c
  6792   001990  5C01               	subwf	i2___awmod@dividend^0,w,c
  6793   001992  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  6794   001994  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  6795   001996  A0D8               	btfss	status,0,c
  6796   001998  D004               	goto	i2l3089
  6797   00199A  5003               	movf	i2___awmod@divisor^0,w,c
  6798   00199C  5E01               	subwf	i2___awmod@dividend^0,f,c
  6799   00199E  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  6800   0019A0  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  6801   0019A2                     i2l3089:
  6802   0019A2  90D8               	bcf	status,0,c
  6803   0019A4  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  6804   0019A6  3203               	rrcf	i2___awmod@divisor^0,f,c
  6805   0019A8  2E05               	decfsz	i2___awmod@counter^0,f,c
  6806   0019AA  D7F1               	goto	i2u198_40
  6807   0019AC                     i2l3093:
  6808   0019AC  5006               	movf	i2___awmod@sign^0,w,c
  6809   0019AE  B4D8               	btfsc	status,2,c
  6810   0019B0  D004               	goto	i2l3097
  6811   0019B2  6C01               	negf	i2___awmod@dividend^0,c
  6812   0019B4  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  6813   0019B6  B0D8               	btfsc	status,0,c
  6814   0019B8  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  6815   0019BA                     i2l3097:
  6816   0019BA  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  6817   0019BE  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  6818   0019C2  0012               	return		;funcret
  6819   0019C4                     __end_ofi2___awmod:
  6820                           	callstack 0
  6821                           
  6822 ;; *************** function i2___awdiv *****************
  6823 ;; Defined at:
  6824 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c"
  6825 ;; Parameters:    Size  Location     Type
  6826 ;;  dividend        2    0[COMRAM] int 
  6827 ;;  divisor         2    2[COMRAM] int 
  6828 ;; Auto vars:     Size  Location     Type
  6829 ;;  quotient        2    6[COMRAM] int 
  6830 ;;  sign            1    5[COMRAM] unsigned char 
  6831 ;;  counter         1    4[COMRAM] unsigned char 
  6832 ;; Return value:  Size  Location     Type
  6833 ;;                  2    0[COMRAM] int 
  6834 ;; Registers used:
  6835 ;;		wreg, status,2, status,0
  6836 ;; Tracked objects:
  6837 ;;		On entry : 0/0
  6838 ;;		On exit  : 0/0
  6839 ;;		Unchanged: 0/0
  6840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6841 ;;      Params:         4       0       0       0       0       0       0       0       0
  6842 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6843 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6844 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6845 ;;Total ram usage:        8 bytes
  6846 ;; Hardware stack levels used: 1
  6847 ;; This function calls:
  6848 ;;		Nothing
  6849 ;; This function is called by:
  6850 ;;		_fin
  6851 ;;		i2_contador
  6852 ;; This function uses a non-reentrant model
  6853 ;;
  6854                           
  6855                           	psect	text48
  6856   0015B0                     __ptext48:
  6857                           	callstack 0
  6858   0015B0                     i2___awdiv:
  6859                           	callstack 21
  6860                           
  6861                           ;incstack = 0
  6862   0015B0  6A06               	clrf	i2___awdiv@sign^0,c
  6863   0015B2  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  6864   0015B4  D006               	goto	i2l3029
  6865   0015B6  6C03               	negf	i2___awdiv@divisor^0,c
  6866   0015B8  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
  6867   0015BA  B0D8               	btfsc	status,0,c
  6868   0015BC  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
  6869   0015BE  0E01               	movlw	1
  6870   0015C0  6E06               	movwf	i2___awdiv@sign^0,c
  6871   0015C2                     i2l3029:
  6872   0015C2  AE02               	btfss	(i2___awdiv@dividend+1)^0,7,c
  6873   0015C4  D006               	goto	i2l3035
  6874   0015C6  6C01               	negf	i2___awdiv@dividend^0,c
  6875   0015C8  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
  6876   0015CA  B0D8               	btfsc	status,0,c
  6877   0015CC  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
  6878   0015CE  0E01               	movlw	1
  6879   0015D0  1A06               	xorwf	i2___awdiv@sign^0,f,c
  6880   0015D2                     i2l3035:
  6881   0015D2  0E00               	movlw	0
  6882   0015D4  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
  6883   0015D6  0E00               	movlw	0
  6884   0015D8  6E07               	movwf	i2___awdiv@quotient^0,c
  6885   0015DA  5003               	movf	i2___awdiv@divisor^0,w,c
  6886   0015DC  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
  6887   0015DE  B4D8               	btfsc	status,2,c
  6888   0015E0  D01C               	goto	i2l3057
  6889   0015E2  0E01               	movlw	1
  6890   0015E4  6E05               	movwf	i2___awdiv@counter^0,c
  6891   0015E6  D004               	goto	i2l3043
  6892   0015E8                     i2l3041:
  6893   0015E8  90D8               	bcf	status,0,c
  6894   0015EA  3603               	rlcf	i2___awdiv@divisor^0,f,c
  6895   0015EC  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
  6896   0015EE  2A05               	incf	i2___awdiv@counter^0,f,c
  6897   0015F0                     i2l3043:
  6898   0015F0  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  6899   0015F2  D7FA               	goto	i2l3041
  6900   0015F4                     i2u192_40:
  6901   0015F4  90D8               	bcf	status,0,c
  6902   0015F6  3607               	rlcf	i2___awdiv@quotient^0,f,c
  6903   0015F8  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
  6904   0015FA  5003               	movf	i2___awdiv@divisor^0,w,c
  6905   0015FC  5C01               	subwf	i2___awdiv@dividend^0,w,c
  6906   0015FE  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  6907   001600  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
  6908   001602  A0D8               	btfss	status,0,c
  6909   001604  D005               	goto	i2l3053
  6910   001606  5003               	movf	i2___awdiv@divisor^0,w,c
  6911   001608  5E01               	subwf	i2___awdiv@dividend^0,f,c
  6912   00160A  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  6913   00160C  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
  6914   00160E  8007               	bsf	i2___awdiv@quotient^0,0,c
  6915   001610                     i2l3053:
  6916   001610  90D8               	bcf	status,0,c
  6917   001612  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
  6918   001614  3203               	rrcf	i2___awdiv@divisor^0,f,c
  6919   001616  2E05               	decfsz	i2___awdiv@counter^0,f,c
  6920   001618  D7ED               	goto	i2u192_40
  6921   00161A                     i2l3057:
  6922   00161A  5006               	movf	i2___awdiv@sign^0,w,c
  6923   00161C  B4D8               	btfsc	status,2,c
  6924   00161E  D004               	goto	i2l3061
  6925   001620  6C07               	negf	i2___awdiv@quotient^0,c
  6926   001622  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
  6927   001624  B0D8               	btfsc	status,0,c
  6928   001626  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
  6929   001628                     i2l3061:
  6930   001628  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  6931   00162C  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  6932   001630  0012               	return		;funcret
  6933   001632                     __end_ofi2___awdiv:
  6934                           	callstack 0
  6935                           
  6936 ;; *************** function i2_SEG *****************
  6937 ;; Defined at:
  6938 ;;		line 282 in file "Lab5.c"
  6939 ;; Parameters:    Size  Location     Type
  6940 ;;		None
  6941 ;; Auto vars:     Size  Location     Type
  6942 ;;		None
  6943 ;; Return value:  Size  Location     Type
  6944 ;;                  1    wreg      void 
  6945 ;; Registers used:
  6946 ;;		None
  6947 ;; Tracked objects:
  6948 ;;		On entry : 0/0
  6949 ;;		On exit  : 0/0
  6950 ;;		Unchanged: 0/0
  6951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6952 ;;      Params:         0       0       0       0       0       0       0       0       0
  6953 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6954 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6955 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6956 ;;Total ram usage:        0 bytes
  6957 ;; Hardware stack levels used: 1
  6958 ;; This function calls:
  6959 ;;		Nothing
  6960 ;; This function is called by:
  6961 ;;		_ok
  6962 ;;		_fin
  6963 ;;		i2_contador
  6964 ;;		i2_reiCon
  6965 ;; This function uses a non-reentrant model
  6966 ;;
  6967                           
  6968                           	psect	text49
  6969   002000                     __ptext49:
  6970                           	callstack 0
  6971   002000                     i2_SEG:
  6972                           	callstack 22
  6973                           
  6974                           ;Lab5.c: 283: LATD = a;
  6975                           
  6976                           ;incstack = 0
  6977   002000  C037  FF8C         	movff	_a,3980	;volatile
  6978   002004  0012               	return		;funcret
  6979   002006                     __end_ofi2_SEG:
  6980                           	callstack 0
  6981                           
  6982 ;; *************** function i2_RGB *****************
  6983 ;; Defined at:
  6984 ;;		line 244 in file "Lab5.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;		None
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;		None
  6989 ;; Return value:  Size  Location     Type
  6990 ;;                  1    wreg      void 
  6991 ;; Registers used:
  6992 ;;		wreg, status,2, status,0
  6993 ;; Tracked objects:
  6994 ;;		On entry : 0/0
  6995 ;;		On exit  : 0/0
  6996 ;;		Unchanged: 0/0
  6997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6998 ;;      Params:         0       0       0       0       0       0       0       0       0
  6999 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7000 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7001 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7002 ;;Total ram usage:        0 bytes
  7003 ;; Hardware stack levels used: 1
  7004 ;; This function calls:
  7005 ;;		Nothing
  7006 ;; This function is called by:
  7007 ;;		_ok
  7008 ;;		_fin
  7009 ;;		i2_contador
  7010 ;;		i2_reiCon
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           	psect	text50
  7015   0016AA                     __ptext50:
  7016                           	callstack 0
  7017   0016AA                     i2_RGB:
  7018                           	callstack 22
  7019                           
  7020                           ;Lab5.c: 245: if (flagInicio == 0){
  7021                           
  7022                           ;incstack = 0
  7023   0016AA  503D               	movf	_flagInicio^0,w,c
  7024   0016AC  103E               	iorwf	(_flagInicio+1)^0,w,c
  7025   0016AE  A4D8               	btfss	status,2,c
  7026   0016B0  D004               	goto	i2l2995
  7027                           
  7028                           ;Lab5.c: 246: LATE0 = 0;
  7029   0016B2  908D               	bcf	3981,0,c	;volatile
  7030                           
  7031                           ;Lab5.c: 247: LATE1 = 0;
  7032   0016B4  928D               	bcf	3981,1,c	;volatile
  7033                           
  7034                           ;Lab5.c: 248: LATE2 = 0;
  7035   0016B6  948D               	bcf	3981,2,c	;volatile
  7036                           
  7037                           ;Lab5.c: 249: }
  7038   0016B8  0012               	return	
  7039   0016BA                     i2l2995:
  7040                           
  7041                           ;Lab5.c: 250: else if (b == 0){
  7042   0016BA  5035               	movf	_b^0,w,c
  7043   0016BC  1036               	iorwf	(_b+1)^0,w,c
  7044   0016BE  A4D8               	btfss	status,2,c
  7045   0016C0  D004               	goto	i2l2999
  7046                           
  7047                           ;Lab5.c: 251: LATE0 = 1;
  7048   0016C2  808D               	bsf	3981,0,c	;volatile
  7049                           
  7050                           ;Lab5.c: 252: LATE1 = 0;
  7051   0016C4  928D               	bcf	3981,1,c	;volatile
  7052                           
  7053                           ;Lab5.c: 253: LATE2 = 1;
  7054   0016C6  848D               	bsf	3981,2,c	;volatile
  7055                           
  7056                           ;Lab5.c: 254: }
  7057   0016C8  0012               	return	
  7058   0016CA                     i2l2999:
  7059                           
  7060                           ;Lab5.c: 255: else if (b == 1){
  7061   0016CA  0435               	decf	_b^0,w,c
  7062   0016CC  1036               	iorwf	(_b+1)^0,w,c
  7063   0016CE  A4D8               	btfss	status,2,c
  7064   0016D0  D004               	goto	i2l3003
  7065                           
  7066                           ;Lab5.c: 256: LATE0 = 0;
  7067   0016D2  908D               	bcf	3981,0,c	;volatile
  7068                           
  7069                           ;Lab5.c: 257: LATE1 = 0;
  7070   0016D4  928D               	bcf	3981,1,c	;volatile
  7071                           
  7072                           ;Lab5.c: 258: LATE2 = 1;
  7073   0016D6  848D               	bsf	3981,2,c	;volatile
  7074                           
  7075                           ;Lab5.c: 259: }
  7076   0016D8  0012               	return	
  7077   0016DA                     i2l3003:
  7078                           
  7079                           ;Lab5.c: 260: else if (b == 2){
  7080   0016DA  0E02               	movlw	2
  7081   0016DC  1835               	xorwf	_b^0,w,c
  7082   0016DE  1036               	iorwf	(_b+1)^0,w,c
  7083   0016E0  A4D8               	btfss	status,2,c
  7084   0016E2  D004               	goto	i2l3007
  7085                           
  7086                           ;Lab5.c: 261: LATE0 = 0;
  7087   0016E4  908D               	bcf	3981,0,c	;volatile
  7088                           
  7089                           ;Lab5.c: 262: LATE1 = 1;
  7090   0016E6  828D               	bsf	3981,1,c	;volatile
  7091                           
  7092                           ;Lab5.c: 263: LATE2 = 1;
  7093   0016E8  848D               	bsf	3981,2,c	;volatile
  7094                           
  7095                           ;Lab5.c: 264: }
  7096   0016EA  0012               	return	
  7097   0016EC                     i2l3007:
  7098                           
  7099                           ;Lab5.c: 265: else if (b == 3){
  7100   0016EC  0E03               	movlw	3
  7101   0016EE  1835               	xorwf	_b^0,w,c
  7102   0016F0  1036               	iorwf	(_b+1)^0,w,c
  7103   0016F2  A4D8               	btfss	status,2,c
  7104   0016F4  D004               	goto	i2l3011
  7105                           
  7106                           ;Lab5.c: 266: LATE0 = 0;
  7107   0016F6  908D               	bcf	3981,0,c	;volatile
  7108                           
  7109                           ;Lab5.c: 267: LATE1 = 1;
  7110   0016F8  828D               	bsf	3981,1,c	;volatile
  7111                           
  7112                           ;Lab5.c: 268: LATE2 = 0;
  7113   0016FA  948D               	bcf	3981,2,c	;volatile
  7114                           
  7115                           ;Lab5.c: 269: }
  7116   0016FC  0012               	return	
  7117   0016FE                     i2l3011:
  7118                           
  7119                           ;Lab5.c: 270: else if (b == 4){
  7120   0016FE  0E04               	movlw	4
  7121   001700  1835               	xorwf	_b^0,w,c
  7122   001702  1036               	iorwf	(_b+1)^0,w,c
  7123   001704  A4D8               	btfss	status,2,c
  7124   001706  D004               	goto	i2l3015
  7125                           
  7126                           ;Lab5.c: 271: LATE0 = 1;
  7127   001708  808D               	bsf	3981,0,c	;volatile
  7128                           
  7129                           ;Lab5.c: 272: LATE1 = 1;
  7130   00170A  828D               	bsf	3981,1,c	;volatile
  7131                           
  7132                           ;Lab5.c: 273: LATE2 = 0;
  7133   00170C  948D               	bcf	3981,2,c	;volatile
  7134                           
  7135                           ;Lab5.c: 274: }
  7136   00170E  0012               	return	
  7137   001710                     i2l3015:
  7138                           
  7139                           ;Lab5.c: 275: else if (b == 5){
  7140   001710  0E05               	movlw	5
  7141   001712  1835               	xorwf	_b^0,w,c
  7142   001714  1036               	iorwf	(_b+1)^0,w,c
  7143   001716  A4D8               	btfss	status,2,c
  7144   001718  0012               	return	
  7145                           
  7146                           ;Lab5.c: 276: LATE0 = 1;
  7147   00171A  808D               	bsf	3981,0,c	;volatile
  7148                           
  7149                           ;Lab5.c: 277: LATE1 = 1;
  7150   00171C  828D               	bsf	3981,1,c	;volatile
  7151                           
  7152                           ;Lab5.c: 278: LATE2 = 1;
  7153   00171E  848D               	bsf	3981,2,c	;volatile
  7154   001720  0012               	return	
  7155   001722                     __end_ofi2_RGB:
  7156                           	callstack 0
  7157                           
  7158 ;; *************** function i2_MensajeLCD_Var *****************
  7159 ;; Defined at:
  7160 ;;		line 234 in file "LibLCDXC9.h"
  7161 ;; Parameters:    Size  Location     Type
  7162 ;;  a               1    5[COMRAM] PTR unsigned char 
  7163 ;;		 -> STR_16(12), STR_15(14), STR_14(11), STR_13(9), 
  7164 ;;		 -> STR_12(11), STR_11(12), STR_10(14), STR_9(11), 
  7165 ;;		 -> STR_8(9), STR_7(18), STR_6(18), STR_5(15), 
  7166 ;;		 -> STR_4(11), STR_3(9), STR_2(18), STR_1(12), 
  7167 ;; Auto vars:     Size  Location     Type
  7168 ;;		None
  7169 ;; Return value:  Size  Location     Type
  7170 ;;                  1    wreg      void 
  7171 ;; Registers used:
  7172 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7173 ;; Tracked objects:
  7174 ;;		On entry : 0/0
  7175 ;;		On exit  : 0/0
  7176 ;;		Unchanged: 0/0
  7177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7178 ;;      Params:         1       0       0       0       0       0       0       0       0
  7179 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7180 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7181 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7182 ;;Total ram usage:        1 bytes
  7183 ;; Hardware stack levels used: 1
  7184 ;; Hardware stack levels required when called: 3
  7185 ;; This function calls:
  7186 ;;		i2_EscribeLCD_c
  7187 ;; This function is called by:
  7188 ;;		_ok
  7189 ;;		_borrarTexto
  7190 ;;		_fin
  7191 ;;		i2_contador
  7192 ;;		i2_parEmerg
  7193 ;;		i2_reiCon
  7194 ;; This function uses a non-reentrant model
  7195 ;;
  7196                           
  7197                           	psect	text51
  7198   001E98                     __ptext51:
  7199                           	callstack 0
  7200   001E98                     i2_MensajeLCD_Var:
  7201                           	callstack 19
  7202                           
  7203                           ;LibLCDXC9.h: 238: while(*a != '\0'){
  7204                           
  7205                           ;incstack = 0
  7206   001E98  D009               	goto	i2l2981
  7207   001E9A                     i2l2977:
  7208                           
  7209                           ;LibLCDXC9.h: 239: EscribeLCD_c(*a);
  7210   001E9A  C006  FFF6         	movff	i2MensajeLCD_Var@a,tblptrl
  7211   001E9E                     	if	1	;There is more than 1 active tblptr byte
  7212   001E9E  0E08               	movlw	high __smallconst
  7213   001EA0  6EF7               	movwf	tblptrh,c
  7214   001EA2                     	endif
  7215   001EA2                     	if	0	;tblptru may be non-zero
  7216   001EA2                     	endif
  7217   001EA2                     	if	0	;tblptru may be non-zero
  7218   001EA2                     	endif
  7219   001EA2  0008               	tblrd		*
  7220   001EA4  50F5               	movf	tablat,w,c
  7221   001EA6  ECD0  F00F         	call	i2_EscribeLCD_c
  7222                           
  7223                           ;LibLCDXC9.h: 240: a++;
  7224   001EAA  2A06               	incf	i2MensajeLCD_Var@a^0,f,c
  7225   001EAC                     i2l2981:
  7226   001EAC  C006  FFF6         	movff	i2MensajeLCD_Var@a,tblptrl
  7227   001EB0                     	if	1	;There is more than 1 active tblptr byte
  7228   001EB0  0E08               	movlw	high __smallconst
  7229   001EB2  6EF7               	movwf	tblptrh,c
  7230   001EB4                     	endif
  7231   001EB4                     	if	0	;tblptru may be non-zero
  7232   001EB4                     	endif
  7233   001EB4                     	if	0	;tblptru may be non-zero
  7234   001EB4                     	endif
  7235   001EB4  0008               	tblrd		*
  7236   001EB6  50F5               	movf	tablat,w,c
  7237   001EB8  0900               	iorlw	0
  7238   001EBA  B4D8               	btfsc	status,2,c
  7239   001EBC  0012               	return	
  7240   001EBE  D7ED               	goto	i2l2977
  7241   001EC0                     __end_ofi2_MensajeLCD_Var:
  7242                           	callstack 0
  7243                           
  7244 ;; *************** function i2_DireccionaLCD *****************
  7245 ;; Defined at:
  7246 ;;		line 243 in file "LibLCDXC9.h"
  7247 ;; Parameters:    Size  Location     Type
  7248 ;;  a               1    wreg     unsigned char 
  7249 ;; Auto vars:     Size  Location     Type
  7250 ;;  a               1    4[COMRAM] unsigned char 
  7251 ;; Return value:  Size  Location     Type
  7252 ;;                  1    wreg      void 
  7253 ;; Registers used:
  7254 ;;		wreg, status,2, status,0, cstack
  7255 ;; Tracked objects:
  7256 ;;		On entry : 0/0
  7257 ;;		On exit  : 0/0
  7258 ;;		Unchanged: 0/0
  7259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7260 ;;      Params:         0       0       0       0       0       0       0       0       0
  7261 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7262 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7263 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7264 ;;Total ram usage:        1 bytes
  7265 ;; Hardware stack levels used: 1
  7266 ;; Hardware stack levels required when called: 2
  7267 ;; This function calls:
  7268 ;;		i2_EnviaDato
  7269 ;;		i2_HabilitaLCD
  7270 ;;		i2_RetardoLCD
  7271 ;; This function is called by:
  7272 ;;		_ok
  7273 ;;		_borrarTexto
  7274 ;;		_fin
  7275 ;;		i2_contador
  7276 ;;		i2_reiCon
  7277 ;; This function uses a non-reentrant model
  7278 ;;
  7279                           
  7280                           	psect	text52
  7281   001F8A                     __ptext52:
  7282                           	callstack 0
  7283   001F8A                     i2_DireccionaLCD:
  7284                           	callstack 20
  7285                           
  7286                           ;incstack = 0
  7287                           ;i2DireccionaLCD@a stored from wreg
  7288   001F8A  6E05               	movwf	i2DireccionaLCD@a^0,c
  7289                           
  7290                           ;LibLCDXC9.h: 246: LATA4=0;
  7291   001F8C  9889               	bcf	3977,4,c	;volatile
  7292                           
  7293                           ;LibLCDXC9.h: 247: EnviaDato(a);
  7294   001F8E  5005               	movf	i2DireccionaLCD@a^0,w,c
  7295   001F90  EC03  F00E         	call	i2_EnviaDato
  7296                           
  7297                           ;LibLCDXC9.h: 248: HabilitaLCD();
  7298   001F94  ECF6  F00F         	call	i2_HabilitaLCD	;wreg free
  7299                           
  7300                           ;LibLCDXC9.h: 249: RetardoLCD(4);
  7301   001F98  0E04               	movlw	4
  7302   001F9A  EC65  F00D         	call	i2_RetardoLCD
  7303   001F9E  0012               	return		;funcret
  7304   001FA0                     __end_ofi2_DireccionaLCD:
  7305                           	callstack 0
  7306                           
  7307 ;; *************** function i2_BorraLCD *****************
  7308 ;; Defined at:
  7309 ;;		line 107 in file "LibLCDXC9.h"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;		None
  7312 ;; Auto vars:     Size  Location     Type
  7313 ;;		None
  7314 ;; Return value:  Size  Location     Type
  7315 ;;                  1    wreg      void 
  7316 ;; Registers used:
  7317 ;;		wreg, status,2, status,0, cstack
  7318 ;; Tracked objects:
  7319 ;;		On entry : 0/0
  7320 ;;		On exit  : 0/0
  7321 ;;		Unchanged: 0/0
  7322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7323 ;;      Params:         0       0       0       0       0       0       0       0       0
  7324 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7325 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7326 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7327 ;;Total ram usage:        0 bytes
  7328 ;; Hardware stack levels used: 1
  7329 ;; Hardware stack levels required when called: 2
  7330 ;; This function calls:
  7331 ;;		i2_EnviaDato
  7332 ;;		i2_HabilitaLCD
  7333 ;;		i2_RetardoLCD
  7334 ;; This function is called by:
  7335 ;;		_ok
  7336 ;;		_borrarTexto
  7337 ;;		_fin
  7338 ;;		i2_contador
  7339 ;;		i2_parEmerg
  7340 ;;		i2_reiCon
  7341 ;; This function uses a non-reentrant model
  7342 ;;
  7343                           
  7344                           	psect	text53
  7345   001FCA                     __ptext53:
  7346                           	callstack 0
  7347   001FCA                     i2_BorraLCD:
  7348                           	callstack 20
  7349                           
  7350                           ;LibLCDXC9.h: 109: LATA4=0;
  7351                           
  7352                           ;incstack = 0
  7353   001FCA  9889               	bcf	3977,4,c	;volatile
  7354                           
  7355                           ;LibLCDXC9.h: 110: EnviaDato(0x01);
  7356   001FCC  0E01               	movlw	1
  7357   001FCE  EC03  F00E         	call	i2_EnviaDato
  7358                           
  7359                           ;LibLCDXC9.h: 111: HabilitaLCD();
  7360   001FD2  ECF6  F00F         	call	i2_HabilitaLCD	;wreg free
  7361                           
  7362                           ;LibLCDXC9.h: 112: RetardoLCD(2);
  7363   001FD6  0E02               	movlw	2
  7364   001FD8  EC65  F00D         	call	i2_RetardoLCD
  7365   001FDC  0012               	return		;funcret
  7366   001FDE                     __end_ofi2_BorraLCD:
  7367                           	callstack 0
  7368                           
  7369 ;; *************** function _escribirDig *****************
  7370 ;; Defined at:
  7371 ;;		line 140 in file "Lab5.c"
  7372 ;; Parameters:    Size  Location     Type
  7373 ;;  lectura         1    wreg     unsigned char 
  7374 ;; Auto vars:     Size  Location     Type
  7375 ;;  lectura         1    5[COMRAM] unsigned char 
  7376 ;; Return value:  Size  Location     Type
  7377 ;;                  2  275[None  ] int 
  7378 ;; Registers used:
  7379 ;;		wreg, status,2, status,0, cstack
  7380 ;; Tracked objects:
  7381 ;;		On entry : 0/0
  7382 ;;		On exit  : 0/0
  7383 ;;		Unchanged: 0/0
  7384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7385 ;;      Params:         0       0       0       0       0       0       0       0       0
  7386 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7388 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7389 ;;Total ram usage:        1 bytes
  7390 ;; Hardware stack levels used: 1
  7391 ;; Hardware stack levels required when called: 3
  7392 ;; This function calls:
  7393 ;;		i2_EscribeLCD_c
  7394 ;; This function is called by:
  7395 ;;		_ISR
  7396 ;; This function uses a non-reentrant model
  7397 ;;
  7398                           
  7399                           	psect	text54
  7400   001B72                     __ptext54:
  7401                           	callstack 0
  7402   001B72                     _escribirDig:
  7403                           	callstack 20
  7404                           
  7405                           ;incstack = 0
  7406                           ;escribirDig@lectura stored from wreg
  7407   001B72  6E06               	movwf	escribirDig@lectura^0,c
  7408                           
  7409                           ;Lab5.c: 141: if(flagEscribir == 1){
  7410   001B74  0441               	decf	_flagEscribir^0,w,c
  7411   001B76  1042               	iorwf	(_flagEscribir+1)^0,w,c
  7412   001B78  A4D8               	btfss	status,2,c
  7413   001B7A  0012               	return	
  7414                           
  7415                           ;Lab5.c: 142: if(flagDig==0){
  7416   001B7C  503F               	movf	_flagDig^0,w,c
  7417   001B7E  1040               	iorwf	(_flagDig+1)^0,w,c
  7418   001B80  A4D8               	btfss	status,2,c
  7419   001B82  D00D               	goto	i2l3631
  7420                           
  7421                           ;Lab5.c: 143: d=lectura;
  7422   001B84  C006  F09D         	movff	escribirDig@lectura,_d
  7423   001B88  0100               	movlb	0	; () banked
  7424   001B8A  6B9E               	clrf	(_d+1)& (0+255),b
  7425                           
  7426                           ; BSR set to: 0
  7427                           ;Lab5.c: 144: EscribeLCD_c(d+ '0');
  7428   001B8C  519D               	movf	_d& (0+255),w,b
  7429   001B8E  0F30               	addlw	48
  7430   001B90  ECD0  F00F         	call	i2_EscribeLCD_c
  7431                           
  7432                           ;Lab5.c: 145: flagDig=1;
  7433   001B94  0E00               	movlw	0
  7434   001B96  6E40               	movwf	(_flagDig+1)^0,c
  7435   001B98  0E01               	movlw	1
  7436   001B9A  6E3F               	movwf	_flagDig^0,c
  7437   001B9C  0012               	return	
  7438   001B9E                     i2l3631:
  7439                           
  7440                           ;Lab5.c: 148: else if (flagDig==1){
  7441   001B9E  043F               	decf	_flagDig^0,w,c
  7442   001BA0  1040               	iorwf	(_flagDig+1)^0,w,c
  7443   001BA2  A4D8               	btfss	status,2,c
  7444   001BA4  0012               	return	
  7445                           
  7446                           ;Lab5.c: 149: u=lectura;
  7447   001BA6  C006  F09F         	movff	escribirDig@lectura,_u
  7448   001BAA  0100               	movlb	0	; () banked
  7449   001BAC  6BA0               	clrf	(_u+1)& (0+255),b
  7450                           
  7451                           ; BSR set to: 0
  7452                           ;Lab5.c: 150: EscribeLCD_c(u+ '0');
  7453   001BAE  519F               	movf	_u& (0+255),w,b
  7454   001BB0  0F30               	addlw	48
  7455   001BB2  ECD0  F00F         	call	i2_EscribeLCD_c
  7456                           
  7457                           ;Lab5.c: 151: flagDig=2;
  7458   001BB6  0E00               	movlw	0
  7459   001BB8  6E40               	movwf	(_flagDig+1)^0,c
  7460   001BBA  0E02               	movlw	2
  7461   001BBC  6E3F               	movwf	_flagDig^0,c
  7462   001BBE  0012               	return		;funcret
  7463   001BC0                     __end_of_escribirDig:
  7464                           	callstack 0
  7465                           
  7466 ;; *************** function i2_EscribeLCD_c *****************
  7467 ;; Defined at:
  7468 ;;		line 131 in file "LibLCDXC9.h"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;  a               1    wreg     unsigned char 
  7471 ;; Auto vars:     Size  Location     Type
  7472 ;;  a               1    4[COMRAM] unsigned char 
  7473 ;; Return value:  Size  Location     Type
  7474 ;;                  1    wreg      void 
  7475 ;; Registers used:
  7476 ;;		wreg, status,2, status,0, cstack
  7477 ;; Tracked objects:
  7478 ;;		On entry : 0/0
  7479 ;;		On exit  : 0/0
  7480 ;;		Unchanged: 0/0
  7481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7482 ;;      Params:         0       0       0       0       0       0       0       0       0
  7483 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7484 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7485 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7486 ;;Total ram usage:        1 bytes
  7487 ;; Hardware stack levels used: 1
  7488 ;; Hardware stack levels required when called: 2
  7489 ;; This function calls:
  7490 ;;		i2_EnviaDato
  7491 ;;		i2_HabilitaLCD
  7492 ;;		i2_RetardoLCD
  7493 ;; This function is called by:
  7494 ;;		_escribirDig
  7495 ;;		i2_MensajeLCD_Var
  7496 ;; This function uses a non-reentrant model
  7497 ;;
  7498                           
  7499                           	psect	text55
  7500   001FA0                     __ptext55:
  7501                           	callstack 0
  7502   001FA0                     i2_EscribeLCD_c:
  7503                           	callstack 19
  7504                           
  7505                           ;incstack = 0
  7506                           ;i2EscribeLCD_c@a stored from wreg
  7507   001FA0  6E05               	movwf	i2EscribeLCD_c@a^0,c
  7508                           
  7509                           ;LibLCDXC9.h: 135: LATA4=1;
  7510   001FA2  8889               	bsf	3977,4,c	;volatile
  7511                           
  7512                           ;LibLCDXC9.h: 136: EnviaDato(a);
  7513   001FA4  5005               	movf	i2EscribeLCD_c@a^0,w,c
  7514   001FA6  EC03  F00E         	call	i2_EnviaDato
  7515                           
  7516                           ;LibLCDXC9.h: 137: HabilitaLCD();
  7517   001FAA  ECF6  F00F         	call	i2_HabilitaLCD	;wreg free
  7518                           
  7519                           ;LibLCDXC9.h: 138: RetardoLCD(4);
  7520   001FAE  0E04               	movlw	4
  7521   001FB0  EC65  F00D         	call	i2_RetardoLCD
  7522   001FB4  0012               	return		;funcret
  7523   001FB6                     __end_ofi2_EscribeLCD_c:
  7524                           	callstack 0
  7525                           
  7526 ;; *************** function i2_EnviaDato *****************
  7527 ;; Defined at:
  7528 ;;		line 54 in file "LibLCDXC9.h"
  7529 ;; Parameters:    Size  Location     Type
  7530 ;;  a               1    wreg     unsigned char 
  7531 ;; Auto vars:     Size  Location     Type
  7532 ;;  a               1    3[COMRAM] unsigned char 
  7533 ;; Return value:  Size  Location     Type
  7534 ;;                  1    wreg      void 
  7535 ;; Registers used:
  7536 ;;		wreg, status,2, status,0, cstack
  7537 ;; Tracked objects:
  7538 ;;		On entry : 0/0
  7539 ;;		On exit  : 0/0
  7540 ;;		Unchanged: 0/0
  7541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7542 ;;      Params:         0       0       0       0       0       0       0       0       0
  7543 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7544 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7545 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7546 ;;Total ram usage:        2 bytes
  7547 ;; Hardware stack levels used: 1
  7548 ;; Hardware stack levels required when called: 1
  7549 ;; This function calls:
  7550 ;;		i2_HabilitaLCD
  7551 ;;		i2_RetardoLCD
  7552 ;; This function is called by:
  7553 ;;		i2_BorraLCD
  7554 ;;		i2_EscribeLCD_c
  7555 ;;		i2_EscribeLCD_n8
  7556 ;;		i2_DireccionaLCD
  7557 ;; This function uses a non-reentrant model
  7558 ;;
  7559                           
  7560                           	psect	text56
  7561   001C06                     __ptext56:
  7562                           	callstack 0
  7563   001C06                     i2_EnviaDato:
  7564                           	callstack 19
  7565                           
  7566                           ;incstack = 0
  7567                           ;i2EnviaDato@a stored from wreg
  7568   001C06  6E04               	movwf	i2EnviaDato@a^0,c
  7569                           
  7570                           ;LibLCDXC9.h: 55: if(interfaz==4){
  7571   001C08  0E04               	movlw	4
  7572   001C0A  1847               	xorwf	_interfaz^0,w,c
  7573   001C0C  A4D8               	btfss	status,2,c
  7574   001C0E  D017               	goto	i2l2613
  7575                           
  7576                           ;LibLCDXC9.h: 56: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  7577   001C10  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  7578   001C14  0EF0               	movlw	240
  7579   001C16  1603               	andwf	??i2_EnviaDato^0,f,c
  7580   001C18  508C               	movf	140,w,c	;volatile
  7581   001C1A  0B0F               	andlw	15
  7582   001C1C  1003               	iorwf	??i2_EnviaDato^0,w,c
  7583   001C1E  6E8C               	movwf	140,c	;volatile
  7584                           
  7585                           ;LibLCDXC9.h: 57: HabilitaLCD();
  7586   001C20  ECF6  F00F         	call	i2_HabilitaLCD	;wreg free
  7587                           
  7588                           ;LibLCDXC9.h: 58: RetardoLCD(1);
  7589   001C24  0E01               	movlw	1
  7590   001C26  EC65  F00D         	call	i2_RetardoLCD
  7591                           
  7592                           ;LibLCDXC9.h: 59: LATD=(LATD & 0b00001111) | (a<<4);
  7593   001C2A  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  7594   001C2E  3A03               	swapf	??i2_EnviaDato^0,f,c
  7595   001C30  0EF0               	movlw	240
  7596   001C32  1603               	andwf	??i2_EnviaDato^0,f,c
  7597   001C34  508C               	movf	140,w,c	;volatile
  7598   001C36  0B0F               	andlw	15
  7599   001C38  1003               	iorwf	??i2_EnviaDato^0,w,c
  7600   001C3A  6E8C               	movwf	140,c	;volatile
  7601                           
  7602                           ;LibLCDXC9.h: 62: }else if(interfaz==8){
  7603   001C3C  0012               	return	
  7604   001C3E                     i2l2613:
  7605   001C3E  0E08               	movlw	8
  7606   001C40  1847               	xorwf	_interfaz^0,w,c
  7607   001C42  A4D8               	btfss	status,2,c
  7608   001C44  0012               	return	
  7609                           
  7610                           ;LibLCDXC9.h: 63: LATD=a;
  7611   001C46  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  7612   001C4A  0012               	return		;funcret
  7613   001C4C                     __end_ofi2_EnviaDato:
  7614                           	callstack 0
  7615                           
  7616 ;; *************** function i2_RetardoLCD *****************
  7617 ;; Defined at:
  7618 ;;		line 287 in file "LibLCDXC9.h"
  7619 ;; Parameters:    Size  Location     Type
  7620 ;;  a               1    wreg     unsigned char 
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;  a               1    1[COMRAM] unsigned char 
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  1    wreg      void 
  7625 ;; Registers used:
  7626 ;;		wreg, status,2, status,0
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7632 ;;      Params:         0       0       0       0       0       0       0       0       0
  7633 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7634 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7635 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7636 ;;Total ram usage:        2 bytes
  7637 ;; Hardware stack levels used: 1
  7638 ;; This function calls:
  7639 ;;		Nothing
  7640 ;; This function is called by:
  7641 ;;		i2_EnviaDato
  7642 ;;		i2_BorraLCD
  7643 ;;		i2_EscribeLCD_c
  7644 ;;		i2_EscribeLCD_n8
  7645 ;;		i2_DireccionaLCD
  7646 ;; This function uses a non-reentrant model
  7647 ;;
  7648                           
  7649                           	psect	text57
  7650   001ACA                     __ptext57:
  7651                           	callstack 0
  7652   001ACA                     i2_RetardoLCD:
  7653                           	callstack 20
  7654                           
  7655                           ;incstack = 0
  7656                           ;i2RetardoLCD@a stored from wreg
  7657   001ACA  6E02               	movwf	i2RetardoLCD@a^0,c
  7658                           
  7659                           ;LibLCDXC9.h: 288: switch(a){
  7660   001ACC  D01B               	goto	i2l2587
  7661   001ACE                     i2l2577:
  7662   001ACE  0E05               	movlw	5
  7663   001AD0  6E01               	movwf	??i2_RetardoLCD^0,c
  7664   001AD2  0EDE               	movlw	222
  7665   001AD4                     i2u340_47:
  7666   001AD4  2EE8               	decfsz	wreg,f,c
  7667   001AD6  D7FE               	bra	i2u340_47
  7668   001AD8  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  7669   001ADA  D7FC               	bra	i2u340_47
  7670                           
  7671                           ;LibLCDXC9.h: 291: break;
  7672   001ADC  0012               	return	
  7673   001ADE                     i2l2579:
  7674   001ADE  0E53               	movlw	83
  7675   001AE0                     i2u341_47:
  7676   001AE0  2EE8               	decfsz	wreg,f,c
  7677   001AE2  D7FE               	bra	i2u341_47
  7678   001AE4  0000               	nop	
  7679                           
  7680                           ;LibLCDXC9.h: 293: _delay((unsigned long)((640)*(1000000/4000000.0)));
  7681   001AE6  0E35               	movlw	53
  7682   001AE8                     i2u342_47:
  7683   001AE8  2EE8               	decfsz	wreg,f,c
  7684   001AEA  D7FE               	bra	i2u342_47
  7685   001AEC  0000               	nop	
  7686                           
  7687                           ;LibLCDXC9.h: 295: break;
  7688   001AEE  0012               	return	
  7689   001AF0                     i2l2581:
  7690   001AF0  0E08               	movlw	8
  7691   001AF2                     i2u343_47:
  7692   001AF2  2EE8               	decfsz	wreg,f,c
  7693   001AF4  D7FE               	bra	i2u343_47
  7694   001AF6  0000               	nop	
  7695                           
  7696                           ;LibLCDXC9.h: 298: break;
  7697   001AF8  0012               	return	
  7698   001AFA                     i2l2583:
  7699   001AFA  0E03               	movlw	3
  7700   001AFC                     i2u344_47:
  7701   001AFC  2EE8               	decfsz	wreg,f,c
  7702   001AFE  D7FE               	bra	i2u344_47
  7703   001B00  0000               	nop	
  7704                           
  7705                           ;LibLCDXC9.h: 301: break;
  7706   001B02  0012               	return	
  7707   001B04                     i2l2587:
  7708   001B04  5002               	movf	i2RetardoLCD@a^0,w,c
  7709                           
  7710                           ; Switch size 1, requested type "simple"
  7711                           ; Number of cases is 4, Range of values is 1 to 4
  7712                           ; switch strategies available:
  7713                           ; Name         Instructions Cycles
  7714                           ; simple_byte           13     7 (average)
  7715                           ;	Chosen strategy is simple_byte
  7716   001B06  0A01               	xorlw	1	; case 1
  7717   001B08  B4D8               	btfsc	status,2,c
  7718   001B0A  D7E1               	goto	i2l2577
  7719   001B0C  0A03               	xorlw	3	; case 2
  7720   001B0E  B4D8               	btfsc	status,2,c
  7721   001B10  D7E6               	goto	i2l2579
  7722   001B12  0A01               	xorlw	1	; case 3
  7723   001B14  B4D8               	btfsc	status,2,c
  7724   001B16  D7EC               	goto	i2l2581
  7725   001B18  0A07               	xorlw	7	; case 4
  7726   001B1A  A4D8               	btfss	status,2,c
  7727   001B1C  0012               	return	
  7728   001B1E  D7ED               	goto	i2l2583
  7729   001B20                     __end_ofi2_RetardoLCD:
  7730                           	callstack 0
  7731                           
  7732 ;; *************** function i2_HabilitaLCD *****************
  7733 ;; Defined at:
  7734 ;;		line 100 in file "LibLCDXC9.h"
  7735 ;; Parameters:    Size  Location     Type
  7736 ;;		None
  7737 ;; Auto vars:     Size  Location     Type
  7738 ;;		None
  7739 ;; Return value:  Size  Location     Type
  7740 ;;                  1    wreg      void 
  7741 ;; Registers used:
  7742 ;;		wreg
  7743 ;; Tracked objects:
  7744 ;;		On entry : 0/0
  7745 ;;		On exit  : 0/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7748 ;;      Params:         0       0       0       0       0       0       0       0       0
  7749 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7750 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7751 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7752 ;;Total ram usage:        0 bytes
  7753 ;; Hardware stack levels used: 1
  7754 ;; This function calls:
  7755 ;;		Nothing
  7756 ;; This function is called by:
  7757 ;;		i2_EnviaDato
  7758 ;;		i2_BorraLCD
  7759 ;;		i2_EscribeLCD_c
  7760 ;;		i2_EscribeLCD_n8
  7761 ;;		i2_DireccionaLCD
  7762 ;; This function uses a non-reentrant model
  7763 ;;
  7764                           
  7765                           	psect	text58
  7766   001FEC                     __ptext58:
  7767                           	callstack 0
  7768   001FEC                     i2_HabilitaLCD:
  7769                           	callstack 20
  7770                           
  7771                           ;LibLCDXC9.h: 102: LATA5=1;
  7772                           
  7773                           ;incstack = 0
  7774   001FEC  8A89               	bsf	3977,5,c	;volatile
  7775                           
  7776                           ;LibLCDXC9.h: 103: _delay((unsigned long)((40)*(1000000/4000000.0)));
  7777   001FEE  0E03               	movlw	3
  7778   001FF0                     i2u345_47:
  7779   001FF0  2EE8               	decfsz	wreg,f,c
  7780   001FF2  D7FE               	bra	i2u345_47
  7781   001FF4  0000               	nop	
  7782                           
  7783                           ;LibLCDXC9.h: 105: LATA5=0;
  7784   001FF6  9A89               	bcf	3977,5,c	;volatile
  7785   001FF8  0012               	return		;funcret
  7786   001FFA                     __end_ofi2_HabilitaLCD:
  7787                           	callstack 0
  7788                           
  7789                           	psect	rparam
  7790   000001                     ___rparam_used  equ	1
  7791   000000                     ___param_bank   equ	0
  7792   000000                     __Lparam        equ	__Lrparam
  7793   000000                     __Hparam        equ	__Hrparam
  7794                           
  7795                           	psect	temp
  7796   000048                     btemp:
  7797                           	callstack 0
  7798   000048                     	ds	1
  7799   000048                     int$flags       set	btemp
  7800   000049                     wtemp8          set	btemp+1
  7801   000049                     ttemp5          set	btemp+1
  7802   00004C                     ttemp6          set	btemp+4
  7803   000050                     ttemp7          set	btemp+8
  7804                           
  7805                           	psect	idloc
  7806                           
  7807                           ;Config register IDLOC0 @ 0x200000
  7808                           ;	unspecified, using default values
  7809   200000                     	org	2097152
  7810   200000  FF                 	db	255
  7811                           
  7812                           ;Config register IDLOC1 @ 0x200001
  7813                           ;	unspecified, using default values
  7814   200001                     	org	2097153
  7815   200001  FF                 	db	255
  7816                           
  7817                           ;Config register IDLOC2 @ 0x200002
  7818                           ;	unspecified, using default values
  7819   200002                     	org	2097154
  7820   200002  FF                 	db	255
  7821                           
  7822                           ;Config register IDLOC3 @ 0x200003
  7823                           ;	unspecified, using default values
  7824   200003                     	org	2097155
  7825   200003  FF                 	db	255
  7826                           
  7827                           ;Config register IDLOC4 @ 0x200004
  7828                           ;	unspecified, using default values
  7829   200004                     	org	2097156
  7830   200004  FF                 	db	255
  7831                           
  7832                           ;Config register IDLOC5 @ 0x200005
  7833                           ;	unspecified, using default values
  7834   200005                     	org	2097157
  7835   200005  FF                 	db	255
  7836                           
  7837                           ;Config register IDLOC6 @ 0x200006
  7838                           ;	unspecified, using default values
  7839   200006                     	org	2097158
  7840   200006  FF                 	db	255
  7841                           
  7842                           ;Config register IDLOC7 @ 0x200007
  7843                           ;	unspecified, using default values
  7844   200007                     	org	2097159
  7845   200007  FF                 	db	255
  7846                           
  7847                           	psect	config
  7848                           
  7849                           ;Config register CONFIG1L @ 0x300000
  7850                           ;	unspecified, using default values
  7851                           ;	PLL Prescaler Selection bits
  7852                           ;	PLLDIV = 0x0, unprogrammed default
  7853                           ;	System Clock Postscaler Selection bits
  7854                           ;	CPUDIV = 0x0, unprogrammed default
  7855                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  7856                           ;	USBDIV = 0x0, unprogrammed default
  7857   300000                     	org	3145728
  7858   300000  00                 	db	0
  7859                           
  7860                           ;Config register CONFIG1H @ 0x300001
  7861                           ;	Oscillator Selection bits
  7862                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  7863                           ;	Fail-Safe Clock Monitor Enable bit
  7864                           ;	FCMEN = 0x0, unprogrammed default
  7865                           ;	Internal/External Oscillator Switchover bit
  7866                           ;	IESO = 0x0, unprogrammed default
  7867   300001                     	org	3145729
  7868   300001  09                 	db	9
  7869                           
  7870                           ;Config register CONFIG2L @ 0x300002
  7871                           ;	unspecified, using default values
  7872                           ;	Power-up Timer Enable bit
  7873                           ;	PWRT = 0x1, unprogrammed default
  7874                           ;	Brown-out Reset Enable bits
  7875                           ;	BOR = 0x3, unprogrammed default
  7876                           ;	Brown-out Reset Voltage bits
  7877                           ;	BORV = 0x3, unprogrammed default
  7878                           ;	USB Voltage Regulator Enable bit
  7879                           ;	VREGEN = 0x0, unprogrammed default
  7880   300002                     	org	3145730
  7881   300002  1F                 	db	31
  7882                           
  7883                           ;Config register CONFIG2H @ 0x300003
  7884                           ;	Watchdog Timer Enable bit
  7885                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7886                           ;	Watchdog Timer Postscale Select bits
  7887                           ;	WDTPS = 0xF, unprogrammed default
  7888   300003                     	org	3145731
  7889   300003  1E                 	db	30
  7890                           
  7891                           ; Padding undefined space
  7892   300004                     	org	3145732
  7893   300004  FF                 	db	255
  7894                           
  7895                           ;Config register CONFIG3H @ 0x300005
  7896                           ;	CCP2 MUX bit
  7897                           ;	CCP2MX = 0x1, unprogrammed default
  7898                           ;	PORTB A/D Enable bit
  7899                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7900                           ;	Low-Power Timer 1 Oscillator Enable bit
  7901                           ;	LPT1OSC = 0x0, unprogrammed default
  7902                           ;	MCLR Pin Enable bit
  7903                           ;	MCLRE = 0x1, unprogrammed default
  7904   300005                     	org	3145733
  7905   300005  81                 	db	129
  7906                           
  7907                           ;Config register CONFIG4L @ 0x300006
  7908                           ;	Stack Full/Underflow Reset Enable bit
  7909                           ;	STVREN = 0x1, unprogrammed default
  7910                           ;	Single-Supply ICSP Enable bit
  7911                           ;	LVP = OFF, Single-Supply ICSP disabled
  7912                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  7913                           ;	ICPRT = 0x0, unprogrammed default
  7914                           ;	Extended Instruction Set Enable bit
  7915                           ;	XINST = 0x0, unprogrammed default
  7916                           ;	Background Debugger Enable bit
  7917                           ;	DEBUG = 0x1, unprogrammed default
  7918   300006                     	org	3145734
  7919   300006  81                 	db	129
  7920                           
  7921                           ; Padding undefined space
  7922   300007                     	org	3145735
  7923   300007  FF                 	db	255
  7924                           
  7925                           ;Config register CONFIG5L @ 0x300008
  7926                           ;	unspecified, using default values
  7927                           ;	Code Protection bit
  7928                           ;	CP0 = 0x1, unprogrammed default
  7929                           ;	Code Protection bit
  7930                           ;	CP1 = 0x1, unprogrammed default
  7931                           ;	Code Protection bit
  7932                           ;	CP2 = 0x1, unprogrammed default
  7933                           ;	Code Protection bit
  7934                           ;	CP3 = 0x1, unprogrammed default
  7935   300008                     	org	3145736
  7936   300008  0F                 	db	15
  7937                           
  7938                           ;Config register CONFIG5H @ 0x300009
  7939                           ;	unspecified, using default values
  7940                           ;	Boot Block Code Protection bit
  7941                           ;	CPB = 0x1, unprogrammed default
  7942                           ;	Data EEPROM Code Protection bit
  7943                           ;	CPD = 0x1, unprogrammed default
  7944   300009                     	org	3145737
  7945   300009  C0                 	db	192
  7946                           
  7947                           ;Config register CONFIG6L @ 0x30000A
  7948                           ;	unspecified, using default values
  7949                           ;	Write Protection bit
  7950                           ;	WRT0 = 0x1, unprogrammed default
  7951                           ;	Write Protection bit
  7952                           ;	WRT1 = 0x1, unprogrammed default
  7953                           ;	Write Protection bit
  7954                           ;	WRT2 = 0x1, unprogrammed default
  7955                           ;	Write Protection bit
  7956                           ;	WRT3 = 0x1, unprogrammed default
  7957   30000A                     	org	3145738
  7958   30000A  0F                 	db	15
  7959                           
  7960                           ;Config register CONFIG6H @ 0x30000B
  7961                           ;	unspecified, using default values
  7962                           ;	Configuration Register Write Protection bit
  7963                           ;	WRTC = 0x1, unprogrammed default
  7964                           ;	Boot Block Write Protection bit
  7965                           ;	WRTB = 0x1, unprogrammed default
  7966                           ;	Data EEPROM Write Protection bit
  7967                           ;	WRTD = 0x1, unprogrammed default
  7968   30000B                     	org	3145739
  7969   30000B  E0                 	db	224
  7970                           
  7971                           ;Config register CONFIG7L @ 0x30000C
  7972                           ;	unspecified, using default values
  7973                           ;	Table Read Protection bit
  7974                           ;	EBTR0 = 0x1, unprogrammed default
  7975                           ;	Table Read Protection bit
  7976                           ;	EBTR1 = 0x1, unprogrammed default
  7977                           ;	Table Read Protection bit
  7978                           ;	EBTR2 = 0x1, unprogrammed default
  7979                           ;	Table Read Protection bit
  7980                           ;	EBTR3 = 0x1, unprogrammed default
  7981   30000C                     	org	3145740
  7982   30000C  0F                 	db	15
  7983                           
  7984                           ;Config register CONFIG7H @ 0x30000D
  7985                           ;	unspecified, using default values
  7986                           ;	Boot Block Table Read Protection bit
  7987                           ;	EBTRB = 0x1, unprogrammed default
  7988   30000D                     	org	3145741
  7989   30000D  40                 	db	64
  7990                           tosu	equ	0xFFF
  7991                           tosh	equ	0xFFE
  7992                           tosl	equ	0xFFD
  7993                           stkptr	equ	0xFFC
  7994                           pclatu	equ	0xFFB
  7995                           pclath	equ	0xFFA
  7996                           pcl	equ	0xFF9
  7997                           tblptru	equ	0xFF8
  7998                           tblptrh	equ	0xFF7
  7999                           tblptrl	equ	0xFF6
  8000                           tablat	equ	0xFF5
  8001                           prodh	equ	0xFF4
  8002                           prodl	equ	0xFF3
  8003                           indf0	equ	0xFEF
  8004                           postinc0	equ	0xFEE
  8005                           postdec0	equ	0xFED
  8006                           preinc0	equ	0xFEC
  8007                           plusw0	equ	0xFEB
  8008                           fsr0h	equ	0xFEA
  8009                           fsr0l	equ	0xFE9
  8010                           wreg	equ	0xFE8
  8011                           indf1	equ	0xFE7
  8012                           postinc1	equ	0xFE6
  8013                           postdec1	equ	0xFE5
  8014                           preinc1	equ	0xFE4
  8015                           plusw1	equ	0xFE3
  8016                           fsr1h	equ	0xFE2
  8017                           fsr1l	equ	0xFE1
  8018                           bsr	equ	0xFE0
  8019                           indf2	equ	0xFDF
  8020                           postinc2	equ	0xFDE
  8021                           postdec2	equ	0xFDD
  8022                           preinc2	equ	0xFDC
  8023                           plusw2	equ	0xFDB
  8024                           fsr2h	equ	0xFDA
  8025                           fsr2l	equ	0xFD9
  8026                           status	equ	0xFD8

Data Sizes:
    Strings     120
    Constant    10
    Data        3
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      71
    BANK0           160     59      71
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[12]), STR_10(CODE[14]), STR_11(CODE[12]), STR_12(CODE[11]), 
		 -> STR_13(CODE[9]), STR_14(CODE[11]), STR_15(CODE[14]), STR_16(CODE[12]), 
		 -> STR_2(CODE[18]), STR_3(CODE[9]), STR_4(CODE[11]), STR_5(CODE[15]), 
		 -> STR_6(CODE[18]), STR_7(CODE[18]), STR_8(CODE[9]), STR_9(CODE[11]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_17(CODE[18]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 50
		 -> Transmitir@buffer(BANK0[50]), 


Critical Paths under _main in COMRAM

    _contador->_EscribeLCD_n8
    _reiCon->_EscribeLCD_n8
    _EscribeLCD_n8->___lbdiv
    ___lbdiv->___lbmod
    _DireccionaLCD->_EnviaDato
    _parEmerg->_MensajeLCD_Var
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _CaracterQbert->_ComandoLCD
    _CaracterCara->_ComandoLCD
    _ComandoLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD
    _ADC->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    _Transmitir->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _ISR in COMRAM

    _ISR->_ok
    i2_reiCon->i2_EscribeLCD_n8
    i2_parEmerg->i2_MensajeLCD_Var
    _ok->i2_EscribeLCD_n8
    i2_contador->i2_EscribeLCD_n8
    i2_EscribeLCD_n8->i2___lbdiv
    i2___lbdiv->i2___lbmod
    _borrarTexto->i2_MensajeLCD_Var
    _luzFondo->___wmul
    _fin->i2___awdiv
    i2_MensajeLCD_Var->i2_EscribeLCD_c
    i2_DireccionaLCD->i2_EnviaDato
    i2_BorraLCD->i2_EnviaDato
    _escribirDig->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    _main->_ADC
    _ADC->_Transmitir

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9436
                                             57 BANK0      2     2      0
                                _ADC
                           _BorraLCD
                       _CaracterCara
                      _CaracterQbert
                       _ConfiguraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                     _MensajeLCD_Var
                     _RecibirComando
                           _contador
 ---------------------------------------------------------------------------------
 (1) _contador                                             0     0      0    1975
                           _BorraLCD
                      _DireccionaLCD
                      _EscribeLCD_n8
                     _MensajeLCD_Var
                                _RGB
                                _SEG
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     298
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     302
                                             22 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _RecibirComando                                       1     1      0    1771
                                             35 COMRAM     1     1      0
                           _parEmerg
                             _reiCon
 ---------------------------------------------------------------------------------
 (2) _reiCon                                               0     0      0    1375
                           _BorraLCD
                      _DireccionaLCD
                      _EscribeLCD_n8
                     _MensajeLCD_Var
                                _RGB
                                _SEG
 ---------------------------------------------------------------------------------
 (2) _SEG                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RGB                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_n8                                        5     4      1     828
                                             30 COMRAM     5     4      1
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     172
                                             22 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     173
                                             26 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     174
                                             26 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _parEmerg                                             0     0      0     373
                           _BorraLCD
                     _MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Var                                       1     0      1     228
                                             27 COMRAM     1     0      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0     174
                                             26 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     290
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CaracterQbert                                        0     0      0     522
                         _ComandoLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _CaracterCara                                         0     0      0     522
                         _ComandoLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _ComandoLCD                                           1     1      0     377
                                             26 COMRAM     1     1      0
                           _BorraLCD
                      _CursorAInicio
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _CursorAInicio                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     145
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0     116
                                             24 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      29
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  5     5      0    3590
                                             52 BANK0      5     5      0
                         _Transmitir
                            ___ftdiv
                             ___ftge
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3     404
                                             30 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6     870
                                             33 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     204
                                             22 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6     802
                                              0 BANK0     15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5     370
                                             22 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                          54    52      2    1276
                                             45 COMRAM     2     0      2
                                              0 BANK0     52    52      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             19    15      4    1057
                                             34 COMRAM    11     7      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     238
                                             29 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     247
                                             22 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  7     7      0    7781
                                             15 COMRAM     7     7      0
                        _borrarTexto
                        _escribirDig
                                _fin
                           _luzFondo
                                 _ok
                         i2_parEmerg
                           i2_reiCon
 ---------------------------------------------------------------------------------
 (8) i2_reiCon                                             0     0      0    1382
                         i2_BorraLCD
                    i2_DireccionaLCD
                    i2_EscribeLCD_n8
                   i2_MensajeLCD_Var
                              i2_RGB
                              i2_SEG
 ---------------------------------------------------------------------------------
 (8) i2_parEmerg                                           0     0      0     378
                         i2_BorraLCD
                   i2_MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (8) _ok                                                   2     2      0    3920
                                             13 COMRAM     2     2      0
                        _borrarTexto
                         i2_BorraLCD
                    i2_DireccionaLCD
                    i2_EscribeLCD_n8
                   i2_MensajeLCD_Var
                              i2_RGB
                              i2_SEG
                         i2_contador
 ---------------------------------------------------------------------------------
 (9) i2_contador                                           0     0      0    1986
                         i2_BorraLCD
                    i2_DireccionaLCD
                    i2_EscribeLCD_n8
                   i2_MensajeLCD_Var
                              i2_RGB
                              i2_SEG
                          i2___awdiv
                          i2___awmod
 ---------------------------------------------------------------------------------
 (9) i2_EscribeLCD_n8                                      5     4      1     830
                                              8 COMRAM     5     4      1
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
                          i2___lbdiv
                          i2___lbmod
 ---------------------------------------------------------------------------------
 (10) i2___lbmod                                           4     3      1     172
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (10) i2___lbdiv                                           4     3      1     173
                                              4 COMRAM     4     3      1
                          i2___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (9) _borrarTexto                                          0     0      0     552
                         i2_BorraLCD
                    i2_DireccionaLCD
                   i2_MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (8) _luzFondo                                             0     0      0     161
                             ___wmul
 ---------------------------------------------------------------------------------
 (9) ___wmul                                               6     2      4     161
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _fin                                                  0     0      0    1156
                         i2_BorraLCD
                    i2_DireccionaLCD
                   i2_MensajeLCD_Var
                              i2_RGB
                              i2_SEG
                          i2___awdiv
                          i2___awmod
 ---------------------------------------------------------------------------------
 (10) i2___awmod                                           6     2      4     300
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) i2___awdiv                                           8     4      4     304
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (9) i2_SEG                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i2_RGB                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i2_MensajeLCD_Var                                     1     0      1     233
                                              5 COMRAM     1     0      1
                     i2_EscribeLCD_c
 ---------------------------------------------------------------------------------
 (9) i2_DireccionaLCD                                      1     1      0     174
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (9) i2_BorraLCD                                           0     0      0     145
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) _escribirDig                                          1     1      0     232
                                              5 COMRAM     1     1      0
                     i2_EscribeLCD_c
 ---------------------------------------------------------------------------------
 (10) i2_EscribeLCD_c                                      1     1      0     174
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (11) i2_EnviaDato                                         2     2      0     116
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (11) i2_RetardoLCD                                        2     2      0      29
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) i2_HabilitaLCD                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
     _Transmitir
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
     ___ftge
     ___ftmul
     ___lwtoft
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _CaracterCara
     _ComandoLCD
       _BorraLCD
       _CursorAInicio
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _CaracterQbert
     _ComandoLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _MensajeLCD_Var
     _EscribeLCD_c
   _RecibirComando
     _parEmerg
       _BorraLCD
       _MensajeLCD_Var
     _reiCon
       _BorraLCD
       _DireccionaLCD
       _EscribeLCD_n8
         _EnviaDato
         _HabilitaLCD
         _RetardoLCD
         ___lbdiv
           ___lbmod (ARG)
         ___lbmod
       _MensajeLCD_Var
       _RGB
       _SEG
   _contador
     _BorraLCD
     _DireccionaLCD
     _EscribeLCD_n8
     _MensajeLCD_Var
     _RGB
     _SEG
     ___awdiv
     ___awmod

 _ISR (ROOT)
   _borrarTexto
     i2_BorraLCD
       i2_EnviaDato
         i2_HabilitaLCD
         i2_RetardoLCD
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_DireccionaLCD
       i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_MensajeLCD_Var
       i2_EscribeLCD_c
         i2_EnviaDato
         i2_HabilitaLCD
         i2_RetardoLCD
   _escribirDig
     i2_EscribeLCD_c
   _fin
     i2_BorraLCD
     i2_DireccionaLCD
     i2_MensajeLCD_Var
     i2_RGB
     i2_SEG
     i2___awdiv
     i2___awmod
   _luzFondo
     ___wmul
   _ok
     _borrarTexto
     i2_BorraLCD
     i2_DireccionaLCD
     i2_EscribeLCD_n8
       i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
       i2___lbdiv
         i2___lbmod (ARG)
       i2___lbmod
     i2_MensajeLCD_Var
     i2_RGB
     i2_SEG
     i2_contador
       i2_BorraLCD
       i2_DireccionaLCD
       i2_EscribeLCD_n8
       i2_MensajeLCD_Var
       i2_RGB
       i2_SEG
       i2___awdiv
       i2___awmod
   i2_parEmerg
     i2_BorraLCD
     i2_MensajeLCD_Var
   i2_reiCon
     i2_BorraLCD
     i2_DireccionaLCD
     i2_EscribeLCD_n8
     i2_MensajeLCD_Var
     i2_RGB
     i2_SEG

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160     59      71     44.4%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     48      71     75.5%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlll        33      0       0      0.0%
BITBIGSFRlh         31      0       0      0.0%
BITBIGSFRllh        11      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     157      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Aug 31 17:52:56 2024

                       _a 0037                         _b 0035                         _d 009D  
                       _u 009F          i2DireccionaLCD@a 0005          i2EscribeLCD_n8@a 000D  
        i2EscribeLCD_n8@b 0009              ___awdiv@sign 001C                EnviaDato@a 001A  
                      _ok 0A0A       ___wmul@multiplicand 0003          Transmitir@adcVal 002E  
            ?_borrarTexto 0001          Transmitir@buffer 0060                       ?_ok 0001  
           _InicializaLCD 1410                       l331 12BA                       l413 0C78  
                     l342 1CB0                       l335 1352                       _ADC 12B0  
                     l353 1952                       l296 11DE                       l771 0FF8  
                     l909 1B68                       l919 1D0C                       _GIE 7F97  
                     _RB4 7C0C                       _RB5 7C0D                       _RB6 7C0E  
                     _RB7 7C0F                       _RGB 1632                       _ISR 0008  
                     _SEG 1FFA                       u960 1F58                       _fin 152E  
            ___awmod@sign 001C                       wreg 0FE8                      ??_ok 000E  
                    ?_ADC 0001                      ?_RGB 0001                      ?_ISR 0001  
                    ?_SEG 0001              ___ftdiv@cntr 0069          ??i2_EscribeLCD_c 0005  
            ___ftdiv@sign 006E              ?_escribirDig 0001                      l3111 1E0E  
                    l4001 138A                      l4011 13E6                      l4003 13A8  
                    l3107 1DFE                      l3301 150C                      l4007 13BE  
                    l4009 13DC                      l4113 0DFC                      l3305 1516  
                    l3321 188C                      l4035 1CC4                      l4043 0F6C  
                    l4123 0E24                      l3331 18AE                      l4109 0DEC  
                    l3309 1524                      l3341 18D0                      l3325 1898  
                    l4221 0954                      l4135 1744                      l4119 0E14  
                    l2631 1D26                      ?_fin 0001                      l4049 0F94  
                    l4145 1792                      l2561 1A9A                      l3417 1422  
                    l2801 0F2E                      l3345 18DE                      l3337 18C6  
                    l3329 18A6                      l4139 1766                      l2563 1AA4  
                    l3427 1440                      l2643 1D42                      l2635 1D2C  
                    l3291 14EC                      l3283 14CE                      l4069 0FD2  
                    l2557 1A78                      l3437 145E                      l2805 1E4A  
                    l3277 14BE                      l4095 0DBA                      l4167 1354  
                    l2559 1A88                      l2567 1AAE                      l2647 1D4A  
                    l2663 1E40                      l2655 1E28                      l2831 1662  
                    l2823 1642                      l3551 1902                      l4089 0D92  
                    l3457 1496                      l2809 1E5C                      l3553 190E  
                    l3545 18F2                      l3289 14E4                      l2843 1698  
                    l2835 1674                      l2827 1652                      l3547 18F8  
                    l3565 1920                      l2599 1BF8                      l2775 0E84  
                    l2839 1686                      l3559 191A                      l3913 1B36  
                    l2785 0ECA                      l2769 0E64                      l3915 1B3E  
                    l3925 1B5E                      l3941 1D02                      l3933 1CE2  
                    l3935 1CEA                      l3953 0C7C                      l3947 0C62  
                    l3957 0C82                      l3983 0D3E                      l3959 0CA6  
                    l3977 0CEE                      l3969 0CBC                      l3999 1380  
                    STR_1 0858                      STR_2 081D                      STR_3 087A  
                    STR_4 0864                      STR_5 082F                      STR_6 081D  
                    STR_7 081D                      STR_8 087A                      STR_9 0864  
                    u2200 14F0                      u3021 0F54                      _LATB 0F8A  
                    _LATD 0F8C                      u3041 0F7C                i2_contador 11E0  
                    u2260 18B2                      u1470 1D30                      u3071 0D7A  
                    u3217 08C6                      u3091 0DA2                      u3307 09E8  
                    u3227 08E2                      u3317 09FE                      u3237 092C  
                    u3327 1A7E                      u3247 0966                      u3337 1A8A  
                    u3257 097C                      u3347 1A92                      u3267 0992  
                    u2820 1B42                      u2900 0D46                      u3357 1A9C  
                    u3277 09A8                      u2910 0D60                      u3367 1AA6  
                    u3287 09BC                      u3377 1FE2                      u3297 09D2  
                    u2850 1CEE                      u2930 1372                      _RBIE 7F93  
                    _RBIF 7F90                      u2890 0CE8                      u2970 13F0  
                    _RCIF 7CF5                      _RBPU 7F8F                      _TRMT 7D61  
              i2_parEmerg 1F28            ??_EscribeLCD_c 001B                      _main 0884  
            ___ftpack@arg 0017              ___ftpack@exp 001A                      fsr2h 0FDA  
                    indf2 0FDF                      fsr2l 0FD9                      btemp 0048  
                    prodh 0FF4                      prodl 0FF3                      start 000E  
            ___ftmul@cntr 002F              ___param_bank 0000              ___ftmul@sign 0030  
                   ??_ADC 0094                     ??_RGB 0017                     ??_ISR 0010  
                   ??_SEG 0017                     ??_fin 0009           i2_DireccionaLCD 1F8A  
       ??i2_EscribeLCD_n8 000A            ?_InicializaLCD 0001                     ?_main 0001  
         __end_of___awdiv 152E           __end_of___lbdiv 1D4E                     STR_10 083E  
                   STR_11 084C                     STR_12 086F                     STR_13 087A  
                   STR_14 0864                     STR_15 083E                     STR_16 084C  
                   STR_17 080B           __end_of___awmod 18E8                _ComandoLCD 1DEE  
           EscribeLCD_c@a 001B           __end_of___lbmod 1E48           __end_of___ftdiv 102A  
         __end_of___ftmul 0E5E           ___awdiv@divisor 0019                     _LATA1 7C49  
                   _LATA3 7C4B                     _LATA4 7C4C                     _LATA5 7C4D  
                   _LATC2 7C5A                     _LATE0 7C68                     _LATE1 7C69  
                   _LATE2 7C6A           __end_of___lwdiv 1B72           __end_of___lwmod 1D16  
                   i2l402 0C40                     i2l273 1DEC                     i2l371 0B7A  
                   i2l381 0BB8                     i2l373 0B86                     i2l391 0BF6  
                   i2l383 0BC4                     i2l375 0B92                     i2l296 12AE  
                   i2l395 0C0E                     i2l387 0BDE                     i2l379 0BAC  
                   i2l396 0C2A                     i2l397 0C1A                     i2l389 0BEA  
                   i2l399 0C24           ___awdiv@counter 001B                     _RCREG 0FAE  
                   _RCSTA 0FAB                     i2_RGB 16AA                     i2_SEG 2000  
                   _SPBRG 0FAF                     _PORTB 0F81                     _TRISA 0F92  
                   _TRISB 0F93                     _TRISD 0F95                     _TXREG 0FAD  
                   _TXSTA 0FAC           ??_EscribeLCD_n8 0020                     _Tecla 0044  
         __end_of_dpowers 080B               ?i2_BorraLCD 0001             ___ftpack@sign 001B  
                   tablat 0FF5               _HabilitaLCD 1FDE                     ttemp5 0049  
                   ttemp6 004C                     ttemp7 0050                     status 0FD8  
                   wtemp8 0049           __end_of_sprintf 0D6A             i2___lbmod@rem 0004  
         ___lbdiv@divisor 001B          __end_ofi2_reiCon 1A74           ___lbdiv@counter 001D  
        __end_of_BorraLCD 1FCA           __initialization 1C4C              __end_of_main 0A0A  
           _CursorAInicio 200A          i2_MensajeLCD_Var 1E98                    ??_main 0099  
    __end_of_ConfiguraLCD 1F5E              _CaracterCara 1808             __activetblptr 0002  
                  ?i2_RGB 0001                    ?i2_SEG 0001                    _ADCON0 0FC2  
                  _ADCON1 0FC1                    _ADCON2 0FC0                    _ADRESH 0FC4  
                  _ADRESL 0FC3            DireccionaLCD@a 001B            EscribeLCD_n8@a 0023  
          EscribeLCD_n8@b 001F          ___awdiv@dividend 0017          __end_of___ftpack 1410  
             ?i2_contador 0001                    i2l3011 16FE                    i2l3003 16DA  
                  i2l3015 1710                    i2l3007 16EC                    i2l3041 15E8  
                  i2l3043 15F0                    i2l3035 15D2                    i2l3061 1628  
                  i2l3053 1610                    i2l3029 15C2                    i2l3057 161A  
                  i2l3081 1982                    i2l3073 1968                    i2l3083 198A  
                  i2l2613 1C3E                    i2l3093 19AC                    i2l3077 1974  
                  i2l3097 19BA                    i2l3089 19A2                    i2l2721 1D5E  
                  i2l2581 1AF0                    i2l3613 1DE0                    i2l2733 1D7A  
                  i2l2725 1D64                    i2l2583 1AFA                    i2l3631 1B9E  
                  i2l3703 0B36                    i2l2577 1ACE                    i2l2737 1D82  
                  i2l2753 1E90                    i2l2745 1E78                    i2l2579 1ADE  
                  i2l2587 1B04                    i2l2941 1030                    i2l2947 1050  
                  i2l3667 0AA8                    i2l2981 1EAC                    i2l2957 1096  
                  i2l2973 10FA                    i2l3677 0AD8                    i2l3861 0B9C  
                  i2l2977 1E9A                    i2l3873 0BCE                    i2l2995 16BA  
                  i2l3885 0C00                    i2l2999 16CA               ?i2_parEmerg 0001  
        __end_of___lwtoft 1F0A                    _TRISA0 7C90                    _TRISC1 7CA1  
                  _TRISC2 7CA2                    _TRISE0 7CB0                    _TRISE1 7CB1  
                  _TRISE2 7CB2     __end_of_DireccionaLCD 1F74                _RetardoLCD 1A74  
 __end_ofi2_DireccionaLCD 1FA0      EscribeLCD_n8@centena 0020            ?_CursorAInicio 0001  
                  _adcVal 009B                    ___ftge 1722          __end_of_contador 11E0  
                  ___wmul 1EC0                 ??___awdiv 001B                 ??___lbdiv 001C  
               ??___awmod 001B                 ??___lbmod 0018                 ??___ftdiv 0066  
               ??___ftmul 0028          __end_of_parEmerg 1F28                 ??___lwdiv 001B  
               ??___lwmod 0022           ??_InicializaLCD 001B                    _cuenta 0039  
                  _reiCon 19C4                    clear_0 1C70                    clear_1 1C7C  
        ___awdiv@quotient 001D           ___awmod@divisor 0019                    isa$std 0001  
         ___awmod@counter 001B      __end_of_EscribeLCD_c 1F8A               ?_ComandoLCD 0001  
          i2___awdiv@sign 0006     ___ftmul@f3_as_product 002C              ?i2_EnviaDato 0001  
        __end_of_luzFondo 1DEE              __pdataCOMRAM 0045         __end_ofi2___awdiv 1632  
       __end_ofi2___lbdiv 1D86         __end_ofi2___awmod 19C4         __end_ofi2___lbmod 1E98  
            __mediumconst 0000                    tblptrh 0FF7                    tblptrl 0FF6  
                  tblptru 0FF8            i2___awmod@sign 0006                 ??_sprintf 0027  
              _Transmitir 1C90          ___lbdiv@dividend 001C           ___lbmod@divisor 0017  
   __end_ofi2_HabilitaLCD 1FFA                __accesstop 0060   __end_of__initialization 1C82  
         ___lbmod@counter 0019                ___ftge@ff1 0017                ___ftge@ff2 001A  
           ___rparam_used 0001                ___ftdiv@f1 0060                ___ftdiv@f2 0063  
              ___ftdiv@f3 006A             __end_ofi2_RGB 1722             __end_ofi2_SEG 2006  
              ___ftmul@f1 0022                ___ftmul@f2 0025            __pcstackCOMRAM 0001  
       __end_of_EnviaDato 1C06          ___lbdiv@quotient 001E                __end_of_ok 0B3C  
              ___lwtoft@c 001F                   ??i2_RGB 0001                   ??i2_SEG 0001  
               ?i2_reiCon 0001                 ?_BorraLCD 0001            _MensajeLCD_Var 1E48  
              __pbssBANK0 009B           MensajeLCD_Var@a 001C             _CaracterQbert 1796  
             ?_RetardoLCD 0001               RetardoLCD@a 0018           i2_EscribeLCD_n8 102A  
         ??_CursorAInicio 0017          ?i2_DireccionaLCD 0001                ADC@voltaje 0096  
                 ?___ftge 0017                _flagInicio 003D                   ?___wmul 0001  
                 ?_reiCon 0001                   _BAUDCON 0FB8              _flagEscribir 0041  
               ?___ftpack 0017                 ?___lwtoft 001F                ??i2_reiCon 000E  
  __end_of_MensajeLCD_Var 1E70              ??i2_BorraLCD 0005            _flagEmergencia 003B  
      escribirDig@lectura 0006                ??_BorraLCD 001B               ?_Transmitir 002E  
               ?_contador 0001            ?_CaracterQbert 0001  __end_ofi2_MensajeLCD_Var 1EC0  
               ?_parEmerg 0001              ?_HabilitaLCD 0001              _ConfiguraLCD 1F46  
                 __Hparam 0000     i2EscribeLCD_n8@decena 000B                   __Lparam 0000  
               ?_luzFondo 0001                   ___awdiv 14AC                   ___lbdiv 1D16  
                 ___awmod 187A                   ___lbmod 1E20                   ___ftdiv 0F44  
                 ___ftmul 0D6A     i2EscribeLCD_n8@unidad 000C                   ___lwdiv 1B20  
                 ___lwmod 1CD4              __psmallconst 0800        __end_ofi2_BorraLCD 1FDE  
                 _flagADC 00A1                   __pcinit 1C4C                ??___ftpack 001C  
                 _flagDig 003F                   __ramtop 0800                   _flagFin 00A5  
                 _flagLuz 0045                   __ptext0 0884                   __ptext1 1110  
                 __ptext2 187A                   __ptext3 14AC                   __ptext4 18E8  
                 __ptext5 19C4                   __ptext6 1FFA                   __ptext7 1632  
                 __ptext8 0E5E                   __ptext9 1E20                   _cuenObj 0033  
                 _cuenMos 0043                ??___lwtoft 0022                   _dpowers 0801  
        ___awmod@dividend 0017           ?_MensajeLCD_Var 001C     __end_of_EscribeLCD_n8 0F44  
                 _sprintf 0C5C            __pintcode_body 0B3C      end_of_initialization 1C82  
            ??i2_contador 000E                ??_contador 0024   __end_ofi2_EscribeLCD_n8 1110  
            ??i2_parEmerg 0007                ??_parEmerg 001D             __Lmediumconst 0000  
                 int_func 0B3C              _EscribeLCD_c 1F74                ??_luzFondo 0007  
                 postdec2 0FDD                   postinc0 0FEE                   postinc2 0FDE  
               _PORTCbits 0F82              ??_ComandoLCD 001B        __end_ofi2_contador 12B0  
      __end_ofi2_parEmerg 1F46          ___lbmod@dividend 0018            _RecibirComando 18E8  
         ??_CaracterQbert 001C           i2EscribeLCD_c@a 0005                 i2___awdiv 15B0  
               i2___lbdiv 1D4E                 i2___awmod 1956                 i2___lbmod 1E70  
             ___lbmod@rem 001A               ___ftdiv@exp 006D             ?i2_RetardoLCD 0001  
      i2___awdiv@dividend 0001        __end_of_ComandoLCD 1E20               Transmitir@i 0092  
             ___ftmul@exp 002B            __end_of___ftge 1796            __end_of___wmul 1EE6  
           __pidataCOMRAM 2006             ??_borrarTexto 0007     __end_of_InicializaLCD 14AC  
          __end_of_reiCon 1A1C                 _EnviaDato 1BC0    __end_of_RecibirComando 1956  
     start_initialization 1C4C               __end_of_ADC 1362        i2___awdiv@quotient 0007  
             __end_of_RGB 16AA               __end_of_ISR 0C5C               __end_of_SEG 2000  
             __end_of_fin 15B0                ?i2___awdiv 0001                ?i2___lbdiv 0005  
           ??_escribirDig 0006                ?i2___awmod 0001                ?i2___lbmod 0001  
        ?i2_EscribeLCD_n8 0009            ??i2_RetardoLCD 0001              ??_RetardoLCD 0017  
      i2___lbdiv@dividend 0006       EscribeLCD_n8@decena 0021                  ??___ftge 001D  
                ??___wmul 0005       EscribeLCD_n8@unidad 0022                  ??_reiCon 0024  
              ?_EnviaDato 0001           ?_RecibirComando 0001               __pbssCOMRAM 0031  
      __end_of_RetardoLCD 1ACA             __pcstackBANK0 0060        i2___lbdiv@quotient 0008  
     __end_of_borrarTexto 1DBA              ??_Transmitir 0030         ?i2_MensajeLCD_Var 0006  
             sprintf@flag 0028               sprintf@prec 002C        ??i2_MensajeLCD_Var 0007  
           _DireccionaLCD 1F5E       __end_of_escribirDig 1BC0            i2_EscribeLCD_c 1FA0  
        ___lwdiv@dividend 0017     __end_of_CursorAInicio 200C                 __pintcode 0008  
                ?___awdiv 0017                  ?___lbdiv 001B                  ?___awmod 0017  
                ?___lbmod 0017                  ?___ftdiv 0060                  ?___ftmul 0022  
                ?___lwdiv 0017                  ?___lwmod 001E        __end_of_Transmitir 1CD4  
        ??_MensajeLCD_Var 001D             ?_CaracterCara 0001               __smallconst 0800  
        ___lwdiv@quotient 001C               ??i2___awdiv 0005               ??i2___lbdiv 0006  
             ??i2___awmod 0005                  ?_sprintf 0023               ??i2___lbmod 0002  
          ___wmul@product 0005             i2_HabilitaLCD 1FEC            ?_DireccionaLCD 0001  
  __end_ofi2_EscribeLCD_c 1FB6     RecibirComando@comando 0024                  i2u340_47 1AD4  
                i2u157_40 1D68                  i2u341_47 1AE0                  i2u342_47 1AE8  
                i2u343_47 1AF2                  i2u192_40 15F4                  i2u344_47 1AFC  
                i2u345_47 1FF0                  i2u258_40 0A4A                  i2u338_47 0C34  
                i2u259_40 0A58                  i2u339_47 0AC6                  i2u198_40 198E  
          ??_CaracterCara 001C               _borrarTexto 1D86                _ADCON0bits 0FC2  
       ___wmul@multiplier 0001             ??i2_EnviaDato 0003      __end_ofi2_RetardoLCD 1B20  
             ??_EnviaDato 0019                  i2_reiCon 1A1C         i2___awdiv@divisor 0003  
       i2___awdiv@counter 0005                  _BorraLCD 1FB6               _escribirDig 1B72  
      i2___awmod@dividend 0001            ?i2_HabilitaLCD 0001           ?i2_EscribeLCD_c 0001  
                __Hrparam 0000         i2___lbdiv@divisor 0005    i2EscribeLCD_n8@centena 000A  
       i2___lbdiv@counter 0007                  __Lrparam 0000              i2EnviaDato@a 0004  
                ___ftpack 1362                  ___lwtoft 1EE6             ConfiguraLCD@a 0017  
              sprintf@val 002A         ??i2_DireccionaLCD 0005           ___lwdiv@divisor 0019  
                _flagCont 00A3           ___lwdiv@counter 001B                  __ptext10 1D16  
                __ptext11 1F5E                  __ptext20 200A                  __ptext12 1F0A  
                __ptext21 1FB6                  __ptext13 1E48                  __ptext30 1362  
                __ptext22 1BC0                  __ptext14 1F74                  __ptext31 1C90  
                __ptext23 1A74                  __ptext15 1410                  __ptext40 102A  
                __ptext32 0C5C                  __ptext24 1FDE                  __ptext16 1F46  
                __ptext41 1E70                  __ptext33 1CD4                  __ptext25 12B0  
                __ptext17 1796                  __ptext50 16AA                  __ptext42 1D4E  
                __ptext34 1B20                  __ptext26 1EE6                  __ptext18 1808  
                __ptext51 1E98                  __ptext43 1D86                  __ptext27 0D6A  
                __ptext19 1DEE                  __ptext52 1F8A                  __ptext44 1DBA  
                __ptext36 1A1C                  __ptext28 1722                  __ptext53 1FCA  
                __ptext45 1EC0                  __ptext37 1F28                  __ptext29 0F44  
                __ptext54 1B72                  __ptext46 152E                  __ptext38 0A0A  
                __ptext55 1FA0                  __ptext47 1956                  __ptext39 11E0  
                __ptext56 1C06                  __ptext48 15B0                  __ptext57 1ACA  
                __ptext49 2000                  __ptext58 1FEC       __end_ofi2_EnviaDato 1C4C  
                _contador 1110     __end_of_CaracterQbert 1808        i2___lbmod@dividend 0002  
         ??_DireccionaLCD 001B                  _parEmerg 1F0A                  _interfaz 0047  
                _piezFalt 0031                  _luzFondo 1DBA                  isa$xinst 0000  
                int$flags 0048          ??_RecibirComando 0024         i2___awmod@divisor 0003  
       i2___awmod@counter 0005             _EscribeLCD_n8 0E5E           ??i2_HabilitaLCD 0001  
                intlevel2 0000                 sprintf@ap 0029             ??_HabilitaLCD 0017  
               sprintf@sp 0023               ComandoLCD@a 001B          ___lwmod@dividend 001E  
           ?_ConfiguraLCD 0001      __end_of_CaracterCara 187A         i2___lbmod@divisor 0001  
       i2___lbmod@counter 0003             i2RetardoLCD@a 0002                  sprintf@c 002D  
                sprintf@f 0024               i2_EnviaDato 1C06           ___lwmod@divisor 0020  
         ___lwmod@counter 0022            ?_EscribeLCD_n8 001F                i2_BorraLCD 1FCA  
          ??_ConfiguraLCD 0017             ?_EscribeLCD_c 0001         i2MensajeLCD_Var@a 0006  
            i2_RetardoLCD 1ACA       __end_of_HabilitaLCD 1FEC  
