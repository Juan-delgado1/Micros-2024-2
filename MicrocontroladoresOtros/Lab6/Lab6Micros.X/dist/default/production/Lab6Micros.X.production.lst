

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Mar 06 13:38:51 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=1
    43                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1,group=3
    47                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=2
    49                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=2
    50                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1,group=2
    51                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,group=2
    52                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1,group=2
    53                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1,group=2
    54                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1,group=2
    55                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1,group=2
    56                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1,group=2
    57                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1,group=2
    58                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1,group=2
    59                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1,group=2
    60                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1,group=2
    61                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1,group=2
    62                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1,group=2
    63                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	text75,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    93                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    94                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    95   000000                     
    96                           ; Generated 25/07/2024 GMT
    97                           ; 
    98                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution. Publication is not required when
   112                           ;        this file is used in an embedded application.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC18F4550 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130   000FE0                     bsr             equ	4064
   131   000FE9                     fsr0            equ	4073
   132   000FEA                     fsr0h           equ	4074
   133   000FE9                     fsr0l           equ	4073
   134   000FE1                     fsr1            equ	4065
   135   000FE2                     fsr1h           equ	4066
   136   000FE1                     fsr1l           equ	4065
   137   000FD9                     fsr2            equ	4057
   138   000FDA                     fsr2h           equ	4058
   139   000FD9                     fsr2l           equ	4057
   140   000FEF                     indf0           equ	4079
   141   000FE7                     indf1           equ	4071
   142   000FDF                     indf2           equ	4063
   143   000FF2                     intcon          equ	4082
   144   000000                     nvmcon          equ	0
   145   000FF9                     pcl             equ	4089
   146   000FFA                     pclath          equ	4090
   147   000FFB                     pclatu          equ	4091
   148   000FEB                     plusw0          equ	4075
   149   000FE3                     plusw1          equ	4067
   150   000FDB                     plusw2          equ	4059
   151   000FED                     postdec0        equ	4077
   152   000FE5                     postdec1        equ	4069
   153   000FDD                     postdec2        equ	4061
   154   000FEE                     postinc0        equ	4078
   155   000FE6                     postinc1        equ	4070
   156   000FDE                     postinc2        equ	4062
   157   000FEC                     preinc0         equ	4076
   158   000FE4                     preinc1         equ	4068
   159   000FDC                     preinc2         equ	4060
   160   000FF3                     prod            equ	4083
   161   000FF4                     prodh           equ	4084
   162   000FF3                     prodl           equ	4083
   163   000FD8                     status          equ	4056
   164   000FF5                     tablat          equ	4085
   165   000FF6                     tblptr          equ	4086
   166   000FF7                     tblptrh         equ	4087
   167   000FF6                     tblptrl         equ	4086
   168   000FF8                     tblptru         equ	4088
   169   000FFD                     tosl            equ	4093
   170   000FE8                     wreg            equ	4072
   171   000F62                     SPPDATA         equ	3938	;# 
   172   000F63                     SPPCFG          equ	3939	;# 
   173   000F64                     SPPEPS          equ	3940	;# 
   174   000F65                     SPPCON          equ	3941	;# 
   175   000F66                     UFRM            equ	3942	;# 
   176   000F66                     UFRML           equ	3942	;# 
   177   000F67                     UFRMH           equ	3943	;# 
   178   000F68                     UIR             equ	3944	;# 
   179   000F69                     UIE             equ	3945	;# 
   180   000F6A                     UEIR            equ	3946	;# 
   181   000F6B                     UEIE            equ	3947	;# 
   182   000F6C                     USTAT           equ	3948	;# 
   183   000F6D                     UCON            equ	3949	;# 
   184   000F6E                     UADDR           equ	3950	;# 
   185   000F6F                     UCFG            equ	3951	;# 
   186   000F70                     UEP0            equ	3952	;# 
   187   000F71                     UEP1            equ	3953	;# 
   188   000F72                     UEP2            equ	3954	;# 
   189   000F73                     UEP3            equ	3955	;# 
   190   000F74                     UEP4            equ	3956	;# 
   191   000F75                     UEP5            equ	3957	;# 
   192   000F76                     UEP6            equ	3958	;# 
   193   000F77                     UEP7            equ	3959	;# 
   194   000F78                     UEP8            equ	3960	;# 
   195   000F79                     UEP9            equ	3961	;# 
   196   000F7A                     UEP10           equ	3962	;# 
   197   000F7B                     UEP11           equ	3963	;# 
   198   000F7C                     UEP12           equ	3964	;# 
   199   000F7D                     UEP13           equ	3965	;# 
   200   000F7E                     UEP14           equ	3966	;# 
   201   000F7F                     UEP15           equ	3967	;# 
   202   000F80                     PORTA           equ	3968	;# 
   203   000F81                     PORTB           equ	3969	;# 
   204   000F82                     PORTC           equ	3970	;# 
   205   000F83                     PORTD           equ	3971	;# 
   206   000F84                     PORTE           equ	3972	;# 
   207   000F89                     LATA            equ	3977	;# 
   208   000F8A                     LATB            equ	3978	;# 
   209   000F8B                     LATC            equ	3979	;# 
   210   000F8C                     LATD            equ	3980	;# 
   211   000F8D                     LATE            equ	3981	;# 
   212   000F92                     TRISA           equ	3986	;# 
   213   000F92                     DDRA            equ	3986	;# 
   214   000F93                     TRISB           equ	3987	;# 
   215   000F93                     DDRB            equ	3987	;# 
   216   000F94                     TRISC           equ	3988	;# 
   217   000F94                     DDRC            equ	3988	;# 
   218   000F95                     TRISD           equ	3989	;# 
   219   000F95                     DDRD            equ	3989	;# 
   220   000F96                     TRISE           equ	3990	;# 
   221   000F96                     DDRE            equ	3990	;# 
   222   000F9B                     OSCTUNE         equ	3995	;# 
   223   000F9D                     PIE1            equ	3997	;# 
   224   000F9E                     PIR1            equ	3998	;# 
   225   000F9F                     IPR1            equ	3999	;# 
   226   000FA0                     PIE2            equ	4000	;# 
   227   000FA1                     PIR2            equ	4001	;# 
   228   000FA2                     IPR2            equ	4002	;# 
   229   000FA6                     EECON1          equ	4006	;# 
   230   000FA7                     EECON2          equ	4007	;# 
   231   000FA8                     EEDATA          equ	4008	;# 
   232   000FA9                     EEADR           equ	4009	;# 
   233   000FAB                     RCSTA           equ	4011	;# 
   234   000FAB                     RCSTA1          equ	4011	;# 
   235   000FAC                     TXSTA           equ	4012	;# 
   236   000FAC                     TXSTA1          equ	4012	;# 
   237   000FAD                     TXREG           equ	4013	;# 
   238   000FAD                     TXREG1          equ	4013	;# 
   239   000FAE                     RCREG           equ	4014	;# 
   240   000FAE                     RCREG1          equ	4014	;# 
   241   000FAF                     SPBRG           equ	4015	;# 
   242   000FAF                     SPBRG1          equ	4015	;# 
   243   000FB0                     SPBRGH          equ	4016	;# 
   244   000FB1                     T3CON           equ	4017	;# 
   245   000FB2                     TMR3            equ	4018	;# 
   246   000FB2                     TMR3L           equ	4018	;# 
   247   000FB3                     TMR3H           equ	4019	;# 
   248   000FB4                     CMCON           equ	4020	;# 
   249   000FB5                     CVRCON          equ	4021	;# 
   250   000FB6                     ECCP1AS         equ	4022	;# 
   251   000FB6                     CCP1AS          equ	4022	;# 
   252   000FB7                     ECCP1DEL        equ	4023	;# 
   253   000FB7                     CCP1DEL         equ	4023	;# 
   254   000FB8                     BAUDCON         equ	4024	;# 
   255   000FB8                     BAUDCTL         equ	4024	;# 
   256   000FBA                     CCP2CON         equ	4026	;# 
   257   000FBB                     CCPR2           equ	4027	;# 
   258   000FBB                     CCPR2L          equ	4027	;# 
   259   000FBC                     CCPR2H          equ	4028	;# 
   260   000FBD                     CCP1CON         equ	4029	;# 
   261   000FBD                     ECCP1CON        equ	4029	;# 
   262   000FBE                     CCPR1           equ	4030	;# 
   263   000FBE                     CCPR1L          equ	4030	;# 
   264   000FBF                     CCPR1H          equ	4031	;# 
   265   000FC0                     ADCON2          equ	4032	;# 
   266   000FC1                     ADCON1          equ	4033	;# 
   267   000FC2                     ADCON0          equ	4034	;# 
   268   000FC3                     ADRES           equ	4035	;# 
   269   000FC3                     ADRESL          equ	4035	;# 
   270   000FC4                     ADRESH          equ	4036	;# 
   271   000FC5                     SSPCON2         equ	4037	;# 
   272   000FC6                     SSPCON1         equ	4038	;# 
   273   000FC7                     SSPSTAT         equ	4039	;# 
   274   000FC8                     SSPADD          equ	4040	;# 
   275   000FC9                     SSPBUF          equ	4041	;# 
   276   000FCA                     T2CON           equ	4042	;# 
   277   000FCB                     PR2             equ	4043	;# 
   278   000FCB                     MEMCON          equ	4043	;# 
   279   000FCC                     TMR2            equ	4044	;# 
   280   000FCD                     T1CON           equ	4045	;# 
   281   000FCE                     TMR1            equ	4046	;# 
   282   000FCE                     TMR1L           equ	4046	;# 
   283   000FCF                     TMR1H           equ	4047	;# 
   284   000FD0                     RCON            equ	4048	;# 
   285   000FD1                     WDTCON          equ	4049	;# 
   286   000FD2                     HLVDCON         equ	4050	;# 
   287   000FD2                     LVDCON          equ	4050	;# 
   288   000FD3                     OSCCON          equ	4051	;# 
   289   000FD5                     T0CON           equ	4053	;# 
   290   000FD6                     TMR0            equ	4054	;# 
   291   000FD6                     TMR0L           equ	4054	;# 
   292   000FD7                     TMR0H           equ	4055	;# 
   293   000FD8                     STATUS          equ	4056	;# 
   294   000FD9                     FSR2            equ	4057	;# 
   295   000FD9                     FSR2L           equ	4057	;# 
   296   000FDA                     FSR2H           equ	4058	;# 
   297   000FDB                     PLUSW2          equ	4059	;# 
   298   000FDC                     PREINC2         equ	4060	;# 
   299   000FDD                     POSTDEC2        equ	4061	;# 
   300   000FDE                     POSTINC2        equ	4062	;# 
   301   000FDF                     INDF2           equ	4063	;# 
   302   000FE0                     BSR             equ	4064	;# 
   303   000FE1                     FSR1            equ	4065	;# 
   304   000FE1                     FSR1L           equ	4065	;# 
   305   000FE2                     FSR1H           equ	4066	;# 
   306   000FE3                     PLUSW1          equ	4067	;# 
   307   000FE4                     PREINC1         equ	4068	;# 
   308   000FE5                     POSTDEC1        equ	4069	;# 
   309   000FE6                     POSTINC1        equ	4070	;# 
   310   000FE7                     INDF1           equ	4071	;# 
   311   000FE8                     WREG            equ	4072	;# 
   312   000FE9                     FSR0            equ	4073	;# 
   313   000FE9                     FSR0L           equ	4073	;# 
   314   000FEA                     FSR0H           equ	4074	;# 
   315   000FEB                     PLUSW0          equ	4075	;# 
   316   000FEC                     PREINC0         equ	4076	;# 
   317   000FED                     POSTDEC0        equ	4077	;# 
   318   000FEE                     POSTINC0        equ	4078	;# 
   319   000FEF                     INDF0           equ	4079	;# 
   320   000FF0                     INTCON3         equ	4080	;# 
   321   000FF1                     INTCON2         equ	4081	;# 
   322   000FF2                     INTCON          equ	4082	;# 
   323   000FF3                     PROD            equ	4083	;# 
   324   000FF3                     PRODL           equ	4083	;# 
   325   000FF4                     PRODH           equ	4084	;# 
   326   000FF5                     TABLAT          equ	4085	;# 
   327   000FF6                     TBLPTR          equ	4086	;# 
   328   000FF6                     TBLPTRL         equ	4086	;# 
   329   000FF7                     TBLPTRH         equ	4087	;# 
   330   000FF8                     TBLPTRU         equ	4088	;# 
   331   000FF9                     PCLAT           equ	4089	;# 
   332   000FF9                     PC              equ	4089	;# 
   333   000FF9                     PCL             equ	4089	;# 
   334   000FFA                     PCLATH          equ	4090	;# 
   335   000FFB                     PCLATU          equ	4091	;# 
   336   000FFC                     STKPTR          equ	4092	;# 
   337   000FFD                     TOS             equ	4093	;# 
   338   000FFD                     TOSL            equ	4093	;# 
   339   000FFE                     TOSH            equ	4094	;# 
   340   000FFF                     TOSU            equ	4095	;# 
   341                           
   342                           	psect	idataCOMRAM
   343   002E1E                     __pidataCOMRAM:
   344                           	callstack 0
   345                           
   346                           ;initializer for _flagLuz
   347   002E1E  FFFF               	dw	65535
   348                           
   349                           ;initializer for _interfaz
   350   002E20  08                 	db	8
   351                           
   352                           	psect	mediumconst
   353   007EDE                     __pmediumconst:
   354                           	callstack 0
   355   007EDE  00                 	db	0
   356   007EDF                     __powers_:
   357                           	callstack 0
   358   007EDF  00                 	db	0
   359   007EE0  80                 	db	128
   360   007EE1  3F                 	db	63
   361   007EE2  00                 	db	0
   362   007EE3  20                 	db	32
   363   007EE4  41                 	db	65
   364   007EE5  00                 	db	0
   365   007EE6  C8                 	db	200
   366   007EE7  42                 	db	66
   367   007EE8  00                 	db	0
   368   007EE9  7A                 	db	122
   369   007EEA  44                 	db	68
   370   007EEB  40                 	db	64
   371   007EEC  1C                 	db	28
   372   007EED  46                 	db	70
   373   007EEE  50                 	db	80
   374   007EEF  C3                 	db	195
   375   007EF0  47                 	db	71
   376   007EF1  24                 	db	36
   377   007EF2  74                 	db	116
   378   007EF3  49                 	db	73
   379   007EF4  97                 	db	151
   380   007EF5  18                 	db	24
   381   007EF6  4B                 	db	75
   382   007EF7  BC                 	db	188
   383   007EF8  BE                 	db	190
   384   007EF9  4C                 	db	76
   385   007EFA  6B                 	db	107
   386   007EFB  6E                 	db	110
   387   007EFC  4E                 	db	78
   388   007EFD  03                 	db	3
   389   007EFE  15                 	db	21
   390   007EFF  50                 	db	80
   391   007F00  79                 	db	121
   392   007F01  AD                 	db	173
   393   007F02  60                 	db	96
   394   007F03  F3                 	db	243
   395   007F04  49                 	db	73
   396   007F05  71                 	db	113
   397   007F06                     __end_of__powers_:
   398                           	callstack 0
   399   007F06                     __npowers_:
   400                           	callstack 0
   401   007F06  00                 	db	0
   402   007F07  80                 	db	128
   403   007F08  3F                 	db	63
   404   007F09  CD                 	db	205
   405   007F0A  CC                 	db	204
   406   007F0B  3D                 	db	61
   407   007F0C  D7                 	db	215
   408   007F0D  23                 	db	35
   409   007F0E  3C                 	db	60
   410   007F0F  12                 	db	18
   411   007F10  83                 	db	131
   412   007F11  3A                 	db	58
   413   007F12  B7                 	db	183
   414   007F13  D1                 	db	209
   415   007F14  38                 	db	56
   416   007F15  C6                 	db	198
   417   007F16  27                 	db	39
   418   007F17  37                 	db	55
   419   007F18  38                 	db	56
   420   007F19  86                 	db	134
   421   007F1A  35                 	db	53
   422   007F1B  C0                 	db	192
   423   007F1C  D6                 	db	214
   424   007F1D  33                 	db	51
   425   007F1E  CC                 	db	204
   426   007F1F  2B                 	db	43
   427   007F20  32                 	db	50
   428   007F21  70                 	db	112
   429   007F22  89                 	db	137
   430   007F23  30                 	db	48
   431   007F24  E7                 	db	231
   432   007F25  DB                 	db	219
   433   007F26  2E                 	db	46
   434   007F27  E5                 	db	229
   435   007F28  3C                 	db	60
   436   007F29  1E                 	db	30
   437   007F2A  42                 	db	66
   438   007F2B  A2                 	db	162
   439   007F2C  0D                 	db	13
   440   007F2D                     __end_of__npowers_:
   441                           	callstack 0
   442   007F2D                     _dpowers:
   443                           	callstack 0
   444   007F2D  0001               	dw	1
   445   007F2F  0000               	dw	0
   446   007F31  000A               	dw	10
   447   007F33  0000               	dw	0
   448   007F35  0064               	dw	100
   449   007F37  0000               	dw	0
   450   007F39  03E8               	dw	1000
   451   007F3B  0000               	dw	0
   452   007F3D  2710               	dw	10000
   453   007F3F  0000               	dw	0
   454   007F41  86A0               	dw	34464
   455   007F43  0001               	dw	1
   456   007F45  4240               	dw	16960
   457   007F47  000F               	dw	15
   458   007F49  9680               	dw	38528
   459   007F4B  0098               	dw	152
   460   007F4D  E100               	dw	57600
   461   007F4F  05F5               	dw	1525
   462   007F51  CA00               	dw	51712
   463   007F53  3B9A               	dw	15258
   464   007F55                     __end_of_dpowers:
   465                           	callstack 0
   466   007C0F                     _RB7            set	31759
   467   007C0E                     _RB6            set	31758
   468   007C0D                     _RB5            set	31757
   469   007C0C                     _RB4            set	31756
   470   007CF0                     _TMR1IF         set	31984
   471   007E68                     _TMR1ON         set	32360
   472   007C11                     _RC1            set	31761
   473   007C10                     _RC0            set	31760
   474   007D08                     _CCP2IF         set	32008
   475   007D61                     _TRMT           set	32097
   476   007CF5                     _RCIF           set	31989
   477   007C5A                     _LATC2          set	31834
   478   007C4B                     _LATA3          set	31819
   479   007C49                     _LATA1          set	31817
   480   007F97                     _GIE            set	32663
   481   007F93                     _RBIE           set	32659
   482   007F90                     _RBIF           set	32656
   483   007F8F                     _RBPU           set	32655
   484   007C58                     _LATC0          set	31832
   485   007CA8                     _TRISD0         set	31912
   486   007CA0                     _TRISC0         set	31904
   487   007E52                     _TMR2ON         set	32338
   488   007CA2                     _TRISC2         set	31906
   489   007C90                     _TRISA0         set	31888
   490   007C6A                     _LATE2          set	31850
   491   007C69                     _LATE1          set	31849
   492   007C68                     _LATE0          set	31848
   493   007CB2                     _TRISE2         set	31922
   494   007CB1                     _TRISE1         set	31921
   495   007CB0                     _TRISE0         set	31920
   496   007C4D                     _LATA5          set	31821
   497   007C4C                     _LATA4          set	31820
   498   000FBB                     _CCPR2          set	4027
   499   000FCE                     _TMR1           set	4046
   500   000F8A                     _LATB           set	3978
   501   000F81                     _PORTB          set	3969
   502   000FBA                     _CCP2CON        set	4026
   503   000FAD                     _TXREG          set	4013
   504   000FAE                     _RCREG          set	4014
   505   000FC3                     _ADRESL         set	4035
   506   000FC4                     _ADRESH         set	4036
   507   000FC2                     _ADCON0bits     set	4034
   508   000FBE                     _CCPR1L         set	4030
   509   000F93                     _TRISB          set	3987
   510   000FCD                     _T1CON          set	4045
   511   000FAF                     _SPBRG          set	4015
   512   000FB8                     _BAUDCON        set	4024
   513   000FAB                     _RCSTA          set	4011
   514   000FAC                     _TXSTA          set	4012
   515   000FC2                     _ADCON0         set	4034
   516   000FC0                     _ADCON2         set	4032
   517   000FC1                     _ADCON1         set	4033
   518   000FCC                     _TMR2           set	4044
   519   000FBD                     _CCP1CON        set	4029
   520   000FCA                     _T2CON          set	4042
   521   000FCB                     _PR2            set	4043
   522   000F92                     _TRISA          set	3986
   523   000F95                     _TRISD          set	3989
   524   000FD3                     _OSCCON         set	4051
   525   000F8C                     _LATD           set	3980
   526   007F55                     STR_17:
   527   007F55  44                 	db	68	;'D'
   528   007F56  69                 	db	105	;'i'
   529   007F57  73                 	db	115	;'s'
   530   007F58  74                 	db	116	;'t'
   531   007F59  61                 	db	97	;'a'
   532   007F5A  6E                 	db	110	;'n'
   533   007F5B  63                 	db	99	;'c'
   534   007F5C  69                 	db	105	;'i'
   535   007F5D  61                 	db	97	;'a'
   536   007F5E  20                 	db	32
   537   007F5F  6F                 	db	111	;'o'
   538   007F60  62                 	db	98	;'b'
   539   007F61  6A                 	db	106	;'j'
   540   007F62  65                 	db	101	;'e'
   541   007F63  74                 	db	116	;'t'
   542   007F64  6F                 	db	111	;'o'
   543   007F65  3A                 	db	58	;':'
   544   007F66  20                 	db	32
   545   007F67  25                 	db	37
   546   007F68  64                 	db	100	;'d'
   547   007F69  20                 	db	32
   548   007F6A  63                 	db	99	;'c'
   549   007F6B  6D                 	db	109	;'m'
   550   007F6C  0D                 	db	13
   551   007F6D  00                 	db	0
   552   007F6E                     STR_15:
   553   007F6E  56                 	db	86	;'V'
   554   007F6F  61                 	db	97	;'a'
   555   007F70  6C                 	db	108	;'l'
   556   007F71  6F                 	db	111	;'o'
   557   007F72  72                 	db	114	;'r'
   558   007F73  20                 	db	32
   559   007F74  64                 	db	100	;'d'
   560   007F75  65                 	db	101	;'e'
   561   007F76  20                 	db	32
   562   007F77  50                 	db	80	;'P'
   563   007F78  57                 	db	87	;'W'
   564   007F79  4D                 	db	77	;'M'
   565   007F7A  3A                 	db	58	;':'
   566   007F7B  20                 	db	32
   567   007F7C  25                 	db	37
   568   007F7D  2E                 	db	46
   569   007F7E  32                 	db	50	;'2'
   570   007F7F  66                 	db	102	;'f'
   571   007F80  20                 	db	32
   572   007F81  25                 	db	37
   573   007F82  25                 	db	37
   574   007F83  0D                 	db	13
   575   007F84  00                 	db	0
   576   007F85                     STR_16:
   577   007F85  46                 	db	70	;'F'
   578   007F86  61                 	db	97	;'a'
   579   007F87  6C                 	db	108	;'l'
   580   007F88  6C                 	db	108	;'l'
   581   007F89  61                 	db	97	;'a'
   582   007F8A  20                 	db	32
   583   007F8B  65                 	db	101	;'e'
   584   007F8C  6E                 	db	110	;'n'
   585   007F8D  20                 	db	32
   586   007F8E  65                 	db	101	;'e'
   587   007F8F  6C                 	db	108	;'l'
   588   007F90  20                 	db	32
   589   007F91  73                 	db	115	;'s'
   590   007F92  65                 	db	101	;'e'
   591   007F93  6E                 	db	110	;'n'
   592   007F94  73                 	db	115	;'s'
   593   007F95  6F                 	db	111	;'o'
   594   007F96  72                 	db	114	;'r'
   595   007F97  0D                 	db	13
   596   007F98  00                 	db	0
   597   007F99                     STR_2:
   598   007F99  50                 	db	80	;'P'
   599   007F9A  69                 	db	105	;'i'
   600   007F9B  65                 	db	101	;'e'
   601   007F9C  7A                 	db	122	;'z'
   602   007F9D  61                 	db	97	;'a'
   603   007F9E  73                 	db	115	;'s'
   604   007F9F  20                 	db	32
   605   007FA0  61                 	db	97	;'a'
   606   007FA1  20                 	db	32
   607   007FA2  43                 	db	67	;'C'
   608   007FA3  6F                 	db	111	;'o'
   609   007FA4  6E                 	db	110	;'n'
   610   007FA5  74                 	db	116	;'t'
   611   007FA6  61                 	db	97	;'a'
   612   007FA7  72                 	db	114	;'r'
   613   007FA8  3A                 	db	58	;':'
   614   007FA9  20                 	db	32
   615   007FAA  00                 	db	0
   616   007FAB                     STR_5:
   617   007FAB  56                 	db	86	;'V'
   618   007FAC  61                 	db	97	;'a'
   619   007FAD  6C                 	db	108	;'l'
   620   007FAE  6F                 	db	111	;'o'
   621   007FAF  72                 	db	114	;'r'
   622   007FB0  20                 	db	32
   623   007FB1  49                 	db	73	;'I'
   624   007FB2  6E                 	db	110	;'n'
   625   007FB3  76                 	db	118	;'v'
   626   007FB4  61                 	db	97	;'a'
   627   007FB5  6C                 	db	108	;'l'
   628   007FB6  69                 	db	105	;'i'
   629   007FB7  64                 	db	100	;'d'
   630   007FB8  6F                 	db	111	;'o'
   631   007FB9  00                 	db	0
   632   007FBA                     STR_11:
   633   007FBA  46                 	db	70	;'F'
   634   007FBB  69                 	db	105	;'i'
   635   007FBC  6E                 	db	110	;'n'
   636   007FBD  20                 	db	32
   637   007FBE  64                 	db	100	;'d'
   638   007FBF  65                 	db	101	;'e'
   639   007FC0  20                 	db	32
   640   007FC1  43                 	db	67	;'C'
   641   007FC2  75                 	db	117	;'u'
   642   007FC3  65                 	db	101	;'e'
   643   007FC4  6E                 	db	110	;'n'
   644   007FC5  74                 	db	116	;'t'
   645   007FC6  61                 	db	97	;'a'
   646   007FC7  00                 	db	0
   647   007FC8                     STR_12:
   648   007FC8  50                 	db	80	;'P'
   649   007FC9  72                 	db	114	;'r'
   650   007FCA  65                 	db	101	;'e'
   651   007FCB  73                 	db	115	;'s'
   652   007FCC  69                 	db	105	;'i'
   653   007FCD  6F                 	db	111	;'o'
   654   007FCE  6E                 	db	110	;'n'
   655   007FCF  65                 	db	101	;'e'
   656   007FD0  20                 	db	32
   657   007FD1  4F                 	db	79	;'O'
   658   007FD2  4B                 	db	75	;'K'
   659   007FD3  00                 	db	0
   660   007FD4                     STR_1:
   661   007FD4  42                 	db	66	;'B'
   662   007FD5  69                 	db	105	;'i'
   663   007FD6  65                 	db	101	;'e'
   664   007FD7  6E                 	db	110	;'n'
   665   007FD8  76                 	db	118	;'v'
   666   007FD9  65                 	db	101	;'e'
   667   007FDA  6E                 	db	110	;'n'
   668   007FDB  69                 	db	105	;'i'
   669   007FDC  64                 	db	100	;'d'
   670   007FDD  6F                 	db	111	;'o'
   671   007FDE  73                 	db	115	;'s'
   672   007FDF  00                 	db	0
   673   007FE0                     STR_4:
   674   007FE0  4F                 	db	79	;'O'
   675   007FE1  62                 	db	98	;'b'
   676   007FE2  6A                 	db	106	;'j'
   677   007FE3  65                 	db	101	;'e'
   678   007FE4  74                 	db	116	;'t'
   679   007FE5  69                 	db	105	;'i'
   680   007FE6  76                 	db	118	;'v'
   681   007FE7  6F                 	db	111	;'o'
   682   007FE8  3A                 	db	58	;':'
   683   007FE9  20                 	db	32
   684   007FEA  00                 	db	0
   685   007FEB                     STR_8:
   686   007FEB  45                 	db	69	;'E'
   687   007FEC  6D                 	db	109	;'m'
   688   007FED  65                 	db	101	;'e'
   689   007FEE  72                 	db	114	;'r'
   690   007FEF  67                 	db	103	;'g'
   691   007FF0  65                 	db	101	;'e'
   692   007FF1  6E                 	db	110	;'n'
   693   007FF2  63                 	db	99	;'c'
   694   007FF3  69                 	db	105	;'i'
   695   007FF4  61                 	db	97	;'a'
   696   007FF5  00                 	db	0
   697   007FF6                     STR_3:
   698   007FF6  46                 	db	70	;'F'
   699   007FF7  61                 	db	97	;'a'
   700   007FF8  6C                 	db	108	;'l'
   701   007FF9  74                 	db	116	;'t'
   702   007FFA  61                 	db	97	;'a'
   703   007FFB  6E                 	db	110	;'n'
   704   007FFC  3A                 	db	58	;':'
   705   007FFD  20                 	db	32
   706   007FFE  00                 	db	0
   707   007F99                     STR_6           equ	STR_2
   708   007F99                     STR_7           equ	STR_2
   709   007FE0                     STR_10          equ	STR_4
   710   007FE0                     STR_14          equ	STR_4
   711   007FF6                     STR_9           equ	STR_3
   712   007FF6                     STR_13          equ	STR_3
   713   007FFF  00                 	db	0	; dummy byte at the end
   714   000002                     __activetblptr  equ	2
   715                           
   716                           ; #config settings
   717                           
   718                           	psect	cinit
   719   0029A6                     __pcinit:
   720                           	callstack 0
   721   0029A6                     start_initialization:
   722                           	callstack 0
   723   0029A6                     __initialization:
   724                           	callstack 0
   725                           
   726                           ; Initialize objects allocated to COMRAM (3 bytes)
   727                           ; load TBLPTR registers with __pidataCOMRAM
   728   0029A6  0E1E               	movlw	low __pidataCOMRAM
   729   0029A8  6EF6               	movwf	tblptrl,c
   730   0029AA  0E2E               	movlw	high __pidataCOMRAM
   731   0029AC  6EF7               	movwf	tblptrh,c
   732   0029AE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   733   0029B0  6EF8               	movwf	tblptru,c
   734   0029B2  0009               	tblrd		*+	;fetch initializer
   735   0029B4  CFF5 F045          	movff	tablat,__pdataCOMRAM
   736   0029B8  0009               	tblrd		*+	;fetch initializer
   737   0029BA  CFF5 F046          	movff	tablat,__pdataCOMRAM+1
   738   0029BE  0009               	tblrd		*+	;fetch initializer
   739   0029C0  CFF5 F047          	movff	tablat,__pdataCOMRAM+2
   740                           
   741                           ; Clear objects allocated to BANK0 (20 bytes)
   742   0029C4  EE00  F0B0         	lfsr	0,__pbssBANK0
   743   0029C8  0E14               	movlw	20
   744   0029CA                     clear_0:
   745   0029CA  6AEE               	clrf	postinc0,c
   746   0029CC  06E8               	decf	wreg,f,c
   747   0029CE  E1FD               	bnz	clear_0
   748                           
   749                           ; Clear objects allocated to COMRAM (20 bytes)
   750   0029D0  EE00  F031         	lfsr	0,__pbssCOMRAM
   751   0029D4  0E14               	movlw	20
   752   0029D6                     clear_1:
   753   0029D6  6AEE               	clrf	postinc0,c
   754   0029D8  06E8               	decf	wreg,f,c
   755   0029DA  E1FD               	bnz	clear_1
   756   0029DC                     end_of_initialization:
   757                           	callstack 0
   758   0029DC                     __end_of__initialization:
   759                           	callstack 0
   760   0029DC  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   761   0029DE  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   762   0029E0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   763   0029E2  6EF8               	movwf	tblptru,c
   764   0029E4  0100               	movlb	0
   765   0029E6  EF83  F007         	goto	_main	;jump to C main() function
   766                           
   767                           	psect	bssCOMRAM
   768   000031                     __pbssCOMRAM:
   769                           	callstack 0
   770   000031                     _piezFalt:
   771                           	callstack 0
   772   000031                     	ds	2
   773   000033                     _cuenObj:
   774                           	callstack 0
   775   000033                     	ds	2
   776   000035                     _b:
   777                           	callstack 0
   778   000035                     	ds	2
   779   000037                     _a:
   780                           	callstack 0
   781   000037                     	ds	2
   782   000039                     _cuenta:
   783                           	callstack 0
   784   000039                     	ds	2
   785   00003B                     _flagEmergencia:
   786                           	callstack 0
   787   00003B                     	ds	2
   788   00003D                     _flagDig:
   789                           	callstack 0
   790   00003D                     	ds	2
   791   00003F                     _flagEscribir:
   792                           	callstack 0
   793   00003F                     	ds	2
   794   000041                     _etimeout:
   795                           	callstack 0
   796   000041                     	ds	1
   797   000042                     _dis:
   798                           	callstack 0
   799   000042                     	ds	1
   800   000043                     _cuenMos:
   801                           	callstack 0
   802   000043                     	ds	1
   803   000044                     _Tecla:
   804                           	callstack 0
   805   000044                     	ds	1
   806                           
   807                           	psect	dataCOMRAM
   808   000045                     __pdataCOMRAM:
   809                           	callstack 0
   810   000045                     _flagLuz:
   811                           	callstack 0
   812   000045                     	ds	2
   813   000047                     _interfaz:
   814                           	callstack 0
   815   000047                     	ds	1
   816                           
   817                           	psect	bssBANK0
   818   0000B0                     __pbssBANK0:
   819                           	callstack 0
   820   0000B0                     _pwm:
   821                           	callstack 0
   822   0000B0                     	ds	3
   823   0000B3                     _adcVal:
   824                           	callstack 0
   825   0000B3                     	ds	3
   826   0000B6                     _d:
   827                           	callstack 0
   828   0000B6                     	ds	2
   829   0000B8                     _u:
   830                           	callstack 0
   831   0000B8                     	ds	2
   832   0000BA                     _flagObjeto:
   833                           	callstack 0
   834   0000BA                     	ds	2
   835   0000BC                     _flagADC:
   836                           	callstack 0
   837   0000BC                     	ds	2
   838   0000BE                     _flagCont:
   839                           	callstack 0
   840   0000BE                     	ds	2
   841   0000C0                     _flagFin:
   842                           	callstack 0
   843   0000C0                     	ds	2
   844   0000C2                     _flagInicio:
   845                           	callstack 0
   846   0000C2                     	ds	2
   847                           
   848                           	psect	cstackBANK0
   849   000060                     __pcstackBANK0:
   850                           	callstack 0
   851   000060                     ___ftmul@exp:
   852                           	callstack 0
   853                           
   854                           ; 1 bytes @ 0x0
   855   000060                     	ds	1
   856   000061                     ___ftmul@f3_as_product:
   857                           	callstack 0
   858                           
   859                           ; 3 bytes @ 0x1
   860   000061                     	ds	3
   861   000064                     ___ftmul@cntr:
   862                           	callstack 0
   863                           
   864                           ; 1 bytes @ 0x4
   865   000064                     	ds	1
   866   000065                     ___ftmul@sign:
   867                           	callstack 0
   868                           
   869                           ; 1 bytes @ 0x5
   870   000065                     	ds	1
   871   000066                     ?_fround:
   872                           	callstack 0
   873   000066                     ?_scale:
   874                           	callstack 0
   875                           
   876                           ; 3 bytes @ 0x6
   877   000066                     	ds	3
   878   000069                     _fround$1092:
   879                           	callstack 0
   880   000069                     _scale$1093:
   881                           	callstack 0
   882                           
   883                           ; 3 bytes @ 0x9
   884   000069                     	ds	3
   885   00006C                     scale@scl:
   886                           	callstack 0
   887   00006C                     _fround$1091:
   888                           	callstack 0
   889                           
   890                           ; 3 bytes @ 0xC
   891   00006C                     	ds	1
   892   00006D                     ?___fttol:
   893                           	callstack 0
   894   00006D                     ___fttol@f1:
   895                           	callstack 0
   896                           
   897                           ; 3 bytes @ 0xD
   898   00006D                     	ds	2
   899   00006F                     fround@prec:
   900                           	callstack 0
   901                           
   902                           ; 1 bytes @ 0xF
   903   00006F                     	ds	1
   904   000070                     ?___ftadd:
   905                           	callstack 0
   906   000070                     ___ftadd@f1:
   907                           	callstack 0
   908                           
   909                           ; 3 bytes @ 0x10
   910   000070                     	ds	1
   911   000071                     ??___fttol:
   912                           
   913                           ; 1 bytes @ 0x11
   914   000071                     	ds	2
   915   000073                     ___ftadd@f2:
   916                           	callstack 0
   917                           
   918                           ; 3 bytes @ 0x13
   919   000073                     	ds	3
   920   000076                     ___fttol@sign1:
   921                           	callstack 0
   922   000076                     ??___ftadd:
   923                           
   924                           ; 1 bytes @ 0x16
   925   000076                     	ds	1
   926   000077                     ___fttol@lval:
   927                           	callstack 0
   928                           
   929                           ; 4 bytes @ 0x17
   930   000077                     	ds	2
   931   000079                     ___ftadd@sign:
   932                           	callstack 0
   933                           
   934                           ; 1 bytes @ 0x19
   935   000079                     	ds	1
   936   00007A                     ___ftadd@exp2:
   937                           	callstack 0
   938                           
   939                           ; 1 bytes @ 0x1A
   940   00007A                     	ds	1
   941   00007B                     ___ftadd@exp1:
   942                           	callstack 0
   943   00007B                     ___fttol@exp1:
   944                           	callstack 0
   945                           
   946                           ; 1 bytes @ 0x1B
   947   00007B                     	ds	1
   948   00007C                     ?___ftsub:
   949                           	callstack 0
   950   00007C                     ___ftsub@f1:
   951                           	callstack 0
   952                           
   953                           ; 3 bytes @ 0x1C
   954   00007C                     	ds	3
   955   00007F                     ___ftsub@f2:
   956                           	callstack 0
   957                           
   958                           ; 3 bytes @ 0x1F
   959   00007F                     	ds	3
   960   000082                     ?_printf:
   961                           	callstack 0
   962   000082                     printf@f:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x22
   966   000082                     	ds	5
   967   000087                     ??_printf:
   968                           
   969                           ; 1 bytes @ 0x27
   970   000087                     	ds	6
   971   00008D                     _printf$1094:
   972                           	callstack 0
   973                           
   974                           ; 3 bytes @ 0x2D
   975   00008D                     	ds	3
   976   000090                     printf@cp:
   977                           	callstack 0
   978                           
   979                           ; 1 bytes @ 0x30
   980   000090                     	ds	1
   981   000091                     printf@len:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x31
   985   000091                     	ds	2
   986   000093                     printf@ap:
   987                           	callstack 0
   988                           
   989                           ; 1 bytes @ 0x33
   990   000093                     	ds	1
   991   000094                     printf@flag:
   992                           	callstack 0
   993                           
   994                           ; 2 bytes @ 0x34
   995   000094                     	ds	2
   996   000096                     printf@eexp:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x36
  1000   000096                     	ds	2
  1001   000098                     printf@tmpval:
  1002                           	callstack 0
  1003                           
  1004                           ; 4 bytes @ 0x38
  1005   000098                     	ds	4
  1006   00009C                     printf@val:
  1007                           	callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x3C
  1010   00009C                     	ds	4
  1011   0000A0                     printf@fval:
  1012                           	callstack 0
  1013                           
  1014                           ; 3 bytes @ 0x40
  1015   0000A0                     	ds	3
  1016   0000A3                     printf@prec:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x43
  1020   0000A3                     	ds	2
  1021   0000A5                     printf@c:
  1022                           	callstack 0
  1023                           
  1024                           ; 1 bytes @ 0x45
  1025   0000A5                     	ds	1
  1026   0000A6                     Transmitir@pwm:
  1027                           	callstack 0
  1028                           
  1029                           ; 3 bytes @ 0x46
  1030   0000A6                     	ds	3
  1031   0000A9                     ??_ADC:
  1032                           
  1033                           ; 1 bytes @ 0x49
  1034   0000A9                     	ds	2
  1035   0000AB                     _ADC$1090:
  1036                           	callstack 0
  1037                           
  1038                           ; 3 bytes @ 0x4B
  1039   0000AB                     	ds	3
  1040   0000AE                     ??_main:
  1041                           
  1042                           ; 1 bytes @ 0x4E
  1043   0000AE                     	ds	2
  1044                           
  1045                           	psect	cstackCOMRAM
  1046   000001                     __pcstackCOMRAM:
  1047                           	callstack 0
  1048   000001                     ?i2___wmul:
  1049                           	callstack 0
  1050   000001                     ?i2___awdiv:
  1051                           	callstack 0
  1052   000001                     ?i2___awmod:
  1053                           	callstack 0
  1054   000001                     ?i2___lwdiv:
  1055                           	callstack 0
  1056   000001                     i2___lbmod@divisor:
  1057                           	callstack 0
  1058   000001                     i2___wmul@multiplier:
  1059                           	callstack 0
  1060   000001                     i2___awdiv@dividend:
  1061                           	callstack 0
  1062   000001                     i2___awmod@dividend:
  1063                           	callstack 0
  1064   000001                     i2___lwdiv@dividend:
  1065                           	callstack 0
  1066   000001                     ??i2_RetardoLCD:
  1067   000001                     
  1068                           ; 1 bytes @ 0x0
  1069   000001                     	ds	1
  1070   000002                     i2RetardoLCD@a:
  1071                           	callstack 0
  1072   000002                     i2___lbmod@dividend:
  1073                           	callstack 0
  1074   000002                     
  1075                           ; 1 bytes @ 0x1
  1076   000002                     	ds	1
  1077   000003                     i2___lbmod@counter:
  1078                           	callstack 0
  1079   000003                     i2___wmul@multiplicand:
  1080                           	callstack 0
  1081   000003                     i2___awdiv@divisor:
  1082                           	callstack 0
  1083   000003                     i2___awmod@divisor:
  1084                           	callstack 0
  1085   000003                     i2___lwdiv@divisor:
  1086                           	callstack 0
  1087   000003                     ??i2_EnviaDato:
  1088                           
  1089                           ; 1 bytes @ 0x2
  1090   000003                     	ds	1
  1091   000004                     i2EnviaDato@a:
  1092                           	callstack 0
  1093   000004                     i2___lbmod@rem:
  1094                           	callstack 0
  1095                           
  1096                           ; 1 bytes @ 0x3
  1097   000004                     	ds	1
  1098   000005                     i2EscribeLCD_c@a:
  1099                           	callstack 0
  1100   000005                     i2DireccionaLCD@a:
  1101                           	callstack 0
  1102   000005                     i2___awdiv@counter:
  1103                           	callstack 0
  1104   000005                     i2___awmod@counter:
  1105                           	callstack 0
  1106   000005                     i2___lbdiv@divisor:
  1107                           	callstack 0
  1108   000005                     i2___wmul@product:
  1109                           	callstack 0
  1110   000005                     i2___lwdiv@quotient:
  1111                           	callstack 0
  1112   000005                     
  1113                           ; 1 bytes @ 0x4
  1114   000005                     	ds	1
  1115   000006                     escribirDig@lectura:
  1116                           	callstack 0
  1117   000006                     i2___awdiv@sign:
  1118                           	callstack 0
  1119   000006                     i2___awmod@sign:
  1120                           	callstack 0
  1121   000006                     i2___lbdiv@dividend:
  1122                           	callstack 0
  1123   000006                     i2MensajeLCD_Var@a:
  1124                           	callstack 0
  1125   000006                     
  1126                           ; 1 bytes @ 0x5
  1127   000006                     	ds	1
  1128   000007                     i2___lbdiv@counter:
  1129                           	callstack 0
  1130   000007                     i2___lwdiv@counter:
  1131                           	callstack 0
  1132   000007                     i2___awdiv@quotient:
  1133                           	callstack 0
  1134   000007                     
  1135                           ; 1 bytes @ 0x6
  1136   000007                     	ds	1
  1137   000008                     i2___lbdiv@quotient:
  1138                           	callstack 0
  1139   000008                     ??i2_MedirDistancia:
  1140                           
  1141                           ; 1 bytes @ 0x7
  1142   000008                     	ds	1
  1143   000009                     i2EscribeLCD_n8@b:
  1144                           	callstack 0
  1145   000009                     ??i2_fin:
  1146                           
  1147                           ; 1 bytes @ 0x8
  1148   000009                     	ds	1
  1149   00000A                     i2EscribeLCD_n8@centena:
  1150                           	callstack 0
  1151   00000A                     i2MedirDistancia@aux:
  1152                           	callstack 0
  1153   00000A                     
  1154                           ; 1 bytes @ 0x9
  1155   00000A                     	ds	1
  1156   00000B                     i2EscribeLCD_n8@decena:
  1157                           	callstack 0
  1158                           
  1159                           ; 1 bytes @ 0xA
  1160   00000B                     	ds	1
  1161   00000C                     i2EscribeLCD_n8@unidad:
  1162                           	callstack 0
  1163                           
  1164                           ; 1 bytes @ 0xB
  1165   00000C                     	ds	1
  1166   00000D                     i2EscribeLCD_n8@a:
  1167                           	callstack 0
  1168                           
  1169                           ; 1 bytes @ 0xC
  1170   00000D                     	ds	1
  1171   00000E                     i2contador@dis:
  1172                           	callstack 0
  1173   00000E                     
  1174                           ; 1 bytes @ 0xD
  1175   00000E                     	ds	1
  1176   00000F                     ??_ok:
  1177                           
  1178                           ; 1 bytes @ 0xE
  1179   00000F                     	ds	2
  1180   000011                     ??_ISR:
  1181                           
  1182                           ; 1 bytes @ 0x10
  1183   000011                     	ds	7
  1184   000018                     ?___wmul:
  1185                           	callstack 0
  1186   000018                     ?___awmod:
  1187                           	callstack 0
  1188   000018                     ?___lwdiv:
  1189                           	callstack 0
  1190   000018                     ?___ftpack:
  1191                           	callstack 0
  1192   000018                     ?___ftneg:
  1193                           	callstack 0
  1194   000018                     ?__tdiv_to_l_:
  1195                           	callstack 0
  1196   000018                     ?__div_to_l_:
  1197                           	callstack 0
  1198   000018                     ?___lldiv:
  1199                           	callstack 0
  1200   000018                     ConfiguraLCD@a:
  1201                           	callstack 0
  1202   000018                     putch@data:
  1203                           	callstack 0
  1204   000018                     ___lbmod@divisor:
  1205                           	callstack 0
  1206   000018                     ___wmul@multiplier:
  1207                           	callstack 0
  1208   000018                     ___awmod@dividend:
  1209                           	callstack 0
  1210   000018                     ___lwdiv@dividend:
  1211                           	callstack 0
  1212   000018                     __div_to_l_@f1:
  1213                           	callstack 0
  1214   000018                     ___ftpack@arg:
  1215                           	callstack 0
  1216   000018                     __tdiv_to_l_@f1:
  1217                           	callstack 0
  1218   000018                     ___ftge@ff1:
  1219                           	callstack 0
  1220   000018                     ___ftneg@f1:
  1221                           	callstack 0
  1222   000018                     ___lldiv@dividend:
  1223                           	callstack 0
  1224   000018                     ??_RetardoLCD:
  1225   000018                     ??_isdigit:
  1226   000018                     
  1227                           ; 1 bytes @ 0x17
  1228   000018                     	ds	1
  1229   000019                     RetardoLCD@a:
  1230                           	callstack 0
  1231   000019                     ___lbmod@dividend:
  1232                           	callstack 0
  1233   000019                     _isdigit$854:
  1234                           	callstack 0
  1235   000019                     
  1236                           ; 1 bytes @ 0x18
  1237   000019                     	ds	1
  1238   00001A                     ___lbmod@counter:
  1239                           	callstack 0
  1240   00001A                     isdigit@c:
  1241                           	callstack 0
  1242   00001A                     ___wmul@multiplicand:
  1243                           	callstack 0
  1244   00001A                     ___awmod@divisor:
  1245                           	callstack 0
  1246   00001A                     ___lwdiv@divisor:
  1247                           	callstack 0
  1248   00001A                     ??_EnviaDato:
  1249                           
  1250                           ; 1 bytes @ 0x19
  1251   00001A                     	ds	1
  1252   00001B                     EnviaDato@a:
  1253                           	callstack 0
  1254   00001B                     ___ftpack@exp:
  1255                           	callstack 0
  1256   00001B                     ___lbmod@rem:
  1257                           	callstack 0
  1258   00001B                     __div_to_l_@f2:
  1259                           	callstack 0
  1260   00001B                     __tdiv_to_l_@f2:
  1261                           	callstack 0
  1262   00001B                     ___ftge@ff2:
  1263                           	callstack 0
  1264   00001B                     
  1265                           ; 1 bytes @ 0x1A
  1266   00001B                     	ds	1
  1267   00001C                     ComandoLCD@a:
  1268                           	callstack 0
  1269   00001C                     EscribeLCD_c@a:
  1270                           	callstack 0
  1271   00001C                     DireccionaLCD@a:
  1272                           	callstack 0
  1273   00001C                     ___awmod@counter:
  1274                           	callstack 0
  1275   00001C                     ___ftpack@sign:
  1276                           	callstack 0
  1277   00001C                     ___lbdiv@divisor:
  1278                           	callstack 0
  1279   00001C                     ___wmul@product:
  1280                           	callstack 0
  1281   00001C                     ___lwdiv@quotient:
  1282                           	callstack 0
  1283   00001C                     ___lldiv@divisor:
  1284                           	callstack 0
  1285   00001C                     
  1286                           ; 1 bytes @ 0x1B
  1287   00001C                     	ds	1
  1288   00001D                     ___awmod@sign:
  1289                           	callstack 0
  1290   00001D                     ___lbdiv@dividend:
  1291                           	callstack 0
  1292   00001D                     MensajeLCD_Var@a:
  1293                           	callstack 0
  1294   00001D                     ??___ftpack:
  1295   00001D                     
  1296                           ; 1 bytes @ 0x1C
  1297   00001D                     	ds	1
  1298   00001E                     ?___awdiv:
  1299                           	callstack 0
  1300   00001E                     ___lbdiv@counter:
  1301                           	callstack 0
  1302   00001E                     ___lwdiv@counter:
  1303                           	callstack 0
  1304   00001E                     ___awdiv@dividend:
  1305                           	callstack 0
  1306   00001E                     __div_to_l_@quot:
  1307                           	callstack 0
  1308   00001E                     ??__tdiv_to_l_:
  1309   00001E                     ??___ftge:
  1310                           
  1311                           ; 1 bytes @ 0x1D
  1312   00001E                     	ds	1
  1313   00001F                     ___lbdiv@quotient:
  1314                           	callstack 0
  1315   00001F                     ??_MedirDistancia:
  1316   00001F                     
  1317                           ; 1 bytes @ 0x1E
  1318   00001F                     	ds	1
  1319   000020                     ?___ftdiv:
  1320                           	callstack 0
  1321   000020                     ?___awtoft:
  1322                           	callstack 0
  1323   000020                     ?___lltoft:
  1324                           	callstack 0
  1325   000020                     EscribeLCD_n8@b:
  1326                           	callstack 0
  1327   000020                     ___awdiv@divisor:
  1328                           	callstack 0
  1329   000020                     ___awtoft@c:
  1330                           	callstack 0
  1331   000020                     ___ftdiv@f1:
  1332                           	callstack 0
  1333   000020                     ___lldiv@quotient:
  1334                           	callstack 0
  1335   000020                     ___lltoft@c:
  1336                           	callstack 0
  1337   000020                     
  1338                           ; 1 bytes @ 0x1F
  1339   000020                     	ds	1
  1340   000021                     EscribeLCD_n8@centena:
  1341                           	callstack 0
  1342   000021                     MedirDistancia@aux:
  1343                           	callstack 0
  1344   000021                     __tdiv_to_l_@quot:
  1345                           	callstack 0
  1346   000021                     
  1347                           ; 1 bytes @ 0x20
  1348   000021                     	ds	1
  1349   000022                     EscribeLCD_n8@decena:
  1350                           	callstack 0
  1351   000022                     ___awdiv@counter:
  1352                           	callstack 0
  1353   000022                     __div_to_l_@cntr:
  1354                           	callstack 0
  1355   000022                     
  1356                           ; 1 bytes @ 0x21
  1357   000022                     	ds	1
  1358   000023                     EscribeLCD_n8@unidad:
  1359                           	callstack 0
  1360   000023                     ___awdiv@sign:
  1361                           	callstack 0
  1362   000023                     ___awtoft@sign:
  1363                           	callstack 0
  1364   000023                     __div_to_l_@exp1:
  1365                           	callstack 0
  1366   000023                     ___ftdiv@f2:
  1367                           	callstack 0
  1368   000023                     
  1369                           ; 1 bytes @ 0x22
  1370   000023                     	ds	1
  1371   000024                     EscribeLCD_n8@a:
  1372                           	callstack 0
  1373   000024                     ___lldiv@counter:
  1374                           	callstack 0
  1375   000024                     ___awdiv@quotient:
  1376                           	callstack 0
  1377   000024                     ??___lltoft:
  1378                           
  1379                           ; 1 bytes @ 0x23
  1380   000024                     	ds	1
  1381   000025                     ?___llmod:
  1382                           	callstack 0
  1383   000025                     RecibirComando@comando:
  1384                           	callstack 0
  1385   000025                     __tdiv_to_l_@cntr:
  1386                           	callstack 0
  1387   000025                     ___llmod@dividend:
  1388                           	callstack 0
  1389   000025                     
  1390                           ; 1 bytes @ 0x24
  1391   000025                     	ds	1
  1392   000026                     ?___ftmul:
  1393                           	callstack 0
  1394   000026                     __tdiv_to_l_@exp1:
  1395                           	callstack 0
  1396   000026                     ___ftmul@f1:
  1397                           	callstack 0
  1398   000026                     ??___ftdiv:
  1399   000026                     ??_fin:
  1400                           
  1401                           ; 1 bytes @ 0x25
  1402   000026                     	ds	2
  1403   000028                     contador@dis:
  1404                           	callstack 0
  1405   000028                     ___lltoft@exp:
  1406                           	callstack 0
  1407   000028                     
  1408                           ; 1 bytes @ 0x27
  1409   000028                     	ds	1
  1410   000029                     ___ftdiv@cntr:
  1411                           	callstack 0
  1412   000029                     ___ftmul@f2:
  1413                           	callstack 0
  1414   000029                     ___llmod@divisor:
  1415                           	callstack 0
  1416                           
  1417                           ; 4 bytes @ 0x28
  1418   000029                     	ds	1
  1419   00002A                     ___ftdiv@f3:
  1420                           	callstack 0
  1421                           
  1422                           ; 3 bytes @ 0x29
  1423   00002A                     	ds	2
  1424   00002C                     ??___ftmul:
  1425                           
  1426                           ; 1 bytes @ 0x2B
  1427   00002C                     	ds	1
  1428   00002D                     ___ftdiv@exp:
  1429                           	callstack 0
  1430   00002D                     ___llmod@counter:
  1431                           	callstack 0
  1432   00002D                     
  1433                           ; 1 bytes @ 0x2C
  1434   00002D                     	ds	1
  1435   00002E                     ___ftdiv@sign:
  1436                           	callstack 0
  1437                           
  1438                           ; 1 bytes @ 0x2D
  1439   00002E                     	ds	1
  1440   00002F                     ??_fround:
  1441   00002F                     
  1442                           ; 1 bytes @ 0x2E
  1443   00002F                     	ds	2
  1444   000031                     
  1445                           ; 1 bytes @ 0x30
  1446 ;;
  1447 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1448 ;;
  1449 ;; *************** function _main *****************
  1450 ;; Defined at:
  1451 ;;		line 63 in file "Lab6.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;		None
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;		None
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  1    wreg      void 
  1458 ;; Registers used:
  1459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1465 ;;      Params:         0       0       0       0       0       0       0       0       0
  1466 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1467 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1468 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1469 ;;Total ram usage:        2 bytes
  1470 ;; Hardware stack levels required when called: 14
  1471 ;; This function calls:
  1472 ;;		_ADC
  1473 ;;		_BorraLCD
  1474 ;;		_CaracterCara
  1475 ;;		_CaracterQbert
  1476 ;;		_ConfiguraLCD
  1477 ;;		_DireccionaLCD
  1478 ;;		_EscribeLCD_c
  1479 ;;		_InicializaLCD
  1480 ;;		_MedirDistancia
  1481 ;;		_MensajeLCD_Var
  1482 ;;		_RecibirComando
  1483 ;;		_contador
  1484 ;; This function is called by:
  1485 ;;		Startup code after reset
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text0
  1490   000F06                     __ptext0:
  1491                           	callstack 0
  1492   000F06                     _main:
  1493                           	callstack 17
  1494                           
  1495                           ;Lab6.c: 65: OSCCON=0b01000000;
  1496                           
  1497                           ;incstack = 0
  1498   000F06  0E40               	movlw	64
  1499   000F08  6ED3               	movwf	211,c	;volatile
  1500                           
  1501                           ;Lab6.c: 66: _delay((unsigned long)((1)*(1000000/4000.0)));
  1502   000F0A  0E53               	movlw	83
  1503   000F0C                     u6617:
  1504   000F0C  2EE8               	decfsz	wreg,f,c
  1505   000F0E  D7FE               	bra	u6617
  1506   000F10  0000               	nop	
  1507                           
  1508                           ;Lab6.c: 68: TRISD=0;
  1509   000F12  6A95               	clrf	149,c	;volatile
  1510                           
  1511                           ;Lab6.c: 69: TRISA=0;
  1512   000F14  6A92               	clrf	146,c	;volatile
  1513                           
  1514                           ;Lab6.c: 72: TRISE0 = 0;
  1515   000F16  9096               	bcf	3990,0,c	;volatile
  1516                           
  1517                           ;Lab6.c: 73: TRISE1 = 0;
  1518   000F18  9296               	bcf	3990,1,c	;volatile
  1519                           
  1520                           ;Lab6.c: 74: TRISE2 = 0;
  1521   000F1A  9496               	bcf	3990,2,c	;volatile
  1522                           
  1523                           ;Lab6.c: 76: LATE0 = 0;
  1524   000F1C  908D               	bcf	3981,0,c	;volatile
  1525                           
  1526                           ;Lab6.c: 77: LATE1 = 0;
  1527   000F1E  928D               	bcf	3981,1,c	;volatile
  1528                           
  1529                           ;Lab6.c: 78: LATE2 = 0;
  1530   000F20  948D               	bcf	3981,2,c	;volatile
  1531                           
  1532                           ;Lab6.c: 80: LATD=0;
  1533   000F22  6A8C               	clrf	140,c	;volatile
  1534                           
  1535                           ;Lab6.c: 82: TRISA0=1;
  1536   000F24  8092               	bsf	3986,0,c	;volatile
  1537                           
  1538                           ;Lab6.c: 85: TRISC2=0;
  1539   000F26  9494               	bcf	3988,2,c	;volatile
  1540                           
  1541                           ;Lab6.c: 86: PR2=249;
  1542   000F28  0EF9               	movlw	249
  1543   000F2A  6ECB               	movwf	203,c	;volatile
  1544                           
  1545                           ;Lab6.c: 87: T2CON=0b00000000;
  1546   000F2C  6ACA               	clrf	202,c	;volatile
  1547                           
  1548                           ;Lab6.c: 88: CCP1CON=0b00001100;
  1549   000F2E  0E0C               	movlw	12
  1550   000F30  6EBD               	movwf	189,c	;volatile
  1551                           
  1552                           ;Lab6.c: 89: TMR2=0;
  1553   000F32  6ACC               	clrf	204,c	;volatile
  1554                           
  1555                           ;Lab6.c: 90: TMR2ON=1;
  1556   000F34  84CA               	bsf	4042,2,c	;volatile
  1557                           
  1558                           ;Lab6.c: 93: ADCON1 = 0x0E;
  1559   000F36  0E0E               	movlw	14
  1560   000F38  6EC1               	movwf	193,c	;volatile
  1561                           
  1562                           ;Lab6.c: 94: ADCON2 = 0xA9;
  1563   000F3A  0EA9               	movlw	169
  1564   000F3C  6EC0               	movwf	192,c	;volatile
  1565                           
  1566                           ;Lab6.c: 95: ADCON0 = 0x01;
  1567   000F3E  0E01               	movlw	1
  1568   000F40  6EC2               	movwf	194,c	;volatile
  1569                           
  1570                           ;Lab6.c: 98: TRISC0=0;
  1571   000F42  9094               	bcf	3988,0,c	;volatile
  1572                           
  1573                           ;Lab6.c: 99: TRISD0=0;
  1574   000F44  9095               	bcf	3989,0,c	;volatile
  1575                           
  1576                           ;Lab6.c: 100: LATC0=0;
  1577   000F46  908B               	bcf	3979,0,c	;volatile
  1578                           
  1579                           ;Lab6.c: 103: TXSTA=0b00100100;
  1580   000F48  0E24               	movlw	36
  1581   000F4A  6EAC               	movwf	172,c	;volatile
  1582                           
  1583                           ;Lab6.c: 104: RCSTA=0b10010000;
  1584   000F4C  0E90               	movlw	144
  1585   000F4E  6EAB               	movwf	171,c	;volatile
  1586                           
  1587                           ;Lab6.c: 105: BAUDCON=0b00001000;
  1588   000F50  0E08               	movlw	8
  1589   000F52  6EB8               	movwf	184,c	;volatile
  1590                           
  1591                           ;Lab6.c: 106: SPBRG=25;
  1592   000F54  0E19               	movlw	25
  1593   000F56  6EAF               	movwf	175,c	;volatile
  1594                           
  1595                           ;Lab6.c: 108: T1CON=0b10010000;
  1596   000F58  0E90               	movlw	144
  1597   000F5A  6ECD               	movwf	205,c	;volatile
  1598                           
  1599                           ;Lab6.c: 111: TRISB=0b11110000;
  1600   000F5C  0EF0               	movlw	240
  1601   000F5E  6E93               	movwf	147,c	;volatile
  1602                           
  1603                           ;Lab6.c: 112: RBPU=0;
  1604   000F60  9EF1               	bcf	4081,7,c	;volatile
  1605                           
  1606                           ;Lab6.c: 113: _delay((unsigned long)((100)*(1000000/4000.0)));
  1607   000F62  0E21               	movlw	33
  1608   000F64  0100               	movlb	0	; () banked
  1609   000F66  6FAE               	movwf	??_main& (0+255),b
  1610   000F68  0E76               	movlw	118
  1611   000F6A                     u6627:
  1612   000F6A  2EE8               	decfsz	wreg,f,c
  1613   000F6C  D7FE               	bra	u6627
  1614   000F6E  2FAE               	decfsz	??_main& (0+255),f,b
  1615   000F70  D7FC               	bra	u6627
  1616   000F72  0000               	nop	
  1617                           
  1618                           ;Lab6.c: 116: RBIF=0;
  1619   000F74  90F2               	bcf	4082,0,c	;volatile
  1620                           
  1621                           ;Lab6.c: 117: RBIE=1;
  1622   000F76  86F2               	bsf	4082,3,c	;volatile
  1623                           
  1624                           ;Lab6.c: 118: GIE=1;
  1625   000F78  8EF2               	bsf	4082,7,c	;volatile
  1626                           
  1627                           ;Lab6.c: 121: _delay((unsigned long)((1000)*(1000000/4000.0)));
  1628   000F7A  0E02               	movlw	2
  1629   000F7C  0100               	movlb	0	; () banked
  1630   000F7E  6FAF               	movwf	(??_main+1)& (0+255),b
  1631   000F80  0E45               	movlw	69
  1632   000F82  6FAE               	movwf	??_main& (0+255),b
  1633   000F84  0EA9               	movlw	169
  1634   000F86                     u6637:
  1635   000F86  2EE8               	decfsz	wreg,f,c
  1636   000F88  D7FE               	bra	u6637
  1637   000F8A  2FAE               	decfsz	??_main& (0+255),f,b
  1638   000F8C  D7FC               	bra	u6637
  1639   000F8E  2FAF               	decfsz	(??_main+1)& (0+255),f,b
  1640   000F90  D7FA               	bra	u6637
  1641   000F92  D000               	nop2	
  1642                           
  1643                           ;Lab6.c: 122: ConfiguraLCD(4);
  1644   000F94  0E04               	movlw	4
  1645   000F96  ECA9  F016         	call	_ConfiguraLCD
  1646                           
  1647                           ;Lab6.c: 123: InicializaLCD();
  1648   000F9A  EC58  F010         	call	_InicializaLCD	;wreg free
  1649                           
  1650                           ;Lab6.c: 125: if(flagEmergencia == 0){
  1651   000F9E  503B               	movf	_flagEmergencia^0,w,c
  1652   000FA0  103C               	iorwf	(_flagEmergencia+1)^0,w,c
  1653   000FA2  A4D8               	btfss	status,2,c
  1654   000FA4  EF07  F000         	goto	start
  1655                           
  1656                           ;Lab6.c: 127: MensajeLCD_Var("Bienvenidos");
  1657   000FA8  0ED4               	movlw	low STR_1
  1658   000FAA  6E1D               	movwf	MensajeLCD_Var@a^0,c
  1659   000FAC  0E7F               	movlw	high STR_1
  1660   000FAE  6E1E               	movwf	(MensajeLCD_Var@a+1)^0,c
  1661   000FB0  EC11  F016         	call	_MensajeLCD_Var	;wreg free
  1662                           
  1663                           ;Lab6.c: 128: CaracterCara();
  1664   000FB4  EC56  F012         	call	_CaracterCara	;wreg free
  1665                           
  1666                           ;Lab6.c: 129: EscribeLCD_c(1);
  1667   000FB8  0E01               	movlw	1
  1668   000FBA  ECC0  F016         	call	_EscribeLCD_c
  1669                           
  1670                           ;Lab6.c: 130: CaracterQbert();
  1671   000FBE  EC1D  F012         	call	_CaracterQbert	;wreg free
  1672                           
  1673                           ;Lab6.c: 131: EscribeLCD_c(2);
  1674   000FC2  0E02               	movlw	2
  1675   000FC4  ECC0  F016         	call	_EscribeLCD_c
  1676                           
  1677                           ;Lab6.c: 132: _delay((unsigned long)((5000)*(1000000/4000.0)));
  1678   000FC8  0E07               	movlw	7
  1679   000FCA  0100               	movlb	0	; () banked
  1680   000FCC  6FAF               	movwf	(??_main+1)& (0+255),b
  1681   000FCE  0E58               	movlw	88
  1682   000FD0  6FAE               	movwf	??_main& (0+255),b
  1683   000FD2  0E59               	movlw	89
  1684   000FD4                     u6647:
  1685   000FD4  2EE8               	decfsz	wreg,f,c
  1686   000FD6  D7FE               	bra	u6647
  1687   000FD8  2FAE               	decfsz	??_main& (0+255),f,b
  1688   000FDA  D7FC               	bra	u6647
  1689   000FDC  2FAF               	decfsz	(??_main+1)& (0+255),f,b
  1690   000FDE  D7FA               	bra	u6647
  1691   000FE0  D000               	nop2	
  1692                           
  1693                           ;Lab6.c: 133: BorraLCD();
  1694   000FE2  ECE1  F016         	call	_BorraLCD	;wreg free
  1695                           
  1696                           ;Lab6.c: 136: MensajeLCD_Var("Piezas a Contar: ");
  1697   000FE6  0E99               	movlw	low STR_2
  1698   000FE8  6E1D               	movwf	MensajeLCD_Var@a^0,c
  1699   000FEA  0E7F               	movlw	high STR_2
  1700   000FEC  6E1E               	movwf	(MensajeLCD_Var@a+1)^0,c
  1701   000FEE  EC11  F016         	call	_MensajeLCD_Var	;wreg free
  1702                           
  1703                           ;Lab6.c: 137: DireccionaLCD(0xC0);
  1704   000FF2  0EC0               	movlw	192
  1705   000FF4  ECB5  F016         	call	_DireccionaLCD
  1706                           
  1707                           ;Lab6.c: 138: flagEscribir=1;
  1708   000FF8  0E00               	movlw	0
  1709   000FFA  6E40               	movwf	(_flagEscribir+1)^0,c
  1710   000FFC  0E01               	movlw	1
  1711   000FFE  6E3F               	movwf	_flagEscribir^0,c
  1712   001000                     l6554:
  1713                           
  1714                           ;Lab6.c: 141: LATA1=1;
  1715   001000  8289               	bsf	3977,1,c	;volatile
  1716                           
  1717                           ;Lab6.c: 142: ADC();
  1718   001002  ECF9  F00C         	call	_ADC	;wreg free
  1719                           
  1720                           ;Lab6.c: 143: RecibirComando();
  1721   001006  ECF7  F008         	call	_RecibirComando	;wreg free
  1722                           
  1723                           ;Lab6.c: 144: dis=MedirDistancia();
  1724   00100A  ECB4  F00F         	call	_MedirDistancia	;wreg free
  1725   00100E  6E42               	movwf	_dis^0,c
  1726                           
  1727                           ;Lab6.c: 145: if(dis>8 || dis < 5){flagObjeto = 0;}
  1728   001010  0E09               	movlw	9
  1729   001012  6042               	cpfslt	_dis^0,c
  1730   001014  D003               	goto	u6600
  1731   001016  0E05               	movlw	5
  1732   001018  6042               	cpfslt	_dis^0,c
  1733   00101A  D005               	goto	l6568
  1734   00101C                     u6600:
  1735   00101C  0E00               	movlw	0
  1736   00101E  0100               	movlb	0	; () banked
  1737   001020  6FBB               	movwf	(_flagObjeto+1)& (0+255),b
  1738   001022  0E00               	movlw	0
  1739   001024  6FBA               	movwf	_flagObjeto& (0+255),b
  1740   001026                     l6568:
  1741                           
  1742                           ;Lab6.c: 146: contador(dis);
  1743   001026  5042               	movf	_dis^0,w,c
  1744   001028  EC69  F00D         	call	_contador
  1745                           
  1746                           ;Lab6.c: 147: _delay((unsigned long)((250)*(1000000/4000.0)));
  1747   00102C  0E52               	movlw	82
  1748   00102E  0100               	movlb	0	; () banked
  1749   001030  6FAE               	movwf	??_main& (0+255),b
  1750   001032  0E29               	movlw	41
  1751   001034                     u6657:
  1752   001034  2EE8               	decfsz	wreg,f,c
  1753   001036  D7FE               	bra	u6657
  1754   001038  2FAE               	decfsz	??_main& (0+255),f,b
  1755   00103A  D7FC               	bra	u6657
  1756   00103C  D000               	nop2	
  1757                           
  1758                           ;Lab6.c: 148: dis=MedirDistancia();
  1759   00103E  ECB4  F00F         	call	_MedirDistancia	;wreg free
  1760   001042  6E42               	movwf	_dis^0,c
  1761                           
  1762                           ;Lab6.c: 149: contador(dis);
  1763   001044  5042               	movf	_dis^0,w,c
  1764   001046  EC69  F00D         	call	_contador
  1765                           
  1766                           ;Lab6.c: 150: _delay((unsigned long)((250)*(1000000/4000.0)));
  1767   00104A  0E52               	movlw	82
  1768   00104C  0100               	movlb	0	; () banked
  1769   00104E  6FAE               	movwf	??_main& (0+255),b
  1770   001050  0E29               	movlw	41
  1771   001052                     u6667:
  1772   001052  2EE8               	decfsz	wreg,f,c
  1773   001054  D7FE               	bra	u6667
  1774   001056  2FAE               	decfsz	??_main& (0+255),f,b
  1775   001058  D7FC               	bra	u6667
  1776   00105A  D000               	nop2	
  1777                           
  1778                           ;Lab6.c: 151: LATA1=0;
  1779   00105C  9289               	bcf	3977,1,c	;volatile
  1780                           
  1781                           ;Lab6.c: 152: dis=MedirDistancia();
  1782   00105E  ECB4  F00F         	call	_MedirDistancia	;wreg free
  1783   001062  6E42               	movwf	_dis^0,c
  1784                           
  1785                           ;Lab6.c: 153: contador(dis);
  1786   001064  5042               	movf	_dis^0,w,c
  1787   001066  EC69  F00D         	call	_contador
  1788                           
  1789                           ;Lab6.c: 154: _delay((unsigned long)((250)*(1000000/4000.0)));
  1790   00106A  0E52               	movlw	82
  1791   00106C  0100               	movlb	0	; () banked
  1792   00106E  6FAE               	movwf	??_main& (0+255),b
  1793   001070  0E29               	movlw	41
  1794   001072                     u6677:
  1795   001072  2EE8               	decfsz	wreg,f,c
  1796   001074  D7FE               	bra	u6677
  1797   001076  2FAE               	decfsz	??_main& (0+255),f,b
  1798   001078  D7FC               	bra	u6677
  1799   00107A  D000               	nop2	
  1800                           
  1801                           ;Lab6.c: 155: dis=MedirDistancia();
  1802   00107C  ECB4  F00F         	call	_MedirDistancia	;wreg free
  1803   001080  6E42               	movwf	_dis^0,c
  1804                           
  1805                           ;Lab6.c: 156: _delay((unsigned long)((250)*(1000000/4000.0)));
  1806   001082  0E52               	movlw	82
  1807   001084  0100               	movlb	0	; () banked
  1808   001086  6FAE               	movwf	??_main& (0+255),b
  1809   001088  0E29               	movlw	41
  1810   00108A                     u6687:
  1811   00108A  2EE8               	decfsz	wreg,f,c
  1812   00108C  D7FE               	bra	u6687
  1813   00108E  2FAE               	decfsz	??_main& (0+255),f,b
  1814   001090  D7FC               	bra	u6687
  1815   001092  D000               	nop2	
  1816                           
  1817                           ;Lab6.c: 157: contador(dis);
  1818   001094  5042               	movf	_dis^0,w,c
  1819   001096  EC69  F00D         	call	_contador
  1820   00109A  D7B2               	goto	l6554
  1821   00109C                     __end_of_main:
  1822                           	callstack 0
  1823                           
  1824 ;; *************** function _contador *****************
  1825 ;; Defined at:
  1826 ;;		line 292 in file "Lab6.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  dis             1    wreg     unsigned char 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  dis             1   39[COMRAM] unsigned char 
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1840 ;;      Params:         0       0       0       0       0       0       0       0       0
  1841 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1842 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1843 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1844 ;;Total ram usage:        1 bytes
  1845 ;; Hardware stack levels used: 1
  1846 ;; Hardware stack levels required when called: 13
  1847 ;; This function calls:
  1848 ;;		_BorraLCD
  1849 ;;		_DireccionaLCD
  1850 ;;		_EscribeLCD_n8
  1851 ;;		_MensajeLCD_Var
  1852 ;;		_RGB
  1853 ;;		_SEG
  1854 ;;		___awdiv
  1855 ;;		___awmod
  1856 ;;		_fin
  1857 ;; This function is called by:
  1858 ;;		_main
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           	psect	text1
  1863   001AD2                     __ptext1:
  1864                           	callstack 0
  1865   001AD2                     _contador:
  1866                           	callstack 17
  1867                           
  1868                           ;incstack = 0
  1869                           ;contador@dis stored from wreg
  1870   001AD2  6E28               	movwf	contador@dis^0,c
  1871                           
  1872                           ;Lab6.c: 293: if(flagCont==1){
  1873   001AD4  0100               	movlb	0	; () banked
  1874   001AD6  05BE               	decf	_flagCont& (0+255),w,b
  1875   001AD8  11BF               	iorwf	(_flagCont+1)& (0+255),w,b
  1876   001ADA  A4D8               	btfss	status,2,c
  1877   001ADC  0012               	return	
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;Lab6.c: 294: if(dis <= 6 && dis >= 1 && flagObjeto == 0){
  1881   001ADE  0E07               	movlw	7
  1882   001AE0  6028               	cpfslt	contador@dis^0,c
  1883   001AE2  0012               	return	
  1884                           
  1885                           ; BSR set to: 0
  1886   001AE4  5028               	movf	contador@dis^0,w,c
  1887   001AE6  B4D8               	btfsc	status,2,c
  1888   001AE8  0012               	return	
  1889                           
  1890                           ; BSR set to: 0
  1891   001AEA  51BA               	movf	_flagObjeto& (0+255),w,b
  1892   001AEC  11BB               	iorwf	(_flagObjeto+1)& (0+255),w,b
  1893   001AEE  A4D8               	btfss	status,2,c
  1894   001AF0  0012               	return	
  1895                           
  1896                           ; BSR set to: 0
  1897                           ;Lab6.c: 295: flagInicio = 1;
  1898   001AF2  0E00               	movlw	0
  1899   001AF4  6FC3               	movwf	(_flagInicio+1)& (0+255),b
  1900   001AF6  0E01               	movlw	1
  1901   001AF8  6FC2               	movwf	_flagInicio& (0+255),b
  1902                           
  1903                           ;Lab6.c: 296: flagObjeto = 1;
  1904   001AFA  0E00               	movlw	0
  1905   001AFC  6FBB               	movwf	(_flagObjeto+1)& (0+255),b
  1906   001AFE  0E01               	movlw	1
  1907   001B00  6FBA               	movwf	_flagObjeto& (0+255),b
  1908                           
  1909                           ; BSR set to: 0
  1910                           ;Lab6.c: 297: if(flagEmergencia == 0){
  1911   001B02  503B               	movf	_flagEmergencia^0,w,c
  1912   001B04  103C               	iorwf	(_flagEmergencia+1)^0,w,c
  1913   001B06  A4D8               	btfss	status,2,c
  1914   001B08  0012               	return	
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;Lab6.c: 298: cuenta+=1;
  1918   001B0A  4A39               	infsnz	_cuenta^0,f,c
  1919   001B0C  2A3A               	incf	(_cuenta+1)^0,f,c
  1920                           
  1921                           ;Lab6.c: 299: piezFalt-=1;
  1922   001B0E  0631               	decf	_piezFalt^0,f,c
  1923   001B10  A0D8               	btfss	status,0,c
  1924   001B12  0632               	decf	(_piezFalt+1)^0,f,c
  1925                           
  1926                           ; BSR set to: 0
  1927                           ;Lab6.c: 300: a = cuenta % 10;
  1928   001B14  C039  F018         	movff	_cuenta,___awmod@dividend
  1929   001B18  C03A  F019         	movff	_cuenta+1,___awmod@dividend+1
  1930   001B1C  0E00               	movlw	0
  1931   001B1E  6E1B               	movwf	(___awmod@divisor+1)^0,c
  1932   001B20  0E0A               	movlw	10
  1933   001B22  6E1A               	movwf	___awmod@divisor^0,c
  1934   001B24  EC8F  F012         	call	___awmod	;wreg free
  1935   001B28  C018  F037         	movff	?___awmod,_a
  1936   001B2C  C019  F038         	movff	?___awmod+1,_a+1
  1937                           
  1938                           ; BSR set to: 0
  1939                           ;Lab6.c: 301: b = (cuenta - a)/10;
  1940   001B30  5037               	movf	_a^0,w,c
  1941   001B32  5C39               	subwf	_cuenta^0,w,c
  1942   001B34  6E1E               	movwf	___awdiv@dividend^0,c
  1943   001B36  5038               	movf	(_a+1)^0,w,c
  1944   001B38  583A               	subwfb	(_cuenta+1)^0,w,c
  1945   001B3A  6E1F               	movwf	(___awdiv@dividend+1)^0,c
  1946   001B3C  0E00               	movlw	0
  1947   001B3E  6E21               	movwf	(___awdiv@divisor+1)^0,c
  1948   001B40  0E0A               	movlw	10
  1949   001B42  6E20               	movwf	___awdiv@divisor^0,c
  1950   001B44  ECA6  F010         	call	___awdiv	;wreg free
  1951   001B48  C01E  F035         	movff	?___awdiv,_b
  1952   001B4C  C01F  F036         	movff	?___awdiv+1,_b+1
  1953                           
  1954                           ;Lab6.c: 302: RGB();
  1955   001B50  EC69  F011         	call	_RGB	;wreg free
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;Lab6.c: 303: SEG();
  1959   001B54  EC09  F017         	call	_SEG	;wreg free
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;Lab6.c: 305: BorraLCD();
  1963   001B58  ECE1  F016         	call	_BorraLCD	;wreg free
  1964                           
  1965                           ;Lab6.c: 306: MensajeLCD_Var("Faltan: ");
  1966   001B5C  0EF6               	movlw	low STR_3
  1967   001B5E  6E1D               	movwf	MensajeLCD_Var@a^0,c
  1968   001B60  0E7F               	movlw	high STR_3
  1969   001B62  6E1E               	movwf	(MensajeLCD_Var@a+1)^0,c
  1970   001B64  EC11  F016         	call	_MensajeLCD_Var	;wreg free
  1971                           
  1972                           ;Lab6.c: 307: EscribeLCD_n8(piezFalt,2);
  1973   001B68  0E02               	movlw	2
  1974   001B6A  6E20               	movwf	EscribeLCD_n8@b^0,c
  1975   001B6C  5031               	movf	_piezFalt^0,w,c
  1976   001B6E  ECA0  F00B         	call	_EscribeLCD_n8
  1977                           
  1978                           ;Lab6.c: 308: DireccionaLCD(0xC0);
  1979   001B72  0EC0               	movlw	192
  1980   001B74  ECB5  F016         	call	_DireccionaLCD
  1981                           
  1982                           ;Lab6.c: 309: MensajeLCD_Var("Objetivo: ");
  1983   001B78  0EE0               	movlw	low STR_4
  1984   001B7A  6E1D               	movwf	MensajeLCD_Var@a^0,c
  1985   001B7C  0E7F               	movlw	high STR_4
  1986   001B7E  6E1E               	movwf	(MensajeLCD_Var@a+1)^0,c
  1987   001B80  EC11  F016         	call	_MensajeLCD_Var	;wreg free
  1988                           
  1989                           ;Lab6.c: 310: EscribeLCD_n8(cuenObj,2);
  1990   001B84  0E02               	movlw	2
  1991   001B86  6E20               	movwf	EscribeLCD_n8@b^0,c
  1992   001B88  5033               	movf	_cuenObj^0,w,c
  1993   001B8A  ECA0  F00B         	call	_EscribeLCD_n8
  1994                           
  1995                           ;Lab6.c: 311: if (cuenta==cuenObj){
  1996   001B8E  5033               	movf	_cuenObj^0,w,c
  1997   001B90  1839               	xorwf	_cuenta^0,w,c
  1998   001B92  E10C               	bnz	l352
  1999   001B94  5034               	movf	(_cuenObj+1)^0,w,c
  2000   001B96  183A               	xorwf	(_cuenta+1)^0,w,c
  2001   001B98  A4D8               	btfss	status,2,c
  2002   001B9A  0012               	return	
  2003                           
  2004                           ;Lab6.c: 312: flagCont=0;
  2005   001B9C  0E00               	movlw	0
  2006   001B9E  0100               	movlb	0	; () banked
  2007   001BA0  6FBF               	movwf	(_flagCont+1)& (0+255),b
  2008   001BA2  0E00               	movlw	0
  2009   001BA4  6FBE               	movwf	_flagCont& (0+255),b
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;Lab6.c: 313: fin();
  2013   001BA6  ECAF  F00E         	call	_fin	;wreg free
  2014   001BAA  0012               	return	
  2015   001BAC                     l352:
  2016   001BAC  0012               	return		;funcret
  2017   001BAE                     __end_of_contador:
  2018                           	callstack 0
  2019                           
  2020 ;; *************** function _fin *****************
  2021 ;; Defined at:
  2022 ;;		line 273 in file "Lab6.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;		None
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;		None
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  1    wreg      void 
  2029 ;; Registers used:
  2030 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2031 ;; Tracked objects:
  2032 ;;		On entry : 3F/0
  2033 ;;		On exit  : 3F/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2036 ;;      Params:         0       0       0       0       0       0       0       0       0
  2037 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2038 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2039 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2040 ;;Total ram usage:        2 bytes
  2041 ;; Hardware stack levels used: 1
  2042 ;; Hardware stack levels required when called: 12
  2043 ;; This function calls:
  2044 ;;		_BorraLCD
  2045 ;;		_DireccionaLCD
  2046 ;;		_MensajeLCD_Var
  2047 ;;		_RGB
  2048 ;;		_SEG
  2049 ;;		___awdiv
  2050 ;;		___awmod
  2051 ;; This function is called by:
  2052 ;;		_contador
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text2
  2057   001D5E                     __ptext2:
  2058                           	callstack 0
  2059   001D5E                     _fin:
  2060                           	callstack 17
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;Lab6.c: 274: cuenta=cuenObj;
  2064                           
  2065                           ;incstack = 0
  2066   001D5E  C033  F039         	movff	_cuenObj,_cuenta
  2067   001D62  C034  F03A         	movff	_cuenObj+1,_cuenta+1
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;Lab6.c: 275: a = cuenta % 10;
  2071   001D66  C039  F018         	movff	_cuenta,___awmod@dividend
  2072   001D6A  C03A  F019         	movff	_cuenta+1,___awmod@dividend+1
  2073   001D6E  0E00               	movlw	0
  2074   001D70  6E1B               	movwf	(___awmod@divisor+1)^0,c
  2075   001D72  0E0A               	movlw	10
  2076   001D74  6E1A               	movwf	___awmod@divisor^0,c
  2077   001D76  EC8F  F012         	call	___awmod	;wreg free
  2078   001D7A  C018  F037         	movff	?___awmod,_a
  2079   001D7E  C019  F038         	movff	?___awmod+1,_a+1
  2080                           
  2081                           ;Lab6.c: 276: b = (cuenta - a)/10;
  2082   001D82  5037               	movf	_a^0,w,c
  2083   001D84  5C39               	subwf	_cuenta^0,w,c
  2084   001D86  6E1E               	movwf	___awdiv@dividend^0,c
  2085   001D88  5038               	movf	(_a+1)^0,w,c
  2086   001D8A  583A               	subwfb	(_cuenta+1)^0,w,c
  2087   001D8C  6E1F               	movwf	(___awdiv@dividend+1)^0,c
  2088   001D8E  0E00               	movlw	0
  2089   001D90  6E21               	movwf	(___awdiv@divisor+1)^0,c
  2090   001D92  0E0A               	movlw	10
  2091   001D94  6E20               	movwf	___awdiv@divisor^0,c
  2092   001D96  ECA6  F010         	call	___awdiv	;wreg free
  2093   001D9A  C01E  F035         	movff	?___awdiv,_b
  2094   001D9E  C01F  F036         	movff	?___awdiv+1,_b+1
  2095                           
  2096                           ;Lab6.c: 277: RGB();
  2097   001DA2  EC69  F011         	call	_RGB	;wreg free
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;Lab6.c: 278: SEG();
  2101   001DA6  EC09  F017         	call	_SEG	;wreg free
  2102                           
  2103                           ; BSR set to: 0
  2104                           ;Lab6.c: 279: BorraLCD();
  2105   001DAA  ECE1  F016         	call	_BorraLCD	;wreg free
  2106                           
  2107                           ;Lab6.c: 280: MensajeLCD_Var("Fin de Cuenta");
  2108   001DAE  0EBA               	movlw	low STR_11
  2109   001DB0  6E1D               	movwf	MensajeLCD_Var@a^0,c
  2110   001DB2  0E7F               	movlw	high STR_11
  2111   001DB4  6E1E               	movwf	(MensajeLCD_Var@a+1)^0,c
  2112   001DB6  EC11  F016         	call	_MensajeLCD_Var	;wreg free
  2113                           
  2114                           ;Lab6.c: 281: DireccionaLCD(0xC0);
  2115   001DBA  0EC0               	movlw	192
  2116   001DBC  ECB5  F016         	call	_DireccionaLCD
  2117                           
  2118                           ;Lab6.c: 282: MensajeLCD_Var("Presione OK");
  2119   001DC0  0EC8               	movlw	low STR_12
  2120   001DC2  6E1D               	movwf	MensajeLCD_Var@a^0,c
  2121   001DC4  0E7F               	movlw	high STR_12
  2122   001DC6  6E1E               	movwf	(MensajeLCD_Var@a+1)^0,c
  2123   001DC8  EC11  F016         	call	_MensajeLCD_Var	;wreg free
  2124                           
  2125                           ;Lab6.c: 283: _delay((unsigned long)((3000)*(1000000/4000.0)));
  2126   001DCC  0E04               	movlw	4
  2127   001DCE  6E27               	movwf	(??_fin+1)^0,c
  2128   001DD0  0ECF               	movlw	207
  2129   001DD2  6E26               	movwf	??_fin^0,c
  2130   001DD4  0E02               	movlw	2
  2131   001DD6                     u6697:
  2132   001DD6  2EE8               	decfsz	wreg,f,c
  2133   001DD8  D7FE               	bra	u6697
  2134   001DDA  2E26               	decfsz	??_fin^0,f,c
  2135   001DDC  D7FC               	bra	u6697
  2136   001DDE  2E27               	decfsz	(??_fin+1)^0,f,c
  2137   001DE0  D7FA               	bra	u6697
  2138                           
  2139                           ;Lab6.c: 284: CCPR1L=0;
  2140   001DE2  6ABE               	clrf	190,c	;volatile
  2141                           
  2142                           ;Lab6.c: 285: flagADC=1;
  2143   001DE4  0E00               	movlw	0
  2144   001DE6  0100               	movlb	0	; () banked
  2145   001DE8  6FBD               	movwf	(_flagADC+1)& (0+255),b
  2146   001DEA  0E01               	movlw	1
  2147   001DEC  6FBC               	movwf	_flagADC& (0+255),b
  2148                           
  2149                           ; BSR set to: 0
  2150                           ;Lab6.c: 286: pwm=0;
  2151   001DEE  0E00               	movlw	0
  2152   001DF0  6FB0               	movwf	_pwm& (0+255),b
  2153   001DF2  0E00               	movlw	0
  2154   001DF4  6FB1               	movwf	(_pwm+1)& (0+255),b
  2155   001DF6  0E00               	movlw	0
  2156   001DF8  6FB2               	movwf	(_pwm+2)& (0+255),b
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;Lab6.c: 287: flagFin=1;
  2160   001DFA  0E00               	movlw	0
  2161   001DFC  6FC1               	movwf	(_flagFin+1)& (0+255),b
  2162   001DFE  0E01               	movlw	1
  2163   001E00  6FC0               	movwf	_flagFin& (0+255),b
  2164                           
  2165                           ; BSR set to: 0
  2166                           ;Lab6.c: 288: flagDig=0;
  2167   001E02  0E00               	movlw	0
  2168   001E04  6E3E               	movwf	(_flagDig+1)^0,c
  2169   001E06  0E00               	movlw	0
  2170   001E08  6E3D               	movwf	_flagDig^0,c
  2171                           
  2172                           ; BSR set to: 0
  2173   001E0A  0012               	return		;funcret
  2174   001E0C                     __end_of_fin:
  2175                           	callstack 0
  2176                           
  2177 ;; *************** function _RecibirComando *****************
  2178 ;; Defined at:
  2179 ;;		line 393 in file "Lab6.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;		None
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  comando         1   36[COMRAM] unsigned char 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2193 ;;      Params:         0       0       0       0       0       0       0       0       0
  2194 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2195 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2196 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2197 ;;Total ram usage:        1 bytes
  2198 ;; Hardware stack levels used: 1
  2199 ;; Hardware stack levels required when called: 13
  2200 ;; This function calls:
  2201 ;;		_parEmerg
  2202 ;;		_reiCon
  2203 ;; This function is called by:
  2204 ;;		_main
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text3
  2209   0011EE                     __ptext3:
  2210                           	callstack 0
  2211   0011EE                     _RecibirComando:
  2212                           	callstack 17
  2213                           
  2214                           ;Lab6.c: 394: if (RCIF){
  2215                           
  2216                           ; BSR set to: 0
  2217                           ;incstack = 0
  2218   0011EE  AA9E               	btfss	3998,5,c	;volatile
  2219   0011F0  0012               	return	
  2220                           
  2221                           ;Lab6.c: 395: char comando = RCREG;
  2222   0011F2  CFAE F025          	movff	4014,RecibirComando@comando	;volatile
  2223                           
  2224                           ;Lab6.c: 398: switch (comando){
  2225   0011F6  D06D               	goto	l6418
  2226   0011F8                     l6378:
  2227                           
  2228                           ;Lab6.c: 400: case 'p':;Lab6.c: 401: parEmerg();CCPR1L=0; flagADC=1; pwm=0;
  2229   0011F8  EC35  F015         	call	_parEmerg	;wreg free
  2230   0011FC  D060               	goto	u6510
  2231   0011FE                     l6382:
  2232   0011FE  0E00               	movlw	0
  2233   001200  0100               	movlb	0	; () banked
  2234   001202  6FBD               	movwf	(_flagADC+1)& (0+255),b
  2235   001204  0E01               	movlw	1
  2236   001206  6FBC               	movwf	_flagADC& (0+255),b
  2237                           
  2238                           ; BSR set to: 0
  2239   001208  0E00               	movlw	0
  2240   00120A  6FB0               	movwf	_pwm& (0+255),b
  2241   00120C  0E00               	movlw	0
  2242   00120E  6FB1               	movwf	(_pwm+1)& (0+255),b
  2243   001210  0E00               	movlw	0
  2244   001212  D00F               	goto	L1
  2245   001214                     l6386:
  2246                           
  2247                           ;Lab6.c: 404: case 'n':;Lab6.c: 405: if(flagEmergencia==0){CCPR1L=249; flagADC=1; pwm=1;
      +                          }
  2248   001214  503B               	movf	_flagEmergencia^0,w,c
  2249   001216  103C               	iorwf	(_flagEmergencia+1)^0,w,c
  2250   001218  A4D8               	btfss	status,2,c
  2251   00121A  D08C               	goto	l396
  2252   00121C  0EF9               	movlw	249
  2253   00121E  6EBE               	movwf	190,c	;volatile
  2254   001220  0E00               	movlw	0
  2255   001222  0100               	movlb	0	; () banked
  2256   001224  6FBD               	movwf	(_flagADC+1)& (0+255),b
  2257   001226  0E01               	movlw	1
  2258   001228  6FBC               	movwf	_flagADC& (0+255),b
  2259   00122A  0E00               	movlw	0
  2260   00122C  6FB0               	movwf	_pwm& (0+255),b
  2261   00122E  0E80               	movlw	128
  2262   001230  D01F               	goto	L3
  2263   001232                     L1:
  2264   001232  6FB2               	movwf	(_pwm+2)& (0+255),b
  2265   001234  D07F               	goto	l396
  2266   001236                     l6390:
  2267                           
  2268                           ;Lab6.c: 408: case 'b':;Lab6.c: 409: if(flagEmergencia==0){CCPR1L=0.8*250; flagADC=1; pw
      +                          m=0.8;}
  2269   001236  503B               	movf	_flagEmergencia^0,w,c
  2270   001238  103C               	iorwf	(_flagEmergencia+1)^0,w,c
  2271   00123A  A4D8               	btfss	status,2,c
  2272   00123C  D07B               	goto	l396
  2273   00123E  0EC8               	movlw	200
  2274   001240  6EBE               	movwf	190,c	;volatile
  2275   001242  0E00               	movlw	0
  2276   001244  0100               	movlb	0	; () banked
  2277   001246  6FBD               	movwf	(_flagADC+1)& (0+255),b
  2278   001248  0E01               	movlw	1
  2279   00124A  6FBC               	movwf	_flagADC& (0+255),b
  2280   00124C  0ECD               	movlw	205
  2281   00124E  6FB0               	movwf	_pwm& (0+255),b
  2282   001250  0E4C               	movlw	76
  2283   001252  D00E               	goto	L3
  2284   001254                     l6394:
  2285                           
  2286                           ;Lab6.c: 412: case 'v':;Lab6.c: 413: if(flagEmergencia==0){CCPR1L=0.6*250; flagADC=1 ;pw
      +                          m=0.6;}
  2287   001254  503B               	movf	_flagEmergencia^0,w,c
  2288   001256  103C               	iorwf	(_flagEmergencia+1)^0,w,c
  2289   001258  A4D8               	btfss	status,2,c
  2290   00125A  D06C               	goto	l396
  2291   00125C  0E96               	movlw	150
  2292   00125E  6EBE               	movwf	190,c	;volatile
  2293   001260  0E00               	movlw	0
  2294   001262  0100               	movlb	0	; () banked
  2295   001264  6FBD               	movwf	(_flagADC+1)& (0+255),b
  2296   001266  0E01               	movlw	1
  2297   001268  6FBC               	movwf	_flagADC& (0+255),b
  2298   00126A  0E9A               	movlw	154
  2299   00126C  6FB0               	movwf	_pwm& (0+255),b
  2300   00126E  0E19               	movlw	25
  2301   001270                     L3:
  2302   001270  6FB1               	movwf	(_pwm+1)& (0+255),b
  2303   001272  0E3F               	movlw	63
  2304   001274  D7DE               	goto	L1
  2305   001276                     l6398:
  2306                           
  2307                           ;Lab6.c: 416: case 'c':;Lab6.c: 417: if(flagEmergencia==0){CCPR1L=0.4*250; flagADC=1; pw
      +                          m=0.4;}
  2308   001276  503B               	movf	_flagEmergencia^0,w,c
  2309   001278  103C               	iorwf	(_flagEmergencia+1)^0,w,c
  2310   00127A  A4D8               	btfss	status,2,c
  2311   00127C  D05B               	goto	l396
  2312   00127E  0E64               	movlw	100
  2313   001280  6EBE               	movwf	190,c	;volatile
  2314   001282  0E00               	movlw	0
  2315   001284  0100               	movlb	0	; () banked
  2316   001286  6FBD               	movwf	(_flagADC+1)& (0+255),b
  2317   001288  0E01               	movlw	1
  2318   00128A  6FBC               	movwf	_flagADC& (0+255),b
  2319   00128C  0ECD               	movlw	205
  2320   00128E  6FB0               	movwf	_pwm& (0+255),b
  2321   001290  0ECC               	movlw	204
  2322   001292  D00E               	goto	L4
  2323   001294                     l6402:
  2324                           
  2325                           ;Lab6.c: 420: case 'x':;Lab6.c: 421: if(flagEmergencia==0){CCPR1L=0.2*250; flagADC=1; pw
      +                          m=0.2;}
  2326   001294  503B               	movf	_flagEmergencia^0,w,c
  2327   001296  103C               	iorwf	(_flagEmergencia+1)^0,w,c
  2328   001298  A4D8               	btfss	status,2,c
  2329   00129A  D04C               	goto	l396
  2330   00129C  0E32               	movlw	50
  2331   00129E  6EBE               	movwf	190,c	;volatile
  2332   0012A0  0E00               	movlw	0
  2333   0012A2  0100               	movlb	0	; () banked
  2334   0012A4  6FBD               	movwf	(_flagADC+1)& (0+255),b
  2335   0012A6  0E01               	movlw	1
  2336   0012A8  6FBC               	movwf	_flagADC& (0+255),b
  2337   0012AA  0ECD               	movlw	205
  2338   0012AC  6FB0               	movwf	_pwm& (0+255),b
  2339   0012AE  0E4C               	movlw	76
  2340   0012B0                     L4:
  2341   0012B0  6FB1               	movwf	(_pwm+1)& (0+255),b
  2342   0012B2  0E3E               	movlw	62
  2343   0012B4  D7BE               	goto	L1
  2344   0012B6                     l6406:
  2345                           
  2346                           ;Lab6.c: 424: case 'z':;Lab6.c: 425: if(flagEmergencia==0){CCPR1L=0; flagADC=1; pwm=0;}
  2347   0012B6  503B               	movf	_flagEmergencia^0,w,c
  2348   0012B8  103C               	iorwf	(_flagEmergencia+1)^0,w,c
  2349   0012BA  A4D8               	btfss	status,2,c
  2350   0012BC  D03B               	goto	l396
  2351   0012BE                     u6510:
  2352   0012BE  6ABE               	clrf	190,c	;volatile
  2353   0012C0  D79E               	goto	l6382
  2354   0012C2                     l6412:
  2355                           
  2356                           ;Lab6.c: 428: case 'r':;Lab6.c: 429: reiCon();
  2357   0012C2  EC30  F013         	call	_reiCon	;wreg free
  2358                           
  2359                           ;Lab6.c: 430: flagADC=1;
  2360   0012C6  0E00               	movlw	0
  2361   0012C8  0100               	movlb	0	; () banked
  2362   0012CA  6FBD               	movwf	(_flagADC+1)& (0+255),b
  2363   0012CC  0E01               	movlw	1
  2364   0012CE  6FBC               	movwf	_flagADC& (0+255),b
  2365                           
  2366                           ;Lab6.c: 431: break;
  2367   0012D0  D031               	goto	l396
  2368   0012D2                     l6418:
  2369   0012D2  5025               	movf	RecibirComando@comando^0,w,c
  2370                           
  2371                           ; Switch size 1, requested type "simple"
  2372                           ; Number of cases is 16, Range of values is 66 to 122
  2373                           ; switch strategies available:
  2374                           ; Name         Instructions Cycles
  2375                           ; simple_byte           49    25 (average)
  2376                           ;	Chosen strategy is simple_byte
  2377   0012D4  0A42               	xorlw	66	; case 66
  2378   0012D6  B4D8               	btfsc	status,2,c
  2379   0012D8  D7AE               	goto	l6390
  2380   0012DA  0A01               	xorlw	1	; case 67
  2381   0012DC  B4D8               	btfsc	status,2,c
  2382   0012DE  D7CB               	goto	l6398
  2383   0012E0  0A0D               	xorlw	13	; case 78
  2384   0012E2  B4D8               	btfsc	status,2,c
  2385   0012E4  D797               	goto	l6386
  2386   0012E6  0A1E               	xorlw	30	; case 80
  2387   0012E8  B4D8               	btfsc	status,2,c
  2388   0012EA  D786               	goto	l6378
  2389   0012EC  0A02               	xorlw	2	; case 82
  2390   0012EE  B4D8               	btfsc	status,2,c
  2391   0012F0  D7E8               	goto	l6412
  2392   0012F2  0A04               	xorlw	4	; case 86
  2393   0012F4  B4D8               	btfsc	status,2,c
  2394   0012F6  D7AE               	goto	l6394
  2395   0012F8  0A0E               	xorlw	14	; case 88
  2396   0012FA  B4D8               	btfsc	status,2,c
  2397   0012FC  D7CB               	goto	l6402
  2398   0012FE  0A02               	xorlw	2	; case 90
  2399   001300  B4D8               	btfsc	status,2,c
  2400   001302  D7D9               	goto	l6406
  2401   001304  0A38               	xorlw	56	; case 98
  2402   001306  B4D8               	btfsc	status,2,c
  2403   001308  D796               	goto	l6390
  2404   00130A  0A01               	xorlw	1	; case 99
  2405   00130C  B4D8               	btfsc	status,2,c
  2406   00130E  D7B3               	goto	l6398
  2407   001310  0A0D               	xorlw	13	; case 110
  2408   001312  B4D8               	btfsc	status,2,c
  2409   001314  D77F               	goto	l6386
  2410   001316  0A1E               	xorlw	30	; case 112
  2411   001318  B4D8               	btfsc	status,2,c
  2412   00131A  D76E               	goto	l6378
  2413   00131C  0A02               	xorlw	2	; case 114
  2414   00131E  B4D8               	btfsc	status,2,c
  2415   001320  D7D0               	goto	l6412
  2416   001322  0A04               	xorlw	4	; case 118
  2417   001324  B4D8               	btfsc	status,2,c
  2418   001326  D796               	goto	l6394
  2419   001328  0A0E               	xorlw	14	; case 120
  2420   00132A  B4D8               	btfsc	status,2,c
  2421   00132C  D7B3               	goto	l6402
  2422   00132E  0A02               	xorlw	2	; case 122
  2423   001330  B4D8               	btfsc	status,2,c
  2424   001332  D7C1               	goto	l6406
  2425   001334                     l396:
  2426                           
  2427                           ;Lab6.c: 438: RCIF = 0;
  2428   001334  9A9E               	bcf	3998,5,c	;volatile
  2429   001336  0012               	return		;funcret
  2430   001338                     __end_of_RecibirComando:
  2431                           	callstack 0
  2432                           
  2433 ;; *************** function _reiCon *****************
  2434 ;; Defined at:
  2435 ;;		line 257 in file "Lab6.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;		None
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;		None
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  1    wreg      void 
  2442 ;; Registers used:
  2443 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2449 ;;      Params:         0       0       0       0       0       0       0       0       0
  2450 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2451 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2452 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2453 ;;Total ram usage:        0 bytes
  2454 ;; Hardware stack levels used: 1
  2455 ;; Hardware stack levels required when called: 12
  2456 ;; This function calls:
  2457 ;;		_BorraLCD
  2458 ;;		_DireccionaLCD
  2459 ;;		_EscribeLCD_n8
  2460 ;;		_MensajeLCD_Var
  2461 ;;		_RGB
  2462 ;;		_SEG
  2463 ;; This function is called by:
  2464 ;;		_RecibirComando
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           	psect	text4
  2469   002660                     __ptext4:
  2470                           	callstack 0
  2471   002660                     _reiCon:
  2472                           	callstack 17
  2473                           
  2474                           ;Lab6.c: 258: piezFalt=cuenObj;
  2475                           
  2476                           ;incstack = 0
  2477   002660  C033  F031         	movff	_cuenObj,_piezFalt
  2478   002664  C034  F032         	movff	_cuenObj+1,_piezFalt+1
  2479                           
  2480                           ;Lab6.c: 259: cuenta=0;
  2481   002668  0E00               	movlw	0
  2482   00266A  6E3A               	movwf	(_cuenta+1)^0,c
  2483   00266C  0E00               	movlw	0
  2484   00266E  6E39               	movwf	_cuenta^0,c
  2485                           
  2486                           ;Lab6.c: 260: a=0;
  2487   002670  0E00               	movlw	0
  2488   002672  6E38               	movwf	(_a+1)^0,c
  2489   002674  0E00               	movlw	0
  2490   002676  6E37               	movwf	_a^0,c
  2491                           
  2492                           ;Lab6.c: 261: b=0;
  2493   002678  0E00               	movlw	0
  2494   00267A  6E36               	movwf	(_b+1)^0,c
  2495   00267C  0E00               	movlw	0
  2496   00267E  6E35               	movwf	_b^0,c
  2497                           
  2498                           ;Lab6.c: 262: RGB();
  2499   002680  EC69  F011         	call	_RGB	;wreg free
  2500                           
  2501                           ; BSR set to: 0
  2502                           ;Lab6.c: 263: SEG();
  2503   002684  EC09  F017         	call	_SEG	;wreg free
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;Lab6.c: 265: BorraLCD();
  2507   002688  ECE1  F016         	call	_BorraLCD	;wreg free
  2508                           
  2509                           ;Lab6.c: 266: MensajeLCD_Var("Faltan: ");
  2510   00268C  0EF6               	movlw	low STR_3
  2511   00268E  6E1D               	movwf	MensajeLCD_Var@a^0,c
  2512   002690  0E7F               	movlw	high STR_3
  2513   002692  6E1E               	movwf	(MensajeLCD_Var@a+1)^0,c
  2514   002694  EC11  F016         	call	_MensajeLCD_Var	;wreg free
  2515                           
  2516                           ;Lab6.c: 267: EscribeLCD_n8(piezFalt,2);
  2517   002698  0E02               	movlw	2
  2518   00269A  6E20               	movwf	EscribeLCD_n8@b^0,c
  2519   00269C  5031               	movf	_piezFalt^0,w,c
  2520   00269E  ECA0  F00B         	call	_EscribeLCD_n8
  2521                           
  2522                           ;Lab6.c: 268: DireccionaLCD(0xC0);
  2523   0026A2  0EC0               	movlw	192
  2524   0026A4  ECB5  F016         	call	_DireccionaLCD
  2525                           
  2526                           ;Lab6.c: 269: MensajeLCD_Var("Objetivo: ");
  2527   0026A8  0EE0               	movlw	low STR_4
  2528   0026AA  6E1D               	movwf	MensajeLCD_Var@a^0,c
  2529   0026AC  0E7F               	movlw	high STR_4
  2530   0026AE  6E1E               	movwf	(MensajeLCD_Var@a+1)^0,c
  2531   0026B0  EC11  F016         	call	_MensajeLCD_Var	;wreg free
  2532                           
  2533                           ;Lab6.c: 270: EscribeLCD_n8(cuenObj,2);
  2534   0026B4  0E02               	movlw	2
  2535   0026B6  6E20               	movwf	EscribeLCD_n8@b^0,c
  2536   0026B8  5033               	movf	_cuenObj^0,w,c
  2537   0026BA  ECA0  F00B         	call	_EscribeLCD_n8
  2538   0026BE  0012               	return		;funcret
  2539   0026C0                     __end_of_reiCon:
  2540                           	callstack 0
  2541                           
  2542 ;; *************** function _SEG *****************
  2543 ;; Defined at:
  2544 ;;		line 359 in file "Lab6.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;		None
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;		None
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      void 
  2551 ;; Registers used:
  2552 ;;		None
  2553 ;; Tracked objects:
  2554 ;;		On entry : 3F/0
  2555 ;;		On exit  : 3F/0
  2556 ;;		Unchanged: 3F/0
  2557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2558 ;;      Params:         0       0       0       0       0       0       0       0       0
  2559 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2560 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2561 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2562 ;;Total ram usage:        0 bytes
  2563 ;; Hardware stack levels used: 1
  2564 ;; Hardware stack levels required when called: 8
  2565 ;; This function calls:
  2566 ;;		Nothing
  2567 ;; This function is called by:
  2568 ;;		_reiCon
  2569 ;;		_fin
  2570 ;;		_contador
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text5
  2575   002E12                     __ptext5:
  2576                           	callstack 0
  2577   002E12                     _SEG:
  2578                           	callstack 20
  2579                           
  2580                           ; BSR set to: 0
  2581                           ;Lab6.c: 360: LATD = a;
  2582                           
  2583                           ;incstack = 0
  2584   002E12  C037  FF8C         	movff	_a,3980	;volatile
  2585                           
  2586                           ; BSR set to: 0
  2587   002E16  0012               	return		;funcret
  2588   002E18                     __end_of_SEG:
  2589                           	callstack 0
  2590                           
  2591 ;; *************** function _RGB *****************
  2592 ;; Defined at:
  2593 ;;		line 321 in file "Lab6.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg, status,2, status,0
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 3F/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2607 ;;      Params:         0       0       0       0       0       0       0       0       0
  2608 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2609 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2610 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2611 ;;Total ram usage:        0 bytes
  2612 ;; Hardware stack levels used: 1
  2613 ;; Hardware stack levels required when called: 8
  2614 ;; This function calls:
  2615 ;;		Nothing
  2616 ;; This function is called by:
  2617 ;;		_reiCon
  2618 ;;		_fin
  2619 ;;		_contador
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           	psect	text6
  2624   0022D2                     __ptext6:
  2625                           	callstack 0
  2626   0022D2                     _RGB:
  2627                           	callstack 20
  2628                           
  2629                           ;Lab6.c: 322: if (flagInicio == 0){
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;incstack = 0
  2633   0022D2  0100               	movlb	0	; () banked
  2634   0022D4  51C2               	movf	_flagInicio& (0+255),w,b
  2635   0022D6  11C3               	iorwf	(_flagInicio+1)& (0+255),w,b
  2636   0022D8  A4D8               	btfss	status,2,c
  2637   0022DA  D004               	goto	l4408
  2638                           
  2639                           ; BSR set to: 0
  2640                           ;Lab6.c: 323: LATE0 = 0;
  2641   0022DC  908D               	bcf	3981,0,c	;volatile
  2642                           
  2643                           ;Lab6.c: 324: LATE1 = 0;
  2644   0022DE  928D               	bcf	3981,1,c	;volatile
  2645                           
  2646                           ;Lab6.c: 325: LATE2 = 0;
  2647   0022E0  948D               	bcf	3981,2,c	;volatile
  2648                           
  2649                           ;Lab6.c: 326: }
  2650   0022E2  0012               	return	
  2651   0022E4                     l4408:
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;Lab6.c: 327: else if (b == 0){
  2655   0022E4  5035               	movf	_b^0,w,c
  2656   0022E6  1036               	iorwf	(_b+1)^0,w,c
  2657   0022E8  A4D8               	btfss	status,2,c
  2658   0022EA  D004               	goto	l4412
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;Lab6.c: 328: LATE0 = 1;
  2662   0022EC  808D               	bsf	3981,0,c	;volatile
  2663                           
  2664                           ;Lab6.c: 329: LATE1 = 0;
  2665   0022EE  928D               	bcf	3981,1,c	;volatile
  2666                           
  2667                           ;Lab6.c: 330: LATE2 = 1;
  2668   0022F0  848D               	bsf	3981,2,c	;volatile
  2669                           
  2670                           ;Lab6.c: 331: }
  2671   0022F2  0012               	return	
  2672   0022F4                     l4412:
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;Lab6.c: 332: else if (b == 1){
  2676   0022F4  0435               	decf	_b^0,w,c
  2677   0022F6  1036               	iorwf	(_b+1)^0,w,c
  2678   0022F8  A4D8               	btfss	status,2,c
  2679   0022FA  D004               	goto	l4416
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;Lab6.c: 333: LATE0 = 0;
  2683   0022FC  908D               	bcf	3981,0,c	;volatile
  2684                           
  2685                           ;Lab6.c: 334: LATE1 = 0;
  2686   0022FE  928D               	bcf	3981,1,c	;volatile
  2687                           
  2688                           ;Lab6.c: 335: LATE2 = 1;
  2689   002300  848D               	bsf	3981,2,c	;volatile
  2690                           
  2691                           ;Lab6.c: 336: }
  2692   002302  0012               	return	
  2693   002304                     l4416:
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;Lab6.c: 337: else if (b == 2){
  2697   002304  0E02               	movlw	2
  2698   002306  1835               	xorwf	_b^0,w,c
  2699   002308  1036               	iorwf	(_b+1)^0,w,c
  2700   00230A  A4D8               	btfss	status,2,c
  2701   00230C  D004               	goto	l4420
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;Lab6.c: 338: LATE0 = 0;
  2705   00230E  908D               	bcf	3981,0,c	;volatile
  2706                           
  2707                           ;Lab6.c: 339: LATE1 = 1;
  2708   002310  828D               	bsf	3981,1,c	;volatile
  2709                           
  2710                           ;Lab6.c: 340: LATE2 = 1;
  2711   002312  848D               	bsf	3981,2,c	;volatile
  2712                           
  2713                           ;Lab6.c: 341: }
  2714   002314  0012               	return	
  2715   002316                     l4420:
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;Lab6.c: 342: else if (b == 3){
  2719   002316  0E03               	movlw	3
  2720   002318  1835               	xorwf	_b^0,w,c
  2721   00231A  1036               	iorwf	(_b+1)^0,w,c
  2722   00231C  A4D8               	btfss	status,2,c
  2723   00231E  D004               	goto	l4424
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;Lab6.c: 343: LATE0 = 0;
  2727   002320  908D               	bcf	3981,0,c	;volatile
  2728                           
  2729                           ;Lab6.c: 344: LATE1 = 1;
  2730   002322  828D               	bsf	3981,1,c	;volatile
  2731                           
  2732                           ;Lab6.c: 345: LATE2 = 0;
  2733   002324  948D               	bcf	3981,2,c	;volatile
  2734                           
  2735                           ;Lab6.c: 346: }
  2736   002326  0012               	return	
  2737   002328                     l4424:
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;Lab6.c: 347: else if (b == 4){
  2741   002328  0E04               	movlw	4
  2742   00232A  1835               	xorwf	_b^0,w,c
  2743   00232C  1036               	iorwf	(_b+1)^0,w,c
  2744   00232E  A4D8               	btfss	status,2,c
  2745   002330  D004               	goto	l4428
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;Lab6.c: 348: LATE0 = 1;
  2749   002332  808D               	bsf	3981,0,c	;volatile
  2750                           
  2751                           ;Lab6.c: 349: LATE1 = 1;
  2752   002334  828D               	bsf	3981,1,c	;volatile
  2753                           
  2754                           ;Lab6.c: 350: LATE2 = 0;
  2755   002336  948D               	bcf	3981,2,c	;volatile
  2756                           
  2757                           ;Lab6.c: 351: }
  2758   002338  0012               	return	
  2759   00233A                     l4428:
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;Lab6.c: 352: else if (b == 5){
  2763   00233A  0E05               	movlw	5
  2764   00233C  1835               	xorwf	_b^0,w,c
  2765   00233E  1036               	iorwf	(_b+1)^0,w,c
  2766   002340  A4D8               	btfss	status,2,c
  2767   002342  0012               	return	
  2768                           
  2769                           ; BSR set to: 0
  2770                           ;Lab6.c: 353: LATE0 = 1;
  2771   002344  808D               	bsf	3981,0,c	;volatile
  2772                           
  2773                           ;Lab6.c: 354: LATE1 = 1;
  2774   002346  828D               	bsf	3981,1,c	;volatile
  2775                           
  2776                           ;Lab6.c: 355: LATE2 = 1;
  2777   002348  848D               	bsf	3981,2,c	;volatile
  2778   00234A  0012               	return	
  2779   00234C                     __end_of_RGB:
  2780                           	callstack 0
  2781                           
  2782 ;; *************** function _EscribeLCD_n8 *****************
  2783 ;; Defined at:
  2784 ;;		line 140 in file "LibLCDXC9.h"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;  a               1    wreg     unsigned char 
  2787 ;;  b               1   31[COMRAM] unsigned char 
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;  a               1   35[COMRAM] unsigned char 
  2790 ;;  unidad          1   34[COMRAM] unsigned char 
  2791 ;;  decena          1   33[COMRAM] unsigned char 
  2792 ;;  centena         1   32[COMRAM] unsigned char 
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		wreg, status,2, status,0, cstack
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2802 ;;      Params:         1       0       0       0       0       0       0       0       0
  2803 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2804 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2805 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2806 ;;Total ram usage:        5 bytes
  2807 ;; Hardware stack levels used: 1
  2808 ;; Hardware stack levels required when called: 10
  2809 ;; This function calls:
  2810 ;;		_EnviaDato
  2811 ;;		_HabilitaLCD
  2812 ;;		_RetardoLCD
  2813 ;;		___lbdiv
  2814 ;;		___lbmod
  2815 ;; This function is called by:
  2816 ;;		_reiCon
  2817 ;;		_contador
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           	psect	text7
  2822   001740                     __ptext7:
  2823                           	callstack 0
  2824   001740                     _EscribeLCD_n8:
  2825                           	callstack 19
  2826                           
  2827                           ; BSR set to: 0
  2828                           ;incstack = 0
  2829                           ;EscribeLCD_n8@a stored from wreg
  2830   001740  6E24               	movwf	EscribeLCD_n8@a^0,c
  2831                           
  2832                           ;LibLCDXC9.h: 145: unsigned char centena,decena,unidad;;LibLCDXC9.h: 146: LATA4=1;
  2833   001742  8889               	bsf	3977,4,c	;volatile
  2834                           
  2835                           ;LibLCDXC9.h: 147: switch(b){
  2836   001744  D065               	goto	l6010
  2837   001746                     l5978:
  2838   001746  0E0A               	movlw	10
  2839   001748  6E18               	movwf	___lbmod@divisor^0,c
  2840   00174A  5024               	movf	EscribeLCD_n8@a^0,w,c
  2841   00174C  EC3B  F016         	call	___lbmod
  2842   001750  6E23               	movwf	EscribeLCD_n8@unidad^0,c
  2843                           
  2844                           ;LibLCDXC9.h: 149: EnviaDato(unidad+48);
  2845   001752  5023               	movf	EscribeLCD_n8@unidad^0,w,c
  2846   001754  0F30               	addlw	48
  2847   001756  EC8D  F014         	call	_EnviaDato
  2848                           
  2849                           ;LibLCDXC9.h: 150: HabilitaLCD();
  2850   00175A  ECF5  F016         	call	_HabilitaLCD	;wreg free
  2851                           
  2852                           ;LibLCDXC9.h: 151: RetardoLCD(4);
  2853   00175E  0E04               	movlw	4
  2854   001760  ECBE  F013         	call	_RetardoLCD
  2855                           
  2856                           ;LibLCDXC9.h: 152: break;
  2857   001764  0012               	return	
  2858   001766                     l5984:
  2859   001766  0E0A               	movlw	10
  2860   001768  6E1C               	movwf	___lbdiv@divisor^0,c
  2861   00176A  0E64               	movlw	100
  2862   00176C  6E18               	movwf	___lbmod@divisor^0,c
  2863   00176E  5024               	movf	EscribeLCD_n8@a^0,w,c
  2864   001770  EC3B  F016         	call	___lbmod
  2865   001774  EC6F  F015         	call	___lbdiv
  2866   001778  6E22               	movwf	EscribeLCD_n8@decena^0,c
  2867                           
  2868                           ;LibLCDXC9.h: 154: unidad=a%10;
  2869   00177A  0E0A               	movlw	10
  2870   00177C  6E18               	movwf	___lbmod@divisor^0,c
  2871   00177E  5024               	movf	EscribeLCD_n8@a^0,w,c
  2872   001780  EC3B  F016         	call	___lbmod
  2873   001784  6E23               	movwf	EscribeLCD_n8@unidad^0,c
  2874                           
  2875                           ;LibLCDXC9.h: 155: EnviaDato(decena+48);
  2876   001786  5022               	movf	EscribeLCD_n8@decena^0,w,c
  2877   001788  0F30               	addlw	48
  2878   00178A  EC8D  F014         	call	_EnviaDato
  2879                           
  2880                           ;LibLCDXC9.h: 156: HabilitaLCD();
  2881   00178E  ECF5  F016         	call	_HabilitaLCD	;wreg free
  2882                           
  2883                           ;LibLCDXC9.h: 157: RetardoLCD(4);
  2884   001792  0E04               	movlw	4
  2885   001794  ECBE  F013         	call	_RetardoLCD
  2886                           
  2887                           ;LibLCDXC9.h: 158: EnviaDato(unidad+48);
  2888   001798  5023               	movf	EscribeLCD_n8@unidad^0,w,c
  2889   00179A  0F30               	addlw	48
  2890   00179C  EC8D  F014         	call	_EnviaDato
  2891                           
  2892                           ;LibLCDXC9.h: 159: HabilitaLCD();
  2893   0017A0  ECF5  F016         	call	_HabilitaLCD	;wreg free
  2894                           
  2895                           ;LibLCDXC9.h: 160: RetardoLCD(4);
  2896   0017A4  0E04               	movlw	4
  2897   0017A6  ECBE  F013         	call	_RetardoLCD
  2898                           
  2899                           ;LibLCDXC9.h: 161: break;
  2900   0017AA  0012               	return	
  2901   0017AC                     l5994:
  2902   0017AC  0E64               	movlw	100
  2903   0017AE  6E1C               	movwf	___lbdiv@divisor^0,c
  2904   0017B0  5024               	movf	EscribeLCD_n8@a^0,w,c
  2905   0017B2  EC6F  F015         	call	___lbdiv
  2906   0017B6  6E21               	movwf	EscribeLCD_n8@centena^0,c
  2907                           
  2908                           ;LibLCDXC9.h: 163: decena=(a%100)/10;
  2909   0017B8  0E0A               	movlw	10
  2910   0017BA  6E1C               	movwf	___lbdiv@divisor^0,c
  2911   0017BC  0E64               	movlw	100
  2912   0017BE  6E18               	movwf	___lbmod@divisor^0,c
  2913   0017C0  5024               	movf	EscribeLCD_n8@a^0,w,c
  2914   0017C2  EC3B  F016         	call	___lbmod
  2915   0017C6  EC6F  F015         	call	___lbdiv
  2916   0017CA  6E22               	movwf	EscribeLCD_n8@decena^0,c
  2917                           
  2918                           ;LibLCDXC9.h: 164: unidad=a%10;
  2919   0017CC  0E0A               	movlw	10
  2920   0017CE  6E18               	movwf	___lbmod@divisor^0,c
  2921   0017D0  5024               	movf	EscribeLCD_n8@a^0,w,c
  2922   0017D2  EC3B  F016         	call	___lbmod
  2923   0017D6  6E23               	movwf	EscribeLCD_n8@unidad^0,c
  2924                           
  2925                           ;LibLCDXC9.h: 165: EnviaDato(centena+48);
  2926   0017D8  5021               	movf	EscribeLCD_n8@centena^0,w,c
  2927   0017DA  0F30               	addlw	48
  2928   0017DC  EC8D  F014         	call	_EnviaDato
  2929                           
  2930                           ;LibLCDXC9.h: 166: HabilitaLCD();
  2931   0017E0  ECF5  F016         	call	_HabilitaLCD	;wreg free
  2932                           
  2933                           ;LibLCDXC9.h: 167: RetardoLCD(4);
  2934   0017E4  0E04               	movlw	4
  2935   0017E6  ECBE  F013         	call	_RetardoLCD
  2936                           
  2937                           ;LibLCDXC9.h: 168: EnviaDato(decena+48);
  2938   0017EA  5022               	movf	EscribeLCD_n8@decena^0,w,c
  2939   0017EC  0F30               	addlw	48
  2940   0017EE  EC8D  F014         	call	_EnviaDato
  2941                           
  2942                           ;LibLCDXC9.h: 169: HabilitaLCD();
  2943   0017F2  ECF5  F016         	call	_HabilitaLCD	;wreg free
  2944                           
  2945                           ;LibLCDXC9.h: 170: RetardoLCD(4);
  2946   0017F6  0E04               	movlw	4
  2947   0017F8  ECBE  F013         	call	_RetardoLCD
  2948                           
  2949                           ;LibLCDXC9.h: 171: EnviaDato(unidad+48);
  2950   0017FC  5023               	movf	EscribeLCD_n8@unidad^0,w,c
  2951   0017FE  0F30               	addlw	48
  2952   001800  EC8D  F014         	call	_EnviaDato
  2953                           
  2954                           ;LibLCDXC9.h: 172: HabilitaLCD();
  2955   001804  ECF5  F016         	call	_HabilitaLCD	;wreg free
  2956                           
  2957                           ;LibLCDXC9.h: 173: RetardoLCD(4);
  2958   001808  0E04               	movlw	4
  2959   00180A  ECBE  F013         	call	_RetardoLCD
  2960                           
  2961                           ;LibLCDXC9.h: 174: break;
  2962   00180E  0012               	return	
  2963   001810                     l6010:
  2964   001810  5020               	movf	EscribeLCD_n8@b^0,w,c
  2965                           
  2966                           ; Switch size 1, requested type "simple"
  2967                           ; Number of cases is 3, Range of values is 1 to 3
  2968                           ; switch strategies available:
  2969                           ; Name         Instructions Cycles
  2970                           ; simple_byte           10     6 (average)
  2971                           ;	Chosen strategy is simple_byte
  2972   001812  0A01               	xorlw	1	; case 1
  2973   001814  B4D8               	btfsc	status,2,c
  2974   001816  D797               	goto	l5978
  2975   001818  0A03               	xorlw	3	; case 2
  2976   00181A  B4D8               	btfsc	status,2,c
  2977   00181C  D7A4               	goto	l5984
  2978   00181E  0A01               	xorlw	1	; case 3
  2979   001820  A4D8               	btfss	status,2,c
  2980   001822  0012               	return	
  2981   001824  D7C3               	goto	l5994
  2982   001826                     __end_of_EscribeLCD_n8:
  2983                           	callstack 0
  2984                           
  2985 ;; *************** function _DireccionaLCD *****************
  2986 ;; Defined at:
  2987 ;;		line 243 in file "LibLCDXC9.h"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;  a               1    wreg     unsigned char 
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;  a               1   27[COMRAM] unsigned char 
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  1    wreg      void 
  2994 ;; Registers used:
  2995 ;;		wreg, status,2, status,0, cstack
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3001 ;;      Params:         0       0       0       0       0       0       0       0       0
  3002 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3003 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3004 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3005 ;;Total ram usage:        1 bytes
  3006 ;; Hardware stack levels used: 1
  3007 ;; Hardware stack levels required when called: 10
  3008 ;; This function calls:
  3009 ;;		_EnviaDato
  3010 ;;		_HabilitaLCD
  3011 ;;		_RetardoLCD
  3012 ;; This function is called by:
  3013 ;;		_main
  3014 ;;		_reiCon
  3015 ;;		_fin
  3016 ;;		_contador
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020                           	psect	text8
  3021   002D6A                     __ptext8:
  3022                           	callstack 0
  3023   002D6A                     _DireccionaLCD:
  3024                           	callstack 18
  3025                           
  3026                           ;incstack = 0
  3027                           ;DireccionaLCD@a stored from wreg
  3028   002D6A  6E1C               	movwf	DireccionaLCD@a^0,c
  3029                           
  3030                           ;LibLCDXC9.h: 246: LATA4=0;
  3031   002D6C  9889               	bcf	3977,4,c	;volatile
  3032                           
  3033                           ;LibLCDXC9.h: 247: EnviaDato(a);
  3034   002D6E  501C               	movf	DireccionaLCD@a^0,w,c
  3035   002D70  EC8D  F014         	call	_EnviaDato
  3036                           
  3037                           ;LibLCDXC9.h: 248: HabilitaLCD();
  3038   002D74  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3039                           
  3040                           ;LibLCDXC9.h: 249: RetardoLCD(4);
  3041   002D78  0E04               	movlw	4
  3042   002D7A  ECBE  F013         	call	_RetardoLCD
  3043   002D7E  0012               	return		;funcret
  3044   002D80                     __end_of_DireccionaLCD:
  3045                           	callstack 0
  3046                           
  3047 ;; *************** function _parEmerg *****************
  3048 ;; Defined at:
  3049 ;;		line 244 in file "Lab6.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;		None
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;		None
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  1    wreg      void 
  3056 ;; Registers used:
  3057 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3063 ;;      Params:         0       0       0       0       0       0       0       0       0
  3064 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3065 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3066 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3067 ;;Total ram usage:        0 bytes
  3068 ;; Hardware stack levels used: 1
  3069 ;; Hardware stack levels required when called: 12
  3070 ;; This function calls:
  3071 ;;		_BorraLCD
  3072 ;;		_MensajeLCD_Var
  3073 ;; This function is called by:
  3074 ;;		_RecibirComando
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           	psect	text9
  3079   002A6A                     __ptext9:
  3080                           	callstack 0
  3081   002A6A                     _parEmerg:
  3082                           	callstack 17
  3083                           
  3084                           ;Lab6.c: 245: LATE0 = 1;
  3085                           
  3086                           ;incstack = 0
  3087   002A6A  808D               	bsf	3981,0,c	;volatile
  3088                           
  3089                           ;Lab6.c: 246: LATE1 = 0;
  3090   002A6C  928D               	bcf	3981,1,c	;volatile
  3091                           
  3092                           ;Lab6.c: 247: LATE2 = 0;
  3093   002A6E  948D               	bcf	3981,2,c	;volatile
  3094                           
  3095                           ;Lab6.c: 248: LATC2 = 0;
  3096   002A70  948B               	bcf	3979,2,c	;volatile
  3097                           
  3098                           ;Lab6.c: 249: CCPR1L=0;
  3099   002A72  6ABE               	clrf	190,c	;volatile
  3100                           
  3101                           ;Lab6.c: 250: flagADC=1;
  3102   002A74  0E00               	movlw	0
  3103   002A76  0100               	movlb	0	; () banked
  3104   002A78  6FBD               	movwf	(_flagADC+1)& (0+255),b
  3105   002A7A  0E01               	movlw	1
  3106   002A7C  6FBC               	movwf	_flagADC& (0+255),b
  3107                           
  3108                           ;Lab6.c: 251: pwm=0;
  3109   002A7E  0E00               	movlw	0
  3110   002A80  6FB0               	movwf	_pwm& (0+255),b
  3111   002A82  0E00               	movlw	0
  3112   002A84  6FB1               	movwf	(_pwm+1)& (0+255),b
  3113   002A86  0E00               	movlw	0
  3114   002A88  6FB2               	movwf	(_pwm+2)& (0+255),b
  3115                           
  3116                           ;Lab6.c: 252: flagEmergencia = 1;
  3117   002A8A  0E00               	movlw	0
  3118   002A8C  6E3C               	movwf	(_flagEmergencia+1)^0,c
  3119   002A8E  0E01               	movlw	1
  3120   002A90  6E3B               	movwf	_flagEmergencia^0,c
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;Lab6.c: 253: BorraLCD();
  3124   002A92  ECE1  F016         	call	_BorraLCD	;wreg free
  3125                           
  3126                           ;Lab6.c: 254: MensajeLCD_Var("Emergencia");
  3127   002A96  0EEB               	movlw	low STR_8
  3128   002A98  6E1D               	movwf	MensajeLCD_Var@a^0,c
  3129   002A9A  0E7F               	movlw	high STR_8
  3130   002A9C  6E1E               	movwf	(MensajeLCD_Var@a+1)^0,c
  3131   002A9E  EC11  F016         	call	_MensajeLCD_Var	;wreg free
  3132   002AA2  0012               	return		;funcret
  3133   002AA4                     __end_of_parEmerg:
  3134                           	callstack 0
  3135                           
  3136 ;; *************** function _MensajeLCD_Var *****************
  3137 ;; Defined at:
  3138 ;;		line 234 in file "LibLCDXC9.h"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  a               2   28[COMRAM] PTR unsigned char 
  3141 ;;		 -> STR_14(11), STR_13(9), STR_12(12), STR_11(14), 
  3142 ;;		 -> STR_10(11), STR_9(9), STR_8(11), STR_7(18), 
  3143 ;;		 -> STR_6(18), STR_5(15), STR_4(11), STR_3(9), 
  3144 ;;		 -> STR_2(18), STR_1(12), 
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  1    wreg      void 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3156 ;;      Params:         2       0       0       0       0       0       0       0       0
  3157 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3158 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3159 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3160 ;;Total ram usage:        2 bytes
  3161 ;; Hardware stack levels used: 1
  3162 ;; Hardware stack levels required when called: 11
  3163 ;; This function calls:
  3164 ;;		_EscribeLCD_c
  3165 ;; This function is called by:
  3166 ;;		_main
  3167 ;;		_parEmerg
  3168 ;;		_reiCon
  3169 ;;		_fin
  3170 ;;		_contador
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           	psect	text10
  3175   002C22                     __ptext10:
  3176                           	callstack 0
  3177   002C22                     _MensajeLCD_Var:
  3178                           	callstack 17
  3179                           
  3180                           ;LibLCDXC9.h: 238: while(*a != '\0'){
  3181                           
  3182                           ;incstack = 0
  3183   002C22  D00A               	goto	l4394
  3184   002C24                     l4390:
  3185                           
  3186                           ;LibLCDXC9.h: 239: EscribeLCD_c(*a);
  3187   002C24  C01D  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  3188   002C28  C01E  FFF7         	movff	MensajeLCD_Var@a+1,tblptrh
  3189   002C2C                     	if	0	;tblptru may be non-zero
  3190   002C2C                     	endif
  3191   002C2C                     	if	0	;tblptru may be non-zero
  3192   002C2C                     	endif
  3193   002C2C  0008               	tblrd		*
  3194   002C2E  50F5               	movf	tablat,w,c
  3195   002C30  ECC0  F016         	call	_EscribeLCD_c
  3196                           
  3197                           ;LibLCDXC9.h: 240: a++;
  3198   002C34  4A1D               	infsnz	MensajeLCD_Var@a^0,f,c
  3199   002C36  2A1E               	incf	(MensajeLCD_Var@a+1)^0,f,c
  3200   002C38                     l4394:
  3201   002C38  C01D  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  3202   002C3C  C01E  FFF7         	movff	MensajeLCD_Var@a+1,tblptrh
  3203   002C40                     	if	0	;tblptru may be non-zero
  3204   002C40                     	endif
  3205   002C40                     	if	0	;tblptru may be non-zero
  3206   002C40                     	endif
  3207   002C40  0008               	tblrd		*
  3208   002C42  50F5               	movf	tablat,w,c
  3209   002C44  0900               	iorlw	0
  3210   002C46  B4D8               	btfsc	status,2,c
  3211   002C48  0012               	return	
  3212   002C4A  D7EC               	goto	l4390
  3213   002C4C                     __end_of_MensajeLCD_Var:
  3214                           	callstack 0
  3215                           
  3216 ;; *************** function _EscribeLCD_c *****************
  3217 ;; Defined at:
  3218 ;;		line 131 in file "LibLCDXC9.h"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;  a               1    wreg     unsigned char 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  a               1   27[COMRAM] unsigned char 
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  1    wreg      void 
  3225 ;; Registers used:
  3226 ;;		wreg, status,2, status,0, cstack
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3232 ;;      Params:         0       0       0       0       0       0       0       0       0
  3233 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3234 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3235 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3236 ;;Total ram usage:        1 bytes
  3237 ;; Hardware stack levels used: 1
  3238 ;; Hardware stack levels required when called: 10
  3239 ;; This function calls:
  3240 ;;		_EnviaDato
  3241 ;;		_HabilitaLCD
  3242 ;;		_RetardoLCD
  3243 ;; This function is called by:
  3244 ;;		_MensajeLCD_Var
  3245 ;;		_main
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           	psect	text11
  3250   002D80                     __ptext11:
  3251                           	callstack 0
  3252   002D80                     _EscribeLCD_c:
  3253                           	callstack 17
  3254                           
  3255                           ;incstack = 0
  3256                           ;EscribeLCD_c@a stored from wreg
  3257   002D80  6E1C               	movwf	EscribeLCD_c@a^0,c
  3258                           
  3259                           ;LibLCDXC9.h: 135: LATA4=1;
  3260   002D82  8889               	bsf	3977,4,c	;volatile
  3261                           
  3262                           ;LibLCDXC9.h: 136: EnviaDato(a);
  3263   002D84  501C               	movf	EscribeLCD_c@a^0,w,c
  3264   002D86  EC8D  F014         	call	_EnviaDato
  3265                           
  3266                           ;LibLCDXC9.h: 137: HabilitaLCD();
  3267   002D8A  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3268                           
  3269                           ;LibLCDXC9.h: 138: RetardoLCD(4);
  3270   002D8E  0E04               	movlw	4
  3271   002D90  ECBE  F013         	call	_RetardoLCD
  3272   002D94  0012               	return		;funcret
  3273   002D96                     __end_of_EscribeLCD_c:
  3274                           	callstack 0
  3275                           
  3276 ;; *************** function _MedirDistancia *****************
  3277 ;; Defined at:
  3278 ;;		line 448 in file "Lab6.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;		None
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  aux             1   32[COMRAM] unsigned char 
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  1    wreg      unsigned char 
  3285 ;; Registers used:
  3286 ;;		wreg, status,2, status,0, cstack
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3292 ;;      Params:         0       0       0       0       0       0       0       0       0
  3293 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3294 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3295 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3296 ;;Total ram usage:        3 bytes
  3297 ;; Hardware stack levels used: 1
  3298 ;; Hardware stack levels required when called: 9
  3299 ;; This function calls:
  3300 ;;		___lwdiv
  3301 ;; This function is called by:
  3302 ;;		_main
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306                           	psect	text12
  3307   001F68                     __ptext12:
  3308                           	callstack 0
  3309   001F68                     _MedirDistancia:
  3310                           	callstack 21
  3311                           
  3312                           ;Lab6.c: 450: CCP2CON=0b00000100;
  3313                           
  3314                           ;incstack = 0
  3315   001F68  0E04               	movlw	4
  3316   001F6A  6EBA               	movwf	186,c	;volatile
  3317                           
  3318                           ;Lab6.c: 451: TMR1=0;
  3319   001F6C  0E00               	movlw	0
  3320   001F6E  6ECF               	movwf	207,c	;volatile
  3321   001F70  0E00               	movlw	0
  3322   001F72  6ECE               	movwf	206,c	;volatile
  3323                           
  3324                           ;Lab6.c: 452: CCP2IF=0;
  3325   001F74  90A1               	bcf	4001,0,c	;volatile
  3326                           
  3327                           ;Lab6.c: 453: RC0=1;
  3328   001F76  8082               	bsf	3970,0,c	;volatile
  3329                           
  3330                           ;Lab6.c: 454: _delay((unsigned long)((10)*(1000000/4000000.0)));
  3331   001F78  D000               	nop2		;2 cycle nop
  3332                           
  3333                           ;Lab6.c: 455: RC0=0;
  3334   001F7A  9082               	bcf	3970,0,c	;volatile
  3335                           
  3336                           ;Lab6.c: 456: etimeout=1;
  3337   001F7C  0E01               	movlw	1
  3338   001F7E  6E41               	movwf	_etimeout^0,c
  3339   001F80                     l427:
  3340   001F80  B282               	btfsc	3970,1,c	;volatile
  3341   001F82  D003               	goto	u4830
  3342   001F84  0441               	decf	_etimeout^0,w,c
  3343   001F86  B4D8               	btfsc	status,2,c
  3344   001F88  D7FB               	goto	l427
  3345   001F8A                     u4830:
  3346                           
  3347                           ;Lab6.c: 459: if(etimeout==0){
  3348   001F8A  5041               	movf	_etimeout^0,w,c
  3349   001F8C  A4D8               	btfss	status,2,c
  3350   001F8E  D002               	goto	l432
  3351                           
  3352                           ;Lab6.c: 460: return 0;
  3353   001F90  0E00               	movlw	0
  3354   001F92  0012               	return	
  3355   001F94                     l432:
  3356                           
  3357                           ;Lab6.c: 461: };Lab6.c: 462: TMR1ON=1;
  3358   001F94  80CD               	bsf	4045,0,c	;volatile
  3359   001F96                     l434:
  3360   001F96  B0A1               	btfsc	4001,0,c	;volatile
  3361   001F98  D002               	goto	u4860
  3362   001F9A  A09E               	btfss	3998,0,c	;volatile
  3363   001F9C  D7FC               	goto	l434
  3364   001F9E                     u4860:
  3365                           
  3366                           ;Lab6.c: 464: TMR1ON=0;
  3367   001F9E  90CD               	bcf	4045,0,c	;volatile
  3368                           
  3369                           ;Lab6.c: 465: if(TMR1IF==1)
  3370   001FA0  A09E               	btfss	3998,0,c	;volatile
  3371   001FA2  D002               	goto	l5208
  3372                           
  3373                           ;Lab6.c: 466: aux=255;
  3374   001FA4  6821               	setf	MedirDistancia@aux^0,c
  3375   001FA6  D030               	goto	l5214
  3376   001FA8                     l5208:
  3377                           
  3378                           ;Lab6.c: 467: else{;Lab6.c: 468: if((CCPR2*8)>=14732)
  3379   001FA8  CFBB F01F          	movff	4027,??_MedirDistancia	;volatile
  3380   001FAC  CFBC F020          	movff	4028,??_MedirDistancia+1	;volatile
  3381   001FB0  90D8               	bcf	status,0,c
  3382   001FB2  361F               	rlcf	??_MedirDistancia^0,f,c
  3383   001FB4  3620               	rlcf	(??_MedirDistancia+1)^0,f,c
  3384   001FB6  90D8               	bcf	status,0,c
  3385   001FB8  361F               	rlcf	??_MedirDistancia^0,f,c
  3386   001FBA  3620               	rlcf	(??_MedirDistancia+1)^0,f,c
  3387   001FBC  90D8               	bcf	status,0,c
  3388   001FBE  361F               	rlcf	??_MedirDistancia^0,f,c
  3389   001FC0  3620               	rlcf	(??_MedirDistancia+1)^0,f,c
  3390   001FC2  0E8C               	movlw	140
  3391   001FC4  5C1F               	subwf	??_MedirDistancia^0,w,c
  3392   001FC6  0E39               	movlw	57
  3393   001FC8  5820               	subwfb	(??_MedirDistancia+1)^0,w,c
  3394   001FCA  A0D8               	btfss	status,0,c
  3395   001FCC  D004               	goto	l5212
  3396                           
  3397                           ;Lab6.c: 469: CCPR2=14732/8;
  3398   001FCE  0E07               	movlw	7
  3399   001FD0  6EBC               	movwf	188,c	;volatile
  3400   001FD2  0E31               	movlw	49
  3401   001FD4  6EBB               	movwf	187,c	;volatile
  3402   001FD6                     l5212:
  3403                           
  3404                           ;Lab6.c: 470: aux=(CCPR2*8)/58 + 1;
  3405   001FD6  CFBB F01F          	movff	4027,??_MedirDistancia	;volatile
  3406   001FDA  CFBC F020          	movff	4028,??_MedirDistancia+1	;volatile
  3407   001FDE  90D8               	bcf	status,0,c
  3408   001FE0  361F               	rlcf	??_MedirDistancia^0,f,c
  3409   001FE2  3620               	rlcf	(??_MedirDistancia+1)^0,f,c
  3410   001FE4  90D8               	bcf	status,0,c
  3411   001FE6  361F               	rlcf	??_MedirDistancia^0,f,c
  3412   001FE8  3620               	rlcf	(??_MedirDistancia+1)^0,f,c
  3413   001FEA  90D8               	bcf	status,0,c
  3414   001FEC  361F               	rlcf	??_MedirDistancia^0,f,c
  3415   001FEE  3620               	rlcf	(??_MedirDistancia+1)^0,f,c
  3416   001FF0  C01F  F018         	movff	??_MedirDistancia,___lwdiv@dividend
  3417   001FF4  C020  F019         	movff	??_MedirDistancia+1,___lwdiv@dividend+1
  3418   001FF8  0E00               	movlw	0
  3419   001FFA  6E1B               	movwf	(___lwdiv@divisor+1)^0,c
  3420   001FFC  0E3A               	movlw	58
  3421   001FFE  6E1A               	movwf	___lwdiv@divisor^0,c
  3422   002000  EC14  F014         	call	___lwdiv	;wreg free
  3423   002004  2818               	incf	?___lwdiv^0,w,c
  3424   002006  6E21               	movwf	MedirDistancia@aux^0,c
  3425   002008                     l5214:
  3426                           
  3427                           ;Lab6.c: 471: };Lab6.c: 475: return aux;
  3428   002008  5021               	movf	MedirDistancia@aux^0,w,c
  3429   00200A  0012               	return		;funcret
  3430   00200C                     __end_of_MedirDistancia:
  3431                           	callstack 0
  3432                           
  3433 ;; *************** function ___lwdiv *****************
  3434 ;; Defined at:
  3435 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lwdiv.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;  dividend        2   23[COMRAM] unsigned int 
  3438 ;;  divisor         2   25[COMRAM] unsigned int 
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;  quotient        2   27[COMRAM] unsigned int 
  3441 ;;  counter         1   29[COMRAM] unsigned char 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  2   23[COMRAM] unsigned int 
  3444 ;; Registers used:
  3445 ;;		wreg, status,2, status,0
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3451 ;;      Params:         4       0       0       0       0       0       0       0       0
  3452 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3453 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3454 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3455 ;;Total ram usage:        7 bytes
  3456 ;; Hardware stack levels used: 1
  3457 ;; Hardware stack levels required when called: 8
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_MedirDistancia
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           	psect	text13
  3466   002828                     __ptext13:
  3467                           	callstack 0
  3468   002828                     ___lwdiv:
  3469                           	callstack 21
  3470                           
  3471                           ;incstack = 0
  3472   002828  0E00               	movlw	0
  3473   00282A  6E1D               	movwf	(___lwdiv@quotient+1)^0,c
  3474   00282C  0E00               	movlw	0
  3475   00282E  6E1C               	movwf	___lwdiv@quotient^0,c
  3476   002830  501A               	movf	___lwdiv@divisor^0,w,c
  3477   002832  101B               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3478   002834  B4D8               	btfsc	status,2,c
  3479   002836  D01C               	goto	l1105
  3480   002838  0E01               	movlw	1
  3481   00283A  6E1E               	movwf	___lwdiv@counter^0,c
  3482   00283C  D004               	goto	l4908
  3483   00283E                     l4906:
  3484   00283E  90D8               	bcf	status,0,c
  3485   002840  361A               	rlcf	___lwdiv@divisor^0,f,c
  3486   002842  361B               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3487   002844  2A1E               	incf	___lwdiv@counter^0,f,c
  3488   002846                     l4908:
  3489   002846  AE1B               	btfss	(___lwdiv@divisor+1)^0,7,c
  3490   002848  D7FA               	goto	l4906
  3491   00284A                     u4500:
  3492   00284A  90D8               	bcf	status,0,c
  3493   00284C  361C               	rlcf	___lwdiv@quotient^0,f,c
  3494   00284E  361D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3495   002850  501A               	movf	___lwdiv@divisor^0,w,c
  3496   002852  5C18               	subwf	___lwdiv@dividend^0,w,c
  3497   002854  501B               	movf	(___lwdiv@divisor+1)^0,w,c
  3498   002856  5819               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3499   002858  A0D8               	btfss	status,0,c
  3500   00285A  D005               	goto	l4918
  3501   00285C  501A               	movf	___lwdiv@divisor^0,w,c
  3502   00285E  5E18               	subwf	___lwdiv@dividend^0,f,c
  3503   002860  501B               	movf	(___lwdiv@divisor+1)^0,w,c
  3504   002862  5A19               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3505   002864  801C               	bsf	___lwdiv@quotient^0,0,c
  3506   002866                     l4918:
  3507   002866  90D8               	bcf	status,0,c
  3508   002868  321B               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3509   00286A  321A               	rrcf	___lwdiv@divisor^0,f,c
  3510   00286C  2E1E               	decfsz	___lwdiv@counter^0,f,c
  3511   00286E  D7ED               	goto	u4500
  3512   002870                     l1105:
  3513   002870  C01C  F018         	movff	___lwdiv@quotient,?___lwdiv
  3514   002874  C01D  F019         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3515   002878  0012               	return		;funcret
  3516   00287A                     __end_of___lwdiv:
  3517                           	callstack 0
  3518                           
  3519 ;; *************** function _InicializaLCD *****************
  3520 ;; Defined at:
  3521 ;;		line 66 in file "LibLCDXC9.h"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;		None
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;		None
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  1    wreg      void 
  3528 ;; Registers used:
  3529 ;;		wreg, status,2, status,0, cstack
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3535 ;;      Params:         0       0       0       0       0       0       0       0       0
  3536 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3537 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3538 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3539 ;;Total ram usage:        0 bytes
  3540 ;; Hardware stack levels used: 1
  3541 ;; Hardware stack levels required when called: 11
  3542 ;; This function calls:
  3543 ;;		_BorraLCD
  3544 ;;		_EnviaDato
  3545 ;;		_HabilitaLCD
  3546 ;;		_RetardoLCD
  3547 ;; This function is called by:
  3548 ;;		_main
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           	psect	text14
  3553   0020B0                     __ptext14:
  3554                           	callstack 0
  3555   0020B0                     _InicializaLCD:
  3556                           	callstack 19
  3557                           
  3558                           ;LibLCDXC9.h: 68: LATA4=0;
  3559                           
  3560                           ;incstack = 0
  3561   0020B0  9889               	bcf	3977,4,c	;volatile
  3562                           
  3563                           ;LibLCDXC9.h: 69: if(interfaz==4)
  3564   0020B2  0E04               	movlw	4
  3565   0020B4  1847               	xorwf	_interfaz^0,w,c
  3566   0020B6  A4D8               	btfss	status,2,c
  3567   0020B8  D004               	goto	l5012
  3568                           
  3569                           ;LibLCDXC9.h: 70: LATD=(LATD & 0b00001111) | 0x30;
  3570   0020BA  508C               	movf	140,w,c	;volatile
  3571   0020BC  0B0F               	andlw	15
  3572   0020BE  0930               	iorlw	48
  3573   0020C0  D001               	goto	L5
  3574   0020C2                     l5012:
  3575                           
  3576                           ;LibLCDXC9.h: 71: else;LibLCDXC9.h: 72: LATD=0x3F;
  3577   0020C2  0E3F               	movlw	63
  3578   0020C4                     L5:
  3579   0020C4  6E8C               	movwf	140,c	;volatile
  3580                           
  3581                           ;LibLCDXC9.h: 73: HabilitaLCD();
  3582   0020C6  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3583                           
  3584                           ;LibLCDXC9.h: 74: RetardoLCD(1);
  3585   0020CA  0E01               	movlw	1
  3586   0020CC  ECBE  F013         	call	_RetardoLCD
  3587                           
  3588                           ;LibLCDXC9.h: 75: if(interfaz==4)
  3589   0020D0  0E04               	movlw	4
  3590   0020D2  1847               	xorwf	_interfaz^0,w,c
  3591   0020D4  A4D8               	btfss	status,2,c
  3592   0020D6  D004               	goto	l5022
  3593                           
  3594                           ;LibLCDXC9.h: 76: LATD=(LATD & 0b00001111) | 0x30;
  3595   0020D8  508C               	movf	140,w,c	;volatile
  3596   0020DA  0B0F               	andlw	15
  3597   0020DC  0930               	iorlw	48
  3598   0020DE  D001               	goto	L6
  3599   0020E0                     l5022:
  3600                           
  3601                           ;LibLCDXC9.h: 77: else;LibLCDXC9.h: 78: LATD=0x3F;
  3602   0020E0  0E3F               	movlw	63
  3603   0020E2                     L6:
  3604   0020E2  6E8C               	movwf	140,c	;volatile
  3605                           
  3606                           ;LibLCDXC9.h: 79: HabilitaLCD();
  3607   0020E4  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3608                           
  3609                           ;LibLCDXC9.h: 80: RetardoLCD(3);
  3610   0020E8  0E03               	movlw	3
  3611   0020EA  ECBE  F013         	call	_RetardoLCD
  3612                           
  3613                           ;LibLCDXC9.h: 81: if(interfaz==4)
  3614   0020EE  0E04               	movlw	4
  3615   0020F0  1847               	xorwf	_interfaz^0,w,c
  3616   0020F2  A4D8               	btfss	status,2,c
  3617   0020F4  D004               	goto	l5032
  3618                           
  3619                           ;LibLCDXC9.h: 82: LATD=(LATD & 0b00001111) | 0x30;
  3620   0020F6  508C               	movf	140,w,c	;volatile
  3621   0020F8  0B0F               	andlw	15
  3622   0020FA  0930               	iorlw	48
  3623   0020FC  D001               	goto	L7
  3624   0020FE                     l5032:
  3625                           
  3626                           ;LibLCDXC9.h: 83: else;LibLCDXC9.h: 84: LATD=0x3F;
  3627   0020FE  0E3F               	movlw	63
  3628   002100                     L7:
  3629   002100  6E8C               	movwf	140,c	;volatile
  3630                           
  3631                           ;LibLCDXC9.h: 85: HabilitaLCD();
  3632   002102  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3633                           
  3634                           ;LibLCDXC9.h: 86: RetardoLCD(4);
  3635   002106  0E04               	movlw	4
  3636   002108  ECBE  F013         	call	_RetardoLCD
  3637                           
  3638                           ;LibLCDXC9.h: 87: if(interfaz==4){
  3639   00210C  0E04               	movlw	4
  3640   00210E  1847               	xorwf	_interfaz^0,w,c
  3641   002110  A4D8               	btfss	status,2,c
  3642   002112  D011               	goto	l5052
  3643                           
  3644                           ;LibLCDXC9.h: 88: LATD=(LATD & 0b00001111) | 0x20;
  3645   002114  508C               	movf	140,w,c	;volatile
  3646   002116  0B0F               	andlw	15
  3647   002118  0920               	iorlw	32
  3648   00211A  6E8C               	movwf	140,c	;volatile
  3649                           
  3650                           ;LibLCDXC9.h: 89: HabilitaLCD();
  3651   00211C  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3652                           
  3653                           ;LibLCDXC9.h: 90: RetardoLCD(4);
  3654   002120  0E04               	movlw	4
  3655   002122  ECBE  F013         	call	_RetardoLCD
  3656                           
  3657                           ;LibLCDXC9.h: 91: EnviaDato(0x2F);
  3658   002126  0E2F               	movlw	47
  3659   002128  EC8D  F014         	call	_EnviaDato
  3660                           
  3661                           ;LibLCDXC9.h: 92: HabilitaLCD();
  3662   00212C  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3663                           
  3664                           ;LibLCDXC9.h: 93: RetardoLCD(4);
  3665   002130  0E04               	movlw	4
  3666   002132  ECBE  F013         	call	_RetardoLCD
  3667   002136                     l5052:
  3668                           
  3669                           ;LibLCDXC9.h: 94: };LibLCDXC9.h: 95: BorraLCD();
  3670   002136  ECE1  F016         	call	_BorraLCD	;wreg free
  3671                           
  3672                           ;LibLCDXC9.h: 96: EnviaDato(0xF);
  3673   00213A  0E0F               	movlw	15
  3674   00213C  EC8D  F014         	call	_EnviaDato
  3675                           
  3676                           ;LibLCDXC9.h: 97: HabilitaLCD();
  3677   002140  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3678                           
  3679                           ;LibLCDXC9.h: 98: RetardoLCD(4);
  3680   002144  0E04               	movlw	4
  3681   002146  ECBE  F013         	call	_RetardoLCD
  3682   00214A  0012               	return		;funcret
  3683   00214C                     __end_of_InicializaLCD:
  3684                           	callstack 0
  3685                           
  3686 ;; *************** function _ConfiguraLCD *****************
  3687 ;; Defined at:
  3688 ;;		line 50 in file "LibLCDXC9.h"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;  a               1    wreg     unsigned char 
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;  a               1   23[COMRAM] unsigned char 
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  1    wreg      void 
  3695 ;; Registers used:
  3696 ;;		wreg, status,2, status,0
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3702 ;;      Params:         0       0       0       0       0       0       0       0       0
  3703 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3704 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3705 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3706 ;;Total ram usage:        1 bytes
  3707 ;; Hardware stack levels used: 1
  3708 ;; Hardware stack levels required when called: 8
  3709 ;; This function calls:
  3710 ;;		Nothing
  3711 ;; This function is called by:
  3712 ;;		_main
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           	psect	text15
  3717   002D52                     __ptext15:
  3718                           	callstack 0
  3719   002D52                     _ConfiguraLCD:
  3720                           	callstack 22
  3721                           
  3722                           ;incstack = 0
  3723                           ;ConfiguraLCD@a stored from wreg
  3724   002D52  6E18               	movwf	ConfiguraLCD@a^0,c
  3725                           
  3726                           ;LibLCDXC9.h: 51: if(a==4 | a ==8)
  3727   002D54  0E04               	movlw	4
  3728   002D56  1818               	xorwf	ConfiguraLCD@a^0,w,c
  3729   002D58  B4D8               	btfsc	status,2,c
  3730   002D5A  D004               	goto	u4660
  3731   002D5C  0E08               	movlw	8
  3732   002D5E  1818               	xorwf	ConfiguraLCD@a^0,w,c
  3733   002D60  A4D8               	btfss	status,2,c
  3734   002D62  0012               	return	
  3735   002D64                     u4660:
  3736                           
  3737                           ;LibLCDXC9.h: 52: interfaz=a;
  3738   002D64  C018  F047         	movff	ConfiguraLCD@a,_interfaz
  3739   002D68  0012               	return		;funcret
  3740   002D6A                     __end_of_ConfiguraLCD:
  3741                           	callstack 0
  3742                           
  3743 ;; *************** function _CaracterQbert *****************
  3744 ;; Defined at:
  3745 ;;		line 333 in file "LibLCDXC9.h"
  3746 ;; Parameters:    Size  Location     Type
  3747 ;;		None
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;		None
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  1    wreg      void 
  3752 ;; Registers used:
  3753 ;;		wreg, status,2, status,0, cstack
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3759 ;;      Params:         0       0       0       0       0       0       0       0       0
  3760 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3761 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3762 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3763 ;;Total ram usage:        0 bytes
  3764 ;; Hardware stack levels used: 1
  3765 ;; Hardware stack levels required when called: 12
  3766 ;; This function calls:
  3767 ;;		_ComandoLCD
  3768 ;;		_EnviaDato
  3769 ;;		_HabilitaLCD
  3770 ;;		_RetardoLCD
  3771 ;; This function is called by:
  3772 ;;		_main
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text16
  3777   00243A                     __ptext16:
  3778                           	callstack 0
  3779   00243A                     _CaracterQbert:
  3780                           	callstack 18
  3781                           
  3782                           ;LibLCDXC9.h: 334: ComandoLCD(0b01010000);
  3783                           
  3784                           ;incstack = 0
  3785   00243A  0E50               	movlw	80
  3786   00243C  ECF8  F015         	call	_ComandoLCD
  3787                           
  3788                           ;LibLCDXC9.h: 335: LATA4=1;
  3789   002440  8889               	bsf	3977,4,c	;volatile
  3790                           
  3791                           ;LibLCDXC9.h: 336: RetardoLCD(4);
  3792   002442  0E04               	movlw	4
  3793   002444  ECBE  F013         	call	_RetardoLCD
  3794                           
  3795                           ;LibLCDXC9.h: 337: EnviaDato(0b11111);
  3796   002448  0E1F               	movlw	31
  3797   00244A  EC8D  F014         	call	_EnviaDato
  3798                           
  3799                           ;LibLCDXC9.h: 338: HabilitaLCD();
  3800   00244E  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3801                           
  3802                           ;LibLCDXC9.h: 339: EnviaDato(0b10101);
  3803   002452  0E15               	movlw	21
  3804   002454  EC8D  F014         	call	_EnviaDato
  3805                           
  3806                           ;LibLCDXC9.h: 340: HabilitaLCD();
  3807   002458  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3808                           
  3809                           ;LibLCDXC9.h: 341: EnviaDato(0b11111);
  3810   00245C  0E1F               	movlw	31
  3811   00245E  EC8D  F014         	call	_EnviaDato
  3812                           
  3813                           ;LibLCDXC9.h: 342: HabilitaLCD();
  3814   002462  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3815                           
  3816                           ;LibLCDXC9.h: 343: EnviaDato(0b11111);
  3817   002466  0E1F               	movlw	31
  3818   002468  EC8D  F014         	call	_EnviaDato
  3819                           
  3820                           ;LibLCDXC9.h: 344: HabilitaLCD();
  3821   00246C  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3822                           
  3823                           ;LibLCDXC9.h: 345: EnviaDato(0b01110);
  3824   002470  0E0E               	movlw	14
  3825   002472  EC8D  F014         	call	_EnviaDato
  3826                           
  3827                           ;LibLCDXC9.h: 346: HabilitaLCD();
  3828   002476  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3829                           
  3830                           ;LibLCDXC9.h: 347: EnviaDato(0b01010);
  3831   00247A  0E0A               	movlw	10
  3832   00247C  EC8D  F014         	call	_EnviaDato
  3833                           
  3834                           ;LibLCDXC9.h: 348: HabilitaLCD();
  3835   002480  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3836                           
  3837                           ;LibLCDXC9.h: 349: EnviaDato(0b11011);
  3838   002484  0E1B               	movlw	27
  3839   002486  EC8D  F014         	call	_EnviaDato
  3840                           
  3841                           ;LibLCDXC9.h: 350: HabilitaLCD();
  3842   00248A  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3843                           
  3844                           ;LibLCDXC9.h: 351: EnviaDato(0b00000);
  3845   00248E  0E00               	movlw	0
  3846   002490  EC8D  F014         	call	_EnviaDato
  3847                           
  3848                           ;LibLCDXC9.h: 352: HabilitaLCD();
  3849   002494  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3850                           
  3851                           ;LibLCDXC9.h: 353: LATA4 = 0;
  3852   002498  9889               	bcf	3977,4,c	;volatile
  3853                           
  3854                           ;LibLCDXC9.h: 354: EnviaDato(0xC1);
  3855   00249A  0EC1               	movlw	193
  3856   00249C  EC8D  F014         	call	_EnviaDato
  3857                           
  3858                           ;LibLCDXC9.h: 355: HabilitaLCD();
  3859   0024A0  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3860                           
  3861                           ;LibLCDXC9.h: 356: RetardoLCD(2);
  3862   0024A4  0E02               	movlw	2
  3863   0024A6  ECBE  F013         	call	_RetardoLCD
  3864   0024AA  0012               	return		;funcret
  3865   0024AC                     __end_of_CaracterQbert:
  3866                           	callstack 0
  3867                           
  3868 ;; *************** function _CaracterCara *****************
  3869 ;; Defined at:
  3870 ;;		line 307 in file "LibLCDXC9.h"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;		None
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;		None
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  1    wreg      void 
  3877 ;; Registers used:
  3878 ;;		wreg, status,2, status,0, cstack
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3884 ;;      Params:         0       0       0       0       0       0       0       0       0
  3885 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3886 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3887 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3888 ;;Total ram usage:        0 bytes
  3889 ;; Hardware stack levels used: 1
  3890 ;; Hardware stack levels required when called: 12
  3891 ;; This function calls:
  3892 ;;		_ComandoLCD
  3893 ;;		_EnviaDato
  3894 ;;		_HabilitaLCD
  3895 ;;		_RetardoLCD
  3896 ;; This function is called by:
  3897 ;;		_main
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           	psect	text17
  3902   0024AC                     __ptext17:
  3903                           	callstack 0
  3904   0024AC                     _CaracterCara:
  3905                           	callstack 18
  3906                           
  3907                           ;LibLCDXC9.h: 308: ComandoLCD(0b01001000);
  3908                           
  3909                           ;incstack = 0
  3910   0024AC  0E48               	movlw	72
  3911   0024AE  ECF8  F015         	call	_ComandoLCD
  3912                           
  3913                           ;LibLCDXC9.h: 309: LATA4=1;
  3914   0024B2  8889               	bsf	3977,4,c	;volatile
  3915                           
  3916                           ;LibLCDXC9.h: 310: RetardoLCD(4);
  3917   0024B4  0E04               	movlw	4
  3918   0024B6  ECBE  F013         	call	_RetardoLCD
  3919                           
  3920                           ;LibLCDXC9.h: 311: EnviaDato(0b11011);
  3921   0024BA  0E1B               	movlw	27
  3922   0024BC  EC8D  F014         	call	_EnviaDato
  3923                           
  3924                           ;LibLCDXC9.h: 312: HabilitaLCD();
  3925   0024C0  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3926                           
  3927                           ;LibLCDXC9.h: 313: EnviaDato(0b00000);
  3928   0024C4  0E00               	movlw	0
  3929   0024C6  EC8D  F014         	call	_EnviaDato
  3930                           
  3931                           ;LibLCDXC9.h: 314: HabilitaLCD();
  3932   0024CA  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3933                           
  3934                           ;LibLCDXC9.h: 315: EnviaDato(0b11011);
  3935   0024CE  0E1B               	movlw	27
  3936   0024D0  EC8D  F014         	call	_EnviaDato
  3937                           
  3938                           ;LibLCDXC9.h: 316: HabilitaLCD();
  3939   0024D4  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3940                           
  3941                           ;LibLCDXC9.h: 317: EnviaDato(0b11011);
  3942   0024D8  0E1B               	movlw	27
  3943   0024DA  EC8D  F014         	call	_EnviaDato
  3944                           
  3945                           ;LibLCDXC9.h: 318: HabilitaLCD();
  3946   0024DE  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3947                           
  3948                           ;LibLCDXC9.h: 319: EnviaDato(0b00000);
  3949   0024E2  0E00               	movlw	0
  3950   0024E4  EC8D  F014         	call	_EnviaDato
  3951                           
  3952                           ;LibLCDXC9.h: 320: HabilitaLCD();
  3953   0024E8  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3954                           
  3955                           ;LibLCDXC9.h: 321: EnviaDato(0b10001);
  3956   0024EC  0E11               	movlw	17
  3957   0024EE  EC8D  F014         	call	_EnviaDato
  3958                           
  3959                           ;LibLCDXC9.h: 322: HabilitaLCD();
  3960   0024F2  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3961                           
  3962                           ;LibLCDXC9.h: 323: EnviaDato(0b01110);
  3963   0024F6  0E0E               	movlw	14
  3964   0024F8  EC8D  F014         	call	_EnviaDato
  3965                           
  3966                           ;LibLCDXC9.h: 324: HabilitaLCD();
  3967   0024FC  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3968                           
  3969                           ;LibLCDXC9.h: 325: EnviaDato(0b00000);
  3970   002500  0E00               	movlw	0
  3971   002502  EC8D  F014         	call	_EnviaDato
  3972                           
  3973                           ;LibLCDXC9.h: 326: HabilitaLCD();
  3974   002506  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3975                           
  3976                           ;LibLCDXC9.h: 327: LATA4 = 0;
  3977   00250A  9889               	bcf	3977,4,c	;volatile
  3978                           
  3979                           ;LibLCDXC9.h: 328: EnviaDato(0xC0);
  3980   00250C  0EC0               	movlw	192
  3981   00250E  EC8D  F014         	call	_EnviaDato
  3982                           
  3983                           ;LibLCDXC9.h: 329: HabilitaLCD();
  3984   002512  ECF5  F016         	call	_HabilitaLCD	;wreg free
  3985                           
  3986                           ;LibLCDXC9.h: 330: RetardoLCD(2);
  3987   002516  0E02               	movlw	2
  3988   002518  ECBE  F013         	call	_RetardoLCD
  3989   00251C  0012               	return		;funcret
  3990   00251E                     __end_of_CaracterCara:
  3991                           	callstack 0
  3992                           
  3993 ;; *************** function _ComandoLCD *****************
  3994 ;; Defined at:
  3995 ;;		line 118 in file "LibLCDXC9.h"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  a               1    wreg     unsigned char 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;  a               1   27[COMRAM] unsigned char 
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  1    wreg      void 
  4002 ;; Registers used:
  4003 ;;		wreg, status,2, status,0, cstack
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4009 ;;      Params:         0       0       0       0       0       0       0       0       0
  4010 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4011 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4012 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4013 ;;Total ram usage:        1 bytes
  4014 ;; Hardware stack levels used: 1
  4015 ;; Hardware stack levels required when called: 11
  4016 ;; This function calls:
  4017 ;;		_BorraLCD
  4018 ;;		_CursorAInicio
  4019 ;;		_EnviaDato
  4020 ;;		_HabilitaLCD
  4021 ;;		_RetardoLCD
  4022 ;; This function is called by:
  4023 ;;		_CaracterCara
  4024 ;;		_CaracterQbert
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           	psect	text18
  4029   002BF0                     __ptext18:
  4030                           	callstack 0
  4031   002BF0                     _ComandoLCD:
  4032                           	callstack 18
  4033                           
  4034                           ;incstack = 0
  4035                           ;ComandoLCD@a stored from wreg
  4036   002BF0  6E1C               	movwf	ComandoLCD@a^0,c
  4037                           
  4038                           ;LibLCDXC9.h: 120: LATA4=0;
  4039   002BF2  9889               	bcf	3977,4,c	;volatile
  4040                           
  4041                           ;LibLCDXC9.h: 121: if(a==1)
  4042   002BF4  041C               	decf	ComandoLCD@a^0,w,c
  4043   002BF6  A4D8               	btfss	status,2,c
  4044   002BF8  D003               	goto	l4756
  4045                           
  4046                           ;LibLCDXC9.h: 122: BorraLCD();
  4047   002BFA  ECE1  F016         	call	_BorraLCD	;wreg free
  4048   002BFE  0012               	return	
  4049   002C00                     l4756:
  4050                           
  4051                           ;LibLCDXC9.h: 123: else if((a&0b11111110)==2)
  4052   002C00  501C               	movf	ComandoLCD@a^0,w,c
  4053   002C02  0BFE               	andlw	254
  4054   002C04  0A02               	xorlw	2
  4055   002C06  A4D8               	btfss	status,2,c
  4056   002C08  D003               	goto	l4760
  4057                           
  4058                           ;LibLCDXC9.h: 124: CursorAInicio();
  4059   002C0A  EC11  F017         	call	_CursorAInicio	;wreg free
  4060   002C0E  0012               	return	
  4061   002C10                     l4760:
  4062                           
  4063                           ;LibLCDXC9.h: 125: else{;LibLCDXC9.h: 126: EnviaDato(a);
  4064   002C10  501C               	movf	ComandoLCD@a^0,w,c
  4065   002C12  EC8D  F014         	call	_EnviaDato
  4066                           
  4067                           ;LibLCDXC9.h: 127: HabilitaLCD();
  4068   002C16  ECF5  F016         	call	_HabilitaLCD	;wreg free
  4069                           
  4070                           ;LibLCDXC9.h: 128: RetardoLCD(4);
  4071   002C1A  0E04               	movlw	4
  4072   002C1C  ECBE  F013         	call	_RetardoLCD
  4073   002C20  0012               	return		;funcret
  4074   002C22                     __end_of_ComandoLCD:
  4075                           	callstack 0
  4076                           
  4077 ;; *************** function _CursorAInicio *****************
  4078 ;; Defined at:
  4079 ;;		line 114 in file "LibLCDXC9.h"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;		None
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  1    wreg      void 
  4086 ;; Registers used:
  4087 ;;		None
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4093 ;;      Params:         0       0       0       0       0       0       0       0       0
  4094 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4095 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4096 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4097 ;;Total ram usage:        0 bytes
  4098 ;; Hardware stack levels used: 1
  4099 ;; Hardware stack levels required when called: 8
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		_ComandoLCD
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text19
  4108   002E22                     __ptext19:
  4109                           	callstack 0
  4110   002E22                     _CursorAInicio:
  4111                           	callstack 20
  4112                           
  4113                           ;incstack = 0
  4114   002E22  0012               	return		;funcret
  4115   002E24                     __end_of_CursorAInicio:
  4116                           	callstack 0
  4117                           
  4118 ;; *************** function _BorraLCD *****************
  4119 ;; Defined at:
  4120 ;;		line 107 in file "LibLCDXC9.h"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;		None
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;		None
  4125 ;; Return value:  Size  Location     Type
  4126 ;;                  1    wreg      void 
  4127 ;; Registers used:
  4128 ;;		wreg, status,2, status,0, cstack
  4129 ;; Tracked objects:
  4130 ;;		On entry : 0/0
  4131 ;;		On exit  : 0/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4134 ;;      Params:         0       0       0       0       0       0       0       0       0
  4135 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4136 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4137 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4138 ;;Total ram usage:        0 bytes
  4139 ;; Hardware stack levels used: 1
  4140 ;; Hardware stack levels required when called: 10
  4141 ;; This function calls:
  4142 ;;		_EnviaDato
  4143 ;;		_HabilitaLCD
  4144 ;;		_RetardoLCD
  4145 ;; This function is called by:
  4146 ;;		_InicializaLCD
  4147 ;;		_ComandoLCD
  4148 ;;		_main
  4149 ;;		_parEmerg
  4150 ;;		_reiCon
  4151 ;;		_fin
  4152 ;;		_contador
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text20
  4157   002DC2                     __ptext20:
  4158                           	callstack 0
  4159   002DC2                     _BorraLCD:
  4160                           	callstack 18
  4161                           
  4162                           ;LibLCDXC9.h: 109: LATA4=0;
  4163                           
  4164                           ;incstack = 0
  4165   002DC2  9889               	bcf	3977,4,c	;volatile
  4166                           
  4167                           ;LibLCDXC9.h: 110: EnviaDato(0x01);
  4168   002DC4  0E01               	movlw	1
  4169   002DC6  EC8D  F014         	call	_EnviaDato
  4170                           
  4171                           ;LibLCDXC9.h: 111: HabilitaLCD();
  4172   002DCA  ECF5  F016         	call	_HabilitaLCD	;wreg free
  4173                           
  4174                           ;LibLCDXC9.h: 112: RetardoLCD(2);
  4175   002DCE  0E02               	movlw	2
  4176   002DD0  ECBE  F013         	call	_RetardoLCD
  4177   002DD4  0012               	return		;funcret
  4178   002DD6                     __end_of_BorraLCD:
  4179                           	callstack 0
  4180                           
  4181 ;; *************** function _EnviaDato *****************
  4182 ;; Defined at:
  4183 ;;		line 54 in file "LibLCDXC9.h"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;  a               1    wreg     unsigned char 
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;  a               1   26[COMRAM] unsigned char 
  4188 ;; Return value:  Size  Location     Type
  4189 ;;                  1    wreg      void 
  4190 ;; Registers used:
  4191 ;;		wreg, status,2, status,0, cstack
  4192 ;; Tracked objects:
  4193 ;;		On entry : 0/0
  4194 ;;		On exit  : 0/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4197 ;;      Params:         0       0       0       0       0       0       0       0       0
  4198 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4199 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4200 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4201 ;;Total ram usage:        2 bytes
  4202 ;; Hardware stack levels used: 1
  4203 ;; Hardware stack levels required when called: 9
  4204 ;; This function calls:
  4205 ;;		_HabilitaLCD
  4206 ;;		_RetardoLCD
  4207 ;; This function is called by:
  4208 ;;		_InicializaLCD
  4209 ;;		_BorraLCD
  4210 ;;		_ComandoLCD
  4211 ;;		_EscribeLCD_c
  4212 ;;		_EscribeLCD_n8
  4213 ;;		_DireccionaLCD
  4214 ;;		_CaracterCara
  4215 ;;		_CaracterQbert
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text21
  4220   00291A                     __ptext21:
  4221                           	callstack 0
  4222   00291A                     _EnviaDato:
  4223                           	callstack 17
  4224                           
  4225                           ;incstack = 0
  4226                           ;EnviaDato@a stored from wreg
  4227   00291A  6E1B               	movwf	EnviaDato@a^0,c
  4228                           
  4229                           ;LibLCDXC9.h: 55: if(interfaz==4){
  4230   00291C  0E04               	movlw	4
  4231   00291E  1847               	xorwf	_interfaz^0,w,c
  4232   002920  A4D8               	btfss	status,2,c
  4233   002922  D017               	goto	l3588
  4234                           
  4235                           ;LibLCDXC9.h: 56: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  4236   002924  C01B  F01A         	movff	EnviaDato@a,??_EnviaDato
  4237   002928  0EF0               	movlw	240
  4238   00292A  161A               	andwf	??_EnviaDato^0,f,c
  4239   00292C  508C               	movf	140,w,c	;volatile
  4240   00292E  0B0F               	andlw	15
  4241   002930  101A               	iorwf	??_EnviaDato^0,w,c
  4242   002932  6E8C               	movwf	140,c	;volatile
  4243                           
  4244                           ;LibLCDXC9.h: 57: HabilitaLCD();
  4245   002934  ECF5  F016         	call	_HabilitaLCD	;wreg free
  4246                           
  4247                           ;LibLCDXC9.h: 58: RetardoLCD(1);
  4248   002938  0E01               	movlw	1
  4249   00293A  ECBE  F013         	call	_RetardoLCD
  4250                           
  4251                           ;LibLCDXC9.h: 59: LATD=(LATD & 0b00001111) | (a<<4);
  4252   00293E  C01B  F01A         	movff	EnviaDato@a,??_EnviaDato
  4253   002942  3A1A               	swapf	??_EnviaDato^0,f,c
  4254   002944  0EF0               	movlw	240
  4255   002946  161A               	andwf	??_EnviaDato^0,f,c
  4256   002948  508C               	movf	140,w,c	;volatile
  4257   00294A  0B0F               	andlw	15
  4258   00294C  101A               	iorwf	??_EnviaDato^0,w,c
  4259   00294E  6E8C               	movwf	140,c	;volatile
  4260                           
  4261                           ;LibLCDXC9.h: 62: }else if(interfaz==8){
  4262   002950  0012               	return	
  4263   002952                     l3588:
  4264   002952  0E08               	movlw	8
  4265   002954  1847               	xorwf	_interfaz^0,w,c
  4266   002956  A4D8               	btfss	status,2,c
  4267   002958  0012               	return	
  4268                           
  4269                           ;LibLCDXC9.h: 63: LATD=a;
  4270   00295A  C01B  FF8C         	movff	EnviaDato@a,3980	;volatile
  4271   00295E  0012               	return		;funcret
  4272   002960                     __end_of_EnviaDato:
  4273                           	callstack 0
  4274                           
  4275 ;; *************** function _RetardoLCD *****************
  4276 ;; Defined at:
  4277 ;;		line 287 in file "LibLCDXC9.h"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;  a               1    wreg     unsigned char 
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;  a               1   24[COMRAM] unsigned char 
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  1    wreg      void 
  4284 ;; Registers used:
  4285 ;;		wreg, status,2, status,0
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4291 ;;      Params:         0       0       0       0       0       0       0       0       0
  4292 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4293 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4294 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4295 ;;Total ram usage:        2 bytes
  4296 ;; Hardware stack levels used: 1
  4297 ;; Hardware stack levels required when called: 8
  4298 ;; This function calls:
  4299 ;;		Nothing
  4300 ;; This function is called by:
  4301 ;;		_EnviaDato
  4302 ;;		_InicializaLCD
  4303 ;;		_BorraLCD
  4304 ;;		_ComandoLCD
  4305 ;;		_EscribeLCD_c
  4306 ;;		_EscribeLCD_n8
  4307 ;;		_DireccionaLCD
  4308 ;;		_CaracterCara
  4309 ;;		_CaracterQbert
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313                           	psect	text22
  4314   00277C                     __ptext22:
  4315                           	callstack 0
  4316   00277C                     _RetardoLCD:
  4317                           	callstack 18
  4318                           
  4319                           ;incstack = 0
  4320                           ;RetardoLCD@a stored from wreg
  4321   00277C  6E19               	movwf	RetardoLCD@a^0,c
  4322                           
  4323                           ;LibLCDXC9.h: 288: switch(a){
  4324   00277E  D01B               	goto	l3526
  4325   002780                     l3516:
  4326   002780  0E05               	movlw	5
  4327   002782  6E18               	movwf	??_RetardoLCD^0,c
  4328   002784  0EDE               	movlw	222
  4329   002786                     u6707:
  4330   002786  2EE8               	decfsz	wreg,f,c
  4331   002788  D7FE               	bra	u6707
  4332   00278A  2E18               	decfsz	??_RetardoLCD^0,f,c
  4333   00278C  D7FC               	bra	u6707
  4334                           
  4335                           ;LibLCDXC9.h: 291: break;
  4336   00278E  0012               	return	
  4337   002790                     l3518:
  4338   002790  0E53               	movlw	83
  4339   002792                     u6717:
  4340   002792  2EE8               	decfsz	wreg,f,c
  4341   002794  D7FE               	bra	u6717
  4342   002796  0000               	nop	
  4343                           
  4344                           ;LibLCDXC9.h: 293: _delay((unsigned long)((640)*(1000000/4000000.0)));
  4345   002798  0E35               	movlw	53
  4346   00279A                     u6727:
  4347   00279A  2EE8               	decfsz	wreg,f,c
  4348   00279C  D7FE               	bra	u6727
  4349   00279E  0000               	nop	
  4350                           
  4351                           ;LibLCDXC9.h: 295: break;
  4352   0027A0  0012               	return	
  4353   0027A2                     l3520:
  4354   0027A2  0E08               	movlw	8
  4355   0027A4                     u6737:
  4356   0027A4  2EE8               	decfsz	wreg,f,c
  4357   0027A6  D7FE               	bra	u6737
  4358   0027A8  0000               	nop	
  4359                           
  4360                           ;LibLCDXC9.h: 298: break;
  4361   0027AA  0012               	return	
  4362   0027AC                     l3522:
  4363   0027AC  0E03               	movlw	3
  4364   0027AE                     u6747:
  4365   0027AE  2EE8               	decfsz	wreg,f,c
  4366   0027B0  D7FE               	bra	u6747
  4367   0027B2  0000               	nop	
  4368                           
  4369                           ;LibLCDXC9.h: 301: break;
  4370   0027B4  0012               	return	
  4371   0027B6                     l3526:
  4372   0027B6  5019               	movf	RetardoLCD@a^0,w,c
  4373                           
  4374                           ; Switch size 1, requested type "simple"
  4375                           ; Number of cases is 4, Range of values is 1 to 4
  4376                           ; switch strategies available:
  4377                           ; Name         Instructions Cycles
  4378                           ; simple_byte           13     7 (average)
  4379                           ;	Chosen strategy is simple_byte
  4380   0027B8  0A01               	xorlw	1	; case 1
  4381   0027BA  B4D8               	btfsc	status,2,c
  4382   0027BC  D7E1               	goto	l3516
  4383   0027BE  0A03               	xorlw	3	; case 2
  4384   0027C0  B4D8               	btfsc	status,2,c
  4385   0027C2  D7E6               	goto	l3518
  4386   0027C4  0A01               	xorlw	1	; case 3
  4387   0027C6  B4D8               	btfsc	status,2,c
  4388   0027C8  D7EC               	goto	l3520
  4389   0027CA  0A07               	xorlw	7	; case 4
  4390   0027CC  A4D8               	btfss	status,2,c
  4391   0027CE  0012               	return	
  4392   0027D0  D7ED               	goto	l3522
  4393   0027D2                     __end_of_RetardoLCD:
  4394                           	callstack 0
  4395                           
  4396 ;; *************** function _HabilitaLCD *****************
  4397 ;; Defined at:
  4398 ;;		line 100 in file "LibLCDXC9.h"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;		None
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;		None
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  1    wreg      void 
  4405 ;; Registers used:
  4406 ;;		wreg
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4412 ;;      Params:         0       0       0       0       0       0       0       0       0
  4413 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4414 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4415 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4416 ;;Total ram usage:        0 bytes
  4417 ;; Hardware stack levels used: 1
  4418 ;; Hardware stack levels required when called: 8
  4419 ;; This function calls:
  4420 ;;		Nothing
  4421 ;; This function is called by:
  4422 ;;		_EnviaDato
  4423 ;;		_InicializaLCD
  4424 ;;		_BorraLCD
  4425 ;;		_ComandoLCD
  4426 ;;		_EscribeLCD_c
  4427 ;;		_EscribeLCD_n8
  4428 ;;		_DireccionaLCD
  4429 ;;		_CaracterCara
  4430 ;;		_CaracterQbert
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text23
  4435   002DEA                     __ptext23:
  4436                           	callstack 0
  4437   002DEA                     _HabilitaLCD:
  4438                           	callstack 18
  4439                           
  4440                           ;LibLCDXC9.h: 102: LATA5=1;
  4441                           
  4442                           ;incstack = 0
  4443   002DEA  8A89               	bsf	3977,5,c	;volatile
  4444                           
  4445                           ;LibLCDXC9.h: 103: _delay((unsigned long)((40)*(1000000/4000000.0)));
  4446   002DEC  0E03               	movlw	3
  4447   002DEE                     u6757:
  4448   002DEE  2EE8               	decfsz	wreg,f,c
  4449   002DF0  D7FE               	bra	u6757
  4450   002DF2  0000               	nop	
  4451                           
  4452                           ;LibLCDXC9.h: 105: LATA5=0;
  4453   002DF4  9A89               	bcf	3977,5,c	;volatile
  4454   002DF6  0012               	return		;funcret
  4455   002DF8                     __end_of_HabilitaLCD:
  4456                           	callstack 0
  4457                           
  4458 ;; *************** function _ADC *****************
  4459 ;; Defined at:
  4460 ;;		line 364 in file "Lab6.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;		None
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;		None
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      void 
  4467 ;; Registers used:
  4468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4474 ;;      Params:         0       0       0       0       0       0       0       0       0
  4475 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4476 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4477 ;;      Totals:         0       5       0       0       0       0       0       0       0
  4478 ;;Total ram usage:        5 bytes
  4479 ;; Hardware stack levels used: 1
  4480 ;; Hardware stack levels required when called: 13
  4481 ;; This function calls:
  4482 ;;		_Transmitir
  4483 ;;		___awtoft
  4484 ;;		___ftdiv
  4485 ;;		___ftmul
  4486 ;;		___fttol
  4487 ;; This function is called by:
  4488 ;;		_main
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           	psect	text24
  4493   0019F2                     __ptext24:
  4494                           	callstack 0
  4495   0019F2                     _ADC:
  4496                           	callstack 17
  4497                           
  4498                           ;Lab6.c: 365: if(flagEmergencia==0){
  4499                           
  4500                           ;incstack = 0
  4501   0019F2  503B               	movf	_flagEmergencia^0,w,c
  4502   0019F4  103C               	iorwf	(_flagEmergencia+1)^0,w,c
  4503   0019F6  A4D8               	btfss	status,2,c
  4504   0019F8  0012               	return	
  4505                           
  4506                           ;Lab6.c: 367: ADCON0bits.GO = 1;
  4507   0019FA  82C2               	bsf	194,1,c	;volatile
  4508   0019FC                     l378:
  4509   0019FC  B2C2               	btfsc	194,1,c	;volatile
  4510   0019FE  D7FE               	goto	l378
  4511                           
  4512                           ;Lab6.c: 371: adcVal = ((ADRESH << 8) + ADRESL);
  4513   001A00  50C4               	movf	196,w,c	;volatile
  4514   001A02  0100               	movlb	0	; () banked
  4515   001A04  6FAA               	movwf	(??_ADC+1)& (0+255),b
  4516   001A06  6BA9               	clrf	??_ADC& (0+255),b
  4517   001A08  50C3               	movf	195,w,c	;volatile
  4518   001A0A  25A9               	addwf	??_ADC& (0+255),w,b
  4519   001A0C  6E20               	movwf	___awtoft@c^0,c
  4520   001A0E  0E00               	movlw	0
  4521   001A10  21AA               	addwfc	(??_ADC+1)& (0+255),w,b
  4522   001A12  6E21               	movwf	(___awtoft@c+1)^0,c
  4523   001A14  ECC3  F015         	call	___awtoft	;wreg free
  4524   001A18  C020  F0B3         	movff	?___awtoft,_adcVal
  4525   001A1C  C021  F0B4         	movff	?___awtoft+1,_adcVal+1
  4526   001A20  C022  F0B5         	movff	?___awtoft+2,_adcVal+2
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;Lab6.c: 374: if (flagADC == 0) {
  4530   001A24  51BC               	movf	_flagADC& (0+255),w,b
  4531   001A26  11BD               	iorwf	(_flagADC+1)& (0+255),w,b
  4532   001A28  A4D8               	btfss	status,2,c
  4533   001A2A  D036               	goto	l381
  4534                           
  4535                           ; BSR set to: 0
  4536                           ;Lab6.c: 376: pwm = (float)adcVal / 1023.0;
  4537   001A2C  C0B3  F020         	movff	_adcVal,___ftdiv@f1
  4538   001A30  C0B4  F021         	movff	_adcVal+1,___ftdiv@f1+1
  4539   001A34  C0B5  F022         	movff	_adcVal+2,___ftdiv@f1+2
  4540   001A38  0EC0               	movlw	192
  4541   001A3A  6E23               	movwf	___ftdiv@f2^0,c
  4542   001A3C  0E7F               	movlw	127
  4543   001A3E  6E24               	movwf	(___ftdiv@f2+1)^0,c
  4544   001A40  0E44               	movlw	68
  4545   001A42  6E25               	movwf	(___ftdiv@f2+2)^0,c
  4546   001A44  EC13  F00C         	call	___ftdiv	;wreg free
  4547   001A48  C020  F0B0         	movff	?___ftdiv,_pwm
  4548   001A4C  C021  F0B1         	movff	?___ftdiv+1,_pwm+1
  4549   001A50  C022  F0B2         	movff	?___ftdiv+2,_pwm+2
  4550                           
  4551                           ; BSR set to: 0
  4552                           ;Lab6.c: 377: if(pwm == 1)CCPR1L = 249;
  4553   001A54  0E80               	movlw	128
  4554   001A56  19B1               	xorwf	(_pwm+1)& (0+255),w,b
  4555   001A58  E107               	bnz	l6370
  4556   001A5A  0E3F               	movlw	63
  4557   001A5C  19B2               	xorwf	(_pwm+2)& (0+255),w,b
  4558   001A5E  11B0               	iorwf	_pwm& (0+255),w,b
  4559   001A60  A4D8               	btfss	status,2,c
  4560   001A62  D002               	goto	l6370
  4561                           
  4562                           ; BSR set to: 0
  4563   001A64  0EF9               	movlw	249
  4564   001A66  D017               	goto	L8
  4565   001A68                     l6370:
  4566                           
  4567                           ; BSR set to: 0
  4568                           ;Lab6.c: 378: else{CCPR1L = (unsigned char)(pwm * 250.0);}
  4569   001A68  0E00               	movlw	0
  4570   001A6A  6E29               	movwf	___ftmul@f2^0,c
  4571   001A6C  0E7A               	movlw	122
  4572   001A6E  6E2A               	movwf	(___ftmul@f2+1)^0,c
  4573   001A70  0E43               	movlw	67
  4574   001A72  6E2B               	movwf	(___ftmul@f2+2)^0,c
  4575   001A74  C0B0  F026         	movff	_pwm,___ftmul@f1
  4576   001A78  C0B1  F027         	movff	_pwm+1,___ftmul@f1+1
  4577   001A7C  C0B2  F028         	movff	_pwm+2,___ftmul@f1+2
  4578   001A80  ECAB  F00A         	call	___ftmul	;wreg free
  4579   001A84  C026  F06D         	movff	?___ftmul,___fttol@f1
  4580   001A88  C027  F06E         	movff	?___ftmul+1,___fttol@f1+1
  4581   001A8C  C028  F06F         	movff	?___ftmul+2,___fttol@f1+2
  4582   001A90  EC45  F00E         	call	___fttol	;wreg free
  4583   001A94  516D               	movf	?___fttol& (0+255),w,b
  4584   001A96                     L8:
  4585   001A96  6EBE               	movwf	190,c	;volatile
  4586   001A98                     l381:
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;Lab6.c: 379: };Lab6.c: 380: Transmitir(pwm * 100);
  4590   001A98  C0B0  F026         	movff	_pwm,___ftmul@f1
  4591   001A9C  C0B1  F027         	movff	_pwm+1,___ftmul@f1+1
  4592   001AA0  C0B2  F028         	movff	_pwm+2,___ftmul@f1+2
  4593   001AA4  0E00               	movlw	0
  4594   001AA6  6E29               	movwf	___ftmul@f2^0,c
  4595   001AA8  0EC8               	movlw	200
  4596   001AAA  6E2A               	movwf	(___ftmul@f2+1)^0,c
  4597   001AAC  0E42               	movlw	66
  4598   001AAE  6E2B               	movwf	(___ftmul@f2+2)^0,c
  4599   001AB0  ECAB  F00A         	call	___ftmul	;wreg free
  4600   001AB4  C026  F0AB         	movff	?___ftmul,_ADC$1090
  4601   001AB8  C027  F0AC         	movff	?___ftmul+1,_ADC$1090+1
  4602   001ABC  C028  F0AD         	movff	?___ftmul+2,_ADC$1090+2
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;Lab6.c: 379: };Lab6.c: 380: Transmitir(pwm * 100);
  4606   001AC0  C0AB  F0A6         	movff	_ADC$1090,Transmitir@pwm
  4607   001AC4  C0AC  F0A7         	movff	_ADC$1090+1,Transmitir@pwm+1
  4608   001AC8  C0AD  F0A8         	movff	_ADC$1090+2,Transmitir@pwm+2
  4609   001ACC  ECF5  F014         	call	_Transmitir	;wreg free
  4610   001AD0  0012               	return		;funcret
  4611   001AD2                     __end_of_ADC:
  4612                           	callstack 0
  4613                           
  4614 ;; *************** function ___ftdiv *****************
  4615 ;; Defined at:
  4616 ;;		line 54 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\ftdiv.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;  f1              3   31[COMRAM] float 
  4619 ;;  f2              3   34[COMRAM] float 
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;  f3              3   41[COMRAM] float 
  4622 ;;  sign            1   45[COMRAM] unsigned char 
  4623 ;;  exp             1   44[COMRAM] unsigned char 
  4624 ;;  cntr            1   40[COMRAM] unsigned char 
  4625 ;; Return value:  Size  Location     Type
  4626 ;;                  3   31[COMRAM] float 
  4627 ;; Registers used:
  4628 ;;		wreg, status,2, status,0, cstack
  4629 ;; Tracked objects:
  4630 ;;		On entry : 3F/0
  4631 ;;		On exit  : 3F/0
  4632 ;;		Unchanged: 3F/0
  4633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4634 ;;      Params:         6       0       0       0       0       0       0       0       0
  4635 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4636 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4637 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4638 ;;Total ram usage:       15 bytes
  4639 ;; Hardware stack levels used: 1
  4640 ;; Hardware stack levels required when called: 9
  4641 ;; This function calls:
  4642 ;;		___ftpack
  4643 ;; This function is called by:
  4644 ;;		_ADC
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648                           	psect	text25
  4649   001826                     __ptext25:
  4650                           	callstack 0
  4651   001826                     ___ftdiv:
  4652                           	callstack 20
  4653                           
  4654                           ; BSR set to: 0
  4655                           
  4656                           ;incstack = 0
  4657   001826  C022  F026         	movff	___ftdiv@f1+2,??___ftdiv
  4658   00182A  6A27               	clrf	(??___ftdiv+1)^0,c
  4659   00182C  6A28               	clrf	(??___ftdiv+2)^0,c
  4660   00182E  3421               	rlcf	(___ftdiv@f1+1)^0,w,c
  4661   001830  3626               	rlcf	??___ftdiv^0,f,c
  4662   001832  E301               	bnc	u6351
  4663   001834  8027               	bsf	(??___ftdiv+1)^0,0,c
  4664   001836                     u6351:
  4665   001836  5026               	movf	??___ftdiv^0,w,c
  4666   001838  6E2D               	movwf	___ftdiv@exp^0,c
  4667   00183A  502D               	movf	___ftdiv@exp^0,w,c
  4668   00183C  A4D8               	btfss	status,2,c
  4669   00183E  D007               	goto	l6304
  4670                           
  4671                           ; BSR set to: 0
  4672   001840  0E00               	movlw	0
  4673   001842  6E20               	movwf	?___ftdiv^0,c
  4674   001844  0E00               	movlw	0
  4675   001846  6E21               	movwf	(?___ftdiv+1)^0,c
  4676   001848  0E00               	movlw	0
  4677   00184A  6E22               	movwf	(?___ftdiv+2)^0,c
  4678   00184C  0012               	return	
  4679   00184E                     l6304:
  4680                           
  4681                           ; BSR set to: 0
  4682   00184E  C025  F026         	movff	___ftdiv@f2+2,??___ftdiv
  4683   001852  6A27               	clrf	(??___ftdiv+1)^0,c
  4684   001854  6A28               	clrf	(??___ftdiv+2)^0,c
  4685   001856  3424               	rlcf	(___ftdiv@f2+1)^0,w,c
  4686   001858  3626               	rlcf	??___ftdiv^0,f,c
  4687   00185A  E301               	bnc	u6371
  4688   00185C  8027               	bsf	(??___ftdiv+1)^0,0,c
  4689   00185E                     u6371:
  4690   00185E  5026               	movf	??___ftdiv^0,w,c
  4691   001860  6E2E               	movwf	___ftdiv@sign^0,c
  4692   001862  502E               	movf	___ftdiv@sign^0,w,c
  4693   001864  A4D8               	btfss	status,2,c
  4694   001866  D007               	goto	l6310
  4695                           
  4696                           ; BSR set to: 0
  4697   001868  0E00               	movlw	0
  4698   00186A  6E20               	movwf	?___ftdiv^0,c
  4699   00186C  0E00               	movlw	0
  4700   00186E  6E21               	movwf	(?___ftdiv+1)^0,c
  4701   001870  0E00               	movlw	0
  4702   001872  6E22               	movwf	(?___ftdiv+2)^0,c
  4703   001874  0012               	return	
  4704   001876                     l6310:
  4705                           
  4706                           ; BSR set to: 0
  4707   001876  0E00               	movlw	0
  4708   001878  6E2A               	movwf	___ftdiv@f3^0,c
  4709   00187A  0E00               	movlw	0
  4710   00187C  6E2B               	movwf	(___ftdiv@f3+1)^0,c
  4711   00187E  0E00               	movlw	0
  4712   001880  6E2C               	movwf	(___ftdiv@f3+2)^0,c
  4713                           
  4714                           ; BSR set to: 0
  4715   001882  502E               	movf	___ftdiv@sign^0,w,c
  4716   001884  0F89               	addlw	137
  4717   001886  5E2D               	subwf	___ftdiv@exp^0,f,c
  4718                           
  4719                           ; BSR set to: 0
  4720   001888  C022  F02E         	movff	___ftdiv@f1+2,___ftdiv@sign
  4721                           
  4722                           ; BSR set to: 0
  4723   00188C  5025               	movf	(___ftdiv@f2+2)^0,w,c
  4724   00188E  1A2E               	xorwf	___ftdiv@sign^0,f,c
  4725                           
  4726                           ; BSR set to: 0
  4727   001890  0E80               	movlw	128
  4728   001892  162E               	andwf	___ftdiv@sign^0,f,c
  4729                           
  4730                           ; BSR set to: 0
  4731   001894  8E21               	bsf	(___ftdiv@f1+1)^0,7,c
  4732                           
  4733                           ; BSR set to: 0
  4734   001896  0EFF               	movlw	255
  4735   001898  1620               	andwf	___ftdiv@f1^0,f,c
  4736   00189A  0EFF               	movlw	255
  4737   00189C  1621               	andwf	(___ftdiv@f1+1)^0,f,c
  4738   00189E  0E00               	movlw	0
  4739   0018A0  1622               	andwf	(___ftdiv@f1+2)^0,f,c
  4740                           
  4741                           ; BSR set to: 0
  4742   0018A2  8E24               	bsf	(___ftdiv@f2+1)^0,7,c
  4743                           
  4744                           ; BSR set to: 0
  4745   0018A4  0EFF               	movlw	255
  4746   0018A6  1623               	andwf	___ftdiv@f2^0,f,c
  4747   0018A8  0EFF               	movlw	255
  4748   0018AA  1624               	andwf	(___ftdiv@f2+1)^0,f,c
  4749   0018AC  0E00               	movlw	0
  4750   0018AE  1625               	andwf	(___ftdiv@f2+2)^0,f,c
  4751                           
  4752                           ; BSR set to: 0
  4753   0018B0  0E18               	movlw	24
  4754   0018B2  6E29               	movwf	___ftdiv@cntr^0,c
  4755   0018B4                     l6330:
  4756                           
  4757                           ; BSR set to: 0
  4758   0018B4  90D8               	bcf	status,0,c
  4759   0018B6  362A               	rlcf	___ftdiv@f3^0,f,c
  4760   0018B8  362B               	rlcf	(___ftdiv@f3+1)^0,f,c
  4761   0018BA  362C               	rlcf	(___ftdiv@f3+2)^0,f,c
  4762                           
  4763                           ; BSR set to: 0
  4764   0018BC  5023               	movf	___ftdiv@f2^0,w,c
  4765   0018BE  5C20               	subwf	___ftdiv@f1^0,w,c
  4766   0018C0  5024               	movf	(___ftdiv@f2+1)^0,w,c
  4767   0018C2  5821               	subwfb	(___ftdiv@f1+1)^0,w,c
  4768   0018C4  5025               	movf	(___ftdiv@f2+2)^0,w,c
  4769   0018C6  5822               	subwfb	(___ftdiv@f1+2)^0,w,c
  4770   0018C8  A0D8               	btfss	status,0,c
  4771   0018CA  D007               	goto	l950
  4772                           
  4773                           ; BSR set to: 0
  4774   0018CC  5023               	movf	___ftdiv@f2^0,w,c
  4775   0018CE  5E20               	subwf	___ftdiv@f1^0,f,c
  4776   0018D0  5024               	movf	(___ftdiv@f2+1)^0,w,c
  4777   0018D2  5A21               	subwfb	(___ftdiv@f1+1)^0,f,c
  4778   0018D4  5025               	movf	(___ftdiv@f2+2)^0,w,c
  4779   0018D6  5A22               	subwfb	(___ftdiv@f1+2)^0,f,c
  4780                           
  4781                           ; BSR set to: 0
  4782   0018D8  802A               	bsf	___ftdiv@f3^0,0,c
  4783   0018DA                     l950:
  4784                           
  4785                           ; BSR set to: 0
  4786   0018DA  90D8               	bcf	status,0,c
  4787   0018DC  3620               	rlcf	___ftdiv@f1^0,f,c
  4788   0018DE  3621               	rlcf	(___ftdiv@f1+1)^0,f,c
  4789   0018E0  3622               	rlcf	(___ftdiv@f1+2)^0,f,c
  4790                           
  4791                           ; BSR set to: 0
  4792   0018E2  2E29               	decfsz	___ftdiv@cntr^0,f,c
  4793   0018E4  D7E7               	goto	l6330
  4794                           
  4795                           ; BSR set to: 0
  4796   0018E6  C02A  F018         	movff	___ftdiv@f3,___ftpack@arg
  4797   0018EA  C02B  F019         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4798   0018EE  C02C  F01A         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4799   0018F2  C02D  F01B         	movff	___ftdiv@exp,___ftpack@exp
  4800   0018F6  C02E  F01C         	movff	___ftdiv@sign,___ftpack@sign
  4801   0018FA  EC06  F00F         	call	___ftpack	;wreg free
  4802   0018FE  C018  F020         	movff	?___ftpack,?___ftdiv
  4803   001902  C019  F021         	movff	?___ftpack+1,?___ftdiv+1
  4804   001906  C01A  F022         	movff	?___ftpack+2,?___ftdiv+2
  4805                           
  4806                           ; BSR set to: 0
  4807   00190A  0012               	return		;funcret
  4808   00190C                     __end_of___ftdiv:
  4809                           	callstack 0
  4810                           
  4811 ;; *************** function ___awtoft *****************
  4812 ;; Defined at:
  4813 ;;		line 32 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awtoft.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  c               2   31[COMRAM] int 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  sign            1   34[COMRAM] unsigned char 
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  3   31[COMRAM] float 
  4820 ;; Registers used:
  4821 ;;		wreg, status,2, status,0, cstack
  4822 ;; Tracked objects:
  4823 ;;		On entry : 3F/0
  4824 ;;		On exit  : 3F/0
  4825 ;;		Unchanged: 3F/0
  4826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4827 ;;      Params:         3       0       0       0       0       0       0       0       0
  4828 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4829 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4830 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4831 ;;Total ram usage:        4 bytes
  4832 ;; Hardware stack levels used: 1
  4833 ;; Hardware stack levels required when called: 9
  4834 ;; This function calls:
  4835 ;;		___ftpack
  4836 ;; This function is called by:
  4837 ;;		_ADC
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           	psect	text26
  4842   002B86                     __ptext26:
  4843                           	callstack 0
  4844   002B86                     ___awtoft:
  4845                           	callstack 20
  4846                           
  4847                           ; BSR set to: 0
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;incstack = 0
  4851   002B86  6A23               	clrf	___awtoft@sign^0,c
  4852                           
  4853                           ; BSR set to: 0
  4854   002B88  AE21               	btfss	(___awtoft@c+1)^0,7,c
  4855   002B8A  D006               	goto	l6352
  4856                           
  4857                           ; BSR set to: 0
  4858   002B8C  6C20               	negf	___awtoft@c^0,c
  4859   002B8E  1E21               	comf	(___awtoft@c+1)^0,f,c
  4860   002B90  B0D8               	btfsc	status,0,c
  4861   002B92  2A21               	incf	(___awtoft@c+1)^0,f,c
  4862                           
  4863                           ; BSR set to: 0
  4864   002B94  0E01               	movlw	1
  4865   002B96  6E23               	movwf	___awtoft@sign^0,c
  4866   002B98                     l6352:
  4867                           
  4868                           ; BSR set to: 0
  4869   002B98  C020  F018         	movff	___awtoft@c,___ftpack@arg
  4870   002B9C  C021  F019         	movff	___awtoft@c+1,___ftpack@arg+1
  4871   002BA0  6A1A               	clrf	(___ftpack@arg+2)^0,c
  4872   002BA2  0E8E               	movlw	142
  4873   002BA4  6E1B               	movwf	___ftpack@exp^0,c
  4874   002BA6  C023  F01C         	movff	___awtoft@sign,___ftpack@sign
  4875   002BAA  EC06  F00F         	call	___ftpack	;wreg free
  4876   002BAE  C018  F020         	movff	?___ftpack,?___awtoft
  4877   002BB2  C019  F021         	movff	?___ftpack+1,?___awtoft+1
  4878   002BB6  C01A  F022         	movff	?___ftpack+2,?___awtoft+2
  4879                           
  4880                           ; BSR set to: 0
  4881   002BBA  0012               	return		;funcret
  4882   002BBC                     __end_of___awtoft:
  4883                           	callstack 0
  4884                           
  4885 ;; *************** function _Transmitir *****************
  4886 ;; Defined at:
  4887 ;;		line 385 in file "Lab6.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;  pwm             3   70[BANK0 ] float 
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;		None
  4892 ;; Return value:  Size  Location     Type
  4893 ;;                  1    wreg      void 
  4894 ;; Registers used:
  4895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4896 ;; Tracked objects:
  4897 ;;		On entry : 3F/0
  4898 ;;		On exit  : 3F/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4901 ;;      Params:         0       3       0       0       0       0       0       0       0
  4902 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4903 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4904 ;;      Totals:         0       3       0       0       0       0       0       0       0
  4905 ;;Total ram usage:        3 bytes
  4906 ;; Hardware stack levels used: 1
  4907 ;; Hardware stack levels required when called: 12
  4908 ;; This function calls:
  4909 ;;		_printf
  4910 ;; This function is called by:
  4911 ;;		_ADC
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915                           	psect	text27
  4916   0029EA                     __ptext27:
  4917                           	callstack 0
  4918   0029EA                     _Transmitir:
  4919                           	callstack 17
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;Lab6.c: 386: printf("Valor de PWM: %.2f %%\r",pwm);
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;incstack = 0
  4926   0029EA  0E6E               	movlw	low STR_15
  4927   0029EC  6F82               	movwf	printf@f& (0+255),b
  4928   0029EE  0E7F               	movlw	high STR_15
  4929   0029F0  6F83               	movwf	(printf@f+1)& (0+255),b
  4930   0029F2  C0A6  F084         	movff	Transmitir@pwm,?_printf+2
  4931   0029F6  C0A7  F085         	movff	Transmitir@pwm+1,?_printf+3
  4932   0029FA  C0A8  F086         	movff	Transmitir@pwm+2,?_printf+4
  4933   0029FE  EC09  F000         	call	_printf	;wreg free
  4934                           
  4935                           ; BSR set to: 0
  4936                           ;Lab6.c: 387: if(dis==0)
  4937   002A02  5042               	movf	_dis^0,w,c
  4938   002A04  A4D8               	btfss	status,2,c
  4939   002A06  D007               	goto	l6296
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;Lab6.c: 388: printf("Falla en el sensor\r");
  4943   002A08  0E85               	movlw	low STR_16
  4944   002A0A  6F82               	movwf	printf@f& (0+255),b
  4945   002A0C  0E7F               	movlw	high STR_16
  4946   002A0E  6F83               	movwf	(printf@f+1)& (0+255),b
  4947   002A10  EC09  F000         	call	_printf	;wreg free
  4948   002A14  0012               	return	
  4949   002A16                     l6296:
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;Lab6.c: 389: else;Lab6.c: 390: printf("Distancia objeto: %d cm\r",dis);
  4953   002A16  0E55               	movlw	low STR_17
  4954   002A18  6F82               	movwf	printf@f& (0+255),b
  4955   002A1A  0E7F               	movlw	high STR_17
  4956   002A1C  6F83               	movwf	(printf@f+1)& (0+255),b
  4957   002A1E  C042  F084         	movff	_dis,?_printf+2
  4958   002A22  6B85               	clrf	(?_printf+3)& (0+255),b
  4959   002A24  EC09  F000         	call	_printf	;wreg free
  4960                           
  4961                           ; BSR set to: 0
  4962   002A28  0012               	return		;funcret
  4963   002A2A                     __end_of_Transmitir:
  4964                           	callstack 0
  4965                           
  4966 ;; *************** function _printf *****************
  4967 ;; Defined at:
  4968 ;;		line 477 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\doprnt.c"
  4969 ;; Parameters:    Size  Location     Type
  4970 ;;  f               2   34[BANK0 ] PTR const unsigned char 
  4971 ;;		 -> STR_17(25), STR_16(20), STR_15(23), 
  4972 ;; Auto vars:     Size  Location     Type
  4973 ;;  val             4   60[BANK0 ] unsigned long 
  4974 ;;  tmpval          4   56[BANK0 ] struct .
  4975 ;;  fval            3   64[BANK0 ] struct .
  4976 ;;  prec            2   67[BANK0 ] int 
  4977 ;;  eexp            2   54[BANK0 ] int 
  4978 ;;  flag            2   52[BANK0 ] unsigned short 
  4979 ;;  len             2   49[BANK0 ] unsigned int 
  4980 ;;  width           2    0        int 
  4981 ;;  c               1   69[BANK0 ] unsigned char 
  4982 ;;  ap              1   51[BANK0 ] PTR void [1]
  4983 ;;		 -> ?_printf(2), 
  4984 ;;  cp              1   48[BANK0 ] PTR const unsigned char 
  4985 ;;		 -> printf@c(1), 
  4986 ;;  d               1    0        unsigned char 
  4987 ;; Return value:  Size  Location     Type
  4988 ;;                  2   34[BANK0 ] int 
  4989 ;; Registers used:
  4990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4991 ;; Tracked objects:
  4992 ;;		On entry : 3F/0
  4993 ;;		On exit  : 3F/0
  4994 ;;		Unchanged: 0/0
  4995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4996 ;;      Params:         0       5       0       0       0       0       0       0       0
  4997 ;;      Locals:         0      25       0       0       0       0       0       0       0
  4998 ;;      Temps:          0       6       0       0       0       0       0       0       0
  4999 ;;      Totals:         0      36       0       0       0       0       0       0       0
  5000 ;;Total ram usage:       36 bytes
  5001 ;; Hardware stack levels used: 1
  5002 ;; Hardware stack levels required when called: 11
  5003 ;; This function calls:
  5004 ;;		___awdiv
  5005 ;;		___ftadd
  5006 ;;		___ftge
  5007 ;;		___ftmul
  5008 ;;		___ftneg
  5009 ;;		___ftsub
  5010 ;;		___fttol
  5011 ;;		___lldiv
  5012 ;;		___llmod
  5013 ;;		___lltoft
  5014 ;;		___wmul
  5015 ;;		__div_to_l_
  5016 ;;		__tdiv_to_l_
  5017 ;;		_fround
  5018 ;;		_isdigit
  5019 ;;		_putch
  5020 ;;		_scale
  5021 ;; This function is called by:
  5022 ;;		_Transmitir
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text28
  5027   000012                     __ptext28:
  5028                           	callstack 0
  5029   000012                     _printf:
  5030                           	callstack 17
  5031                           
  5032                           ; BSR set to: 0
  5033                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;incstack = 0
  5037   000012  0E84               	movlw	low (?_printf+2)
  5038   000014  6F93               	movwf	printf@ap& (0+255),b
  5039                           
  5040                           ;doprnt.c: 553: while((c = *f++)) {
  5041   000016  D3E8               	goto	u6320
  5042   000018                     l6014:
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;doprnt.c: 555: if(c != '%')
  5046   000018  0E25               	movlw	37
  5047   00001A  19A5               	xorwf	printf@c& (0+255),w,b
  5048   00001C  B4D8               	btfsc	status,2,c
  5049   00001E  D004               	goto	l6018
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  5053   000020  51A5               	movf	printf@c& (0+255),w,b
  5054   000022  EC03  F017         	call	_putch
  5055                           
  5056                           ;doprnt.c: 559: continue;
  5057   000026  D3E0               	goto	u6320
  5058   000028                     l6018:
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  5062   000028  0E00               	movlw	0
  5063   00002A  6F95               	movwf	(printf@flag+1)& (0+255),b
  5064   00002C  0E00               	movlw	0
  5065   00002E  6F94               	movwf	printf@flag& (0+255),b
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;doprnt.c: 628: if(*f == '.') {
  5069   000030  C082  FFF6         	movff	printf@f,tblptrl
  5070   000034  C083  FFF7         	movff	printf@f+1,tblptrh
  5071   000038                     	if	0	;tblptru may be non-zero
  5072   000038                     	endif
  5073   000038                     	if	0	;tblptru may be non-zero
  5074   000038                     	endif
  5075   000038  0008               	tblrd		*
  5076   00003A  50F5               	movf	tablat,w,c
  5077   00003C  0A2E               	xorlw	46
  5078   00003E  A4D8               	btfss	status,2,c
  5079   000040  D035               	goto	l6034
  5080                           
  5081                           ; BSR set to: 0
  5082                           ;doprnt.c: 629: flag |= 0x4000;
  5083   000042  8D95               	bsf	(printf@flag+1)& (0+255),6,b
  5084                           
  5085                           ;doprnt.c: 630: f++;
  5086   000044  4B82               	infsnz	printf@f& (0+255),f,b
  5087   000046  2B83               	incf	(printf@f+1)& (0+255),f,b
  5088                           
  5089                           ; BSR set to: 0
  5090                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  5091   000048  0E00               	movlw	0
  5092   00004A  6FA4               	movwf	(printf@prec+1)& (0+255),b
  5093   00004C  0E00               	movlw	0
  5094   00004E  6FA3               	movwf	printf@prec& (0+255),b
  5095                           
  5096                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  5097   000050  D022               	goto	l6032
  5098   000052                     l6026:
  5099                           
  5100                           ;doprnt.c: 647: prec *= 10;
  5101   000052  C0A3  F018         	movff	printf@prec,___wmul@multiplier
  5102   000056  C0A4  F019         	movff	printf@prec+1,___wmul@multiplier+1
  5103   00005A  0E00               	movlw	0
  5104   00005C  6E1B               	movwf	(___wmul@multiplicand+1)^0,c
  5105   00005E  0E0A               	movlw	10
  5106   000060  6E1A               	movwf	___wmul@multiplicand^0,c
  5107   000062  EC63  F016         	call	___wmul	;wreg free
  5108   000066  C018  F0A3         	movff	?___wmul,printf@prec
  5109   00006A  C019  F0A4         	movff	?___wmul+1,printf@prec+1
  5110                           
  5111                           ;doprnt.c: 648: prec += *f++ - '0';
  5112   00006E  C082  FFF6         	movff	printf@f,tblptrl
  5113   000072  C083  FFF7         	movff	printf@f+1,tblptrh
  5114   000076                     	if	0	;tblptru may be non-zero
  5115   000076                     	endif
  5116   000076                     	if	0	;tblptru may be non-zero
  5117   000076                     	endif
  5118   000076  0008               	tblrd		*
  5119   000078  CFF5 F087          	movff	tablat,??_printf
  5120   00007C  0ED0               	movlw	208
  5121   00007E  0100               	movlb	0	; () banked
  5122   000080  2587               	addwf	??_printf& (0+255),w,b
  5123   000082  6F88               	movwf	(??_printf+1)& (0+255),b
  5124   000084  6B89               	clrf	(??_printf+2)& (0+255),b
  5125   000086  0EFF               	movlw	255
  5126   000088  2389               	addwfc	(??_printf+2)& (0+255),f,b
  5127   00008A  5188               	movf	(??_printf+1)& (0+255),w,b
  5128   00008C  27A3               	addwf	printf@prec& (0+255),f,b
  5129   00008E  5189               	movf	(??_printf+2)& (0+255),w,b
  5130   000090  23A4               	addwfc	(printf@prec+1)& (0+255),f,b
  5131                           
  5132                           ; BSR set to: 0
  5133   000092  4B82               	infsnz	printf@f& (0+255),f,b
  5134   000094  2B83               	incf	(printf@f+1)& (0+255),f,b
  5135   000096                     l6032:
  5136                           
  5137                           ; BSR set to: 0
  5138   000096  C082  FFF6         	movff	printf@f,tblptrl
  5139   00009A  C083  FFF7         	movff	printf@f+1,tblptrh
  5140   00009E                     	if	0	;tblptru may be non-zero
  5141   00009E                     	endif
  5142   00009E                     	if	0	;tblptru may be non-zero
  5143   00009E                     	endif
  5144   00009E  0008               	tblrd		*
  5145   0000A0  50F5               	movf	tablat,w,c
  5146   0000A2  EC9B  F016         	call	_isdigit
  5147   0000A6  A0D8               	btfss	status,0,c
  5148   0000A8  D031               	goto	l6058
  5149   0000AA  D7D3               	goto	l6026
  5150   0000AC                     l6034:
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;doprnt.c: 652: prec = 0;
  5154   0000AC  0E00               	movlw	0
  5155   0000AE  6FA4               	movwf	(printf@prec+1)& (0+255),b
  5156   0000B0  0E00               	movlw	0
  5157   0000B2  6FA3               	movwf	printf@prec& (0+255),b
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;doprnt.c: 654: flag |= 0x1000;
  5161   0000B4  8995               	bsf	(printf@flag+1)& (0+255),4,b
  5162   0000B6  D02A               	goto	l6058
  5163   0000B8                     l6038:
  5164                           
  5165                           ; BSR set to: 0
  5166                           ;doprnt.c: 689: flag |= 0x400;
  5167   0000B8  8595               	bsf	(printf@flag+1)& (0+255),2,b
  5168                           
  5169                           ;doprnt.c: 690: break;
  5170   0000BA  D03F               	goto	l6060
  5171   0000BC                     l6040:
  5172                           
  5173                           ; BSR set to: 0
  5174                           ;doprnt.c: 779: if(prec && (prec < ((int)len)))
  5175   0000BC  51A3               	movf	printf@prec& (0+255),w,b
  5176   0000BE  11A4               	iorwf	(printf@prec+1)& (0+255),w,b
  5177   0000C0  B4D8               	btfsc	status,2,c
  5178   0000C2  D014               	goto	l6050
  5179                           
  5180                           ; BSR set to: 0
  5181   0000C4  BFA4               	btfsc	(printf@prec+1)& (0+255),7,b
  5182   0000C6  D005               	goto	u5990
  5183   0000C8  51A4               	movf	(printf@prec+1)& (0+255),w,b
  5184   0000CA  E110               	bnz	l6050
  5185   0000CC  05A3               	decf	printf@prec& (0+255),w,b
  5186   0000CE  B0D8               	btfsc	status,0,c
  5187   0000D0  D00D               	goto	l6050
  5188   0000D2                     u5990:
  5189                           
  5190                           ; BSR set to: 0
  5191                           ;doprnt.c: 780: len = (unsigned int)prec;
  5192   0000D2  C0A3  F091         	movff	printf@prec,printf@len
  5193   0000D6  C0A4  F092         	movff	printf@prec+1,printf@len+1
  5194   0000DA  D008               	goto	l6050
  5195   0000DC                     l6046:
  5196                           
  5197                           ; BSR set to: 0
  5198                           ;doprnt.c: 794: (putch(*cp++) );
  5199   0000DC  5190               	movf	printf@cp& (0+255),w,b
  5200   0000DE  6ED9               	movwf	fsr2l,c
  5201   0000E0  6ADA               	clrf	fsr2h,c
  5202   0000E2  50DF               	movf	indf2,w,c
  5203   0000E4  EC03  F017         	call	_putch
  5204   0000E8  0100               	movlb	0	; () banked
  5205   0000EA  2B90               	incf	printf@cp& (0+255),f,b
  5206   0000EC                     l6050:
  5207                           
  5208                           ; BSR set to: 0
  5209   0000EC  0791               	decf	printf@len& (0+255),f,b
  5210   0000EE  A0D8               	btfss	status,0,c
  5211   0000F0  0792               	decf	(printf@len+1)& (0+255),f,b
  5212   0000F2  2991               	incf	printf@len& (0+255),w,b
  5213   0000F4  E1F3               	bnz	l6046
  5214   0000F6  2992               	incf	(printf@len+1)& (0+255),w,b
  5215   0000F8  B4D8               	btfsc	status,2,c
  5216   0000FA  D376               	goto	u6320
  5217   0000FC  D7EF               	goto	l6046
  5218   0000FE                     l6052:
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;doprnt.c: 831: cp = (char *)&c;
  5222   0000FE  0EA5               	movlw	low printf@c
  5223   000100  6F90               	movwf	printf@cp& (0+255),b
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;doprnt.c: 832: len = 1;
  5227   000102  0E00               	movlw	0
  5228   000104  6F92               	movwf	(printf@len+1)& (0+255),b
  5229   000106  0E01               	movlw	1
  5230   000108  6F91               	movwf	printf@len& (0+255),b
  5231                           
  5232                           ;doprnt.c: 833: goto dostring;
  5233   00010A  D7D8               	goto	l6040
  5234   00010C                     l6058:
  5235   00010C  C082  FFF6         	movff	printf@f,tblptrl
  5236   000110  C083  FFF7         	movff	printf@f+1,tblptrh
  5237   000114  0100               	movlb	0	; () banked
  5238   000116  4B82               	infsnz	printf@f& (0+255),f,b
  5239   000118  2B83               	incf	(printf@f+1)& (0+255),f,b
  5240   00011A                     	if	0	;tblptru may be non-zero
  5241   00011A                     	endif
  5242   00011A                     	if	0	;tblptru may be non-zero
  5243   00011A                     	endif
  5244   00011A  0008               	tblrd		*
  5245   00011C  CFF5 F0A5          	movff	tablat,printf@c
  5246   000120  51A5               	movf	printf@c& (0+255),w,b
  5247                           
  5248                           ; Switch size 1, requested type "simple"
  5249                           ; Number of cases is 4, Range of values is 0 to 105
  5250                           ; switch strategies available:
  5251                           ; Name         Instructions Cycles
  5252                           ; simple_byte           13     7 (average)
  5253                           ;	Chosen strategy is simple_byte
  5254   000122  0A00               	xorlw	0	; case 0
  5255   000124  B4D8               	btfsc	status,2,c
  5256   000126  0012               	return	
  5257   000128  0A64               	xorlw	100	; case 100
  5258   00012A  B4D8               	btfsc	status,2,c
  5259   00012C  D006               	goto	l6060
  5260   00012E  0A02               	xorlw	2	; case 102
  5261   000130  B4D8               	btfsc	status,2,c
  5262   000132  D7C2               	goto	l6038
  5263   000134  0A0F               	xorlw	15	; case 105
  5264   000136  A4D8               	btfss	status,2,c
  5265   000138  D7E2               	goto	l6052
  5266   00013A                     l6060:
  5267                           
  5268                           ; BSR set to: 0
  5269                           ;doprnt.c: 851: if(flag & (0x700)) {
  5270   00013A  0E07               	movlw	7
  5271   00013C  1595               	andwf	(printf@flag+1)& (0+255),w,b
  5272   00013E  B4D8               	btfsc	status,2,c
  5273   000140  D2A1               	goto	l6194
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;doprnt.c: 853: if(flag & 0x1000)
  5277   000142  A995               	btfss	(printf@flag+1)& (0+255),4,b
  5278   000144  D004               	goto	l6066
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;doprnt.c: 855: prec = 6;
  5282   000146  0E00               	movlw	0
  5283   000148  6FA4               	movwf	(printf@prec+1)& (0+255),b
  5284   00014A  0E06               	movlw	6
  5285   00014C  6FA3               	movwf	printf@prec& (0+255),b
  5286   00014E                     l6066:
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  5290   00014E  5193               	movf	printf@ap& (0+255),w,b
  5291   000150  6ED9               	movwf	fsr2l,c
  5292   000152  6ADA               	clrf	fsr2h,c
  5293   000154  CFDE F0A0          	movff	postinc2,printf@fval
  5294   000158  CFDE F0A1          	movff	postinc2,printf@fval+1
  5295   00015C  CFDD F0A2          	movff	postdec2,printf@fval+2
  5296                           
  5297                           ; BSR set to: 0
  5298   000160  0E03               	movlw	3
  5299   000162  2793               	addwf	printf@ap& (0+255),f,b
  5300                           
  5301                           ; BSR set to: 0
  5302                           ;doprnt.c: 857: if(fval < 0.0) {
  5303   000164  AFA2               	btfss	(printf@fval+2)& (0+255),7,b
  5304   000166  D010               	goto	l6076
  5305                           
  5306                           ; BSR set to: 0
  5307                           ;doprnt.c: 858: fval = -fval;
  5308   000168  C0A0  F018         	movff	printf@fval,___ftneg@f1
  5309   00016C  C0A1  F019         	movff	printf@fval+1,___ftneg@f1+1
  5310   000170  C0A2  F01A         	movff	printf@fval+2,___ftneg@f1+2
  5311   000174  EC89  F016         	call	___ftneg	;wreg free
  5312   000178  C018  F0A0         	movff	?___ftneg,printf@fval
  5313   00017C  C019  F0A1         	movff	?___ftneg+1,printf@fval+1
  5314   000180  C01A  F0A2         	movff	?___ftneg+2,printf@fval+2
  5315                           
  5316                           ; BSR set to: 0
  5317                           ;doprnt.c: 859: flag |= 0x03;
  5318   000184  0E03               	movlw	3
  5319   000186  1394               	iorwf	printf@flag& (0+255),f,b
  5320   000188                     l6076:
  5321                           
  5322                           ; BSR set to: 0
  5323                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  5324   000188  0E00               	movlw	0
  5325   00018A  6F97               	movwf	(printf@eexp+1)& (0+255),b
  5326   00018C  0E00               	movlw	0
  5327   00018E  6F96               	movwf	printf@eexp& (0+255),b
  5328                           
  5329                           ; BSR set to: 0
  5330                           ;doprnt.c: 862: if( fval!=0) {
  5331   000190  51A0               	movf	printf@fval& (0+255),w,b
  5332   000192  11A1               	iorwf	(printf@fval+1)& (0+255),w,b
  5333   000194  11A2               	iorwf	(printf@fval+2)& (0+255),w,b
  5334   000196  B4D8               	btfsc	status,2,c
  5335   000198  D086               	goto	l6104
  5336                           
  5337                           ; BSR set to: 0
  5338                           ;doprnt.c: 863: (void)(*(&eexp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  5339   00019A  0E82               	movlw	130
  5340   00019C  6F87               	movwf	??_printf& (0+255),b
  5341   00019E  0EFF               	movlw	255
  5342   0001A0  6F88               	movwf	(??_printf+1)& (0+255),b
  5343   0001A2  C0A0  F089         	movff	printf@fval,??_printf+2
  5344   0001A6  C0A1  F08A         	movff	printf@fval+1,??_printf+3
  5345   0001AA  C0A2  F08B         	movff	printf@fval+2,??_printf+4
  5346   0001AE  C0A3  F08C         	movff	printf@fval+3,??_printf+5
  5347   0001B2  0E10               	movlw	16
  5348   0001B4  D005               	goto	u6050
  5349   0001B6                     u6055:
  5350   0001B6  90D8               	bcf	status,0,c
  5351   0001B8  338C               	rrcf	(??_printf+5)& (0+255),f,b
  5352   0001BA  338B               	rrcf	(??_printf+4)& (0+255),f,b
  5353   0001BC  338A               	rrcf	(??_printf+3)& (0+255),f,b
  5354   0001BE  3389               	rrcf	(??_printf+2)& (0+255),f,b
  5355   0001C0                     u6050:
  5356   0001C0  2EE8               	decfsz	wreg,f,c
  5357   0001C2  D7F9               	goto	u6055
  5358   0001C4  5189               	movf	(??_printf+2)& (0+255),w,b
  5359   0001C6  2587               	addwf	??_printf& (0+255),w,b
  5360   0001C8  6F96               	movwf	printf@eexp& (0+255),b
  5361   0001CA  0E00               	movlw	0
  5362   0001CC  2188               	addwfc	(??_printf+1)& (0+255),w,b
  5363   0001CE  6F97               	movwf	(printf@eexp+1)& (0+255),b
  5364                           
  5365                           ; BSR set to: 0
  5366                           ;doprnt.c: 864: eexp--;
  5367   0001D0  0796               	decf	printf@eexp& (0+255),f,b
  5368   0001D2  A0D8               	btfss	status,0,c
  5369   0001D4  0797               	decf	(printf@eexp+1)& (0+255),f,b
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;doprnt.c: 865: eexp *= 3;
  5373   0001D6  C096  F018         	movff	printf@eexp,___wmul@multiplier
  5374   0001DA  C097  F019         	movff	printf@eexp+1,___wmul@multiplier+1
  5375   0001DE  0E00               	movlw	0
  5376   0001E0  6E1B               	movwf	(___wmul@multiplicand+1)^0,c
  5377   0001E2  0E03               	movlw	3
  5378   0001E4  6E1A               	movwf	___wmul@multiplicand^0,c
  5379   0001E6  EC63  F016         	call	___wmul	;wreg free
  5380   0001EA  C018  F096         	movff	?___wmul,printf@eexp
  5381   0001EE  C019  F097         	movff	?___wmul+1,printf@eexp+1
  5382                           
  5383                           ;doprnt.c: 866: eexp /= 10;
  5384   0001F2  C096  F01E         	movff	printf@eexp,___awdiv@dividend
  5385   0001F6  C097  F01F         	movff	printf@eexp+1,___awdiv@dividend+1
  5386   0001FA  0E00               	movlw	0
  5387   0001FC  6E21               	movwf	(___awdiv@divisor+1)^0,c
  5388   0001FE  0E0A               	movlw	10
  5389   000200  6E20               	movwf	___awdiv@divisor^0,c
  5390   000202  ECA6  F010         	call	___awdiv	;wreg free
  5391   000206  C01E  F096         	movff	?___awdiv,printf@eexp
  5392   00020A  C01F  F097         	movff	?___awdiv+1,printf@eexp+1
  5393                           
  5394                           ;doprnt.c: 867: if(eexp < 0)
  5395   00020E  0100               	movlb	0	; () banked
  5396   000210  AF97               	btfss	(printf@eexp+1)& (0+255),7,b
  5397   000212  D003               	goto	l6092
  5398                           
  5399                           ; BSR set to: 0
  5400                           ;doprnt.c: 868: eexp--;
  5401   000214  0796               	decf	printf@eexp& (0+255),f,b
  5402   000216  A0D8               	btfss	status,0,c
  5403   000218  0797               	decf	(printf@eexp+1)& (0+255),f,b
  5404   00021A                     l6092:
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  5408   00021A  5196               	movf	printf@eexp& (0+255),w,b
  5409   00021C  0800               	sublw	0
  5410   00021E  EC02  F004         	call	_scale
  5411   000222  C066  F098         	movff	?_scale,printf@tmpval
  5412   000226  C067  F099         	movff	?_scale+1,printf@tmpval+1
  5413   00022A  C068  F09A         	movff	?_scale+2,printf@tmpval+2
  5414                           
  5415                           ; BSR set to: 0
  5416                           ;doprnt.c: 873: tmpval.integ *= fval;
  5417   00022E  C098  F026         	movff	printf@tmpval,___ftmul@f1
  5418   000232  C099  F027         	movff	printf@tmpval+1,___ftmul@f1+1
  5419   000236  C09A  F028         	movff	printf@tmpval+2,___ftmul@f1+2
  5420   00023A  C0A0  F029         	movff	printf@fval,___ftmul@f2
  5421   00023E  C0A1  F02A         	movff	printf@fval+1,___ftmul@f2+1
  5422   000242  C0A2  F02B         	movff	printf@fval+2,___ftmul@f2+2
  5423   000246  ECAB  F00A         	call	___ftmul	;wreg free
  5424   00024A  C026  F098         	movff	?___ftmul,printf@tmpval
  5425   00024E  C027  F099         	movff	?___ftmul+1,printf@tmpval+1
  5426   000252  C028  F09A         	movff	?___ftmul+2,printf@tmpval+2
  5427                           
  5428                           ; BSR set to: 0
  5429                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  5430   000256  C098  F018         	movff	printf@tmpval,___ftge@ff1
  5431   00025A  C099  F019         	movff	printf@tmpval+1,___ftge@ff1+1
  5432   00025E  C09A  F01A         	movff	printf@tmpval+2,___ftge@ff1+2
  5433   000262  0E00               	movlw	0
  5434   000264  6E1B               	movwf	___ftge@ff2^0,c
  5435   000266  0E80               	movlw	128
  5436   000268  6E1C               	movwf	(___ftge@ff2+1)^0,c
  5437   00026A  0E3F               	movlw	63
  5438   00026C  6E1D               	movwf	(___ftge@ff2+2)^0,c
  5439   00026E  ECE3  F011         	call	___ftge	;wreg free
  5440   000272  B0D8               	btfsc	status,0,c
  5441   000274  D005               	goto	l6100
  5442                           
  5443                           ;doprnt.c: 875: eexp--;
  5444   000276  0100               	movlb	0	; () banked
  5445   000278  0796               	decf	printf@eexp& (0+255),f,b
  5446   00027A  A0D8               	btfss	status,0,c
  5447   00027C  0797               	decf	(printf@eexp+1)& (0+255),f,b
  5448   00027E  D013               	goto	l6104
  5449   000280                     l6100:
  5450                           
  5451                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  5452   000280  C098  F018         	movff	printf@tmpval,___ftge@ff1
  5453   000284  C099  F019         	movff	printf@tmpval+1,___ftge@ff1+1
  5454   000288  C09A  F01A         	movff	printf@tmpval+2,___ftge@ff1+2
  5455   00028C  0E00               	movlw	0
  5456   00028E  6E1B               	movwf	___ftge@ff2^0,c
  5457   000290  0E20               	movlw	32
  5458   000292  6E1C               	movwf	(___ftge@ff2+1)^0,c
  5459   000294  0E41               	movlw	65
  5460   000296  6E1D               	movwf	(___ftge@ff2+2)^0,c
  5461   000298  ECE3  F011         	call	___ftge	;wreg free
  5462   00029C  A0D8               	btfss	status,0,c
  5463   00029E  D003               	goto	l6104
  5464                           
  5465                           ;doprnt.c: 877: eexp++;
  5466   0002A0  0100               	movlb	0	; () banked
  5467   0002A2  4B96               	infsnz	printf@eexp& (0+255),f,b
  5468   0002A4  2B97               	incf	(printf@eexp+1)& (0+255),f,b
  5469   0002A6                     l6104:
  5470                           
  5471                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  5472   0002A6  0100               	movlb	0	; () banked
  5473   0002A8  BFA4               	btfsc	(printf@prec+1)& (0+255),7,b
  5474   0002AA  D006               	goto	u6090
  5475   0002AC  51A4               	movf	(printf@prec+1)& (0+255),w,b
  5476   0002AE  E11B               	bnz	l6108
  5477   0002B0  0E0D               	movlw	13
  5478   0002B2  5DA3               	subwf	printf@prec& (0+255),w,b
  5479   0002B4  B0D8               	btfsc	status,0,c
  5480   0002B6  D017               	goto	l6108
  5481   0002B8                     u6090:
  5482                           
  5483                           ; BSR set to: 0
  5484                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  5485   0002B8  C0A0  F070         	movff	printf@fval,___ftadd@f1
  5486   0002BC  C0A1  F071         	movff	printf@fval+1,___ftadd@f1+1
  5487   0002C0  C0A2  F072         	movff	printf@fval+2,___ftadd@f1+2
  5488   0002C4  51A3               	movf	printf@prec& (0+255),w,b
  5489   0002C6  ECBB  F005         	call	_fround
  5490   0002CA  C066  F073         	movff	?_fround,___ftadd@f2
  5491   0002CE  C067  F074         	movff	?_fround+1,___ftadd@f2+1
  5492   0002D2  C068  F075         	movff	?_fround+2,___ftadd@f2+2
  5493   0002D6  ECB0  F006         	call	___ftadd	;wreg free
  5494   0002DA  C070  F0A0         	movff	?___ftadd,printf@fval
  5495   0002DE  C071  F0A1         	movff	?___ftadd+1,printf@fval+1
  5496   0002E2  C072  F0A2         	movff	?___ftadd+2,printf@fval+2
  5497   0002E6                     l6108:
  5498                           
  5499                           ; BSR set to: 0
  5500                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  5501   0002E6  BF97               	btfsc	(printf@eexp+1)& (0+255),7,b
  5502   0002E8  D006               	goto	u6100
  5503   0002EA  5197               	movf	(printf@eexp+1)& (0+255),w,b
  5504   0002EC  E11E               	bnz	l6116
  5505   0002EE  0E0A               	movlw	10
  5506   0002F0  5D96               	subwf	printf@eexp& (0+255),w,b
  5507   0002F2  B0D8               	btfsc	status,0,c
  5508   0002F4  D01A               	goto	u6130
  5509   0002F6                     u6100:
  5510                           
  5511                           ; BSR set to: 0
  5512   0002F6  51A0               	movf	printf@fval& (0+255),w,b
  5513   0002F8  11A1               	iorwf	(printf@fval+1)& (0+255),w,b
  5514   0002FA  11A2               	iorwf	(printf@fval+2)& (0+255),w,b
  5515   0002FC  B4D8               	btfsc	status,2,c
  5516   0002FE  D054               	goto	l6130
  5517                           
  5518                           ; BSR set to: 0
  5519   000300  C0A0  F06D         	movff	printf@fval,___fttol@f1
  5520   000304  C0A1  F06E         	movff	printf@fval+1,___fttol@f1+1
  5521   000308  C0A2  F06F         	movff	printf@fval+2,___fttol@f1+2
  5522   00030C  EC45  F00E         	call	___fttol	;wreg free
  5523   000310  516D               	movf	?___fttol& (0+255),w,b
  5524   000312  116E               	iorwf	(?___fttol+1)& (0+255),w,b
  5525   000314  116F               	iorwf	(?___fttol+2)& (0+255),w,b
  5526   000316  1170               	iorwf	(?___fttol+3)& (0+255),w,b
  5527   000318  B4D8               	btfsc	status,2,c
  5528                           
  5529                           ; BSR set to: 0
  5530   00031A  BF97               	btfsc	(printf@eexp+1)& (0+255),7,b
  5531   00031C  D045               	goto	l6130
  5532   00031E  5197               	movf	(printf@eexp+1)& (0+255),w,b
  5533   000320  E104               	bnz	u6130
  5534   000322  0E02               	movlw	2
  5535   000324  5D96               	subwf	printf@eexp& (0+255),w,b
  5536   000326  A0D8               	btfss	status,0,c
  5537   000328  D03F               	goto	l6130
  5538   00032A                     u6130:
  5539   00032A                     l6116:
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  5543   00032A  C098  F018         	movff	printf@tmpval,___ftge@ff1
  5544   00032E  C099  F019         	movff	printf@tmpval+1,___ftge@ff1+1
  5545   000332  C09A  F01A         	movff	printf@tmpval+2,___ftge@ff1+2
  5546   000336  0E70               	movlw	112
  5547   000338  6E1B               	movwf	___ftge@ff2^0,c
  5548   00033A  0E89               	movlw	137
  5549   00033C  6E1C               	movwf	(___ftge@ff2+1)^0,c
  5550   00033E  0E40               	movlw	64
  5551   000340  6E1D               	movwf	(___ftge@ff2+2)^0,c
  5552   000342  ECE3  F011         	call	___ftge	;wreg free
  5553   000346  B0D8               	btfsc	status,0,c
  5554   000348  D003               	goto	l6120
  5555                           
  5556                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  5557   00034A  0100               	movlb	0	; () banked
  5558   00034C  0EF7               	movlw	247
  5559   00034E  D002               	goto	L9
  5560   000350                     l6120:
  5561                           
  5562                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  5563   000350  0100               	movlb	0	; () banked
  5564   000352  0EF8               	movlw	248
  5565   000354                     L9:
  5566   000354  2796               	addwf	printf@eexp& (0+255),f,b
  5567   000356  0EFF               	movlw	255
  5568   000358  2397               	addwfc	(printf@eexp+1)& (0+255),f,b
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;doprnt.c: 1150: };doprnt.c: 1151: tmpval.integ = scale(eexp);
  5572   00035A  5196               	movf	printf@eexp& (0+255),w,b
  5573   00035C  EC02  F004         	call	_scale
  5574   000360  C066  F098         	movff	?_scale,printf@tmpval
  5575   000364  C067  F099         	movff	?_scale+1,printf@tmpval+1
  5576   000368  C068  F09A         	movff	?_scale+2,printf@tmpval+2
  5577                           
  5578                           ; BSR set to: 0
  5579                           
  5580                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  5581   00036C  C0A0  F018         	movff	printf@fval,__tdiv_to_l_@f1
  5582   000370  C0A1  F019         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  5583   000374  C0A2  F01A         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  5584   000378  C098  F01B         	movff	printf@tmpval,__tdiv_to_l_@f2
  5585   00037C  C099  F01C         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  5586   000380  C09A  F01D         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  5587   000384  EC2C  F00A         	call	__tdiv_to_l_	;wreg free
  5588   000388  C018  F09C         	movff	?__tdiv_to_l_,printf@val
  5589   00038C  C019  F09D         	movff	?__tdiv_to_l_+1,printf@val+1
  5590   000390  C01A  F09E         	movff	?__tdiv_to_l_+2,printf@val+2
  5591   000394  C01B  F09F         	movff	?__tdiv_to_l_+3,printf@val+3
  5592                           
  5593                           ;doprnt.c: 1155: fval = 0.0;
  5594   000398  0E00               	movlw	0
  5595   00039A  0100               	movlb	0	; () banked
  5596   00039C  6FA0               	movwf	printf@fval& (0+255),b
  5597   00039E  0E00               	movlw	0
  5598   0003A0  6FA1               	movwf	(printf@fval+1)& (0+255),b
  5599   0003A2  0E00               	movlw	0
  5600   0003A4  6FA2               	movwf	(printf@fval+2)& (0+255),b
  5601                           
  5602                           ;doprnt.c: 1156: } else {
  5603   0003A6  D032               	goto	l6134
  5604   0003A8                     l6130:
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;doprnt.c: 1157: val = (unsigned long)fval;
  5608   0003A8  C0A0  F06D         	movff	printf@fval,___fttol@f1
  5609   0003AC  C0A1  F06E         	movff	printf@fval+1,___fttol@f1+1
  5610   0003B0  C0A2  F06F         	movff	printf@fval+2,___fttol@f1+2
  5611   0003B4  EC45  F00E         	call	___fttol	;wreg free
  5612   0003B8  C06D  F09C         	movff	?___fttol,printf@val
  5613   0003BC  C06E  F09D         	movff	?___fttol+1,printf@val+1
  5614   0003C0  C06F  F09E         	movff	?___fttol+2,printf@val+2
  5615   0003C4  C070  F09F         	movff	?___fttol+3,printf@val+3
  5616                           
  5617                           ;doprnt.c: 1158: fval -= (double)val;
  5618   0003C8  C0A0  F07C         	movff	printf@fval,___ftsub@f1
  5619   0003CC  C0A1  F07D         	movff	printf@fval+1,___ftsub@f1+1
  5620   0003D0  C0A2  F07E         	movff	printf@fval+2,___ftsub@f1+2
  5621   0003D4  C09C  F020         	movff	printf@val,___lltoft@c
  5622   0003D8  C09D  F021         	movff	printf@val+1,___lltoft@c+1
  5623   0003DC  C09E  F022         	movff	printf@val+2,___lltoft@c+2
  5624   0003E0  C09F  F023         	movff	printf@val+3,___lltoft@c+3
  5625   0003E4  EC90  F013         	call	___lltoft	;wreg free
  5626   0003E8  C020  F07F         	movff	?___lltoft,___ftsub@f2
  5627   0003EC  C021  F080         	movff	?___lltoft+1,___ftsub@f2+1
  5628   0003F0  C022  F081         	movff	?___lltoft+2,___ftsub@f2+2
  5629   0003F4  EC15  F015         	call	___ftsub	;wreg free
  5630   0003F8  C07C  F0A0         	movff	?___ftsub,printf@fval
  5631   0003FC  C07D  F0A1         	movff	?___ftsub+1,printf@fval+1
  5632   000400  C07E  F0A2         	movff	?___ftsub+2,printf@fval+2
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;doprnt.c: 1159: eexp = 0;
  5636   000404  0E00               	movlw	0
  5637   000406  6F97               	movwf	(printf@eexp+1)& (0+255),b
  5638   000408  0E00               	movlw	0
  5639   00040A  6F96               	movwf	printf@eexp& (0+255),b
  5640   00040C                     l6134:
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  5644   00040C  0E01               	movlw	1
  5645   00040E  6FA5               	movwf	printf@c& (0+255),b
  5646   000410                     l6136:
  5647                           
  5648                           ; BSR set to: 0
  5649   000410  0E0A               	movlw	10
  5650   000412  19A5               	xorwf	printf@c& (0+255),w,b
  5651   000414  B4D8               	btfsc	status,2,c
  5652   000416  D018               	goto	l6148
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;doprnt.c: 1163: if(val < dpowers[c])
  5656   000418  51A5               	movf	printf@c& (0+255),w,b
  5657   00041A  0D04               	mullw	4
  5658   00041C  0E2D               	movlw	low _dpowers
  5659   00041E  24F3               	addwf	243,w,c
  5660   000420  6EF6               	movwf	tblptrl,c
  5661   000422  0E7F               	movlw	high _dpowers
  5662   000424  20F4               	addwfc	244,w,c
  5663   000426  6EF7               	movwf	tblptrh,c
  5664   000428                     	if	0	;There are less than 3 active tblptr bytes
  5665   000428                     	endif
  5666   000428  0009               	tblrd		*+
  5667   00042A  50F5               	movf	tablat,w,c
  5668   00042C  5D9C               	subwf	printf@val& (0+255),w,b
  5669   00042E  0009               	tblrd		*+
  5670   000430  50F5               	movf	tablat,w,c
  5671   000432  599D               	subwfb	(printf@val+1)& (0+255),w,b
  5672   000434  0009               	tblrd		*+
  5673   000436  50F5               	movf	tablat,w,c
  5674   000438  599E               	subwfb	(printf@val+2)& (0+255),w,b
  5675   00043A  0009               	tblrd		*+
  5676   00043C  50F5               	movf	tablat,w,c
  5677   00043E  599F               	subwfb	(printf@val+3)& (0+255),w,b
  5678   000440  A0D8               	btfss	status,0,c
  5679   000442  D002               	goto	l6148
  5680                           
  5681                           ; BSR set to: 0
  5682   000444  2BA5               	incf	printf@c& (0+255),f,b
  5683   000446  D7E4               	goto	l6136
  5684   000448                     l6148:
  5685                           
  5686                           ; BSR set to: 0
  5687                           ;doprnt.c: 1201: {;doprnt.c: 1214: if(flag & 0x03)
  5688   000448  C094  F087         	movff	printf@flag,??_printf
  5689   00044C  0E03               	movlw	3
  5690   00044E  1787               	andwf	??_printf& (0+255),f,b
  5691   000450  B4D8               	btfsc	status,2,c
  5692   000452  D048               	goto	l6158
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;doprnt.c: 1216: (putch('-') );
  5696   000454  0E2D               	movlw	45
  5697   000456  EC03  F017         	call	_putch
  5698   00045A  D044               	goto	l6158
  5699   00045C                     l6152:
  5700                           
  5701                           ; BSR set to: 0
  5702                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  5703   00045C  C09C  F018         	movff	printf@val,___lldiv@dividend
  5704   000460  C09D  F019         	movff	printf@val+1,___lldiv@dividend+1
  5705   000464  C09E  F01A         	movff	printf@val+2,___lldiv@dividend+2
  5706   000468  C09F  F01B         	movff	printf@val+3,___lldiv@dividend+3
  5707   00046C  51A5               	movf	printf@c& (0+255),w,b
  5708   00046E  0D04               	mullw	4
  5709   000470  0E2D               	movlw	low _dpowers
  5710   000472  24F3               	addwf	243,w,c
  5711   000474  6EF6               	movwf	tblptrl,c
  5712   000476  0E7F               	movlw	high _dpowers
  5713   000478  20F4               	addwfc	244,w,c
  5714   00047A  6EF7               	movwf	tblptrh,c
  5715   00047C                     	if	0	;There are less than 3 active tblptr bytes
  5716   00047C                     	endif
  5717   00047C  0009               	tblrd		*+
  5718   00047E  CFF5 F01C          	movff	tablat,___lldiv@divisor
  5719   000482  0009               	tblrd		*+
  5720   000484  CFF5 F01D          	movff	tablat,___lldiv@divisor+1
  5721   000488  0009               	tblrd		*+
  5722   00048A  CFF5 F01E          	movff	tablat,___lldiv@divisor+2
  5723   00048E  000A               	tblrd		*-
  5724   000490  CFF5 F01F          	movff	tablat,___lldiv@divisor+3
  5725   000494  ECE7  F010         	call	___lldiv	;wreg free
  5726   000498  C018  F098         	movff	?___lldiv,printf@tmpval
  5727   00049C  C019  F099         	movff	?___lldiv+1,printf@tmpval+1
  5728   0004A0  C01A  F09A         	movff	?___lldiv+2,printf@tmpval+2
  5729   0004A4  C01B  F09B         	movff	?___lldiv+3,printf@tmpval+3
  5730                           
  5731                           ; BSR set to: 0
  5732                           ;doprnt.c: 1228: tmpval.vd %= 10;
  5733   0004A8  C098  F025         	movff	printf@tmpval,___llmod@dividend
  5734   0004AC  C099  F026         	movff	printf@tmpval+1,___llmod@dividend+1
  5735   0004B0  C09A  F027         	movff	printf@tmpval+2,___llmod@dividend+2
  5736   0004B4  C09B  F028         	movff	printf@tmpval+3,___llmod@dividend+3
  5737   0004B8  0E0A               	movlw	10
  5738   0004BA  6E29               	movwf	___llmod@divisor^0,c
  5739   0004BC  0E00               	movlw	0
  5740   0004BE  6E2A               	movwf	(___llmod@divisor+1)^0,c
  5741   0004C0  0E00               	movlw	0
  5742   0004C2  6E2B               	movwf	(___llmod@divisor+2)^0,c
  5743   0004C4  0E00               	movlw	0
  5744   0004C6  6E2C               	movwf	(___llmod@divisor+3)^0,c
  5745   0004C8  ECFD  F012         	call	___llmod	;wreg free
  5746   0004CC  C025  F098         	movff	?___llmod,printf@tmpval
  5747   0004D0  C026  F099         	movff	?___llmod+1,printf@tmpval+1
  5748   0004D4  C027  F09A         	movff	?___llmod+2,printf@tmpval+2
  5749   0004D8  C028  F09B         	movff	?___llmod+3,printf@tmpval+3
  5750                           
  5751                           ; BSR set to: 0
  5752                           ;doprnt.c: 1229: (putch('0' + tmpval.vd) );
  5753   0004DC  5198               	movf	printf@tmpval& (0+255),w,b
  5754   0004DE  0F30               	addlw	48
  5755   0004E0  EC03  F017         	call	_putch
  5756   0004E4                     l6158:
  5757   0004E4  0100               	movlb	0	; () banked
  5758   0004E6  07A5               	decf	printf@c& (0+255),f,b
  5759   0004E8  29A5               	incf	printf@c& (0+255),w,b
  5760   0004EA  B4D8               	btfsc	status,2,c
  5761   0004EC  D008               	goto	l6164
  5762   0004EE  D7B6               	goto	l6152
  5763   0004F0                     l6160:
  5764                           
  5765                           ; BSR set to: 0
  5766                           ;doprnt.c: 1234: (putch('0') );
  5767   0004F0  0E30               	movlw	48
  5768   0004F2  EC03  F017         	call	_putch
  5769                           
  5770                           ;doprnt.c: 1235: eexp--;
  5771   0004F6  0100               	movlb	0	; () banked
  5772   0004F8  0796               	decf	printf@eexp& (0+255),f,b
  5773   0004FA  A0D8               	btfss	status,0,c
  5774   0004FC  0797               	decf	(printf@eexp+1)& (0+255),f,b
  5775   0004FE                     l6164:
  5776                           
  5777                           ; BSR set to: 0
  5778   0004FE  BF97               	btfsc	(printf@eexp+1)& (0+255),7,b
  5779   000500  D005               	goto	u6190
  5780   000502  5197               	movf	(printf@eexp+1)& (0+255),w,b
  5781   000504  E1F5               	bnz	l6160
  5782   000506  0596               	decf	printf@eexp& (0+255),w,b
  5783   000508  B0D8               	btfsc	status,0,c
  5784   00050A  D7F2               	goto	l6160
  5785   00050C                     u6190:
  5786                           
  5787                           ; BSR set to: 0
  5788                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  5789   00050C  BFA4               	btfsc	(printf@prec+1)& (0+255),7,b
  5790   00050E  D009               	goto	l567
  5791   000510  51A4               	movf	(printf@prec+1)& (0+255),w,b
  5792   000512  E104               	bnz	u6200
  5793   000514  0E09               	movlw	9
  5794   000516  5DA3               	subwf	printf@prec& (0+255),w,b
  5795   000518  A0D8               	btfss	status,0,c
  5796   00051A  D003               	goto	l567
  5797   00051C                     u6200:
  5798                           
  5799                           ; BSR set to: 0
  5800                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  5801   00051C  0E08               	movlw	8
  5802   00051E  6FA5               	movwf	printf@c& (0+255),b
  5803   000520  D002               	goto	l6170
  5804   000522                     l567:
  5805                           
  5806                           ; BSR set to: 0
  5807                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  5808   000522  C0A3  F0A5         	movff	printf@prec,printf@c
  5809   000526                     l6170:
  5810                           
  5811                           ; BSR set to: 0
  5812                           ;doprnt.c: 1241: prec -= (int)c;
  5813   000526  51A5               	movf	printf@c& (0+255),w,b
  5814   000528  5FA3               	subwf	printf@prec& (0+255),f,b
  5815   00052A  0E00               	movlw	0
  5816   00052C  5BA4               	subwfb	(printf@prec+1)& (0+255),f,b
  5817                           
  5818                           ; BSR set to: 0
  5819                           ;doprnt.c: 1245: if(c)
  5820   00052E  51A5               	movf	printf@c& (0+255),w,b
  5821   000530  B4D8               	btfsc	status,2,c
  5822   000532  D003               	goto	l6176
  5823                           
  5824                           ; BSR set to: 0
  5825                           ;doprnt.c: 1247: (putch('.') );
  5826   000534  0E2E               	movlw	46
  5827   000536  EC03  F017         	call	_putch
  5828   00053A                     l6176:
  5829                           
  5830                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  5831   00053A  0100               	movlb	0	; () banked
  5832   00053C  51A5               	movf	printf@c& (0+255),w,b
  5833   00053E  EC02  F004         	call	_scale
  5834   000542  C066  F08D         	movff	?_scale,_printf$1094
  5835   000546  C067  F08E         	movff	?_scale+1,_printf$1094+1
  5836   00054A  C068  F08F         	movff	?_scale+2,_printf$1094+2
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  5840   00054E  C0A0  F029         	movff	printf@fval,___ftmul@f2
  5841   000552  C0A1  F02A         	movff	printf@fval+1,___ftmul@f2+1
  5842   000556  C0A2  F02B         	movff	printf@fval+2,___ftmul@f2+2
  5843   00055A  C08D  F026         	movff	_printf$1094,___ftmul@f1
  5844   00055E  C08E  F027         	movff	_printf$1094+1,___ftmul@f1+1
  5845   000562  C08F  F028         	movff	_printf$1094+2,___ftmul@f1+2
  5846   000566  ECAB  F00A         	call	___ftmul	;wreg free
  5847   00056A  C026  F06D         	movff	?___ftmul,___fttol@f1
  5848   00056E  C027  F06E         	movff	?___ftmul+1,___fttol@f1+1
  5849   000572  C028  F06F         	movff	?___ftmul+2,___fttol@f1+2
  5850   000576  EC45  F00E         	call	___fttol	;wreg free
  5851   00057A  C06D  F09C         	movff	?___fttol,printf@val
  5852   00057E  C06E  F09D         	movff	?___fttol+1,printf@val+1
  5853   000582  C06F  F09E         	movff	?___fttol+2,printf@val+2
  5854   000586  C070  F09F         	movff	?___fttol+3,printf@val+3
  5855                           
  5856                           ;doprnt.c: 1254: while(c--) {
  5857   00058A  D06B               	goto	l6186
  5858   00058C                     l6180:
  5859                           
  5860                           ; BSR set to: 0
  5861                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  5862   00058C  C09C  F018         	movff	printf@val,___lldiv@dividend
  5863   000590  C09D  F019         	movff	printf@val+1,___lldiv@dividend+1
  5864   000594  C09E  F01A         	movff	printf@val+2,___lldiv@dividend+2
  5865   000598  C09F  F01B         	movff	printf@val+3,___lldiv@dividend+3
  5866   00059C  51A5               	movf	printf@c& (0+255),w,b
  5867   00059E  0D04               	mullw	4
  5868   0005A0  0E2D               	movlw	low _dpowers
  5869   0005A2  24F3               	addwf	243,w,c
  5870   0005A4  6EF6               	movwf	tblptrl,c
  5871   0005A6  0E7F               	movlw	high _dpowers
  5872   0005A8  20F4               	addwfc	244,w,c
  5873   0005AA  6EF7               	movwf	tblptrh,c
  5874   0005AC                     	if	0	;There are less than 3 active tblptr bytes
  5875   0005AC                     	endif
  5876   0005AC  0009               	tblrd		*+
  5877   0005AE  CFF5 F01C          	movff	tablat,___lldiv@divisor
  5878   0005B2  0009               	tblrd		*+
  5879   0005B4  CFF5 F01D          	movff	tablat,___lldiv@divisor+1
  5880   0005B8  0009               	tblrd		*+
  5881   0005BA  CFF5 F01E          	movff	tablat,___lldiv@divisor+2
  5882   0005BE  000A               	tblrd		*-
  5883   0005C0  CFF5 F01F          	movff	tablat,___lldiv@divisor+3
  5884   0005C4  ECE7  F010         	call	___lldiv	;wreg free
  5885   0005C8  C018  F098         	movff	?___lldiv,printf@tmpval
  5886   0005CC  C019  F099         	movff	?___lldiv+1,printf@tmpval+1
  5887   0005D0  C01A  F09A         	movff	?___lldiv+2,printf@tmpval+2
  5888   0005D4  C01B  F09B         	movff	?___lldiv+3,printf@tmpval+3
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;doprnt.c: 1256: tmpval.vd %= 10;
  5892   0005D8  C098  F025         	movff	printf@tmpval,___llmod@dividend
  5893   0005DC  C099  F026         	movff	printf@tmpval+1,___llmod@dividend+1
  5894   0005E0  C09A  F027         	movff	printf@tmpval+2,___llmod@dividend+2
  5895   0005E4  C09B  F028         	movff	printf@tmpval+3,___llmod@dividend+3
  5896   0005E8  0E0A               	movlw	10
  5897   0005EA  6E29               	movwf	___llmod@divisor^0,c
  5898   0005EC  0E00               	movlw	0
  5899   0005EE  6E2A               	movwf	(___llmod@divisor+1)^0,c
  5900   0005F0  0E00               	movlw	0
  5901   0005F2  6E2B               	movwf	(___llmod@divisor+2)^0,c
  5902   0005F4  0E00               	movlw	0
  5903   0005F6  6E2C               	movwf	(___llmod@divisor+3)^0,c
  5904   0005F8  ECFD  F012         	call	___llmod	;wreg free
  5905   0005FC  C025  F098         	movff	?___llmod,printf@tmpval
  5906   000600  C026  F099         	movff	?___llmod+1,printf@tmpval+1
  5907   000604  C027  F09A         	movff	?___llmod+2,printf@tmpval+2
  5908   000608  C028  F09B         	movff	?___llmod+3,printf@tmpval+3
  5909                           
  5910                           ; BSR set to: 0
  5911                           ;doprnt.c: 1257: (putch('0' + tmpval.vd) );
  5912   00060C  5198               	movf	printf@tmpval& (0+255),w,b
  5913   00060E  0F30               	addlw	48
  5914   000610  EC03  F017         	call	_putch
  5915                           
  5916                           ;doprnt.c: 1258: val %= dpowers[c];
  5917   000614  C09C  F025         	movff	printf@val,___llmod@dividend
  5918   000618  C09D  F026         	movff	printf@val+1,___llmod@dividend+1
  5919   00061C  C09E  F027         	movff	printf@val+2,___llmod@dividend+2
  5920   000620  C09F  F028         	movff	printf@val+3,___llmod@dividend+3
  5921   000624  0100               	movlb	0	; () banked
  5922   000626  51A5               	movf	printf@c& (0+255),w,b
  5923   000628  0D04               	mullw	4
  5924   00062A  0E2D               	movlw	low _dpowers
  5925   00062C  24F3               	addwf	243,w,c
  5926   00062E  6EF6               	movwf	tblptrl,c
  5927   000630  0E7F               	movlw	high _dpowers
  5928   000632  20F4               	addwfc	244,w,c
  5929   000634  6EF7               	movwf	tblptrh,c
  5930   000636                     	if	0	;There are less than 3 active tblptr bytes
  5931   000636                     	endif
  5932   000636  0009               	tblrd		*+
  5933   000638  CFF5 F029          	movff	tablat,___llmod@divisor
  5934   00063C  0009               	tblrd		*+
  5935   00063E  CFF5 F02A          	movff	tablat,___llmod@divisor+1
  5936   000642  0009               	tblrd		*+
  5937   000644  CFF5 F02B          	movff	tablat,___llmod@divisor+2
  5938   000648  000A               	tblrd		*-
  5939   00064A  CFF5 F02C          	movff	tablat,___llmod@divisor+3
  5940   00064E  ECFD  F012         	call	___llmod	;wreg free
  5941   000652  C025  F09C         	movff	?___llmod,printf@val
  5942   000656  C026  F09D         	movff	?___llmod+1,printf@val+1
  5943   00065A  C027  F09E         	movff	?___llmod+2,printf@val+2
  5944   00065E  C028  F09F         	movff	?___llmod+3,printf@val+3
  5945   000662                     l6186:
  5946                           
  5947                           ; BSR set to: 0
  5948   000662  07A5               	decf	printf@c& (0+255),f,b
  5949   000664  29A5               	incf	printf@c& (0+255),w,b
  5950   000666  B4D8               	btfsc	status,2,c
  5951   000668  D008               	goto	l6192
  5952   00066A  D790               	goto	l6180
  5953   00066C                     l6188:
  5954                           
  5955                           ; BSR set to: 0
  5956                           ;doprnt.c: 1262: (putch('0') );
  5957   00066C  0E30               	movlw	48
  5958   00066E  EC03  F017         	call	_putch
  5959                           
  5960                           ;doprnt.c: 1263: prec--;
  5961   000672  0100               	movlb	0	; () banked
  5962   000674  07A3               	decf	printf@prec& (0+255),f,b
  5963   000676  A0D8               	btfss	status,0,c
  5964   000678  07A4               	decf	(printf@prec+1)& (0+255),f,b
  5965   00067A                     l6192:
  5966                           
  5967                           ; BSR set to: 0
  5968   00067A  51A3               	movf	printf@prec& (0+255),w,b
  5969   00067C  11A4               	iorwf	(printf@prec+1)& (0+255),w,b
  5970   00067E  B4D8               	btfsc	status,2,c
  5971   000680  D0B3               	goto	u6320
  5972   000682  D7F4               	goto	l6188
  5973   000684                     l6194:
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;doprnt.c: 1272: };doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_
      +                          arg((*(int **)ap), (int)0));
  5977   000684  5193               	movf	printf@ap& (0+255),w,b
  5978   000686  6ED9               	movwf	fsr2l,c
  5979   000688  6ADA               	clrf	fsr2h,c
  5980   00068A  CFDE F09C          	movff	postinc2,printf@val
  5981   00068E  CFDD F09D          	movff	postdec2,printf@val+1
  5982   000692  0E00               	movlw	0
  5983   000694  BF9D               	btfsc	(printf@val+1)& (0+255),7,b
  5984   000696  0EFF               	movlw	-1
  5985   000698  6F9E               	movwf	(printf@val+2)& (0+255),b
  5986   00069A  6F9F               	movwf	(printf@val+3)& (0+255),b
  5987                           
  5988                           ; BSR set to: 0
  5989   00069C  0E02               	movlw	2
  5990   00069E  2793               	addwf	printf@ap& (0+255),f,b
  5991                           
  5992                           ; BSR set to: 0
  5993                           ;doprnt.c: 1287: if((long)val < 0) {
  5994   0006A0  AF9F               	btfss	(printf@val+3)& (0+255),7,b
  5995   0006A2  D00A               	goto	l6204
  5996                           
  5997                           ; BSR set to: 0
  5998                           ;doprnt.c: 1288: flag |= 0x03;
  5999   0006A4  0E03               	movlw	3
  6000   0006A6  1394               	iorwf	printf@flag& (0+255),f,b
  6001                           
  6002                           ; BSR set to: 0
  6003                           ;doprnt.c: 1289: val = -val;
  6004   0006A8  1F9F               	comf	(printf@val+3)& (0+255),f,b
  6005   0006AA  1F9E               	comf	(printf@val+2)& (0+255),f,b
  6006   0006AC  1F9D               	comf	(printf@val+1)& (0+255),f,b
  6007   0006AE  6D9C               	negf	printf@val& (0+255),b
  6008   0006B0  0E00               	movlw	0
  6009   0006B2  239D               	addwfc	(printf@val+1)& (0+255),f,b
  6010   0006B4  239E               	addwfc	(printf@val+2)& (0+255),f,b
  6011   0006B6  239F               	addwfc	(printf@val+3)& (0+255),f,b
  6012   0006B8                     l6204:
  6013                           
  6014                           ; BSR set to: 0
  6015                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1316: if(prec == 0 && val == 0)
  6016   0006B8  51A3               	movf	printf@prec& (0+255),w,b
  6017   0006BA  11A4               	iorwf	(printf@prec+1)& (0+255),w,b
  6018   0006BC  A4D8               	btfss	status,2,c
  6019   0006BE  D008               	goto	l6210
  6020                           
  6021                           ; BSR set to: 0
  6022   0006C0  519C               	movf	printf@val& (0+255),w,b
  6023   0006C2  119D               	iorwf	(printf@val+1)& (0+255),w,b
  6024   0006C4  119E               	iorwf	(printf@val+2)& (0+255),w,b
  6025   0006C6  119F               	iorwf	(printf@val+3)& (0+255),w,b
  6026   0006C8  A4D8               	btfss	status,2,c
  6027   0006CA  D002               	goto	l6210
  6028                           
  6029                           ; BSR set to: 0
  6030                           ;doprnt.c: 1317: prec++;
  6031   0006CC  4BA3               	infsnz	printf@prec& (0+255),f,b
  6032   0006CE  2BA4               	incf	(printf@prec+1)& (0+255),f,b
  6033   0006D0                     l6210:
  6034                           
  6035                           ; BSR set to: 0
  6036                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6037   0006D0  0E01               	movlw	1
  6038   0006D2  6FA5               	movwf	printf@c& (0+255),b
  6039   0006D4                     l6212:
  6040                           
  6041                           ; BSR set to: 0
  6042   0006D4  0E0A               	movlw	10
  6043   0006D6  19A5               	xorwf	printf@c& (0+255),w,b
  6044   0006D8  B4D8               	btfsc	status,2,c
  6045   0006DA  D018               	goto	l6224
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;doprnt.c: 1332: if(val < dpowers[c])
  6049   0006DC  51A5               	movf	printf@c& (0+255),w,b
  6050   0006DE  0D04               	mullw	4
  6051   0006E0  0E2D               	movlw	low _dpowers
  6052   0006E2  24F3               	addwf	243,w,c
  6053   0006E4  6EF6               	movwf	tblptrl,c
  6054   0006E6  0E7F               	movlw	high _dpowers
  6055   0006E8  20F4               	addwfc	244,w,c
  6056   0006EA  6EF7               	movwf	tblptrh,c
  6057   0006EC                     	if	0	;There are less than 3 active tblptr bytes
  6058   0006EC                     	endif
  6059   0006EC  0009               	tblrd		*+
  6060   0006EE  50F5               	movf	tablat,w,c
  6061   0006F0  5D9C               	subwf	printf@val& (0+255),w,b
  6062   0006F2  0009               	tblrd		*+
  6063   0006F4  50F5               	movf	tablat,w,c
  6064   0006F6  599D               	subwfb	(printf@val+1)& (0+255),w,b
  6065   0006F8  0009               	tblrd		*+
  6066   0006FA  50F5               	movf	tablat,w,c
  6067   0006FC  599E               	subwfb	(printf@val+2)& (0+255),w,b
  6068   0006FE  0009               	tblrd		*+
  6069   000700  50F5               	movf	tablat,w,c
  6070   000702  599F               	subwfb	(printf@val+3)& (0+255),w,b
  6071   000704  A0D8               	btfss	status,0,c
  6072   000706  D002               	goto	l6224
  6073                           
  6074                           ; BSR set to: 0
  6075   000708  2BA5               	incf	printf@c& (0+255),f,b
  6076   00070A  D7E4               	goto	l6212
  6077   00070C                     l6224:
  6078                           
  6079                           ; BSR set to: 0
  6080                           ;doprnt.c: 1365: if(c < prec)
  6081   00070C  51A5               	movf	printf@c& (0+255),w,b
  6082   00070E  6F87               	movwf	??_printf& (0+255),b
  6083   000710  6B88               	clrf	(??_printf+1)& (0+255),b
  6084   000712  51A3               	movf	printf@prec& (0+255),w,b
  6085   000714  5D87               	subwf	??_printf& (0+255),w,b
  6086   000716  5188               	movf	(??_printf+1)& (0+255),w,b
  6087   000718  0A80               	xorlw	128
  6088   00071A  6F89               	movwf	(??_printf+2)& (0+255),b
  6089   00071C  51A4               	movf	(printf@prec+1)& (0+255),w,b
  6090   00071E  0A80               	xorlw	128
  6091   000720  5989               	subwfb	(??_printf+2)& (0+255),w,b
  6092   000722  A0D8               	btfss	status,0,c
  6093   000724  D010               	goto	l6232
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;doprnt.c: 1367: else if(prec < c)
  6097                           
  6098                           ; BSR set to: 0
  6099   000726  51A5               	movf	printf@c& (0+255),w,b
  6100   000728  6F87               	movwf	??_printf& (0+255),b
  6101   00072A  6B88               	clrf	(??_printf+1)& (0+255),b
  6102   00072C  5187               	movf	??_printf& (0+255),w,b
  6103   00072E  5DA3               	subwf	printf@prec& (0+255),w,b
  6104   000730  51A4               	movf	(printf@prec+1)& (0+255),w,b
  6105   000732  0A80               	xorlw	128
  6106   000734  6F89               	movwf	(??_printf+2)& (0+255),b
  6107   000736  5188               	movf	(??_printf+1)& (0+255),w,b
  6108   000738  0A80               	xorlw	128
  6109   00073A  5989               	subwfb	(??_printf+2)& (0+255),w,b
  6110   00073C  B0D8               	btfsc	status,0,c
  6111   00073E  D003               	goto	l6232
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;doprnt.c: 1368: prec = c;
  6115   000740  C0A5  F0A3         	movff	printf@c,printf@prec
  6116   000744  6BA4               	clrf	(printf@prec+1)& (0+255),b
  6117   000746                     l6232:
  6118                           
  6119                           ; BSR set to: 0
  6120                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  6121   000746  C094  F087         	movff	printf@flag,??_printf
  6122   00074A  0E03               	movlw	3
  6123   00074C  1787               	andwf	??_printf& (0+255),f,b
  6124   00074E  B4D8               	btfsc	status,2,c
  6125   000750  D042               	goto	l6240
  6126                           
  6127                           ; BSR set to: 0
  6128                           ;doprnt.c: 1465: (putch('-') );
  6129   000752  0E2D               	movlw	45
  6130   000754  EC03  F017         	call	_putch
  6131   000758  D03E               	goto	l6240
  6132   00075A                     l6236:
  6133                           
  6134                           ; BSR set to: 0
  6135                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  6136   00075A  C0A3  F087         	movff	printf@prec,??_printf
  6137   00075E  C0A4  F088         	movff	printf@prec+1,??_printf+1
  6138   000762  90D8               	bcf	status,0,c
  6139   000764  3787               	rlcf	??_printf& (0+255),f,b
  6140   000766  3788               	rlcf	(??_printf+1)& (0+255),f,b
  6141   000768  90D8               	bcf	status,0,c
  6142   00076A  3787               	rlcf	??_printf& (0+255),f,b
  6143   00076C  3788               	rlcf	(??_printf+1)& (0+255),f,b
  6144   00076E  0E2D               	movlw	low _dpowers
  6145   000770  2587               	addwf	??_printf& (0+255),w,b
  6146   000772  6EF6               	movwf	tblptrl,c
  6147   000774  0E7F               	movlw	high _dpowers
  6148   000776  2188               	addwfc	(??_printf+1)& (0+255),w,b
  6149   000778  6EF7               	movwf	tblptrh,c
  6150   00077A                     	if	0	;There are less than 3 active tblptr bytes
  6151   00077A                     	endif
  6152   00077A  0009               	tblrd		*+
  6153   00077C  CFF5 F01C          	movff	tablat,___lldiv@divisor
  6154   000780  0009               	tblrd		*+
  6155   000782  CFF5 F01D          	movff	tablat,___lldiv@divisor+1
  6156   000786  0009               	tblrd		*+
  6157   000788  CFF5 F01E          	movff	tablat,___lldiv@divisor+2
  6158   00078C  000A               	tblrd		*-
  6159   00078E  CFF5 F01F          	movff	tablat,___lldiv@divisor+3
  6160   000792  C09C  F018         	movff	printf@val,___lldiv@dividend
  6161   000796  C09D  F019         	movff	printf@val+1,___lldiv@dividend+1
  6162   00079A  C09E  F01A         	movff	printf@val+2,___lldiv@dividend+2
  6163   00079E  C09F  F01B         	movff	printf@val+3,___lldiv@dividend+3
  6164   0007A2  ECE7  F010         	call	___lldiv	;wreg free
  6165   0007A6  C018  F025         	movff	?___lldiv,___llmod@dividend
  6166   0007AA  C019  F026         	movff	?___lldiv+1,___llmod@dividend+1
  6167   0007AE  C01A  F027         	movff	?___lldiv+2,___llmod@dividend+2
  6168   0007B2  C01B  F028         	movff	?___lldiv+3,___llmod@dividend+3
  6169   0007B6  0E0A               	movlw	10
  6170   0007B8  6E29               	movwf	___llmod@divisor^0,c
  6171   0007BA  0E00               	movlw	0
  6172   0007BC  6E2A               	movwf	(___llmod@divisor+1)^0,c
  6173   0007BE  0E00               	movlw	0
  6174   0007C0  6E2B               	movwf	(___llmod@divisor+2)^0,c
  6175   0007C2  0E00               	movlw	0
  6176   0007C4  6E2C               	movwf	(___llmod@divisor+3)^0,c
  6177   0007C6  ECFD  F012         	call	___llmod	;wreg free
  6178   0007CA  5025               	movf	?___llmod^0,w,c
  6179   0007CC  0F30               	addlw	48
  6180   0007CE  6FA5               	movwf	printf@c& (0+255),b
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
  6184   0007D0  51A5               	movf	printf@c& (0+255),w,b
  6185   0007D2  EC03  F017         	call	_putch
  6186   0007D6                     l6240:
  6187   0007D6  0100               	movlb	0	; () banked
  6188   0007D8  07A3               	decf	printf@prec& (0+255),f,b
  6189   0007DA  A0D8               	btfss	status,0,c
  6190   0007DC  07A4               	decf	(printf@prec+1)& (0+255),f,b
  6191   0007DE  29A3               	incf	printf@prec& (0+255),w,b
  6192   0007E0  E1BC               	bnz	l6236
  6193   0007E2  29A4               	incf	(printf@prec+1)& (0+255),w,b
  6194   0007E4  A4D8               	btfss	status,2,c
  6195   0007E6  D7B9               	goto	l6236
  6196   0007E8                     u6320:
  6197   0007E8  C082  FFF6         	movff	printf@f,tblptrl
  6198   0007EC  C083  FFF7         	movff	printf@f+1,tblptrh
  6199   0007F0  0100               	movlb	0	; () banked
  6200   0007F2  4B82               	infsnz	printf@f& (0+255),f,b
  6201   0007F4  2B83               	incf	(printf@f+1)& (0+255),f,b
  6202   0007F6                     	if	0	;tblptru may be non-zero
  6203   0007F6                     	endif
  6204   0007F6                     	if	0	;tblptru may be non-zero
  6205   0007F6                     	endif
  6206   0007F6  0008               	tblrd		*
  6207   0007F8  CFF5 F0A5          	movff	tablat,printf@c
  6208   0007FC  51A5               	movf	printf@c& (0+255),w,b
  6209   0007FE  B4D8               	btfsc	status,2,c
  6210   000800  0012               	return	
  6211   000802  D40A               	goto	l6014
  6212   000804                     __end_of_printf:
  6213                           	callstack 0
  6214                           
  6215 ;; *************** function _scale *****************
  6216 ;; Defined at:
  6217 ;;		line 433 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\doprnt.c"
  6218 ;; Parameters:    Size  Location     Type
  6219 ;;  scl             1    wreg     char 
  6220 ;; Auto vars:     Size  Location     Type
  6221 ;;  scl             1   12[BANK0 ] char 
  6222 ;; Return value:  Size  Location     Type
  6223 ;;                  3    6[BANK0 ] char 
  6224 ;; Registers used:
  6225 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6226 ;; Tracked objects:
  6227 ;;		On entry : 3F/0
  6228 ;;		On exit  : 3F/0
  6229 ;;		Unchanged: 0/0
  6230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6231 ;;      Params:         0       3       0       0       0       0       0       0       0
  6232 ;;      Locals:         0       4       0       0       0       0       0       0       0
  6233 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6234 ;;      Totals:         0       7       0       0       0       0       0       0       0
  6235 ;;Total ram usage:        7 bytes
  6236 ;; Hardware stack levels used: 1
  6237 ;; Hardware stack levels required when called: 10
  6238 ;; This function calls:
  6239 ;;		___awdiv
  6240 ;;		___awmod
  6241 ;;		___ftmul
  6242 ;; This function is called by:
  6243 ;;		_printf
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           	psect	text29
  6248   000804                     __ptext29:
  6249                           	callstack 0
  6250   000804                     _scale:
  6251                           	callstack 17
  6252                           
  6253                           ; BSR set to: 0
  6254                           ;incstack = 0
  6255                           ;scale@scl stored from wreg
  6256   000804  6F6C               	movwf	scale@scl& (0+255),b
  6257                           
  6258                           ;doprnt.c: 436: if(scl < 0) {
  6259   000806  0100               	movlb	0	; () banked
  6260   000808  AF6C               	btfss	scale@scl& (0+255),7,b
  6261   00080A  D0DB               	goto	l5894
  6262                           
  6263                           ; BSR set to: 0
  6264                           ;doprnt.c: 437: scl = -scl;
  6265   00080C  6D6C               	negf	scale@scl& (0+255),b
  6266                           
  6267                           ;doprnt.c: 438: if(scl>=110)
  6268   00080E  516C               	movf	scale@scl& (0+255),w,b
  6269   000810  0A80               	xorlw	128
  6270   000812  0F12               	addlw	-238
  6271   000814  A0D8               	btfss	status,0,c
  6272   000816  D07A               	goto	l5884
  6273                           
  6274                           ; BSR set to: 0
  6275                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  6276   000818  0E00               	movlw	0
  6277   00081A  6E21               	movwf	(___awdiv@divisor+1)^0,c
  6278   00081C  0E0A               	movlw	10
  6279   00081E  6E20               	movwf	___awdiv@divisor^0,c
  6280   000820  0E00               	movlw	0
  6281   000822  6E1B               	movwf	(___awmod@divisor+1)^0,c
  6282   000824  0E64               	movlw	100
  6283   000826  6E1A               	movwf	___awmod@divisor^0,c
  6284   000828  516C               	movf	scale@scl& (0+255),w,b
  6285   00082A  6E18               	movwf	___awmod@dividend^0,c
  6286   00082C  6A19               	clrf	(___awmod@dividend+1)^0,c
  6287   00082E  BE18               	btfsc	___awmod@dividend^0,7,c
  6288   000830  0619               	decf	(___awmod@dividend+1)^0,f,c
  6289   000832  EC8F  F012         	call	___awmod	;wreg free
  6290   000836  C018  F01E         	movff	?___awmod,___awdiv@dividend
  6291   00083A  C019  F01F         	movff	?___awmod+1,___awdiv@dividend+1
  6292   00083E  ECA6  F010         	call	___awdiv	;wreg free
  6293   000842  0E09               	movlw	9
  6294   000844  261E               	addwf	?___awdiv^0,f,c
  6295   000846  501E               	movf	?___awdiv^0,w,c
  6296   000848  0D03               	mullw	3
  6297   00084A  0E06               	movlw	low __npowers_
  6298   00084C  24F3               	addwf	243,w,c
  6299   00084E  6EF6               	movwf	tblptrl,c
  6300   000850  0E7F               	movlw	high __npowers_
  6301   000852  20F4               	addwfc	244,w,c
  6302   000854  6EF7               	movwf	tblptrh,c
  6303   000856                     	if	0	;There are less than 3 active tblptr bytes
  6304   000856                     	endif
  6305   000856  0009               	tblrd		*+
  6306   000858  CFF5 F029          	movff	tablat,___ftmul@f2
  6307   00085C  0009               	tblrd		*+
  6308   00085E  CFF5 F02A          	movff	tablat,___ftmul@f2+1
  6309   000862  000A               	tblrd		*-
  6310   000864  CFF5 F02B          	movff	tablat,___ftmul@f2+2
  6311   000868  0E00               	movlw	0
  6312   00086A  6E21               	movwf	(___awdiv@divisor+1)^0,c
  6313   00086C  0E64               	movlw	100
  6314   00086E  6E20               	movwf	___awdiv@divisor^0,c
  6315   000870  0100               	movlb	0	; () banked
  6316   000872  516C               	movf	scale@scl& (0+255),w,b
  6317   000874  6E1E               	movwf	___awdiv@dividend^0,c
  6318   000876  6A1F               	clrf	(___awdiv@dividend+1)^0,c
  6319   000878  BE1E               	btfsc	___awdiv@dividend^0,7,c
  6320   00087A  061F               	decf	(___awdiv@dividend+1)^0,f,c
  6321   00087C  ECA6  F010         	call	___awdiv	;wreg free
  6322   000880  0E12               	movlw	18
  6323   000882  261E               	addwf	?___awdiv^0,f,c
  6324   000884  501E               	movf	?___awdiv^0,w,c
  6325   000886  0D03               	mullw	3
  6326   000888  0E06               	movlw	low __npowers_
  6327   00088A  24F3               	addwf	243,w,c
  6328   00088C  6EF6               	movwf	tblptrl,c
  6329   00088E  0E7F               	movlw	high __npowers_
  6330   000890  20F4               	addwfc	244,w,c
  6331   000892  6EF7               	movwf	tblptrh,c
  6332   000894                     	if	0	;There are less than 3 active tblptr bytes
  6333   000894                     	endif
  6334   000894  0009               	tblrd		*+
  6335   000896  CFF5 F026          	movff	tablat,___ftmul@f1
  6336   00089A  0009               	tblrd		*+
  6337   00089C  CFF5 F027          	movff	tablat,___ftmul@f1+1
  6338   0008A0  000A               	tblrd		*-
  6339   0008A2  CFF5 F028          	movff	tablat,___ftmul@f1+2
  6340   0008A6  ECAB  F00A         	call	___ftmul	;wreg free
  6341   0008AA  C026  F069         	movff	?___ftmul,_scale$1093
  6342   0008AE  C027  F06A         	movff	?___ftmul+1,_scale$1093+1
  6343   0008B2  C028  F06B         	movff	?___ftmul+2,_scale$1093+2
  6344                           
  6345                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  6346   0008B6  C069  F026         	movff	_scale$1093,___ftmul@f1
  6347   0008BA  C06A  F027         	movff	_scale$1093+1,___ftmul@f1+1
  6348   0008BE  C06B  F028         	movff	_scale$1093+2,___ftmul@f1+2
  6349   0008C2  0E00               	movlw	0
  6350   0008C4  6E1B               	movwf	(___awmod@divisor+1)^0,c
  6351   0008C6  0E0A               	movlw	10
  6352   0008C8  6E1A               	movwf	___awmod@divisor^0,c
  6353   0008CA  516C               	movf	scale@scl& (0+255),w,b
  6354   0008CC  6E18               	movwf	___awmod@dividend^0,c
  6355   0008CE  6A19               	clrf	(___awmod@dividend+1)^0,c
  6356   0008D0  BE18               	btfsc	___awmod@dividend^0,7,c
  6357   0008D2  0619               	decf	(___awmod@dividend+1)^0,f,c
  6358   0008D4  EC8F  F012         	call	___awmod	;wreg free
  6359   0008D8  5018               	movf	?___awmod^0,w,c
  6360   0008DA  0D03               	mullw	3
  6361   0008DC  0E06               	movlw	low __npowers_
  6362   0008DE  24F3               	addwf	243,w,c
  6363   0008E0  6EF6               	movwf	tblptrl,c
  6364   0008E2  0E7F               	movlw	high __npowers_
  6365   0008E4  20F4               	addwfc	244,w,c
  6366   0008E6  6EF7               	movwf	tblptrh,c
  6367   0008E8                     	if	0	;There are less than 3 active tblptr bytes
  6368   0008E8                     	endif
  6369   0008E8  0009               	tblrd		*+
  6370   0008EA  CFF5 F029          	movff	tablat,___ftmul@f2
  6371   0008EE  0009               	tblrd		*+
  6372   0008F0  CFF5 F02A          	movff	tablat,___ftmul@f2+1
  6373   0008F4  000A               	tblrd		*-
  6374   0008F6  CFF5 F02B          	movff	tablat,___ftmul@f2+2
  6375   0008FA  ECAB  F00A         	call	___ftmul	;wreg free
  6376   0008FE  C026  F066         	movff	?___ftmul,?_scale
  6377   000902  C027  F067         	movff	?___ftmul+1,?_scale+1
  6378   000906  C028  F068         	movff	?___ftmul+2,?_scale+2
  6379   00090A  0012               	return	
  6380   00090C                     l5884:
  6381                           
  6382                           ; BSR set to: 0
  6383                           ;doprnt.c: 440: else if(scl > 10)
  6384   00090C  516C               	movf	scale@scl& (0+255),w,b
  6385   00090E  0A80               	xorlw	128
  6386   000910  0F75               	addlw	-139
  6387   000912  A0D8               	btfss	status,0,c
  6388   000914  D044               	goto	l5890
  6389                           
  6390                           ; BSR set to: 0
  6391                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  6392   000916  0E00               	movlw	0
  6393   000918  6E21               	movwf	(___awdiv@divisor+1)^0,c
  6394   00091A  0E0A               	movlw	10
  6395   00091C  6E20               	movwf	___awdiv@divisor^0,c
  6396   00091E  516C               	movf	scale@scl& (0+255),w,b
  6397   000920  6E1E               	movwf	___awdiv@dividend^0,c
  6398   000922  6A1F               	clrf	(___awdiv@dividend+1)^0,c
  6399   000924  BE1E               	btfsc	___awdiv@dividend^0,7,c
  6400   000926  061F               	decf	(___awdiv@dividend+1)^0,f,c
  6401   000928  ECA6  F010         	call	___awdiv	;wreg free
  6402   00092C  0E09               	movlw	9
  6403   00092E  261E               	addwf	?___awdiv^0,f,c
  6404   000930  501E               	movf	?___awdiv^0,w,c
  6405   000932  0D03               	mullw	3
  6406   000934  0E06               	movlw	low __npowers_
  6407   000936  24F3               	addwf	243,w,c
  6408   000938  6EF6               	movwf	tblptrl,c
  6409   00093A  0E7F               	movlw	high __npowers_
  6410   00093C  20F4               	addwfc	244,w,c
  6411   00093E  6EF7               	movwf	tblptrh,c
  6412   000940                     	if	0	;There are less than 3 active tblptr bytes
  6413   000940                     	endif
  6414   000940  0009               	tblrd		*+
  6415   000942  CFF5 F026          	movff	tablat,___ftmul@f1
  6416   000946  0009               	tblrd		*+
  6417   000948  CFF5 F027          	movff	tablat,___ftmul@f1+1
  6418   00094C  000A               	tblrd		*-
  6419   00094E  CFF5 F028          	movff	tablat,___ftmul@f1+2
  6420   000952  0E00               	movlw	0
  6421   000954  6E1B               	movwf	(___awmod@divisor+1)^0,c
  6422   000956  0E0A               	movlw	10
  6423   000958  6E1A               	movwf	___awmod@divisor^0,c
  6424   00095A  0100               	movlb	0	; () banked
  6425   00095C  516C               	movf	scale@scl& (0+255),w,b
  6426   00095E  6E18               	movwf	___awmod@dividend^0,c
  6427   000960  6A19               	clrf	(___awmod@dividend+1)^0,c
  6428   000962  BE18               	btfsc	___awmod@dividend^0,7,c
  6429   000964  0619               	decf	(___awmod@dividend+1)^0,f,c
  6430   000966  EC8F  F012         	call	___awmod	;wreg free
  6431   00096A  5018               	movf	?___awmod^0,w,c
  6432   00096C  0D03               	mullw	3
  6433   00096E  0E06               	movlw	low __npowers_
  6434   000970  24F3               	addwf	243,w,c
  6435   000972  6EF6               	movwf	tblptrl,c
  6436   000974  0E7F               	movlw	high __npowers_
  6437   000976  20F4               	addwfc	244,w,c
  6438   000978  6EF7               	movwf	tblptrh,c
  6439   00097A                     	if	0	;There are less than 3 active tblptr bytes
  6440   00097A                     	endif
  6441   00097A  0009               	tblrd		*+
  6442   00097C  CFF5 F029          	movff	tablat,___ftmul@f2
  6443   000980  0009               	tblrd		*+
  6444   000982  CFF5 F02A          	movff	tablat,___ftmul@f2+1
  6445   000986  000A               	tblrd		*-
  6446   000988  CFF5 F02B          	movff	tablat,___ftmul@f2+2
  6447   00098C  ECAB  F00A         	call	___ftmul	;wreg free
  6448   000990  C026  F066         	movff	?___ftmul,?_scale
  6449   000994  C027  F067         	movff	?___ftmul+1,?_scale+1
  6450   000998  C028  F068         	movff	?___ftmul+2,?_scale+2
  6451   00099C  0012               	return	
  6452   00099E                     l5890:
  6453                           
  6454                           ; BSR set to: 0
  6455                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  6456   00099E  516C               	movf	scale@scl& (0+255),w,b
  6457   0009A0  0D03               	mullw	3
  6458   0009A2  0E06               	movlw	low __npowers_
  6459   0009A4  24F3               	addwf	243,w,c
  6460   0009A6  6EF6               	movwf	tblptrl,c
  6461   0009A8  0E7F               	movlw	high __npowers_
  6462   0009AA  20F4               	addwfc	244,w,c
  6463   0009AC  6EF7               	movwf	tblptrh,c
  6464   0009AE                     	if	0	;There are less than 3 active tblptr bytes
  6465   0009AE                     	endif
  6466   0009AE  0009               	tblrd		*+
  6467   0009B0  CFF5 F066          	movff	tablat,?_scale
  6468   0009B4  0009               	tblrd		*+
  6469   0009B6  CFF5 F067          	movff	tablat,?_scale+1
  6470   0009BA  000A               	tblrd		*-
  6471   0009BC  CFF5 F068          	movff	tablat,?_scale+2
  6472   0009C0  0012               	return	
  6473   0009C2                     l5894:
  6474                           
  6475                           ; BSR set to: 0
  6476                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  6477   0009C2  516C               	movf	scale@scl& (0+255),w,b
  6478   0009C4  0A80               	xorlw	128
  6479   0009C6  0F12               	addlw	-238
  6480   0009C8  A0D8               	btfss	status,0,c
  6481   0009CA  D07A               	goto	l5902
  6482                           
  6483                           ; BSR set to: 0
  6484                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  6485   0009CC  0E00               	movlw	0
  6486   0009CE  6E21               	movwf	(___awdiv@divisor+1)^0,c
  6487   0009D0  0E0A               	movlw	10
  6488   0009D2  6E20               	movwf	___awdiv@divisor^0,c
  6489   0009D4  0E00               	movlw	0
  6490   0009D6  6E1B               	movwf	(___awmod@divisor+1)^0,c
  6491   0009D8  0E64               	movlw	100
  6492   0009DA  6E1A               	movwf	___awmod@divisor^0,c
  6493   0009DC  516C               	movf	scale@scl& (0+255),w,b
  6494   0009DE  6E18               	movwf	___awmod@dividend^0,c
  6495   0009E0  6A19               	clrf	(___awmod@dividend+1)^0,c
  6496   0009E2  BE18               	btfsc	___awmod@dividend^0,7,c
  6497   0009E4  0619               	decf	(___awmod@dividend+1)^0,f,c
  6498   0009E6  EC8F  F012         	call	___awmod	;wreg free
  6499   0009EA  C018  F01E         	movff	?___awmod,___awdiv@dividend
  6500   0009EE  C019  F01F         	movff	?___awmod+1,___awdiv@dividend+1
  6501   0009F2  ECA6  F010         	call	___awdiv	;wreg free
  6502   0009F6  0E09               	movlw	9
  6503   0009F8  261E               	addwf	?___awdiv^0,f,c
  6504   0009FA  501E               	movf	?___awdiv^0,w,c
  6505   0009FC  0D03               	mullw	3
  6506   0009FE  0EDF               	movlw	low __powers_
  6507   000A00  24F3               	addwf	243,w,c
  6508   000A02  6EF6               	movwf	tblptrl,c
  6509   000A04  0E7E               	movlw	high __powers_
  6510   000A06  20F4               	addwfc	244,w,c
  6511   000A08  6EF7               	movwf	tblptrh,c
  6512   000A0A                     	if	0	;There are less than 3 active tblptr bytes
  6513   000A0A                     	endif
  6514   000A0A  0009               	tblrd		*+
  6515   000A0C  CFF5 F029          	movff	tablat,___ftmul@f2
  6516   000A10  0009               	tblrd		*+
  6517   000A12  CFF5 F02A          	movff	tablat,___ftmul@f2+1
  6518   000A16  000A               	tblrd		*-
  6519   000A18  CFF5 F02B          	movff	tablat,___ftmul@f2+2
  6520   000A1C  0E00               	movlw	0
  6521   000A1E  6E21               	movwf	(___awdiv@divisor+1)^0,c
  6522   000A20  0E64               	movlw	100
  6523   000A22  6E20               	movwf	___awdiv@divisor^0,c
  6524   000A24  0100               	movlb	0	; () banked
  6525   000A26  516C               	movf	scale@scl& (0+255),w,b
  6526   000A28  6E1E               	movwf	___awdiv@dividend^0,c
  6527   000A2A  6A1F               	clrf	(___awdiv@dividend+1)^0,c
  6528   000A2C  BE1E               	btfsc	___awdiv@dividend^0,7,c
  6529   000A2E  061F               	decf	(___awdiv@dividend+1)^0,f,c
  6530   000A30  ECA6  F010         	call	___awdiv	;wreg free
  6531   000A34  0E12               	movlw	18
  6532   000A36  261E               	addwf	?___awdiv^0,f,c
  6533   000A38  501E               	movf	?___awdiv^0,w,c
  6534   000A3A  0D03               	mullw	3
  6535   000A3C  0EDF               	movlw	low __powers_
  6536   000A3E  24F3               	addwf	243,w,c
  6537   000A40  6EF6               	movwf	tblptrl,c
  6538   000A42  0E7E               	movlw	high __powers_
  6539   000A44  20F4               	addwfc	244,w,c
  6540   000A46  6EF7               	movwf	tblptrh,c
  6541   000A48                     	if	0	;There are less than 3 active tblptr bytes
  6542   000A48                     	endif
  6543   000A48  0009               	tblrd		*+
  6544   000A4A  CFF5 F026          	movff	tablat,___ftmul@f1
  6545   000A4E  0009               	tblrd		*+
  6546   000A50  CFF5 F027          	movff	tablat,___ftmul@f1+1
  6547   000A54  000A               	tblrd		*-
  6548   000A56  CFF5 F028          	movff	tablat,___ftmul@f1+2
  6549   000A5A  ECAB  F00A         	call	___ftmul	;wreg free
  6550   000A5E  C026  F069         	movff	?___ftmul,_scale$1093
  6551   000A62  C027  F06A         	movff	?___ftmul+1,_scale$1093+1
  6552   000A66  C028  F06B         	movff	?___ftmul+2,_scale$1093+2
  6553                           
  6554                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  6555   000A6A  C069  F026         	movff	_scale$1093,___ftmul@f1
  6556   000A6E  C06A  F027         	movff	_scale$1093+1,___ftmul@f1+1
  6557   000A72  C06B  F028         	movff	_scale$1093+2,___ftmul@f1+2
  6558   000A76  0E00               	movlw	0
  6559   000A78  6E1B               	movwf	(___awmod@divisor+1)^0,c
  6560   000A7A  0E0A               	movlw	10
  6561   000A7C  6E1A               	movwf	___awmod@divisor^0,c
  6562   000A7E  516C               	movf	scale@scl& (0+255),w,b
  6563   000A80  6E18               	movwf	___awmod@dividend^0,c
  6564   000A82  6A19               	clrf	(___awmod@dividend+1)^0,c
  6565   000A84  BE18               	btfsc	___awmod@dividend^0,7,c
  6566   000A86  0619               	decf	(___awmod@dividend+1)^0,f,c
  6567   000A88  EC8F  F012         	call	___awmod	;wreg free
  6568   000A8C  5018               	movf	?___awmod^0,w,c
  6569   000A8E  0D03               	mullw	3
  6570   000A90  0EDF               	movlw	low __powers_
  6571   000A92  24F3               	addwf	243,w,c
  6572   000A94  6EF6               	movwf	tblptrl,c
  6573   000A96  0E7E               	movlw	high __powers_
  6574   000A98  20F4               	addwfc	244,w,c
  6575   000A9A  6EF7               	movwf	tblptrh,c
  6576   000A9C                     	if	0	;There are less than 3 active tblptr bytes
  6577   000A9C                     	endif
  6578   000A9C  0009               	tblrd		*+
  6579   000A9E  CFF5 F029          	movff	tablat,___ftmul@f2
  6580   000AA2  0009               	tblrd		*+
  6581   000AA4  CFF5 F02A          	movff	tablat,___ftmul@f2+1
  6582   000AA8  000A               	tblrd		*-
  6583   000AAA  CFF5 F02B          	movff	tablat,___ftmul@f2+2
  6584   000AAE  ECAB  F00A         	call	___ftmul	;wreg free
  6585   000AB2  C026  F066         	movff	?___ftmul,?_scale
  6586   000AB6  C027  F067         	movff	?___ftmul+1,?_scale+1
  6587   000ABA  C028  F068         	movff	?___ftmul+2,?_scale+2
  6588   000ABE  0012               	return	
  6589   000AC0                     l5902:
  6590                           
  6591                           ; BSR set to: 0
  6592                           ;doprnt.c: 446: else if(scl > 10)
  6593   000AC0  516C               	movf	scale@scl& (0+255),w,b
  6594   000AC2  0A80               	xorlw	128
  6595   000AC4  0F75               	addlw	-139
  6596   000AC6  A0D8               	btfss	status,0,c
  6597   000AC8  D044               	goto	l5908
  6598                           
  6599                           ; BSR set to: 0
  6600                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  6601   000ACA  0E00               	movlw	0
  6602   000ACC  6E21               	movwf	(___awdiv@divisor+1)^0,c
  6603   000ACE  0E0A               	movlw	10
  6604   000AD0  6E20               	movwf	___awdiv@divisor^0,c
  6605   000AD2  516C               	movf	scale@scl& (0+255),w,b
  6606   000AD4  6E1E               	movwf	___awdiv@dividend^0,c
  6607   000AD6  6A1F               	clrf	(___awdiv@dividend+1)^0,c
  6608   000AD8  BE1E               	btfsc	___awdiv@dividend^0,7,c
  6609   000ADA  061F               	decf	(___awdiv@dividend+1)^0,f,c
  6610   000ADC  ECA6  F010         	call	___awdiv	;wreg free
  6611   000AE0  0E09               	movlw	9
  6612   000AE2  261E               	addwf	?___awdiv^0,f,c
  6613   000AE4  501E               	movf	?___awdiv^0,w,c
  6614   000AE6  0D03               	mullw	3
  6615   000AE8  0EDF               	movlw	low __powers_
  6616   000AEA  24F3               	addwf	243,w,c
  6617   000AEC  6EF6               	movwf	tblptrl,c
  6618   000AEE  0E7E               	movlw	high __powers_
  6619   000AF0  20F4               	addwfc	244,w,c
  6620   000AF2  6EF7               	movwf	tblptrh,c
  6621   000AF4                     	if	0	;There are less than 3 active tblptr bytes
  6622   000AF4                     	endif
  6623   000AF4  0009               	tblrd		*+
  6624   000AF6  CFF5 F026          	movff	tablat,___ftmul@f1
  6625   000AFA  0009               	tblrd		*+
  6626   000AFC  CFF5 F027          	movff	tablat,___ftmul@f1+1
  6627   000B00  000A               	tblrd		*-
  6628   000B02  CFF5 F028          	movff	tablat,___ftmul@f1+2
  6629   000B06  0E00               	movlw	0
  6630   000B08  6E1B               	movwf	(___awmod@divisor+1)^0,c
  6631   000B0A  0E0A               	movlw	10
  6632   000B0C  6E1A               	movwf	___awmod@divisor^0,c
  6633   000B0E  0100               	movlb	0	; () banked
  6634   000B10  516C               	movf	scale@scl& (0+255),w,b
  6635   000B12  6E18               	movwf	___awmod@dividend^0,c
  6636   000B14  6A19               	clrf	(___awmod@dividend+1)^0,c
  6637   000B16  BE18               	btfsc	___awmod@dividend^0,7,c
  6638   000B18  0619               	decf	(___awmod@dividend+1)^0,f,c
  6639   000B1A  EC8F  F012         	call	___awmod	;wreg free
  6640   000B1E  5018               	movf	?___awmod^0,w,c
  6641   000B20  0D03               	mullw	3
  6642   000B22  0EDF               	movlw	low __powers_
  6643   000B24  24F3               	addwf	243,w,c
  6644   000B26  6EF6               	movwf	tblptrl,c
  6645   000B28  0E7E               	movlw	high __powers_
  6646   000B2A  20F4               	addwfc	244,w,c
  6647   000B2C  6EF7               	movwf	tblptrh,c
  6648   000B2E                     	if	0	;There are less than 3 active tblptr bytes
  6649   000B2E                     	endif
  6650   000B2E  0009               	tblrd		*+
  6651   000B30  CFF5 F029          	movff	tablat,___ftmul@f2
  6652   000B34  0009               	tblrd		*+
  6653   000B36  CFF5 F02A          	movff	tablat,___ftmul@f2+1
  6654   000B3A  000A               	tblrd		*-
  6655   000B3C  CFF5 F02B          	movff	tablat,___ftmul@f2+2
  6656   000B40  ECAB  F00A         	call	___ftmul	;wreg free
  6657   000B44  C026  F066         	movff	?___ftmul,?_scale
  6658   000B48  C027  F067         	movff	?___ftmul+1,?_scale+1
  6659   000B4C  C028  F068         	movff	?___ftmul+2,?_scale+2
  6660   000B50  0012               	return	
  6661   000B52                     l5908:
  6662                           
  6663                           ; BSR set to: 0
  6664                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  6665   000B52  516C               	movf	scale@scl& (0+255),w,b
  6666   000B54  0D03               	mullw	3
  6667   000B56  0EDF               	movlw	low __powers_
  6668   000B58  24F3               	addwf	243,w,c
  6669   000B5A  6EF6               	movwf	tblptrl,c
  6670   000B5C  0E7E               	movlw	high __powers_
  6671   000B5E  20F4               	addwfc	244,w,c
  6672   000B60  6EF7               	movwf	tblptrh,c
  6673   000B62                     	if	0	;There are less than 3 active tblptr bytes
  6674   000B62                     	endif
  6675   000B62  0009               	tblrd		*+
  6676   000B64  CFF5 F066          	movff	tablat,?_scale
  6677   000B68  0009               	tblrd		*+
  6678   000B6A  CFF5 F067          	movff	tablat,?_scale+1
  6679   000B6E  000A               	tblrd		*-
  6680   000B70  CFF5 F068          	movff	tablat,?_scale+2
  6681                           
  6682                           ; BSR set to: 0
  6683   000B74  0012               	return		;funcret
  6684   000B76                     __end_of_scale:
  6685                           	callstack 0
  6686                           
  6687 ;; *************** function ___awmod *****************
  6688 ;; Defined at:
  6689 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;  dividend        2   23[COMRAM] int 
  6692 ;;  divisor         2   25[COMRAM] int 
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;  sign            1   28[COMRAM] unsigned char 
  6695 ;;  counter         1   27[COMRAM] unsigned char 
  6696 ;; Return value:  Size  Location     Type
  6697 ;;                  2   23[COMRAM] int 
  6698 ;; Registers used:
  6699 ;;		wreg, status,2, status,0
  6700 ;; Tracked objects:
  6701 ;;		On entry : 3F/0
  6702 ;;		On exit  : 3F/0
  6703 ;;		Unchanged: 3F/0
  6704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6705 ;;      Params:         4       0       0       0       0       0       0       0       0
  6706 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6707 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6708 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6709 ;;Total ram usage:        6 bytes
  6710 ;; Hardware stack levels used: 1
  6711 ;; Hardware stack levels required when called: 8
  6712 ;; This function calls:
  6713 ;;		Nothing
  6714 ;; This function is called by:
  6715 ;;		_fin
  6716 ;;		_contador
  6717 ;;		_scale
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721                           	psect	text30
  6722   00251E                     __ptext30:
  6723                           	callstack 0
  6724   00251E                     ___awmod:
  6725                           	callstack 20
  6726                           
  6727                           ; BSR set to: 0
  6728                           
  6729                           ; BSR set to: 0
  6730                           ;incstack = 0
  6731   00251E  6A1D               	clrf	___awmod@sign^0,c
  6732                           
  6733                           ; BSR set to: 0
  6734   002520  AE19               	btfss	(___awmod@dividend+1)^0,7,c
  6735   002522  D006               	goto	l5780
  6736                           
  6737                           ; BSR set to: 0
  6738   002524  6C18               	negf	___awmod@dividend^0,c
  6739   002526  1E19               	comf	(___awmod@dividend+1)^0,f,c
  6740   002528  B0D8               	btfsc	status,0,c
  6741   00252A  2A19               	incf	(___awmod@dividend+1)^0,f,c
  6742                           
  6743                           ; BSR set to: 0
  6744   00252C  0E01               	movlw	1
  6745   00252E  6E1D               	movwf	___awmod@sign^0,c
  6746   002530                     l5780:
  6747                           
  6748                           ; BSR set to: 0
  6749   002530  AE1B               	btfss	(___awmod@divisor+1)^0,7,c
  6750   002532  D004               	goto	l5784
  6751                           
  6752                           ; BSR set to: 0
  6753   002534  6C1A               	negf	___awmod@divisor^0,c
  6754   002536  1E1B               	comf	(___awmod@divisor+1)^0,f,c
  6755   002538  B0D8               	btfsc	status,0,c
  6756   00253A  2A1B               	incf	(___awmod@divisor+1)^0,f,c
  6757   00253C                     l5784:
  6758                           
  6759                           ; BSR set to: 0
  6760   00253C  501A               	movf	___awmod@divisor^0,w,c
  6761   00253E  101B               	iorwf	(___awmod@divisor+1)^0,w,c
  6762   002540  B4D8               	btfsc	status,2,c
  6763   002542  D018               	goto	l5800
  6764                           
  6765                           ; BSR set to: 0
  6766   002544  0E01               	movlw	1
  6767   002546  6E1C               	movwf	___awmod@counter^0,c
  6768   002548  D004               	goto	l5790
  6769   00254A                     l5788:
  6770                           
  6771                           ; BSR set to: 0
  6772   00254A  90D8               	bcf	status,0,c
  6773   00254C  361A               	rlcf	___awmod@divisor^0,f,c
  6774   00254E  361B               	rlcf	(___awmod@divisor+1)^0,f,c
  6775   002550  2A1C               	incf	___awmod@counter^0,f,c
  6776   002552                     l5790:
  6777                           
  6778                           ; BSR set to: 0
  6779   002552  AE1B               	btfss	(___awmod@divisor+1)^0,7,c
  6780   002554  D7FA               	goto	l5788
  6781   002556                     u5710:
  6782                           
  6783                           ; BSR set to: 0
  6784   002556  501A               	movf	___awmod@divisor^0,w,c
  6785   002558  5C18               	subwf	___awmod@dividend^0,w,c
  6786   00255A  501B               	movf	(___awmod@divisor+1)^0,w,c
  6787   00255C  5819               	subwfb	(___awmod@dividend+1)^0,w,c
  6788   00255E  A0D8               	btfss	status,0,c
  6789   002560  D004               	goto	l5796
  6790                           
  6791                           ; BSR set to: 0
  6792   002562  501A               	movf	___awmod@divisor^0,w,c
  6793   002564  5E18               	subwf	___awmod@dividend^0,f,c
  6794   002566  501B               	movf	(___awmod@divisor+1)^0,w,c
  6795   002568  5A19               	subwfb	(___awmod@dividend+1)^0,f,c
  6796   00256A                     l5796:
  6797                           
  6798                           ; BSR set to: 0
  6799   00256A  90D8               	bcf	status,0,c
  6800   00256C  321B               	rrcf	(___awmod@divisor+1)^0,f,c
  6801   00256E  321A               	rrcf	___awmod@divisor^0,f,c
  6802                           
  6803                           ; BSR set to: 0
  6804   002570  2E1C               	decfsz	___awmod@counter^0,f,c
  6805   002572  D7F1               	goto	u5710
  6806   002574                     l5800:
  6807                           
  6808                           ; BSR set to: 0
  6809   002574  501D               	movf	___awmod@sign^0,w,c
  6810   002576  B4D8               	btfsc	status,2,c
  6811   002578  D004               	goto	l5804
  6812                           
  6813                           ; BSR set to: 0
  6814   00257A  6C18               	negf	___awmod@dividend^0,c
  6815   00257C  1E19               	comf	(___awmod@dividend+1)^0,f,c
  6816   00257E  B0D8               	btfsc	status,0,c
  6817   002580  2A19               	incf	(___awmod@dividend+1)^0,f,c
  6818   002582                     l5804:
  6819                           
  6820                           ; BSR set to: 0
  6821   002582  C018  F018         	movff	___awmod@dividend,?___awmod
  6822   002586  C019  F019         	movff	___awmod@dividend+1,?___awmod+1
  6823                           
  6824                           ; BSR set to: 0
  6825   00258A  0012               	return		;funcret
  6826   00258C                     __end_of___awmod:
  6827                           	callstack 0
  6828                           
  6829 ;; *************** function ___awdiv *****************
  6830 ;; Defined at:
  6831 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c"
  6832 ;; Parameters:    Size  Location     Type
  6833 ;;  dividend        2   29[COMRAM] int 
  6834 ;;  divisor         2   31[COMRAM] int 
  6835 ;; Auto vars:     Size  Location     Type
  6836 ;;  quotient        2   35[COMRAM] int 
  6837 ;;  sign            1   34[COMRAM] unsigned char 
  6838 ;;  counter         1   33[COMRAM] unsigned char 
  6839 ;; Return value:  Size  Location     Type
  6840 ;;                  2   29[COMRAM] int 
  6841 ;; Registers used:
  6842 ;;		wreg, status,2, status,0
  6843 ;; Tracked objects:
  6844 ;;		On entry : 0/0
  6845 ;;		On exit  : 0/0
  6846 ;;		Unchanged: 0/0
  6847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6848 ;;      Params:         4       0       0       0       0       0       0       0       0
  6849 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6850 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6851 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6852 ;;Total ram usage:        8 bytes
  6853 ;; Hardware stack levels used: 1
  6854 ;; Hardware stack levels required when called: 8
  6855 ;; This function calls:
  6856 ;;		Nothing
  6857 ;; This function is called by:
  6858 ;;		_fin
  6859 ;;		_contador
  6860 ;;		_scale
  6861 ;;		_printf
  6862 ;; This function uses a non-reentrant model
  6863 ;;
  6864                           
  6865                           	psect	text31
  6866   00214C                     __ptext31:
  6867                           	callstack 0
  6868   00214C                     ___awdiv:
  6869                           	callstack 20
  6870                           
  6871                           ; BSR set to: 0
  6872                           ;incstack = 0
  6873   00214C  6A23               	clrf	___awdiv@sign^0,c
  6874   00214E  AE21               	btfss	(___awdiv@divisor+1)^0,7,c
  6875   002150  D006               	goto	l5736
  6876   002152  6C20               	negf	___awdiv@divisor^0,c
  6877   002154  1E21               	comf	(___awdiv@divisor+1)^0,f,c
  6878   002156  B0D8               	btfsc	status,0,c
  6879   002158  2A21               	incf	(___awdiv@divisor+1)^0,f,c
  6880   00215A  0E01               	movlw	1
  6881   00215C  6E23               	movwf	___awdiv@sign^0,c
  6882   00215E                     l5736:
  6883   00215E  AE1F               	btfss	(___awdiv@dividend+1)^0,7,c
  6884   002160  D006               	goto	l5742
  6885   002162  6C1E               	negf	___awdiv@dividend^0,c
  6886   002164  1E1F               	comf	(___awdiv@dividend+1)^0,f,c
  6887   002166  B0D8               	btfsc	status,0,c
  6888   002168  2A1F               	incf	(___awdiv@dividend+1)^0,f,c
  6889   00216A  0E01               	movlw	1
  6890   00216C  1A23               	xorwf	___awdiv@sign^0,f,c
  6891   00216E                     l5742:
  6892   00216E  0E00               	movlw	0
  6893   002170  6E25               	movwf	(___awdiv@quotient+1)^0,c
  6894   002172  0E00               	movlw	0
  6895   002174  6E24               	movwf	___awdiv@quotient^0,c
  6896   002176  5020               	movf	___awdiv@divisor^0,w,c
  6897   002178  1021               	iorwf	(___awdiv@divisor+1)^0,w,c
  6898   00217A  B4D8               	btfsc	status,2,c
  6899   00217C  D01C               	goto	l5764
  6900   00217E  0E01               	movlw	1
  6901   002180  6E22               	movwf	___awdiv@counter^0,c
  6902   002182  D004               	goto	l5750
  6903   002184                     l5748:
  6904   002184  90D8               	bcf	status,0,c
  6905   002186  3620               	rlcf	___awdiv@divisor^0,f,c
  6906   002188  3621               	rlcf	(___awdiv@divisor+1)^0,f,c
  6907   00218A  2A22               	incf	___awdiv@counter^0,f,c
  6908   00218C                     l5750:
  6909   00218C  AE21               	btfss	(___awdiv@divisor+1)^0,7,c
  6910   00218E  D7FA               	goto	l5748
  6911   002190                     u5650:
  6912   002190  90D8               	bcf	status,0,c
  6913   002192  3624               	rlcf	___awdiv@quotient^0,f,c
  6914   002194  3625               	rlcf	(___awdiv@quotient+1)^0,f,c
  6915   002196  5020               	movf	___awdiv@divisor^0,w,c
  6916   002198  5C1E               	subwf	___awdiv@dividend^0,w,c
  6917   00219A  5021               	movf	(___awdiv@divisor+1)^0,w,c
  6918   00219C  581F               	subwfb	(___awdiv@dividend+1)^0,w,c
  6919   00219E  A0D8               	btfss	status,0,c
  6920   0021A0  D005               	goto	l5760
  6921   0021A2  5020               	movf	___awdiv@divisor^0,w,c
  6922   0021A4  5E1E               	subwf	___awdiv@dividend^0,f,c
  6923   0021A6  5021               	movf	(___awdiv@divisor+1)^0,w,c
  6924   0021A8  5A1F               	subwfb	(___awdiv@dividend+1)^0,f,c
  6925   0021AA  8024               	bsf	___awdiv@quotient^0,0,c
  6926   0021AC                     l5760:
  6927   0021AC  90D8               	bcf	status,0,c
  6928   0021AE  3221               	rrcf	(___awdiv@divisor+1)^0,f,c
  6929   0021B0  3220               	rrcf	___awdiv@divisor^0,f,c
  6930   0021B2  2E22               	decfsz	___awdiv@counter^0,f,c
  6931   0021B4  D7ED               	goto	u5650
  6932   0021B6                     l5764:
  6933   0021B6  5023               	movf	___awdiv@sign^0,w,c
  6934   0021B8  B4D8               	btfsc	status,2,c
  6935   0021BA  D004               	goto	l5768
  6936   0021BC  6C24               	negf	___awdiv@quotient^0,c
  6937   0021BE  1E25               	comf	(___awdiv@quotient+1)^0,f,c
  6938   0021C0  B0D8               	btfsc	status,0,c
  6939   0021C2  2A25               	incf	(___awdiv@quotient+1)^0,f,c
  6940   0021C4                     l5768:
  6941   0021C4  C024  F01E         	movff	___awdiv@quotient,?___awdiv
  6942   0021C8  C025  F01F         	movff	___awdiv@quotient+1,?___awdiv+1
  6943   0021CC  0012               	return		;funcret
  6944   0021CE                     __end_of___awdiv:
  6945                           	callstack 0
  6946                           
  6947 ;; *************** function _putch *****************
  6948 ;; Defined at:
  6949 ;;		line 442 in file "Lab6.c"
  6950 ;; Parameters:    Size  Location     Type
  6951 ;;  data            1    wreg     unsigned char 
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;  data            1   23[COMRAM] unsigned char 
  6954 ;; Return value:  Size  Location     Type
  6955 ;;                  1    wreg      void 
  6956 ;; Registers used:
  6957 ;;		wreg
  6958 ;; Tracked objects:
  6959 ;;		On entry : 3F/0
  6960 ;;		On exit  : 0/0
  6961 ;;		Unchanged: 0/0
  6962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6963 ;;      Params:         0       0       0       0       0       0       0       0       0
  6964 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6965 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6966 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6967 ;;Total ram usage:        1 bytes
  6968 ;; Hardware stack levels used: 1
  6969 ;; Hardware stack levels required when called: 8
  6970 ;; This function calls:
  6971 ;;		Nothing
  6972 ;; This function is called by:
  6973 ;;		_printf
  6974 ;; This function uses a non-reentrant model
  6975 ;;
  6976                           
  6977                           	psect	text32
  6978   002E06                     __ptext32:
  6979                           	callstack 0
  6980   002E06                     _putch:
  6981                           	callstack 19
  6982                           
  6983                           ;incstack = 0
  6984                           ;putch@data stored from wreg
  6985   002E06  6E18               	movwf	putch@data^0,c
  6986   002E08                     
  6987                           ;Lab6.c: 443: while(TRMT == 0);
  6988   002E08  A2AC               	btfss	4012,1,c	;volatile
  6989   002E0A  D7FE               	goto	l3844
  6990                           
  6991                           ;Lab6.c: 444: TXREG = data;
  6992   002E0C  C018  FFAD         	movff	putch@data,4013	;volatile
  6993   002E10  0012               	return		;funcret
  6994   002E12                     __end_of_putch:
  6995                           	callstack 0
  6996                           
  6997 ;; *************** function _isdigit *****************
  6998 ;; Defined at:
  6999 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\isdigit.c"
  7000 ;; Parameters:    Size  Location     Type
  7001 ;;  c               1    wreg     unsigned char 
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;  c               1   25[COMRAM] unsigned char 
  7004 ;; Return value:  Size  Location     Type
  7005 ;;		None               void
  7006 ;; Registers used:
  7007 ;;		wreg, status,2, status,0
  7008 ;; Tracked objects:
  7009 ;;		On entry : 3F/0
  7010 ;;		On exit  : 0/0
  7011 ;;		Unchanged: 0/0
  7012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7013 ;;      Params:         0       0       0       0       0       0       0       0       0
  7014 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7015 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7016 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7017 ;;Total ram usage:        3 bytes
  7018 ;; Hardware stack levels used: 1
  7019 ;; Hardware stack levels required when called: 8
  7020 ;; This function calls:
  7021 ;;		Nothing
  7022 ;; This function is called by:
  7023 ;;		_printf
  7024 ;; This function uses a non-reentrant model
  7025 ;;
  7026                           
  7027                           	psect	text33
  7028   002D36                     __ptext33:
  7029                           	callstack 0
  7030   002D36                     _isdigit:
  7031                           	callstack 19
  7032                           
  7033                           ;incstack = 0
  7034                           ;isdigit@c stored from wreg
  7035   002D36  6E1A               	movwf	isdigit@c^0,c
  7036   002D38  6A19               	clrf	_isdigit$854^0,c
  7037   002D3A  0E3A               	movlw	58
  7038   002D3C  601A               	cpfslt	isdigit@c^0,c
  7039   002D3E  D005               	goto	l3916
  7040   002D40  0E2F               	movlw	47
  7041   002D42  641A               	cpfsgt	isdigit@c^0,c
  7042   002D44  D002               	goto	l3916
  7043   002D46  0E01               	movlw	1
  7044   002D48  6E19               	movwf	_isdigit$854^0,c
  7045   002D4A                     l3916:
  7046   002D4A  C019  F018         	movff	_isdigit$854,??_isdigit
  7047   002D4E  3018               	rrcf	??_isdigit^0,w,c
  7048   002D50  0012               	return		;funcret
  7049   002D52                     __end_of_isdigit:
  7050                           	callstack 0
  7051                           
  7052 ;; *************** function _fround *****************
  7053 ;; Defined at:
  7054 ;;		line 417 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\doprnt.c"
  7055 ;; Parameters:    Size  Location     Type
  7056 ;;  prec            1    wreg     unsigned char 
  7057 ;; Auto vars:     Size  Location     Type
  7058 ;;  prec            1   15[BANK0 ] unsigned char 
  7059 ;; Return value:  Size  Location     Type
  7060 ;;                  3    6[BANK0 ] unsigned char 
  7061 ;; Registers used:
  7062 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7063 ;; Tracked objects:
  7064 ;;		On entry : 3F/0
  7065 ;;		On exit  : 3F/0
  7066 ;;		Unchanged: 0/0
  7067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7068 ;;      Params:         0       3       0       0       0       0       0       0       0
  7069 ;;      Locals:         0       7       0       0       0       0       0       0       0
  7070 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7071 ;;      Totals:         2      10       0       0       0       0       0       0       0
  7072 ;;Total ram usage:       12 bytes
  7073 ;; Hardware stack levels used: 1
  7074 ;; Hardware stack levels required when called: 10
  7075 ;; This function calls:
  7076 ;;		___ftmul
  7077 ;;		___lbdiv
  7078 ;;		___lbmod
  7079 ;; This function is called by:
  7080 ;;		_printf
  7081 ;; This function uses a non-reentrant model
  7082 ;;
  7083                           
  7084                           	psect	text34
  7085   000B76                     __ptext34:
  7086                           	callstack 0
  7087   000B76                     _fround:
  7088                           	callstack 17
  7089                           
  7090                           ;incstack = 0
  7091                           ;fround@prec stored from wreg
  7092   000B76  6F6F               	movwf	fround@prec& (0+255),b
  7093                           
  7094                           ;doprnt.c: 421: if(prec>=110)
  7095   000B78  0E6D               	movlw	109
  7096   000B7A  0100               	movlb	0	; () banked
  7097   000B7C  656F               	cpfsgt	fround@prec& (0+255),b
  7098   000B7E  D07D               	goto	l5862
  7099                           
  7100                           ; BSR set to: 0
  7101                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  7102   000B80  0E0A               	movlw	10
  7103   000B82  6E1C               	movwf	___lbdiv@divisor^0,c
  7104   000B84  0E64               	movlw	100
  7105   000B86  6E18               	movwf	___lbmod@divisor^0,c
  7106   000B88  516F               	movf	fround@prec& (0+255),w,b
  7107   000B8A  EC3B  F016         	call	___lbmod
  7108   000B8E  EC6F  F015         	call	___lbdiv
  7109   000B92  6E2F               	movwf	??_fround^0,c
  7110   000B94  502F               	movf	??_fround^0,w,c
  7111   000B96  0D03               	mullw	3
  7112   000B98  0E1B               	movlw	27
  7113   000B9A  26F3               	addwf	243,f,c
  7114   000B9C  0E00               	movlw	0
  7115   000B9E  22F4               	addwfc	244,f,c
  7116   000BA0  0E06               	movlw	low __npowers_
  7117   000BA2  24F3               	addwf	243,w,c
  7118   000BA4  6EF6               	movwf	tblptrl,c
  7119   000BA6  0E7F               	movlw	high __npowers_
  7120   000BA8  20F4               	addwfc	244,w,c
  7121   000BAA  6EF7               	movwf	tblptrh,c
  7122   000BAC                     	if	0	;There are less than 3 active tblptr bytes
  7123   000BAC                     	endif
  7124   000BAC  0009               	tblrd		*+
  7125   000BAE  CFF5 F029          	movff	tablat,___ftmul@f2
  7126   000BB2  0009               	tblrd		*+
  7127   000BB4  CFF5 F02A          	movff	tablat,___ftmul@f2+1
  7128   000BB8  000A               	tblrd		*-
  7129   000BBA  CFF5 F02B          	movff	tablat,___ftmul@f2+2
  7130   000BBE  0E64               	movlw	100
  7131   000BC0  6E1C               	movwf	___lbdiv@divisor^0,c
  7132   000BC2  0100               	movlb	0	; () banked
  7133   000BC4  516F               	movf	fround@prec& (0+255),w,b
  7134   000BC6  EC6F  F015         	call	___lbdiv
  7135   000BCA  6E30               	movwf	(??_fround+1)^0,c
  7136   000BCC  5030               	movf	(??_fround+1)^0,w,c
  7137   000BCE  0D03               	mullw	3
  7138   000BD0  0E36               	movlw	54
  7139   000BD2  26F3               	addwf	243,f,c
  7140   000BD4  0E00               	movlw	0
  7141   000BD6  22F4               	addwfc	244,f,c
  7142   000BD8  0E06               	movlw	low __npowers_
  7143   000BDA  24F3               	addwf	243,w,c
  7144   000BDC  6EF6               	movwf	tblptrl,c
  7145   000BDE  0E7F               	movlw	high __npowers_
  7146   000BE0  20F4               	addwfc	244,w,c
  7147   000BE2  6EF7               	movwf	tblptrh,c
  7148   000BE4                     	if	0	;There are less than 3 active tblptr bytes
  7149   000BE4                     	endif
  7150   000BE4  0009               	tblrd		*+
  7151   000BE6  CFF5 F026          	movff	tablat,___ftmul@f1
  7152   000BEA  0009               	tblrd		*+
  7153   000BEC  CFF5 F027          	movff	tablat,___ftmul@f1+1
  7154   000BF0  000A               	tblrd		*-
  7155   000BF2  CFF5 F028          	movff	tablat,___ftmul@f1+2
  7156   000BF6  ECAB  F00A         	call	___ftmul	;wreg free
  7157   000BFA  C026  F06C         	movff	?___ftmul,_fround$1091
  7158   000BFE  C027  F06D         	movff	?___ftmul+1,_fround$1091+1
  7159   000C02  C028  F06E         	movff	?___ftmul+2,_fround$1091+2
  7160                           
  7161                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  7162   000C06  0E0A               	movlw	10
  7163   000C08  6E18               	movwf	___lbmod@divisor^0,c
  7164   000C0A  516F               	movf	fround@prec& (0+255),w,b
  7165   000C0C  EC3B  F016         	call	___lbmod
  7166   000C10  6E2F               	movwf	??_fround^0,c
  7167   000C12  502F               	movf	??_fround^0,w,c
  7168   000C14  0D03               	mullw	3
  7169   000C16  0E06               	movlw	low __npowers_
  7170   000C18  24F3               	addwf	243,w,c
  7171   000C1A  6EF6               	movwf	tblptrl,c
  7172   000C1C  0E7F               	movlw	high __npowers_
  7173   000C1E  20F4               	addwfc	244,w,c
  7174   000C20  6EF7               	movwf	tblptrh,c
  7175   000C22                     	if	0	;There are less than 3 active tblptr bytes
  7176   000C22                     	endif
  7177   000C22  0009               	tblrd		*+
  7178   000C24  CFF5 F029          	movff	tablat,___ftmul@f2
  7179   000C28  0009               	tblrd		*+
  7180   000C2A  CFF5 F02A          	movff	tablat,___ftmul@f2+1
  7181   000C2E  000A               	tblrd		*-
  7182   000C30  CFF5 F02B          	movff	tablat,___ftmul@f2+2
  7183   000C34  C06C  F026         	movff	_fround$1091,___ftmul@f1
  7184   000C38  C06D  F027         	movff	_fround$1091+1,___ftmul@f1+1
  7185   000C3C  C06E  F028         	movff	_fround$1091+2,___ftmul@f1+2
  7186   000C40  ECAB  F00A         	call	___ftmul	;wreg free
  7187   000C44  C026  F069         	movff	?___ftmul,_fround$1092
  7188   000C48  C027  F06A         	movff	?___ftmul+1,_fround$1092+1
  7189   000C4C  C028  F06B         	movff	?___ftmul+2,_fround$1092+2
  7190                           
  7191                           ; BSR set to: 0
  7192                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  7193   000C50  C069  F026         	movff	_fround$1092,___ftmul@f1
  7194   000C54  C06A  F027         	movff	_fround$1092+1,___ftmul@f1+1
  7195   000C58  C06B  F028         	movff	_fround$1092+2,___ftmul@f1+2
  7196   000C5C  0E00               	movlw	0
  7197   000C5E  6E29               	movwf	___ftmul@f2^0,c
  7198   000C60  0E00               	movlw	0
  7199   000C62  6E2A               	movwf	(___ftmul@f2+1)^0,c
  7200   000C64  0E3F               	movlw	63
  7201   000C66  6E2B               	movwf	(___ftmul@f2+2)^0,c
  7202   000C68  ECAB  F00A         	call	___ftmul	;wreg free
  7203   000C6C  C026  F066         	movff	?___ftmul,?_fround
  7204   000C70  C027  F067         	movff	?___ftmul+1,?_fround+1
  7205   000C74  C028  F068         	movff	?___ftmul+2,?_fround+2
  7206   000C78  0012               	return	
  7207   000C7A                     l5862:
  7208                           
  7209                           ; BSR set to: 0
  7210                           ;doprnt.c: 423: else if(prec > 10)
  7211   000C7A  0E0A               	movlw	10
  7212   000C7C  656F               	cpfsgt	fround@prec& (0+255),b
  7213   000C7E  D050               	goto	l5870
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  7217   000C80  0E0A               	movlw	10
  7218   000C82  6E18               	movwf	___lbmod@divisor^0,c
  7219   000C84  516F               	movf	fround@prec& (0+255),w,b
  7220   000C86  EC3B  F016         	call	___lbmod
  7221   000C8A  6E2F               	movwf	??_fround^0,c
  7222   000C8C  502F               	movf	??_fround^0,w,c
  7223   000C8E  0D03               	mullw	3
  7224   000C90  0E06               	movlw	low __npowers_
  7225   000C92  24F3               	addwf	243,w,c
  7226   000C94  6EF6               	movwf	tblptrl,c
  7227   000C96  0E7F               	movlw	high __npowers_
  7228   000C98  20F4               	addwfc	244,w,c
  7229   000C9A  6EF7               	movwf	tblptrh,c
  7230   000C9C                     	if	0	;There are less than 3 active tblptr bytes
  7231   000C9C                     	endif
  7232   000C9C  0009               	tblrd		*+
  7233   000C9E  CFF5 F029          	movff	tablat,___ftmul@f2
  7234   000CA2  0009               	tblrd		*+
  7235   000CA4  CFF5 F02A          	movff	tablat,___ftmul@f2+1
  7236   000CA8  000A               	tblrd		*-
  7237   000CAA  CFF5 F02B          	movff	tablat,___ftmul@f2+2
  7238   000CAE  0E0A               	movlw	10
  7239   000CB0  6E1C               	movwf	___lbdiv@divisor^0,c
  7240   000CB2  0100               	movlb	0	; () banked
  7241   000CB4  516F               	movf	fround@prec& (0+255),w,b
  7242   000CB6  EC6F  F015         	call	___lbdiv
  7243   000CBA  6E30               	movwf	(??_fround+1)^0,c
  7244   000CBC  5030               	movf	(??_fround+1)^0,w,c
  7245   000CBE  0D03               	mullw	3
  7246   000CC0  0E1B               	movlw	27
  7247   000CC2  26F3               	addwf	243,f,c
  7248   000CC4  0E00               	movlw	0
  7249   000CC6  22F4               	addwfc	244,f,c
  7250   000CC8  0E06               	movlw	low __npowers_
  7251   000CCA  24F3               	addwf	243,w,c
  7252   000CCC  6EF6               	movwf	tblptrl,c
  7253   000CCE  0E7F               	movlw	high __npowers_
  7254   000CD0  20F4               	addwfc	244,w,c
  7255   000CD2  6EF7               	movwf	tblptrh,c
  7256   000CD4                     	if	0	;There are less than 3 active tblptr bytes
  7257   000CD4                     	endif
  7258   000CD4  0009               	tblrd		*+
  7259   000CD6  CFF5 F026          	movff	tablat,___ftmul@f1
  7260   000CDA  0009               	tblrd		*+
  7261   000CDC  CFF5 F027          	movff	tablat,___ftmul@f1+1
  7262   000CE0  000A               	tblrd		*-
  7263   000CE2  CFF5 F028          	movff	tablat,___ftmul@f1+2
  7264   000CE6  ECAB  F00A         	call	___ftmul	;wreg free
  7265   000CEA  C026  F06C         	movff	?___ftmul,_fround$1091
  7266   000CEE  C027  F06D         	movff	?___ftmul+1,_fround$1091+1
  7267   000CF2  C028  F06E         	movff	?___ftmul+2,_fround$1091+2
  7268                           
  7269                           ; BSR set to: 0
  7270                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  7271   000CF6  C06C  F026         	movff	_fround$1091,___ftmul@f1
  7272   000CFA  C06D  F027         	movff	_fround$1091+1,___ftmul@f1+1
  7273   000CFE  C06E  F028         	movff	_fround$1091+2,___ftmul@f1+2
  7274   000D02  0E00               	movlw	0
  7275   000D04  6E29               	movwf	___ftmul@f2^0,c
  7276   000D06  0E00               	movlw	0
  7277   000D08  6E2A               	movwf	(___ftmul@f2+1)^0,c
  7278   000D0A  0E3F               	movlw	63
  7279   000D0C  6E2B               	movwf	(___ftmul@f2+2)^0,c
  7280   000D0E  ECAB  F00A         	call	___ftmul	;wreg free
  7281   000D12  C026  F066         	movff	?___ftmul,?_fround
  7282   000D16  C027  F067         	movff	?___ftmul+1,?_fround+1
  7283   000D1A  C028  F068         	movff	?___ftmul+2,?_fround+2
  7284   000D1E  0012               	return	
  7285   000D20                     l5870:
  7286                           
  7287                           ; BSR set to: 0
  7288                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  7289   000D20  516F               	movf	fround@prec& (0+255),w,b
  7290   000D22  0D03               	mullw	3
  7291   000D24  0E06               	movlw	low __npowers_
  7292   000D26  24F3               	addwf	243,w,c
  7293   000D28  6EF6               	movwf	tblptrl,c
  7294   000D2A  0E7F               	movlw	high __npowers_
  7295   000D2C  20F4               	addwfc	244,w,c
  7296   000D2E  6EF7               	movwf	tblptrh,c
  7297   000D30                     	if	0	;There are less than 3 active tblptr bytes
  7298   000D30                     	endif
  7299   000D30  0009               	tblrd		*+
  7300   000D32  CFF5 F026          	movff	tablat,___ftmul@f1
  7301   000D36  0009               	tblrd		*+
  7302   000D38  CFF5 F027          	movff	tablat,___ftmul@f1+1
  7303   000D3C  000A               	tblrd		*-
  7304   000D3E  CFF5 F028          	movff	tablat,___ftmul@f1+2
  7305   000D42  0E00               	movlw	0
  7306   000D44  6E29               	movwf	___ftmul@f2^0,c
  7307   000D46  0E00               	movlw	0
  7308   000D48  6E2A               	movwf	(___ftmul@f2+1)^0,c
  7309   000D4A  0E3F               	movlw	63
  7310   000D4C  6E2B               	movwf	(___ftmul@f2+2)^0,c
  7311   000D4E  ECAB  F00A         	call	___ftmul	;wreg free
  7312   000D52  C026  F066         	movff	?___ftmul,?_fround
  7313   000D56  C027  F067         	movff	?___ftmul+1,?_fround+1
  7314   000D5A  C028  F068         	movff	?___ftmul+2,?_fround+2
  7315                           
  7316                           ; BSR set to: 0
  7317   000D5E  0012               	return		;funcret
  7318   000D60                     __end_of_fround:
  7319                           	callstack 0
  7320                           
  7321 ;; *************** function ___lbmod *****************
  7322 ;; Defined at:
  7323 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbmod.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;  dividend        1    wreg     unsigned char 
  7326 ;;  divisor         1   23[COMRAM] unsigned char 
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;  dividend        1   24[COMRAM] unsigned char 
  7329 ;;  rem             1   26[COMRAM] unsigned char 
  7330 ;;  counter         1   25[COMRAM] unsigned char 
  7331 ;; Return value:  Size  Location     Type
  7332 ;;                  1    wreg      unsigned char 
  7333 ;; Registers used:
  7334 ;;		wreg, status,2, status,0
  7335 ;; Tracked objects:
  7336 ;;		On entry : 0/0
  7337 ;;		On exit  : 0/0
  7338 ;;		Unchanged: 0/0
  7339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7340 ;;      Params:         1       0       0       0       0       0       0       0       0
  7341 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7342 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7343 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7344 ;;Total ram usage:        4 bytes
  7345 ;; Hardware stack levels used: 1
  7346 ;; Hardware stack levels required when called: 8
  7347 ;; This function calls:
  7348 ;;		Nothing
  7349 ;; This function is called by:
  7350 ;;		_EscribeLCD_n8
  7351 ;;		_fround
  7352 ;; This function uses a non-reentrant model
  7353 ;;
  7354                           
  7355                           	psect	text35
  7356   002C76                     __ptext35:
  7357                           	callstack 0
  7358   002C76                     ___lbmod:
  7359                           	callstack 20
  7360                           
  7361                           ; BSR set to: 0
  7362                           ;incstack = 0
  7363                           ;___lbmod@dividend stored from wreg
  7364   002C76  6E19               	movwf	___lbmod@dividend^0,c
  7365   002C78  0E08               	movlw	8
  7366   002C7A  6E1A               	movwf	___lbmod@counter^0,c
  7367   002C7C  6A1B               	clrf	___lbmod@rem^0,c
  7368   002C7E                     l5838:
  7369   002C7E  90D8               	bcf	status,0,c
  7370   002C80  3419               	rlcf	___lbmod@dividend^0,w,c
  7371   002C82  341B               	rlcf	___lbmod@rem^0,w,c
  7372   002C84  6E1B               	movwf	___lbmod@rem^0,c
  7373   002C86  90D8               	bcf	status,0,c
  7374   002C88  3619               	rlcf	___lbmod@dividend^0,f,c
  7375   002C8A  5018               	movf	___lbmod@divisor^0,w,c
  7376   002C8C  5C1B               	subwf	___lbmod@rem^0,w,c
  7377   002C8E  A0D8               	btfss	status,0,c
  7378   002C90  D002               	goto	l5846
  7379   002C92  5018               	movf	___lbmod@divisor^0,w,c
  7380   002C94  5E1B               	subwf	___lbmod@rem^0,f,c
  7381   002C96                     l5846:
  7382   002C96  2E1A               	decfsz	___lbmod@counter^0,f,c
  7383   002C98  D7F2               	goto	l5838
  7384   002C9A  501B               	movf	___lbmod@rem^0,w,c
  7385   002C9C  0012               	return		;funcret
  7386   002C9E                     __end_of___lbmod:
  7387                           	callstack 0
  7388                           
  7389 ;; *************** function ___lbdiv *****************
  7390 ;; Defined at:
  7391 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbdiv.c"
  7392 ;; Parameters:    Size  Location     Type
  7393 ;;  dividend        1    wreg     unsigned char 
  7394 ;;  divisor         1   27[COMRAM] unsigned char 
  7395 ;; Auto vars:     Size  Location     Type
  7396 ;;  dividend        1   28[COMRAM] unsigned char 
  7397 ;;  quotient        1   30[COMRAM] unsigned char 
  7398 ;;  counter         1   29[COMRAM] unsigned char 
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  1    wreg      unsigned char 
  7401 ;; Registers used:
  7402 ;;		wreg, status,2, status,0
  7403 ;; Tracked objects:
  7404 ;;		On entry : 0/0
  7405 ;;		On exit  : 0/0
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7408 ;;      Params:         1       0       0       0       0       0       0       0       0
  7409 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7410 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7411 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7412 ;;Total ram usage:        4 bytes
  7413 ;; Hardware stack levels used: 1
  7414 ;; Hardware stack levels required when called: 8
  7415 ;; This function calls:
  7416 ;;		Nothing
  7417 ;; This function is called by:
  7418 ;;		_EscribeLCD_n8
  7419 ;;		_fround
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423                           	psect	text36
  7424   002ADE                     __ptext36:
  7425                           	callstack 0
  7426   002ADE                     ___lbdiv:
  7427                           	callstack 20
  7428                           
  7429                           ;incstack = 0
  7430                           ;___lbdiv@dividend stored from wreg
  7431   002ADE  6E1D               	movwf	___lbdiv@dividend^0,c
  7432   002AE0  6A1F               	clrf	___lbdiv@quotient^0,c
  7433   002AE2  501C               	movf	___lbdiv@divisor^0,w,c
  7434   002AE4  B4D8               	btfsc	status,2,c
  7435   002AE6  D015               	goto	l5830
  7436   002AE8  0E01               	movlw	1
  7437   002AEA  6E1E               	movwf	___lbdiv@counter^0,c
  7438   002AEC  D003               	goto	l5818
  7439   002AEE                     l5814:
  7440   002AEE  90D8               	bcf	status,0,c
  7441   002AF0  361C               	rlcf	___lbdiv@divisor^0,f,c
  7442   002AF2  2A1E               	incf	___lbdiv@counter^0,f,c
  7443   002AF4                     l5818:
  7444   002AF4  AE1C               	btfss	___lbdiv@divisor^0,7,c
  7445   002AF6  D7FB               	goto	l5814
  7446   002AF8                     u5750:
  7447   002AF8  90D8               	bcf	status,0,c
  7448   002AFA  361F               	rlcf	___lbdiv@quotient^0,f,c
  7449   002AFC  501C               	movf	___lbdiv@divisor^0,w,c
  7450   002AFE  5C1D               	subwf	___lbdiv@dividend^0,w,c
  7451   002B00  A0D8               	btfss	status,0,c
  7452   002B02  D003               	goto	l5826
  7453   002B04  501C               	movf	___lbdiv@divisor^0,w,c
  7454   002B06  5E1D               	subwf	___lbdiv@dividend^0,f,c
  7455   002B08  801F               	bsf	___lbdiv@quotient^0,0,c
  7456   002B0A                     l5826:
  7457   002B0A  90D8               	bcf	status,0,c
  7458   002B0C  321C               	rrcf	___lbdiv@divisor^0,f,c
  7459   002B0E  2E1E               	decfsz	___lbdiv@counter^0,f,c
  7460   002B10  D7F3               	goto	u5750
  7461   002B12                     l5830:
  7462   002B12  501F               	movf	___lbdiv@quotient^0,w,c
  7463   002B14  0012               	return		;funcret
  7464   002B16                     __end_of___lbdiv:
  7465                           	callstack 0
  7466                           
  7467 ;; *************** function ___ftmul *****************
  7468 ;; Defined at:
  7469 ;;		line 62 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\ftmul.c"
  7470 ;; Parameters:    Size  Location     Type
  7471 ;;  f1              3   37[COMRAM] float 
  7472 ;;  f2              3   40[COMRAM] float 
  7473 ;; Auto vars:     Size  Location     Type
  7474 ;;  f3_as_produc    3    1[BANK0 ] unsigned um
  7475 ;;  sign            1    5[BANK0 ] unsigned char 
  7476 ;;  cntr            1    4[BANK0 ] unsigned char 
  7477 ;;  exp             1    0[BANK0 ] unsigned char 
  7478 ;; Return value:  Size  Location     Type
  7479 ;;                  3   37[COMRAM] float 
  7480 ;; Registers used:
  7481 ;;		wreg, status,2, status,0, cstack
  7482 ;; Tracked objects:
  7483 ;;		On entry : 0/0
  7484 ;;		On exit  : 3F/0
  7485 ;;		Unchanged: 0/0
  7486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7487 ;;      Params:         6       0       0       0       0       0       0       0       0
  7488 ;;      Locals:         0       6       0       0       0       0       0       0       0
  7489 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7490 ;;      Totals:         9       6       0       0       0       0       0       0       0
  7491 ;;Total ram usage:       15 bytes
  7492 ;; Hardware stack levels used: 1
  7493 ;; Hardware stack levels required when called: 9
  7494 ;; This function calls:
  7495 ;;		___ftpack
  7496 ;; This function is called by:
  7497 ;;		_ADC
  7498 ;;		_fround
  7499 ;;		_scale
  7500 ;;		_printf
  7501 ;; This function uses a non-reentrant model
  7502 ;;
  7503                           
  7504                           	psect	text37
  7505   001556                     __ptext37:
  7506                           	callstack 0
  7507   001556                     ___ftmul:
  7508                           	callstack 20
  7509                           
  7510                           ;incstack = 0
  7511   001556  C028  F02C         	movff	___ftmul@f1+2,??___ftmul
  7512   00155A  6A2D               	clrf	(??___ftmul+1)^0,c
  7513   00155C  6A2E               	clrf	(??___ftmul+2)^0,c
  7514   00155E  3427               	rlcf	(___ftmul@f1+1)^0,w,c
  7515   001560  362C               	rlcf	??___ftmul^0,f,c
  7516   001562  E301               	bnc	u5561
  7517   001564  802D               	bsf	(??___ftmul+1)^0,0,c
  7518   001566                     u5561:
  7519   001566  502C               	movf	??___ftmul^0,w,c
  7520   001568  0100               	movlb	0	; () banked
  7521   00156A  6F60               	movwf	___ftmul@exp& (0+255),b
  7522   00156C  5160               	movf	___ftmul@exp& (0+255),w,b
  7523   00156E  A4D8               	btfss	status,2,c
  7524   001570  D007               	goto	l5686
  7525                           
  7526                           ; BSR set to: 0
  7527   001572  0E00               	movlw	0
  7528   001574  6E26               	movwf	?___ftmul^0,c
  7529   001576  0E00               	movlw	0
  7530   001578  6E27               	movwf	(?___ftmul+1)^0,c
  7531   00157A  0E00               	movlw	0
  7532   00157C  6E28               	movwf	(?___ftmul+2)^0,c
  7533   00157E  0012               	return	
  7534   001580                     l5686:
  7535                           
  7536                           ; BSR set to: 0
  7537   001580  C02B  F02C         	movff	___ftmul@f2+2,??___ftmul
  7538   001584  6A2D               	clrf	(??___ftmul+1)^0,c
  7539   001586  6A2E               	clrf	(??___ftmul+2)^0,c
  7540   001588  342A               	rlcf	(___ftmul@f2+1)^0,w,c
  7541   00158A  362C               	rlcf	??___ftmul^0,f,c
  7542   00158C  E301               	bnc	u5581
  7543   00158E  802D               	bsf	(??___ftmul+1)^0,0,c
  7544   001590                     u5581:
  7545   001590  502C               	movf	??___ftmul^0,w,c
  7546   001592  6F65               	movwf	___ftmul@sign& (0+255),b
  7547   001594  5165               	movf	___ftmul@sign& (0+255),w,b
  7548   001596  A4D8               	btfss	status,2,c
  7549   001598  D007               	goto	l5692
  7550                           
  7551                           ; BSR set to: 0
  7552   00159A  0E00               	movlw	0
  7553   00159C  6E26               	movwf	?___ftmul^0,c
  7554   00159E  0E00               	movlw	0
  7555   0015A0  6E27               	movwf	(?___ftmul+1)^0,c
  7556   0015A2  0E00               	movlw	0
  7557   0015A4  6E28               	movwf	(?___ftmul+2)^0,c
  7558   0015A6  0012               	return	
  7559   0015A8                     l5692:
  7560                           
  7561                           ; BSR set to: 0
  7562   0015A8  5165               	movf	___ftmul@sign& (0+255),w,b
  7563   0015AA  0F7B               	addlw	123
  7564   0015AC  2760               	addwf	___ftmul@exp& (0+255),f,b
  7565                           
  7566                           ; BSR set to: 0
  7567   0015AE  C028  F065         	movff	___ftmul@f1+2,___ftmul@sign
  7568   0015B2  502B               	movf	(___ftmul@f2+2)^0,w,c
  7569   0015B4  1B65               	xorwf	___ftmul@sign& (0+255),f,b
  7570   0015B6  0E80               	movlw	128
  7571   0015B8  1765               	andwf	___ftmul@sign& (0+255),f,b
  7572                           
  7573                           ; BSR set to: 0
  7574   0015BA  8E27               	bsf	(___ftmul@f1+1)^0,7,c
  7575                           
  7576                           ; BSR set to: 0
  7577   0015BC  8E2A               	bsf	(___ftmul@f2+1)^0,7,c
  7578                           
  7579                           ; BSR set to: 0
  7580   0015BE  0EFF               	movlw	255
  7581   0015C0  1629               	andwf	___ftmul@f2^0,f,c
  7582   0015C2  0EFF               	movlw	255
  7583   0015C4  162A               	andwf	(___ftmul@f2+1)^0,f,c
  7584   0015C6  0E00               	movlw	0
  7585   0015C8  162B               	andwf	(___ftmul@f2+2)^0,f,c
  7586                           
  7587                           ; BSR set to: 0
  7588   0015CA  0E00               	movlw	0
  7589   0015CC  6F61               	movwf	___ftmul@f3_as_product& (0+255),b
  7590   0015CE  0E00               	movlw	0
  7591   0015D0  6F62               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  7592   0015D2  0E00               	movlw	0
  7593   0015D4  6F63               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  7594                           
  7595                           ; BSR set to: 0
  7596   0015D6  0E07               	movlw	7
  7597   0015D8  6F64               	movwf	___ftmul@cntr& (0+255),b
  7598   0015DA                     l5706:
  7599                           
  7600                           ; BSR set to: 0
  7601   0015DA  A026               	btfss	___ftmul@f1^0,0,c
  7602   0015DC  D006               	goto	l5710
  7603                           
  7604                           ; BSR set to: 0
  7605   0015DE  5029               	movf	___ftmul@f2^0,w,c
  7606   0015E0  2761               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7607   0015E2  502A               	movf	(___ftmul@f2+1)^0,w,c
  7608   0015E4  2362               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7609   0015E6  502B               	movf	(___ftmul@f2+2)^0,w,c
  7610   0015E8  2363               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7611   0015EA                     l5710:
  7612                           
  7613                           ; BSR set to: 0
  7614   0015EA  90D8               	bcf	status,0,c
  7615   0015EC  3228               	rrcf	(___ftmul@f1+2)^0,f,c
  7616   0015EE  3227               	rrcf	(___ftmul@f1+1)^0,f,c
  7617   0015F0  3226               	rrcf	___ftmul@f1^0,f,c
  7618   0015F2  90D8               	bcf	status,0,c
  7619   0015F4  3629               	rlcf	___ftmul@f2^0,f,c
  7620   0015F6  362A               	rlcf	(___ftmul@f2+1)^0,f,c
  7621   0015F8  362B               	rlcf	(___ftmul@f2+2)^0,f,c
  7622                           
  7623                           ; BSR set to: 0
  7624   0015FA  2F64               	decfsz	___ftmul@cntr& (0+255),f,b
  7625   0015FC  D7EE               	goto	l5706
  7626                           
  7627                           ; BSR set to: 0
  7628   0015FE  0E09               	movlw	9
  7629   001600  6F64               	movwf	___ftmul@cntr& (0+255),b
  7630   001602                     l5716:
  7631                           
  7632                           ; BSR set to: 0
  7633   001602  A026               	btfss	___ftmul@f1^0,0,c
  7634   001604  D006               	goto	l5720
  7635                           
  7636                           ; BSR set to: 0
  7637   001606  5029               	movf	___ftmul@f2^0,w,c
  7638   001608  2761               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7639   00160A  502A               	movf	(___ftmul@f2+1)^0,w,c
  7640   00160C  2362               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7641   00160E  502B               	movf	(___ftmul@f2+2)^0,w,c
  7642   001610  2363               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7643   001612                     l5720:
  7644                           
  7645                           ; BSR set to: 0
  7646   001612  90D8               	bcf	status,0,c
  7647   001614  3228               	rrcf	(___ftmul@f1+2)^0,f,c
  7648   001616  3227               	rrcf	(___ftmul@f1+1)^0,f,c
  7649   001618  3226               	rrcf	___ftmul@f1^0,f,c
  7650   00161A  90D8               	bcf	status,0,c
  7651   00161C  3363               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  7652   00161E  3362               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  7653   001620  3361               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  7654                           
  7655                           ; BSR set to: 0
  7656   001622  2F64               	decfsz	___ftmul@cntr& (0+255),f,b
  7657   001624  D7EE               	goto	l5716
  7658                           
  7659                           ; BSR set to: 0
  7660   001626  C061  F018         	movff	___ftmul@f3_as_product,___ftpack@arg
  7661   00162A  C062  F019         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7662   00162E  C063  F01A         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7663   001632  C060  F01B         	movff	___ftmul@exp,___ftpack@exp
  7664   001636  C065  F01C         	movff	___ftmul@sign,___ftpack@sign
  7665   00163A  EC06  F00F         	call	___ftpack	;wreg free
  7666   00163E  C018  F026         	movff	?___ftpack,?___ftmul
  7667   001642  C019  F027         	movff	?___ftpack+1,?___ftmul+1
  7668   001646  C01A  F028         	movff	?___ftpack+2,?___ftmul+2
  7669                           
  7670                           ; BSR set to: 0
  7671   00164A  0012               	return		;funcret
  7672   00164C                     __end_of___ftmul:
  7673                           	callstack 0
  7674                           
  7675 ;; *************** function __tdiv_to_l_ *****************
  7676 ;; Defined at:
  7677 ;;		line 60 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\ftdivl.c"
  7678 ;; Parameters:    Size  Location     Type
  7679 ;;  f1              3   23[COMRAM] float 
  7680 ;;  f2              3   26[COMRAM] float 
  7681 ;; Auto vars:     Size  Location     Type
  7682 ;;  quot            4   32[COMRAM] unsigned long 
  7683 ;;  exp1            1   37[COMRAM] unsigned char 
  7684 ;;  cntr            1   36[COMRAM] unsigned char 
  7685 ;; Return value:  Size  Location     Type
  7686 ;;                  4   23[COMRAM] unsigned long 
  7687 ;; Registers used:
  7688 ;;		wreg, status,2, status,0
  7689 ;; Tracked objects:
  7690 ;;		On entry : 3F/0
  7691 ;;		On exit  : 3F/0
  7692 ;;		Unchanged: 3F/0
  7693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7694 ;;      Params:         6       0       0       0       0       0       0       0       0
  7695 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7696 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7697 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7698 ;;Total ram usage:       15 bytes
  7699 ;; Hardware stack levels used: 1
  7700 ;; Hardware stack levels required when called: 8
  7701 ;; This function calls:
  7702 ;;		Nothing
  7703 ;; This function is called by:
  7704 ;;		_printf
  7705 ;; This function uses a non-reentrant model
  7706 ;;
  7707                           
  7708                           	psect	text38
  7709   001458                     __ptext38:
  7710                           	callstack 0
  7711   001458                     __tdiv_to_l_:
  7712                           	callstack 19
  7713                           
  7714                           ; BSR set to: 0
  7715                           
  7716                           ; BSR set to: 0
  7717                           ;incstack = 0
  7718   001458  C01A  F01E         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  7719   00145C  6A1F               	clrf	(??__tdiv_to_l_+1)^0,c
  7720   00145E  6A20               	clrf	(??__tdiv_to_l_+2)^0,c
  7721   001460  3419               	rlcf	(__tdiv_to_l_@f1+1)^0,w,c
  7722   001462  361E               	rlcf	??__tdiv_to_l_^0,f,c
  7723   001464  E301               	bnc	u3291
  7724   001466  801F               	bsf	(??__tdiv_to_l_+1)^0,0,c
  7725   001468                     u3291:
  7726   001468  501E               	movf	??__tdiv_to_l_^0,w,c
  7727   00146A  6E26               	movwf	__tdiv_to_l_@exp1^0,c
  7728   00146C  5026               	movf	__tdiv_to_l_@exp1^0,w,c
  7729   00146E  A4D8               	btfss	status,2,c
  7730   001470  D009               	goto	l3926
  7731   001472                     u3300:
  7732                           
  7733                           ; BSR set to: 0
  7734   001472  0E00               	movlw	0
  7735   001474  6E18               	movwf	?__tdiv_to_l_^0,c
  7736   001476  0E00               	movlw	0
  7737   001478  6E19               	movwf	(?__tdiv_to_l_+1)^0,c
  7738   00147A  0E00               	movlw	0
  7739   00147C  6E1A               	movwf	(?__tdiv_to_l_+2)^0,c
  7740   00147E  0E00               	movlw	0
  7741   001480  6E1B               	movwf	(?__tdiv_to_l_+3)^0,c
  7742   001482  0012               	return	
  7743   001484                     l3926:
  7744                           
  7745                           ; BSR set to: 0
  7746   001484  C01D  F01E         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  7747   001488  6A1F               	clrf	(??__tdiv_to_l_+1)^0,c
  7748   00148A  6A20               	clrf	(??__tdiv_to_l_+2)^0,c
  7749   00148C  341C               	rlcf	(__tdiv_to_l_@f2+1)^0,w,c
  7750   00148E  361E               	rlcf	??__tdiv_to_l_^0,f,c
  7751   001490  E301               	bnc	u3311
  7752   001492  801F               	bsf	(??__tdiv_to_l_+1)^0,0,c
  7753   001494                     u3311:
  7754   001494  501E               	movf	??__tdiv_to_l_^0,w,c
  7755   001496  6E25               	movwf	__tdiv_to_l_@cntr^0,c
  7756   001498  5025               	movf	__tdiv_to_l_@cntr^0,w,c
  7757   00149A  B4D8               	btfsc	status,2,c
  7758   00149C  D7EA               	goto	u3300
  7759                           
  7760                           ; BSR set to: 0
  7761   00149E  8E19               	bsf	(__tdiv_to_l_@f1+1)^0,7,c
  7762                           
  7763                           ; BSR set to: 0
  7764   0014A0  0EFF               	movlw	255
  7765   0014A2  1618               	andwf	__tdiv_to_l_@f1^0,f,c
  7766   0014A4  0EFF               	movlw	255
  7767   0014A6  1619               	andwf	(__tdiv_to_l_@f1+1)^0,f,c
  7768   0014A8  0E00               	movlw	0
  7769   0014AA  161A               	andwf	(__tdiv_to_l_@f1+2)^0,f,c
  7770   0014AC  8E1C               	bsf	(__tdiv_to_l_@f2+1)^0,7,c
  7771                           
  7772                           ; BSR set to: 0
  7773   0014AE  0EFF               	movlw	255
  7774   0014B0  161B               	andwf	__tdiv_to_l_@f2^0,f,c
  7775   0014B2  0EFF               	movlw	255
  7776   0014B4  161C               	andwf	(__tdiv_to_l_@f2+1)^0,f,c
  7777   0014B6  0E00               	movlw	0
  7778   0014B8  161D               	andwf	(__tdiv_to_l_@f2+2)^0,f,c
  7779                           
  7780                           ; BSR set to: 0
  7781   0014BA  0E00               	movlw	0
  7782   0014BC  6E21               	movwf	__tdiv_to_l_@quot^0,c
  7783   0014BE  0E00               	movlw	0
  7784   0014C0  6E22               	movwf	(__tdiv_to_l_@quot+1)^0,c
  7785   0014C2  0E00               	movlw	0
  7786   0014C4  6E23               	movwf	(__tdiv_to_l_@quot+2)^0,c
  7787   0014C6  0E00               	movlw	0
  7788   0014C8  6E24               	movwf	(__tdiv_to_l_@quot+3)^0,c
  7789                           
  7790                           ; BSR set to: 0
  7791   0014CA  0E7F               	movlw	127
  7792   0014CC  5E26               	subwf	__tdiv_to_l_@exp1^0,f,c
  7793                           
  7794                           ; BSR set to: 0
  7795   0014CE  5025               	movf	__tdiv_to_l_@cntr^0,w,c
  7796   0014D0  0F98               	addlw	152
  7797   0014D2  5E26               	subwf	__tdiv_to_l_@exp1^0,f,c
  7798                           
  7799                           ; BSR set to: 0
  7800   0014D4  0E18               	movlw	24
  7801   0014D6  6E25               	movwf	__tdiv_to_l_@cntr^0,c
  7802   0014D8                     l957:
  7803                           
  7804                           ; BSR set to: 0
  7805   0014D8  90D8               	bcf	status,0,c
  7806   0014DA  3621               	rlcf	__tdiv_to_l_@quot^0,f,c
  7807   0014DC  3622               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  7808   0014DE  3623               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  7809   0014E0  3624               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  7810                           
  7811                           ; BSR set to: 0
  7812   0014E2  501B               	movf	__tdiv_to_l_@f2^0,w,c
  7813   0014E4  5C18               	subwf	__tdiv_to_l_@f1^0,w,c
  7814   0014E6  501C               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  7815   0014E8  5819               	subwfb	(__tdiv_to_l_@f1+1)^0,w,c
  7816   0014EA  501D               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  7817   0014EC  581A               	subwfb	(__tdiv_to_l_@f1+2)^0,w,c
  7818   0014EE  A0D8               	btfss	status,0,c
  7819   0014F0  D007               	goto	l958
  7820                           
  7821                           ; BSR set to: 0
  7822   0014F2  501B               	movf	__tdiv_to_l_@f2^0,w,c
  7823   0014F4  5E18               	subwf	__tdiv_to_l_@f1^0,f,c
  7824   0014F6  501C               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  7825   0014F8  5A19               	subwfb	(__tdiv_to_l_@f1+1)^0,f,c
  7826   0014FA  501D               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  7827   0014FC  5A1A               	subwfb	(__tdiv_to_l_@f1+2)^0,f,c
  7828                           
  7829                           ; BSR set to: 0
  7830   0014FE  8021               	bsf	__tdiv_to_l_@quot^0,0,c
  7831   001500                     l958:
  7832                           
  7833                           ; BSR set to: 0
  7834   001500  90D8               	bcf	status,0,c
  7835   001502  3618               	rlcf	__tdiv_to_l_@f1^0,f,c
  7836   001504  3619               	rlcf	(__tdiv_to_l_@f1+1)^0,f,c
  7837   001506  361A               	rlcf	(__tdiv_to_l_@f1+2)^0,f,c
  7838                           
  7839                           ; BSR set to: 0
  7840   001508  2E25               	decfsz	__tdiv_to_l_@cntr^0,f,c
  7841   00150A  D7E6               	goto	l957
  7842                           
  7843                           ; BSR set to: 0
  7844   00150C  AE26               	btfss	__tdiv_to_l_@exp1^0,7,c
  7845   00150E  D00D               	goto	l3966
  7846                           
  7847                           ; BSR set to: 0
  7848   001510  5026               	movf	__tdiv_to_l_@exp1^0,w,c
  7849   001512  0A80               	xorlw	128
  7850   001514  0F97               	addlw	151
  7851   001516  A0D8               	btfss	status,0,c
  7852   001518  D7AC               	goto	u3300
  7853   00151A                     l3962:
  7854                           
  7855                           ; BSR set to: 0
  7856   00151A  90D8               	bcf	status,0,c
  7857   00151C  3224               	rrcf	(__tdiv_to_l_@quot+3)^0,f,c
  7858   00151E  3223               	rrcf	(__tdiv_to_l_@quot+2)^0,f,c
  7859   001520  3222               	rrcf	(__tdiv_to_l_@quot+1)^0,f,c
  7860   001522  3221               	rrcf	__tdiv_to_l_@quot^0,f,c
  7861                           
  7862                           ; BSR set to: 0
  7863   001524  3E26               	incfsz	__tdiv_to_l_@exp1^0,f,c
  7864   001526  D7F9               	goto	l3962
  7865   001528  D00D               	goto	u3370
  7866   00152A                     l3966:
  7867                           
  7868                           ; BSR set to: 0
  7869   00152A  0E17               	movlw	23
  7870   00152C  6426               	cpfsgt	__tdiv_to_l_@exp1^0,c
  7871   00152E  D007               	goto	l3974
  7872   001530  D7A0               	goto	u3300
  7873   001532                     l3972:
  7874                           
  7875                           ; BSR set to: 0
  7876   001532  90D8               	bcf	status,0,c
  7877   001534  3621               	rlcf	__tdiv_to_l_@quot^0,f,c
  7878   001536  3622               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  7879   001538  3623               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  7880   00153A  3624               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  7881   00153C  0626               	decf	__tdiv_to_l_@exp1^0,f,c
  7882   00153E                     l3974:
  7883                           
  7884                           ; BSR set to: 0
  7885   00153E  5026               	movf	__tdiv_to_l_@exp1^0,w,c
  7886   001540  A4D8               	btfss	status,2,c
  7887   001542  D7F7               	goto	l3972
  7888   001544                     u3370:
  7889                           
  7890                           ; BSR set to: 0
  7891   001544  C021  F018         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  7892   001548  C022  F019         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  7893   00154C  C023  F01A         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  7894   001550  C024  F01B         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  7895                           
  7896                           ; BSR set to: 0
  7897   001554  0012               	return		;funcret
  7898   001556                     __end_of__tdiv_to_l_:
  7899                           	callstack 0
  7900                           
  7901 ;; *************** function __div_to_l_ *****************
  7902 ;; Defined at:
  7903 ;;		line 60 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\fldivl.c"
  7904 ;; Parameters:    Size  Location     Type
  7905 ;;  f1              3   23[COMRAM] unsigned long 
  7906 ;;  f2              3   26[COMRAM] unsigned long 
  7907 ;; Auto vars:     Size  Location     Type
  7908 ;;  quot            4   29[COMRAM] unsigned long 
  7909 ;;  exp1            1   34[COMRAM] unsigned char 
  7910 ;;  cntr            1   33[COMRAM] unsigned char 
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  4   23[COMRAM] unsigned long 
  7913 ;; Registers used:
  7914 ;;		wreg, status,2, status,0
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7920 ;;      Params:         6       0       0       0       0       0       0       0       0
  7921 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7922 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7923 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7924 ;;Total ram usage:       12 bytes
  7925 ;; Hardware stack levels used: 1
  7926 ;; Hardware stack levels required when called: 8
  7927 ;; This function calls:
  7928 ;;		Nothing
  7929 ;; This function is called by:
  7930 ;;		_printf
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           
  7934                           	psect	text39
  7935   00164C                     __ptext39:
  7936                           	callstack 0
  7937   00164C                     __div_to_l_:
  7938                           	callstack 19
  7939                           
  7940                           ; BSR set to: 0
  7941                           ;incstack = 0
  7942   00164C  341A               	rlcf	(__div_to_l_@f1+2)^0,w,c
  7943   00164E  341B               	rlcf	(__div_to_l_@f1+3)^0,w,c
  7944   001650  6E23               	movwf	__div_to_l_@exp1^0,c
  7945   001652  5023               	movf	__div_to_l_@exp1^0,w,c
  7946   001654  A4D8               	btfss	status,2,c
  7947   001656  D009               	goto	l3982
  7948   001658                     u3380:
  7949   001658  0E00               	movlw	0
  7950   00165A  6E18               	movwf	?__div_to_l_^0,c
  7951   00165C  0E00               	movlw	0
  7952   00165E  6E19               	movwf	(?__div_to_l_+1)^0,c
  7953   001660  0E00               	movlw	0
  7954   001662  6E1A               	movwf	(?__div_to_l_+2)^0,c
  7955   001664  0E00               	movlw	0
  7956   001666  6E1B               	movwf	(?__div_to_l_+3)^0,c
  7957   001668  0012               	return	
  7958   00166A                     l3982:
  7959   00166A  341D               	rlcf	(__div_to_l_@f2+2)^0,w,c
  7960   00166C  341E               	rlcf	(__div_to_l_@f2+3)^0,w,c
  7961   00166E  6E22               	movwf	__div_to_l_@cntr^0,c
  7962   001670  5022               	movf	__div_to_l_@cntr^0,w,c
  7963   001672  B4D8               	btfsc	status,2,c
  7964   001674  D7F1               	goto	u3380
  7965   001676  8E1A               	bsf	(__div_to_l_@f1+2)^0,7,c
  7966   001678  0EFF               	movlw	255
  7967   00167A  1618               	andwf	__div_to_l_@f1^0,f,c
  7968   00167C  0EFF               	movlw	255
  7969   00167E  1619               	andwf	(__div_to_l_@f1+1)^0,f,c
  7970   001680  0EFF               	movlw	255
  7971   001682  161A               	andwf	(__div_to_l_@f1+2)^0,f,c
  7972   001684  0E00               	movlw	0
  7973   001686  161B               	andwf	(__div_to_l_@f1+3)^0,f,c
  7974   001688  8E1D               	bsf	(__div_to_l_@f2+2)^0,7,c
  7975   00168A  0EFF               	movlw	255
  7976   00168C  161B               	andwf	__div_to_l_@f2^0,f,c
  7977   00168E  0EFF               	movlw	255
  7978   001690  161C               	andwf	(__div_to_l_@f2+1)^0,f,c
  7979   001692  0EFF               	movlw	255
  7980   001694  161D               	andwf	(__div_to_l_@f2+2)^0,f,c
  7981   001696  0E00               	movlw	0
  7982   001698  161E               	andwf	(__div_to_l_@f2+3)^0,f,c
  7983   00169A  0E00               	movlw	0
  7984   00169C  6E1E               	movwf	__div_to_l_@quot^0,c
  7985   00169E  0E00               	movlw	0
  7986   0016A0  6E1F               	movwf	(__div_to_l_@quot+1)^0,c
  7987   0016A2  0E00               	movlw	0
  7988   0016A4  6E20               	movwf	(__div_to_l_@quot+2)^0,c
  7989   0016A6  0E00               	movlw	0
  7990   0016A8  6E21               	movwf	(__div_to_l_@quot+3)^0,c
  7991   0016AA  0E7F               	movlw	127
  7992   0016AC  5E23               	subwf	__div_to_l_@exp1^0,f,c
  7993   0016AE  5022               	movf	__div_to_l_@cntr^0,w,c
  7994   0016B0  0FA0               	addlw	160
  7995   0016B2  5E23               	subwf	__div_to_l_@exp1^0,f,c
  7996   0016B4  0E20               	movlw	32
  7997   0016B6  6E22               	movwf	__div_to_l_@cntr^0,c
  7998   0016B8                     l4002:
  7999   0016B8  90D8               	bcf	status,0,c
  8000   0016BA  361E               	rlcf	__div_to_l_@quot^0,f,c
  8001   0016BC  361F               	rlcf	(__div_to_l_@quot+1)^0,f,c
  8002   0016BE  3620               	rlcf	(__div_to_l_@quot+2)^0,f,c
  8003   0016C0  3621               	rlcf	(__div_to_l_@quot+3)^0,f,c
  8004   0016C2  501B               	movf	__div_to_l_@f2^0,w,c
  8005   0016C4  5C18               	subwf	__div_to_l_@f1^0,w,c
  8006   0016C6  501C               	movf	(__div_to_l_@f2+1)^0,w,c
  8007   0016C8  5819               	subwfb	(__div_to_l_@f1+1)^0,w,c
  8008   0016CA  501D               	movf	(__div_to_l_@f2+2)^0,w,c
  8009   0016CC  581A               	subwfb	(__div_to_l_@f1+2)^0,w,c
  8010   0016CE  501E               	movf	(__div_to_l_@f2+3)^0,w,c
  8011   0016D0  581B               	subwfb	(__div_to_l_@f1+3)^0,w,c
  8012   0016D2  A0D8               	btfss	status,0,c
  8013   0016D4  D009               	goto	l4010
  8014   0016D6  501B               	movf	__div_to_l_@f2^0,w,c
  8015   0016D8  5E18               	subwf	__div_to_l_@f1^0,f,c
  8016   0016DA  501C               	movf	(__div_to_l_@f2+1)^0,w,c
  8017   0016DC  5A19               	subwfb	(__div_to_l_@f1+1)^0,f,c
  8018   0016DE  501D               	movf	(__div_to_l_@f2+2)^0,w,c
  8019   0016E0  5A1A               	subwfb	(__div_to_l_@f1+2)^0,f,c
  8020   0016E2  501E               	movf	(__div_to_l_@f2+3)^0,w,c
  8021   0016E4  5A1B               	subwfb	(__div_to_l_@f1+3)^0,f,c
  8022   0016E6  801E               	bsf	__div_to_l_@quot^0,0,c
  8023   0016E8                     l4010:
  8024   0016E8  90D8               	bcf	status,0,c
  8025   0016EA  3618               	rlcf	__div_to_l_@f1^0,f,c
  8026   0016EC  3619               	rlcf	(__div_to_l_@f1+1)^0,f,c
  8027   0016EE  361A               	rlcf	(__div_to_l_@f1+2)^0,f,c
  8028   0016F0  361B               	rlcf	(__div_to_l_@f1+3)^0,f,c
  8029   0016F2  2E22               	decfsz	__div_to_l_@cntr^0,f,c
  8030   0016F4  D7E1               	goto	l4002
  8031   0016F6  AE23               	btfss	__div_to_l_@exp1^0,7,c
  8032   0016F8  D00D               	goto	l4026
  8033   0016FA  5023               	movf	__div_to_l_@exp1^0,w,c
  8034   0016FC  0A80               	xorlw	128
  8035   0016FE  0F9F               	addlw	159
  8036   001700  A0D8               	btfss	status,0,c
  8037   001702  D7AA               	goto	u3380
  8038   001704                     l4022:
  8039   001704  90D8               	bcf	status,0,c
  8040   001706  3221               	rrcf	(__div_to_l_@quot+3)^0,f,c
  8041   001708  3220               	rrcf	(__div_to_l_@quot+2)^0,f,c
  8042   00170A  321F               	rrcf	(__div_to_l_@quot+1)^0,f,c
  8043   00170C  321E               	rrcf	__div_to_l_@quot^0,f,c
  8044   00170E  3E23               	incfsz	__div_to_l_@exp1^0,f,c
  8045   001710  D7F9               	goto	l4022
  8046   001712  D00D               	goto	u3440
  8047   001714                     l4026:
  8048   001714  0E1F               	movlw	31
  8049   001716  6423               	cpfsgt	__div_to_l_@exp1^0,c
  8050   001718  D007               	goto	l4034
  8051   00171A  D79E               	goto	u3380
  8052   00171C                     l4032:
  8053   00171C  90D8               	bcf	status,0,c
  8054   00171E  361E               	rlcf	__div_to_l_@quot^0,f,c
  8055   001720  361F               	rlcf	(__div_to_l_@quot+1)^0,f,c
  8056   001722  3620               	rlcf	(__div_to_l_@quot+2)^0,f,c
  8057   001724  3621               	rlcf	(__div_to_l_@quot+3)^0,f,c
  8058   001726  0623               	decf	__div_to_l_@exp1^0,f,c
  8059   001728                     l4034:
  8060   001728  5023               	movf	__div_to_l_@exp1^0,w,c
  8061   00172A  A4D8               	btfss	status,2,c
  8062   00172C  D7F7               	goto	l4032
  8063   00172E                     u3440:
  8064   00172E  C01E  F018         	movff	__div_to_l_@quot,?__div_to_l_
  8065   001732  C01F  F019         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  8066   001736  C020  F01A         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  8067   00173A  C021  F01B         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  8068   00173E  0012               	return		;funcret
  8069   001740                     __end_of__div_to_l_:
  8070                           	callstack 0
  8071                           
  8072 ;; *************** function ___wmul *****************
  8073 ;; Defined at:
  8074 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\Umul16.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;  multiplier      2   23[COMRAM] unsigned int 
  8077 ;;  multiplicand    2   25[COMRAM] unsigned int 
  8078 ;; Auto vars:     Size  Location     Type
  8079 ;;  product         2   27[COMRAM] unsigned int 
  8080 ;; Return value:  Size  Location     Type
  8081 ;;                  2   23[COMRAM] unsigned int 
  8082 ;; Registers used:
  8083 ;;		wreg, status,2, status,0, prodl, prodh
  8084 ;; Tracked objects:
  8085 ;;		On entry : 0/0
  8086 ;;		On exit  : 0/0
  8087 ;;		Unchanged: 0/0
  8088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8089 ;;      Params:         4       0       0       0       0       0       0       0       0
  8090 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8091 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8092 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8093 ;;Total ram usage:        6 bytes
  8094 ;; Hardware stack levels used: 1
  8095 ;; Hardware stack levels required when called: 8
  8096 ;; This function calls:
  8097 ;;		Nothing
  8098 ;; This function is called by:
  8099 ;;		_printf
  8100 ;; This function uses a non-reentrant model
  8101 ;;
  8102                           
  8103                           	psect	text40
  8104   002CC6                     __ptext40:
  8105                           	callstack 0
  8106   002CC6                     ___wmul:
  8107                           	callstack 19
  8108                           
  8109                           ;incstack = 0
  8110   002CC6  5018               	movf	___wmul@multiplier^0,w,c
  8111   002CC8  021A               	mulwf	___wmul@multiplicand^0,c
  8112   002CCA  CFF3 F01C          	movff	prodl,___wmul@product
  8113   002CCE  CFF4 F01D          	movff	prodh,___wmul@product+1
  8114   002CD2  5018               	movf	___wmul@multiplier^0,w,c
  8115   002CD4  021B               	mulwf	(___wmul@multiplicand+1)^0,c
  8116   002CD6  50F3               	movf	243,w,c
  8117   002CD8  261D               	addwf	(___wmul@product+1)^0,f,c
  8118   002CDA  5019               	movf	(___wmul@multiplier+1)^0,w,c
  8119   002CDC  021A               	mulwf	___wmul@multiplicand^0,c
  8120   002CDE  50F3               	movf	243,w,c
  8121   002CE0  261D               	addwf	(___wmul@product+1)^0,f,c
  8122   002CE2  C01C  F018         	movff	___wmul@product,?___wmul
  8123   002CE6  C01D  F019         	movff	___wmul@product+1,?___wmul+1
  8124   002CEA  0012               	return		;funcret
  8125   002CEC                     __end_of___wmul:
  8126                           	callstack 0
  8127                           
  8128 ;; *************** function ___lltoft *****************
  8129 ;; Defined at:
  8130 ;;		line 35 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lltoft.c"
  8131 ;; Parameters:    Size  Location     Type
  8132 ;;  c               4   31[COMRAM] unsigned long 
  8133 ;; Auto vars:     Size  Location     Type
  8134 ;;  exp             1   39[COMRAM] unsigned char 
  8135 ;; Return value:  Size  Location     Type
  8136 ;;                  3   31[COMRAM] float 
  8137 ;; Registers used:
  8138 ;;		wreg, status,2, status,0, cstack
  8139 ;; Tracked objects:
  8140 ;;		On entry : 3F/0
  8141 ;;		On exit  : 3F/0
  8142 ;;		Unchanged: 3F/0
  8143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8144 ;;      Params:         4       0       0       0       0       0       0       0       0
  8145 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8146 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8147 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8148 ;;Total ram usage:        9 bytes
  8149 ;; Hardware stack levels used: 1
  8150 ;; Hardware stack levels required when called: 9
  8151 ;; This function calls:
  8152 ;;		___ftpack
  8153 ;; This function is called by:
  8154 ;;		_printf
  8155 ;; This function uses a non-reentrant model
  8156 ;;
  8157                           
  8158                           	psect	text41
  8159   002720                     __ptext41:
  8160                           	callstack 0
  8161   002720                     ___lltoft:
  8162                           	callstack 18
  8163                           
  8164                           ; BSR set to: 0
  8165                           
  8166                           ;incstack = 0
  8167   002720  0E8E               	movlw	142
  8168   002722  6E28               	movwf	___lltoft@exp^0,c
  8169   002724  D006               	goto	l5970
  8170   002726                     l5968:
  8171                           
  8172                           ; BSR set to: 0
  8173   002726  90D8               	bcf	status,0,c
  8174   002728  3223               	rrcf	(___lltoft@c+3)^0,f,c
  8175   00272A  3222               	rrcf	(___lltoft@c+2)^0,f,c
  8176   00272C  3221               	rrcf	(___lltoft@c+1)^0,f,c
  8177   00272E  3220               	rrcf	___lltoft@c^0,f,c
  8178   002730  2A28               	incf	___lltoft@exp^0,f,c
  8179   002732                     l5970:
  8180                           
  8181                           ; BSR set to: 0
  8182   002732  0E00               	movlw	0
  8183   002734  1420               	andwf	___lltoft@c^0,w,c
  8184   002736  6E24               	movwf	??___lltoft^0,c
  8185   002738  0E00               	movlw	0
  8186   00273A  1421               	andwf	(___lltoft@c+1)^0,w,c
  8187   00273C  6E25               	movwf	(??___lltoft+1)^0,c
  8188   00273E  0E00               	movlw	0
  8189   002740  1422               	andwf	(___lltoft@c+2)^0,w,c
  8190   002742  6E26               	movwf	(??___lltoft+2)^0,c
  8191   002744  0EFF               	movlw	255
  8192   002746  1423               	andwf	(___lltoft@c+3)^0,w,c
  8193   002748  6E27               	movwf	(??___lltoft+3)^0,c
  8194   00274A  5024               	movf	??___lltoft^0,w,c
  8195   00274C  1025               	iorwf	(??___lltoft+1)^0,w,c
  8196   00274E  1026               	iorwf	(??___lltoft+2)^0,w,c
  8197   002750  1027               	iorwf	(??___lltoft+3)^0,w,c
  8198   002752  A4D8               	btfss	status,2,c
  8199   002754  D7E8               	goto	l5968
  8200                           
  8201                           ; BSR set to: 0
  8202   002756  C020  F018         	movff	___lltoft@c,___ftpack@arg
  8203   00275A  C021  F019         	movff	___lltoft@c+1,___ftpack@arg+1
  8204   00275E  C022  F01A         	movff	___lltoft@c+2,___ftpack@arg+2
  8205   002762  C028  F01B         	movff	___lltoft@exp,___ftpack@exp
  8206   002766  0E00               	movlw	0
  8207   002768  6E1C               	movwf	___ftpack@sign^0,c
  8208   00276A  EC06  F00F         	call	___ftpack	;wreg free
  8209   00276E  C018  F020         	movff	?___ftpack,?___lltoft
  8210   002772  C019  F021         	movff	?___ftpack+1,?___lltoft+1
  8211   002776  C01A  F022         	movff	?___ftpack+2,?___lltoft+2
  8212                           
  8213                           ; BSR set to: 0
  8214   00277A  0012               	return		;funcret
  8215   00277C                     __end_of___lltoft:
  8216                           	callstack 0
  8217                           
  8218 ;; *************** function ___llmod *****************
  8219 ;; Defined at:
  8220 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\llmod.c"
  8221 ;; Parameters:    Size  Location     Type
  8222 ;;  dividend        4   36[COMRAM] unsigned long 
  8223 ;;  divisor         4   40[COMRAM] unsigned long 
  8224 ;; Auto vars:     Size  Location     Type
  8225 ;;  counter         1   44[COMRAM] unsigned char 
  8226 ;; Return value:  Size  Location     Type
  8227 ;;                  4   36[COMRAM] unsigned long 
  8228 ;; Registers used:
  8229 ;;		wreg, status,2, status,0
  8230 ;; Tracked objects:
  8231 ;;		On entry : 3F/0
  8232 ;;		On exit  : 3F/0
  8233 ;;		Unchanged: 3F/0
  8234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8235 ;;      Params:         8       0       0       0       0       0       0       0       0
  8236 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8237 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8238 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8239 ;;Total ram usage:        9 bytes
  8240 ;; Hardware stack levels used: 1
  8241 ;; Hardware stack levels required when called: 8
  8242 ;; This function calls:
  8243 ;;		Nothing
  8244 ;; This function is called by:
  8245 ;;		_printf
  8246 ;; This function uses a non-reentrant model
  8247 ;;
  8248                           
  8249                           	psect	text42
  8250   0025FA                     __ptext42:
  8251                           	callstack 0
  8252   0025FA                     ___llmod:
  8253                           	callstack 19
  8254                           
  8255                           ; BSR set to: 0
  8256                           
  8257                           ; BSR set to: 0
  8258                           ;incstack = 0
  8259   0025FA  5029               	movf	___llmod@divisor^0,w,c
  8260   0025FC  102A               	iorwf	(___llmod@divisor+1)^0,w,c
  8261   0025FE  102B               	iorwf	(___llmod@divisor+2)^0,w,c
  8262   002600  102C               	iorwf	(___llmod@divisor+3)^0,w,c
  8263   002602  B4D8               	btfsc	status,2,c
  8264   002604  D024               	goto	l1034
  8265                           
  8266                           ; BSR set to: 0
  8267   002606  0E01               	movlw	1
  8268   002608  6E2D               	movwf	___llmod@counter^0,c
  8269   00260A  D006               	goto	l4146
  8270   00260C                     l4144:
  8271                           
  8272                           ; BSR set to: 0
  8273   00260C  90D8               	bcf	status,0,c
  8274   00260E  3629               	rlcf	___llmod@divisor^0,f,c
  8275   002610  362A               	rlcf	(___llmod@divisor+1)^0,f,c
  8276   002612  362B               	rlcf	(___llmod@divisor+2)^0,f,c
  8277   002614  362C               	rlcf	(___llmod@divisor+3)^0,f,c
  8278   002616  2A2D               	incf	___llmod@counter^0,f,c
  8279   002618                     l4146:
  8280                           
  8281                           ; BSR set to: 0
  8282   002618  AE2C               	btfss	(___llmod@divisor+3)^0,7,c
  8283   00261A  D7F8               	goto	l4144
  8284   00261C                     u3620:
  8285                           
  8286                           ; BSR set to: 0
  8287   00261C  5029               	movf	___llmod@divisor^0,w,c
  8288   00261E  5C25               	subwf	___llmod@dividend^0,w,c
  8289   002620  502A               	movf	(___llmod@divisor+1)^0,w,c
  8290   002622  5826               	subwfb	(___llmod@dividend+1)^0,w,c
  8291   002624  502B               	movf	(___llmod@divisor+2)^0,w,c
  8292   002626  5827               	subwfb	(___llmod@dividend+2)^0,w,c
  8293   002628  502C               	movf	(___llmod@divisor+3)^0,w,c
  8294   00262A  5828               	subwfb	(___llmod@dividend+3)^0,w,c
  8295   00262C  A0D8               	btfss	status,0,c
  8296   00262E  D008               	goto	l4152
  8297                           
  8298                           ; BSR set to: 0
  8299   002630  5029               	movf	___llmod@divisor^0,w,c
  8300   002632  5E25               	subwf	___llmod@dividend^0,f,c
  8301   002634  502A               	movf	(___llmod@divisor+1)^0,w,c
  8302   002636  5A26               	subwfb	(___llmod@dividend+1)^0,f,c
  8303   002638  502B               	movf	(___llmod@divisor+2)^0,w,c
  8304   00263A  5A27               	subwfb	(___llmod@dividend+2)^0,f,c
  8305   00263C  502C               	movf	(___llmod@divisor+3)^0,w,c
  8306   00263E  5A28               	subwfb	(___llmod@dividend+3)^0,f,c
  8307   002640                     l4152:
  8308                           
  8309                           ; BSR set to: 0
  8310   002640  90D8               	bcf	status,0,c
  8311   002642  322C               	rrcf	(___llmod@divisor+3)^0,f,c
  8312   002644  322B               	rrcf	(___llmod@divisor+2)^0,f,c
  8313   002646  322A               	rrcf	(___llmod@divisor+1)^0,f,c
  8314   002648  3229               	rrcf	___llmod@divisor^0,f,c
  8315                           
  8316                           ; BSR set to: 0
  8317   00264A  2E2D               	decfsz	___llmod@counter^0,f,c
  8318   00264C  D7E7               	goto	u3620
  8319   00264E                     l1034:
  8320                           
  8321                           ; BSR set to: 0
  8322   00264E  C025  F025         	movff	___llmod@dividend,?___llmod
  8323   002652  C026  F026         	movff	___llmod@dividend+1,?___llmod+1
  8324   002656  C027  F027         	movff	___llmod@dividend+2,?___llmod+2
  8325   00265A  C028  F028         	movff	___llmod@dividend+3,?___llmod+3
  8326                           
  8327                           ; BSR set to: 0
  8328   00265E  0012               	return		;funcret
  8329   002660                     __end_of___llmod:
  8330                           	callstack 0
  8331                           
  8332 ;; *************** function ___lldiv *****************
  8333 ;; Defined at:
  8334 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\__lldiv.c"
  8335 ;; Parameters:    Size  Location     Type
  8336 ;;  dividend        4   23[COMRAM] unsigned long 
  8337 ;;  divisor         4   27[COMRAM] unsigned long 
  8338 ;; Auto vars:     Size  Location     Type
  8339 ;;  quotient        4   31[COMRAM] unsigned long 
  8340 ;;  counter         1   35[COMRAM] unsigned char 
  8341 ;; Return value:  Size  Location     Type
  8342 ;;                  4   23[COMRAM] unsigned long 
  8343 ;; Registers used:
  8344 ;;		wreg, status,2, status,0
  8345 ;; Tracked objects:
  8346 ;;		On entry : 3F/0
  8347 ;;		On exit  : 3F/0
  8348 ;;		Unchanged: 3F/0
  8349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8350 ;;      Params:         8       0       0       0       0       0       0       0       0
  8351 ;;      Locals:         5       0       0       0       0       0       0       0       0
  8352 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8353 ;;      Totals:        13       0       0       0       0       0       0       0       0
  8354 ;;Total ram usage:       13 bytes
  8355 ;; Hardware stack levels used: 1
  8356 ;; Hardware stack levels required when called: 8
  8357 ;; This function calls:
  8358 ;;		Nothing
  8359 ;; This function is called by:
  8360 ;;		_printf
  8361 ;; This function uses a non-reentrant model
  8362 ;;
  8363                           
  8364                           	psect	text43
  8365   0021CE                     __ptext43:
  8366                           	callstack 0
  8367   0021CE                     ___lldiv:
  8368                           	callstack 19
  8369                           
  8370                           ; BSR set to: 0
  8371                           
  8372                           ; BSR set to: 0
  8373                           ;incstack = 0
  8374   0021CE  0E00               	movlw	0
  8375   0021D0  6E20               	movwf	___lldiv@quotient^0,c
  8376   0021D2  0E00               	movlw	0
  8377   0021D4  6E21               	movwf	(___lldiv@quotient+1)^0,c
  8378   0021D6  0E00               	movlw	0
  8379   0021D8  6E22               	movwf	(___lldiv@quotient+2)^0,c
  8380   0021DA  0E00               	movlw	0
  8381   0021DC  6E23               	movwf	(___lldiv@quotient+3)^0,c
  8382                           
  8383                           ; BSR set to: 0
  8384   0021DE  501C               	movf	___lldiv@divisor^0,w,c
  8385   0021E0  101D               	iorwf	(___lldiv@divisor+1)^0,w,c
  8386   0021E2  101E               	iorwf	(___lldiv@divisor+2)^0,w,c
  8387   0021E4  101F               	iorwf	(___lldiv@divisor+3)^0,w,c
  8388   0021E6  B4D8               	btfsc	status,2,c
  8389   0021E8  D02A               	goto	l619
  8390                           
  8391                           ; BSR set to: 0
  8392   0021EA  0E01               	movlw	1
  8393   0021EC  6E24               	movwf	___lldiv@counter^0,c
  8394   0021EE  D006               	goto	l4050
  8395   0021F0                     l4048:
  8396                           
  8397                           ; BSR set to: 0
  8398   0021F0  90D8               	bcf	status,0,c
  8399   0021F2  361C               	rlcf	___lldiv@divisor^0,f,c
  8400   0021F4  361D               	rlcf	(___lldiv@divisor+1)^0,f,c
  8401   0021F6  361E               	rlcf	(___lldiv@divisor+2)^0,f,c
  8402   0021F8  361F               	rlcf	(___lldiv@divisor+3)^0,f,c
  8403   0021FA  2A24               	incf	___lldiv@counter^0,f,c
  8404   0021FC                     l4050:
  8405                           
  8406                           ; BSR set to: 0
  8407   0021FC  AE1F               	btfss	(___lldiv@divisor+3)^0,7,c
  8408   0021FE  D7F8               	goto	l4048
  8409   002200                     u3460:
  8410                           
  8411                           ; BSR set to: 0
  8412   002200  90D8               	bcf	status,0,c
  8413   002202  3620               	rlcf	___lldiv@quotient^0,f,c
  8414   002204  3621               	rlcf	(___lldiv@quotient+1)^0,f,c
  8415   002206  3622               	rlcf	(___lldiv@quotient+2)^0,f,c
  8416   002208  3623               	rlcf	(___lldiv@quotient+3)^0,f,c
  8417                           
  8418                           ; BSR set to: 0
  8419   00220A  501C               	movf	___lldiv@divisor^0,w,c
  8420   00220C  5C18               	subwf	___lldiv@dividend^0,w,c
  8421   00220E  501D               	movf	(___lldiv@divisor+1)^0,w,c
  8422   002210  5819               	subwfb	(___lldiv@dividend+1)^0,w,c
  8423   002212  501E               	movf	(___lldiv@divisor+2)^0,w,c
  8424   002214  581A               	subwfb	(___lldiv@dividend+2)^0,w,c
  8425   002216  501F               	movf	(___lldiv@divisor+3)^0,w,c
  8426   002218  581B               	subwfb	(___lldiv@dividend+3)^0,w,c
  8427   00221A  A0D8               	btfss	status,0,c
  8428   00221C  D009               	goto	l4060
  8429                           
  8430                           ; BSR set to: 0
  8431   00221E  501C               	movf	___lldiv@divisor^0,w,c
  8432   002220  5E18               	subwf	___lldiv@dividend^0,f,c
  8433   002222  501D               	movf	(___lldiv@divisor+1)^0,w,c
  8434   002224  5A19               	subwfb	(___lldiv@dividend+1)^0,f,c
  8435   002226  501E               	movf	(___lldiv@divisor+2)^0,w,c
  8436   002228  5A1A               	subwfb	(___lldiv@dividend+2)^0,f,c
  8437   00222A  501F               	movf	(___lldiv@divisor+3)^0,w,c
  8438   00222C  5A1B               	subwfb	(___lldiv@dividend+3)^0,f,c
  8439                           
  8440                           ; BSR set to: 0
  8441   00222E  8020               	bsf	___lldiv@quotient^0,0,c
  8442   002230                     l4060:
  8443                           
  8444                           ; BSR set to: 0
  8445   002230  90D8               	bcf	status,0,c
  8446   002232  321F               	rrcf	(___lldiv@divisor+3)^0,f,c
  8447   002234  321E               	rrcf	(___lldiv@divisor+2)^0,f,c
  8448   002236  321D               	rrcf	(___lldiv@divisor+1)^0,f,c
  8449   002238  321C               	rrcf	___lldiv@divisor^0,f,c
  8450                           
  8451                           ; BSR set to: 0
  8452   00223A  2E24               	decfsz	___lldiv@counter^0,f,c
  8453   00223C  D7E1               	goto	u3460
  8454   00223E                     l619:
  8455                           
  8456                           ; BSR set to: 0
  8457   00223E  C020  F018         	movff	___lldiv@quotient,?___lldiv
  8458   002242  C021  F019         	movff	___lldiv@quotient+1,?___lldiv+1
  8459   002246  C022  F01A         	movff	___lldiv@quotient+2,?___lldiv+2
  8460   00224A  C023  F01B         	movff	___lldiv@quotient+3,?___lldiv+3
  8461                           
  8462                           ; BSR set to: 0
  8463   00224E  0012               	return		;funcret
  8464   002250                     __end_of___lldiv:
  8465                           	callstack 0
  8466                           
  8467 ;; *************** function ___fttol *****************
  8468 ;; Defined at:
  8469 ;;		line 44 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\fttol.c"
  8470 ;; Parameters:    Size  Location     Type
  8471 ;;  f1              3   13[BANK0 ] float 
  8472 ;; Auto vars:     Size  Location     Type
  8473 ;;  lval            4   23[BANK0 ] unsigned long 
  8474 ;;  exp1            1   27[BANK0 ] unsigned char 
  8475 ;;  sign1           1   22[BANK0 ] unsigned char 
  8476 ;; Return value:  Size  Location     Type
  8477 ;;                  4   13[BANK0 ] long 
  8478 ;; Registers used:
  8479 ;;		wreg, status,2, status,0
  8480 ;; Tracked objects:
  8481 ;;		On entry : 3F/0
  8482 ;;		On exit  : 3F/0
  8483 ;;		Unchanged: 0/0
  8484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8485 ;;      Params:         0       4       0       0       0       0       0       0       0
  8486 ;;      Locals:         0       6       0       0       0       0       0       0       0
  8487 ;;      Temps:          0       5       0       0       0       0       0       0       0
  8488 ;;      Totals:         0      15       0       0       0       0       0       0       0
  8489 ;;Total ram usage:       15 bytes
  8490 ;; Hardware stack levels used: 1
  8491 ;; Hardware stack levels required when called: 8
  8492 ;; This function calls:
  8493 ;;		Nothing
  8494 ;; This function is called by:
  8495 ;;		_ADC
  8496 ;;		_printf
  8497 ;; This function uses a non-reentrant model
  8498 ;;
  8499                           
  8500                           	psect	text44
  8501   001C8A                     __ptext44:
  8502                           	callstack 0
  8503   001C8A                     ___fttol:
  8504                           	callstack 21
  8505                           
  8506                           ; BSR set to: 0
  8507                           
  8508                           ; BSR set to: 0
  8509                           ;incstack = 0
  8510   001C8A  C06F  F071         	movff	___fttol@f1+2,??___fttol
  8511   001C8E  6B72               	clrf	(??___fttol+1)& (0+255),b
  8512   001C90  6B73               	clrf	(??___fttol+2)& (0+255),b
  8513   001C92  356E               	rlcf	(___fttol@f1+1)& (0+255),w,b
  8514   001C94  3771               	rlcf	??___fttol& (0+255),f,b
  8515   001C96  E301               	bnc	u5861
  8516   001C98  8172               	bsf	(??___fttol+1)& (0+255),0,b
  8517   001C9A                     u5861:
  8518   001C9A  5171               	movf	??___fttol& (0+255),w,b
  8519   001C9C  6F7B               	movwf	___fttol@exp1& (0+255),b
  8520   001C9E  517B               	movf	___fttol@exp1& (0+255),w,b
  8521   001CA0  A4D8               	btfss	status,2,c
  8522   001CA2  D009               	goto	l5926
  8523   001CA4                     u5870:
  8524                           
  8525                           ; BSR set to: 0
  8526   001CA4  0E00               	movlw	0
  8527   001CA6  6F6D               	movwf	?___fttol& (0+255),b
  8528   001CA8  0E00               	movlw	0
  8529   001CAA  6F6E               	movwf	(?___fttol+1)& (0+255),b
  8530   001CAC  0E00               	movlw	0
  8531   001CAE  6F6F               	movwf	(?___fttol+2)& (0+255),b
  8532   001CB0  0E00               	movlw	0
  8533   001CB2  6F70               	movwf	(?___fttol+3)& (0+255),b
  8534   001CB4  0012               	return	
  8535   001CB6                     l5926:
  8536                           
  8537                           ; BSR set to: 0
  8538   001CB6  0E17               	movlw	23
  8539   001CB8  6F71               	movwf	??___fttol& (0+255),b
  8540   001CBA  C06D  F072         	movff	___fttol@f1,??___fttol+1
  8541   001CBE  C06E  F073         	movff	___fttol@f1+1,??___fttol+2
  8542   001CC2  C06F  F074         	movff	___fttol@f1+2,??___fttol+3
  8543   001CC6  2971               	incf	??___fttol& (0+255),w,b
  8544   001CC8  6F75               	movwf	(??___fttol+4)& (0+255),b
  8545   001CCA  D004               	goto	u5880
  8546   001CCC                     u5885:
  8547   001CCC  90D8               	bcf	status,0,c
  8548   001CCE  3374               	rrcf	(??___fttol+3)& (0+255),f,b
  8549   001CD0  3373               	rrcf	(??___fttol+2)& (0+255),f,b
  8550   001CD2  3372               	rrcf	(??___fttol+1)& (0+255),f,b
  8551   001CD4                     u5880:
  8552   001CD4  2F75               	decfsz	(??___fttol+4)& (0+255),f,b
  8553   001CD6  D7FA               	goto	u5885
  8554   001CD8  0100               	movlb	0	; () banked
  8555   001CDA  5172               	movf	(??___fttol+1)& (0+255),w,b
  8556   001CDC  6F76               	movwf	___fttol@sign1& (0+255),b
  8557                           
  8558                           ; BSR set to: 0
  8559   001CDE  8F6E               	bsf	(___fttol@f1+1)& (0+255),7,b
  8560                           
  8561                           ; BSR set to: 0
  8562   001CE0  0EFF               	movlw	255
  8563   001CE2  176D               	andwf	___fttol@f1& (0+255),f,b
  8564   001CE4  0EFF               	movlw	255
  8565   001CE6  176E               	andwf	(___fttol@f1+1)& (0+255),f,b
  8566   001CE8  0E00               	movlw	0
  8567   001CEA  176F               	andwf	(___fttol@f1+2)& (0+255),f,b
  8568                           
  8569                           ; BSR set to: 0
  8570   001CEC  516D               	movf	___fttol@f1& (0+255),w,b
  8571   001CEE  6F77               	movwf	___fttol@lval& (0+255),b
  8572   001CF0  516E               	movf	(___fttol@f1+1)& (0+255),w,b
  8573   001CF2  6F78               	movwf	(___fttol@lval+1)& (0+255),b
  8574   001CF4  516F               	movf	(___fttol@f1+2)& (0+255),w,b
  8575   001CF6  6F79               	movwf	(___fttol@lval+2)& (0+255),b
  8576   001CF8  6B7A               	clrf	(___fttol@lval+3)& (0+255),b
  8577                           
  8578                           ; BSR set to: 0
  8579   001CFA  0E8E               	movlw	142
  8580   001CFC  5F7B               	subwf	___fttol@exp1& (0+255),f,b
  8581                           
  8582                           ; BSR set to: 0
  8583   001CFE  AF7B               	btfss	___fttol@exp1& (0+255),7,b
  8584   001D00  D00D               	goto	l5948
  8585                           
  8586                           ; BSR set to: 0
  8587   001D02  517B               	movf	___fttol@exp1& (0+255),w,b
  8588   001D04  0A80               	xorlw	128
  8589   001D06  0F8F               	addlw	143
  8590   001D08  A0D8               	btfss	status,0,c
  8591   001D0A  D7CC               	goto	u5870
  8592   001D0C                     l5944:
  8593                           
  8594                           ; BSR set to: 0
  8595   001D0C  90D8               	bcf	status,0,c
  8596   001D0E  337A               	rrcf	(___fttol@lval+3)& (0+255),f,b
  8597   001D10  3379               	rrcf	(___fttol@lval+2)& (0+255),f,b
  8598   001D12  3378               	rrcf	(___fttol@lval+1)& (0+255),f,b
  8599   001D14  3377               	rrcf	___fttol@lval& (0+255),f,b
  8600                           
  8601                           ; BSR set to: 0
  8602   001D16  3F7B               	incfsz	___fttol@exp1& (0+255),f,b
  8603   001D18  D7F9               	goto	l5944
  8604   001D1A  D00D               	goto	u5920
  8605   001D1C                     l5948:
  8606                           
  8607                           ; BSR set to: 0
  8608   001D1C  0E17               	movlw	23
  8609   001D1E  657B               	cpfsgt	___fttol@exp1& (0+255),b
  8610   001D20  D007               	goto	l5956
  8611   001D22  D7C0               	goto	u5870
  8612   001D24                     l5954:
  8613                           
  8614                           ; BSR set to: 0
  8615   001D24  90D8               	bcf	status,0,c
  8616   001D26  3777               	rlcf	___fttol@lval& (0+255),f,b
  8617   001D28  3778               	rlcf	(___fttol@lval+1)& (0+255),f,b
  8618   001D2A  3779               	rlcf	(___fttol@lval+2)& (0+255),f,b
  8619   001D2C  377A               	rlcf	(___fttol@lval+3)& (0+255),f,b
  8620   001D2E  077B               	decf	___fttol@exp1& (0+255),f,b
  8621   001D30                     l5956:
  8622                           
  8623                           ; BSR set to: 0
  8624   001D30  517B               	movf	___fttol@exp1& (0+255),w,b
  8625   001D32  A4D8               	btfss	status,2,c
  8626   001D34  D7F7               	goto	l5954
  8627   001D36                     u5920:
  8628                           
  8629                           ; BSR set to: 0
  8630   001D36  5176               	movf	___fttol@sign1& (0+255),w,b
  8631   001D38  B4D8               	btfsc	status,2,c
  8632   001D3A  D008               	goto	l5962
  8633                           
  8634                           ; BSR set to: 0
  8635   001D3C  1F7A               	comf	(___fttol@lval+3)& (0+255),f,b
  8636   001D3E  1F79               	comf	(___fttol@lval+2)& (0+255),f,b
  8637   001D40  1F78               	comf	(___fttol@lval+1)& (0+255),f,b
  8638   001D42  6D77               	negf	___fttol@lval& (0+255),b
  8639   001D44  0E00               	movlw	0
  8640   001D46  2378               	addwfc	(___fttol@lval+1)& (0+255),f,b
  8641   001D48  2379               	addwfc	(___fttol@lval+2)& (0+255),f,b
  8642   001D4A  237A               	addwfc	(___fttol@lval+3)& (0+255),f,b
  8643   001D4C                     l5962:
  8644                           
  8645                           ; BSR set to: 0
  8646   001D4C  C077  F06D         	movff	___fttol@lval,?___fttol
  8647   001D50  C078  F06E         	movff	___fttol@lval+1,?___fttol+1
  8648   001D54  C079  F06F         	movff	___fttol@lval+2,?___fttol+2
  8649   001D58  C07A  F070         	movff	___fttol@lval+3,?___fttol+3
  8650                           
  8651                           ; BSR set to: 0
  8652   001D5C  0012               	return		;funcret
  8653   001D5E                     __end_of___fttol:
  8654                           	callstack 0
  8655                           
  8656 ;; *************** function ___ftsub *****************
  8657 ;; Defined at:
  8658 ;;		line 19 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\ftsub.c"
  8659 ;; Parameters:    Size  Location     Type
  8660 ;;  f1              3   28[BANK0 ] float 
  8661 ;;  f2              3   31[BANK0 ] float 
  8662 ;; Auto vars:     Size  Location     Type
  8663 ;;		None
  8664 ;; Return value:  Size  Location     Type
  8665 ;;                  3   28[BANK0 ] float 
  8666 ;; Registers used:
  8667 ;;		wreg, status,2, status,0, cstack
  8668 ;; Tracked objects:
  8669 ;;		On entry : 3F/0
  8670 ;;		On exit  : 3F/0
  8671 ;;		Unchanged: 0/0
  8672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8673 ;;      Params:         0       6       0       0       0       0       0       0       0
  8674 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8675 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8676 ;;      Totals:         0       6       0       0       0       0       0       0       0
  8677 ;;Total ram usage:        6 bytes
  8678 ;; Hardware stack levels used: 1
  8679 ;; Hardware stack levels required when called: 10
  8680 ;; This function calls:
  8681 ;;		___ftadd
  8682 ;; This function is called by:
  8683 ;;		_printf
  8684 ;; This function uses a non-reentrant model
  8685 ;;
  8686                           
  8687                           	psect	text45
  8688   002A2A                     __ptext45:
  8689                           	callstack 0
  8690   002A2A                     ___ftsub:
  8691                           	callstack 17
  8692                           
  8693                           ; BSR set to: 0
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;incstack = 0
  8697   002A2A  517F               	movf	___ftsub@f2& (0+255),w,b
  8698   002A2C  1180               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  8699   002A2E  1181               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  8700   002A30  B4D8               	btfsc	status,2,c
  8701   002A32  D006               	goto	l5916
  8702                           
  8703                           ; BSR set to: 0
  8704   002A34  0E00               	movlw	0
  8705   002A36  1B7F               	xorwf	___ftsub@f2& (0+255),f,b
  8706   002A38  0E00               	movlw	0
  8707   002A3A  1B80               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  8708   002A3C  0E80               	movlw	128
  8709   002A3E  1B81               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  8710   002A40                     l5916:
  8711                           
  8712                           ; BSR set to: 0
  8713   002A40  C07C  F070         	movff	___ftsub@f1,___ftadd@f1
  8714   002A44  C07D  F071         	movff	___ftsub@f1+1,___ftadd@f1+1
  8715   002A48  C07E  F072         	movff	___ftsub@f1+2,___ftadd@f1+2
  8716   002A4C  C07F  F073         	movff	___ftsub@f2,___ftadd@f2
  8717   002A50  C080  F074         	movff	___ftsub@f2+1,___ftadd@f2+1
  8718   002A54  C081  F075         	movff	___ftsub@f2+2,___ftadd@f2+2
  8719   002A58  ECB0  F006         	call	___ftadd	;wreg free
  8720   002A5C  C070  F07C         	movff	?___ftadd,?___ftsub
  8721   002A60  C071  F07D         	movff	?___ftadd+1,?___ftsub+1
  8722   002A64  C072  F07E         	movff	?___ftadd+2,?___ftsub+2
  8723                           
  8724                           ; BSR set to: 0
  8725   002A68  0012               	return		;funcret
  8726   002A6A                     __end_of___ftsub:
  8727                           	callstack 0
  8728                           
  8729 ;; *************** function ___ftadd *****************
  8730 ;; Defined at:
  8731 ;;		line 86 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\ftadd.c"
  8732 ;; Parameters:    Size  Location     Type
  8733 ;;  f1              3   16[BANK0 ] float 
  8734 ;;  f2              3   19[BANK0 ] float 
  8735 ;; Auto vars:     Size  Location     Type
  8736 ;;  exp1            1   27[BANK0 ] unsigned char 
  8737 ;;  exp2            1   26[BANK0 ] unsigned char 
  8738 ;;  sign            1   25[BANK0 ] unsigned char 
  8739 ;; Return value:  Size  Location     Type
  8740 ;;                  3   16[BANK0 ] float 
  8741 ;; Registers used:
  8742 ;;		wreg, status,2, status,0, cstack
  8743 ;; Tracked objects:
  8744 ;;		On entry : 3F/0
  8745 ;;		On exit  : 3F/0
  8746 ;;		Unchanged: 0/0
  8747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8748 ;;      Params:         0       6       0       0       0       0       0       0       0
  8749 ;;      Locals:         0       3       0       0       0       0       0       0       0
  8750 ;;      Temps:          0       3       0       0       0       0       0       0       0
  8751 ;;      Totals:         0      12       0       0       0       0       0       0       0
  8752 ;;Total ram usage:       12 bytes
  8753 ;; Hardware stack levels used: 1
  8754 ;; Hardware stack levels required when called: 9
  8755 ;; This function calls:
  8756 ;;		___ftpack
  8757 ;; This function is called by:
  8758 ;;		_printf
  8759 ;;		___ftsub
  8760 ;; This function uses a non-reentrant model
  8761 ;;
  8762                           
  8763                           	psect	text46
  8764   000D60                     __ptext46:
  8765                           	callstack 0
  8766   000D60                     ___ftadd:
  8767                           	callstack 17
  8768                           
  8769                           ; BSR set to: 0
  8770                           
  8771                           ; BSR set to: 0
  8772                           ;incstack = 0
  8773   000D60  C072  F076         	movff	___ftadd@f1+2,??___ftadd
  8774   000D64  6B77               	clrf	(??___ftadd+1)& (0+255),b
  8775   000D66  6B78               	clrf	(??___ftadd+2)& (0+255),b
  8776   000D68  3571               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  8777   000D6A  3776               	rlcf	??___ftadd& (0+255),f,b
  8778   000D6C  E301               	bnc	u5351
  8779   000D6E  8177               	bsf	(??___ftadd+1)& (0+255),0,b
  8780   000D70                     u5351:
  8781   000D70  5176               	movf	??___ftadd& (0+255),w,b
  8782   000D72  6F7B               	movwf	___ftadd@exp1& (0+255),b
  8783   000D74  C075  F076         	movff	___ftadd@f2+2,??___ftadd
  8784   000D78  6B77               	clrf	(??___ftadd+1)& (0+255),b
  8785   000D7A  6B78               	clrf	(??___ftadd+2)& (0+255),b
  8786   000D7C  3574               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  8787   000D7E  3776               	rlcf	??___ftadd& (0+255),f,b
  8788   000D80  E301               	bnc	u5361
  8789   000D82  8177               	bsf	(??___ftadd+1)& (0+255),0,b
  8790   000D84                     u5361:
  8791   000D84  5176               	movf	??___ftadd& (0+255),w,b
  8792   000D86  6F7A               	movwf	___ftadd@exp2& (0+255),b
  8793                           
  8794                           ; BSR set to: 0
  8795   000D88  517B               	movf	___ftadd@exp1& (0+255),w,b
  8796   000D8A  B4D8               	btfsc	status,2,c
  8797   000D8C  D00A               	goto	u5390
  8798                           
  8799                           ; BSR set to: 0
  8800   000D8E  517A               	movf	___ftadd@exp2& (0+255),w,b
  8801   000D90  5D7B               	subwf	___ftadd@exp1& (0+255),w,b
  8802   000D92  B0D8               	btfsc	status,0,c
  8803   000D94  D00D               	goto	l5624
  8804                           
  8805                           ; BSR set to: 0
  8806   000D96  517B               	movf	___ftadd@exp1& (0+255),w,b
  8807   000D98  5D7A               	subwf	___ftadd@exp2& (0+255),w,b
  8808   000D9A  6F76               	movwf	??___ftadd& (0+255),b
  8809   000D9C  0E18               	movlw	24
  8810   000D9E  6576               	cpfsgt	??___ftadd& (0+255),b
  8811   000DA0  D007               	goto	l5624
  8812   000DA2                     u5390:
  8813                           
  8814                           ; BSR set to: 0
  8815   000DA2  C073  F070         	movff	___ftadd@f2,?___ftadd
  8816   000DA6  C074  F071         	movff	___ftadd@f2+1,?___ftadd+1
  8817   000DAA  C075  F072         	movff	___ftadd@f2+2,?___ftadd+2
  8818   000DAE  0012               	return	
  8819   000DB0                     l5624:
  8820                           
  8821                           ; BSR set to: 0
  8822   000DB0  517A               	movf	___ftadd@exp2& (0+255),w,b
  8823   000DB2  B4D8               	btfsc	status,2,c
  8824   000DB4  D00A               	goto	u5420
  8825                           
  8826                           ; BSR set to: 0
  8827   000DB6  517B               	movf	___ftadd@exp1& (0+255),w,b
  8828   000DB8  5D7A               	subwf	___ftadd@exp2& (0+255),w,b
  8829   000DBA  B0D8               	btfsc	status,0,c
  8830   000DBC  D00D               	goto	l5630
  8831                           
  8832                           ; BSR set to: 0
  8833   000DBE  517A               	movf	___ftadd@exp2& (0+255),w,b
  8834   000DC0  5D7B               	subwf	___ftadd@exp1& (0+255),w,b
  8835   000DC2  6F76               	movwf	??___ftadd& (0+255),b
  8836   000DC4  0E18               	movlw	24
  8837   000DC6  6576               	cpfsgt	??___ftadd& (0+255),b
  8838   000DC8  D007               	goto	l5630
  8839   000DCA                     u5420:
  8840                           
  8841                           ; BSR set to: 0
  8842   000DCA  C070  F070         	movff	___ftadd@f1,?___ftadd
  8843   000DCE  C071  F071         	movff	___ftadd@f1+1,?___ftadd+1
  8844   000DD2  C072  F072         	movff	___ftadd@f1+2,?___ftadd+2
  8845   000DD6  0012               	return	
  8846   000DD8                     l5630:
  8847                           
  8848                           ; BSR set to: 0
  8849   000DD8  0E06               	movlw	6
  8850   000DDA  6F79               	movwf	___ftadd@sign& (0+255),b
  8851                           
  8852                           ; BSR set to: 0
  8853   000DDC  BF72               	btfsc	(___ftadd@f1+2)& (0+255),7,b
  8854                           
  8855                           ; BSR set to: 0
  8856   000DDE  8F79               	bsf	___ftadd@sign& (0+255),7,b
  8857                           
  8858                           ; BSR set to: 0
  8859   000DE0  BF75               	btfsc	(___ftadd@f2+2)& (0+255),7,b
  8860                           
  8861                           ; BSR set to: 0
  8862   000DE2  8D79               	bsf	___ftadd@sign& (0+255),6,b
  8863                           
  8864                           ; BSR set to: 0
  8865   000DE4  8F71               	bsf	(___ftadd@f1+1)& (0+255),7,b
  8866                           
  8867                           ; BSR set to: 0
  8868   000DE6  0EFF               	movlw	255
  8869   000DE8  1770               	andwf	___ftadd@f1& (0+255),f,b
  8870   000DEA  0EFF               	movlw	255
  8871   000DEC  1771               	andwf	(___ftadd@f1+1)& (0+255),f,b
  8872   000DEE  0E00               	movlw	0
  8873   000DF0  1772               	andwf	(___ftadd@f1+2)& (0+255),f,b
  8874   000DF2  8F74               	bsf	(___ftadd@f2+1)& (0+255),7,b
  8875                           
  8876                           ; BSR set to: 0
  8877   000DF4  0EFF               	movlw	255
  8878   000DF6  1773               	andwf	___ftadd@f2& (0+255),f,b
  8879   000DF8  0EFF               	movlw	255
  8880   000DFA  1774               	andwf	(___ftadd@f2+1)& (0+255),f,b
  8881   000DFC  0E00               	movlw	0
  8882   000DFE  1775               	andwf	(___ftadd@f2+2)& (0+255),f,b
  8883                           
  8884                           ; BSR set to: 0
  8885   000E00  517A               	movf	___ftadd@exp2& (0+255),w,b
  8886   000E02  5D7B               	subwf	___ftadd@exp1& (0+255),w,b
  8887   000E04  B0D8               	btfsc	status,0,c
  8888   000E06  D01B               	goto	l5656
  8889   000E08                     u5450:
  8890                           
  8891                           ; BSR set to: 0
  8892   000E08  90D8               	bcf	status,0,c
  8893   000E0A  3773               	rlcf	___ftadd@f2& (0+255),f,b
  8894   000E0C  3774               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  8895   000E0E  3775               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  8896   000E10  077A               	decf	___ftadd@exp2& (0+255),f,b
  8897                           
  8898                           ; BSR set to: 0
  8899   000E12  517B               	movf	___ftadd@exp1& (0+255),w,b
  8900   000E14  197A               	xorwf	___ftadd@exp2& (0+255),w,b
  8901   000E16  B4D8               	btfsc	status,2,c
  8902   000E18  D00D               	goto	l5654
  8903                           
  8904                           ; BSR set to: 0
  8905   000E1A  0779               	decf	___ftadd@sign& (0+255),f,b
  8906   000E1C  C079  F076         	movff	___ftadd@sign,??___ftadd
  8907   000E20  0E07               	movlw	7
  8908   000E22  1776               	andwf	??___ftadd& (0+255),f,b
  8909   000E24  B4D8               	btfsc	status,2,c
  8910   000E26  D006               	goto	l5654
  8911   000E28  D7EF               	goto	u5450
  8912   000E2A                     l5652:
  8913                           
  8914                           ; BSR set to: 0
  8915   000E2A  90D8               	bcf	status,0,c
  8916   000E2C  3372               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  8917   000E2E  3371               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  8918   000E30  3370               	rrcf	___ftadd@f1& (0+255),f,b
  8919   000E32  2B7B               	incf	___ftadd@exp1& (0+255),f,b
  8920   000E34                     l5654:
  8921                           
  8922                           ; BSR set to: 0
  8923   000E34  517A               	movf	___ftadd@exp2& (0+255),w,b
  8924   000E36  197B               	xorwf	___ftadd@exp1& (0+255),w,b
  8925   000E38  B4D8               	btfsc	status,2,c
  8926   000E3A  D01F               	goto	u5520
  8927   000E3C  D7F6               	goto	l5652
  8928   000E3E                     l5656:
  8929                           
  8930                           ; BSR set to: 0
  8931   000E3E  517B               	movf	___ftadd@exp1& (0+255),w,b
  8932   000E40  5D7A               	subwf	___ftadd@exp2& (0+255),w,b
  8933   000E42  B0D8               	btfsc	status,0,c
  8934   000E44  D01A               	goto	u5520
  8935   000E46                     u5490:
  8936                           
  8937                           ; BSR set to: 0
  8938   000E46  90D8               	bcf	status,0,c
  8939   000E48  3770               	rlcf	___ftadd@f1& (0+255),f,b
  8940   000E4A  3771               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  8941   000E4C  3772               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  8942   000E4E  077B               	decf	___ftadd@exp1& (0+255),f,b
  8943                           
  8944                           ; BSR set to: 0
  8945   000E50  517B               	movf	___ftadd@exp1& (0+255),w,b
  8946   000E52  197A               	xorwf	___ftadd@exp2& (0+255),w,b
  8947   000E54  B4D8               	btfsc	status,2,c
  8948   000E56  D00D               	goto	l5666
  8949                           
  8950                           ; BSR set to: 0
  8951   000E58  0779               	decf	___ftadd@sign& (0+255),f,b
  8952   000E5A  C079  F076         	movff	___ftadd@sign,??___ftadd
  8953   000E5E  0E07               	movlw	7
  8954   000E60  1776               	andwf	??___ftadd& (0+255),f,b
  8955   000E62  B4D8               	btfsc	status,2,c
  8956   000E64  D006               	goto	l5666
  8957   000E66  D7EF               	goto	u5490
  8958   000E68                     l5664:
  8959                           
  8960                           ; BSR set to: 0
  8961   000E68  90D8               	bcf	status,0,c
  8962   000E6A  3375               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  8963   000E6C  3374               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  8964   000E6E  3373               	rrcf	___ftadd@f2& (0+255),f,b
  8965   000E70  2B7A               	incf	___ftadd@exp2& (0+255),f,b
  8966   000E72                     l5666:
  8967                           
  8968                           ; BSR set to: 0
  8969   000E72  517A               	movf	___ftadd@exp2& (0+255),w,b
  8970   000E74  197B               	xorwf	___ftadd@exp1& (0+255),w,b
  8971   000E76  A4D8               	btfss	status,2,c
  8972   000E78  D7F7               	goto	l5664
  8973   000E7A                     u5520:
  8974                           
  8975                           ; BSR set to: 0
  8976   000E7A  AF79               	btfss	___ftadd@sign& (0+255),7,b
  8977   000E7C  D00C               	goto	l939
  8978                           
  8979                           ; BSR set to: 0
  8980   000E7E  0EFF               	movlw	255
  8981   000E80  1B70               	xorwf	___ftadd@f1& (0+255),f,b
  8982   000E82  0EFF               	movlw	255
  8983   000E84  1B71               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  8984   000E86  0EFF               	movlw	255
  8985   000E88  1B72               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  8986   000E8A  0E01               	movlw	1
  8987   000E8C  2770               	addwf	___ftadd@f1& (0+255),f,b
  8988   000E8E  0E00               	movlw	0
  8989   000E90  2371               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  8990   000E92  0E00               	movlw	0
  8991   000E94  2372               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  8992   000E96                     l939:
  8993                           
  8994                           ; BSR set to: 0
  8995   000E96  AD79               	btfss	___ftadd@sign& (0+255),6,b
  8996   000E98  D00C               	goto	l940
  8997                           
  8998                           ; BSR set to: 0
  8999   000E9A  0EFF               	movlw	255
  9000   000E9C  1B73               	xorwf	___ftadd@f2& (0+255),f,b
  9001   000E9E  0EFF               	movlw	255
  9002   000EA0  1B74               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  9003   000EA2  0EFF               	movlw	255
  9004   000EA4  1B75               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  9005   000EA6  0E01               	movlw	1
  9006   000EA8  2773               	addwf	___ftadd@f2& (0+255),f,b
  9007   000EAA  0E00               	movlw	0
  9008   000EAC  2374               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  9009   000EAE  0E00               	movlw	0
  9010   000EB0  2375               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  9011   000EB2                     l940:
  9012                           
  9013                           ; BSR set to: 0
  9014   000EB2  6B79               	clrf	___ftadd@sign& (0+255),b
  9015   000EB4  5170               	movf	___ftadd@f1& (0+255),w,b
  9016   000EB6  2773               	addwf	___ftadd@f2& (0+255),f,b
  9017   000EB8  5171               	movf	(___ftadd@f1+1)& (0+255),w,b
  9018   000EBA  2374               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  9019   000EBC  5172               	movf	(___ftadd@f1+2)& (0+255),w,b
  9020   000EBE  2375               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  9021   000EC0  AF75               	btfss	(___ftadd@f2+2)& (0+255),7,b
  9022   000EC2  D00E               	goto	l5676
  9023                           
  9024                           ; BSR set to: 0
  9025   000EC4  0EFF               	movlw	255
  9026   000EC6  1B73               	xorwf	___ftadd@f2& (0+255),f,b
  9027   000EC8  0EFF               	movlw	255
  9028   000ECA  1B74               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  9029   000ECC  0EFF               	movlw	255
  9030   000ECE  1B75               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  9031   000ED0  0E01               	movlw	1
  9032   000ED2  2773               	addwf	___ftadd@f2& (0+255),f,b
  9033   000ED4  0E00               	movlw	0
  9034   000ED6  2374               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  9035   000ED8  0E00               	movlw	0
  9036   000EDA  2375               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  9037                           
  9038                           ; BSR set to: 0
  9039   000EDC  0E01               	movlw	1
  9040   000EDE  6F79               	movwf	___ftadd@sign& (0+255),b
  9041   000EE0                     l5676:
  9042                           
  9043                           ; BSR set to: 0
  9044   000EE0  C073  F018         	movff	___ftadd@f2,___ftpack@arg
  9045   000EE4  C074  F019         	movff	___ftadd@f2+1,___ftpack@arg+1
  9046   000EE8  C075  F01A         	movff	___ftadd@f2+2,___ftpack@arg+2
  9047   000EEC  C07B  F01B         	movff	___ftadd@exp1,___ftpack@exp
  9048   000EF0  C079  F01C         	movff	___ftadd@sign,___ftpack@sign
  9049   000EF4  EC06  F00F         	call	___ftpack	;wreg free
  9050   000EF8  C018  F070         	movff	?___ftpack,?___ftadd
  9051   000EFC  C019  F071         	movff	?___ftpack+1,?___ftadd+1
  9052   000F00  C01A  F072         	movff	?___ftpack+2,?___ftadd+2
  9053                           
  9054                           ; BSR set to: 0
  9055   000F04  0012               	return		;funcret
  9056   000F06                     __end_of___ftadd:
  9057                           	callstack 0
  9058                           
  9059 ;; *************** function ___ftpack *****************
  9060 ;; Defined at:
  9061 ;;		line 62 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\float.c"
  9062 ;; Parameters:    Size  Location     Type
  9063 ;;  arg             3   23[COMRAM] unsigned um
  9064 ;;  exp             1   26[COMRAM] unsigned char 
  9065 ;;  sign            1   27[COMRAM] unsigned char 
  9066 ;; Auto vars:     Size  Location     Type
  9067 ;;		None
  9068 ;; Return value:  Size  Location     Type
  9069 ;;                  3   23[COMRAM] float 
  9070 ;; Registers used:
  9071 ;;		wreg, status,2, status,0
  9072 ;; Tracked objects:
  9073 ;;		On entry : 3F/0
  9074 ;;		On exit  : 3F/0
  9075 ;;		Unchanged: 3F/0
  9076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9077 ;;      Params:         5       0       0       0       0       0       0       0       0
  9078 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9079 ;;      Temps:          3       0       0       0       0       0       0       0       0
  9080 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9081 ;;Total ram usage:        8 bytes
  9082 ;; Hardware stack levels used: 1
  9083 ;; Hardware stack levels required when called: 8
  9084 ;; This function calls:
  9085 ;;		Nothing
  9086 ;; This function is called by:
  9087 ;;		___awtoft
  9088 ;;		___ftadd
  9089 ;;		___ftdiv
  9090 ;;		___ftmul
  9091 ;;		___lltoft
  9092 ;; This function uses a non-reentrant model
  9093 ;;
  9094                           
  9095                           	psect	text47
  9096   001E0C                     __ptext47:
  9097                           	callstack 0
  9098   001E0C                     ___ftpack:
  9099                           	callstack 20
  9100                           
  9101                           ; BSR set to: 0
  9102                           
  9103                           ; BSR set to: 0
  9104                           ;incstack = 0
  9105   001E0C  501B               	movf	___ftpack@exp^0,w,c
  9106   001E0E  B4D8               	btfsc	status,2,c
  9107   001E10  D005               	goto	u5280
  9108                           
  9109                           ; BSR set to: 0
  9110   001E12  5018               	movf	___ftpack@arg^0,w,c
  9111   001E14  1019               	iorwf	(___ftpack@arg+1)^0,w,c
  9112   001E16  101A               	iorwf	(___ftpack@arg+2)^0,w,c
  9113   001E18  A4D8               	btfss	status,2,c
  9114   001E1A  D00C               	goto	l5590
  9115   001E1C                     u5280:
  9116                           
  9117                           ; BSR set to: 0
  9118   001E1C  0E00               	movlw	0
  9119   001E1E  6E18               	movwf	?___ftpack^0,c
  9120   001E20  0E00               	movlw	0
  9121   001E22  6E19               	movwf	(?___ftpack+1)^0,c
  9122   001E24  0E00               	movlw	0
  9123   001E26  6E1A               	movwf	(?___ftpack+2)^0,c
  9124   001E28  0012               	return	
  9125   001E2A                     l5588:
  9126                           
  9127                           ; BSR set to: 0
  9128   001E2A  2A1B               	incf	___ftpack@exp^0,f,c
  9129   001E2C  90D8               	bcf	status,0,c
  9130   001E2E  321A               	rrcf	(___ftpack@arg+2)^0,f,c
  9131   001E30  3219               	rrcf	(___ftpack@arg+1)^0,f,c
  9132   001E32  3218               	rrcf	___ftpack@arg^0,f,c
  9133   001E34                     l5590:
  9134                           
  9135                           ; BSR set to: 0
  9136   001E34  0E00               	movlw	0
  9137   001E36  1418               	andwf	___ftpack@arg^0,w,c
  9138   001E38  6E1D               	movwf	??___ftpack^0,c
  9139   001E3A  0E00               	movlw	0
  9140   001E3C  1419               	andwf	(___ftpack@arg+1)^0,w,c
  9141   001E3E  6E1E               	movwf	(??___ftpack+1)^0,c
  9142   001E40  0EFE               	movlw	254
  9143   001E42  141A               	andwf	(___ftpack@arg+2)^0,w,c
  9144   001E44  6E1F               	movwf	(??___ftpack+2)^0,c
  9145   001E46  501D               	movf	??___ftpack^0,w,c
  9146   001E48  101E               	iorwf	(??___ftpack+1)^0,w,c
  9147   001E4A  101F               	iorwf	(??___ftpack+2)^0,w,c
  9148   001E4C  B4D8               	btfsc	status,2,c
  9149   001E4E  D00C               	goto	l5596
  9150   001E50  D7EC               	goto	l5588
  9151   001E52                     l5592:
  9152                           
  9153                           ; BSR set to: 0
  9154   001E52  2A1B               	incf	___ftpack@exp^0,f,c
  9155                           
  9156                           ; BSR set to: 0
  9157   001E54  0E01               	movlw	1
  9158   001E56  2618               	addwf	___ftpack@arg^0,f,c
  9159   001E58  0E00               	movlw	0
  9160   001E5A  2219               	addwfc	(___ftpack@arg+1)^0,f,c
  9161   001E5C  0E00               	movlw	0
  9162   001E5E  221A               	addwfc	(___ftpack@arg+2)^0,f,c
  9163   001E60  90D8               	bcf	status,0,c
  9164   001E62  321A               	rrcf	(___ftpack@arg+2)^0,f,c
  9165   001E64  3219               	rrcf	(___ftpack@arg+1)^0,f,c
  9166   001E66  3218               	rrcf	___ftpack@arg^0,f,c
  9167   001E68                     l5596:
  9168                           
  9169                           ; BSR set to: 0
  9170   001E68  0E00               	movlw	0
  9171   001E6A  1418               	andwf	___ftpack@arg^0,w,c
  9172   001E6C  6E1D               	movwf	??___ftpack^0,c
  9173   001E6E  0E00               	movlw	0
  9174   001E70  1419               	andwf	(___ftpack@arg+1)^0,w,c
  9175   001E72  6E1E               	movwf	(??___ftpack+1)^0,c
  9176   001E74  0EFF               	movlw	255
  9177   001E76  141A               	andwf	(___ftpack@arg+2)^0,w,c
  9178   001E78  6E1F               	movwf	(??___ftpack+2)^0,c
  9179   001E7A  501D               	movf	??___ftpack^0,w,c
  9180   001E7C  101E               	iorwf	(??___ftpack+1)^0,w,c
  9181   001E7E  101F               	iorwf	(??___ftpack+2)^0,w,c
  9182   001E80  B4D8               	btfsc	status,2,c
  9183   001E82  D006               	goto	l5600
  9184   001E84  D7E6               	goto	l5592
  9185   001E86                     l5598:
  9186                           
  9187                           ; BSR set to: 0
  9188   001E86  061B               	decf	___ftpack@exp^0,f,c
  9189   001E88  90D8               	bcf	status,0,c
  9190   001E8A  3618               	rlcf	___ftpack@arg^0,f,c
  9191   001E8C  3619               	rlcf	(___ftpack@arg+1)^0,f,c
  9192   001E8E  361A               	rlcf	(___ftpack@arg+2)^0,f,c
  9193   001E90                     l5600:
  9194                           
  9195                           ; BSR set to: 0
  9196   001E90  BE19               	btfsc	(___ftpack@arg+1)^0,7,c
  9197   001E92  D003               	goto	u5320
  9198                           
  9199                           ; BSR set to: 0
  9200   001E94  0E02               	movlw	2
  9201   001E96  601B               	cpfslt	___ftpack@exp^0,c
  9202   001E98  D7F6               	goto	l5598
  9203   001E9A                     u5320:
  9204                           
  9205                           ; BSR set to: 0
  9206   001E9A  A01B               	btfss	___ftpack@exp^0,0,c
  9207                           
  9208                           ; BSR set to: 0
  9209   001E9C  9E19               	bcf	(___ftpack@arg+1)^0,7,c
  9210                           
  9211                           ; BSR set to: 0
  9212   001E9E  90D8               	bcf	status,0,c
  9213   001EA0  321B               	rrcf	___ftpack@exp^0,f,c
  9214   001EA2  501B               	movf	___ftpack@exp^0,w,c
  9215   001EA4  121A               	iorwf	(___ftpack@arg+2)^0,f,c
  9216                           
  9217                           ; BSR set to: 0
  9218   001EA6  501C               	movf	___ftpack@sign^0,w,c
  9219   001EA8  A4D8               	btfss	status,2,c
  9220                           
  9221                           ; BSR set to: 0
  9222   001EAA  8E1A               	bsf	(___ftpack@arg+2)^0,7,c
  9223                           
  9224                           ; BSR set to: 0
  9225   001EAC  C018  F018         	movff	___ftpack@arg,?___ftpack
  9226   001EB0  C019  F019         	movff	___ftpack@arg+1,?___ftpack+1
  9227   001EB4  C01A  F01A         	movff	___ftpack@arg+2,?___ftpack+2
  9228                           
  9229                           ; BSR set to: 0
  9230   001EB8  0012               	return		;funcret
  9231   001EBA                     __end_of___ftpack:
  9232                           	callstack 0
  9233                           
  9234 ;; *************** function ___ftneg *****************
  9235 ;; Defined at:
  9236 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\ftneg.c"
  9237 ;; Parameters:    Size  Location     Type
  9238 ;;  f1              3   23[COMRAM] float 
  9239 ;; Auto vars:     Size  Location     Type
  9240 ;;		None
  9241 ;; Return value:  Size  Location     Type
  9242 ;;                  3   23[COMRAM] float 
  9243 ;; Registers used:
  9244 ;;		wreg, status,2, status,0
  9245 ;; Tracked objects:
  9246 ;;		On entry : 3F/0
  9247 ;;		On exit  : 3F/0
  9248 ;;		Unchanged: 3F/0
  9249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9250 ;;      Params:         3       0       0       0       0       0       0       0       0
  9251 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9252 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9253 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9254 ;;Total ram usage:        3 bytes
  9255 ;; Hardware stack levels used: 1
  9256 ;; Hardware stack levels required when called: 8
  9257 ;; This function calls:
  9258 ;;		Nothing
  9259 ;; This function is called by:
  9260 ;;		_printf
  9261 ;; This function uses a non-reentrant model
  9262 ;;
  9263                           
  9264                           	psect	text48
  9265   002D12                     __ptext48:
  9266                           	callstack 0
  9267   002D12                     ___ftneg:
  9268                           	callstack 19
  9269                           
  9270                           ; BSR set to: 0
  9271                           
  9272                           ; BSR set to: 0
  9273                           ;incstack = 0
  9274   002D12  5018               	movf	___ftneg@f1^0,w,c
  9275   002D14  1019               	iorwf	(___ftneg@f1+1)^0,w,c
  9276   002D16  101A               	iorwf	(___ftneg@f1+2)^0,w,c
  9277   002D18  B4D8               	btfsc	status,2,c
  9278   002D1A  D006               	goto	l989
  9279                           
  9280                           ; BSR set to: 0
  9281   002D1C  0E00               	movlw	0
  9282   002D1E  1A18               	xorwf	___ftneg@f1^0,f,c
  9283   002D20  0E00               	movlw	0
  9284   002D22  1A19               	xorwf	(___ftneg@f1+1)^0,f,c
  9285   002D24  0E80               	movlw	128
  9286   002D26  1A1A               	xorwf	(___ftneg@f1+2)^0,f,c
  9287   002D28                     l989:
  9288                           
  9289                           ; BSR set to: 0
  9290   002D28  C018  F018         	movff	___ftneg@f1,?___ftneg
  9291   002D2C  C019  F019         	movff	___ftneg@f1+1,?___ftneg+1
  9292   002D30  C01A  F01A         	movff	___ftneg@f1+2,?___ftneg+2
  9293                           
  9294                           ; BSR set to: 0
  9295   002D34  0012               	return		;funcret
  9296   002D36                     __end_of___ftneg:
  9297                           	callstack 0
  9298                           
  9299 ;; *************** function ___ftge *****************
  9300 ;; Defined at:
  9301 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\ftge.c"
  9302 ;; Parameters:    Size  Location     Type
  9303 ;;  ff1             3   23[COMRAM] float 
  9304 ;;  ff2             3   26[COMRAM] float 
  9305 ;; Auto vars:     Size  Location     Type
  9306 ;;		None
  9307 ;; Return value:  Size  Location     Type
  9308 ;;		None               void
  9309 ;; Registers used:
  9310 ;;		wreg, status,2, status,0
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9316 ;;      Params:         6       0       0       0       0       0       0       0       0
  9317 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9318 ;;      Temps:          3       0       0       0       0       0       0       0       0
  9319 ;;      Totals:         9       0       0       0       0       0       0       0       0
  9320 ;;Total ram usage:        9 bytes
  9321 ;; Hardware stack levels used: 1
  9322 ;; Hardware stack levels required when called: 8
  9323 ;; This function calls:
  9324 ;;		Nothing
  9325 ;; This function is called by:
  9326 ;;		_printf
  9327 ;; This function uses a non-reentrant model
  9328 ;;
  9329                           
  9330                           	psect	text49
  9331   0023C6                     __ptext49:
  9332                           	callstack 0
  9333   0023C6                     ___ftge:
  9334                           	callstack 19
  9335                           
  9336                           ; BSR set to: 0
  9337                           ;incstack = 0
  9338   0023C6  AE1A               	btfss	(___ftge@ff1+2)^0,7,c
  9339   0023C8  D00F               	goto	l4076
  9340   0023CA  0E00               	movlw	0
  9341   0023CC  6E1E               	movwf	??___ftge^0,c
  9342   0023CE  0E00               	movlw	0
  9343   0023D0  6E1F               	movwf	(??___ftge+1)^0,c
  9344   0023D2  0E80               	movlw	128
  9345   0023D4  6E20               	movwf	(??___ftge+2)^0,c
  9346   0023D6  5018               	movf	___ftge@ff1^0,w,c
  9347   0023D8  5C1E               	subwf	??___ftge^0,w,c
  9348   0023DA  6E18               	movwf	___ftge@ff1^0,c
  9349   0023DC  5019               	movf	(___ftge@ff1+1)^0,w,c
  9350   0023DE  581F               	subwfb	(??___ftge+1)^0,w,c
  9351   0023E0  6E19               	movwf	(___ftge@ff1+1)^0,c
  9352   0023E2  501A               	movf	(___ftge@ff1+2)^0,w,c
  9353   0023E4  5820               	subwfb	(??___ftge+2)^0,w,c
  9354   0023E6  6E1A               	movwf	(___ftge@ff1+2)^0,c
  9355   0023E8                     l4076:
  9356   0023E8  AE1D               	btfss	(___ftge@ff2+2)^0,7,c
  9357   0023EA  D00F               	goto	l4080
  9358   0023EC  0E00               	movlw	0
  9359   0023EE  6E1E               	movwf	??___ftge^0,c
  9360   0023F0  0E00               	movlw	0
  9361   0023F2  6E1F               	movwf	(??___ftge+1)^0,c
  9362   0023F4  0E80               	movlw	128
  9363   0023F6  6E20               	movwf	(??___ftge+2)^0,c
  9364   0023F8  501B               	movf	___ftge@ff2^0,w,c
  9365   0023FA  5C1E               	subwf	??___ftge^0,w,c
  9366   0023FC  6E1B               	movwf	___ftge@ff2^0,c
  9367   0023FE  501C               	movf	(___ftge@ff2+1)^0,w,c
  9368   002400  581F               	subwfb	(??___ftge+1)^0,w,c
  9369   002402  6E1C               	movwf	(___ftge@ff2+1)^0,c
  9370   002404  501D               	movf	(___ftge@ff2+2)^0,w,c
  9371   002406  5820               	subwfb	(??___ftge+2)^0,w,c
  9372   002408  6E1D               	movwf	(___ftge@ff2+2)^0,c
  9373   00240A                     l4080:
  9374   00240A  0E00               	movlw	0
  9375   00240C  1A18               	xorwf	___ftge@ff1^0,f,c
  9376   00240E  0E00               	movlw	0
  9377   002410  1A19               	xorwf	(___ftge@ff1+1)^0,f,c
  9378   002412  0E80               	movlw	128
  9379   002414  1A1A               	xorwf	(___ftge@ff1+2)^0,f,c
  9380   002416  0E00               	movlw	0
  9381   002418  1A1B               	xorwf	___ftge@ff2^0,f,c
  9382   00241A  0E00               	movlw	0
  9383   00241C  1A1C               	xorwf	(___ftge@ff2+1)^0,f,c
  9384   00241E  0E80               	movlw	128
  9385   002420  1A1D               	xorwf	(___ftge@ff2+2)^0,f,c
  9386   002422  501B               	movf	___ftge@ff2^0,w,c
  9387   002424  5C18               	subwf	___ftge@ff1^0,w,c
  9388   002426  501C               	movf	(___ftge@ff2+1)^0,w,c
  9389   002428  5819               	subwfb	(___ftge@ff1+1)^0,w,c
  9390   00242A  501D               	movf	(___ftge@ff2+2)^0,w,c
  9391   00242C  581A               	subwfb	(___ftge@ff1+2)^0,w,c
  9392   00242E  B0D8               	btfsc	status,0,c
  9393   002430  D002               	goto	l4086
  9394   002432  90D8               	bcf	status,0,c
  9395   002434  0012               	return	
  9396   002436                     l4086:
  9397   002436  80D8               	bsf	status,0,c
  9398   002438  0012               	return		;funcret
  9399   00243A                     __end_of___ftge:
  9400                           	callstack 0
  9401                           
  9402 ;; *************** function _ISR *****************
  9403 ;; Defined at:
  9404 ;;		line 479 in file "Lab6.c"
  9405 ;; Parameters:    Size  Location     Type
  9406 ;;		None
  9407 ;; Auto vars:     Size  Location     Type
  9408 ;;		None
  9409 ;; Return value:  Size  Location     Type
  9410 ;;                  1    wreg      void 
  9411 ;; Registers used:
  9412 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9413 ;; Tracked objects:
  9414 ;;		On entry : 0/0
  9415 ;;		On exit  : 0/0
  9416 ;;		Unchanged: 0/0
  9417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9418 ;;      Params:         0       0       0       0       0       0       0       0       0
  9419 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9420 ;;      Temps:          7       0       0       0       0       0       0       0       0
  9421 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9422 ;;Total ram usage:        7 bytes
  9423 ;; Hardware stack levels used: 1
  9424 ;; Hardware stack levels required when called: 7
  9425 ;; This function calls:
  9426 ;;		_borrarTexto
  9427 ;;		_escribirDig
  9428 ;;		_luzFondo
  9429 ;;		_ok
  9430 ;;		i2_fin
  9431 ;;		i2_parEmerg
  9432 ;;		i2_reiCon
  9433 ;; This function is called by:
  9434 ;;		Interrupt level 2
  9435 ;; This function uses a non-reentrant model
  9436 ;;
  9437                           
  9438                           	psect	intcode
  9439   000008                     __pintcode:
  9440                           	callstack 0
  9441   000008                     _ISR:
  9442                           	callstack 17
  9443                           
  9444                           ;incstack = 0
  9445   000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9446   00000A  ED9C  F009         	call	int_func,f	;refresh shadow registers
  9447                           
  9448                           	psect	intcode_body
  9449   001338                     __pintcode_body:
  9450                           	callstack 17
  9451   001338                     int_func:
  9452                           	callstack 17
  9453   001338  0006               	pop		; remove dummy address from shadow register refresh
  9454   00133A  CFF3 F012          	movff	prodl,??_ISR+1
  9455   00133E  CFF4 F013          	movff	prodh,??_ISR+2
  9456   001342  CFF6 F014          	movff	tblptrl,??_ISR+3
  9457   001346  CFF7 F015          	movff	tblptrh,??_ISR+4
  9458   00134A  CFF8 F016          	movff	tblptru,??_ISR+5
  9459   00134E  CFF5 F017          	movff	tablat,??_ISR+6
  9460                           
  9461                           ;Lab6.c: 480: if(flagEmergencia==0){
  9462   001352  503B               	movf	_flagEmergencia^0,w,c
  9463   001354  103C               	iorwf	(_flagEmergencia+1)^0,w,c
  9464   001356  B4D8               	btfsc	status,2,c
  9465                           
  9466                           ;Lab6.c: 481: if(RBIF==1){
  9467   001358  A0F2               	btfss	4082,0,c	;volatile
  9468   00135A  D070               	goto	i2l480
  9469                           
  9470                           ;Lab6.c: 482: if(PORTB!=0b11110000){
  9471   00135C  0EF0               	movlw	240
  9472   00135E  1881               	xorwf	129,w,c	;volatile
  9473   001360  B4D8               	btfsc	status,2,c
  9474   001362  D061               	goto	i2l474
  9475                           
  9476                           ;Lab6.c: 483: Tecla=0;
  9477   001364  6A44               	clrf	_Tecla^0,c
  9478                           
  9479                           ;Lab6.c: 484: LATB=0b11111110;
  9480   001366  0EFE               	movlw	254
  9481   001368  6E8A               	movwf	138,c	;volatile
  9482                           
  9483                           ;Lab6.c: 485: if(RB4==0)escribirDig(1);
  9484   00136A  B881               	btfsc	3969,4,c	;volatile
  9485   00136C  D004               	goto	i2l449
  9486   00136E  0E01               	movlw	1
  9487   001370  EC66  F014         	call	_escribirDig
  9488   001374  D058               	goto	i2l474
  9489   001376                     i2l449:
  9490                           
  9491                           ;Lab6.c: 486: else if(RB5==0)escribirDig(2);
  9492   001376  BA81               	btfsc	3969,5,c	;volatile
  9493   001378  D004               	goto	i2l451
  9494   00137A  0E02               	movlw	2
  9495   00137C  EC66  F014         	call	_escribirDig
  9496   001380  D052               	goto	i2l474
  9497   001382                     i2l451:
  9498                           
  9499                           ;Lab6.c: 487: else if(RB6==0)escribirDig(3);
  9500   001382  BC81               	btfsc	3969,6,c	;volatile
  9501   001384  D004               	goto	i2l453
  9502   001386  0E03               	movlw	3
  9503   001388  EC66  F014         	call	_escribirDig
  9504   00138C  D04C               	goto	i2l474
  9505   00138E                     i2l453:
  9506                           
  9507                           ;Lab6.c: 488: else if(RB7==0)ok();
  9508   00138E  BE81               	btfsc	3969,7,c	;volatile
  9509   001390  D003               	goto	i2l5538
  9510   001392  EC4E  F008         	call	_ok	;wreg free
  9511   001396  D047               	goto	i2l474
  9512   001398                     i2l5538:
  9513                           
  9514                           ;Lab6.c: 489: else{;Lab6.c: 490: LATB=0b11111101;
  9515   001398  0EFD               	movlw	253
  9516   00139A  6E8A               	movwf	138,c	;volatile
  9517                           
  9518                           ;Lab6.c: 491: if(RB4==0)escribirDig(4);
  9519   00139C  B881               	btfsc	3969,4,c	;volatile
  9520   00139E  D004               	goto	i2l457
  9521   0013A0  0E04               	movlw	4
  9522   0013A2  EC66  F014         	call	_escribirDig
  9523   0013A6  D03F               	goto	i2l474
  9524   0013A8                     i2l457:
  9525                           
  9526                           ;Lab6.c: 492: else if(RB5==0)escribirDig(5);
  9527   0013A8  BA81               	btfsc	3969,5,c	;volatile
  9528   0013AA  D004               	goto	i2l459
  9529   0013AC  0E05               	movlw	5
  9530   0013AE  EC66  F014         	call	_escribirDig
  9531   0013B2  D039               	goto	i2l474
  9532   0013B4                     i2l459:
  9533                           
  9534                           ;Lab6.c: 493: else if(RB6==0)escribirDig(6);
  9535   0013B4  BC81               	btfsc	3969,6,c	;volatile
  9536   0013B6  D004               	goto	i2l461
  9537   0013B8  0E06               	movlw	6
  9538   0013BA  EC66  F014         	call	_escribirDig
  9539   0013BE  D033               	goto	i2l474
  9540   0013C0                     i2l461:
  9541                           
  9542                           ;Lab6.c: 494: else if(RB7==0)parEmerg();
  9543   0013C0  BE81               	btfsc	3969,7,c	;volatile
  9544   0013C2  D003               	goto	i2l5550
  9545   0013C4  EC52  F015         	call	i2_parEmerg	;wreg free
  9546   0013C8  D02E               	goto	i2l474
  9547   0013CA                     i2l5550:
  9548                           
  9549                           ;Lab6.c: 495: else{;Lab6.c: 496: LATB=0b11111011;
  9550   0013CA  0EFB               	movlw	251
  9551   0013CC  6E8A               	movwf	138,c	;volatile
  9552                           
  9553                           ;Lab6.c: 497: if(RB4==0)escribirDig(7);
  9554   0013CE  B881               	btfsc	3969,4,c	;volatile
  9555   0013D0  D004               	goto	i2l465
  9556   0013D2  0E07               	movlw	7
  9557   0013D4  EC66  F014         	call	_escribirDig
  9558   0013D8  D026               	goto	i2l474
  9559   0013DA                     i2l465:
  9560                           
  9561                           ;Lab6.c: 498: else if(RB5==0)escribirDig(8);
  9562   0013DA  BA81               	btfsc	3969,5,c	;volatile
  9563   0013DC  D004               	goto	i2l467
  9564   0013DE  0E08               	movlw	8
  9565   0013E0  EC66  F014         	call	_escribirDig
  9566   0013E4  D020               	goto	i2l474
  9567   0013E6                     i2l467:
  9568                           
  9569                           ;Lab6.c: 499: else if(RB6==0)escribirDig(9);
  9570   0013E6  BC81               	btfsc	3969,6,c	;volatile
  9571   0013E8  D004               	goto	i2l469
  9572   0013EA  0E09               	movlw	9
  9573   0013EC  EC66  F014         	call	_escribirDig
  9574   0013F0  D01A               	goto	i2l474
  9575   0013F2                     i2l469:
  9576                           
  9577                           ;Lab6.c: 500: else if(RB7==0)borrarTexto();
  9578   0013F2  BE81               	btfsc	3969,7,c	;volatile
  9579   0013F4  D003               	goto	i2l5562
  9580   0013F6  ECA7  F015         	call	_borrarTexto	;wreg free
  9581   0013FA  D015               	goto	i2l474
  9582   0013FC                     i2l5562:
  9583                           
  9584                           ;Lab6.c: 501: else{;Lab6.c: 502: LATB=0b11110111;
  9585   0013FC  0EF7               	movlw	247
  9586   0013FE  6E8A               	movwf	138,c	;volatile
  9587                           
  9588                           ;Lab6.c: 503: if(RB4==0)reiCon();
  9589   001400  B881               	btfsc	3969,4,c	;volatile
  9590   001402  D003               	goto	i2l473
  9591   001404  EC60  F013         	call	i2_reiCon	;wreg free
  9592   001408  D00E               	goto	i2l474
  9593   00140A                     i2l473:
  9594                           
  9595                           ;Lab6.c: 504: else if(RB5==0)escribirDig(0);
  9596   00140A  BA81               	btfsc	3969,5,c	;volatile
  9597   00140C  D004               	goto	i2l475
  9598   00140E  0E00               	movlw	0
  9599   001410  EC66  F014         	call	_escribirDig
  9600   001414  D008               	goto	i2l474
  9601   001416                     i2l475:
  9602                           
  9603                           ;Lab6.c: 505: else if(RB6==0)fin();
  9604   001416  BC81               	btfsc	3969,6,c	;volatile
  9605   001418  D003               	goto	i2l477
  9606   00141A  EC5D  F00F         	call	i2_fin	;wreg free
  9607   00141E  D003               	goto	i2l474
  9608   001420                     i2l477:
  9609                           
  9610                           ;Lab6.c: 506: else if(RB7==0)luzFondo();
  9611   001420  AE81               	btfss	3969,7,c	;volatile
  9612   001422  ECDE  F015         	call	_luzFondo	;wreg free
  9613   001426                     i2l474:
  9614                           
  9615                           ;Lab6.c: 507: };Lab6.c: 508: };Lab6.c: 509: };Lab6.c: 510: };Lab6.c: 512: LATB=0b1111000
      +                          0;
  9616   001426  0EF0               	movlw	240
  9617   001428  6E8A               	movwf	138,c	;volatile
  9618                           
  9619                           ;Lab6.c: 513: _delay((unsigned long)((50)*(1000000/4000.0)));
  9620   00142A  0E11               	movlw	17
  9621   00142C  6E11               	movwf	??_ISR^0,c
  9622   00142E  0E3A               	movlw	58
  9623   001430                     i2u676_47:
  9624   001430  2EE8               	decfsz	wreg,f,c
  9625   001432  D7FE               	bra	i2u676_47
  9626   001434  2E11               	decfsz	??_ISR^0,f,c
  9627   001436  D7FC               	bra	i2u676_47
  9628   001438  D000               	nop2	
  9629                           
  9630                           ;Lab6.c: 514: RBIF=0;
  9631   00143A  90F2               	bcf	4082,0,c	;volatile
  9632   00143C                     i2l480:
  9633   00143C  C017  FFF5         	movff	??_ISR+6,tablat
  9634   001440  C016  FFF8         	movff	??_ISR+5,tblptru
  9635   001444  C015  FFF7         	movff	??_ISR+4,tblptrh
  9636   001448  C014  FFF6         	movff	??_ISR+3,tblptrl
  9637   00144C  C013  FFF4         	movff	??_ISR+2,prodh
  9638   001450  C012  FFF3         	movff	??_ISR+1,prodl
  9639   001454  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9640   001456  0011               	retfie		f
  9641   001458                     __end_of_ISR:
  9642                           	callstack 0
  9643                           
  9644 ;; *************** function i2_reiCon *****************
  9645 ;; Defined at:
  9646 ;;		line 257 in file "Lab6.c"
  9647 ;; Parameters:    Size  Location     Type
  9648 ;;		None
  9649 ;; Auto vars:     Size  Location     Type
  9650 ;;		None
  9651 ;; Return value:  Size  Location     Type
  9652 ;;                  1    wreg      void 
  9653 ;; Registers used:
  9654 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9655 ;; Tracked objects:
  9656 ;;		On entry : 0/0
  9657 ;;		On exit  : 0/0
  9658 ;;		Unchanged: 0/0
  9659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9660 ;;      Params:         0       0       0       0       0       0       0       0       0
  9661 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9662 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9663 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9664 ;;Total ram usage:        0 bytes
  9665 ;; Hardware stack levels used: 1
  9666 ;; Hardware stack levels required when called: 4
  9667 ;; This function calls:
  9668 ;;		i2_BorraLCD
  9669 ;;		i2_DireccionaLCD
  9670 ;;		i2_EscribeLCD_n8
  9671 ;;		i2_MensajeLCD_Var
  9672 ;;		i2_RGB
  9673 ;;		i2_SEG
  9674 ;; This function is called by:
  9675 ;;		_ISR
  9676 ;; This function uses a non-reentrant model
  9677 ;;
  9678                           
  9679                           	psect	text51
  9680   0026C0                     __ptext51:
  9681                           	callstack 0
  9682   0026C0                     i2_reiCon:
  9683                           	callstack 19
  9684                           
  9685                           ;Lab6.c: 258: piezFalt=cuenObj;
  9686                           
  9687                           ;incstack = 0
  9688   0026C0  C033  F031         	movff	_cuenObj,_piezFalt
  9689   0026C4  C034  F032         	movff	_cuenObj+1,_piezFalt+1
  9690                           
  9691                           ;Lab6.c: 259: cuenta=0;
  9692   0026C8  0E00               	movlw	0
  9693   0026CA  6E3A               	movwf	(_cuenta+1)^0,c
  9694   0026CC  0E00               	movlw	0
  9695   0026CE  6E39               	movwf	_cuenta^0,c
  9696                           
  9697                           ;Lab6.c: 260: a=0;
  9698   0026D0  0E00               	movlw	0
  9699   0026D2  6E38               	movwf	(_a+1)^0,c
  9700   0026D4  0E00               	movlw	0
  9701   0026D6  6E37               	movwf	_a^0,c
  9702                           
  9703                           ;Lab6.c: 261: b=0;
  9704   0026D8  0E00               	movlw	0
  9705   0026DA  6E36               	movwf	(_b+1)^0,c
  9706   0026DC  0E00               	movlw	0
  9707   0026DE  6E35               	movwf	_b^0,c
  9708                           
  9709                           ;Lab6.c: 262: RGB();
  9710   0026E0  ECA6  F011         	call	i2_RGB	;wreg free
  9711                           
  9712                           ; BSR set to: 0
  9713                           ;Lab6.c: 263: SEG();
  9714   0026E4  EC0C  F017         	call	i2_SEG	;wreg free
  9715                           
  9716                           ; BSR set to: 0
  9717                           ;Lab6.c: 265: BorraLCD();
  9718   0026E8  ECEB  F016         	call	i2_BorraLCD	;wreg free
  9719                           
  9720                           ;Lab6.c: 266: MensajeLCD_Var("Faltan: ");
  9721   0026EC  0EF6               	movlw	low STR_3
  9722   0026EE  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  9723   0026F0  0E7F               	movlw	high STR_3
  9724   0026F2  6E07               	movwf	(i2MensajeLCD_Var@a+1)^0,c
  9725   0026F4  EC26  F016         	call	i2_MensajeLCD_Var	;wreg free
  9726                           
  9727                           ;Lab6.c: 267: EscribeLCD_n8(piezFalt,2);
  9728   0026F8  0E02               	movlw	2
  9729   0026FA  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  9730   0026FC  5031               	movf	_piezFalt^0,w,c
  9731   0026FE  EC86  F00C         	call	i2_EscribeLCD_n8
  9732                           
  9733                           ;Lab6.c: 268: DireccionaLCD(0xC0);
  9734   002702  0EC0               	movlw	192
  9735   002704  ECCB  F016         	call	i2_DireccionaLCD
  9736                           
  9737                           ;Lab6.c: 269: MensajeLCD_Var("Objetivo: ");
  9738   002708  0EE0               	movlw	low STR_4
  9739   00270A  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  9740   00270C  0E7F               	movlw	high STR_4
  9741   00270E  6E07               	movwf	(i2MensajeLCD_Var@a+1)^0,c
  9742   002710  EC26  F016         	call	i2_MensajeLCD_Var	;wreg free
  9743                           
  9744                           ;Lab6.c: 270: EscribeLCD_n8(cuenObj,2);
  9745   002714  0E02               	movlw	2
  9746   002716  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  9747   002718  5033               	movf	_cuenObj^0,w,c
  9748   00271A  EC86  F00C         	call	i2_EscribeLCD_n8
  9749   00271E  0012               	return		;funcret
  9750   002720                     __end_ofi2_reiCon:
  9751                           	callstack 0
  9752                           
  9753 ;; *************** function i2_parEmerg *****************
  9754 ;; Defined at:
  9755 ;;		line 244 in file "Lab6.c"
  9756 ;; Parameters:    Size  Location     Type
  9757 ;;		None
  9758 ;; Auto vars:     Size  Location     Type
  9759 ;;		None
  9760 ;; Return value:  Size  Location     Type
  9761 ;;                  1    wreg      void 
  9762 ;; Registers used:
  9763 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9764 ;; Tracked objects:
  9765 ;;		On entry : 0/0
  9766 ;;		On exit  : 0/0
  9767 ;;		Unchanged: 0/0
  9768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9769 ;;      Params:         0       0       0       0       0       0       0       0       0
  9770 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9771 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9772 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9773 ;;Total ram usage:        0 bytes
  9774 ;; Hardware stack levels used: 1
  9775 ;; Hardware stack levels required when called: 4
  9776 ;; This function calls:
  9777 ;;		i2_BorraLCD
  9778 ;;		i2_MensajeLCD_Var
  9779 ;; This function is called by:
  9780 ;;		_ISR
  9781 ;; This function uses a non-reentrant model
  9782 ;;
  9783                           
  9784                           	psect	text52
  9785   002AA4                     __ptext52:
  9786                           	callstack 0
  9787   002AA4                     i2_parEmerg:
  9788                           	callstack 19
  9789                           
  9790                           ;Lab6.c: 245: LATE0 = 1;
  9791                           
  9792                           ;incstack = 0
  9793   002AA4  808D               	bsf	3981,0,c	;volatile
  9794                           
  9795                           ;Lab6.c: 246: LATE1 = 0;
  9796   002AA6  928D               	bcf	3981,1,c	;volatile
  9797                           
  9798                           ;Lab6.c: 247: LATE2 = 0;
  9799   002AA8  948D               	bcf	3981,2,c	;volatile
  9800                           
  9801                           ;Lab6.c: 248: LATC2 = 0;
  9802   002AAA  948B               	bcf	3979,2,c	;volatile
  9803                           
  9804                           ;Lab6.c: 249: CCPR1L=0;
  9805   002AAC  6ABE               	clrf	190,c	;volatile
  9806                           
  9807                           ;Lab6.c: 250: flagADC=1;
  9808   002AAE  0E00               	movlw	0
  9809   002AB0  0100               	movlb	0	; () banked
  9810   002AB2  6FBD               	movwf	(_flagADC+1)& (0+255),b
  9811   002AB4  0E01               	movlw	1
  9812   002AB6  6FBC               	movwf	_flagADC& (0+255),b
  9813                           
  9814                           ;Lab6.c: 251: pwm=0;
  9815   002AB8  0E00               	movlw	0
  9816   002ABA  6FB0               	movwf	_pwm& (0+255),b
  9817   002ABC  0E00               	movlw	0
  9818   002ABE  6FB1               	movwf	(_pwm+1)& (0+255),b
  9819   002AC0  0E00               	movlw	0
  9820   002AC2  6FB2               	movwf	(_pwm+2)& (0+255),b
  9821                           
  9822                           ;Lab6.c: 252: flagEmergencia = 1;
  9823   002AC4  0E00               	movlw	0
  9824   002AC6  6E3C               	movwf	(_flagEmergencia+1)^0,c
  9825   002AC8  0E01               	movlw	1
  9826   002ACA  6E3B               	movwf	_flagEmergencia^0,c
  9827                           
  9828                           ; BSR set to: 0
  9829                           ;Lab6.c: 253: BorraLCD();
  9830   002ACC  ECEB  F016         	call	i2_BorraLCD	;wreg free
  9831                           
  9832                           ;Lab6.c: 254: MensajeLCD_Var("Emergencia");
  9833   002AD0  0EEB               	movlw	low STR_8
  9834   002AD2  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  9835   002AD4  0E7F               	movlw	high STR_8
  9836   002AD6  6E07               	movwf	(i2MensajeLCD_Var@a+1)^0,c
  9837   002AD8  EC26  F016         	call	i2_MensajeLCD_Var	;wreg free
  9838   002ADC  0012               	return		;funcret
  9839   002ADE                     __end_ofi2_parEmerg:
  9840                           	callstack 0
  9841                           
  9842 ;; *************** function _ok *****************
  9843 ;; Defined at:
  9844 ;;		line 187 in file "Lab6.c"
  9845 ;; Parameters:    Size  Location     Type
  9846 ;;		None
  9847 ;; Auto vars:     Size  Location     Type
  9848 ;;		None
  9849 ;; Return value:  Size  Location     Type
  9850 ;;                  1    wreg      void 
  9851 ;; Registers used:
  9852 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9853 ;; Tracked objects:
  9854 ;;		On entry : 0/0
  9855 ;;		On exit  : 0/0
  9856 ;;		Unchanged: 0/0
  9857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9858 ;;      Params:         0       0       0       0       0       0       0       0       0
  9859 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9860 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9861 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9862 ;;Total ram usage:        2 bytes
  9863 ;; Hardware stack levels used: 1
  9864 ;; Hardware stack levels required when called: 6
  9865 ;; This function calls:
  9866 ;;		_borrarTexto
  9867 ;;		i2_BorraLCD
  9868 ;;		i2_DireccionaLCD
  9869 ;;		i2_EscribeLCD_n8
  9870 ;;		i2_MedirDistancia
  9871 ;;		i2_MensajeLCD_Var
  9872 ;;		i2_RGB
  9873 ;;		i2_SEG
  9874 ;;		i2_contador
  9875 ;; This function is called by:
  9876 ;;		_ISR
  9877 ;; This function uses a non-reentrant model
  9878 ;;
  9879                           
  9880                           	psect	text53
  9881   00109C                     __ptext53:
  9882                           	callstack 0
  9883   00109C                     _ok:
  9884                           	callstack 17
  9885                           
  9886                           ;Lab6.c: 188: if(flagEscribir == 1 && flagFin==0){
  9887                           
  9888                           ;incstack = 0
  9889   00109C  043F               	decf	_flagEscribir^0,w,c
  9890   00109E  1040               	iorwf	(_flagEscribir+1)^0,w,c
  9891   0010A0  A4D8               	btfss	status,2,c
  9892   0010A2  D070               	goto	i2l5330
  9893   0010A4  0100               	movlb	0	; () banked
  9894   0010A6  51C0               	movf	_flagFin& (0+255),w,b
  9895   0010A8  11C1               	iorwf	(_flagFin+1)& (0+255),w,b
  9896   0010AA  A4D8               	btfss	status,2,c
  9897   0010AC  D06B               	goto	i2l5330
  9898                           
  9899                           ; BSR set to: 0
  9900                           ;Lab6.c: 189: cuenObj=(d*10)+u;
  9901   0010AE  0E0A               	movlw	10
  9902   0010B0  03B6               	mulwf	_d& (0+255),b
  9903   0010B2  CFF3 F00F          	movff	prodl,??_ok
  9904   0010B6  CFF4 F010          	movff	prodh,??_ok+1
  9905   0010BA  03B7               	mulwf	(_d+1)& (0+255),b
  9906   0010BC  50F3               	movf	prodl,w,c
  9907   0010BE  2610               	addwf	(??_ok+1)^0,f,c
  9908   0010C0  51B8               	movf	_u& (0+255),w,b
  9909   0010C2  240F               	addwf	??_ok^0,w,c
  9910   0010C4  6E33               	movwf	_cuenObj^0,c
  9911   0010C6  51B9               	movf	(_u+1)& (0+255),w,b
  9912   0010C8  2010               	addwfc	(??_ok+1)^0,w,c
  9913   0010CA  6E34               	movwf	(_cuenObj+1)^0,c
  9914                           
  9915                           ; BSR set to: 0
  9916                           ;Lab6.c: 191: if(cuenObj<60 && cuenObj>0){
  9917   0010CC  BE34               	btfsc	(_cuenObj+1)^0,7,c
  9918   0010CE  D006               	goto	i2u502_40
  9919   0010D0  5034               	movf	(_cuenObj+1)^0,w,c
  9920   0010D2  E13E               	bnz	i2l5320
  9921   0010D4  0E3C               	movlw	60
  9922   0010D6  5C33               	subwf	_cuenObj^0,w,c
  9923   0010D8  B0D8               	btfsc	status,0,c
  9924   0010DA  D03A               	goto	i2l5320
  9925   0010DC                     i2u502_40:
  9926                           
  9927                           ; BSR set to: 0
  9928   0010DC  BE34               	btfsc	(_cuenObj+1)^0,7,c
  9929   0010DE  D038               	goto	i2l5320
  9930   0010E0  5034               	movf	(_cuenObj+1)^0,w,c
  9931   0010E2  E103               	bnz	i2u503_40
  9932   0010E4  0433               	decf	_cuenObj^0,w,c
  9933   0010E6  A0D8               	btfss	status,0,c
  9934   0010E8  D033               	goto	i2l5320
  9935   0010EA                     i2u503_40:
  9936                           
  9937                           ; BSR set to: 0
  9938                           ;Lab6.c: 192: flagCont=1;
  9939   0010EA  0E00               	movlw	0
  9940   0010EC  6FBF               	movwf	(_flagCont+1)& (0+255),b
  9941   0010EE  0E01               	movlw	1
  9942   0010F0  6FBE               	movwf	_flagCont& (0+255),b
  9943                           
  9944                           ;Lab6.c: 193: flagADC=0;
  9945   0010F2  0E00               	movlw	0
  9946   0010F4  6FBD               	movwf	(_flagADC+1)& (0+255),b
  9947   0010F6  0E00               	movlw	0
  9948   0010F8  6FBC               	movwf	_flagADC& (0+255),b
  9949                           
  9950                           ; BSR set to: 0
  9951                           ;Lab6.c: 194: dis=MedirDistancia();
  9952   0010FA  EC06  F010         	call	i2_MedirDistancia	;wreg free
  9953   0010FE  6E42               	movwf	_dis^0,c
  9954                           
  9955                           ;Lab6.c: 195: piezFalt = cuenObj;
  9956   001100  C033  F031         	movff	_cuenObj,_piezFalt
  9957   001104  C034  F032         	movff	_cuenObj+1,_piezFalt+1
  9958                           
  9959                           ;Lab6.c: 196: flagEscribir=0;
  9960   001108  0E00               	movlw	0
  9961   00110A  6E40               	movwf	(_flagEscribir+1)^0,c
  9962   00110C  0E00               	movlw	0
  9963   00110E  6E3F               	movwf	_flagEscribir^0,c
  9964                           
  9965                           ;Lab6.c: 197: BorraLCD();
  9966   001110  ECEB  F016         	call	i2_BorraLCD	;wreg free
  9967                           
  9968                           ;Lab6.c: 199: MensajeLCD_Var("Faltan: ");
  9969   001114  0EF6               	movlw	low STR_3
  9970   001116  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  9971   001118  0E7F               	movlw	high STR_3
  9972   00111A  6E07               	movwf	(i2MensajeLCD_Var@a+1)^0,c
  9973   00111C  EC26  F016         	call	i2_MensajeLCD_Var	;wreg free
  9974                           
  9975                           ;Lab6.c: 200: EscribeLCD_n8(piezFalt,2);
  9976   001120  0E02               	movlw	2
  9977   001122  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  9978   001124  5031               	movf	_piezFalt^0,w,c
  9979   001126  EC86  F00C         	call	i2_EscribeLCD_n8
  9980                           
  9981                           ;Lab6.c: 201: DireccionaLCD(0xC0);
  9982   00112A  0EC0               	movlw	192
  9983   00112C  ECCB  F016         	call	i2_DireccionaLCD
  9984                           
  9985                           ;Lab6.c: 202: MensajeLCD_Var("Objetivo: ");
  9986   001130  0EE0               	movlw	low STR_4
  9987   001132  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  9988   001134  0E7F               	movlw	high STR_4
  9989   001136  6E07               	movwf	(i2MensajeLCD_Var@a+1)^0,c
  9990   001138  EC26  F016         	call	i2_MensajeLCD_Var	;wreg free
  9991                           
  9992                           ;Lab6.c: 203: EscribeLCD_n8(cuenObj,2);
  9993   00113C  0E02               	movlw	2
  9994   00113E  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  9995   001140  5033               	movf	_cuenObj^0,w,c
  9996   001142  EC86  F00C         	call	i2_EscribeLCD_n8
  9997                           
  9998                           ;Lab6.c: 204: flagDig=0;
  9999   001146  0E00               	movlw	0
 10000   001148  6E3E               	movwf	(_flagDig+1)^0,c
 10001   00114A  0E00               	movlw	0
 10002   00114C  6E3D               	movwf	_flagDig^0,c
 10003                           
 10004                           ;Lab6.c: 205: }
 10005   00114E  D04B               	goto	i2l5356
 10006   001150                     i2l5320:
 10007                           
 10008                           ; BSR set to: 0
 10009                           ;Lab6.c: 206: else{;Lab6.c: 207: BorraLCD();
 10010   001150  ECEB  F016         	call	i2_BorraLCD	;wreg free
 10011                           
 10012                           ;Lab6.c: 208: MensajeLCD_Var("Valor Invalido");
 10013   001154  0EAB               	movlw	low STR_5
 10014   001156  6E06               	movwf	i2MensajeLCD_Var@a^0,c
 10015   001158  0E7F               	movlw	high STR_5
 10016   00115A  6E07               	movwf	(i2MensajeLCD_Var@a+1)^0,c
 10017   00115C  EC26  F016         	call	i2_MensajeLCD_Var	;wreg free
 10018                           
 10019                           ;Lab6.c: 209: flagDig=0;
 10020   001160  0E00               	movlw	0
 10021   001162  6E3E               	movwf	(_flagDig+1)^0,c
 10022   001164  0E00               	movlw	0
 10023   001166  6E3D               	movwf	_flagDig^0,c
 10024                           
 10025                           ;Lab6.c: 210: _delay((unsigned long)((3000)*(1000000/4000.0)));
 10026   001168  0E04               	movlw	4
 10027   00116A  6E10               	movwf	(??_ok+1)^0,c
 10028   00116C  0ECF               	movlw	207
 10029   00116E  6E0F               	movwf	??_ok^0,c
 10030   001170  0E02               	movlw	2
 10031   001172                     i2u677_47:
 10032   001172  2EE8               	decfsz	wreg,f,c
 10033   001174  D7FE               	bra	i2u677_47
 10034   001176  2E0F               	decfsz	??_ok^0,f,c
 10035   001178  D7FC               	bra	i2u677_47
 10036   00117A  2E10               	decfsz	(??_ok+1)^0,f,c
 10037   00117C  D7FA               	bra	i2u677_47
 10038                           
 10039                           ;Lab6.c: 211: borrarTexto();
 10040   00117E  ECA7  F015         	call	_borrarTexto	;wreg free
 10041   001182  D031               	goto	i2l5356
 10042   001184                     i2l5330:
 10043                           
 10044                           ;Lab6.c: 214: else if(flagFin==1){
 10045   001184  0100               	movlb	0	; () banked
 10046   001186  05C0               	decf	_flagFin& (0+255),w,b
 10047   001188  11C1               	iorwf	(_flagFin+1)& (0+255),w,b
 10048   00118A  A4D8               	btfss	status,2,c
 10049   00118C  D02C               	goto	i2l5356
 10050                           
 10051                           ; BSR set to: 0
 10052                           ;Lab6.c: 216: BorraLCD();
 10053   00118E  ECEB  F016         	call	i2_BorraLCD	;wreg free
 10054                           
 10055                           ;Lab6.c: 217: MensajeLCD_Var("Piezas a Contar: ");
 10056   001192  0E99               	movlw	low STR_2
 10057   001194  6E06               	movwf	i2MensajeLCD_Var@a^0,c
 10058   001196  0E7F               	movlw	high STR_2
 10059   001198  6E07               	movwf	(i2MensajeLCD_Var@a+1)^0,c
 10060   00119A  EC26  F016         	call	i2_MensajeLCD_Var	;wreg free
 10061                           
 10062                           ;Lab6.c: 218: DireccionaLCD(0xC0);
 10063   00119E  0EC0               	movlw	192
 10064   0011A0  ECCB  F016         	call	i2_DireccionaLCD
 10065                           
 10066                           ;Lab6.c: 219: flagEscribir=1;
 10067   0011A4  0E00               	movlw	0
 10068   0011A6  6E40               	movwf	(_flagEscribir+1)^0,c
 10069   0011A8  0E01               	movlw	1
 10070   0011AA  6E3F               	movwf	_flagEscribir^0,c
 10071                           
 10072                           ;Lab6.c: 220: flagDig=0;
 10073   0011AC  0E00               	movlw	0
 10074   0011AE  6E3E               	movwf	(_flagDig+1)^0,c
 10075   0011B0  0E00               	movlw	0
 10076   0011B2  6E3D               	movwf	_flagDig^0,c
 10077                           
 10078                           ;Lab6.c: 222: flagFin=0;
 10079   0011B4  0E00               	movlw	0
 10080   0011B6  0100               	movlb	0	; () banked
 10081   0011B8  6FC1               	movwf	(_flagFin+1)& (0+255),b
 10082   0011BA  0E00               	movlw	0
 10083   0011BC  6FC0               	movwf	_flagFin& (0+255),b
 10084                           
 10085                           ; BSR set to: 0
 10086                           ;Lab6.c: 223: piezFalt=cuenObj;
 10087   0011BE  C033  F031         	movff	_cuenObj,_piezFalt
 10088   0011C2  C034  F032         	movff	_cuenObj+1,_piezFalt+1
 10089                           
 10090                           ; BSR set to: 0
 10091                           ;Lab6.c: 224: cuenta=0;
 10092   0011C6  0E00               	movlw	0
 10093   0011C8  6E3A               	movwf	(_cuenta+1)^0,c
 10094   0011CA  0E00               	movlw	0
 10095   0011CC  6E39               	movwf	_cuenta^0,c
 10096                           
 10097                           ; BSR set to: 0
 10098                           ;Lab6.c: 225: a=0;
 10099   0011CE  0E00               	movlw	0
 10100   0011D0  6E38               	movwf	(_a+1)^0,c
 10101   0011D2  0E00               	movlw	0
 10102   0011D4  6E37               	movwf	_a^0,c
 10103                           
 10104                           ; BSR set to: 0
 10105                           ;Lab6.c: 226: b=0;
 10106   0011D6  0E00               	movlw	0
 10107   0011D8  6E36               	movwf	(_b+1)^0,c
 10108   0011DA  0E00               	movlw	0
 10109   0011DC  6E35               	movwf	_b^0,c
 10110                           
 10111                           ; BSR set to: 0
 10112                           ;Lab6.c: 227: RGB();
 10113   0011DE  ECA6  F011         	call	i2_RGB	;wreg free
 10114                           
 10115                           ; BSR set to: 0
 10116                           ;Lab6.c: 228: SEG();
 10117   0011E2  EC0C  F017         	call	i2_SEG	;wreg free
 10118   0011E6                     i2l5356:
 10119                           
 10120                           ;Lab6.c: 229: };Lab6.c: 230: contador(dis);
 10121   0011E6  5042               	movf	_dis^0,w,c
 10122   0011E8  ECD7  F00D         	call	i2_contador
 10123   0011EC  0012               	return		;funcret
 10124   0011EE                     __end_of_ok:
 10125                           	callstack 0
 10126                           
 10127 ;; *************** function i2_contador *****************
 10128 ;; Defined at:
 10129 ;;		line 292 in file "Lab6.c"
 10130 ;; Parameters:    Size  Location     Type
 10131 ;;  dis             1    wreg     unsigned char 
 10132 ;; Auto vars:     Size  Location     Type
 10133 ;;  dis             1   13[COMRAM] unsigned char 
 10134 ;; Return value:  Size  Location     Type
 10135 ;;                  1    wreg      void 
 10136 ;; Registers used:
 10137 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10138 ;; Tracked objects:
 10139 ;;		On entry : 0/0
 10140 ;;		On exit  : 0/0
 10141 ;;		Unchanged: 0/0
 10142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10143 ;;      Params:         0       0       0       0       0       0       0       0       0
 10144 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10145 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10146 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10147 ;;Total ram usage:        1 bytes
 10148 ;; Hardware stack levels used: 1
 10149 ;; Hardware stack levels required when called: 5
 10150 ;; This function calls:
 10151 ;;		i2_BorraLCD
 10152 ;;		i2_DireccionaLCD
 10153 ;;		i2_EscribeLCD_n8
 10154 ;;		i2_MensajeLCD_Var
 10155 ;;		i2_RGB
 10156 ;;		i2_SEG
 10157 ;;		i2___awdiv
 10158 ;;		i2___awmod
 10159 ;;		i2_fin
 10160 ;; This function is called by:
 10161 ;;		_ok
 10162 ;; This function uses a non-reentrant model
 10163 ;;
 10164                           
 10165                           	psect	text54
 10166   001BAE                     __ptext54:
 10167                           	callstack 0
 10168   001BAE                     i2_contador:
 10169                           	callstack 17
 10170                           
 10171                           ;incstack = 0
 10172                           ;i2contador@dis stored from wreg
 10173   001BAE  6E0E               	movwf	i2contador@dis^0,c
 10174                           
 10175                           ;Lab6.c: 293: if(flagCont==1){
 10176   001BB0  0100               	movlb	0	; () banked
 10177   001BB2  05BE               	decf	_flagCont& (0+255),w,b
 10178   001BB4  11BF               	iorwf	(_flagCont+1)& (0+255),w,b
 10179   001BB6  A4D8               	btfss	status,2,c
 10180   001BB8  0012               	return	
 10181                           
 10182                           ; BSR set to: 0
 10183                           ;Lab6.c: 294: if(dis <= 6 && dis >= 1 && flagObjeto == 0){
 10184   001BBA  0E07               	movlw	7
 10185   001BBC  600E               	cpfslt	i2contador@dis^0,c
 10186   001BBE  0012               	return	
 10187                           
 10188                           ; BSR set to: 0
 10189   001BC0  500E               	movf	i2contador@dis^0,w,c
 10190   001BC2  B4D8               	btfsc	status,2,c
 10191   001BC4  0012               	return	
 10192                           
 10193                           ; BSR set to: 0
 10194   001BC6  51BA               	movf	_flagObjeto& (0+255),w,b
 10195   001BC8  11BB               	iorwf	(_flagObjeto+1)& (0+255),w,b
 10196   001BCA  A4D8               	btfss	status,2,c
 10197   001BCC  0012               	return	
 10198                           
 10199                           ; BSR set to: 0
 10200                           ;Lab6.c: 295: flagInicio = 1;
 10201   001BCE  0E00               	movlw	0
 10202   001BD0  6FC3               	movwf	(_flagInicio+1)& (0+255),b
 10203   001BD2  0E01               	movlw	1
 10204   001BD4  6FC2               	movwf	_flagInicio& (0+255),b
 10205                           
 10206                           ;Lab6.c: 296: flagObjeto = 1;
 10207   001BD6  0E00               	movlw	0
 10208   001BD8  6FBB               	movwf	(_flagObjeto+1)& (0+255),b
 10209   001BDA  0E01               	movlw	1
 10210   001BDC  6FBA               	movwf	_flagObjeto& (0+255),b
 10211                           
 10212                           ; BSR set to: 0
 10213                           ;Lab6.c: 297: if(flagEmergencia == 0){
 10214   001BDE  503B               	movf	_flagEmergencia^0,w,c
 10215   001BE0  103C               	iorwf	(_flagEmergencia+1)^0,w,c
 10216   001BE2  A4D8               	btfss	status,2,c
 10217   001BE4  0012               	return	
 10218                           
 10219                           ; BSR set to: 0
 10220                           ;Lab6.c: 298: cuenta+=1;
 10221   001BE6  4A39               	infsnz	_cuenta^0,f,c
 10222   001BE8  2A3A               	incf	(_cuenta+1)^0,f,c
 10223                           
 10224                           ;Lab6.c: 299: piezFalt-=1;
 10225   001BEA  0631               	decf	_piezFalt^0,f,c
 10226   001BEC  A0D8               	btfss	status,0,c
 10227   001BEE  0632               	decf	(_piezFalt+1)^0,f,c
 10228                           
 10229                           ; BSR set to: 0
 10230                           ;Lab6.c: 300: a = cuenta % 10;
 10231   001BF0  C039  F001         	movff	_cuenta,i2___awmod@dividend
 10232   001BF4  C03A  F002         	movff	_cuenta+1,i2___awmod@dividend+1
 10233   001BF8  0E00               	movlw	0
 10234   001BFA  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 10235   001BFC  0E0A               	movlw	10
 10236   001BFE  6E03               	movwf	i2___awmod@divisor^0,c
 10237   001C00  ECC6  F012         	call	i2___awmod	;wreg free
 10238   001C04  C001  F037         	movff	?i2___awmod,_a
 10239   001C08  C002  F038         	movff	?i2___awmod+1,_a+1
 10240                           
 10241                           ;Lab6.c: 301: b = (cuenta - a)/10;
 10242   001C0C  5037               	movf	_a^0,w,c
 10243   001C0E  5C39               	subwf	_cuenta^0,w,c
 10244   001C10  6E01               	movwf	i2___awdiv@dividend^0,c
 10245   001C12  5038               	movf	(_a+1)^0,w,c
 10246   001C14  583A               	subwfb	(_cuenta+1)^0,w,c
 10247   001C16  6E02               	movwf	(i2___awdiv@dividend+1)^0,c
 10248   001C18  0E00               	movlw	0
 10249   001C1A  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
 10250   001C1C  0E0A               	movlw	10
 10251   001C1E  6E03               	movwf	i2___awdiv@divisor^0,c
 10252   001C20  EC28  F011         	call	i2___awdiv	;wreg free
 10253   001C24  C001  F035         	movff	?i2___awdiv,_b
 10254   001C28  C002  F036         	movff	?i2___awdiv+1,_b+1
 10255                           
 10256                           ;Lab6.c: 302: RGB();
 10257   001C2C  ECA6  F011         	call	i2_RGB	;wreg free
 10258                           
 10259                           ; BSR set to: 0
 10260                           ;Lab6.c: 303: SEG();
 10261   001C30  EC0C  F017         	call	i2_SEG	;wreg free
 10262                           
 10263                           ; BSR set to: 0
 10264                           ;Lab6.c: 305: BorraLCD();
 10265   001C34  ECEB  F016         	call	i2_BorraLCD	;wreg free
 10266                           
 10267                           ;Lab6.c: 306: MensajeLCD_Var("Faltan: ");
 10268   001C38  0EF6               	movlw	low STR_3
 10269   001C3A  6E06               	movwf	i2MensajeLCD_Var@a^0,c
 10270   001C3C  0E7F               	movlw	high STR_3
 10271   001C3E  6E07               	movwf	(i2MensajeLCD_Var@a+1)^0,c
 10272   001C40  EC26  F016         	call	i2_MensajeLCD_Var	;wreg free
 10273                           
 10274                           ;Lab6.c: 307: EscribeLCD_n8(piezFalt,2);
 10275   001C44  0E02               	movlw	2
 10276   001C46  6E09               	movwf	i2EscribeLCD_n8@b^0,c
 10277   001C48  5031               	movf	_piezFalt^0,w,c
 10278   001C4A  EC86  F00C         	call	i2_EscribeLCD_n8
 10279                           
 10280                           ;Lab6.c: 308: DireccionaLCD(0xC0);
 10281   001C4E  0EC0               	movlw	192
 10282   001C50  ECCB  F016         	call	i2_DireccionaLCD
 10283                           
 10284                           ;Lab6.c: 309: MensajeLCD_Var("Objetivo: ");
 10285   001C54  0EE0               	movlw	low STR_4
 10286   001C56  6E06               	movwf	i2MensajeLCD_Var@a^0,c
 10287   001C58  0E7F               	movlw	high STR_4
 10288   001C5A  6E07               	movwf	(i2MensajeLCD_Var@a+1)^0,c
 10289   001C5C  EC26  F016         	call	i2_MensajeLCD_Var	;wreg free
 10290                           
 10291                           ;Lab6.c: 310: EscribeLCD_n8(cuenObj,2);
 10292   001C60  0E02               	movlw	2
 10293   001C62  6E09               	movwf	i2EscribeLCD_n8@b^0,c
 10294   001C64  5033               	movf	_cuenObj^0,w,c
 10295   001C66  EC86  F00C         	call	i2_EscribeLCD_n8
 10296                           
 10297                           ;Lab6.c: 311: if (cuenta==cuenObj){
 10298   001C6A  5033               	movf	_cuenObj^0,w,c
 10299   001C6C  1839               	xorwf	_cuenta^0,w,c
 10300   001C6E  E10C               	bnz	i2l352
 10301   001C70  5034               	movf	(_cuenObj+1)^0,w,c
 10302   001C72  183A               	xorwf	(_cuenta+1)^0,w,c
 10303   001C74  A4D8               	btfss	status,2,c
 10304   001C76  0012               	return	
 10305                           
 10306                           ;Lab6.c: 312: flagCont=0;
 10307   001C78  0E00               	movlw	0
 10308   001C7A  0100               	movlb	0	; () banked
 10309   001C7C  6FBF               	movwf	(_flagCont+1)& (0+255),b
 10310   001C7E  0E00               	movlw	0
 10311   001C80  6FBE               	movwf	_flagCont& (0+255),b
 10312                           
 10313                           ; BSR set to: 0
 10314                           ;Lab6.c: 313: fin();
 10315   001C82  EC5D  F00F         	call	i2_fin	;wreg free
 10316   001C86  0012               	return	
 10317   001C88                     i2l352:
 10318   001C88  0012               	return		;funcret
 10319   001C8A                     __end_ofi2_contador:
 10320                           	callstack 0
 10321                           
 10322 ;; *************** function i2_fin *****************
 10323 ;; Defined at:
 10324 ;;		line 273 in file "Lab6.c"
 10325 ;; Parameters:    Size  Location     Type
 10326 ;;		None
 10327 ;; Auto vars:     Size  Location     Type
 10328 ;;		None
 10329 ;; Return value:  Size  Location     Type
 10330 ;;                  1    wreg      void 
 10331 ;; Registers used:
 10332 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10333 ;; Tracked objects:
 10334 ;;		On entry : 0/0
 10335 ;;		On exit  : 3F/0
 10336 ;;		Unchanged: 0/0
 10337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10338 ;;      Params:         0       0       0       0       0       0       0       0       0
 10339 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10340 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10341 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10342 ;;Total ram usage:        2 bytes
 10343 ;; Hardware stack levels used: 1
 10344 ;; Hardware stack levels required when called: 4
 10345 ;; This function calls:
 10346 ;;		i2_BorraLCD
 10347 ;;		i2_DireccionaLCD
 10348 ;;		i2_MensajeLCD_Var
 10349 ;;		i2_RGB
 10350 ;;		i2_SEG
 10351 ;;		i2___awdiv
 10352 ;;		i2___awmod
 10353 ;; This function is called by:
 10354 ;;		_ISR
 10355 ;;		i2_contador
 10356 ;; This function uses a non-reentrant model
 10357 ;;
 10358                           
 10359                           	psect	text55
 10360   001EBA                     __ptext55:
 10361                           	callstack 0
 10362   001EBA                     i2_fin:
 10363                           	callstack 19
 10364                           
 10365                           ;Lab6.c: 274: cuenta=cuenObj;
 10366                           
 10367                           ;incstack = 0
 10368   001EBA  C033  F039         	movff	_cuenObj,_cuenta
 10369   001EBE  C034  F03A         	movff	_cuenObj+1,_cuenta+1
 10370                           
 10371                           ;Lab6.c: 275: a = cuenta % 10;
 10372   001EC2  C039  F001         	movff	_cuenta,i2___awmod@dividend
 10373   001EC6  C03A  F002         	movff	_cuenta+1,i2___awmod@dividend+1
 10374   001ECA  0E00               	movlw	0
 10375   001ECC  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 10376   001ECE  0E0A               	movlw	10
 10377   001ED0  6E03               	movwf	i2___awmod@divisor^0,c
 10378   001ED2  ECC6  F012         	call	i2___awmod	;wreg free
 10379   001ED6  C001  F037         	movff	?i2___awmod,_a
 10380   001EDA  C002  F038         	movff	?i2___awmod+1,_a+1
 10381                           
 10382                           ;Lab6.c: 276: b = (cuenta - a)/10;
 10383   001EDE  5037               	movf	_a^0,w,c
 10384   001EE0  5C39               	subwf	_cuenta^0,w,c
 10385   001EE2  6E01               	movwf	i2___awdiv@dividend^0,c
 10386   001EE4  5038               	movf	(_a+1)^0,w,c
 10387   001EE6  583A               	subwfb	(_cuenta+1)^0,w,c
 10388   001EE8  6E02               	movwf	(i2___awdiv@dividend+1)^0,c
 10389   001EEA  0E00               	movlw	0
 10390   001EEC  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
 10391   001EEE  0E0A               	movlw	10
 10392   001EF0  6E03               	movwf	i2___awdiv@divisor^0,c
 10393   001EF2  EC28  F011         	call	i2___awdiv	;wreg free
 10394   001EF6  C001  F035         	movff	?i2___awdiv,_b
 10395   001EFA  C002  F036         	movff	?i2___awdiv+1,_b+1
 10396                           
 10397                           ;Lab6.c: 277: RGB();
 10398   001EFE  ECA6  F011         	call	i2_RGB	;wreg free
 10399                           
 10400                           ; BSR set to: 0
 10401                           ;Lab6.c: 278: SEG();
 10402   001F02  EC0C  F017         	call	i2_SEG	;wreg free
 10403                           
 10404                           ; BSR set to: 0
 10405                           ;Lab6.c: 279: BorraLCD();
 10406   001F06  ECEB  F016         	call	i2_BorraLCD	;wreg free
 10407                           
 10408                           ;Lab6.c: 280: MensajeLCD_Var("Fin de Cuenta");
 10409   001F0A  0EBA               	movlw	low STR_11
 10410   001F0C  6E06               	movwf	i2MensajeLCD_Var@a^0,c
 10411   001F0E  0E7F               	movlw	high STR_11
 10412   001F10  6E07               	movwf	(i2MensajeLCD_Var@a+1)^0,c
 10413   001F12  EC26  F016         	call	i2_MensajeLCD_Var	;wreg free
 10414                           
 10415                           ;Lab6.c: 281: DireccionaLCD(0xC0);
 10416   001F16  0EC0               	movlw	192
 10417   001F18  ECCB  F016         	call	i2_DireccionaLCD
 10418                           
 10419                           ;Lab6.c: 282: MensajeLCD_Var("Presione OK");
 10420   001F1C  0EC8               	movlw	low STR_12
 10421   001F1E  6E06               	movwf	i2MensajeLCD_Var@a^0,c
 10422   001F20  0E7F               	movlw	high STR_12
 10423   001F22  6E07               	movwf	(i2MensajeLCD_Var@a+1)^0,c
 10424   001F24  EC26  F016         	call	i2_MensajeLCD_Var	;wreg free
 10425                           
 10426                           ;Lab6.c: 283: _delay((unsigned long)((3000)*(1000000/4000.0)));
 10427   001F28  0E04               	movlw	4
 10428   001F2A  6E0A               	movwf	(??i2_fin+1)^0,c
 10429   001F2C  0ECF               	movlw	207
 10430   001F2E  6E09               	movwf	??i2_fin^0,c
 10431   001F30  0E02               	movlw	2
 10432   001F32                     i2u678_47:
 10433   001F32  2EE8               	decfsz	wreg,f,c
 10434   001F34  D7FE               	bra	i2u678_47
 10435   001F36  2E09               	decfsz	??i2_fin^0,f,c
 10436   001F38  D7FC               	bra	i2u678_47
 10437   001F3A  2E0A               	decfsz	(??i2_fin+1)^0,f,c
 10438   001F3C  D7FA               	bra	i2u678_47
 10439                           
 10440                           ;Lab6.c: 284: CCPR1L=0;
 10441   001F3E  6ABE               	clrf	190,c	;volatile
 10442                           
 10443                           ;Lab6.c: 285: flagADC=1;
 10444   001F40  0E00               	movlw	0
 10445   001F42  0100               	movlb	0	; () banked
 10446   001F44  6FBD               	movwf	(_flagADC+1)& (0+255),b
 10447   001F46  0E01               	movlw	1
 10448   001F48  6FBC               	movwf	_flagADC& (0+255),b
 10449                           
 10450                           ; BSR set to: 0
 10451                           ;Lab6.c: 286: pwm=0;
 10452   001F4A  0E00               	movlw	0
 10453   001F4C  6FB0               	movwf	_pwm& (0+255),b
 10454   001F4E  0E00               	movlw	0
 10455   001F50  6FB1               	movwf	(_pwm+1)& (0+255),b
 10456   001F52  0E00               	movlw	0
 10457   001F54  6FB2               	movwf	(_pwm+2)& (0+255),b
 10458                           
 10459                           ; BSR set to: 0
 10460                           ;Lab6.c: 287: flagFin=1;
 10461   001F56  0E00               	movlw	0
 10462   001F58  6FC1               	movwf	(_flagFin+1)& (0+255),b
 10463   001F5A  0E01               	movlw	1
 10464   001F5C  6FC0               	movwf	_flagFin& (0+255),b
 10465                           
 10466                           ; BSR set to: 0
 10467                           ;Lab6.c: 288: flagDig=0;
 10468   001F5E  0E00               	movlw	0
 10469   001F60  6E3E               	movwf	(_flagDig+1)^0,c
 10470   001F62  0E00               	movlw	0
 10471   001F64  6E3D               	movwf	_flagDig^0,c
 10472                           
 10473                           ; BSR set to: 0
 10474   001F66  0012               	return		;funcret
 10475   001F68                     __end_ofi2_fin:
 10476                           	callstack 0
 10477                           
 10478 ;; *************** function i2___awmod *****************
 10479 ;; Defined at:
 10480 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c"
 10481 ;; Parameters:    Size  Location     Type
 10482 ;;  dividend        2    0[COMRAM] int 
 10483 ;;  divisor         2    2[COMRAM] int 
 10484 ;; Auto vars:     Size  Location     Type
 10485 ;;  sign            1    5[COMRAM] unsigned char 
 10486 ;;  counter         1    4[COMRAM] unsigned char 
 10487 ;; Return value:  Size  Location     Type
 10488 ;;                  2    0[COMRAM] int 
 10489 ;; Registers used:
 10490 ;;		wreg, status,2, status,0
 10491 ;; Tracked objects:
 10492 ;;		On entry : 0/0
 10493 ;;		On exit  : 0/0
 10494 ;;		Unchanged: 0/0
 10495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10496 ;;      Params:         4       0       0       0       0       0       0       0       0
 10497 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10498 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10499 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10500 ;;Total ram usage:        6 bytes
 10501 ;; Hardware stack levels used: 1
 10502 ;; This function calls:
 10503 ;;		Nothing
 10504 ;; This function is called by:
 10505 ;;		i2_fin
 10506 ;;		i2_contador
 10507 ;; This function uses a non-reentrant model
 10508 ;;
 10509                           
 10510                           	psect	text56
 10511   00258C                     __ptext56:
 10512                           	callstack 0
 10513   00258C                     i2___awmod:
 10514                           	callstack 22
 10515                           
 10516                           ; BSR set to: 0
 10517                           ;incstack = 0
 10518   00258C  6A06               	clrf	i2___awmod@sign^0,c
 10519   00258E  AE02               	btfss	(i2___awmod@dividend+1)^0,7,c
 10520   002590  D006               	goto	i2l4272
 10521   002592  6C01               	negf	i2___awmod@dividend^0,c
 10522   002594  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 10523   002596  B0D8               	btfsc	status,0,c
 10524   002598  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 10525   00259A  0E01               	movlw	1
 10526   00259C  6E06               	movwf	i2___awmod@sign^0,c
 10527   00259E                     i2l4272:
 10528   00259E  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 10529   0025A0  D004               	goto	i2l4276
 10530   0025A2  6C03               	negf	i2___awmod@divisor^0,c
 10531   0025A4  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
 10532   0025A6  B0D8               	btfsc	status,0,c
 10533   0025A8  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
 10534   0025AA                     i2l4276:
 10535   0025AA  5003               	movf	i2___awmod@divisor^0,w,c
 10536   0025AC  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
 10537   0025AE  B4D8               	btfsc	status,2,c
 10538   0025B0  D018               	goto	i2l4292
 10539   0025B2  0E01               	movlw	1
 10540   0025B4  6E05               	movwf	i2___awmod@counter^0,c
 10541   0025B6  D004               	goto	i2l4282
 10542   0025B8                     i2l4280:
 10543   0025B8  90D8               	bcf	status,0,c
 10544   0025BA  3603               	rlcf	i2___awmod@divisor^0,f,c
 10545   0025BC  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
 10546   0025BE  2A05               	incf	i2___awmod@counter^0,f,c
 10547   0025C0                     i2l4282:
 10548   0025C0  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 10549   0025C2  D7FA               	goto	i2l4280
 10550   0025C4                     i2u382_40:
 10551   0025C4  5003               	movf	i2___awmod@divisor^0,w,c
 10552   0025C6  5C01               	subwf	i2___awmod@dividend^0,w,c
 10553   0025C8  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 10554   0025CA  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
 10555   0025CC  A0D8               	btfss	status,0,c
 10556   0025CE  D004               	goto	i2l4288
 10557   0025D0  5003               	movf	i2___awmod@divisor^0,w,c
 10558   0025D2  5E01               	subwf	i2___awmod@dividend^0,f,c
 10559   0025D4  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 10560   0025D6  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
 10561   0025D8                     i2l4288:
 10562   0025D8  90D8               	bcf	status,0,c
 10563   0025DA  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
 10564   0025DC  3203               	rrcf	i2___awmod@divisor^0,f,c
 10565   0025DE  2E05               	decfsz	i2___awmod@counter^0,f,c
 10566   0025E0  D7F1               	goto	i2u382_40
 10567   0025E2                     i2l4292:
 10568   0025E2  5006               	movf	i2___awmod@sign^0,w,c
 10569   0025E4  B4D8               	btfsc	status,2,c
 10570   0025E6  D004               	goto	i2l4296
 10571   0025E8  6C01               	negf	i2___awmod@dividend^0,c
 10572   0025EA  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 10573   0025EC  B0D8               	btfsc	status,0,c
 10574   0025EE  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 10575   0025F0                     i2l4296:
 10576   0025F0  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 10577   0025F4  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 10578   0025F8  0012               	return		;funcret
 10579   0025FA                     __end_ofi2___awmod:
 10580                           	callstack 0
 10581                           
 10582 ;; *************** function i2___awdiv *****************
 10583 ;; Defined at:
 10584 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c"
 10585 ;; Parameters:    Size  Location     Type
 10586 ;;  dividend        2    0[COMRAM] int 
 10587 ;;  divisor         2    2[COMRAM] int 
 10588 ;; Auto vars:     Size  Location     Type
 10589 ;;  quotient        2    6[COMRAM] int 
 10590 ;;  sign            1    5[COMRAM] unsigned char 
 10591 ;;  counter         1    4[COMRAM] unsigned char 
 10592 ;; Return value:  Size  Location     Type
 10593 ;;                  2    0[COMRAM] int 
 10594 ;; Registers used:
 10595 ;;		wreg, status,2, status,0
 10596 ;; Tracked objects:
 10597 ;;		On entry : 0/0
 10598 ;;		On exit  : 0/0
 10599 ;;		Unchanged: 0/0
 10600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10601 ;;      Params:         4       0       0       0       0       0       0       0       0
 10602 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10603 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10604 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10605 ;;Total ram usage:        8 bytes
 10606 ;; Hardware stack levels used: 1
 10607 ;; This function calls:
 10608 ;;		Nothing
 10609 ;; This function is called by:
 10610 ;;		i2_fin
 10611 ;;		i2_contador
 10612 ;; This function uses a non-reentrant model
 10613 ;;
 10614                           
 10615                           	psect	text57
 10616   002250                     __ptext57:
 10617                           	callstack 0
 10618   002250                     i2___awdiv:
 10619                           	callstack 22
 10620                           
 10621                           ;incstack = 0
 10622   002250  6A06               	clrf	i2___awdiv@sign^0,c
 10623   002252  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
 10624   002254  D006               	goto	i2l4228
 10625   002256  6C03               	negf	i2___awdiv@divisor^0,c
 10626   002258  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
 10627   00225A  B0D8               	btfsc	status,0,c
 10628   00225C  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
 10629   00225E  0E01               	movlw	1
 10630   002260  6E06               	movwf	i2___awdiv@sign^0,c
 10631   002262                     i2l4228:
 10632   002262  AE02               	btfss	(i2___awdiv@dividend+1)^0,7,c
 10633   002264  D006               	goto	i2l4234
 10634   002266  6C01               	negf	i2___awdiv@dividend^0,c
 10635   002268  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
 10636   00226A  B0D8               	btfsc	status,0,c
 10637   00226C  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
 10638   00226E  0E01               	movlw	1
 10639   002270  1A06               	xorwf	i2___awdiv@sign^0,f,c
 10640   002272                     i2l4234:
 10641   002272  0E00               	movlw	0
 10642   002274  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
 10643   002276  0E00               	movlw	0
 10644   002278  6E07               	movwf	i2___awdiv@quotient^0,c
 10645   00227A  5003               	movf	i2___awdiv@divisor^0,w,c
 10646   00227C  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
 10647   00227E  B4D8               	btfsc	status,2,c
 10648   002280  D01C               	goto	i2l4256
 10649   002282  0E01               	movlw	1
 10650   002284  6E05               	movwf	i2___awdiv@counter^0,c
 10651   002286  D004               	goto	i2l4242
 10652   002288                     i2l4240:
 10653   002288  90D8               	bcf	status,0,c
 10654   00228A  3603               	rlcf	i2___awdiv@divisor^0,f,c
 10655   00228C  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
 10656   00228E  2A05               	incf	i2___awdiv@counter^0,f,c
 10657   002290                     i2l4242:
 10658   002290  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
 10659   002292  D7FA               	goto	i2l4240
 10660   002294                     i2u376_40:
 10661   002294  90D8               	bcf	status,0,c
 10662   002296  3607               	rlcf	i2___awdiv@quotient^0,f,c
 10663   002298  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
 10664   00229A  5003               	movf	i2___awdiv@divisor^0,w,c
 10665   00229C  5C01               	subwf	i2___awdiv@dividend^0,w,c
 10666   00229E  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
 10667   0022A0  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
 10668   0022A2  A0D8               	btfss	status,0,c
 10669   0022A4  D005               	goto	i2l4252
 10670   0022A6  5003               	movf	i2___awdiv@divisor^0,w,c
 10671   0022A8  5E01               	subwf	i2___awdiv@dividend^0,f,c
 10672   0022AA  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
 10673   0022AC  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
 10674   0022AE  8007               	bsf	i2___awdiv@quotient^0,0,c
 10675   0022B0                     i2l4252:
 10676   0022B0  90D8               	bcf	status,0,c
 10677   0022B2  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
 10678   0022B4  3203               	rrcf	i2___awdiv@divisor^0,f,c
 10679   0022B6  2E05               	decfsz	i2___awdiv@counter^0,f,c
 10680   0022B8  D7ED               	goto	i2u376_40
 10681   0022BA                     i2l4256:
 10682   0022BA  5006               	movf	i2___awdiv@sign^0,w,c
 10683   0022BC  B4D8               	btfsc	status,2,c
 10684   0022BE  D004               	goto	i2l4260
 10685   0022C0  6C07               	negf	i2___awdiv@quotient^0,c
 10686   0022C2  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
 10687   0022C4  B0D8               	btfsc	status,0,c
 10688   0022C6  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
 10689   0022C8                     i2l4260:
 10690   0022C8  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 10691   0022CC  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 10692   0022D0  0012               	return		;funcret
 10693   0022D2                     __end_ofi2___awdiv:
 10694                           	callstack 0
 10695                           
 10696 ;; *************** function i2_SEG *****************
 10697 ;; Defined at:
 10698 ;;		line 359 in file "Lab6.c"
 10699 ;; Parameters:    Size  Location     Type
 10700 ;;		None
 10701 ;; Auto vars:     Size  Location     Type
 10702 ;;		None
 10703 ;; Return value:  Size  Location     Type
 10704 ;;                  1    wreg      void 
 10705 ;; Registers used:
 10706 ;;		None
 10707 ;; Tracked objects:
 10708 ;;		On entry : 3F/0
 10709 ;;		On exit  : 3F/0
 10710 ;;		Unchanged: 3F/0
 10711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10712 ;;      Params:         0       0       0       0       0       0       0       0       0
 10713 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10714 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10715 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10716 ;;Total ram usage:        0 bytes
 10717 ;; Hardware stack levels used: 1
 10718 ;; This function calls:
 10719 ;;		Nothing
 10720 ;; This function is called by:
 10721 ;;		_ok
 10722 ;;		i2_reiCon
 10723 ;;		i2_fin
 10724 ;;		i2_contador
 10725 ;; This function uses a non-reentrant model
 10726 ;;
 10727                           
 10728                           	psect	text58
 10729   002E18                     __ptext58:
 10730                           	callstack 0
 10731   002E18                     i2_SEG:
 10732                           	callstack 22
 10733                           
 10734                           ; BSR set to: 0
 10735                           ;Lab6.c: 360: LATD = a;
 10736                           
 10737                           ;incstack = 0
 10738   002E18  C037  FF8C         	movff	_a,3980	;volatile
 10739                           
 10740                           ; BSR set to: 0
 10741   002E1C  0012               	return		;funcret
 10742   002E1E                     __end_ofi2_SEG:
 10743                           	callstack 0
 10744                           
 10745 ;; *************** function i2_RGB *****************
 10746 ;; Defined at:
 10747 ;;		line 321 in file "Lab6.c"
 10748 ;; Parameters:    Size  Location     Type
 10749 ;;		None
 10750 ;; Auto vars:     Size  Location     Type
 10751 ;;		None
 10752 ;; Return value:  Size  Location     Type
 10753 ;;                  1    wreg      void 
 10754 ;; Registers used:
 10755 ;;		wreg, status,2, status,0
 10756 ;; Tracked objects:
 10757 ;;		On entry : 0/0
 10758 ;;		On exit  : 3F/0
 10759 ;;		Unchanged: 0/0
 10760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10761 ;;      Params:         0       0       0       0       0       0       0       0       0
 10762 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10763 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10764 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10765 ;;Total ram usage:        0 bytes
 10766 ;; Hardware stack levels used: 1
 10767 ;; This function calls:
 10768 ;;		Nothing
 10769 ;; This function is called by:
 10770 ;;		_ok
 10771 ;;		i2_reiCon
 10772 ;;		i2_fin
 10773 ;;		i2_contador
 10774 ;; This function uses a non-reentrant model
 10775 ;;
 10776                           
 10777                           	psect	text59
 10778   00234C                     __ptext59:
 10779                           	callstack 0
 10780   00234C                     i2_RGB:
 10781                           	callstack 22
 10782                           
 10783                           ;Lab6.c: 322: if (flagInicio == 0){
 10784                           
 10785                           ; BSR set to: 0
 10786                           ;incstack = 0
 10787   00234C  0100               	movlb	0	; () banked
 10788   00234E  51C2               	movf	_flagInicio& (0+255),w,b
 10789   002350  11C3               	iorwf	(_flagInicio+1)& (0+255),w,b
 10790   002352  A4D8               	btfss	status,2,c
 10791   002354  D004               	goto	i2l4194
 10792                           
 10793                           ; BSR set to: 0
 10794                           ;Lab6.c: 323: LATE0 = 0;
 10795   002356  908D               	bcf	3981,0,c	;volatile
 10796                           
 10797                           ;Lab6.c: 324: LATE1 = 0;
 10798   002358  928D               	bcf	3981,1,c	;volatile
 10799                           
 10800                           ;Lab6.c: 325: LATE2 = 0;
 10801   00235A  948D               	bcf	3981,2,c	;volatile
 10802                           
 10803                           ;Lab6.c: 326: }
 10804   00235C  0012               	return	
 10805   00235E                     i2l4194:
 10806                           
 10807                           ; BSR set to: 0
 10808                           ;Lab6.c: 327: else if (b == 0){
 10809   00235E  5035               	movf	_b^0,w,c
 10810   002360  1036               	iorwf	(_b+1)^0,w,c
 10811   002362  A4D8               	btfss	status,2,c
 10812   002364  D004               	goto	i2l4198
 10813                           
 10814                           ; BSR set to: 0
 10815                           ;Lab6.c: 328: LATE0 = 1;
 10816   002366  808D               	bsf	3981,0,c	;volatile
 10817                           
 10818                           ;Lab6.c: 329: LATE1 = 0;
 10819   002368  928D               	bcf	3981,1,c	;volatile
 10820                           
 10821                           ;Lab6.c: 330: LATE2 = 1;
 10822   00236A  848D               	bsf	3981,2,c	;volatile
 10823                           
 10824                           ;Lab6.c: 331: }
 10825   00236C  0012               	return	
 10826   00236E                     i2l4198:
 10827                           
 10828                           ; BSR set to: 0
 10829                           ;Lab6.c: 332: else if (b == 1){
 10830   00236E  0435               	decf	_b^0,w,c
 10831   002370  1036               	iorwf	(_b+1)^0,w,c
 10832   002372  A4D8               	btfss	status,2,c
 10833   002374  D004               	goto	i2l4202
 10834                           
 10835                           ; BSR set to: 0
 10836                           ;Lab6.c: 333: LATE0 = 0;
 10837   002376  908D               	bcf	3981,0,c	;volatile
 10838                           
 10839                           ;Lab6.c: 334: LATE1 = 0;
 10840   002378  928D               	bcf	3981,1,c	;volatile
 10841                           
 10842                           ;Lab6.c: 335: LATE2 = 1;
 10843   00237A  848D               	bsf	3981,2,c	;volatile
 10844                           
 10845                           ;Lab6.c: 336: }
 10846   00237C  0012               	return	
 10847   00237E                     i2l4202:
 10848                           
 10849                           ; BSR set to: 0
 10850                           ;Lab6.c: 337: else if (b == 2){
 10851   00237E  0E02               	movlw	2
 10852   002380  1835               	xorwf	_b^0,w,c
 10853   002382  1036               	iorwf	(_b+1)^0,w,c
 10854   002384  A4D8               	btfss	status,2,c
 10855   002386  D004               	goto	i2l4206
 10856                           
 10857                           ; BSR set to: 0
 10858                           ;Lab6.c: 338: LATE0 = 0;
 10859   002388  908D               	bcf	3981,0,c	;volatile
 10860                           
 10861                           ;Lab6.c: 339: LATE1 = 1;
 10862   00238A  828D               	bsf	3981,1,c	;volatile
 10863                           
 10864                           ;Lab6.c: 340: LATE2 = 1;
 10865   00238C  848D               	bsf	3981,2,c	;volatile
 10866                           
 10867                           ;Lab6.c: 341: }
 10868   00238E  0012               	return	
 10869   002390                     i2l4206:
 10870                           
 10871                           ; BSR set to: 0
 10872                           ;Lab6.c: 342: else if (b == 3){
 10873   002390  0E03               	movlw	3
 10874   002392  1835               	xorwf	_b^0,w,c
 10875   002394  1036               	iorwf	(_b+1)^0,w,c
 10876   002396  A4D8               	btfss	status,2,c
 10877   002398  D004               	goto	i2l4210
 10878                           
 10879                           ; BSR set to: 0
 10880                           ;Lab6.c: 343: LATE0 = 0;
 10881   00239A  908D               	bcf	3981,0,c	;volatile
 10882                           
 10883                           ;Lab6.c: 344: LATE1 = 1;
 10884   00239C  828D               	bsf	3981,1,c	;volatile
 10885                           
 10886                           ;Lab6.c: 345: LATE2 = 0;
 10887   00239E  948D               	bcf	3981,2,c	;volatile
 10888                           
 10889                           ;Lab6.c: 346: }
 10890   0023A0  0012               	return	
 10891   0023A2                     i2l4210:
 10892                           
 10893                           ; BSR set to: 0
 10894                           ;Lab6.c: 347: else if (b == 4){
 10895   0023A2  0E04               	movlw	4
 10896   0023A4  1835               	xorwf	_b^0,w,c
 10897   0023A6  1036               	iorwf	(_b+1)^0,w,c
 10898   0023A8  A4D8               	btfss	status,2,c
 10899   0023AA  D004               	goto	i2l4214
 10900                           
 10901                           ; BSR set to: 0
 10902                           ;Lab6.c: 348: LATE0 = 1;
 10903   0023AC  808D               	bsf	3981,0,c	;volatile
 10904                           
 10905                           ;Lab6.c: 349: LATE1 = 1;
 10906   0023AE  828D               	bsf	3981,1,c	;volatile
 10907                           
 10908                           ;Lab6.c: 350: LATE2 = 0;
 10909   0023B0  948D               	bcf	3981,2,c	;volatile
 10910                           
 10911                           ;Lab6.c: 351: }
 10912   0023B2  0012               	return	
 10913   0023B4                     i2l4214:
 10914                           
 10915                           ; BSR set to: 0
 10916                           ;Lab6.c: 352: else if (b == 5){
 10917   0023B4  0E05               	movlw	5
 10918   0023B6  1835               	xorwf	_b^0,w,c
 10919   0023B8  1036               	iorwf	(_b+1)^0,w,c
 10920   0023BA  A4D8               	btfss	status,2,c
 10921   0023BC  0012               	return	
 10922                           
 10923                           ; BSR set to: 0
 10924                           ;Lab6.c: 353: LATE0 = 1;
 10925   0023BE  808D               	bsf	3981,0,c	;volatile
 10926                           
 10927                           ;Lab6.c: 354: LATE1 = 1;
 10928   0023C0  828D               	bsf	3981,1,c	;volatile
 10929                           
 10930                           ;Lab6.c: 355: LATE2 = 1;
 10931   0023C2  848D               	bsf	3981,2,c	;volatile
 10932   0023C4  0012               	return	
 10933   0023C6                     __end_ofi2_RGB:
 10934                           	callstack 0
 10935                           
 10936 ;; *************** function i2_EscribeLCD_n8 *****************
 10937 ;; Defined at:
 10938 ;;		line 140 in file "LibLCDXC9.h"
 10939 ;; Parameters:    Size  Location     Type
 10940 ;;  a               1    wreg     unsigned char 
 10941 ;;  b               1    8[COMRAM] unsigned char 
 10942 ;; Auto vars:     Size  Location     Type
 10943 ;;  a               1   12[COMRAM] unsigned char 
 10944 ;;  unidad          1   11[COMRAM] unsigned char 
 10945 ;;  decena          1   10[COMRAM] unsigned char 
 10946 ;;  centena         1    9[COMRAM] unsigned char 
 10947 ;; Return value:  Size  Location     Type
 10948 ;;                  1    wreg      void 
 10949 ;; Registers used:
 10950 ;;		wreg, status,2, status,0, cstack
 10951 ;; Tracked objects:
 10952 ;;		On entry : 0/0
 10953 ;;		On exit  : 0/0
 10954 ;;		Unchanged: 0/0
 10955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10956 ;;      Params:         1       0       0       0       0       0       0       0       0
 10957 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10958 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10959 ;;      Totals:         5       0       0       0       0       0       0       0       0
 10960 ;;Total ram usage:        5 bytes
 10961 ;; Hardware stack levels used: 1
 10962 ;; Hardware stack levels required when called: 2
 10963 ;; This function calls:
 10964 ;;		i2_EnviaDato
 10965 ;;		i2_HabilitaLCD
 10966 ;;		i2_RetardoLCD
 10967 ;;		i2___lbdiv
 10968 ;;		i2___lbmod
 10969 ;; This function is called by:
 10970 ;;		_ok
 10971 ;;		i2_reiCon
 10972 ;;		i2_contador
 10973 ;; This function uses a non-reentrant model
 10974 ;;
 10975                           
 10976                           	psect	text60
 10977   00190C                     __ptext60:
 10978                           	callstack 0
 10979   00190C                     i2_EscribeLCD_n8:
 10980                           	callstack 20
 10981                           
 10982                           ; BSR set to: 0
 10983                           ;incstack = 0
 10984                           ;i2EscribeLCD_n8@a stored from wreg
 10985   00190C  6E0D               	movwf	i2EscribeLCD_n8@a^0,c
 10986                           
 10987                           ;LibLCDXC9.h: 145: unsigned char centena,decena,unidad;;LibLCDXC9.h: 146: LATA4=1;
 10988   00190E  8889               	bsf	3977,4,c	;volatile
 10989                           
 10990                           ;LibLCDXC9.h: 147: switch(b){
 10991   001910  D065               	goto	i2l4700
 10992   001912                     i2l4668:
 10993   001912  0E0A               	movlw	10
 10994   001914  6E01               	movwf	i2___lbmod@divisor^0,c
 10995   001916  500D               	movf	i2EscribeLCD_n8@a^0,w,c
 10996   001918  EC4F  F016         	call	i2___lbmod
 10997   00191C  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
 10998                           
 10999                           ;LibLCDXC9.h: 149: EnviaDato(unidad+48);
 11000   00191E  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
 11001   001920  0F30               	addlw	48
 11002   001922  ECB0  F014         	call	i2_EnviaDato
 11003                           
 11004                           ;LibLCDXC9.h: 150: HabilitaLCD();
 11005   001926  ECFC  F016         	call	i2_HabilitaLCD	;wreg free
 11006                           
 11007                           ;LibLCDXC9.h: 151: RetardoLCD(4);
 11008   00192A  0E04               	movlw	4
 11009   00192C  ECE9  F013         	call	i2_RetardoLCD
 11010                           
 11011                           ;LibLCDXC9.h: 152: break;
 11012   001930  0012               	return	
 11013   001932                     i2l4674:
 11014   001932  0E0A               	movlw	10
 11015   001934  6E05               	movwf	i2___lbdiv@divisor^0,c
 11016   001936  0E64               	movlw	100
 11017   001938  6E01               	movwf	i2___lbmod@divisor^0,c
 11018   00193A  500D               	movf	i2EscribeLCD_n8@a^0,w,c
 11019   00193C  EC4F  F016         	call	i2___lbmod
 11020   001940  EC8B  F015         	call	i2___lbdiv
 11021   001944  6E0B               	movwf	i2EscribeLCD_n8@decena^0,c
 11022                           
 11023                           ;LibLCDXC9.h: 154: unidad=a%10;
 11024   001946  0E0A               	movlw	10
 11025   001948  6E01               	movwf	i2___lbmod@divisor^0,c
 11026   00194A  500D               	movf	i2EscribeLCD_n8@a^0,w,c
 11027   00194C  EC4F  F016         	call	i2___lbmod
 11028   001950  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
 11029                           
 11030                           ;LibLCDXC9.h: 155: EnviaDato(decena+48);
 11031   001952  500B               	movf	i2EscribeLCD_n8@decena^0,w,c
 11032   001954  0F30               	addlw	48
 11033   001956  ECB0  F014         	call	i2_EnviaDato
 11034                           
 11035                           ;LibLCDXC9.h: 156: HabilitaLCD();
 11036   00195A  ECFC  F016         	call	i2_HabilitaLCD	;wreg free
 11037                           
 11038                           ;LibLCDXC9.h: 157: RetardoLCD(4);
 11039   00195E  0E04               	movlw	4
 11040   001960  ECE9  F013         	call	i2_RetardoLCD
 11041                           
 11042                           ;LibLCDXC9.h: 158: EnviaDato(unidad+48);
 11043   001964  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
 11044   001966  0F30               	addlw	48
 11045   001968  ECB0  F014         	call	i2_EnviaDato
 11046                           
 11047                           ;LibLCDXC9.h: 159: HabilitaLCD();
 11048   00196C  ECFC  F016         	call	i2_HabilitaLCD	;wreg free
 11049                           
 11050                           ;LibLCDXC9.h: 160: RetardoLCD(4);
 11051   001970  0E04               	movlw	4
 11052   001972  ECE9  F013         	call	i2_RetardoLCD
 11053                           
 11054                           ;LibLCDXC9.h: 161: break;
 11055   001976  0012               	return	
 11056   001978                     i2l4684:
 11057   001978  0E64               	movlw	100
 11058   00197A  6E05               	movwf	i2___lbdiv@divisor^0,c
 11059   00197C  500D               	movf	i2EscribeLCD_n8@a^0,w,c
 11060   00197E  EC8B  F015         	call	i2___lbdiv
 11061   001982  6E0A               	movwf	i2EscribeLCD_n8@centena^0,c
 11062                           
 11063                           ;LibLCDXC9.h: 163: decena=(a%100)/10;
 11064   001984  0E0A               	movlw	10
 11065   001986  6E05               	movwf	i2___lbdiv@divisor^0,c
 11066   001988  0E64               	movlw	100
 11067   00198A  6E01               	movwf	i2___lbmod@divisor^0,c
 11068   00198C  500D               	movf	i2EscribeLCD_n8@a^0,w,c
 11069   00198E  EC4F  F016         	call	i2___lbmod
 11070   001992  EC8B  F015         	call	i2___lbdiv
 11071   001996  6E0B               	movwf	i2EscribeLCD_n8@decena^0,c
 11072                           
 11073                           ;LibLCDXC9.h: 164: unidad=a%10;
 11074   001998  0E0A               	movlw	10
 11075   00199A  6E01               	movwf	i2___lbmod@divisor^0,c
 11076   00199C  500D               	movf	i2EscribeLCD_n8@a^0,w,c
 11077   00199E  EC4F  F016         	call	i2___lbmod
 11078   0019A2  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
 11079                           
 11080                           ;LibLCDXC9.h: 165: EnviaDato(centena+48);
 11081   0019A4  500A               	movf	i2EscribeLCD_n8@centena^0,w,c
 11082   0019A6  0F30               	addlw	48
 11083   0019A8  ECB0  F014         	call	i2_EnviaDato
 11084                           
 11085                           ;LibLCDXC9.h: 166: HabilitaLCD();
 11086   0019AC  ECFC  F016         	call	i2_HabilitaLCD	;wreg free
 11087                           
 11088                           ;LibLCDXC9.h: 167: RetardoLCD(4);
 11089   0019B0  0E04               	movlw	4
 11090   0019B2  ECE9  F013         	call	i2_RetardoLCD
 11091                           
 11092                           ;LibLCDXC9.h: 168: EnviaDato(decena+48);
 11093   0019B6  500B               	movf	i2EscribeLCD_n8@decena^0,w,c
 11094   0019B8  0F30               	addlw	48
 11095   0019BA  ECB0  F014         	call	i2_EnviaDato
 11096                           
 11097                           ;LibLCDXC9.h: 169: HabilitaLCD();
 11098   0019BE  ECFC  F016         	call	i2_HabilitaLCD	;wreg free
 11099                           
 11100                           ;LibLCDXC9.h: 170: RetardoLCD(4);
 11101   0019C2  0E04               	movlw	4
 11102   0019C4  ECE9  F013         	call	i2_RetardoLCD
 11103                           
 11104                           ;LibLCDXC9.h: 171: EnviaDato(unidad+48);
 11105   0019C8  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
 11106   0019CA  0F30               	addlw	48
 11107   0019CC  ECB0  F014         	call	i2_EnviaDato
 11108                           
 11109                           ;LibLCDXC9.h: 172: HabilitaLCD();
 11110   0019D0  ECFC  F016         	call	i2_HabilitaLCD	;wreg free
 11111                           
 11112                           ;LibLCDXC9.h: 173: RetardoLCD(4);
 11113   0019D4  0E04               	movlw	4
 11114   0019D6  ECE9  F013         	call	i2_RetardoLCD
 11115                           
 11116                           ;LibLCDXC9.h: 174: break;
 11117   0019DA  0012               	return	
 11118   0019DC                     i2l4700:
 11119   0019DC  5009               	movf	i2EscribeLCD_n8@b^0,w,c
 11120                           
 11121                           ; Switch size 1, requested type "simple"
 11122                           ; Number of cases is 3, Range of values is 1 to 3
 11123                           ; switch strategies available:
 11124                           ; Name         Instructions Cycles
 11125                           ; simple_byte           10     6 (average)
 11126                           ;	Chosen strategy is simple_byte
 11127   0019DE  0A01               	xorlw	1	; case 1
 11128   0019E0  B4D8               	btfsc	status,2,c
 11129   0019E2  D797               	goto	i2l4668
 11130   0019E4  0A03               	xorlw	3	; case 2
 11131   0019E6  B4D8               	btfsc	status,2,c
 11132   0019E8  D7A4               	goto	i2l4674
 11133   0019EA  0A01               	xorlw	1	; case 3
 11134   0019EC  A4D8               	btfss	status,2,c
 11135   0019EE  0012               	return	
 11136   0019F0  D7C3               	goto	i2l4684
 11137   0019F2                     __end_ofi2_EscribeLCD_n8:
 11138                           	callstack 0
 11139                           
 11140 ;; *************** function i2___lbmod *****************
 11141 ;; Defined at:
 11142 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbmod.c"
 11143 ;; Parameters:    Size  Location     Type
 11144 ;;  dividend        1    wreg     unsigned char 
 11145 ;;  divisor         1    0[COMRAM] unsigned char 
 11146 ;; Auto vars:     Size  Location     Type
 11147 ;;  dividend        1    1[COMRAM] unsigned char 
 11148 ;;  rem             1    3[COMRAM] unsigned char 
 11149 ;;  counter         1    2[COMRAM] unsigned char 
 11150 ;; Return value:  Size  Location     Type
 11151 ;;                  1    wreg      unsigned char 
 11152 ;; Registers used:
 11153 ;;		wreg, status,2, status,0
 11154 ;; Tracked objects:
 11155 ;;		On entry : 0/0
 11156 ;;		On exit  : 0/0
 11157 ;;		Unchanged: 0/0
 11158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11159 ;;      Params:         1       0       0       0       0       0       0       0       0
 11160 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11161 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11162 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11163 ;;Total ram usage:        4 bytes
 11164 ;; Hardware stack levels used: 1
 11165 ;; This function calls:
 11166 ;;		Nothing
 11167 ;; This function is called by:
 11168 ;;		i2_EscribeLCD_n8
 11169 ;; This function uses a non-reentrant model
 11170 ;;
 11171                           
 11172                           	psect	text61
 11173   002C9E                     __ptext61:
 11174                           	callstack 0
 11175   002C9E                     i2___lbmod:
 11176                           	callstack 21
 11177                           
 11178                           ;incstack = 0
 11179                           ;i2___lbmod@dividend stored from wreg
 11180   002C9E  6E02               	movwf	i2___lbmod@dividend^0,c
 11181   002CA0  0E08               	movlw	8
 11182   002CA2  6E03               	movwf	i2___lbmod@counter^0,c
 11183   002CA4  6A04               	clrf	i2___lbmod@rem^0,c
 11184   002CA6                     i2l4330:
 11185   002CA6  90D8               	bcf	status,0,c
 11186   002CA8  3402               	rlcf	i2___lbmod@dividend^0,w,c
 11187   002CAA  3404               	rlcf	i2___lbmod@rem^0,w,c
 11188   002CAC  6E04               	movwf	i2___lbmod@rem^0,c
 11189   002CAE  90D8               	bcf	status,0,c
 11190   002CB0  3602               	rlcf	i2___lbmod@dividend^0,f,c
 11191   002CB2  5001               	movf	i2___lbmod@divisor^0,w,c
 11192   002CB4  5C04               	subwf	i2___lbmod@rem^0,w,c
 11193   002CB6  A0D8               	btfss	status,0,c
 11194   002CB8  D002               	goto	i2l4338
 11195   002CBA  5001               	movf	i2___lbmod@divisor^0,w,c
 11196   002CBC  5E04               	subwf	i2___lbmod@rem^0,f,c
 11197   002CBE                     i2l4338:
 11198   002CBE  2E03               	decfsz	i2___lbmod@counter^0,f,c
 11199   002CC0  D7F2               	goto	i2l4330
 11200   002CC2  5004               	movf	i2___lbmod@rem^0,w,c
 11201   002CC4  0012               	return		;funcret
 11202   002CC6                     __end_ofi2___lbmod:
 11203                           	callstack 0
 11204                           
 11205 ;; *************** function i2___lbdiv *****************
 11206 ;; Defined at:
 11207 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbdiv.c"
 11208 ;; Parameters:    Size  Location     Type
 11209 ;;  dividend        1    wreg     unsigned char 
 11210 ;;  divisor         1    4[COMRAM] unsigned char 
 11211 ;; Auto vars:     Size  Location     Type
 11212 ;;  dividend        1    5[COMRAM] unsigned char 
 11213 ;;  quotient        1    7[COMRAM] unsigned char 
 11214 ;;  counter         1    6[COMRAM] unsigned char 
 11215 ;; Return value:  Size  Location     Type
 11216 ;;                  1    wreg      unsigned char 
 11217 ;; Registers used:
 11218 ;;		wreg, status,2, status,0
 11219 ;; Tracked objects:
 11220 ;;		On entry : 0/0
 11221 ;;		On exit  : 0/0
 11222 ;;		Unchanged: 0/0
 11223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11224 ;;      Params:         1       0       0       0       0       0       0       0       0
 11225 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11226 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11227 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11228 ;;Total ram usage:        4 bytes
 11229 ;; Hardware stack levels used: 1
 11230 ;; This function calls:
 11231 ;;		Nothing
 11232 ;; This function is called by:
 11233 ;;		i2_EscribeLCD_n8
 11234 ;; This function uses a non-reentrant model
 11235 ;;
 11236                           
 11237                           	psect	text62
 11238   002B16                     __ptext62:
 11239                           	callstack 0
 11240   002B16                     i2___lbdiv:
 11241                           	callstack 21
 11242                           
 11243                           ;incstack = 0
 11244                           ;i2___lbdiv@dividend stored from wreg
 11245   002B16  6E06               	movwf	i2___lbdiv@dividend^0,c
 11246   002B18  6A08               	clrf	i2___lbdiv@quotient^0,c
 11247   002B1A  5005               	movf	i2___lbdiv@divisor^0,w,c
 11248   002B1C  B4D8               	btfsc	status,2,c
 11249   002B1E  D015               	goto	i2l4322
 11250   002B20  0E01               	movlw	1
 11251   002B22  6E07               	movwf	i2___lbdiv@counter^0,c
 11252   002B24  D003               	goto	i2l4310
 11253   002B26                     i2l4306:
 11254   002B26  90D8               	bcf	status,0,c
 11255   002B28  3605               	rlcf	i2___lbdiv@divisor^0,f,c
 11256   002B2A  2A07               	incf	i2___lbdiv@counter^0,f,c
 11257   002B2C                     i2l4310:
 11258   002B2C  AE05               	btfss	i2___lbdiv@divisor^0,7,c
 11259   002B2E  D7FB               	goto	i2l4306
 11260   002B30                     i2u386_40:
 11261   002B30  90D8               	bcf	status,0,c
 11262   002B32  3608               	rlcf	i2___lbdiv@quotient^0,f,c
 11263   002B34  5005               	movf	i2___lbdiv@divisor^0,w,c
 11264   002B36  5C06               	subwf	i2___lbdiv@dividend^0,w,c
 11265   002B38  A0D8               	btfss	status,0,c
 11266   002B3A  D003               	goto	i2l4318
 11267   002B3C  5005               	movf	i2___lbdiv@divisor^0,w,c
 11268   002B3E  5E06               	subwf	i2___lbdiv@dividend^0,f,c
 11269   002B40  8008               	bsf	i2___lbdiv@quotient^0,0,c
 11270   002B42                     i2l4318:
 11271   002B42  90D8               	bcf	status,0,c
 11272   002B44  3205               	rrcf	i2___lbdiv@divisor^0,f,c
 11273   002B46  2E07               	decfsz	i2___lbdiv@counter^0,f,c
 11274   002B48  D7F3               	goto	i2u386_40
 11275   002B4A                     i2l4322:
 11276   002B4A  5008               	movf	i2___lbdiv@quotient^0,w,c
 11277   002B4C  0012               	return		;funcret
 11278   002B4E                     __end_ofi2___lbdiv:
 11279                           	callstack 0
 11280                           
 11281 ;; *************** function i2_MedirDistancia *****************
 11282 ;; Defined at:
 11283 ;;		line 448 in file "Lab6.c"
 11284 ;; Parameters:    Size  Location     Type
 11285 ;;		None
 11286 ;; Auto vars:     Size  Location     Type
 11287 ;;  aux             1    9[COMRAM] unsigned char 
 11288 ;; Return value:  Size  Location     Type
 11289 ;;                  1    wreg      unsigned char 
 11290 ;; Registers used:
 11291 ;;		wreg, status,2, status,0, cstack
 11292 ;; Tracked objects:
 11293 ;;		On entry : 3F/0
 11294 ;;		On exit  : 0/0
 11295 ;;		Unchanged: 0/0
 11296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11297 ;;      Params:         0       0       0       0       0       0       0       0       0
 11298 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11299 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11300 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11301 ;;Total ram usage:        3 bytes
 11302 ;; Hardware stack levels used: 1
 11303 ;; Hardware stack levels required when called: 1
 11304 ;; This function calls:
 11305 ;;		i2___lwdiv
 11306 ;; This function is called by:
 11307 ;;		_ok
 11308 ;; This function uses a non-reentrant model
 11309 ;;
 11310                           
 11311                           	psect	text63
 11312   00200C                     __ptext63:
 11313                           	callstack 0
 11314   00200C                     i2_MedirDistancia:
 11315                           	callstack 21
 11316                           
 11317                           ; BSR set to: 0
 11318                           ;Lab6.c: 450: CCP2CON=0b00000100;
 11319                           
 11320                           ; BSR set to: 0
 11321                           
 11322                           ;incstack = 0
 11323   00200C  0E04               	movlw	4
 11324   00200E  6EBA               	movwf	186,c	;volatile
 11325                           
 11326                           ;Lab6.c: 451: TMR1=0;
 11327   002010  0E00               	movlw	0
 11328   002012  6ECF               	movwf	207,c	;volatile
 11329   002014  0E00               	movlw	0
 11330   002016  6ECE               	movwf	206,c	;volatile
 11331                           
 11332                           ; BSR set to: 0
 11333                           ;Lab6.c: 452: CCP2IF=0;
 11334   002018  90A1               	bcf	4001,0,c	;volatile
 11335                           
 11336                           ; BSR set to: 0
 11337                           ;Lab6.c: 453: RC0=1;
 11338   00201A  8082               	bsf	3970,0,c	;volatile
 11339                           
 11340                           ; BSR set to: 0
 11341                           ;Lab6.c: 454: _delay((unsigned long)((10)*(1000000/4000000.0)));
 11342   00201C  D000               	nop2		;2 cycle nop
 11343                           
 11344                           ;Lab6.c: 455: RC0=0;
 11345   00201E  9082               	bcf	3970,0,c	;volatile
 11346                           
 11347                           ;Lab6.c: 456: etimeout=1;
 11348   002020  0E01               	movlw	1
 11349   002022  6E41               	movwf	_etimeout^0,c
 11350   002024                     i2l427:
 11351   002024  B282               	btfsc	3970,1,c	;volatile
 11352   002026  D003               	goto	i2u459_40
 11353   002028  0441               	decf	_etimeout^0,w,c
 11354   00202A  B4D8               	btfsc	status,2,c
 11355   00202C  D7FB               	goto	i2l427
 11356   00202E                     i2u459_40:
 11357                           
 11358                           ;Lab6.c: 459: if(etimeout==0){
 11359   00202E  5041               	movf	_etimeout^0,w,c
 11360   002030  A4D8               	btfss	status,2,c
 11361   002032  D002               	goto	i2l432
 11362                           
 11363                           ;Lab6.c: 460: return 0;
 11364   002034  0E00               	movlw	0
 11365   002036  0012               	return	
 11366   002038                     i2l432:
 11367                           
 11368                           ;Lab6.c: 461: };Lab6.c: 462: TMR1ON=1;
 11369   002038  80CD               	bsf	4045,0,c	;volatile
 11370   00203A                     i2l434:
 11371   00203A  B0A1               	btfsc	4001,0,c	;volatile
 11372   00203C  D002               	goto	i2u462_40
 11373   00203E  A09E               	btfss	3998,0,c	;volatile
 11374   002040  D7FC               	goto	i2l434
 11375   002042                     i2u462_40:
 11376                           
 11377                           ;Lab6.c: 464: TMR1ON=0;
 11378   002042  90CD               	bcf	4045,0,c	;volatile
 11379                           
 11380                           ;Lab6.c: 465: if(TMR1IF==1)
 11381   002044  A09E               	btfss	3998,0,c	;volatile
 11382   002046  D002               	goto	i2l4986
 11383                           
 11384                           ;Lab6.c: 466: aux=255;
 11385   002048  680A               	setf	i2MedirDistancia@aux^0,c
 11386   00204A  D030               	goto	i2l4992
 11387   00204C                     i2l4986:
 11388                           
 11389                           ;Lab6.c: 467: else{;Lab6.c: 468: if((CCPR2*8)>=14732)
 11390   00204C  CFBB F008          	movff	4027,??i2_MedirDistancia	;volatile
 11391   002050  CFBC F009          	movff	4028,??i2_MedirDistancia+1	;volatile
 11392   002054  90D8               	bcf	status,0,c
 11393   002056  3608               	rlcf	??i2_MedirDistancia^0,f,c
 11394   002058  3609               	rlcf	(??i2_MedirDistancia+1)^0,f,c
 11395   00205A  90D8               	bcf	status,0,c
 11396   00205C  3608               	rlcf	??i2_MedirDistancia^0,f,c
 11397   00205E  3609               	rlcf	(??i2_MedirDistancia+1)^0,f,c
 11398   002060  90D8               	bcf	status,0,c
 11399   002062  3608               	rlcf	??i2_MedirDistancia^0,f,c
 11400   002064  3609               	rlcf	(??i2_MedirDistancia+1)^0,f,c
 11401   002066  0E8C               	movlw	140
 11402   002068  5C08               	subwf	??i2_MedirDistancia^0,w,c
 11403   00206A  0E39               	movlw	57
 11404   00206C  5809               	subwfb	(??i2_MedirDistancia+1)^0,w,c
 11405   00206E  A0D8               	btfss	status,0,c
 11406   002070  D004               	goto	i2l4990
 11407                           
 11408                           ;Lab6.c: 469: CCPR2=14732/8;
 11409   002072  0E07               	movlw	7
 11410   002074  6EBC               	movwf	188,c	;volatile
 11411   002076  0E31               	movlw	49
 11412   002078  6EBB               	movwf	187,c	;volatile
 11413   00207A                     i2l4990:
 11414                           
 11415                           ;Lab6.c: 470: aux=(CCPR2*8)/58 + 1;
 11416   00207A  CFBB F008          	movff	4027,??i2_MedirDistancia	;volatile
 11417   00207E  CFBC F009          	movff	4028,??i2_MedirDistancia+1	;volatile
 11418   002082  90D8               	bcf	status,0,c
 11419   002084  3608               	rlcf	??i2_MedirDistancia^0,f,c
 11420   002086  3609               	rlcf	(??i2_MedirDistancia+1)^0,f,c
 11421   002088  90D8               	bcf	status,0,c
 11422   00208A  3608               	rlcf	??i2_MedirDistancia^0,f,c
 11423   00208C  3609               	rlcf	(??i2_MedirDistancia+1)^0,f,c
 11424   00208E  90D8               	bcf	status,0,c
 11425   002090  3608               	rlcf	??i2_MedirDistancia^0,f,c
 11426   002092  3609               	rlcf	(??i2_MedirDistancia+1)^0,f,c
 11427   002094  C008  F001         	movff	??i2_MedirDistancia,i2___lwdiv@dividend
 11428   002098  C009  F002         	movff	??i2_MedirDistancia+1,i2___lwdiv@dividend+1
 11429   00209C  0E00               	movlw	0
 11430   00209E  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 11431   0020A0  0E3A               	movlw	58
 11432   0020A2  6E03               	movwf	i2___lwdiv@divisor^0,c
 11433   0020A4  EC3D  F014         	call	i2___lwdiv	;wreg free
 11434   0020A8  2801               	incf	?i2___lwdiv^0,w,c
 11435   0020AA  6E0A               	movwf	i2MedirDistancia@aux^0,c
 11436   0020AC                     i2l4992:
 11437                           
 11438                           ;Lab6.c: 471: };Lab6.c: 475: return aux;
 11439   0020AC  500A               	movf	i2MedirDistancia@aux^0,w,c
 11440   0020AE  0012               	return		;funcret
 11441   0020B0                     __end_ofi2_MedirDistancia:
 11442                           	callstack 0
 11443                           
 11444 ;; *************** function i2___lwdiv *****************
 11445 ;; Defined at:
 11446 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lwdiv.c"
 11447 ;; Parameters:    Size  Location     Type
 11448 ;;  dividend        2    0[COMRAM] unsigned int 
 11449 ;;  divisor         2    2[COMRAM] unsigned int 
 11450 ;; Auto vars:     Size  Location     Type
 11451 ;;  quotient        2    4[COMRAM] unsigned int 
 11452 ;;  counter         1    6[COMRAM] unsigned char 
 11453 ;; Return value:  Size  Location     Type
 11454 ;;                  2    0[COMRAM] unsigned int 
 11455 ;; Registers used:
 11456 ;;		wreg, status,2, status,0
 11457 ;; Tracked objects:
 11458 ;;		On entry : 0/0
 11459 ;;		On exit  : 0/0
 11460 ;;		Unchanged: 0/0
 11461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11462 ;;      Params:         4       0       0       0       0       0       0       0       0
 11463 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11464 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11465 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11466 ;;Total ram usage:        7 bytes
 11467 ;; Hardware stack levels used: 1
 11468 ;; This function calls:
 11469 ;;		Nothing
 11470 ;; This function is called by:
 11471 ;;		i2_MedirDistancia
 11472 ;; This function uses a non-reentrant model
 11473 ;;
 11474                           
 11475                           	psect	text64
 11476   00287A                     __ptext64:
 11477                           	callstack 0
 11478   00287A                     i2___lwdiv:
 11479                           	callstack 21
 11480                           
 11481                           ;incstack = 0
 11482   00287A  0E00               	movlw	0
 11483   00287C  6E06               	movwf	(i2___lwdiv@quotient+1)^0,c
 11484   00287E  0E00               	movlw	0
 11485   002880  6E05               	movwf	i2___lwdiv@quotient^0,c
 11486   002882  5003               	movf	i2___lwdiv@divisor^0,w,c
 11487   002884  1004               	iorwf	(i2___lwdiv@divisor+1)^0,w,c
 11488   002886  B4D8               	btfsc	status,2,c
 11489   002888  D01C               	goto	i2l1105
 11490   00288A  0E01               	movlw	1
 11491   00288C  6E07               	movwf	i2___lwdiv@counter^0,c
 11492   00288E  D004               	goto	i2l4736
 11493   002890                     i2l4734:
 11494   002890  90D8               	bcf	status,0,c
 11495   002892  3603               	rlcf	i2___lwdiv@divisor^0,f,c
 11496   002894  3604               	rlcf	(i2___lwdiv@divisor+1)^0,f,c
 11497   002896  2A07               	incf	i2___lwdiv@counter^0,f,c
 11498   002898                     i2l4736:
 11499   002898  AE04               	btfss	(i2___lwdiv@divisor+1)^0,7,c
 11500   00289A  D7FA               	goto	i2l4734
 11501   00289C                     i2u437_40:
 11502   00289C  90D8               	bcf	status,0,c
 11503   00289E  3605               	rlcf	i2___lwdiv@quotient^0,f,c
 11504   0028A0  3606               	rlcf	(i2___lwdiv@quotient+1)^0,f,c
 11505   0028A2  5003               	movf	i2___lwdiv@divisor^0,w,c
 11506   0028A4  5C01               	subwf	i2___lwdiv@dividend^0,w,c
 11507   0028A6  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
 11508   0028A8  5802               	subwfb	(i2___lwdiv@dividend+1)^0,w,c
 11509   0028AA  A0D8               	btfss	status,0,c
 11510   0028AC  D005               	goto	i2l4746
 11511   0028AE  5003               	movf	i2___lwdiv@divisor^0,w,c
 11512   0028B0  5E01               	subwf	i2___lwdiv@dividend^0,f,c
 11513   0028B2  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
 11514   0028B4  5A02               	subwfb	(i2___lwdiv@dividend+1)^0,f,c
 11515   0028B6  8005               	bsf	i2___lwdiv@quotient^0,0,c
 11516   0028B8                     i2l4746:
 11517   0028B8  90D8               	bcf	status,0,c
 11518   0028BA  3204               	rrcf	(i2___lwdiv@divisor+1)^0,f,c
 11519   0028BC  3203               	rrcf	i2___lwdiv@divisor^0,f,c
 11520   0028BE  2E07               	decfsz	i2___lwdiv@counter^0,f,c
 11521   0028C0  D7ED               	goto	i2u437_40
 11522   0028C2                     i2l1105:
 11523   0028C2  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 11524   0028C6  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 11525   0028CA  0012               	return		;funcret
 11526   0028CC                     __end_ofi2___lwdiv:
 11527                           	callstack 0
 11528                           
 11529 ;; *************** function _borrarTexto *****************
 11530 ;; Defined at:
 11531 ;;		line 233 in file "Lab6.c"
 11532 ;; Parameters:    Size  Location     Type
 11533 ;;		None
 11534 ;; Auto vars:     Size  Location     Type
 11535 ;;		None
 11536 ;; Return value:  Size  Location     Type
 11537 ;;                  1    wreg      void 
 11538 ;; Registers used:
 11539 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11540 ;; Tracked objects:
 11541 ;;		On entry : 0/0
 11542 ;;		On exit  : 0/0
 11543 ;;		Unchanged: 0/0
 11544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11545 ;;      Params:         0       0       0       0       0       0       0       0       0
 11546 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11547 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11548 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11549 ;;Total ram usage:        0 bytes
 11550 ;; Hardware stack levels used: 1
 11551 ;; Hardware stack levels required when called: 4
 11552 ;; This function calls:
 11553 ;;		i2_BorraLCD
 11554 ;;		i2_DireccionaLCD
 11555 ;;		i2_MensajeLCD_Var
 11556 ;; This function is called by:
 11557 ;;		_ok
 11558 ;;		_ISR
 11559 ;; This function uses a non-reentrant model
 11560 ;;
 11561                           
 11562                           	psect	text65
 11563   002B4E                     __ptext65:
 11564                           	callstack 0
 11565   002B4E                     _borrarTexto:
 11566                           	callstack 18
 11567                           
 11568                           ;Lab6.c: 234: if(flagEscribir == 1){
 11569                           
 11570                           ;incstack = 0
 11571   002B4E  043F               	decf	_flagEscribir^0,w,c
 11572   002B50  1040               	iorwf	(_flagEscribir+1)^0,w,c
 11573   002B52  A4D8               	btfss	status,2,c
 11574   002B54  0012               	return	
 11575                           
 11576                           ;Lab6.c: 235: BorraLCD();
 11577   002B56  ECEB  F016         	call	i2_BorraLCD	;wreg free
 11578                           
 11579                           ;Lab6.c: 236: MensajeLCD_Var("Piezas a Contar: ");
 11580   002B5A  0E99               	movlw	low STR_2
 11581   002B5C  6E06               	movwf	i2MensajeLCD_Var@a^0,c
 11582   002B5E  0E7F               	movlw	high STR_2
 11583   002B60  6E07               	movwf	(i2MensajeLCD_Var@a+1)^0,c
 11584   002B62  EC26  F016         	call	i2_MensajeLCD_Var	;wreg free
 11585                           
 11586                           ;Lab6.c: 237: DireccionaLCD(0xC0);
 11587   002B66  0EC0               	movlw	192
 11588   002B68  ECCB  F016         	call	i2_DireccionaLCD
 11589                           
 11590                           ;Lab6.c: 238: flagEscribir=1;
 11591   002B6C  0E00               	movlw	0
 11592   002B6E  6E40               	movwf	(_flagEscribir+1)^0,c
 11593   002B70  0E01               	movlw	1
 11594   002B72  6E3F               	movwf	_flagEscribir^0,c
 11595                           
 11596                           ;Lab6.c: 239: cuenObj=0;
 11597   002B74  0E00               	movlw	0
 11598   002B76  6E34               	movwf	(_cuenObj+1)^0,c
 11599   002B78  0E00               	movlw	0
 11600   002B7A  6E33               	movwf	_cuenObj^0,c
 11601                           
 11602                           ;Lab6.c: 240: flagDig=0;
 11603   002B7C  0E00               	movlw	0
 11604   002B7E  6E3E               	movwf	(_flagDig+1)^0,c
 11605   002B80  0E00               	movlw	0
 11606   002B82  6E3D               	movwf	_flagDig^0,c
 11607   002B84  0012               	return		;funcret
 11608   002B86                     __end_of_borrarTexto:
 11609                           	callstack 0
 11610                           
 11611 ;; *************** function i2_MensajeLCD_Var *****************
 11612 ;; Defined at:
 11613 ;;		line 234 in file "LibLCDXC9.h"
 11614 ;; Parameters:    Size  Location     Type
 11615 ;;  a               2    5[COMRAM] PTR unsigned char 
 11616 ;;		 -> STR_14(11), STR_13(9), STR_12(12), STR_11(14), 
 11617 ;;		 -> STR_10(11), STR_9(9), STR_8(11), STR_7(18), 
 11618 ;;		 -> STR_6(18), STR_5(15), STR_4(11), STR_3(9), 
 11619 ;;		 -> STR_2(18), STR_1(12), 
 11620 ;; Auto vars:     Size  Location     Type
 11621 ;;		None
 11622 ;; Return value:  Size  Location     Type
 11623 ;;                  1    wreg      void 
 11624 ;; Registers used:
 11625 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11626 ;; Tracked objects:
 11627 ;;		On entry : 0/0
 11628 ;;		On exit  : 0/0
 11629 ;;		Unchanged: 0/0
 11630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11631 ;;      Params:         2       0       0       0       0       0       0       0       0
 11632 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11633 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11634 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11635 ;;Total ram usage:        2 bytes
 11636 ;; Hardware stack levels used: 1
 11637 ;; Hardware stack levels required when called: 3
 11638 ;; This function calls:
 11639 ;;		i2_EscribeLCD_c
 11640 ;; This function is called by:
 11641 ;;		_ok
 11642 ;;		_borrarTexto
 11643 ;;		i2_parEmerg
 11644 ;;		i2_reiCon
 11645 ;;		i2_fin
 11646 ;;		i2_contador
 11647 ;; This function uses a non-reentrant model
 11648 ;;
 11649                           
 11650                           	psect	text66
 11651   002C4C                     __ptext66:
 11652                           	callstack 0
 11653   002C4C                     i2_MensajeLCD_Var:
 11654                           	callstack 19
 11655                           
 11656                           ;LibLCDXC9.h: 238: while(*a != '\0'){
 11657                           
 11658                           ;incstack = 0
 11659   002C4C  D00A               	goto	i2l4180
 11660   002C4E                     i2l4176:
 11661                           
 11662                           ;LibLCDXC9.h: 239: EscribeLCD_c(*a);
 11663   002C4E  C006  FFF6         	movff	i2MensajeLCD_Var@a,tblptrl
 11664   002C52  C007  FFF7         	movff	i2MensajeLCD_Var@a+1,tblptrh
 11665   002C56                     	if	0	;tblptru may be non-zero
 11666   002C56                     	endif
 11667   002C56                     	if	0	;tblptru may be non-zero
 11668   002C56                     	endif
 11669   002C56  0008               	tblrd		*
 11670   002C58  50F5               	movf	tablat,w,c
 11671   002C5A  ECD6  F016         	call	i2_EscribeLCD_c
 11672                           
 11673                           ;LibLCDXC9.h: 240: a++;
 11674   002C5E  4A06               	infsnz	i2MensajeLCD_Var@a^0,f,c
 11675   002C60  2A07               	incf	(i2MensajeLCD_Var@a+1)^0,f,c
 11676   002C62                     i2l4180:
 11677   002C62  C006  FFF6         	movff	i2MensajeLCD_Var@a,tblptrl
 11678   002C66  C007  FFF7         	movff	i2MensajeLCD_Var@a+1,tblptrh
 11679   002C6A                     	if	0	;tblptru may be non-zero
 11680   002C6A                     	endif
 11681   002C6A                     	if	0	;tblptru may be non-zero
 11682   002C6A                     	endif
 11683   002C6A  0008               	tblrd		*
 11684   002C6C  50F5               	movf	tablat,w,c
 11685   002C6E  0900               	iorlw	0
 11686   002C70  B4D8               	btfsc	status,2,c
 11687   002C72  0012               	return	
 11688   002C74  D7EC               	goto	i2l4176
 11689   002C76                     __end_ofi2_MensajeLCD_Var:
 11690                           	callstack 0
 11691                           
 11692 ;; *************** function i2_DireccionaLCD *****************
 11693 ;; Defined at:
 11694 ;;		line 243 in file "LibLCDXC9.h"
 11695 ;; Parameters:    Size  Location     Type
 11696 ;;  a               1    wreg     unsigned char 
 11697 ;; Auto vars:     Size  Location     Type
 11698 ;;  a               1    4[COMRAM] unsigned char 
 11699 ;; Return value:  Size  Location     Type
 11700 ;;                  1    wreg      void 
 11701 ;; Registers used:
 11702 ;;		wreg, status,2, status,0, cstack
 11703 ;; Tracked objects:
 11704 ;;		On entry : 0/0
 11705 ;;		On exit  : 0/0
 11706 ;;		Unchanged: 0/0
 11707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11708 ;;      Params:         0       0       0       0       0       0       0       0       0
 11709 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11710 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11711 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11712 ;;Total ram usage:        1 bytes
 11713 ;; Hardware stack levels used: 1
 11714 ;; Hardware stack levels required when called: 2
 11715 ;; This function calls:
 11716 ;;		i2_EnviaDato
 11717 ;;		i2_HabilitaLCD
 11718 ;;		i2_RetardoLCD
 11719 ;; This function is called by:
 11720 ;;		_ok
 11721 ;;		_borrarTexto
 11722 ;;		i2_reiCon
 11723 ;;		i2_fin
 11724 ;;		i2_contador
 11725 ;; This function uses a non-reentrant model
 11726 ;;
 11727                           
 11728                           	psect	text67
 11729   002D96                     __ptext67:
 11730                           	callstack 0
 11731   002D96                     i2_DireccionaLCD:
 11732                           	callstack 20
 11733                           
 11734                           ;incstack = 0
 11735                           ;i2DireccionaLCD@a stored from wreg
 11736   002D96  6E05               	movwf	i2DireccionaLCD@a^0,c
 11737                           
 11738                           ;LibLCDXC9.h: 246: LATA4=0;
 11739   002D98  9889               	bcf	3977,4,c	;volatile
 11740                           
 11741                           ;LibLCDXC9.h: 247: EnviaDato(a);
 11742   002D9A  5005               	movf	i2DireccionaLCD@a^0,w,c
 11743   002D9C  ECB0  F014         	call	i2_EnviaDato
 11744                           
 11745                           ;LibLCDXC9.h: 248: HabilitaLCD();
 11746   002DA0  ECFC  F016         	call	i2_HabilitaLCD	;wreg free
 11747                           
 11748                           ;LibLCDXC9.h: 249: RetardoLCD(4);
 11749   002DA4  0E04               	movlw	4
 11750   002DA6  ECE9  F013         	call	i2_RetardoLCD
 11751   002DAA  0012               	return		;funcret
 11752   002DAC                     __end_ofi2_DireccionaLCD:
 11753                           	callstack 0
 11754                           
 11755 ;; *************** function i2_BorraLCD *****************
 11756 ;; Defined at:
 11757 ;;		line 107 in file "LibLCDXC9.h"
 11758 ;; Parameters:    Size  Location     Type
 11759 ;;		None
 11760 ;; Auto vars:     Size  Location     Type
 11761 ;;		None
 11762 ;; Return value:  Size  Location     Type
 11763 ;;                  1    wreg      void 
 11764 ;; Registers used:
 11765 ;;		wreg, status,2, status,0, cstack
 11766 ;; Tracked objects:
 11767 ;;		On entry : 0/0
 11768 ;;		On exit  : 0/0
 11769 ;;		Unchanged: 0/0
 11770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11771 ;;      Params:         0       0       0       0       0       0       0       0       0
 11772 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11773 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11774 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11775 ;;Total ram usage:        0 bytes
 11776 ;; Hardware stack levels used: 1
 11777 ;; Hardware stack levels required when called: 2
 11778 ;; This function calls:
 11779 ;;		i2_EnviaDato
 11780 ;;		i2_HabilitaLCD
 11781 ;;		i2_RetardoLCD
 11782 ;; This function is called by:
 11783 ;;		_ok
 11784 ;;		_borrarTexto
 11785 ;;		i2_parEmerg
 11786 ;;		i2_reiCon
 11787 ;;		i2_fin
 11788 ;;		i2_contador
 11789 ;; This function uses a non-reentrant model
 11790 ;;
 11791                           
 11792                           	psect	text68
 11793   002DD6                     __ptext68:
 11794                           	callstack 0
 11795   002DD6                     i2_BorraLCD:
 11796                           	callstack 20
 11797                           
 11798                           ;LibLCDXC9.h: 109: LATA4=0;
 11799                           
 11800                           ;incstack = 0
 11801   002DD6  9889               	bcf	3977,4,c	;volatile
 11802                           
 11803                           ;LibLCDXC9.h: 110: EnviaDato(0x01);
 11804   002DD8  0E01               	movlw	1
 11805   002DDA  ECB0  F014         	call	i2_EnviaDato
 11806                           
 11807                           ;LibLCDXC9.h: 111: HabilitaLCD();
 11808   002DDE  ECFC  F016         	call	i2_HabilitaLCD	;wreg free
 11809                           
 11810                           ;LibLCDXC9.h: 112: RetardoLCD(2);
 11811   002DE2  0E02               	movlw	2
 11812   002DE4  ECE9  F013         	call	i2_RetardoLCD
 11813   002DE8  0012               	return		;funcret
 11814   002DEA                     __end_ofi2_BorraLCD:
 11815                           	callstack 0
 11816                           
 11817 ;; *************** function _luzFondo *****************
 11818 ;; Defined at:
 11819 ;;		line 163 in file "Lab6.c"
 11820 ;; Parameters:    Size  Location     Type
 11821 ;;		None
 11822 ;; Auto vars:     Size  Location     Type
 11823 ;;		None
 11824 ;; Return value:  Size  Location     Type
 11825 ;;                  1    wreg      void 
 11826 ;; Registers used:
 11827 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11828 ;; Tracked objects:
 11829 ;;		On entry : 0/0
 11830 ;;		On exit  : 0/0
 11831 ;;		Unchanged: 0/0
 11832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11833 ;;      Params:         0       0       0       0       0       0       0       0       0
 11834 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11835 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11836 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11837 ;;Total ram usage:        0 bytes
 11838 ;; Hardware stack levels used: 1
 11839 ;; Hardware stack levels required when called: 1
 11840 ;; This function calls:
 11841 ;;		i2___wmul
 11842 ;; This function is called by:
 11843 ;;		_ISR
 11844 ;; This function uses a non-reentrant model
 11845 ;;
 11846                           
 11847                           	psect	text69
 11848   002BBC                     __ptext69:
 11849                           	callstack 0
 11850   002BBC                     _luzFondo:
 11851                           	callstack 22
 11852                           
 11853                           ;Lab6.c: 164: flagLuz*=-1;
 11854                           
 11855                           ;incstack = 0
 11856   002BBC  C045  F001         	movff	_flagLuz,i2___wmul@multiplier
 11857   002BC0  C046  F002         	movff	_flagLuz+1,i2___wmul@multiplier+1
 11858   002BC4  0EFF               	movlw	255
 11859   002BC6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 11860   002BC8  6803               	setf	i2___wmul@multiplicand^0,c
 11861   002BCA  EC76  F016         	call	i2___wmul	;wreg free
 11862   002BCE  C001  F045         	movff	?i2___wmul,_flagLuz
 11863   002BD2  C002  F046         	movff	?i2___wmul+1,_flagLuz+1
 11864                           
 11865                           ;Lab6.c: 165: if(flagLuz==1)LATA3=1;
 11866   002BD6  0445               	decf	_flagLuz^0,w,c
 11867   002BD8  1046               	iorwf	(_flagLuz+1)^0,w,c
 11868   002BDA  A4D8               	btfss	status,2,c
 11869   002BDC  D002               	goto	i2l5264
 11870   002BDE  8689               	bsf	3977,3,c	;volatile
 11871   002BE0  0012               	return	
 11872   002BE2                     i2l5264:
 11873                           
 11874                           ;Lab6.c: 166: else if(flagLuz==-1)LATA3=0;
 11875   002BE2  2845               	incf	_flagLuz^0,w,c
 11876   002BE4  E104               	bnz	i2l320
 11877   002BE6  2846               	incf	(_flagLuz+1)^0,w,c
 11878   002BE8  A4D8               	btfss	status,2,c
 11879   002BEA  0012               	return	
 11880   002BEC  9689               	bcf	3977,3,c	;volatile
 11881   002BEE                     i2l320:
 11882   002BEE  0012               	return		;funcret
 11883   002BF0                     __end_of_luzFondo:
 11884                           	callstack 0
 11885                           
 11886 ;; *************** function i2___wmul *****************
 11887 ;; Defined at:
 11888 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\Umul16.c"
 11889 ;; Parameters:    Size  Location     Type
 11890 ;;  multiplier      2    0[COMRAM] unsigned int 
 11891 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11892 ;; Auto vars:     Size  Location     Type
 11893 ;;  product         2    4[COMRAM] unsigned int 
 11894 ;; Return value:  Size  Location     Type
 11895 ;;                  2    0[COMRAM] unsigned int 
 11896 ;; Registers used:
 11897 ;;		wreg, status,2, status,0, prodl, prodh
 11898 ;; Tracked objects:
 11899 ;;		On entry : 0/0
 11900 ;;		On exit  : 0/0
 11901 ;;		Unchanged: 0/0
 11902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11903 ;;      Params:         4       0       0       0       0       0       0       0       0
 11904 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11905 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11906 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11907 ;;Total ram usage:        6 bytes
 11908 ;; Hardware stack levels used: 1
 11909 ;; This function calls:
 11910 ;;		Nothing
 11911 ;; This function is called by:
 11912 ;;		_luzFondo
 11913 ;; This function uses a non-reentrant model
 11914 ;;
 11915                           
 11916                           	psect	text70
 11917   002CEC                     __ptext70:
 11918                           	callstack 0
 11919   002CEC                     i2___wmul:
 11920                           	callstack 22
 11921                           
 11922                           ;incstack = 0
 11923   002CEC  5001               	movf	i2___wmul@multiplier^0,w,c
 11924   002CEE  0203               	mulwf	i2___wmul@multiplicand^0,c
 11925   002CF0  CFF3 F005          	movff	prodl,i2___wmul@product
 11926   002CF4  CFF4 F006          	movff	prodh,i2___wmul@product+1
 11927   002CF8  5001               	movf	i2___wmul@multiplier^0,w,c
 11928   002CFA  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 11929   002CFC  50F3               	movf	243,w,c
 11930   002CFE  2606               	addwf	(i2___wmul@product+1)^0,f,c
 11931   002D00  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 11932   002D02  0203               	mulwf	i2___wmul@multiplicand^0,c
 11933   002D04  50F3               	movf	243,w,c
 11934   002D06  2606               	addwf	(i2___wmul@product+1)^0,f,c
 11935   002D08  C005  F001         	movff	i2___wmul@product,?i2___wmul
 11936   002D0C  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 11937   002D10  0012               	return		;funcret
 11938   002D12                     __end_ofi2___wmul:
 11939                           	callstack 0
 11940                           
 11941 ;; *************** function _escribirDig *****************
 11942 ;; Defined at:
 11943 ;;		line 169 in file "Lab6.c"
 11944 ;; Parameters:    Size  Location     Type
 11945 ;;  lectura         1    wreg     unsigned char 
 11946 ;; Auto vars:     Size  Location     Type
 11947 ;;  lectura         1    5[COMRAM] unsigned char 
 11948 ;; Return value:  Size  Location     Type
 11949 ;;                  2  322[None  ] int 
 11950 ;; Registers used:
 11951 ;;		wreg, status,2, status,0, cstack
 11952 ;; Tracked objects:
 11953 ;;		On entry : 0/0
 11954 ;;		On exit  : 0/0
 11955 ;;		Unchanged: 0/0
 11956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11957 ;;      Params:         0       0       0       0       0       0       0       0       0
 11958 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11959 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11960 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11961 ;;Total ram usage:        1 bytes
 11962 ;; Hardware stack levels used: 1
 11963 ;; Hardware stack levels required when called: 3
 11964 ;; This function calls:
 11965 ;;		i2_EscribeLCD_c
 11966 ;; This function is called by:
 11967 ;;		_ISR
 11968 ;; This function uses a non-reentrant model
 11969 ;;
 11970                           
 11971                           	psect	text71
 11972   0028CC                     __ptext71:
 11973                           	callstack 0
 11974   0028CC                     _escribirDig:
 11975                           	callstack 20
 11976                           
 11977                           ;incstack = 0
 11978                           ;escribirDig@lectura stored from wreg
 11979   0028CC  6E06               	movwf	escribirDig@lectura^0,c
 11980                           
 11981                           ;Lab6.c: 170: if(flagEscribir == 1){
 11982   0028CE  043F               	decf	_flagEscribir^0,w,c
 11983   0028D0  1040               	iorwf	(_flagEscribir+1)^0,w,c
 11984   0028D2  A4D8               	btfss	status,2,c
 11985   0028D4  0012               	return	
 11986                           
 11987                           ;Lab6.c: 171: if(flagDig==0){
 11988   0028D6  503D               	movf	_flagDig^0,w,c
 11989   0028D8  103E               	iorwf	(_flagDig+1)^0,w,c
 11990   0028DA  A4D8               	btfss	status,2,c
 11991   0028DC  D00D               	goto	i2l5282
 11992                           
 11993                           ;Lab6.c: 172: d=lectura;
 11994   0028DE  C006  F0B6         	movff	escribirDig@lectura,_d
 11995   0028E2  0100               	movlb	0	; () banked
 11996   0028E4  6BB7               	clrf	(_d+1)& (0+255),b
 11997                           
 11998                           ; BSR set to: 0
 11999                           ;Lab6.c: 173: EscribeLCD_c(d+ '0');
 12000   0028E6  51B6               	movf	_d& (0+255),w,b
 12001   0028E8  0F30               	addlw	48
 12002   0028EA  ECD6  F016         	call	i2_EscribeLCD_c
 12003                           
 12004                           ;Lab6.c: 174: flagDig=1;
 12005   0028EE  0E00               	movlw	0
 12006   0028F0  6E3E               	movwf	(_flagDig+1)^0,c
 12007   0028F2  0E01               	movlw	1
 12008   0028F4  6E3D               	movwf	_flagDig^0,c
 12009   0028F6  0012               	return	
 12010   0028F8                     i2l5282:
 12011                           
 12012                           ;Lab6.c: 177: else if (flagDig==1){
 12013   0028F8  043D               	decf	_flagDig^0,w,c
 12014   0028FA  103E               	iorwf	(_flagDig+1)^0,w,c
 12015   0028FC  A4D8               	btfss	status,2,c
 12016   0028FE  0012               	return	
 12017                           
 12018                           ;Lab6.c: 178: u=lectura;
 12019   002900  C006  F0B8         	movff	escribirDig@lectura,_u
 12020   002904  0100               	movlb	0	; () banked
 12021   002906  6BB9               	clrf	(_u+1)& (0+255),b
 12022                           
 12023                           ; BSR set to: 0
 12024                           ;Lab6.c: 179: EscribeLCD_c(u+ '0');
 12025   002908  51B8               	movf	_u& (0+255),w,b
 12026   00290A  0F30               	addlw	48
 12027   00290C  ECD6  F016         	call	i2_EscribeLCD_c
 12028                           
 12029                           ;Lab6.c: 180: flagDig=2;
 12030   002910  0E00               	movlw	0
 12031   002912  6E3E               	movwf	(_flagDig+1)^0,c
 12032   002914  0E02               	movlw	2
 12033   002916  6E3D               	movwf	_flagDig^0,c
 12034   002918  0012               	return		;funcret
 12035   00291A                     __end_of_escribirDig:
 12036                           	callstack 0
 12037                           
 12038 ;; *************** function i2_EscribeLCD_c *****************
 12039 ;; Defined at:
 12040 ;;		line 131 in file "LibLCDXC9.h"
 12041 ;; Parameters:    Size  Location     Type
 12042 ;;  a               1    wreg     unsigned char 
 12043 ;; Auto vars:     Size  Location     Type
 12044 ;;  a               1    4[COMRAM] unsigned char 
 12045 ;; Return value:  Size  Location     Type
 12046 ;;                  1    wreg      void 
 12047 ;; Registers used:
 12048 ;;		wreg, status,2, status,0, cstack
 12049 ;; Tracked objects:
 12050 ;;		On entry : 0/0
 12051 ;;		On exit  : 0/0
 12052 ;;		Unchanged: 0/0
 12053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12054 ;;      Params:         0       0       0       0       0       0       0       0       0
 12055 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12056 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12057 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12058 ;;Total ram usage:        1 bytes
 12059 ;; Hardware stack levels used: 1
 12060 ;; Hardware stack levels required when called: 2
 12061 ;; This function calls:
 12062 ;;		i2_EnviaDato
 12063 ;;		i2_HabilitaLCD
 12064 ;;		i2_RetardoLCD
 12065 ;; This function is called by:
 12066 ;;		_escribirDig
 12067 ;;		i2_MensajeLCD_Var
 12068 ;; This function uses a non-reentrant model
 12069 ;;
 12070                           
 12071                           	psect	text72
 12072   002DAC                     __ptext72:
 12073                           	callstack 0
 12074   002DAC                     i2_EscribeLCD_c:
 12075                           	callstack 19
 12076                           
 12077                           ;incstack = 0
 12078                           ;i2EscribeLCD_c@a stored from wreg
 12079   002DAC  6E05               	movwf	i2EscribeLCD_c@a^0,c
 12080                           
 12081                           ;LibLCDXC9.h: 135: LATA4=1;
 12082   002DAE  8889               	bsf	3977,4,c	;volatile
 12083                           
 12084                           ;LibLCDXC9.h: 136: EnviaDato(a);
 12085   002DB0  5005               	movf	i2EscribeLCD_c@a^0,w,c
 12086   002DB2  ECB0  F014         	call	i2_EnviaDato
 12087                           
 12088                           ;LibLCDXC9.h: 137: HabilitaLCD();
 12089   002DB6  ECFC  F016         	call	i2_HabilitaLCD	;wreg free
 12090                           
 12091                           ;LibLCDXC9.h: 138: RetardoLCD(4);
 12092   002DBA  0E04               	movlw	4
 12093   002DBC  ECE9  F013         	call	i2_RetardoLCD
 12094   002DC0  0012               	return		;funcret
 12095   002DC2                     __end_ofi2_EscribeLCD_c:
 12096                           	callstack 0
 12097                           
 12098 ;; *************** function i2_EnviaDato *****************
 12099 ;; Defined at:
 12100 ;;		line 54 in file "LibLCDXC9.h"
 12101 ;; Parameters:    Size  Location     Type
 12102 ;;  a               1    wreg     unsigned char 
 12103 ;; Auto vars:     Size  Location     Type
 12104 ;;  a               1    3[COMRAM] unsigned char 
 12105 ;; Return value:  Size  Location     Type
 12106 ;;                  1    wreg      void 
 12107 ;; Registers used:
 12108 ;;		wreg, status,2, status,0, cstack
 12109 ;; Tracked objects:
 12110 ;;		On entry : 0/0
 12111 ;;		On exit  : 0/0
 12112 ;;		Unchanged: 0/0
 12113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12114 ;;      Params:         0       0       0       0       0       0       0       0       0
 12115 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12116 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12117 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12118 ;;Total ram usage:        2 bytes
 12119 ;; Hardware stack levels used: 1
 12120 ;; Hardware stack levels required when called: 1
 12121 ;; This function calls:
 12122 ;;		i2_HabilitaLCD
 12123 ;;		i2_RetardoLCD
 12124 ;; This function is called by:
 12125 ;;		i2_BorraLCD
 12126 ;;		i2_EscribeLCD_c
 12127 ;;		i2_EscribeLCD_n8
 12128 ;;		i2_DireccionaLCD
 12129 ;; This function uses a non-reentrant model
 12130 ;;
 12131                           
 12132                           	psect	text73
 12133   002960                     __ptext73:
 12134                           	callstack 0
 12135   002960                     i2_EnviaDato:
 12136                           	callstack 19
 12137                           
 12138                           ;incstack = 0
 12139                           ;i2EnviaDato@a stored from wreg
 12140   002960  6E04               	movwf	i2EnviaDato@a^0,c
 12141                           
 12142                           ;LibLCDXC9.h: 55: if(interfaz==4){
 12143   002962  0E04               	movlw	4
 12144   002964  1847               	xorwf	_interfaz^0,w,c
 12145   002966  A4D8               	btfss	status,2,c
 12146   002968  D017               	goto	i2l3574
 12147                           
 12148                           ;LibLCDXC9.h: 56: LATD=(LATD & 0b00001111) | (a & 0b11110000);
 12149   00296A  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
 12150   00296E  0EF0               	movlw	240
 12151   002970  1603               	andwf	??i2_EnviaDato^0,f,c
 12152   002972  508C               	movf	140,w,c	;volatile
 12153   002974  0B0F               	andlw	15
 12154   002976  1003               	iorwf	??i2_EnviaDato^0,w,c
 12155   002978  6E8C               	movwf	140,c	;volatile
 12156                           
 12157                           ;LibLCDXC9.h: 57: HabilitaLCD();
 12158   00297A  ECFC  F016         	call	i2_HabilitaLCD	;wreg free
 12159                           
 12160                           ;LibLCDXC9.h: 58: RetardoLCD(1);
 12161   00297E  0E01               	movlw	1
 12162   002980  ECE9  F013         	call	i2_RetardoLCD
 12163                           
 12164                           ;LibLCDXC9.h: 59: LATD=(LATD & 0b00001111) | (a<<4);
 12165   002984  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
 12166   002988  3A03               	swapf	??i2_EnviaDato^0,f,c
 12167   00298A  0EF0               	movlw	240
 12168   00298C  1603               	andwf	??i2_EnviaDato^0,f,c
 12169   00298E  508C               	movf	140,w,c	;volatile
 12170   002990  0B0F               	andlw	15
 12171   002992  1003               	iorwf	??i2_EnviaDato^0,w,c
 12172   002994  6E8C               	movwf	140,c	;volatile
 12173                           
 12174                           ;LibLCDXC9.h: 62: }else if(interfaz==8){
 12175   002996  0012               	return	
 12176   002998                     i2l3574:
 12177   002998  0E08               	movlw	8
 12178   00299A  1847               	xorwf	_interfaz^0,w,c
 12179   00299C  A4D8               	btfss	status,2,c
 12180   00299E  0012               	return	
 12181                           
 12182                           ;LibLCDXC9.h: 63: LATD=a;
 12183   0029A0  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
 12184   0029A4  0012               	return		;funcret
 12185   0029A6                     __end_ofi2_EnviaDato:
 12186                           	callstack 0
 12187                           
 12188 ;; *************** function i2_RetardoLCD *****************
 12189 ;; Defined at:
 12190 ;;		line 287 in file "LibLCDXC9.h"
 12191 ;; Parameters:    Size  Location     Type
 12192 ;;  a               1    wreg     unsigned char 
 12193 ;; Auto vars:     Size  Location     Type
 12194 ;;  a               1    1[COMRAM] unsigned char 
 12195 ;; Return value:  Size  Location     Type
 12196 ;;                  1    wreg      void 
 12197 ;; Registers used:
 12198 ;;		wreg, status,2, status,0
 12199 ;; Tracked objects:
 12200 ;;		On entry : 0/0
 12201 ;;		On exit  : 0/0
 12202 ;;		Unchanged: 0/0
 12203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12204 ;;      Params:         0       0       0       0       0       0       0       0       0
 12205 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12206 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12207 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12208 ;;Total ram usage:        2 bytes
 12209 ;; Hardware stack levels used: 1
 12210 ;; This function calls:
 12211 ;;		Nothing
 12212 ;; This function is called by:
 12213 ;;		i2_EnviaDato
 12214 ;;		i2_BorraLCD
 12215 ;;		i2_EscribeLCD_c
 12216 ;;		i2_EscribeLCD_n8
 12217 ;;		i2_DireccionaLCD
 12218 ;; This function uses a non-reentrant model
 12219 ;;
 12220                           
 12221                           	psect	text74
 12222   0027D2                     __ptext74:
 12223                           	callstack 0
 12224   0027D2                     i2_RetardoLCD:
 12225                           	callstack 20
 12226                           
 12227                           ;incstack = 0
 12228                           ;i2RetardoLCD@a stored from wreg
 12229   0027D2  6E02               	movwf	i2RetardoLCD@a^0,c
 12230                           
 12231                           ;LibLCDXC9.h: 288: switch(a){
 12232   0027D4  D01B               	goto	i2l3506
 12233   0027D6                     i2l3496:
 12234   0027D6  0E05               	movlw	5
 12235   0027D8  6E01               	movwf	??i2_RetardoLCD^0,c
 12236   0027DA  0EDE               	movlw	222
 12237   0027DC                     i2u679_47:
 12238   0027DC  2EE8               	decfsz	wreg,f,c
 12239   0027DE  D7FE               	bra	i2u679_47
 12240   0027E0  2E01               	decfsz	??i2_RetardoLCD^0,f,c
 12241   0027E2  D7FC               	bra	i2u679_47
 12242                           
 12243                           ;LibLCDXC9.h: 291: break;
 12244   0027E4  0012               	return	
 12245   0027E6                     i2l3498:
 12246   0027E6  0E53               	movlw	83
 12247   0027E8                     i2u680_47:
 12248   0027E8  2EE8               	decfsz	wreg,f,c
 12249   0027EA  D7FE               	bra	i2u680_47
 12250   0027EC  0000               	nop	
 12251                           
 12252                           ;LibLCDXC9.h: 293: _delay((unsigned long)((640)*(1000000/4000000.0)));
 12253   0027EE  0E35               	movlw	53
 12254   0027F0                     i2u681_47:
 12255   0027F0  2EE8               	decfsz	wreg,f,c
 12256   0027F2  D7FE               	bra	i2u681_47
 12257   0027F4  0000               	nop	
 12258                           
 12259                           ;LibLCDXC9.h: 295: break;
 12260   0027F6  0012               	return	
 12261   0027F8                     i2l3500:
 12262   0027F8  0E08               	movlw	8
 12263   0027FA                     i2u682_47:
 12264   0027FA  2EE8               	decfsz	wreg,f,c
 12265   0027FC  D7FE               	bra	i2u682_47
 12266   0027FE  0000               	nop	
 12267                           
 12268                           ;LibLCDXC9.h: 298: break;
 12269   002800  0012               	return	
 12270   002802                     i2l3502:
 12271   002802  0E03               	movlw	3
 12272   002804                     i2u683_47:
 12273   002804  2EE8               	decfsz	wreg,f,c
 12274   002806  D7FE               	bra	i2u683_47
 12275   002808  0000               	nop	
 12276                           
 12277                           ;LibLCDXC9.h: 301: break;
 12278   00280A  0012               	return	
 12279   00280C                     i2l3506:
 12280   00280C  5002               	movf	i2RetardoLCD@a^0,w,c
 12281                           
 12282                           ; Switch size 1, requested type "simple"
 12283                           ; Number of cases is 4, Range of values is 1 to 4
 12284                           ; switch strategies available:
 12285                           ; Name         Instructions Cycles
 12286                           ; simple_byte           13     7 (average)
 12287                           ;	Chosen strategy is simple_byte
 12288   00280E  0A01               	xorlw	1	; case 1
 12289   002810  B4D8               	btfsc	status,2,c
 12290   002812  D7E1               	goto	i2l3496
 12291   002814  0A03               	xorlw	3	; case 2
 12292   002816  B4D8               	btfsc	status,2,c
 12293   002818  D7E6               	goto	i2l3498
 12294   00281A  0A01               	xorlw	1	; case 3
 12295   00281C  B4D8               	btfsc	status,2,c
 12296   00281E  D7EC               	goto	i2l3500
 12297   002820  0A07               	xorlw	7	; case 4
 12298   002822  A4D8               	btfss	status,2,c
 12299   002824  0012               	return	
 12300   002826  D7ED               	goto	i2l3502
 12301   002828                     __end_ofi2_RetardoLCD:
 12302                           	callstack 0
 12303                           
 12304 ;; *************** function i2_HabilitaLCD *****************
 12305 ;; Defined at:
 12306 ;;		line 100 in file "LibLCDXC9.h"
 12307 ;; Parameters:    Size  Location     Type
 12308 ;;		None
 12309 ;; Auto vars:     Size  Location     Type
 12310 ;;		None
 12311 ;; Return value:  Size  Location     Type
 12312 ;;                  1    wreg      void 
 12313 ;; Registers used:
 12314 ;;		wreg
 12315 ;; Tracked objects:
 12316 ;;		On entry : 0/0
 12317 ;;		On exit  : 0/0
 12318 ;;		Unchanged: 0/0
 12319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12320 ;;      Params:         0       0       0       0       0       0       0       0       0
 12321 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12322 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12323 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12324 ;;Total ram usage:        0 bytes
 12325 ;; Hardware stack levels used: 1
 12326 ;; This function calls:
 12327 ;;		Nothing
 12328 ;; This function is called by:
 12329 ;;		i2_EnviaDato
 12330 ;;		i2_BorraLCD
 12331 ;;		i2_EscribeLCD_c
 12332 ;;		i2_EscribeLCD_n8
 12333 ;;		i2_DireccionaLCD
 12334 ;; This function uses a non-reentrant model
 12335 ;;
 12336                           
 12337                           	psect	text75
 12338   002DF8                     __ptext75:
 12339                           	callstack 0
 12340   002DF8                     i2_HabilitaLCD:
 12341                           	callstack 20
 12342                           
 12343                           ;LibLCDXC9.h: 102: LATA5=1;
 12344                           
 12345                           ;incstack = 0
 12346   002DF8  8A89               	bsf	3977,5,c	;volatile
 12347                           
 12348                           ;LibLCDXC9.h: 103: _delay((unsigned long)((40)*(1000000/4000000.0)));
 12349   002DFA  0E03               	movlw	3
 12350   002DFC                     i2u684_47:
 12351   002DFC  2EE8               	decfsz	wreg,f,c
 12352   002DFE  D7FE               	bra	i2u684_47
 12353   002E00  0000               	nop	
 12354                           
 12355                           ;LibLCDXC9.h: 105: LATA5=0;
 12356   002E02  9A89               	bcf	3977,5,c	;volatile
 12357   002E04  0012               	return		;funcret
 12358   002E06                     __end_ofi2_HabilitaLCD:
 12359                           	callstack 0
 12360                           
 12361                           	psect	rparam
 12362   000001                     ___rparam_used  equ	1
 12363   000000                     ___param_bank   equ	0
 12364   000000                     __Lparam        equ	__Lrparam
 12365   000000                     __Hparam        equ	__Hrparam
 12366                           
 12367                           	psect	temp
 12368   000048                     btemp:
 12369                           	callstack 0
 12370   000048                     	ds	1
 12371   000048                     int$flags       set	btemp
 12372   000049                     wtemp8          set	btemp+1
 12373   000049                     ttemp5          set	btemp+1
 12374   00004C                     ttemp6          set	btemp+4
 12375   000050                     ttemp7          set	btemp+8
 12376                           
 12377                           	psect	idloc
 12378                           
 12379                           ;Config register IDLOC0 @ 0x200000
 12380                           ;	unspecified, using default values
 12381   200000                     	org	2097152
 12382   200000  FF                 	db	255
 12383                           
 12384                           ;Config register IDLOC1 @ 0x200001
 12385                           ;	unspecified, using default values
 12386   200001                     	org	2097153
 12387   200001  FF                 	db	255
 12388                           
 12389                           ;Config register IDLOC2 @ 0x200002
 12390                           ;	unspecified, using default values
 12391   200002                     	org	2097154
 12392   200002  FF                 	db	255
 12393                           
 12394                           ;Config register IDLOC3 @ 0x200003
 12395                           ;	unspecified, using default values
 12396   200003                     	org	2097155
 12397   200003  FF                 	db	255
 12398                           
 12399                           ;Config register IDLOC4 @ 0x200004
 12400                           ;	unspecified, using default values
 12401   200004                     	org	2097156
 12402   200004  FF                 	db	255
 12403                           
 12404                           ;Config register IDLOC5 @ 0x200005
 12405                           ;	unspecified, using default values
 12406   200005                     	org	2097157
 12407   200005  FF                 	db	255
 12408                           
 12409                           ;Config register IDLOC6 @ 0x200006
 12410                           ;	unspecified, using default values
 12411   200006                     	org	2097158
 12412   200006  FF                 	db	255
 12413                           
 12414                           ;Config register IDLOC7 @ 0x200007
 12415                           ;	unspecified, using default values
 12416   200007                     	org	2097159
 12417   200007  FF                 	db	255
 12418                           
 12419                           	psect	config
 12420                           
 12421                           ;Config register CONFIG1L @ 0x300000
 12422                           ;	unspecified, using default values
 12423                           ;	PLL Prescaler Selection bits
 12424                           ;	PLLDIV = 0x0, unprogrammed default
 12425                           ;	System Clock Postscaler Selection bits
 12426                           ;	CPUDIV = 0x0, unprogrammed default
 12427                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 12428                           ;	USBDIV = 0x0, unprogrammed default
 12429   300000                     	org	3145728
 12430   300000  00                 	db	0
 12431                           
 12432                           ;Config register CONFIG1H @ 0x300001
 12433                           ;	Oscillator Selection bits
 12434                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
 12435                           ;	Fail-Safe Clock Monitor Enable bit
 12436                           ;	FCMEN = 0x0, unprogrammed default
 12437                           ;	Internal/External Oscillator Switchover bit
 12438                           ;	IESO = 0x0, unprogrammed default
 12439   300001                     	org	3145729
 12440   300001  09                 	db	9
 12441                           
 12442                           ;Config register CONFIG2L @ 0x300002
 12443                           ;	unspecified, using default values
 12444                           ;	Power-up Timer Enable bit
 12445                           ;	PWRT = 0x1, unprogrammed default
 12446                           ;	Brown-out Reset Enable bits
 12447                           ;	BOR = 0x3, unprogrammed default
 12448                           ;	Brown-out Reset Voltage bits
 12449                           ;	BORV = 0x3, unprogrammed default
 12450                           ;	USB Voltage Regulator Enable bit
 12451                           ;	VREGEN = 0x0, unprogrammed default
 12452   300002                     	org	3145730
 12453   300002  1F                 	db	31
 12454                           
 12455                           ;Config register CONFIG2H @ 0x300003
 12456                           ;	Watchdog Timer Enable bit
 12457                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 12458                           ;	Watchdog Timer Postscale Select bits
 12459                           ;	WDTPS = 0xF, unprogrammed default
 12460   300003                     	org	3145731
 12461   300003  1E                 	db	30
 12462                           
 12463                           ; Padding undefined space
 12464   300004                     	org	3145732
 12465   300004  FF                 	db	255
 12466                           
 12467                           ;Config register CONFIG3H @ 0x300005
 12468                           ;	CCP2 MUX bit
 12469                           ;	CCP2MX = 0x1, unprogrammed default
 12470                           ;	PORTB A/D Enable bit
 12471                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 12472                           ;	Low-Power Timer 1 Oscillator Enable bit
 12473                           ;	LPT1OSC = 0x0, unprogrammed default
 12474                           ;	MCLR Pin Enable bit
 12475                           ;	MCLRE = 0x1, unprogrammed default
 12476   300005                     	org	3145733
 12477   300005  81                 	db	129
 12478                           
 12479                           ;Config register CONFIG4L @ 0x300006
 12480                           ;	Stack Full/Underflow Reset Enable bit
 12481                           ;	STVREN = 0x1, unprogrammed default
 12482                           ;	Single-Supply ICSP Enable bit
 12483                           ;	LVP = OFF, Single-Supply ICSP disabled
 12484                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 12485                           ;	ICPRT = 0x0, unprogrammed default
 12486                           ;	Extended Instruction Set Enable bit
 12487                           ;	XINST = 0x0, unprogrammed default
 12488                           ;	Background Debugger Enable bit
 12489                           ;	DEBUG = 0x1, unprogrammed default
 12490   300006                     	org	3145734
 12491   300006  81                 	db	129
 12492                           
 12493                           ; Padding undefined space
 12494   300007                     	org	3145735
 12495   300007  FF                 	db	255
 12496                           
 12497                           ;Config register CONFIG5L @ 0x300008
 12498                           ;	unspecified, using default values
 12499                           ;	Code Protection bit
 12500                           ;	CP0 = 0x1, unprogrammed default
 12501                           ;	Code Protection bit
 12502                           ;	CP1 = 0x1, unprogrammed default
 12503                           ;	Code Protection bit
 12504                           ;	CP2 = 0x1, unprogrammed default
 12505                           ;	Code Protection bit
 12506                           ;	CP3 = 0x1, unprogrammed default
 12507   300008                     	org	3145736
 12508   300008  0F                 	db	15
 12509                           
 12510                           ;Config register CONFIG5H @ 0x300009
 12511                           ;	unspecified, using default values
 12512                           ;	Boot Block Code Protection bit
 12513                           ;	CPB = 0x1, unprogrammed default
 12514                           ;	Data EEPROM Code Protection bit
 12515                           ;	CPD = 0x1, unprogrammed default
 12516   300009                     	org	3145737
 12517   300009  C0                 	db	192
 12518                           
 12519                           ;Config register CONFIG6L @ 0x30000A
 12520                           ;	unspecified, using default values
 12521                           ;	Write Protection bit
 12522                           ;	WRT0 = 0x1, unprogrammed default
 12523                           ;	Write Protection bit
 12524                           ;	WRT1 = 0x1, unprogrammed default
 12525                           ;	Write Protection bit
 12526                           ;	WRT2 = 0x1, unprogrammed default
 12527                           ;	Write Protection bit
 12528                           ;	WRT3 = 0x1, unprogrammed default
 12529   30000A                     	org	3145738
 12530   30000A  0F                 	db	15
 12531                           
 12532                           ;Config register CONFIG6H @ 0x30000B
 12533                           ;	unspecified, using default values
 12534                           ;	Configuration Register Write Protection bit
 12535                           ;	WRTC = 0x1, unprogrammed default
 12536                           ;	Boot Block Write Protection bit
 12537                           ;	WRTB = 0x1, unprogrammed default
 12538                           ;	Data EEPROM Write Protection bit
 12539                           ;	WRTD = 0x1, unprogrammed default
 12540   30000B                     	org	3145739
 12541   30000B  E0                 	db	224
 12542                           
 12543                           ;Config register CONFIG7L @ 0x30000C
 12544                           ;	unspecified, using default values
 12545                           ;	Table Read Protection bit
 12546                           ;	EBTR0 = 0x1, unprogrammed default
 12547                           ;	Table Read Protection bit
 12548                           ;	EBTR1 = 0x1, unprogrammed default
 12549                           ;	Table Read Protection bit
 12550                           ;	EBTR2 = 0x1, unprogrammed default
 12551                           ;	Table Read Protection bit
 12552                           ;	EBTR3 = 0x1, unprogrammed default
 12553   30000C                     	org	3145740
 12554   30000C  0F                 	db	15
 12555                           
 12556                           ;Config register CONFIG7H @ 0x30000D
 12557                           ;	unspecified, using default values
 12558                           ;	Boot Block Table Read Protection bit
 12559                           ;	EBTRB = 0x1, unprogrammed default
 12560   30000D                     	org	3145741
 12561   30000D  40                 	db	64
 12562                           tosu	equ	0xFFF
 12563                           tosh	equ	0xFFE
 12564                           tosl	equ	0xFFD
 12565                           stkptr	equ	0xFFC
 12566                           pclatu	equ	0xFFB
 12567                           pclath	equ	0xFFA
 12568                           pcl	equ	0xFF9
 12569                           tblptru	equ	0xFF8
 12570                           tblptrh	equ	0xFF7
 12571                           tblptrl	equ	0xFF6
 12572                           tablat	equ	0xFF5
 12573                           prodh	equ	0xFF4
 12574                           prodl	equ	0xFF3
 12575                           indf0	equ	0xFEF
 12576                           postinc0	equ	0xFEE
 12577                           postdec0	equ	0xFED
 12578                           preinc0	equ	0xFEC
 12579                           plusw0	equ	0xFEB
 12580                           fsr0h	equ	0xFEA
 12581                           fsr0l	equ	0xFE9
 12582                           wreg	equ	0xFE8
 12583                           indf1	equ	0xFE7
 12584                           postinc1	equ	0xFE6
 12585                           postdec1	equ	0xFE5
 12586                           preinc1	equ	0xFE4
 12587                           plusw1	equ	0xFE3
 12588                           fsr1h	equ	0xFE2
 12589                           fsr1l	equ	0xFE1
 12590                           bsr	equ	0xFE0
 12591                           indf2	equ	0xFDF
 12592                           postinc2	equ	0xFDE
 12593                           postdec2	equ	0xFDD
 12594                           preinc2	equ	0xFDC
 12595                           plusw2	equ	0xFDB
 12596                           fsr2h	equ	0xFDA
 12597                           fsr2l	equ	0xFD9
 12598                           status	equ	0xFD8

Data Sizes:
    Strings     170
    Constant    118
    Data        3
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      71
    BANK0           160     80     100
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Var@a	PTR unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[12]), STR_10(CODE[11]), STR_11(CODE[14]), STR_12(CODE[12]), 
		 -> STR_13(CODE[9]), STR_14(CODE[11]), STR_2(CODE[18]), STR_3(CODE[9]), 
		 -> STR_4(CODE[11]), STR_5(CODE[15]), STR_6(CODE[18]), STR_7(CODE[18]), 
		 -> STR_8(CODE[11]), STR_9(CODE[9]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    printf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> printf@c(BANK0[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_15(CODE[23]), STR_16(CODE[20]), STR_17(CODE[25]), 


Critical Paths under _main in COMRAM

    _contador->_fin
    _fin->___awdiv
    _reiCon->_EscribeLCD_n8
    _EscribeLCD_n8->___lbdiv
    _DireccionaLCD->_EnviaDato
    _parEmerg->_MensajeLCD_Var
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _MedirDistancia->___lwdiv
    _InicializaLCD->_EnviaDato
    _CaracterQbert->_ComandoLCD
    _CaracterCara->_ComandoLCD
    _ComandoLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    _printf->_fround
    _scale->___ftmul
    ___awdiv->___awmod
    _fround->___ftmul
    ___lbdiv->___lbmod
    ___ftmul->___awdiv
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftmul
    ___ftadd->_fround

Critical Paths under _ISR in COMRAM

    _ISR->_ok
    i2_reiCon->i2_EscribeLCD_n8
    i2_parEmerg->i2_MensajeLCD_Var
    _ok->i2_contador
    i2_contador->i2_EscribeLCD_n8
    i2_fin->i2___awdiv
    i2_EscribeLCD_n8->i2___lbdiv
    i2___lbdiv->i2___lbmod
    i2_MedirDistancia->i2___lwdiv
    _borrarTexto->i2_MensajeLCD_Var
    i2_MensajeLCD_Var->i2_EscribeLCD_c
    i2_DireccionaLCD->i2_EnviaDato
    i2_BorraLCD->i2_EnviaDato
    _luzFondo->i2___wmul
    _escribirDig->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    _main->_ADC
    _ADC->_Transmitir
    _Transmitir->_printf
    _printf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   26867
                                             78 BANK0      2     2      0
                                _ADC
                           _BorraLCD
                       _CaracterCara
                      _CaracterQbert
                       _ConfiguraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                     _MedirDistancia
                     _MensajeLCD_Var
                     _RecibirComando
                           _contador
 ---------------------------------------------------------------------------------
 (1) _contador                                             1     1      0    4375
                                             39 COMRAM     1     1      0
                           _BorraLCD
                      _DireccionaLCD
                      _EscribeLCD_n8
                     _MensajeLCD_Var
                                _RGB
                                _SEG
                            ___awdiv
                            ___awmod
                                _fin
 ---------------------------------------------------------------------------------
 (2) _fin                                                  2     2      0    1527
                                             37 COMRAM     2     2      0
                           _BorraLCD
                      _DireccionaLCD
                     _MensajeLCD_Var
                                _RGB
                                _SEG
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _RecibirComando                                       1     1      0    2181
                                             36 COMRAM     1     1      0
                           _parEmerg
                             _reiCon
 ---------------------------------------------------------------------------------
 (2) _reiCon                                               0     0      0    1774
                           _BorraLCD
                      _DireccionaLCD
                      _EscribeLCD_n8
                     _MensajeLCD_Var
                                _RGB
                                _SEG
 ---------------------------------------------------------------------------------
 (3) _SEG                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RGB                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_n8                                        5     4      1    1227
                                             31 COMRAM     5     4      1
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) _DireccionaLCD                                        1     1      0     174
                                             27 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _parEmerg                                             0     0      0     373
                           _BorraLCD
                     _MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (3) _MensajeLCD_Var                                       2     0      2     228
                                             28 COMRAM     2     0      2
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (4) _EscribeLCD_c                                         1     1      0     174
                                             27 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _MedirDistancia                                       3     3      0     189
                                             30 COMRAM     3     3      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     164
                                             23 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     290
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      87
                                             23 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CaracterQbert                                        0     0      0     522
                         _ComandoLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _CaracterCara                                         0     0      0     522
                         _ComandoLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _ComandoLCD                                           1     1      0     377
                                             27 COMRAM     1     1      0
                           _BorraLCD
                      _CursorAInicio
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _CursorAInicio                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BorraLCD                                             0     0      0     145
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (5) _EnviaDato                                            2     2      0     116
                                             25 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (5) _RetardoLCD                                           2     2      0      29
                                             23 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  5     5      0   17980
                                             73 BANK0      5     5      0
                         _Transmitir
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6     820
                                             31 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3     524
                                             31 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           3     0      3   15241
                                             70 BANK0      3     0      3
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              39    34      5   15207
                                             34 BANK0     36    31      5
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                7     4      3    2878
                                              6 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     481
                                             23 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     499
                                             29 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      29
                                             23 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      82
                                             23 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              12     9      3    2009
                                             46 COMRAM     2     2      0
                                              6 BANK0     10     7      3
                            ___ftmul
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     275
                                             23 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     278
                                             27 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6     978
                                             37 COMRAM     9     3      6
                                              0 BANK0      6     6      0
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     305
                                             23 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     448
                                             23 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     163
                                             23 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4     493
                                             31 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     167
                                             36 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     168
                                             23 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     383
                                             13 BANK0     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    1727
                                             28 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    1625
                                             16 BANK0     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5     388
                                             23 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3      46
                                             23 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     142
                                             23 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  7     7      0    9168
                                             16 COMRAM     7     7      0
                        _borrarTexto
                        _escribirDig
                           _luzFondo
                                 _ok
                              i2_fin
                         i2_parEmerg
                           i2_reiCon
 ---------------------------------------------------------------------------------
 (8) i2_reiCon                                             0     0      0    1380
                         i2_BorraLCD
                    i2_DireccionaLCD
                    i2_EscribeLCD_n8
                   i2_MensajeLCD_Var
                              i2_RGB
                              i2_SEG
 ---------------------------------------------------------------------------------
 (8) i2_parEmerg                                           0     0      0     376
                         i2_BorraLCD
                   i2_MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (8) _ok                                                   2     2      0    5315
                                             14 COMRAM     2     2      0
                        _borrarTexto
                         i2_BorraLCD
                    i2_DireccionaLCD
                    i2_EscribeLCD_n8
                   i2_MedirDistancia
                   i2_MensajeLCD_Var
                              i2_RGB
                              i2_SEG
                         i2_contador
 ---------------------------------------------------------------------------------
 (9) i2_contador                                           1     1      0    3196
                                             13 COMRAM     1     1      0
                         i2_BorraLCD
                    i2_DireccionaLCD
                    i2_EscribeLCD_n8
                   i2_MensajeLCD_Var
                              i2_RGB
                              i2_SEG
                          i2___awdiv
                          i2___awmod
                              i2_fin
 ---------------------------------------------------------------------------------
 (8) i2_fin                                                2     2      0    1154
                                              8 COMRAM     2     2      0
                         i2_BorraLCD
                    i2_DireccionaLCD
                   i2_MensajeLCD_Var
                              i2_RGB
                              i2_SEG
                          i2___awdiv
                          i2___awmod
 ---------------------------------------------------------------------------------
 (9) i2___awmod                                            6     2      4     300
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) i2___awdiv                                            8     4      4     304
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (9) i2_SEG                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i2_RGB                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i2_EscribeLCD_n8                                      5     4      1     830
                                              8 COMRAM     5     4      1
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
                          i2___lbdiv
                          i2___lbmod
 ---------------------------------------------------------------------------------
 (10) i2___lbmod                                           4     3      1     172
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (10) i2___lbdiv                                           4     3      1     173
                                              4 COMRAM     4     3      1
                          i2___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (9) i2_MedirDistancia                                     3     3      0     189
                                              7 COMRAM     3     3      0
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (10) i2___lwdiv                                           7     3      4     164
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (9) _borrarTexto                                          0     0      0     550
                         i2_BorraLCD
                    i2_DireccionaLCD
                   i2_MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (9) i2_MensajeLCD_Var                                     2     0      2     231
                                              5 COMRAM     2     0      2
                     i2_EscribeLCD_c
 ---------------------------------------------------------------------------------
 (9) i2_DireccionaLCD                                      1     1      0     174
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (9) i2_BorraLCD                                           0     0      0     145
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) _luzFondo                                             0     0      0     161
                           i2___wmul
 ---------------------------------------------------------------------------------
 (9) i2___wmul                                             6     2      4     161
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _escribirDig                                          1     1      0     232
                                              5 COMRAM     1     1      0
                     i2_EscribeLCD_c
 ---------------------------------------------------------------------------------
 (10) i2_EscribeLCD_c                                      1     1      0     174
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (11) i2_EnviaDato                                         2     2      0     116
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (11) i2_RetardoLCD                                        2     2      0      29
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) i2_HabilitaLCD                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
     _Transmitir
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___ftmul
               ___awdiv (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
             ___lbdiv
             ___lbmod
         ___ftge
         ___ftmul
         ___ftneg
         ___ftsub
           ___ftadd
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
           _scale (ARG)
             ___awdiv
             ___awmod
             ___ftmul
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
         ___wmul
         __div_to_l_
         __tdiv_to_l_
         _fround
         _isdigit
         _putch
         _scale
     ___awtoft
       ___ftpack
     ___ftdiv
       ___ftpack
     ___ftmul
     ___fttol
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _CaracterCara
     _ComandoLCD
       _BorraLCD
       _CursorAInicio
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _CaracterQbert
     _ComandoLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _MedirDistancia
     ___lwdiv
   _MensajeLCD_Var
     _EscribeLCD_c
   _RecibirComando
     _parEmerg
       _BorraLCD
       _MensajeLCD_Var
     _reiCon
       _BorraLCD
       _DireccionaLCD
       _EscribeLCD_n8
         _EnviaDato
         _HabilitaLCD
         _RetardoLCD
         ___lbdiv
         ___lbmod
       _MensajeLCD_Var
       _RGB
       _SEG
   _contador
     _BorraLCD
     _DireccionaLCD
     _EscribeLCD_n8
     _MensajeLCD_Var
     _RGB
     _SEG
     ___awdiv
     ___awmod
     _fin
       _BorraLCD
       _DireccionaLCD
       _MensajeLCD_Var
       _RGB
       _SEG
       ___awdiv
       ___awmod

 _ISR (ROOT)
   _borrarTexto
     i2_BorraLCD
       i2_EnviaDato
         i2_HabilitaLCD
         i2_RetardoLCD
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_DireccionaLCD
       i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_MensajeLCD_Var
       i2_EscribeLCD_c
         i2_EnviaDato
         i2_HabilitaLCD
         i2_RetardoLCD
   _escribirDig
     i2_EscribeLCD_c
   _luzFondo
     i2___wmul
   _ok
     _borrarTexto
     i2_BorraLCD
     i2_DireccionaLCD
     i2_EscribeLCD_n8
       i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
       i2___lbdiv
         i2___lbmod (ARG)
       i2___lbmod
     i2_MedirDistancia
       i2___lwdiv
     i2_MensajeLCD_Var
     i2_RGB
     i2_SEG
     i2_contador
       i2_BorraLCD
       i2_DireccionaLCD
       i2_EscribeLCD_n8
       i2_MensajeLCD_Var
       i2_RGB
       i2_SEG
       i2___awdiv
       i2___awmod
       i2_fin
         i2_BorraLCD
         i2_DireccionaLCD
         i2_MensajeLCD_Var
         i2_RGB
         i2_SEG
         i2___awdiv
         i2___awmod
   i2_fin
   i2_parEmerg
     i2_BorraLCD
     i2_MensajeLCD_Var
   i2_reiCon
     i2_BorraLCD
     i2_DireccionaLCD
     i2_EscribeLCD_n8
     i2_MensajeLCD_Var
     i2_RGB
     i2_SEG

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160     80     100     62.5%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     48      71     75.5%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlll        33      0       0      0.0%
BITBIGSFRlh         31      0       0      0.0%
BITBIGSFRllh        11      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     171      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Mar 06 13:38:51 2025

                       _a 0037                         _b 0035                         _d 00B6  
                       _u 00B8          i2DireccionaLCD@a 0005          i2EscribeLCD_n8@a 000D  
        i2EscribeLCD_n8@b 0009              ___awdiv@sign 0023                EnviaDato@a 001B  
                      _ok 109C       ___wmul@multiplicand 001A        i2___lwdiv@dividend 0001  
            ?_borrarTexto 0001              ___ftadd@exp1 007B              ___ftadd@exp2 007A  
            ___ftadd@sign 0079                       ?_ok 0001             _InicializaLCD 20B0  
                     _ADC 19F2                       l432 1F94                       l352 1BAC  
                     l434 1F96                       l427 1F80                       l381 1A98  
                     l378 19FC                       l619 223E                       l396 1334  
                     l567 0522                       l940 0EB2                       l950 18DA  
                     l939 0E96                       l957 14D8                       l958 1500  
                     _GIE 7F97                       l989 2D28                       _RC0 7C10  
                     _RC1 7C11                       _RB4 7C0C                       _RB5 7C0D  
                     _RB6 7C0E                       _RB7 7C0F                       _PR2 0FCB  
                     _RGB 22D2                       _ISR 0008                       _SEG 2E12  
                     _dis 0042                       _fin 1D5E                       _pwm 00B0  
            ___awmod@sign 001D                       wreg 0FE8                      ??_ok 000F  
                    ?_ADC 0001                      ?_RGB 0001                      ?_ISR 0001  
                    ?_SEG 0001              ___ftdiv@cntr 0029          ??i2_EscribeLCD_c 0005  
            ___ftdiv@sign 002E              ?_escribirDig 0001                      l1105 2870  
                    l1034 264E                      l4010 16E8                      l4002 16B8  
                    l4022 1704                      l4032 171C                      l4050 21FC  
                    l4034 1728                      l4026 1714                      l4060 2230  
                    l5012 20C2                      l5022 20E0                      l4080 240A  
                    l4048 21F0                      l4152 2640                      l4144 260C  
                    l3520 27A2                      l5032 20FE                      ?_fin 0001  
                    l4146 2618                      l3522 27AC                      l6010 1810  
                    l4076 23E8                      l6100 0280                      l3516 2780  
                    l5052 2136                      l5212 1FD6                      l4420 2316  
                    l4412 22F4                      l4086 2436                      l6014 0018  
                    l3518 2790                      l3526 27B6                      l5214 2008  
                    l6120 0350                      l6104 02A6                      l6040 00BC  
                    l6032 0096                      l5208 1FA8                      l4424 2328  
                    l4416 2304                      l4408 22E4                      l6210 06D0  
                    l6130 03A8                      l6050 00EC                      l6026 0052  
                    l6034 00AC                      l6018 0028                      l6212 06D4  
                    l6204 06B8                      l6116 032A                      l6108 02E6  
                    l6052 00FE                      l6060 013A                      l4428 233A  
                    l6134 040C                      l6046 00DC                      l6038 00B8  
                    l6310 1876                      l4390 2C24                      l5600 1E90  
                    l6240 07D6                      l6232 0746                      l6224 070C  
                    l6160 04F0                      l6152 045C                      l6136 0410  
                    l6304 184E                      l6170 0526                      l6066 014E  
                    l6058 010C                      l6330 18B4                      l4394 2C38  
                    l6402 1294                      l3916 2D4A                      l3844 2E08  
                    l6236 075A                      l6180 058C                      l6164 04FE  
                    l6148 0448                      l6092 021A                      l6076 0188  
                    l3588 2952                      l6412 12C2                      l5630 0DD8  
                    l3926 1484                      l5710 15EA                      l6158 04E4  
                    l6406 12B6                      l5624 0DB0                      l5720 1612  
                    l5800 2574                      l6192 067A                      l6176 053A  
                    l6352 2B98                      l4760 2C10                      l3962 151A  
                    l5706 15DA                      l6186 0662                      l6194 0684  
                    l6370 1A68                      l4906 283E                      l6418 12D2  
                    l5652 0E2A                      l3972 1532                      l5716 1602  
                    l5804 2582                      l6188 066C                      l4756 2C00  
                    l4908 2846                      l5590 1E34                      l5654 0E34  
                    l3982 166A                      l3974 153E                      l3966 152A  
                    l5814 2AEE                      l5830 2B12                      l5750 218C  
                    l5742 216E                      l5902 0AC0                      l4918 2866  
                    l6390 1236                      l6382 11FE                      l5592 1E52  
                    l5664 0E68                      l5656 0E3E                      l5760 21AC  
                    l5736 215E                      l6296 2A16                      l5666 0E72  
                    l5826 2B0A                      l5818 2AF4                      l6394 1254  
                    l6386 1214                      l6378 11F8                      l6554 1000  
                    l5596 1E68                      l5588 1E2A                      l5676 0EE0  
                    l5916 2A40                      l5692 15A8                      l5748 2184  
                    l5764 21B6                      l5780 2530                      l5908 0B52  
                    l5598 1E86                      l5926 1CB6                      l5686 1580  
                    l5846 2C96                      l5838 2C7E                      l5870 0D20  
                    l5862 0C7A                      l5790 2552                      l6398 1276  
                    l5944 1D0C                      l5768 21C4                      l5784 253C  
                    l6568 1026                      l5962 1D4C                      l5954 1D24  
                    l5970 2732                      l5890 099E                      l5956 1D30  
                    l5948 1D1C                      l5796 256A                      l5788 254A  
                    l5884 090C                      l5894 09C2                      l5968 2726  
                    l5984 1766                      l5994 17AC                      l5978 1746  
                    STR_1 7FD4                      STR_2 7F99                      STR_3 7FF6  
                    STR_4 7FE0                      STR_5 7FAB                      STR_6 7F99  
                    STR_7 7F99                      STR_8 7FEB                      STR_9 7FF6  
                    _LATB 0F8A                      _LATD 0F8C                i2_contador 1BAE  
                    u3300 1472                      u3311 1494                      u3440 172E  
                    u3370 1544                      u3291 1468              printf@tmpval 0098  
                    u3460 2200                      u3620 261C                      u3380 1658  
                    u6100 02F6                      u4500 284A                      u5320 1E9A  
                    u6200 051C                      u6130 032A                      u6050 01C0  
                    u5420 0DCA                      u5351 0D70                      u6055 01B6  
                    _RBIE 7F93                      u5280 1E1C                      u5520 0E7A  
                    u6320 07E8                      _RBIF 7F90                      u5361 0D84  
                    u5450 0E08                      u6090 02B8                      u4660 2D64  
                    _RCIF 7CF5                      u5390 0DA2                      u5710 2556  
                    u6190 050C                      u4830 1F8A                      u6510 12BE  
                    u6351 1836                      u6600 101C                      u5561 1566  
                    u5490 0E46                      u5650 2190                      u6371 185E  
                    u4860 1F9E                      u5581 1590                      u5750 2AF8  
                    u5920 1D36                      u6617 0F0C                      u6707 2786  
                    u6627 0F6A                      u5861 1C9A                      u6717 2792  
                    u6637 0F86                      u5870 1CA4                      u6727 279A  
                    u6647 0FD4                      u5880 1CD4                      u6737 27A4  
                    u6657 1034                      u6747 27AE                      u6667 1052  
                    u5885 1CCC                      u6757 2DEE                      u6677 1072  
                    _RBPU 7F8F                      u5990 00D2                      u6687 108A  
                    u6697 1DD6                      _TMR1 0FCE                      _TMR2 0FCC  
                    _TRMT 7D61                i2_parEmerg 2AA4            ??_EscribeLCD_c 001C  
                    _main 0F06              ___ftpack@arg 0018              ___ftpack@exp 001B  
      i2___lwdiv@quotient 0005                      fsr2h 0FDA                      indf2 0FDF  
                    fsr2l 0FD9                      btemp 0048                      prodh 0FF4  
                    prodl 0FF3                      start 000E              ___ftmul@cntr 0064  
            ___param_bank 0000              ___ftmul@sign 0065                     ??_ADC 00A9  
                   ??_RGB 0018                     ??_ISR 0011                     ??_SEG 0018  
             contador@dis 0028              ___fttol@exp1 007B                     ??_fin 0026  
            ___fttol@lval 0077           i2_DireccionaLCD 2D96         ??i2_EscribeLCD_n8 000A  
          ?_InicializaLCD 0001                     ?_main 0001           __end_of___awdiv 21CE  
         __end_of___lbdiv 2B16           __end_of___ftadd 0F06                     STR_10 7FE0  
                   _CCPR2 0FBB                     STR_11 7FBA                     STR_12 7FC8  
                   STR_13 7FF6                     STR_14 7FE0                     STR_15 7F6E  
                   STR_16 7F85                     STR_17 7F55           __end_of___awmod 258C  
              _ComandoLCD 2BF0             EscribeLCD_c@a 001C           __end_of___lbmod 2C9E  
         __end_of___ftdiv 190C           __end_of___ftneg 2D36           __end_of___lldiv 2250  
         __end_of___ftmul 164C           ___awdiv@divisor 0020                     _T1CON 0FCD  
         __end_of___llmod 2660           __end_of___ftsub 2A6A           __end_of___fttol 1D5E  
                   _T2CON 0FCA                     _LATA1 7C49                     _LATA3 7C4B  
                   _LATA4 7C4C                     _LATC0 7C58                     _LATA5 7C4D  
                   _LATC2 7C5A                     _LATE0 7C68                     _LATE1 7C69  
                   _LATE2 7C6A           __end_of___lwdiv 287A                     i2l320 2BEE  
                   i2l432 2038                     i2l352 1C88                     i2l434 203A  
                   i2l427 2024                     i2l451 1382                     i2l461 13C0  
                   i2l453 138E                     i2l480 143C                     i2l473 140A  
                   i2l465 13DA                     i2l457 13A8                     i2l449 1376  
                   i2l474 1426                     i2l475 1416                     i2l467 13E6  
                   i2l459 13B4                     i2l477 1420                     i2l469 13F2  
         ___awdiv@counter 0022                     _RCREG 0FAE                     _RCSTA 0FAB  
                   i2_RGB 234C                     i2_SEG 2E18                     _SPBRG 0FAF  
                   _PORTB 0F81                     _TRISA 0F92                     _TRISB 0F93  
                   _TRISD 0F95                     _TXREG 0FAD                     i2_fin 1EBA  
                   _TXSTA 0FAC           ??_EscribeLCD_n8 0021              ___lltoft@exp 0028  
                   _Tecla 0044             ___awtoft@sign 0023           __end_of_dpowers 7F55  
             ?i2_BorraLCD 0001                     _scale 0804           __end_of_isdigit 2D52  
           ___ftpack@sign 001C                     _putch 2E06                     tablat 0FF5  
             _HabilitaLCD 2DEA          __end_ofi2___wmul 2D12                     ttemp5 0049  
                   ttemp6 004C                     ttemp7 0050                     status 0FD8  
                   wtemp8 0049             i2___lbmod@rem 0004           ___lbdiv@divisor 001C  
        __end_ofi2_reiCon 2720           ___lbdiv@counter 001E             Transmitir@pwm 00A6  
        __end_of_BorraLCD 2DD6           __initialization 29A6              __end_of_main 109C  
           _CursorAInicio 2E22          i2_MensajeLCD_Var 2C4C                    ??_main 00AE  
    __end_of_ConfiguraLCD 2D6A             ___fttol@sign1 0076              _CaracterCara 24AC  
           __activetblptr 0002                    ?i2_RGB 0001                    ?i2_SEG 0001  
                  ?i2_fin 0001                    _ADCON0 0FC2                    _ADCON1 0FC1  
                  _ADCON2 0FC0                    _CCP2IF 7D08          ___llmod@dividend 0025  
                  ?_scale 0066                    _ADRESH 0FC4                    _ADRESL 0FC3  
          DireccionaLCD@a 001C                    _CCPR1L 0FBE            EscribeLCD_n8@a 0024  
          EscribeLCD_n8@b 0020          ___awdiv@dividend 001E          __end_of___awtoft 2BBC  
                  ?_putch 0001          __end_of___ftpack 1EBA               ?i2_contador 0001  
        __end_of___lltoft 277C                    i2l1105 28C2                    i2l4210 23A2  
                  i2l4202 237E                    i2l3500 27F8                    i2l3502 2802  
                  i2l4310 2B2C                    i2l4214 23B4                    i2l4206 2390  
                  i2l4240 2288                    i2l3506 280C                    i2l4306 2B26  
                  i2l4322 2B4A                    i2l4330 2CA6                    i2l4242 2290  
                  i2l4234 2272                    i2l4180 2C62                    i2l4260 22C8  
                  i2l4252 22B0                    i2l4228 2262                    i2l4318 2B42  
                  i2l4176 2C4E                    i2l4256 22BA                    i2l4280 25B8  
                  i2l4272 259E                    i2l5320 1150                    i2l4338 2CBE  
                  i2l4194 235E                    i2l4282 25C0                    i2l5330 1184  
                  i2l4700 19DC                    i2l4292 25E2                    i2l4276 25AA  
                  i2l3574 2998                    i2l4198 236E                    i2l3496 27D6  
                  i2l5264 2BE2                    i2l4296 25F0                    i2l4288 25D8  
                  i2l3498 27E6                    i2l5282 28F8                    i2l5356 11E6  
                  i2l4734 2890                    i2l5550 13CA                    i2l4736 2898  
                  i2l4746 28B8                    i2l4674 1932                    i2l5562 13FC  
                  i2l5538 1398                    i2l4684 1978                    i2l4668 1912  
                  i2l4990 207A                    i2l4992 20AC                    i2l4986 204C  
             ?i2_parEmerg 0001                    _OSCCON 0FD3                    _TMR1IF 7CF0  
                  _TMR1ON 7E68                    _TMR2ON 7E52                    _TRISA0 7C90  
                  _TRISC0 7CA0                    _TRISC2 7CA2                    _TRISD0 7CA8  
                  _TRISE0 7CB0                    _TRISE1 7CB1                    _TRISE2 7CB2  
   __end_of_DireccionaLCD 2D80                _RetardoLCD 277C   __end_ofi2_DireccionaLCD 2DAC  
        __end_of__powers_ 7F06      EscribeLCD_n8@centena 0021            ?_CursorAInicio 0001  
                  _adcVal 00B3                    ___ftge 23C6          __end_of_contador 1BAE  
                  ___wmul 2CC6                 ??___awdiv 0022                 ??___lbdiv 001D  
               ??___ftadd 0076                 ??___awmod 001C                 ??___lbmod 0019  
               ??___ftdiv 0026                 ??___ftneg 001B                 ??___lldiv 0020  
               ??___ftmul 002C                 ??___llmod 002D                 ??___ftsub 0031  
        __end_of_parEmerg 2AA4                 ??___fttol 0071                 ??___lwdiv 001C  
         ??_InicializaLCD 001C                    _cuenta 0039         ?i2_MedirDistancia 0001  
                  _reiCon 2660                    _fround 0B76                    clear_0 29CA  
                  clear_1 29D6          ___awdiv@quotient 0024           ___awmod@divisor 001A  
                  isa$std 0001           ___awmod@counter 001C                    _printf 0012  
    __end_of_EscribeLCD_c 2D96        ??i2_MedirDistancia 0008               ?_ComandoLCD 0001  
          i2___awdiv@sign 0006     ___ftmul@f3_as_product 0061              ?i2_EnviaDato 0001  
        __end_of_luzFondo 2BF0              __pdataCOMRAM 0045                 ??_isdigit 0018  
       __end_ofi2___awdiv 22D2         __end_ofi2___lbdiv 2B4E         __end_ofi2___awmod 25FA  
       __end_ofi2___lbmod 2CC6         __end_ofi2___lwdiv 28CC              __mediumconst 7EDE  
                  tblptrh 0FF7                    tblptrl 0FF6                    tblptru 0FF8  
          i2___awmod@sign 0006                _Transmitir 29EA         MedirDistancia@aux 0021  
        ___lbdiv@dividend 001D          ??_MedirDistancia 001F           ___lbmod@divisor 0018  
   __end_ofi2_HabilitaLCD 2E06                __accesstop 0060   __end_of__initialization 29DC  
         ___lbmod@counter 001A                ___ftadd@f1 0070                ___ftadd@f2 0073  
              ___ftge@ff1 0018                ___ftge@ff2 001B             ___rparam_used 0001  
              ___ftdiv@f1 0020                ___ftdiv@f2 0023                ___ftdiv@f3 002A  
              ___ftneg@f1 0018             __end_ofi2_RGB 23C6             __end_ofi2_SEG 2E1E  
              ___awtoft@c 0020             __end_ofi2_fin 1F68                ___ftmul@f1 0026  
              ___ftmul@f2 0029                ___ftsub@f1 007C                ___ftsub@f2 007F  
              ___fttol@f1 006D            __pcstackCOMRAM 0001                ___lltoft@c 0020  
           __end_of_scale 0B76         __end_of_EnviaDato 2960             __end_of_putch 2E12  
        ___lbdiv@quotient 001F                __end_of_ok 11EE                 ?i2___wmul 0001  
              __div_to_l_ 164C                   ??i2_RGB 0001                   ??i2_SEG 0001  
                 ??i2_fin 0009                 ?i2_reiCon 0001                 ?_BorraLCD 0001  
         __div_to_l_@exp1 0023           __div_to_l_@cntr 0022                   ??_scale 002F  
         __div_to_l_@quot 001E            _MensajeLCD_Var 2C22                   ??_putch 0018  
              __pbssBANK0 00B0           MensajeLCD_Var@a 001D             _CaracterQbert 243A  
             ?_RetardoLCD 0001               RetardoLCD@a 0019             __div_to_l_@f1 0018  
           __div_to_l_@f2 001B           i2_EscribeLCD_n8 190C           ??_CursorAInicio 0018  
        ?i2_DireccionaLCD 0001                   ?___ftge 0018                _flagInicio 00C2  
              _flagObjeto 00BA                   ?___wmul 0018                   _CCP1CON 0FBD  
                 _CCP2CON 0FBA                   ?_reiCon 0001                   _BAUDCON 0FB8  
                 ?_fround 0066              _flagEscribir 003F                 ?___awtoft 0020  
               ?___ftpack 0018                   ?_printf 0082                 ?___lltoft 0020  
              ??i2___wmul 0005                ??i2_reiCon 000E    __end_of_MensajeLCD_Var 2C4C  
            ??i2_BorraLCD 0005            _flagEmergencia 003B        escribirDig@lectura 0006  
              ??_BorraLCD 001C               ?_Transmitir 00A6                 ?_contador 0001  
          ?_CaracterQbert 0001  __end_ofi2_MensajeLCD_Var 2C76                 ?_parEmerg 0001  
            ?_HabilitaLCD 0001              _ConfiguraLCD 2D52         __end_of__npowers_ 7F2D  
                 __Hparam 0000                _scale$1093 0069     i2EscribeLCD_n8@decena 000B  
                 __Lparam 0000                 ?_luzFondo 0001                   ___awdiv 214C  
                 ___lbdiv 2ADE                   ___ftadd 0D60                   ___awmod 251E  
                 ___lbmod 2C76                   ___ftdiv 1826                   ___ftneg 2D12  
                 ___lldiv 21CE                   ___ftmul 1556                   ___llmod 25FA  
                 ___ftsub 2A2A                   ___fttol 1C8A     i2EscribeLCD_n8@unidad 000C  
                 ___lwdiv 2828        __end_ofi2_BorraLCD 2DEA                   _flagADC 00BC  
                 __pcinit 29A6                ??___awtoft 0023                ??___ftpack 001D  
                 _flagDig 003D                   __ramtop 0800                   _flagFin 00C0  
                 _flagLuz 0045                ??___lltoft 0024                   __ptext0 0F06  
                 __ptext1 1AD2                   __ptext2 1D5E                   __ptext3 11EE  
                 __ptext4 2660                   __ptext5 2E12                   __ptext6 22D2  
                 __ptext7 1740                   __ptext8 2D6A                   __ptext9 2A6A  
                 _cuenObj 0033                   _cuenMos 0043               ?__div_to_l_ 0018  
                 _dpowers 7F2D                   _isdigit 2D36          ___awmod@dividend 0018  
         ?_MensajeLCD_Var 001D     __end_of_EscribeLCD_n8 1826            __pintcode_body 1338  
    end_of_initialization 29DC              ??i2_contador 000E                ??_contador 0028  
 __end_ofi2_EscribeLCD_n8 19F2              ??i2_parEmerg 0008                ??_parEmerg 001F  
           __Lmediumconst 7EDE                   int_func 1338       i2___wmul@multiplier 0001  
            _EscribeLCD_c 2D80           ___lldiv@divisor 001C           ___lldiv@counter 0024  
              ??_luzFondo 0007                   printf@c 00A5                   printf@f 0082  
                 postdec2 0FDD                   postinc0 0FEE                   postinc2 0FDE  
          __tdiv_to_l_@f1 0018            __tdiv_to_l_@f2 001B             ??__tdiv_to_l_ 001E  
            ??_ComandoLCD 001C        __end_ofi2_contador 1C8A        __end_ofi2_parEmerg 2ADE  
        ___lbmod@dividend 0019            _RecibirComando 11EE           ??_CaracterQbert 001D  
         i2EscribeLCD_c@a 0005                 i2___awdiv 2250                 i2___lbdiv 2B16  
               i2___awmod 258C                 i2___lbmod 2C9E         i2___lwdiv@divisor 0003  
               i2___lwdiv 287A         i2___lwdiv@counter 0007               ___lbmod@rem 001B  
             ___ftdiv@exp 002D             ?i2_RetardoLCD 0001        i2___awdiv@dividend 0001  
      __end_of_ComandoLCD 2C22               ___ftmul@exp 0060            __end_of___ftge 243A  
          __end_of___wmul 2CEC             __pidataCOMRAM 2E1E             ??_borrarTexto 0008  
   __end_of_InicializaLCD 214C            __end_of_reiCon 26C0            __end_of_fround 0D60  
        i2___wmul@product 0005                 _EnviaDato 291A            __end_of_printf 0804  
  __end_of_RecibirComando 1338       start_initialization 29A6               __end_of_ADC 1AD2  
      i2___awdiv@quotient 0007               __end_of_RGB 234C               __end_of_ISR 1458  
             __end_of_SEG 2E18       __end_of__tdiv_to_l_ 1556               __end_of_fin 1E0C  
              ?i2___awdiv 0001                ?i2___lbdiv 0005             ??_escribirDig 0006  
              ?i2___awmod 0001                ?i2___lbmod 0001                ?i2___lwdiv 0001  
        ?i2_EscribeLCD_n8 0009            ??i2_RetardoLCD 0001              ??_RetardoLCD 0018  
         ___llmod@divisor 0029           ___llmod@counter 002D        i2___lbdiv@dividend 0006  
     EscribeLCD_n8@decena 0022                  ??___ftge 001E                  ??___wmul 001C  
     EscribeLCD_n8@unidad 0023                  ??_reiCon 0025                  ??_fround 002F  
                ??_printf 0087                fround@prec 006F                ?_EnviaDato 0001  
         ?_RecibirComando 0001               __pbssCOMRAM 0031        __end_of_RetardoLCD 27D2  
           __pcstackBANK0 0060        i2___lbdiv@quotient 0008       __end_of_borrarTexto 2B86  
            ??_Transmitir 0031         ?i2_MensajeLCD_Var 0006        ??i2_MensajeLCD_Var 0008  
           _DireccionaLCD 2D6A       __end_of_escribirDig 291A            i2_EscribeLCD_c 2DAC  
        ___lwdiv@dividend 0018     __end_of_CursorAInicio 2E24                 __pintcode 0008  
                _ADC$1090 00AB             __pmediumconst 7EDE                  ?___awdiv 001E  
                ?___lbdiv 001C                  ?___ftadd 0070                  ?___awmod 0018  
                ?___lbmod 0018                  ?___ftdiv 0020                  ?___ftneg 0018  
                ?___lldiv 0018                  ?___ftmul 0026                  ?___llmod 0025  
                ?___ftsub 007C                 __npowers_ 7F06                  ?___fttol 006D  
                ?___lwdiv 0018             i2contador@dis 000E        __end_of_Transmitir 2A2A  
             __tdiv_to_l_ 1458          ??_MensajeLCD_Var 001F             ?_CaracterCara 0001  
            ??__div_to_l_ 001E                  ?_isdigit 0001          ___lwdiv@quotient 001C  
             ??i2___awdiv 0005               ??i2___lbdiv 0006               ??i2___awmod 0005  
             ??i2___lbmod 0002          i2_MedirDistancia 200C               ??i2___lwdiv 0005  
          ___wmul@product 001C             i2_HabilitaLCD 2DF8            ?_DireccionaLCD 0001  
  __end_ofi2_EscribeLCD_c 2DC2     RecibirComando@comando 0025                  i2u502_40 10DC  
                i2u503_40 10EA        __end_of__div_to_l_ 1740                  i2u437_40 289C  
                i2u462_40 2042                  i2u382_40 25C4                  i2u376_40 2294  
                i2u386_40 2B30                  i2u459_40 202E                  i2u680_47 27E8  
                i2u681_47 27F0                  i2u682_47 27FA                  i2u683_47 2804  
                i2u684_47 2DFC                  i2u676_47 1430                  i2u677_47 1172  
                i2u678_47 1F32                  i2u679_47 27DC            ??_CaracterCara 001D  
             _borrarTexto 2B4E                _ADCON0bits 0FC2         ___wmul@multiplier 0018  
           ??i2_EnviaDato 0003      __end_ofi2_RetardoLCD 2828                  i2___wmul 2CEC  
             ??_EnviaDato 001A                printf@flag 0094                printf@eexp 0096  
              printf@fval 00A0                printf@prec 00A3                  i2_reiCon 26C0  
       i2___awdiv@divisor 0003         i2___awdiv@counter 0005                  _BorraLCD 2DC2  
             _escribirDig 28CC        i2___awmod@dividend 0001            ?i2_HabilitaLCD 0001  
         ?i2_EscribeLCD_c 0001                  __Hrparam 0000         i2___lbdiv@divisor 0005  
  i2EscribeLCD_n8@centena 000A         i2___lbdiv@counter 0007                  __Lrparam 0000  
   i2___wmul@multiplicand 0003              i2EnviaDato@a 0004                  ___awtoft 2B86  
                ___ftpack 1E0C               _fround$1091 006C               _fround$1092 0069  
                ___lltoft 2720               _isdigit$854 0019             ConfiguraLCD@a 0018  
       ??i2_DireccionaLCD 0005           ___lwdiv@divisor 001A                  _flagCont 00BE  
         ___lwdiv@counter 001E                  __ptext10 2C22                  __ptext11 2D80  
                __ptext20 2DC2                  __ptext12 1F68                  __ptext21 291A  
                __ptext13 2828                  __ptext30 251E                  __ptext22 277C  
                __ptext14 20B0                  __ptext31 214C                  __ptext23 2DEA  
                __ptext15 2D52                  __ptext40 2CC6                  __ptext32 2E06  
                __ptext24 19F2                  __ptext16 243A                  __ptext41 2720  
                __ptext33 2D36                  __ptext25 1826                  __ptext17 24AC  
                __ptext42 25FA                  __ptext34 0B76                  __ptext26 2B86  
                __ptext18 2BF0                  __ptext51 26C0                  __ptext43 21CE  
                __ptext35 2C76                  __ptext27 29EA                  __ptext19 2E22  
                __ptext60 190C                  __ptext52 2AA4                  __ptext44 1C8A  
                __ptext36 2ADE                  __ptext28 0012                  __ptext61 2C9E  
                __ptext53 109C                  __ptext45 2A2A                  __ptext37 1556  
                __ptext29 0804                  __ptext70 2CEC                  __ptext62 2B16  
                __ptext54 1BAE                  __ptext46 0D60                  __ptext38 1458  
                __ptext71 28CC                  __ptext63 200C                  __ptext55 1EBA  
                __ptext47 1E0C                  __ptext39 164C                  __ptext72 2DAC  
                __ptext64 287A                  __ptext56 258C                  __ptext48 2D12  
                __ptext73 2960                  __ptext65 2B4E                  __ptext57 2250  
                __ptext49 23C6                  __ptext74 27D2                  __ptext66 2C4C  
                __ptext58 2E18                  __ptext75 2DF8                  __ptext67 2D96  
                __ptext59 234C                  __ptext68 2DD6                  __ptext69 2BBC  
                __powers_ 7EDF       __end_ofi2_EnviaDato 29A6                  _contador 1AD2  
   __end_of_CaracterQbert 24AC        i2___lbmod@dividend 0002           ??_DireccionaLCD 001C  
                _parEmerg 2A6A                  _etimeout 0041                  _interfaz 0047  
                _piezFalt 0031                  _luzFondo 2BBC                  isa$xinst 0000  
          _MedirDistancia 1F68                  int$flags 0048                 printf@len 0091  
               printf@val 009C          ??_RecibirComando 0025         i2___awmod@divisor 0003  
               putch@data 0018         i2___awmod@counter 0005                  isdigit@c 001A  
                scale@scl 006C             _EscribeLCD_n8 1740           ??i2_HabilitaLCD 0001  
                intlevel2 0000          __tdiv_to_l_@exp1 0026             ??_HabilitaLCD 0018  
        __tdiv_to_l_@cntr 0025          __tdiv_to_l_@quot 0021               ComandoLCD@a 001C  
        ___lldiv@dividend 0018             ?_ConfiguraLCD 0001      __end_of_CaracterCara 251E  
       i2___lbmod@divisor 0001         i2___lbmod@counter 0003             i2RetardoLCD@a 0002  
  __end_of_MedirDistancia 200C                  printf@ap 0093                  printf@cp 0090  
     i2MedirDistancia@aux 000A  __end_ofi2_MedirDistancia 20B0              ?__tdiv_to_l_ 0018  
             _printf$1094 008D               i2_EnviaDato 2960          ___lldiv@quotient 0020  
          ?_EscribeLCD_n8 0020                i2_BorraLCD 2DD6            ??_ConfiguraLCD 0018  
           ?_EscribeLCD_c 0001         i2MensajeLCD_Var@a 0006              i2_RetardoLCD 27D2  
         ?_MedirDistancia 0001       __end_of_HabilitaLCD 2DF8  
