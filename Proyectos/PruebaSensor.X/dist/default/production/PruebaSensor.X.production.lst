

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Mar 06 14:37:12 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    11                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19   000000                     
    20                           ; Generated 25/07/2024 GMT
    21                           ; 
    22                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4550 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000FE0                     bsr             equ	4064
    55   000FE9                     fsr0            equ	4073
    56   000FEA                     fsr0h           equ	4074
    57   000FE9                     fsr0l           equ	4073
    58   000FE1                     fsr1            equ	4065
    59   000FE2                     fsr1h           equ	4066
    60   000FE1                     fsr1l           equ	4065
    61   000FD9                     fsr2            equ	4057
    62   000FDA                     fsr2h           equ	4058
    63   000FD9                     fsr2l           equ	4057
    64   000FEF                     indf0           equ	4079
    65   000FE7                     indf1           equ	4071
    66   000FDF                     indf2           equ	4063
    67   000FF2                     intcon          equ	4082
    68   000000                     nvmcon          equ	0
    69   000FF9                     pcl             equ	4089
    70   000FFA                     pclath          equ	4090
    71   000FFB                     pclatu          equ	4091
    72   000FEB                     plusw0          equ	4075
    73   000FE3                     plusw1          equ	4067
    74   000FDB                     plusw2          equ	4059
    75   000FED                     postdec0        equ	4077
    76   000FE5                     postdec1        equ	4069
    77   000FDD                     postdec2        equ	4061
    78   000FEE                     postinc0        equ	4078
    79   000FE6                     postinc1        equ	4070
    80   000FDE                     postinc2        equ	4062
    81   000FEC                     preinc0         equ	4076
    82   000FE4                     preinc1         equ	4068
    83   000FDC                     preinc2         equ	4060
    84   000FF3                     prod            equ	4083
    85   000FF4                     prodh           equ	4084
    86   000FF3                     prodl           equ	4083
    87   000FD8                     status          equ	4056
    88   000FF5                     tablat          equ	4085
    89   000FF6                     tblptr          equ	4086
    90   000FF7                     tblptrh         equ	4087
    91   000FF6                     tblptrl         equ	4086
    92   000FF8                     tblptru         equ	4088
    93   000FFD                     tosl            equ	4093
    94   000FE8                     wreg            equ	4072
    95   000F62                     SPPDATA         equ	3938	;# 
    96   000F63                     SPPCFG          equ	3939	;# 
    97   000F64                     SPPEPS          equ	3940	;# 
    98   000F65                     SPPCON          equ	3941	;# 
    99   000F66                     UFRM            equ	3942	;# 
   100   000F66                     UFRML           equ	3942	;# 
   101   000F67                     UFRMH           equ	3943	;# 
   102   000F68                     UIR             equ	3944	;# 
   103   000F69                     UIE             equ	3945	;# 
   104   000F6A                     UEIR            equ	3946	;# 
   105   000F6B                     UEIE            equ	3947	;# 
   106   000F6C                     USTAT           equ	3948	;# 
   107   000F6D                     UCON            equ	3949	;# 
   108   000F6E                     UADDR           equ	3950	;# 
   109   000F6F                     UCFG            equ	3951	;# 
   110   000F70                     UEP0            equ	3952	;# 
   111   000F71                     UEP1            equ	3953	;# 
   112   000F72                     UEP2            equ	3954	;# 
   113   000F73                     UEP3            equ	3955	;# 
   114   000F74                     UEP4            equ	3956	;# 
   115   000F75                     UEP5            equ	3957	;# 
   116   000F76                     UEP6            equ	3958	;# 
   117   000F77                     UEP7            equ	3959	;# 
   118   000F78                     UEP8            equ	3960	;# 
   119   000F79                     UEP9            equ	3961	;# 
   120   000F7A                     UEP10           equ	3962	;# 
   121   000F7B                     UEP11           equ	3963	;# 
   122   000F7C                     UEP12           equ	3964	;# 
   123   000F7D                     UEP13           equ	3965	;# 
   124   000F7E                     UEP14           equ	3966	;# 
   125   000F7F                     UEP15           equ	3967	;# 
   126   000F80                     PORTA           equ	3968	;# 
   127   000F81                     PORTB           equ	3969	;# 
   128   000F82                     PORTC           equ	3970	;# 
   129   000F83                     PORTD           equ	3971	;# 
   130   000F84                     PORTE           equ	3972	;# 
   131   000F89                     LATA            equ	3977	;# 
   132   000F8A                     LATB            equ	3978	;# 
   133   000F8B                     LATC            equ	3979	;# 
   134   000F8C                     LATD            equ	3980	;# 
   135   000F8D                     LATE            equ	3981	;# 
   136   000F92                     TRISA           equ	3986	;# 
   137   000F92                     DDRA            equ	3986	;# 
   138   000F93                     TRISB           equ	3987	;# 
   139   000F93                     DDRB            equ	3987	;# 
   140   000F94                     TRISC           equ	3988	;# 
   141   000F94                     DDRC            equ	3988	;# 
   142   000F95                     TRISD           equ	3989	;# 
   143   000F95                     DDRD            equ	3989	;# 
   144   000F96                     TRISE           equ	3990	;# 
   145   000F96                     DDRE            equ	3990	;# 
   146   000F9B                     OSCTUNE         equ	3995	;# 
   147   000F9D                     PIE1            equ	3997	;# 
   148   000F9E                     PIR1            equ	3998	;# 
   149   000F9F                     IPR1            equ	3999	;# 
   150   000FA0                     PIE2            equ	4000	;# 
   151   000FA1                     PIR2            equ	4001	;# 
   152   000FA2                     IPR2            equ	4002	;# 
   153   000FA6                     EECON1          equ	4006	;# 
   154   000FA7                     EECON2          equ	4007	;# 
   155   000FA8                     EEDATA          equ	4008	;# 
   156   000FA9                     EEADR           equ	4009	;# 
   157   000FAB                     RCSTA           equ	4011	;# 
   158   000FAB                     RCSTA1          equ	4011	;# 
   159   000FAC                     TXSTA           equ	4012	;# 
   160   000FAC                     TXSTA1          equ	4012	;# 
   161   000FAD                     TXREG           equ	4013	;# 
   162   000FAD                     TXREG1          equ	4013	;# 
   163   000FAE                     RCREG           equ	4014	;# 
   164   000FAE                     RCREG1          equ	4014	;# 
   165   000FAF                     SPBRG           equ	4015	;# 
   166   000FAF                     SPBRG1          equ	4015	;# 
   167   000FB0                     SPBRGH          equ	4016	;# 
   168   000FB1                     T3CON           equ	4017	;# 
   169   000FB2                     TMR3            equ	4018	;# 
   170   000FB2                     TMR3L           equ	4018	;# 
   171   000FB3                     TMR3H           equ	4019	;# 
   172   000FB4                     CMCON           equ	4020	;# 
   173   000FB5                     CVRCON          equ	4021	;# 
   174   000FB6                     ECCP1AS         equ	4022	;# 
   175   000FB6                     CCP1AS          equ	4022	;# 
   176   000FB7                     ECCP1DEL        equ	4023	;# 
   177   000FB7                     CCP1DEL         equ	4023	;# 
   178   000FB8                     BAUDCON         equ	4024	;# 
   179   000FB8                     BAUDCTL         equ	4024	;# 
   180   000FBA                     CCP2CON         equ	4026	;# 
   181   000FBB                     CCPR2           equ	4027	;# 
   182   000FBB                     CCPR2L          equ	4027	;# 
   183   000FBC                     CCPR2H          equ	4028	;# 
   184   000FBD                     CCP1CON         equ	4029	;# 
   185   000FBD                     ECCP1CON        equ	4029	;# 
   186   000FBE                     CCPR1           equ	4030	;# 
   187   000FBE                     CCPR1L          equ	4030	;# 
   188   000FBF                     CCPR1H          equ	4031	;# 
   189   000FC0                     ADCON2          equ	4032	;# 
   190   000FC1                     ADCON1          equ	4033	;# 
   191   000FC2                     ADCON0          equ	4034	;# 
   192   000FC3                     ADRES           equ	4035	;# 
   193   000FC3                     ADRESL          equ	4035	;# 
   194   000FC4                     ADRESH          equ	4036	;# 
   195   000FC5                     SSPCON2         equ	4037	;# 
   196   000FC6                     SSPCON1         equ	4038	;# 
   197   000FC7                     SSPSTAT         equ	4039	;# 
   198   000FC8                     SSPADD          equ	4040	;# 
   199   000FC9                     SSPBUF          equ	4041	;# 
   200   000FCA                     T2CON           equ	4042	;# 
   201   000FCB                     PR2             equ	4043	;# 
   202   000FCB                     MEMCON          equ	4043	;# 
   203   000FCC                     TMR2            equ	4044	;# 
   204   000FCD                     T1CON           equ	4045	;# 
   205   000FCE                     TMR1            equ	4046	;# 
   206   000FCE                     TMR1L           equ	4046	;# 
   207   000FCF                     TMR1H           equ	4047	;# 
   208   000FD0                     RCON            equ	4048	;# 
   209   000FD1                     WDTCON          equ	4049	;# 
   210   000FD2                     HLVDCON         equ	4050	;# 
   211   000FD2                     LVDCON          equ	4050	;# 
   212   000FD3                     OSCCON          equ	4051	;# 
   213   000FD5                     T0CON           equ	4053	;# 
   214   000FD6                     TMR0            equ	4054	;# 
   215   000FD6                     TMR0L           equ	4054	;# 
   216   000FD7                     TMR0H           equ	4055	;# 
   217   000FD8                     STATUS          equ	4056	;# 
   218   000FD9                     FSR2            equ	4057	;# 
   219   000FD9                     FSR2L           equ	4057	;# 
   220   000FDA                     FSR2H           equ	4058	;# 
   221   000FDB                     PLUSW2          equ	4059	;# 
   222   000FDC                     PREINC2         equ	4060	;# 
   223   000FDD                     POSTDEC2        equ	4061	;# 
   224   000FDE                     POSTINC2        equ	4062	;# 
   225   000FDF                     INDF2           equ	4063	;# 
   226   000FE0                     BSR             equ	4064	;# 
   227   000FE1                     FSR1            equ	4065	;# 
   228   000FE1                     FSR1L           equ	4065	;# 
   229   000FE2                     FSR1H           equ	4066	;# 
   230   000FE3                     PLUSW1          equ	4067	;# 
   231   000FE4                     PREINC1         equ	4068	;# 
   232   000FE5                     POSTDEC1        equ	4069	;# 
   233   000FE6                     POSTINC1        equ	4070	;# 
   234   000FE7                     INDF1           equ	4071	;# 
   235   000FE8                     WREG            equ	4072	;# 
   236   000FE9                     FSR0            equ	4073	;# 
   237   000FE9                     FSR0L           equ	4073	;# 
   238   000FEA                     FSR0H           equ	4074	;# 
   239   000FEB                     PLUSW0          equ	4075	;# 
   240   000FEC                     PREINC0         equ	4076	;# 
   241   000FED                     POSTDEC0        equ	4077	;# 
   242   000FEE                     POSTINC0        equ	4078	;# 
   243   000FEF                     INDF0           equ	4079	;# 
   244   000FF0                     INTCON3         equ	4080	;# 
   245   000FF1                     INTCON2         equ	4081	;# 
   246   000FF2                     INTCON          equ	4082	;# 
   247   000FF3                     PROD            equ	4083	;# 
   248   000FF3                     PRODL           equ	4083	;# 
   249   000FF4                     PRODH           equ	4084	;# 
   250   000FF5                     TABLAT          equ	4085	;# 
   251   000FF6                     TBLPTR          equ	4086	;# 
   252   000FF6                     TBLPTRL         equ	4086	;# 
   253   000FF7                     TBLPTRH         equ	4087	;# 
   254   000FF8                     TBLPTRU         equ	4088	;# 
   255   000FF9                     PCLAT           equ	4089	;# 
   256   000FF9                     PC              equ	4089	;# 
   257   000FF9                     PCL             equ	4089	;# 
   258   000FFA                     PCLATH          equ	4090	;# 
   259   000FFB                     PCLATU          equ	4091	;# 
   260   000FFC                     STKPTR          equ	4092	;# 
   261   000FFD                     TOS             equ	4093	;# 
   262   000FFD                     TOSL            equ	4093	;# 
   263   000FFE                     TOSH            equ	4094	;# 
   264   000FFF                     TOSU            equ	4095	;# 
   265   007C67                     _LATD7          set	31847
   266   007CF0                     _TMR1IF         set	31984
   267   007E68                     _TMR1ON         set	32360
   268   007C11                     _RC1            set	31761
   269   007C10                     _RC0            set	31760
   270   007D08                     _CCP2IF         set	32008
   271   007EAF                     _TMR0ON         set	32431
   272   007F97                     _GIE            set	32663
   273   007F95                     _TMR0IE         set	32661
   274   007F92                     _TMR0IF         set	32658
   275   007C58                     _LATC0          set	31832
   276   007CA0                     _TRISC0         set	31904
   277   000FBB                     _CCPR2          set	4027
   278   000FCE                     _TMR1           set	4046
   279   000FD6                     _TMR0           set	4054
   280   000FBA                     _CCP2CON        set	4026
   281   000FCD                     _T1CON          set	4045
   282   000FD5                     _T0CON          set	4053
   283   000FAF                     _SPBRG          set	4015
   284   000FB8                     _BAUDCON        set	4024
   285   000FAB                     _RCSTA          set	4011
   286   000FAC                     _TXSTA          set	4012
   287   000F8C                     _LATD           set	3980
   288   000F95                     _TRISD          set	3989
   289                           
   290                           ; #config settings
   291                           
   292                           	psect	cinit
   293   00093E                     __pcinit:
   294                           	callstack 0
   295   00093E                     start_initialization:
   296                           	callstack 0
   297   00093E                     __initialization:
   298                           	callstack 0
   299                           
   300                           ; Clear objects allocated to COMRAM (2 bytes)
   301   00093E  6A0C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   302   000940  6A0B               	clrf	__pbssCOMRAM& (0+255),c
   303   000942                     end_of_initialization:
   304                           	callstack 0
   305   000942                     __end_of__initialization:
   306                           	callstack 0
   307   000942  900D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   308   000944  920D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   309   000946  0100               	movlb	0
   310   000948  EF62  F004         	goto	_main	;jump to C main() function
   311                           
   312                           	psect	bssCOMRAM
   313   00000B                     __pbssCOMRAM:
   314                           	callstack 0
   315   00000B                     _ctimeout:
   316                           	callstack 0
   317   00000B                     	ds	1
   318   00000C                     _etimeout:
   319                           	callstack 0
   320   00000C                     	ds	1
   321                           
   322                           	psect	cstackCOMRAM
   323   000001                     __pcstackCOMRAM:
   324                           	callstack 0
   325   000001                     ?___lwdiv:
   326                           	callstack 0
   327   000001                     ___lwdiv@dividend:
   328                           	callstack 0
   329   000001                     
   330                           ; 1 bytes @ 0x0
   331   000001                     	ds	2
   332   000003                     ___lwdiv@divisor:
   333                           	callstack 0
   334                           
   335                           ; 2 bytes @ 0x2
   336   000003                     	ds	2
   337   000005                     ___lwdiv@quotient:
   338                           	callstack 0
   339   000005                     
   340                           ; 1 bytes @ 0x4
   341   000005                     	ds	2
   342   000007                     ___lwdiv@counter:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0x6
   346   000007                     	ds	1
   347   000008                     MedirDistancia@aux:
   348                           	callstack 0
   349   000008                     
   350                           ; 1 bytes @ 0x7
   351   000008                     	ds	1
   352   000009                     ??_main:
   353                           
   354                           ; 1 bytes @ 0x8
   355   000009                     	ds	1
   356   00000A                     main@d:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0x9
   360   00000A                     	ds	1
   361                           
   362 ;;
   363 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   364 ;;
   365 ;; *************** function _main *****************
   366 ;; Defined at:
   367 ;;		line 15 in file "PruebaSensor.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;		None
   370 ;; Auto vars:     Size  Location     Type
   371 ;;  d               1    9[COMRAM] unsigned char 
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		wreg, status,2, status,0, cstack
   376 ;; Tracked objects:
   377 ;;		On entry : 0/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   381 ;;      Params:         0       0       0       0       0       0       0       0       0
   382 ;;      Locals:         1       0       0       0       0       0       0       0       0
   383 ;;      Temps:          1       0       0       0       0       0       0       0       0
   384 ;;      Totals:         2       0       0       0       0       0       0       0       0
   385 ;;Total ram usage:        2 bytes
   386 ;; Hardware stack levels required when called: 3
   387 ;; This function calls:
   388 ;;		_MedirDistancia
   389 ;; This function is called by:
   390 ;;		Startup code after reset
   391 ;; This function uses a non-reentrant model
   392 ;;
   393                           
   394                           	psect	text0
   395   0008C4                     __ptext0:
   396                           	callstack 0
   397   0008C4                     _main:
   398                           	callstack 28
   399                           
   400                           ;PruebaSensor.c: 17: unsigned char d;;PruebaSensor.c: 20: TRISC0=0;
   401                           
   402                           ;incstack = 0
   403   0008C4  9094               	bcf	3988,0,c	;volatile
   404                           
   405                           ;PruebaSensor.c: 21: TRISD=0;
   406   0008C6  6A95               	clrf	149,c	;volatile
   407                           
   408                           ;PruebaSensor.c: 22: LATC0=0;
   409   0008C8  908B               	bcf	3979,0,c	;volatile
   410                           
   411                           ;PruebaSensor.c: 23: LATD=0;
   412   0008CA  6A8C               	clrf	140,c	;volatile
   413                           
   414                           ;PruebaSensor.c: 24: TXSTA=0b00100100;
   415   0008CC  0E24               	movlw	36
   416   0008CE  6EAC               	movwf	172,c	;volatile
   417                           
   418                           ;PruebaSensor.c: 25: RCSTA=0b10000000;
   419   0008D0  0E80               	movlw	128
   420   0008D2  6EAB               	movwf	171,c	;volatile
   421                           
   422                           ;PruebaSensor.c: 26: BAUDCON=0b00001000;
   423   0008D4  0E08               	movlw	8
   424   0008D6  6EB8               	movwf	184,c	;volatile
   425                           
   426                           ;PruebaSensor.c: 27: SPBRG=25;
   427   0008D8  0E19               	movlw	25
   428   0008DA  6EAF               	movwf	175,c	;volatile
   429                           
   430                           ;PruebaSensor.c: 28: TMR0=3036;
   431   0008DC  0E0B               	movlw	11
   432   0008DE  6ED7               	movwf	215,c	;volatile
   433   0008E0  0EDC               	movlw	220
   434   0008E2  6ED6               	movwf	214,c	;volatile
   435                           
   436                           ;PruebaSensor.c: 29: T0CON=0b00001000;
   437   0008E4  0E08               	movlw	8
   438   0008E6  6ED5               	movwf	213,c	;volatile
   439                           
   440                           ;PruebaSensor.c: 30: T1CON=0b10000000;
   441   0008E8  0E80               	movlw	128
   442   0008EA  6ECD               	movwf	205,c	;volatile
   443                           
   444                           ;PruebaSensor.c: 31: TMR0IF=0;
   445   0008EC  94F2               	bcf	4082,2,c	;volatile
   446                           
   447                           ;PruebaSensor.c: 32: TMR0IE=1;
   448   0008EE  8AF2               	bsf	4082,5,c	;volatile
   449                           
   450                           ;PruebaSensor.c: 33: GIE=1;
   451   0008F0  8EF2               	bsf	4082,7,c	;volatile
   452                           
   453                           ;PruebaSensor.c: 34: TMR0ON=1;
   454   0008F2  8ED5               	bsf	4053,7,c	;volatile
   455   0008F4                     l1012:
   456                           
   457                           ;PruebaSensor.c: 37: d=MedirDistancia();
   458   0008F4  EC01  F004         	call	_MedirDistancia	;wreg free
   459   0008F8  6E0A               	movwf	main@d^0,c
   460                           
   461                           ;PruebaSensor.c: 38: LATD = d;
   462   0008FA  C00A  FF8C         	movff	main@d,3980	;volatile
   463                           
   464                           ;PruebaSensor.c: 39: _delay((unsigned long)((500)*(1000000/4000.0)));
   465   0008FE  0EA3               	movlw	163
   466   000900  6E09               	movwf	??_main^0,c
   467   000902  0E55               	movlw	85
   468   000904                     u257:
   469   000904  2EE8               	decfsz	wreg,f,c
   470   000906  D7FE               	bra	u257
   471   000908  2E09               	decfsz	??_main^0,f,c
   472   00090A  D7FC               	bra	u257
   473   00090C  0000               	nop	
   474   00090E  D7F2               	goto	l1012
   475   000910                     __end_of_main:
   476                           	callstack 0
   477                           
   478 ;; *************** function _MedirDistancia *****************
   479 ;; Defined at:
   480 ;;		line 67 in file "PruebaSensor.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;  aux             1    7[COMRAM] unsigned char 
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      unsigned char 
   487 ;; Registers used:
   488 ;;		wreg, status,2, status,0, cstack
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   494 ;;      Params:         0       0       0       0       0       0       0       0       0
   495 ;;      Locals:         1       0       0       0       0       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0       0       0       0       0
   497 ;;      Totals:         1       0       0       0       0       0       0       0       0
   498 ;;Total ram usage:        1 bytes
   499 ;; Hardware stack levels used: 1
   500 ;; Hardware stack levels required when called: 2
   501 ;; This function calls:
   502 ;;		___lwdiv
   503 ;; This function is called by:
   504 ;;		_main
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           	psect	text1
   509   000802                     __ptext1:
   510                           	callstack 0
   511   000802                     _MedirDistancia:
   512                           	callstack 28
   513                           
   514                           ;PruebaSensor.c: 69: CCP2CON=0b00000100;
   515                           
   516                           ;incstack = 0
   517   000802  0E04               	movlw	4
   518   000804  6EBA               	movwf	186,c	;volatile
   519                           
   520                           ;PruebaSensor.c: 70: TMR1=0;
   521   000806  0E00               	movlw	0
   522   000808  6ECF               	movwf	207,c	;volatile
   523   00080A  0E00               	movlw	0
   524   00080C  6ECE               	movwf	206,c	;volatile
   525                           
   526                           ;PruebaSensor.c: 71: CCP2IF=0;
   527   00080E  90A1               	bcf	4001,0,c	;volatile
   528                           
   529                           ;PruebaSensor.c: 72: RC0=1;
   530   000810  8082               	bsf	3970,0,c	;volatile
   531                           
   532                           ;PruebaSensor.c: 73: _delay((unsigned long)((10)*(1000000/4000000.0)));
   533   000812  D000               	nop2		;2 cycle nop
   534                           
   535                           ;PruebaSensor.c: 74: RC0=0;
   536   000814  9082               	bcf	3970,0,c	;volatile
   537                           
   538                           ;PruebaSensor.c: 75: etimeout=1;
   539   000816  0E01               	movlw	1
   540   000818  6E0C               	movwf	_etimeout^0,c
   541   00081A                     l74:
   542   00081A  B282               	btfsc	3970,1,c	;volatile
   543   00081C  D003               	goto	u190
   544   00081E  040C               	decf	_etimeout^0,w,c
   545   000820  B4D8               	btfsc	status,2,c
   546   000822  D7FB               	goto	l74
   547   000824                     u190:
   548                           
   549                           ;PruebaSensor.c: 78: if(etimeout==0){
   550   000824  500C               	movf	_etimeout^0,w,c
   551   000826  A4D8               	btfss	status,2,c
   552   000828  D002               	goto	l79
   553                           
   554                           ;PruebaSensor.c: 79: return 0;
   555   00082A  0E00               	movlw	0
   556   00082C  0012               	return	
   557   00082E                     l79:
   558                           
   559                           ;PruebaSensor.c: 80: };PruebaSensor.c: 81: TMR1ON=1;
   560   00082E  80CD               	bsf	4045,0,c	;volatile
   561   000830                     l81:
   562   000830  B0A1               	btfsc	4001,0,c	;volatile
   563   000832  D002               	goto	u220
   564   000834  A09E               	btfss	3998,0,c	;volatile
   565   000836  D7FC               	goto	l81
   566   000838                     u220:
   567                           
   568                           ;PruebaSensor.c: 83: TMR1ON=0;
   569   000838  90CD               	bcf	4045,0,c	;volatile
   570                           
   571                           ;PruebaSensor.c: 84: if(TMR1IF==1)
   572   00083A  A09E               	btfss	3998,0,c	;volatile
   573   00083C  D002               	goto	l990
   574                           
   575                           ;PruebaSensor.c: 85: aux=255;
   576   00083E  6808               	setf	MedirDistancia@aux^0,c
   577   000840  D016               	goto	l996
   578   000842                     l990:
   579                           
   580                           ;PruebaSensor.c: 86: else{;PruebaSensor.c: 87: if(CCPR2>=3556)
   581   000842  0EE4               	movlw	228
   582   000844  5CBB               	subwf	187,w,c	;volatile
   583   000846  0E0D               	movlw	13
   584   000848  58BC               	subwfb	188,w,c	;volatile
   585   00084A  A0D8               	btfss	status,0,c
   586   00084C  D004               	goto	l994
   587                           
   588                           ;PruebaSensor.c: 88: CCPR2=3556;
   589   00084E  0E0D               	movlw	13
   590   000850  6EBC               	movwf	188,c	;volatile
   591   000852  0EE4               	movlw	228
   592   000854  6EBB               	movwf	187,c	;volatile
   593   000856                     l994:
   594                           
   595                           ;PruebaSensor.c: 89: aux=CCPR2/(14) ;
   596   000856  CFBB F001          	movff	4027,___lwdiv@dividend	;volatile
   597   00085A  CFBC F002          	movff	4028,___lwdiv@dividend+1	;volatile
   598   00085E  0E00               	movlw	0
   599   000860  6E04               	movwf	(___lwdiv@divisor+1)^0,c
   600   000862  0E0E               	movlw	14
   601   000864  6E03               	movwf	___lwdiv@divisor^0,c
   602   000866  EC39  F004         	call	___lwdiv	;wreg free
   603   00086A  5001               	movf	?___lwdiv^0,w,c
   604   00086C  6E08               	movwf	MedirDistancia@aux^0,c
   605   00086E                     l996:
   606                           
   607                           ;PruebaSensor.c: 90: };PruebaSensor.c: 92: return aux;
   608   00086E  5008               	movf	MedirDistancia@aux^0,w,c
   609   000870  0012               	return		;funcret
   610   000872                     __end_of_MedirDistancia:
   611                           	callstack 0
   612                           
   613 ;; *************** function ___lwdiv *****************
   614 ;; Defined at:
   615 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lwdiv.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;  dividend        2    0[COMRAM] unsigned int 
   618 ;;  divisor         2    2[COMRAM] unsigned int 
   619 ;; Auto vars:     Size  Location     Type
   620 ;;  quotient        2    4[COMRAM] unsigned int 
   621 ;;  counter         1    6[COMRAM] unsigned char 
   622 ;; Return value:  Size  Location     Type
   623 ;;                  2    0[COMRAM] unsigned int 
   624 ;; Registers used:
   625 ;;		wreg, status,2, status,0
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   631 ;;      Params:         4       0       0       0       0       0       0       0       0
   632 ;;      Locals:         3       0       0       0       0       0       0       0       0
   633 ;;      Temps:          0       0       0       0       0       0       0       0       0
   634 ;;      Totals:         7       0       0       0       0       0       0       0       0
   635 ;;Total ram usage:        7 bytes
   636 ;; Hardware stack levels used: 1
   637 ;; Hardware stack levels required when called: 1
   638 ;; This function calls:
   639 ;;		Nothing
   640 ;; This function is called by:
   641 ;;		_MedirDistancia
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           	psect	text2
   646   000872                     __ptext2:
   647                           	callstack 0
   648   000872                     ___lwdiv:
   649                           	callstack 28
   650                           
   651                           ;incstack = 0
   652   000872  0E00               	movlw	0
   653   000874  6E06               	movwf	(___lwdiv@quotient+1)^0,c
   654   000876  0E00               	movlw	0
   655   000878  6E05               	movwf	___lwdiv@quotient^0,c
   656   00087A  5003               	movf	___lwdiv@divisor^0,w,c
   657   00087C  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
   658   00087E  B4D8               	btfsc	status,2,c
   659   000880  D01C               	goto	l590
   660   000882  0E01               	movlw	1
   661   000884  6E07               	movwf	___lwdiv@counter^0,c
   662   000886  D004               	goto	l952
   663   000888                     l950:
   664   000888  90D8               	bcf	status,0,c
   665   00088A  3603               	rlcf	___lwdiv@divisor^0,f,c
   666   00088C  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
   667   00088E  2A07               	incf	___lwdiv@counter^0,f,c
   668   000890                     l952:
   669   000890  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
   670   000892  D7FA               	goto	l950
   671   000894                     u160:
   672   000894  90D8               	bcf	status,0,c
   673   000896  3605               	rlcf	___lwdiv@quotient^0,f,c
   674   000898  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
   675   00089A  5003               	movf	___lwdiv@divisor^0,w,c
   676   00089C  5C01               	subwf	___lwdiv@dividend^0,w,c
   677   00089E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
   678   0008A0  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
   679   0008A2  A0D8               	btfss	status,0,c
   680   0008A4  D005               	goto	l962
   681   0008A6  5003               	movf	___lwdiv@divisor^0,w,c
   682   0008A8  5E01               	subwf	___lwdiv@dividend^0,f,c
   683   0008AA  5004               	movf	(___lwdiv@divisor+1)^0,w,c
   684   0008AC  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
   685   0008AE  8005               	bsf	___lwdiv@quotient^0,0,c
   686   0008B0                     l962:
   687   0008B0  90D8               	bcf	status,0,c
   688   0008B2  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
   689   0008B4  3203               	rrcf	___lwdiv@divisor^0,f,c
   690   0008B6  2E07               	decfsz	___lwdiv@counter^0,f,c
   691   0008B8  D7ED               	goto	u160
   692   0008BA                     l590:
   693   0008BA  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
   694   0008BE  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
   695   0008C2  0012               	return		;funcret
   696   0008C4                     __end_of___lwdiv:
   697                           	callstack 0
   698                           
   699 ;; *************** function _ISR *****************
   700 ;; Defined at:
   701 ;;		line 102 in file "PruebaSensor.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;		None
   704 ;; Auto vars:     Size  Location     Type
   705 ;;		None
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, status,2, status,0
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   715 ;;      Params:         0       0       0       0       0       0       0       0       0
   716 ;;      Locals:         0       0       0       0       0       0       0       0       0
   717 ;;      Temps:          0       0       0       0       0       0       0       0       0
   718 ;;      Totals:         0       0       0       0       0       0       0       0       0
   719 ;;Total ram usage:        0 bytes
   720 ;; Hardware stack levels used: 1
   721 ;; This function calls:
   722 ;;		Nothing
   723 ;; This function is called by:
   724 ;;		Interrupt level 2
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           	psect	intcode
   729   000008                     __pintcode:
   730                           	callstack 0
   731   000008                     _ISR:
   732                           	callstack 28
   733                           
   734                           ;incstack = 0
   735   000008  820D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   736   00000A  ED88  F004         	call	int_func,f	;refresh shadow registers
   737                           
   738                           	psect	intcode_body
   739   000910                     __pintcode_body:
   740                           	callstack 28
   741   000910                     int_func:
   742                           	callstack 28
   743   000910  0006               	pop		; remove dummy address from shadow register refresh
   744                           
   745                           ;PruebaSensor.c: 103: TMR0IF=0;
   746   000912  94F2               	bcf	4082,2,c	;volatile
   747                           
   748                           ;PruebaSensor.c: 104: TMR0=3036;
   749   000914  0E0B               	movlw	11
   750   000916  6ED7               	movwf	215,c	;volatile
   751   000918  0EDC               	movlw	220
   752   00091A  6ED6               	movwf	214,c	;volatile
   753                           
   754                           ;PruebaSensor.c: 106: LATD7=LATD7^1;
   755   00091C  BE8C               	btfsc	3980,7,c	;volatile
   756   00091E  D002               	goto	i2u11_40
   757   000920  8E8C               	bsf	3980,7,c	;volatile
   758   000922  D001               	goto	i2u12_45
   759   000924                     i2u11_40:
   760   000924  9E8C               	bcf	3980,7,c	;volatile
   761   000926                     i2u12_45:
   762                           
   763                           ;PruebaSensor.c: 107: if(etimeout==1)
   764   000926  040C               	decf	_etimeout^0,w,c
   765   000928  A4D8               	btfss	status,2,c
   766   00092A  D002               	goto	i2l105
   767                           
   768                           ;PruebaSensor.c: 108: ctimeout++;
   769   00092C  2A0B               	incf	_ctimeout^0,f,c
   770   00092E  D001               	goto	i2l940
   771   000930                     i2l105:
   772                           
   773                           ;PruebaSensor.c: 109: else;PruebaSensor.c: 110: ctimeout=0;
   774   000930  6A0B               	clrf	_ctimeout^0,c
   775   000932                     i2l940:
   776                           
   777                           ;PruebaSensor.c: 111: if(ctimeout>=2)
   778   000932  0E01               	movlw	1
   779   000934  640B               	cpfsgt	_ctimeout^0,c
   780   000936  D001               	goto	i2l108
   781                           
   782                           ;PruebaSensor.c: 112: etimeout=0;
   783   000938  6A0C               	clrf	_etimeout^0,c
   784   00093A                     i2l108:
   785   00093A  920D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   786   00093C  0011               	retfie		f
   787   00093E                     __end_of_ISR:
   788                           	callstack 0
   789                           
   790                           	psect	smallconst
   791   000800                     __psmallconst:
   792                           	callstack 0
   793   000800  00                 	db	0
   794   000801  00                 	db	0	; dummy byte at the end
   795   000000                     __activetblptr  equ	0
   796                           
   797                           	psect	rparam
   798   000001                     ___rparam_used  equ	1
   799   000000                     ___param_bank   equ	0
   800   000000                     __Lparam        equ	__Lrparam
   801   000000                     __Hparam        equ	__Hrparam
   802                           
   803                           	psect	temp
   804   00000D                     btemp:
   805                           	callstack 0
   806   00000D                     	ds	1
   807   00000D                     int$flags       set	btemp
   808   00000E                     wtemp8          set	btemp+1
   809   00000E                     ttemp5          set	btemp+1
   810   000011                     ttemp6          set	btemp+4
   811   000015                     ttemp7          set	btemp+8
   812                           
   813                           	psect	idloc
   814                           
   815                           ;Config register IDLOC0 @ 0x200000
   816                           ;	unspecified, using default values
   817   200000                     	org	2097152
   818   200000  FF                 	db	255
   819                           
   820                           ;Config register IDLOC1 @ 0x200001
   821                           ;	unspecified, using default values
   822   200001                     	org	2097153
   823   200001  FF                 	db	255
   824                           
   825                           ;Config register IDLOC2 @ 0x200002
   826                           ;	unspecified, using default values
   827   200002                     	org	2097154
   828   200002  FF                 	db	255
   829                           
   830                           ;Config register IDLOC3 @ 0x200003
   831                           ;	unspecified, using default values
   832   200003                     	org	2097155
   833   200003  FF                 	db	255
   834                           
   835                           ;Config register IDLOC4 @ 0x200004
   836                           ;	unspecified, using default values
   837   200004                     	org	2097156
   838   200004  FF                 	db	255
   839                           
   840                           ;Config register IDLOC5 @ 0x200005
   841                           ;	unspecified, using default values
   842   200005                     	org	2097157
   843   200005  FF                 	db	255
   844                           
   845                           ;Config register IDLOC6 @ 0x200006
   846                           ;	unspecified, using default values
   847   200006                     	org	2097158
   848   200006  FF                 	db	255
   849                           
   850                           ;Config register IDLOC7 @ 0x200007
   851                           ;	unspecified, using default values
   852   200007                     	org	2097159
   853   200007  FF                 	db	255
   854                           
   855                           	psect	config
   856                           
   857                           ;Config register CONFIG1L @ 0x300000
   858                           ;	unspecified, using default values
   859                           ;	PLL Prescaler Selection bits
   860                           ;	PLLDIV = 0x0, unprogrammed default
   861                           ;	System Clock Postscaler Selection bits
   862                           ;	CPUDIV = 0x0, unprogrammed default
   863                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   864                           ;	USBDIV = 0x0, unprogrammed default
   865   300000                     	org	3145728
   866   300000  00                 	db	0
   867                           
   868                           ;Config register CONFIG1H @ 0x300001
   869                           ;	Oscillator Selection bits
   870                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
   871                           ;	Fail-Safe Clock Monitor Enable bit
   872                           ;	FCMEN = 0x0, unprogrammed default
   873                           ;	Internal/External Oscillator Switchover bit
   874                           ;	IESO = 0x0, unprogrammed default
   875   300001                     	org	3145729
   876   300001  09                 	db	9
   877                           
   878                           ;Config register CONFIG2L @ 0x300002
   879                           ;	unspecified, using default values
   880                           ;	Power-up Timer Enable bit
   881                           ;	PWRT = 0x1, unprogrammed default
   882                           ;	Brown-out Reset Enable bits
   883                           ;	BOR = 0x3, unprogrammed default
   884                           ;	Brown-out Reset Voltage bits
   885                           ;	BORV = 0x3, unprogrammed default
   886                           ;	USB Voltage Regulator Enable bit
   887                           ;	VREGEN = 0x0, unprogrammed default
   888   300002                     	org	3145730
   889   300002  1F                 	db	31
   890                           
   891                           ;Config register CONFIG2H @ 0x300003
   892                           ;	Watchdog Timer Enable bit
   893                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   894                           ;	Watchdog Timer Postscale Select bits
   895                           ;	WDTPS = 0xF, unprogrammed default
   896   300003                     	org	3145731
   897   300003  1E                 	db	30
   898                           
   899                           ; Padding undefined space
   900   300004                     	org	3145732
   901   300004  FF                 	db	255
   902                           
   903                           ;Config register CONFIG3H @ 0x300005
   904                           ;	unspecified, using default values
   905                           ;	CCP2 MUX bit
   906                           ;	CCP2MX = 0x1, unprogrammed default
   907                           ;	PORTB A/D Enable bit
   908                           ;	PBADEN = 0x1, unprogrammed default
   909                           ;	Low-Power Timer 1 Oscillator Enable bit
   910                           ;	LPT1OSC = 0x0, unprogrammed default
   911                           ;	MCLR Pin Enable bit
   912                           ;	MCLRE = 0x1, unprogrammed default
   913   300005                     	org	3145733
   914   300005  83                 	db	131
   915                           
   916                           ;Config register CONFIG4L @ 0x300006
   917                           ;	Stack Full/Underflow Reset Enable bit
   918                           ;	STVREN = 0x1, unprogrammed default
   919                           ;	Single-Supply ICSP Enable bit
   920                           ;	LVP = OFF, Single-Supply ICSP disabled
   921                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   922                           ;	ICPRT = 0x0, unprogrammed default
   923                           ;	Extended Instruction Set Enable bit
   924                           ;	XINST = 0x0, unprogrammed default
   925                           ;	Background Debugger Enable bit
   926                           ;	DEBUG = 0x1, unprogrammed default
   927   300006                     	org	3145734
   928   300006  81                 	db	129
   929                           
   930                           ; Padding undefined space
   931   300007                     	org	3145735
   932   300007  FF                 	db	255
   933                           
   934                           ;Config register CONFIG5L @ 0x300008
   935                           ;	unspecified, using default values
   936                           ;	Code Protection bit
   937                           ;	CP0 = 0x1, unprogrammed default
   938                           ;	Code Protection bit
   939                           ;	CP1 = 0x1, unprogrammed default
   940                           ;	Code Protection bit
   941                           ;	CP2 = 0x1, unprogrammed default
   942                           ;	Code Protection bit
   943                           ;	CP3 = 0x1, unprogrammed default
   944   300008                     	org	3145736
   945   300008  0F                 	db	15
   946                           
   947                           ;Config register CONFIG5H @ 0x300009
   948                           ;	unspecified, using default values
   949                           ;	Boot Block Code Protection bit
   950                           ;	CPB = 0x1, unprogrammed default
   951                           ;	Data EEPROM Code Protection bit
   952                           ;	CPD = 0x1, unprogrammed default
   953   300009                     	org	3145737
   954   300009  C0                 	db	192
   955                           
   956                           ;Config register CONFIG6L @ 0x30000A
   957                           ;	unspecified, using default values
   958                           ;	Write Protection bit
   959                           ;	WRT0 = 0x1, unprogrammed default
   960                           ;	Write Protection bit
   961                           ;	WRT1 = 0x1, unprogrammed default
   962                           ;	Write Protection bit
   963                           ;	WRT2 = 0x1, unprogrammed default
   964                           ;	Write Protection bit
   965                           ;	WRT3 = 0x1, unprogrammed default
   966   30000A                     	org	3145738
   967   30000A  0F                 	db	15
   968                           
   969                           ;Config register CONFIG6H @ 0x30000B
   970                           ;	unspecified, using default values
   971                           ;	Configuration Register Write Protection bit
   972                           ;	WRTC = 0x1, unprogrammed default
   973                           ;	Boot Block Write Protection bit
   974                           ;	WRTB = 0x1, unprogrammed default
   975                           ;	Data EEPROM Write Protection bit
   976                           ;	WRTD = 0x1, unprogrammed default
   977   30000B                     	org	3145739
   978   30000B  E0                 	db	224
   979                           
   980                           ;Config register CONFIG7L @ 0x30000C
   981                           ;	unspecified, using default values
   982                           ;	Table Read Protection bit
   983                           ;	EBTR0 = 0x1, unprogrammed default
   984                           ;	Table Read Protection bit
   985                           ;	EBTR1 = 0x1, unprogrammed default
   986                           ;	Table Read Protection bit
   987                           ;	EBTR2 = 0x1, unprogrammed default
   988                           ;	Table Read Protection bit
   989                           ;	EBTR3 = 0x1, unprogrammed default
   990   30000C                     	org	3145740
   991   30000C  0F                 	db	15
   992                           
   993                           ;Config register CONFIG7H @ 0x30000D
   994                           ;	unspecified, using default values
   995                           ;	Boot Block Table Read Protection bit
   996                           ;	EBTRB = 0x1, unprogrammed default
   997   30000D                     	org	3145741
   998   30000D  40                 	db	64
   999                           tosu	equ	0xFFF
  1000                           tosh	equ	0xFFE
  1001                           tosl	equ	0xFFD
  1002                           stkptr	equ	0xFFC
  1003                           pclatu	equ	0xFFB
  1004                           pclath	equ	0xFFA
  1005                           pcl	equ	0xFF9
  1006                           tblptru	equ	0xFF8
  1007                           tblptrh	equ	0xFF7
  1008                           tblptrl	equ	0xFF6
  1009                           tablat	equ	0xFF5
  1010                           prodh	equ	0xFF4
  1011                           prodl	equ	0xFF3
  1012                           indf0	equ	0xFEF
  1013                           postinc0	equ	0xFEE
  1014                           postdec0	equ	0xFED
  1015                           preinc0	equ	0xFEC
  1016                           plusw0	equ	0xFEB
  1017                           fsr0h	equ	0xFEA
  1018                           fsr0l	equ	0xFE9
  1019                           wreg	equ	0xFE8
  1020                           indf1	equ	0xFE7
  1021                           postinc1	equ	0xFE6
  1022                           postdec1	equ	0xFE5
  1023                           preinc1	equ	0xFE4
  1024                           plusw1	equ	0xFE3
  1025                           fsr1h	equ	0xFE2
  1026                           fsr1l	equ	0xFE1
  1027                           bsr	equ	0xFE0
  1028                           indf2	equ	0xFDF
  1029                           postinc2	equ	0xFDE
  1030                           postdec2	equ	0xFDD
  1031                           preinc2	equ	0xFDC
  1032                           plusw2	equ	0xFDB
  1033                           fsr2h	equ	0xFDA
  1034                           fsr2l	equ	0xFD9
  1035                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     10      12
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_MedirDistancia
    _MedirDistancia->___lwdiv

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     212
                                              8 COMRAM     2     2      0
                     _MedirDistancia
 ---------------------------------------------------------------------------------
 (1) _MedirDistancia                                       1     1      0     189
                                              7 COMRAM     1     1      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     164
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MedirDistancia
     ___lwdiv

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITBIGSFRh         115      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     10      12     12.8%
BITBIGSFRll         34      0       0      0.0%
BITBIGSFRlh          9      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      12      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Mar 06 14:37:12 2025

                     l81 0830                       l74 081A                       l79 082E  
                    l590 08BA                      l950 0888                      l952 0890  
                    l962 08B0                      l990 0842                      l994 0856  
                    _GIE 7F97                      l996 086E                      _RC0 7C10  
                    _RC1 7C11                      u220 0838                      u160 0894  
                    u190 0824                      u257 0904                      _ISR 0008  
                    wreg 0FE8                     ?_ISR 0001                     l1012 08F4  
                   _LATD 0F8C                     _TMR0 0FD6                     _TMR1 0FCE  
                   _main 08C4                     btemp 000D                     start 000E  
           ___param_bank 0000                    ??_ISR 0001                    ?_main 0001  
                  _CCPR2 0FBB                    _T0CON 0FD5                    _T1CON 0FCD  
                  _LATC0 7C58                    _LATD7 7C67          __end_of___lwdiv 08C4  
                  i2l105 0930                    i2l108 093A                    i2l940 0932  
                  _RCSTA 0FAB                    _SPBRG 0FAF                    _TRISD 0F95  
                  _TXSTA 0FAC                    main@d 000A                    ttemp5 000E  
                  ttemp6 0011                    ttemp7 0015                    status 0FD8  
                  wtemp8 000E          __initialization 093E             __end_of_main 0910  
                 ??_main 0009            __activetblptr 0000                   _CCP2IF 7D08  
                 _TMR0IE 7F95                   _TMR0IF 7F92                   _TMR1IF 7CF0  
                 _TMR0ON 7EAF                   _TMR1ON 7E68                   _TRISC0 7CA0  
              ??___lwdiv 0005                   isa$std 0001             __mediumconst 0000  
      MedirDistancia@aux 0008         ??_MedirDistancia 0008               __accesstop 0060  
__end_of__initialization 0942            ___rparam_used 0001           __pcstackCOMRAM 0001  
                _CCP2CON 0FBA                  _BAUDCON 0FB8                  i2u11_40 0924  
                i2u12_45 0926                  __Hparam 0000                  __Lparam 0000  
                ___lwdiv 0872             __psmallconst 0800                  __pcinit 093E  
                __ramtop 0800                  __ptext0 08C4                  __ptext1 0802  
                __ptext2 0872           __pintcode_body 0910     end_of_initialization 0942  
                int_func 0910      start_initialization 093E              __end_of_ISR 093E  
            __pbssCOMRAM 000B         ___lwdiv@dividend 0001                __pintcode 0008  
               ?___lwdiv 0001              __smallconst 0800         ___lwdiv@quotient 0005  
               __Hrparam 0000                 __Lrparam 0000          ___lwdiv@divisor 0003  
        ___lwdiv@counter 0007                 _ctimeout 000B                 _etimeout 000C  
               isa$xinst 0000           _MedirDistancia 0802                 int$flags 000D  
               intlevel2 0000   __end_of_MedirDistancia 0872          ?_MedirDistancia 0001  
