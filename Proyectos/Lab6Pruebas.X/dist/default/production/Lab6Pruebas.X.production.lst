

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Mar 07 15:34:39 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1,group=1
    47                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=1
    50                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1,group=1
    54                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60   000000                     
    61                           ; Generated 25/07/2024 GMT
    62                           ; 
    63                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4550 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95   000FE0                     bsr             equ	4064
    96   000FE9                     fsr0            equ	4073
    97   000FEA                     fsr0h           equ	4074
    98   000FE9                     fsr0l           equ	4073
    99   000FE1                     fsr1            equ	4065
   100   000FE2                     fsr1h           equ	4066
   101   000FE1                     fsr1l           equ	4065
   102   000FD9                     fsr2            equ	4057
   103   000FDA                     fsr2h           equ	4058
   104   000FD9                     fsr2l           equ	4057
   105   000FEF                     indf0           equ	4079
   106   000FE7                     indf1           equ	4071
   107   000FDF                     indf2           equ	4063
   108   000FF2                     intcon          equ	4082
   109   000000                     nvmcon          equ	0
   110   000FF9                     pcl             equ	4089
   111   000FFA                     pclath          equ	4090
   112   000FFB                     pclatu          equ	4091
   113   000FEB                     plusw0          equ	4075
   114   000FE3                     plusw1          equ	4067
   115   000FDB                     plusw2          equ	4059
   116   000FED                     postdec0        equ	4077
   117   000FE5                     postdec1        equ	4069
   118   000FDD                     postdec2        equ	4061
   119   000FEE                     postinc0        equ	4078
   120   000FE6                     postinc1        equ	4070
   121   000FDE                     postinc2        equ	4062
   122   000FEC                     preinc0         equ	4076
   123   000FE4                     preinc1         equ	4068
   124   000FDC                     preinc2         equ	4060
   125   000FF3                     prod            equ	4083
   126   000FF4                     prodh           equ	4084
   127   000FF3                     prodl           equ	4083
   128   000FD8                     status          equ	4056
   129   000FF5                     tablat          equ	4085
   130   000FF6                     tblptr          equ	4086
   131   000FF7                     tblptrh         equ	4087
   132   000FF6                     tblptrl         equ	4086
   133   000FF8                     tblptru         equ	4088
   134   000FFD                     tosl            equ	4093
   135   000FE8                     wreg            equ	4072
   136   000F62                     SPPDATA         equ	3938	;# 
   137   000F63                     SPPCFG          equ	3939	;# 
   138   000F64                     SPPEPS          equ	3940	;# 
   139   000F65                     SPPCON          equ	3941	;# 
   140   000F66                     UFRM            equ	3942	;# 
   141   000F66                     UFRML           equ	3942	;# 
   142   000F67                     UFRMH           equ	3943	;# 
   143   000F68                     UIR             equ	3944	;# 
   144   000F69                     UIE             equ	3945	;# 
   145   000F6A                     UEIR            equ	3946	;# 
   146   000F6B                     UEIE            equ	3947	;# 
   147   000F6C                     USTAT           equ	3948	;# 
   148   000F6D                     UCON            equ	3949	;# 
   149   000F6E                     UADDR           equ	3950	;# 
   150   000F6F                     UCFG            equ	3951	;# 
   151   000F70                     UEP0            equ	3952	;# 
   152   000F71                     UEP1            equ	3953	;# 
   153   000F72                     UEP2            equ	3954	;# 
   154   000F73                     UEP3            equ	3955	;# 
   155   000F74                     UEP4            equ	3956	;# 
   156   000F75                     UEP5            equ	3957	;# 
   157   000F76                     UEP6            equ	3958	;# 
   158   000F77                     UEP7            equ	3959	;# 
   159   000F78                     UEP8            equ	3960	;# 
   160   000F79                     UEP9            equ	3961	;# 
   161   000F7A                     UEP10           equ	3962	;# 
   162   000F7B                     UEP11           equ	3963	;# 
   163   000F7C                     UEP12           equ	3964	;# 
   164   000F7D                     UEP13           equ	3965	;# 
   165   000F7E                     UEP14           equ	3966	;# 
   166   000F7F                     UEP15           equ	3967	;# 
   167   000F80                     PORTA           equ	3968	;# 
   168   000F81                     PORTB           equ	3969	;# 
   169   000F82                     PORTC           equ	3970	;# 
   170   000F83                     PORTD           equ	3971	;# 
   171   000F84                     PORTE           equ	3972	;# 
   172   000F89                     LATA            equ	3977	;# 
   173   000F8A                     LATB            equ	3978	;# 
   174   000F8B                     LATC            equ	3979	;# 
   175   000F8C                     LATD            equ	3980	;# 
   176   000F8D                     LATE            equ	3981	;# 
   177   000F92                     TRISA           equ	3986	;# 
   178   000F92                     DDRA            equ	3986	;# 
   179   000F93                     TRISB           equ	3987	;# 
   180   000F93                     DDRB            equ	3987	;# 
   181   000F94                     TRISC           equ	3988	;# 
   182   000F94                     DDRC            equ	3988	;# 
   183   000F95                     TRISD           equ	3989	;# 
   184   000F95                     DDRD            equ	3989	;# 
   185   000F96                     TRISE           equ	3990	;# 
   186   000F96                     DDRE            equ	3990	;# 
   187   000F9B                     OSCTUNE         equ	3995	;# 
   188   000F9D                     PIE1            equ	3997	;# 
   189   000F9E                     PIR1            equ	3998	;# 
   190   000F9F                     IPR1            equ	3999	;# 
   191   000FA0                     PIE2            equ	4000	;# 
   192   000FA1                     PIR2            equ	4001	;# 
   193   000FA2                     IPR2            equ	4002	;# 
   194   000FA6                     EECON1          equ	4006	;# 
   195   000FA7                     EECON2          equ	4007	;# 
   196   000FA8                     EEDATA          equ	4008	;# 
   197   000FA9                     EEADR           equ	4009	;# 
   198   000FAB                     RCSTA           equ	4011	;# 
   199   000FAB                     RCSTA1          equ	4011	;# 
   200   000FAC                     TXSTA           equ	4012	;# 
   201   000FAC                     TXSTA1          equ	4012	;# 
   202   000FAD                     TXREG           equ	4013	;# 
   203   000FAD                     TXREG1          equ	4013	;# 
   204   000FAE                     RCREG           equ	4014	;# 
   205   000FAE                     RCREG1          equ	4014	;# 
   206   000FAF                     SPBRG           equ	4015	;# 
   207   000FAF                     SPBRG1          equ	4015	;# 
   208   000FB0                     SPBRGH          equ	4016	;# 
   209   000FB1                     T3CON           equ	4017	;# 
   210   000FB2                     TMR3            equ	4018	;# 
   211   000FB2                     TMR3L           equ	4018	;# 
   212   000FB3                     TMR3H           equ	4019	;# 
   213   000FB4                     CMCON           equ	4020	;# 
   214   000FB5                     CVRCON          equ	4021	;# 
   215   000FB6                     ECCP1AS         equ	4022	;# 
   216   000FB6                     CCP1AS          equ	4022	;# 
   217   000FB7                     ECCP1DEL        equ	4023	;# 
   218   000FB7                     CCP1DEL         equ	4023	;# 
   219   000FB8                     BAUDCON         equ	4024	;# 
   220   000FB8                     BAUDCTL         equ	4024	;# 
   221   000FBA                     CCP2CON         equ	4026	;# 
   222   000FBB                     CCPR2           equ	4027	;# 
   223   000FBB                     CCPR2L          equ	4027	;# 
   224   000FBC                     CCPR2H          equ	4028	;# 
   225   000FBD                     CCP1CON         equ	4029	;# 
   226   000FBD                     ECCP1CON        equ	4029	;# 
   227   000FBE                     CCPR1           equ	4030	;# 
   228   000FBE                     CCPR1L          equ	4030	;# 
   229   000FBF                     CCPR1H          equ	4031	;# 
   230   000FC0                     ADCON2          equ	4032	;# 
   231   000FC1                     ADCON1          equ	4033	;# 
   232   000FC2                     ADCON0          equ	4034	;# 
   233   000FC3                     ADRES           equ	4035	;# 
   234   000FC3                     ADRESL          equ	4035	;# 
   235   000FC4                     ADRESH          equ	4036	;# 
   236   000FC5                     SSPCON2         equ	4037	;# 
   237   000FC6                     SSPCON1         equ	4038	;# 
   238   000FC7                     SSPSTAT         equ	4039	;# 
   239   000FC8                     SSPADD          equ	4040	;# 
   240   000FC9                     SSPBUF          equ	4041	;# 
   241   000FCA                     T2CON           equ	4042	;# 
   242   000FCB                     PR2             equ	4043	;# 
   243   000FCB                     MEMCON          equ	4043	;# 
   244   000FCC                     TMR2            equ	4044	;# 
   245   000FCD                     T1CON           equ	4045	;# 
   246   000FCE                     TMR1            equ	4046	;# 
   247   000FCE                     TMR1L           equ	4046	;# 
   248   000FCF                     TMR1H           equ	4047	;# 
   249   000FD0                     RCON            equ	4048	;# 
   250   000FD1                     WDTCON          equ	4049	;# 
   251   000FD2                     HLVDCON         equ	4050	;# 
   252   000FD2                     LVDCON          equ	4050	;# 
   253   000FD3                     OSCCON          equ	4051	;# 
   254   000FD5                     T0CON           equ	4053	;# 
   255   000FD6                     TMR0            equ	4054	;# 
   256   000FD6                     TMR0L           equ	4054	;# 
   257   000FD7                     TMR0H           equ	4055	;# 
   258   000FD8                     STATUS          equ	4056	;# 
   259   000FD9                     FSR2            equ	4057	;# 
   260   000FD9                     FSR2L           equ	4057	;# 
   261   000FDA                     FSR2H           equ	4058	;# 
   262   000FDB                     PLUSW2          equ	4059	;# 
   263   000FDC                     PREINC2         equ	4060	;# 
   264   000FDD                     POSTDEC2        equ	4061	;# 
   265   000FDE                     POSTINC2        equ	4062	;# 
   266   000FDF                     INDF2           equ	4063	;# 
   267   000FE0                     BSR             equ	4064	;# 
   268   000FE1                     FSR1            equ	4065	;# 
   269   000FE1                     FSR1L           equ	4065	;# 
   270   000FE2                     FSR1H           equ	4066	;# 
   271   000FE3                     PLUSW1          equ	4067	;# 
   272   000FE4                     PREINC1         equ	4068	;# 
   273   000FE5                     POSTDEC1        equ	4069	;# 
   274   000FE6                     POSTINC1        equ	4070	;# 
   275   000FE7                     INDF1           equ	4071	;# 
   276   000FE8                     WREG            equ	4072	;# 
   277   000FE9                     FSR0            equ	4073	;# 
   278   000FE9                     FSR0L           equ	4073	;# 
   279   000FEA                     FSR0H           equ	4074	;# 
   280   000FEB                     PLUSW0          equ	4075	;# 
   281   000FEC                     PREINC0         equ	4076	;# 
   282   000FED                     POSTDEC0        equ	4077	;# 
   283   000FEE                     POSTINC0        equ	4078	;# 
   284   000FEF                     INDF0           equ	4079	;# 
   285   000FF0                     INTCON3         equ	4080	;# 
   286   000FF1                     INTCON2         equ	4081	;# 
   287   000FF2                     INTCON          equ	4082	;# 
   288   000FF3                     PROD            equ	4083	;# 
   289   000FF3                     PRODL           equ	4083	;# 
   290   000FF4                     PRODH           equ	4084	;# 
   291   000FF5                     TABLAT          equ	4085	;# 
   292   000FF6                     TBLPTR          equ	4086	;# 
   293   000FF6                     TBLPTRL         equ	4086	;# 
   294   000FF7                     TBLPTRH         equ	4087	;# 
   295   000FF8                     TBLPTRU         equ	4088	;# 
   296   000FF9                     PCLAT           equ	4089	;# 
   297   000FF9                     PC              equ	4089	;# 
   298   000FF9                     PCL             equ	4089	;# 
   299   000FFA                     PCLATH          equ	4090	;# 
   300   000FFB                     PCLATU          equ	4091	;# 
   301   000FFC                     STKPTR          equ	4092	;# 
   302   000FFD                     TOS             equ	4093	;# 
   303   000FFD                     TOSL            equ	4093	;# 
   304   000FFE                     TOSH            equ	4094	;# 
   305   000FFF                     TOSU            equ	4095	;# 
   306                           
   307                           	psect	idataCOMRAM
   308   001BDC                     __pidataCOMRAM:
   309                           	callstack 0
   310                           
   311                           ;initializer for _FIN
   312   001BDC  36                 	db	low STR_2
   313                           
   314                           ;initializer for _aux
   315   001BDD  25                 	db	low STR_1
   316                           
   317                           ;initializer for _interfaz
   318   001BDE  08                 	db	8
   319                           
   320                           	psect	smallconst
   321   000800                     __psmallconst:
   322                           	callstack 0
   323   000800  00                 	db	0
   324   000801                     _banda2:
   325                           	callstack 0
   326   000801  00                 	db	0
   327   000802  00                 	db	0
   328   000803  00                 	db	0
   329   000804  00                 	db	0
   330   000805  00                 	db	0
   331   000806  1F                 	db	31
   332   000807  15                 	db	21
   333   000808  1F                 	db	31
   334   000809                     __end_of_banda2:
   335                           	callstack 0
   336   000809                     _banda1:
   337                           	callstack 0
   338   000809  00                 	db	0
   339   00080A  0E                 	db	14
   340   00080B  0A                 	db	10
   341   00080C  0E                 	db	14
   342   00080D  00                 	db	0
   343   00080E  1F                 	db	31
   344   00080F  15                 	db	21
   345   000810  1F                 	db	31
   346   000811                     __end_of_banda1:
   347                           	callstack 0
   348   007CF0                     _TMR1IF         set	31984
   349   007E68                     _TMR1ON         set	32360
   350   007C11                     _RC1            set	31761
   351   007C10                     _RC0            set	31760
   352   007D08                     _CCP2IF         set	32008
   353   007E11                     _GO             set	32273
   354   007D61                     _TRMT           set	32097
   355   007D5C                     _CREN           set	32092
   356   007CF5                     _RCIF           set	31989
   357   007C4C                     _LATA4          set	31820
   358   007C0F                     _RB7            set	31759
   359   007C0E                     _RB6            set	31758
   360   007C0D                     _RB5            set	31757
   361   007C0C                     _RB4            set	31756
   362   007C49                     _LATA1          set	31817
   363   007C4A                     _LATA2          set	31818
   364   007E84                     _RI             set	32388
   365   007EAF                     _TMR0ON         set	32431
   366   007F97                     _GIE            set	32663
   367   007F95                     _TMR0IE         set	32661
   368   007F92                     _TMR0IF         set	32658
   369   007F93                     _RBIE           set	32659
   370   007F90                     _RBIF           set	32656
   371   007E52                     _TMR2ON         set	32338
   372   007CED                     _RCIE           set	31981
   373   007F8F                     _RBPU           set	32655
   374   007CA2                     _TRISC2         set	31906
   375   007CA0                     _TRISC0         set	31904
   376   007C4D                     _LATA5          set	31821
   377   007C4B                     _LATA3          set	31819
   378   000FBB                     _CCPR2          set	4027
   379   000FCE                     _TMR1           set	4046
   380   000FD6                     _TMR0           set	4054
   381   000FA7                     _EECON2         set	4007
   382   000FF2                     _INTCONbits     set	4082
   383   000FA6                     _EECON1bits     set	4006
   384   000FA8                     _EEDATA         set	4008
   385   000FA9                     _EEADR          set	4009
   386   000FBA                     _CCP2CON        set	4026
   387   000FC4                     _ADRESH         set	4036
   388   000FAD                     _TXREG          set	4013
   389   000FAE                     _RCREG          set	4014
   390   000F81                     _PORTB          set	3969
   391   000FD5                     _T0CON          set	4053
   392   000FCD                     _T1CON          set	4045
   393   000FBD                     _CCP1CON        set	4029
   394   000FBE                     _CCPR1L         set	4030
   395   000FCA                     _T2CON          set	4042
   396   000FCB                     _PR2            set	4043
   397   000FCC                     _TMR2           set	4044
   398   000FC0                     _ADCON2         set	4032
   399   000FC1                     _ADCON1         set	4033
   400   000FC2                     _ADCON0         set	4034
   401   000FAF                     _SPBRG          set	4015
   402   000FB8                     _BAUDCON        set	4024
   403   000FAB                     _RCSTA          set	4011
   404   000FAC                     _TXSTA          set	4012
   405   000F8D                     _LATE           set	3981
   406   000F8B                     _LATC           set	3979
   407   000F8A                     _LATB           set	3978
   408   000F89                     _LATA           set	3977
   409   000F96                     _TRISE          set	3990
   410   000F95                     _TRISD          set	3989
   411   000F93                     _TRISB          set	3987
   412   000F92                     _TRISA          set	3986
   413   000F8C                     _LATD           set	3980
   414   000811                     STR_8:
   415   000811  0D                 	db	13
   416   000812  44                 	db	68	;'D'
   417   000813  69                 	db	105	;'i'
   418   000814  73                 	db	115	;'s'
   419   000815  74                 	db	116	;'t'
   420   000816  61                 	db	97	;'a'
   421   000817  6E                 	db	110	;'n'
   422   000818  63                 	db	99	;'c'
   423   000819  69                 	db	105	;'i'
   424   00081A  61                 	db	97	;'a'
   425   00081B  20                 	db	32
   426   00081C  6F                 	db	111	;'o'
   427   00081D  62                 	db	98	;'b'
   428   00081E  6A                 	db	106	;'j'
   429   00081F  65                 	db	101	;'e'
   430   000820  74                 	db	116	;'t'
   431   000821  6F                 	db	111	;'o'
   432   000822  3A                 	db	58	;':'
   433   000823  20                 	db	32
   434   000824  00                 	db	0
   435   000825                     STR_1:
   436   000825  50                 	db	80	;'P'
   437   000826  69                 	db	105	;'i'
   438   000827  65                 	db	101	;'e'
   439   000828  7A                 	db	122	;'z'
   440   000829  61                 	db	97	;'a'
   441   00082A  73                 	db	115	;'s'
   442   00082B  20                 	db	32
   443   00082C  61                 	db	97	;'a'
   444   00082D  20                 	db	32
   445   00082E  63                 	db	99	;'c'
   446   00082F  6F                 	db	111	;'o'
   447   000830  6E                 	db	110	;'n'
   448   000831  74                 	db	116	;'t'
   449   000832  61                 	db	97	;'a'
   450   000833  72                 	db	114	;'r'
   451   000834  3A                 	db	58	;':'
   452   000835  00                 	db	0
   453   000836                     STR_2:
   454   000836  20                 	db	32
   455   000837  20                 	db	32
   456   000838  43                 	db	67	;'C'
   457   000839  4F                 	db	79	;'O'
   458   00083A  4D                 	db	77	;'M'
   459   00083B  50                 	db	80	;'P'
   460   00083C  4C                 	db	76	;'L'
   461   00083D  45                 	db	69	;'E'
   462   00083E  54                 	db	84	;'T'
   463   00083F  41                 	db	65	;'A'
   464   000840  53                 	db	83	;'S'
   465   000841  21                 	db	33
   466   000842  21                 	db	33
   467   000843  21                 	db	33
   468   000844  20                 	db	32
   469   000845  00                 	db	0
   470   000846                     STR_4:
   471   000846  56                 	db	86	;'V'
   472   000847  61                 	db	97	;'a'
   473   000848  6C                 	db	108	;'l'
   474   000849  6F                 	db	111	;'o'
   475   00084A  72                 	db	114	;'r'
   476   00084B  20                 	db	32
   477   00084C  6E                 	db	110	;'n'
   478   00084D  6F                 	db	111	;'o'
   479   00084E  20                 	db	32
   480   00084F  76                 	db	118	;'v'
   481   000850  61                 	db	97	;'a'
   482   000851  6C                 	db	108	;'l'
   483   000852  69                 	db	105	;'i'
   484   000853  64                 	db	100	;'d'
   485   000854  6F                 	db	111	;'o'
   486   000855  00                 	db	0
   487   000856                     STR_7:
   488   000856  56                 	db	86	;'V'
   489   000857  61                 	db	97	;'a'
   490   000858  6C                 	db	108	;'l'
   491   000859  6F                 	db	111	;'o'
   492   00085A  72                 	db	114	;'r'
   493   00085B  20                 	db	32
   494   00085C  64                 	db	100	;'d'
   495   00085D  65                 	db	101	;'e'
   496   00085E  20                 	db	32
   497   00085F  50                 	db	80	;'P'
   498   000860  57                 	db	87	;'W'
   499   000861  4D                 	db	77	;'M'
   500   000862  3A                 	db	58	;':'
   501   000863  20                 	db	32
   502   000864  00                 	db	0
   503   000865                     STR_9:
   504   000865  20                 	db	32
   505   000866  20                 	db	32
   506   000867  20                 	db	32
   507   000868  20                 	db	32
   508   000869  45                 	db	69	;'E'
   509   00086A  4D                 	db	77	;'M'
   510   00086B  45                 	db	69	;'E'
   511   00086C  52                 	db	82	;'R'
   512   00086D  47                 	db	71	;'G'
   513   00086E  45                 	db	69	;'E'
   514   00086F  4E                 	db	78	;'N'
   515   000870  43                 	db	67	;'C'
   516   000871  59                 	db	89	;'Y'
   517   000872  00                 	db	0
   518   000873                     STR_5:
   519   000873  46                 	db	70	;'F'
   520   000874  61                 	db	97	;'a'
   521   000875  6C                 	db	108	;'l'
   522   000876  74                 	db	116	;'t'
   523   000877  61                 	db	97	;'a'
   524   000878  6E                 	db	110	;'n'
   525   000879  74                 	db	116	;'t'
   526   00087A  65                 	db	101	;'e'
   527   00087B  73                 	db	115	;'s'
   528   00087C  20                 	db	32
   529   00087D  3A                 	db	58	;':'
   530   00087E  00                 	db	0
   531   00087F                     STR_6:
   532   00087F  4F                 	db	79	;'O'
   533   000880  62                 	db	98	;'b'
   534   000881  6A                 	db	106	;'j'
   535   000882  65                 	db	101	;'e'
   536   000883  74                 	db	116	;'t'
   537   000884  69                 	db	105	;'i'
   538   000885  76                 	db	118	;'v'
   539   000886  6F                 	db	111	;'o'
   540   000887  20                 	db	32
   541   000888  3A                 	db	58	;':'
   542   000889  00                 	db	0
   543   00088A                     STR_10:
   544   00088A  20                 	db	32
   545   00088B  20                 	db	32
   546   00088C  20                 	db	32
   547   00088D  20                 	db	32
   548   00088E  20                 	db	32
   549   00088F  20                 	db	32
   550   000890  53                 	db	83	;'S'
   551   000891  54                 	db	84	;'T'
   552   000892  4F                 	db	79	;'O'
   553   000893  50                 	db	80	;'P'
   554   000894  00                 	db	0
   555   000895                     STR_3:
   556   000895  42                 	db	66	;'B'
   557   000896  69                 	db	105	;'i'
   558   000897  65                 	db	101	;'e'
   559   000898  6E                 	db	110	;'n'
   560   000899  76                 	db	118	;'v'
   561   00089A  65                 	db	101	;'e'
   562   00089B  6E                 	db	110	;'n'
   563   00089C  69                 	db	105	;'i'
   564   00089D  64                 	db	100	;'d'
   565   00089E  61                 	db	97	;'a'
   566   00089F  00                 	db	0
   567   0008A0  00                 	db	0	; dummy byte at the end
   568   000002                     __activetblptr  equ	2
   569                           
   570                           ; #config settings
   571                           
   572                           	psect	cinit
   573   001920                     __pcinit:
   574                           	callstack 0
   575   001920                     start_initialization:
   576                           	callstack 0
   577   001920                     __initialization:
   578                           	callstack 0
   579                           
   580                           ; Initialize objects allocated to COMRAM (3 bytes)
   581                           ; load TBLPTR registers with __pidataCOMRAM
   582   001920  0EDC               	movlw	low __pidataCOMRAM
   583   001922  6EF6               	movwf	tblptrl,c
   584   001924  0E1B               	movlw	high __pidataCOMRAM
   585   001926  6EF7               	movwf	tblptrh,c
   586   001928  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   587   00192A  6EF8               	movwf	tblptru,c
   588   00192C  0009               	tblrd		*+	;fetch initializer
   589   00192E  CFF5 F03F          	movff	tablat,__pdataCOMRAM
   590   001932  0009               	tblrd		*+	;fetch initializer
   591   001934  CFF5 F040          	movff	tablat,__pdataCOMRAM+1
   592   001938  0009               	tblrd		*+	;fetch initializer
   593   00193A  CFF5 F041          	movff	tablat,__pdataCOMRAM+2
   594                           
   595                           ; Clear objects allocated to COMRAM (23 bytes)
   596   00193E  EE00  F028         	lfsr	0,__pbssCOMRAM
   597   001942  0E17               	movlw	23
   598   001944                     clear_0:
   599   001944  6AEE               	clrf	postinc0,c
   600   001946  06E8               	decf	wreg,f,c
   601   001948  E1FD               	bnz	clear_0
   602   00194A                     end_of_initialization:
   603                           	callstack 0
   604   00194A                     __end_of__initialization:
   605                           	callstack 0
   606   00194A  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   607   00194C  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   608   00194E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   609   001950  6EF8               	movwf	tblptru,c
   610   001952  0100               	movlb	0
   611   001954  EF3C  F006         	goto	_main	;jump to C main() function
   612                           
   613                           	psect	bssCOMRAM
   614   000028                     __pbssCOMRAM:
   615                           	callstack 0
   616   000028                     _dis:
   617                           	callstack 0
   618   000028                     	ds	1
   619   000029                     _realPWM:
   620                           	callstack 0
   621   000029                     	ds	1
   622   00002A                     _valADC:
   623                           	callstack 0
   624   00002A                     	ds	1
   625   00002B                     _flagMotor:
   626                           	callstack 0
   627   00002B                     	ds	1
   628   00002C                     _Actual_sensor:
   629                           	callstack 0
   630   00002C                     	ds	1
   631   00002D                     _motorAntiguo:
   632                           	callstack 0
   633   00002D                     	ds	1
   634   00002E                     _motorActual:
   635                           	callstack 0
   636   00002E                     	ds	1
   637   00002F                     _objeto:
   638                           	callstack 0
   639   00002F                     	ds	1
   640   000030                     _ctimeout:
   641                           	callstack 0
   642   000030                     	ds	1
   643   000031                     _etimeout:
   644                           	callstack 0
   645   000031                     	ds	1
   646   000032                     _inactive:
   647                           	callstack 0
   648   000032                     	ds	1
   649   000033                     _contador:
   650                           	callstack 0
   651   000033                     	ds	1
   652   000034                     _emergency:
   653                           	callstack 0
   654   000034                     	ds	1
   655   000035                     _Iniciarpregunta:
   656                           	callstack 0
   657   000035                     	ds	1
   658   000036                     _ok:
   659                           	callstack 0
   660   000036                     	ds	1
   661   000037                     _block:
   662                           	callstack 0
   663   000037                     	ds	1
   664   000038                     _input:
   665                           	callstack 0
   666   000038                     	ds	1
   667   000039                     _contadas:
   668                           	callstack 0
   669   000039                     	ds	1
   670   00003A                     _faltantes:
   671                           	callstack 0
   672   00003A                     	ds	1
   673   00003B                     _objetivo:
   674                           	callstack 0
   675   00003B                     	ds	1
   676   00003C                     _Tecla:
   677                           	callstack 0
   678   00003C                     	ds	1
   679   00003D                     _valPWM:
   680                           	callstack 0
   681   00003D                     	ds	2
   682                           
   683                           	psect	dataCOMRAM
   684   00003F                     __pdataCOMRAM:
   685                           	callstack 0
   686   00003F                     _FIN:
   687                           	callstack 0
   688   00003F                     	ds	1
   689   000040                     _aux:
   690                           	callstack 0
   691   000040                     	ds	1
   692   000041                     _interfaz:
   693                           	callstack 0
   694   000041                     	ds	1
   695                           
   696                           	psect	cstackBANK0
   697   000060                     __pcstackBANK0:
   698                           	callstack 0
   699   000060                     EscribeLCD_n8@centena:
   700                           	callstack 0
   701   000060                     Bienvenida@max_pos:
   702                           	callstack 0
   703                           
   704                           ; 1 bytes @ 0x0
   705   000060                     	ds	1
   706   000061                     EscribeLCD_n8@decena:
   707                           	callstack 0
   708   000061                     Bienvenida@pos:
   709                           	callstack 0
   710                           
   711                           ; 1 bytes @ 0x1
   712   000061                     	ds	1
   713   000062                     EscribeLCD_n8@unidad:
   714                           	callstack 0
   715                           
   716                           ; 1 bytes @ 0x2
   717   000062                     	ds	1
   718   000063                     EscribeLCD_n8@a:
   719                           	callstack 0
   720                           
   721                           ; 1 bytes @ 0x3
   722   000063                     	ds	1
   723   000064                     ??_main:
   724                           
   725                           ; 1 bytes @ 0x4
   726   000064                     	ds	2
   727                           
   728                           	psect	cstackCOMRAM
   729   000001                     __pcstackCOMRAM:
   730                           	callstack 0
   731   000001                     ?___awdiv:
   732                           	callstack 0
   733   000001                     ?___awmod:
   734                           	callstack 0
   735   000001                     ?___lwdiv:
   736                           	callstack 0
   737   000001                     ?___ftpack:
   738                           	callstack 0
   739   000001                     ?___fttol:
   740                           	callstack 0
   741   000001                     Transmitir@BufferT:
   742                           	callstack 0
   743   000001                     ConversionADC@canal:
   744                           	callstack 0
   745   000001                     i2EEPROM_Write@data:
   746                           	callstack 0
   747   000001                     i2___lbmod@divisor:
   748                           	callstack 0
   749   000001                     ___awdiv@dividend:
   750                           	callstack 0
   751   000001                     ___awmod@dividend:
   752                           	callstack 0
   753   000001                     ___lwdiv@dividend:
   754                           	callstack 0
   755   000001                     ___ftpack@arg:
   756                           	callstack 0
   757   000001                     ___fttol@f1:
   758                           	callstack 0
   759   000001                     ??i2_RetardoLCD:
   760                           
   761                           ; 1 bytes @ 0x0
   762   000001                     	ds	1
   763   000002                     i2RetardoLCD@a:
   764                           	callstack 0
   765   000002                     i2EEPROM_Write@address:
   766                           	callstack 0
   767   000002                     i2___lbmod@dividend:
   768                           	callstack 0
   769   000002                     TransmitirVar@buffer:
   770                           	callstack 0
   771   000002                     
   772                           ; 1 bytes @ 0x1
   773   000002                     	ds	1
   774   000003                     i2___lbmod@counter:
   775                           	callstack 0
   776   000003                     ___awdiv@divisor:
   777                           	callstack 0
   778   000003                     ___awmod@divisor:
   779                           	callstack 0
   780   000003                     ___lwdiv@divisor:
   781                           	callstack 0
   782   000003                     ??i2_EnviaDato:
   783                           
   784                           ; 1 bytes @ 0x2
   785   000003                     	ds	1
   786   000004                     ___ftpack@exp:
   787                           	callstack 0
   788   000004                     i2EnviaDato@a:
   789                           	callstack 0
   790   000004                     i2___lbmod@rem:
   791                           	callstack 0
   792   000004                     
   793                           ; 1 bytes @ 0x3
   794   000004                     	ds	1
   795   000005                     ___awdiv@counter:
   796                           	callstack 0
   797   000005                     ___awmod@counter:
   798                           	callstack 0
   799   000005                     ___ftpack@sign:
   800                           	callstack 0
   801   000005                     i2EscribeLCD_c@a:
   802                           	callstack 0
   803   000005                     i2DireccionaLCD@a:
   804                           	callstack 0
   805   000005                     i2___lbdiv@divisor:
   806                           	callstack 0
   807   000005                     ___lwdiv@quotient:
   808                           	callstack 0
   809   000005                     ??___fttol:
   810   000005                     
   811                           ; 1 bytes @ 0x4
   812   000005                     	ds	1
   813   000006                     ___awdiv@sign:
   814                           	callstack 0
   815   000006                     ___awmod@sign:
   816                           	callstack 0
   817   000006                     i2___lbdiv@dividend:
   818                           	callstack 0
   819   000006                     ??___ftpack:
   820   000006                     
   821                           ; 1 bytes @ 0x5
   822   000006                     	ds	1
   823   000007                     ___lwdiv@counter:
   824                           	callstack 0
   825   000007                     i2___lbdiv@counter:
   826                           	callstack 0
   827   000007                     ___awdiv@quotient:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x6
   831   000007                     	ds	1
   832   000008                     MedirDistancia@aux:
   833                           	callstack 0
   834   000008                     i2___lbdiv@quotient:
   835                           	callstack 0
   836   000008                     
   837                           ; 1 bytes @ 0x7
   838   000008                     	ds	1
   839   000009                     ?___awtoft:
   840                           	callstack 0
   841   000009                     i2EscribeLCD_n8@b:
   842                           	callstack 0
   843   000009                     numASCII@number:
   844                           	callstack 0
   845   000009                     ___awtoft@c:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0x8
   849   000009                     	ds	1
   850   00000A                     ___fttol@sign1:
   851                           	callstack 0
   852   00000A                     i2EscribeLCD_n8@centena:
   853                           	callstack 0
   854   00000A                     
   855                           ; 1 bytes @ 0x9
   856   00000A                     	ds	1
   857   00000B                     i2EscribeLCD_n8@decena:
   858                           	callstack 0
   859   00000B                     numASCII@ascii_values:
   860                           	callstack 0
   861   00000B                     ___fttol@lval:
   862                           	callstack 0
   863                           
   864                           ; 4 bytes @ 0xA
   865   00000B                     	ds	1
   866   00000C                     ___awtoft@sign:
   867                           	callstack 0
   868   00000C                     i2EscribeLCD_n8@unidad:
   869                           	callstack 0
   870   00000C                     
   871                           ; 1 bytes @ 0xB
   872   00000C                     	ds	1
   873   00000D                     i2EscribeLCD_n8@a:
   874                           	callstack 0
   875   00000D                     
   876                           ; 1 bytes @ 0xC
   877   00000D                     	ds	2
   878   00000F                     ___fttol@exp1:
   879                           	callstack 0
   880                           
   881                           ; 1 bytes @ 0xE
   882   00000F                     	ds	1
   883   000010                     ??_ISR:
   884                           
   885                           ; 1 bytes @ 0xF
   886   000010                     	ds	10
   887   00001A                     ISR@numAscii:
   888                           	callstack 0
   889   00001A                     ISR@d:
   890                           	callstack 0
   891                           
   892                           ; 3 bytes @ 0x19
   893   00001A                     	ds	3
   894   00001D                     ISR@comando:
   895                           	callstack 0
   896                           
   897                           ; 1 bytes @ 0x1C
   898   00001D                     	ds	1
   899   00001E                     ConfiguraLCD@a:
   900                           	callstack 0
   901   00001E                     EEPROM_Write@data:
   902                           	callstack 0
   903   00001E                     ___lbmod@divisor:
   904                           	callstack 0
   905   00001E                     ??_RetardoLCD:
   906   00001E                     
   907                           ; 1 bytes @ 0x1D
   908   00001E                     	ds	1
   909   00001F                     RetardoLCD@a:
   910                           	callstack 0
   911   00001F                     EEPROM_Write@address:
   912                           	callstack 0
   913   00001F                     ___lbmod@dividend:
   914                           	callstack 0
   915   00001F                     
   916                           ; 1 bytes @ 0x1E
   917   00001F                     	ds	1
   918   000020                     ___lbmod@counter:
   919                           	callstack 0
   920   000020                     ??_EnviaDato:
   921                           
   922                           ; 1 bytes @ 0x1F
   923   000020                     	ds	1
   924   000021                     EnviaDato@a:
   925                           	callstack 0
   926   000021                     ___lbmod@rem:
   927                           	callstack 0
   928                           
   929                           ; 1 bytes @ 0x20
   930   000021                     	ds	1
   931   000022                     EscribeLCD_c@a:
   932                           	callstack 0
   933   000022                     DireccionaLCD@a:
   934                           	callstack 0
   935   000022                     CrearCaracter@data:
   936                           	callstack 0
   937   000022                     ___lbdiv@divisor:
   938                           	callstack 0
   939   000022                     
   940                           ; 1 bytes @ 0x21
   941   000022                     	ds	1
   942   000023                     MensajeLCD_Var@a:
   943                           	callstack 0
   944   000023                     ___lbdiv@dividend:
   945                           	callstack 0
   946   000023                     ??_CrearCaracter:
   947   000023                     
   948                           ; 1 bytes @ 0x22
   949   000023                     	ds	1
   950   000024                     CrearCaracter@pos:
   951                           	callstack 0
   952   000024                     ___lbdiv@counter:
   953                           	callstack 0
   954   000024                     
   955                           ; 1 bytes @ 0x23
   956   000024                     	ds	1
   957   000025                     CrearCaracter@i:
   958                           	callstack 0
   959   000025                     ___lbdiv@quotient:
   960                           	callstack 0
   961                           
   962                           ; 1 bytes @ 0x24
   963   000025                     	ds	1
   964   000026                     EscribeLCD_n8@b:
   965                           	callstack 0
   966   000026                     ??_Bienvenida:
   967                           
   968                           ; 1 bytes @ 0x25
   969   000026                     	ds	1
   970   000027                     main@Antiguo_sensor:
   971                           	callstack 0
   972   000027                     
   973                           ; 1 bytes @ 0x26
   974   000027                     	ds	1
   975                           
   976 ;;
   977 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   978 ;;
   979 ;; *************** function _main *****************
   980 ;; Defined at:
   981 ;;		line 72 in file "Lab6Pruebas.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;		None
   984 ;; Auto vars:     Size  Location     Type
   985 ;;  Antiguo_sens    1   38[COMRAM] unsigned char 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   995 ;;      Params:         0       0       0       0       0       0       0       0       0
   996 ;;      Locals:         1       0       0       0       0       0       0       0       0
   997 ;;      Temps:          0       2       0       0       0       0       0       0       0
   998 ;;      Totals:         1       2       0       0       0       0       0       0       0
   999 ;;Total ram usage:        3 bytes
  1000 ;; Hardware stack levels required when called: 9
  1001 ;; This function calls:
  1002 ;;		_Bienvenida
  1003 ;;		_BorraLCD
  1004 ;;		_ConfiguraLCD
  1005 ;;		_DireccionaLCD
  1006 ;;		_Emergencia
  1007 ;;		_EscribeLCD_n8
  1008 ;;		_InicializaLCD
  1009 ;;		_MensajeLCD_Var
  1010 ;;		_MostrarCursorLCD
  1011 ;;		_MostrarNumeros
  1012 ;;		_OcultarCursorLCD
  1013 ;;		___lbdiv
  1014 ;;		___lbmod
  1015 ;; This function is called by:
  1016 ;;		Startup code after reset
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           	psect	text0
  1021   000C78                     __ptext0:
  1022                           	callstack 0
  1023   000C78                     _main:
  1024                           	callstack 22
  1025                           
  1026                           ;Lab6Pruebas.c: 77: TRISA = 0x01;
  1027                           
  1028                           ;incstack = 0
  1029   000C78  0E01               	movlw	1
  1030   000C7A  6E92               	movwf	146,c	;volatile
  1031                           
  1032                           ;Lab6Pruebas.c: 79: TRISB = 0b11110000;
  1033   000C7C  0EF0               	movlw	240
  1034   000C7E  6E93               	movwf	147,c	;volatile
  1035                           
  1036                           ;Lab6Pruebas.c: 80: TRISC0 = 0;
  1037   000C80  9094               	bcf	3988,0,c	;volatile
  1038                           
  1039                           ;Lab6Pruebas.c: 81: TRISC2=0;
  1040   000C82  9494               	bcf	3988,2,c	;volatile
  1041                           
  1042                           ;Lab6Pruebas.c: 83: TRISD = 0x00;
  1043   000C84  6A95               	clrf	149,c	;volatile
  1044                           
  1045                           ;Lab6Pruebas.c: 84: TRISE = 0x00;
  1046   000C86  6A96               	clrf	150,c	;volatile
  1047                           
  1048                           ;Lab6Pruebas.c: 87: LATA = 0b010000;
  1049   000C88  0E10               	movlw	16
  1050   000C8A  6E89               	movwf	137,c	;volatile
  1051                           
  1052                           ;Lab6Pruebas.c: 88: LATB = 0x00;
  1053   000C8C  6A8A               	clrf	138,c	;volatile
  1054                           
  1055                           ;Lab6Pruebas.c: 89: LATC = 0x00;
  1056   000C8E  6A8B               	clrf	139,c	;volatile
  1057                           
  1058                           ;Lab6Pruebas.c: 90: LATD = 0x00;
  1059   000C90  6A8C               	clrf	140,c	;volatile
  1060                           
  1061                           ;Lab6Pruebas.c: 91: LATE = 0x00;
  1062   000C92  6A8D               	clrf	141,c	;volatile
  1063                           
  1064                           ;Lab6Pruebas.c: 92: RBPU=0;
  1065   000C94  9EF1               	bcf	4081,7,c	;volatile
  1066                           
  1067                           ;Lab6Pruebas.c: 96: TXSTA = 0b00100100;
  1068   000C96  0E24               	movlw	36
  1069   000C98  6EAC               	movwf	172,c	;volatile
  1070                           
  1071                           ;Lab6Pruebas.c: 97: RCSTA = 0b10010000;
  1072   000C9A  0E90               	movlw	144
  1073   000C9C  6EAB               	movwf	171,c	;volatile
  1074                           
  1075                           ;Lab6Pruebas.c: 98: BAUDCON = 0b00001000;
  1076   000C9E  0E08               	movlw	8
  1077   000CA0  6EB8               	movwf	184,c	;volatile
  1078                           
  1079                           ;Lab6Pruebas.c: 99: SPBRG = 25;
  1080   000CA2  0E19               	movlw	25
  1081   000CA4  6EAF               	movwf	175,c	;volatile
  1082                           
  1083                           ;Lab6Pruebas.c: 100: RCIE = 1;
  1084   000CA6  8A9D               	bsf	3997,5,c	;volatile
  1085                           
  1086                           ;Lab6Pruebas.c: 103: ADCON0=0b00000001;
  1087   000CA8  0E01               	movlw	1
  1088   000CAA  6EC2               	movwf	194,c	;volatile
  1089                           
  1090                           ;Lab6Pruebas.c: 104: ADCON1=0b00001110;
  1091   000CAC  0E0E               	movlw	14
  1092   000CAE  6EC1               	movwf	193,c	;volatile
  1093                           
  1094                           ;Lab6Pruebas.c: 105: ADCON2=0b00001000;
  1095   000CB0  0E08               	movlw	8
  1096   000CB2  6EC0               	movwf	192,c	;volatile
  1097                           
  1098                           ;Lab6Pruebas.c: 108: TMR2=0;
  1099   000CB4  6ACC               	clrf	204,c	;volatile
  1100                           
  1101                           ;Lab6Pruebas.c: 109: PR2=249;
  1102   000CB6  0EF9               	movlw	249
  1103   000CB8  6ECB               	movwf	203,c	;volatile
  1104                           
  1105                           ;Lab6Pruebas.c: 110: T2CON=0b00000000;
  1106   000CBA  6ACA               	clrf	202,c	;volatile
  1107                           
  1108                           ;Lab6Pruebas.c: 111: CCPR1L=1;
  1109   000CBC  0E01               	movlw	1
  1110   000CBE  6EBE               	movwf	190,c	;volatile
  1111                           
  1112                           ;Lab6Pruebas.c: 112: CCP1CON=0b00001100;
  1113   000CC0  0E0C               	movlw	12
  1114   000CC2  6EBD               	movwf	189,c	;volatile
  1115                           
  1116                           ;Lab6Pruebas.c: 113: TMR2ON=1;
  1117   000CC4  84CA               	bsf	4042,2,c	;volatile
  1118                           
  1119                           ;Lab6Pruebas.c: 117: T1CON=0b10000000;
  1120   000CC6  0E80               	movlw	128
  1121   000CC8  6ECD               	movwf	205,c	;volatile
  1122                           
  1123                           ;Lab6Pruebas.c: 122: RBIF=0;
  1124   000CCA  90F2               	bcf	4082,0,c	;volatile
  1125                           
  1126                           ;Lab6Pruebas.c: 123: RBIE=1;
  1127   000CCC  86F2               	bsf	4082,3,c	;volatile
  1128                           
  1129                           ;Lab6Pruebas.c: 126: T0CON = 0b00000010;
  1130   000CCE  0E02               	movlw	2
  1131   000CD0  6ED5               	movwf	213,c	;volatile
  1132                           
  1133                           ;Lab6Pruebas.c: 128: TMR0 = 49911;
  1134   000CD2  0EC2               	movlw	194
  1135   000CD4  6ED7               	movwf	215,c	;volatile
  1136   000CD6  0EF7               	movlw	247
  1137   000CD8  6ED6               	movwf	214,c	;volatile
  1138                           
  1139                           ;Lab6Pruebas.c: 131: TMR0IF = 0;
  1140   000CDA  94F2               	bcf	4082,2,c	;volatile
  1141                           
  1142                           ;Lab6Pruebas.c: 132: TMR0IE = 1;
  1143   000CDC  8AF2               	bsf	4082,5,c	;volatile
  1144                           
  1145                           ;Lab6Pruebas.c: 134: GIE=1;
  1146   000CDE  8EF2               	bsf	4082,7,c	;volatile
  1147                           
  1148                           ;Lab6Pruebas.c: 135: TMR0ON = 1;
  1149   000CE0  8ED5               	bsf	4053,7,c	;volatile
  1150                           
  1151                           ;Lab6Pruebas.c: 139: ConfiguraLCD(4);
  1152   000CE2  0E04               	movlw	4
  1153   000CE4  EC84  F00D         	call	_ConfiguraLCD
  1154                           
  1155                           ;Lab6Pruebas.c: 140: InicializaLCD();
  1156   000CE8  EC09  F00A         	call	_InicializaLCD	;wreg free
  1157                           
  1158                           ;Lab6Pruebas.c: 141: OcultarCursorLCD();
  1159   000CEC  ECBC  F00D         	call	_OcultarCursorLCD	;wreg free
  1160                           
  1161                           ;Lab6Pruebas.c: 148: if(RI == 1){
  1162   000CF0  A8D0               	btfss	4048,4,c	;volatile
  1163   000CF2  D018               	goto	l4187
  1164                           
  1165                           ;Lab6Pruebas.c: 152: BorraLCD();
  1166   000CF4  ECD0  F00D         	call	_BorraLCD	;wreg free
  1167                           
  1168                           ;Lab6Pruebas.c: 153: Bienvenida();
  1169   000CF8  EC68  F007         	call	_Bienvenida	;wreg free
  1170                           
  1171                           ;Lab6Pruebas.c: 154: contador = 0;
  1172   000CFC  6A33               	clrf	_contador^0,c
  1173                           
  1174                           ;Lab6Pruebas.c: 155: BorraLCD();
  1175   000CFE  ECD0  F00D         	call	_BorraLCD	;wreg free
  1176                           
  1177                           ;Lab6Pruebas.c: 156: MensajeLCD_Var("Bienvenida");
  1178   000D02  0E95               	movlw	low STR_3
  1179   000D04  6E23               	movwf	MensajeLCD_Var@a^0,c
  1180   000D06  EC28  F00D         	call	_MensajeLCD_Var	;wreg free
  1181                           
  1182                           ;Lab6Pruebas.c: 158: _delay((unsigned long)((1000)*(1000000/4000.0)));
  1183   000D0A  0E02               	movlw	2
  1184   000D0C  0100               	movlb	0	; () banked
  1185   000D0E  6F65               	movwf	(??_main+1)& (0+255),b
  1186   000D10  0E45               	movlw	69
  1187   000D12  6F64               	movwf	??_main& (0+255),b
  1188   000D14  0EA9               	movlw	169
  1189   000D16                     u3317:
  1190   000D16  2EE8               	decfsz	wreg,f,c
  1191   000D18  D7FE               	bra	u3317
  1192   000D1A  2F64               	decfsz	??_main& (0+255),f,b
  1193   000D1C  D7FC               	bra	u3317
  1194   000D1E  2F65               	decfsz	(??_main+1)& (0+255),f,b
  1195   000D20  D7FA               	bra	u3317
  1196   000D22  D000               	nop2	
  1197   000D24                     l4187:
  1198                           
  1199                           ;Lab6Pruebas.c: 159: };Lab6Pruebas.c: 162: if(RI == 0){
  1200   000D24  B8D0               	btfsc	4048,4,c	;volatile
  1201   000D26  D003               	goto	l4193
  1202                           
  1203                           ;Lab6Pruebas.c: 164: LATE = 0b101;
  1204   000D28  0E05               	movlw	5
  1205   000D2A  6E8D               	movwf	141,c	;volatile
  1206                           
  1207                           ;Lab6Pruebas.c: 165: RI = 1;
  1208   000D2C  88D0               	bsf	4048,4,c	;volatile
  1209   000D2E                     l4193:
  1210                           
  1211                           ;Lab6Pruebas.c: 176: input = 0;
  1212   000D2E  6A38               	clrf	_input^0,c
  1213                           
  1214                           ;Lab6Pruebas.c: 177: objetivo = 0;
  1215   000D30  6A3B               	clrf	_objetivo^0,c
  1216                           
  1217                           ;Lab6Pruebas.c: 178: ok = 0;
  1218   000D32  6A36               	clrf	_ok^0,c
  1219                           
  1220                           ;Lab6Pruebas.c: 179: contador = 0;
  1221   000D34  6A33               	clrf	_contador^0,c
  1222                           
  1223                           ;Lab6Pruebas.c: 185: BorraLCD();
  1224   000D36  ECD0  F00D         	call	_BorraLCD	;wreg free
  1225                           
  1226                           ;Lab6Pruebas.c: 186: MostrarCursorLCD();
  1227   000D3A  ECC6  F00D         	call	_MostrarCursorLCD	;wreg free
  1228                           
  1229                           ;Lab6Pruebas.c: 187: MensajeLCD_Var(*aux);
  1230   000D3E  C040  F023         	movff	_aux,MensajeLCD_Var@a
  1231   000D42  EC28  F00D         	call	_MensajeLCD_Var	;wreg free
  1232                           
  1233                           ;Lab6Pruebas.c: 189: DireccionaLCD(0xC0);
  1234   000D46  0EC0               	movlw	192
  1235   000D48  EC9B  F00D         	call	_DireccionaLCD
  1236                           
  1237                           ;Lab6Pruebas.c: 190: Iniciarpregunta=1;
  1238   000D4C  0E01               	movlw	1
  1239   000D4E  6E35               	movwf	_Iniciarpregunta^0,c
  1240                           
  1241                           ;Lab6Pruebas.c: 191: block = 0;
  1242   000D50  6A37               	clrf	_block^0,c
  1243                           
  1244                           ;Lab6Pruebas.c: 196: while(ok == 0){
  1245   000D52  D004               	goto	l4217
  1246   000D54                     l4213:
  1247                           
  1248                           ;Lab6Pruebas.c: 197: if(emergency == 1) Emergencia();
  1249   000D54  0434               	decf	_emergency^0,w,c
  1250   000D56  B4D8               	btfsc	status,2,c
  1251   000D58  ECFF  F00C         	call	_Emergencia	;wreg free
  1252   000D5C                     l4217:
  1253   000D5C  5036               	movf	_ok^0,w,c
  1254   000D5E  B4D8               	btfsc	status,2,c
  1255   000D60  D7F9               	goto	l4213
  1256                           
  1257                           ;Lab6Pruebas.c: 200: };Lab6Pruebas.c: 205: if(input < 2){
  1258   000D62  0E02               	movlw	2
  1259   000D64  6038               	cpfslt	_input^0,c
  1260   000D66  D007               	goto	l4225
  1261                           
  1262                           ;Lab6Pruebas.c: 207: Tecla = 0;
  1263   000D68  6A3C               	clrf	_Tecla^0,c
  1264                           
  1265                           ;Lab6Pruebas.c: 208: objetivo = objetivo/10;
  1266   000D6A  0E0A               	movlw	10
  1267   000D6C  6E22               	movwf	___lbdiv@divisor^0,c
  1268   000D6E  503B               	movf	_objetivo^0,w,c
  1269   000D70  ECAC  F00C         	call	___lbdiv
  1270   000D74  6E3B               	movwf	_objetivo^0,c
  1271   000D76                     l4225:
  1272                           
  1273                           ;Lab6Pruebas.c: 209: };Lab6Pruebas.c: 210: input = 3;
  1274   000D76  0E03               	movlw	3
  1275   000D78  6E38               	movwf	_input^0,c
  1276                           
  1277                           ;Lab6Pruebas.c: 213: if(objetivo > 59){
  1278   000D7A  0E3B               	movlw	59
  1279   000D7C  643B               	cpfsgt	_objetivo^0,c
  1280   000D7E  D014               	goto	l4235
  1281                           
  1282                           ;Lab6Pruebas.c: 214: BorraLCD();
  1283   000D80  ECD0  F00D         	call	_BorraLCD	;wreg free
  1284                           
  1285                           ;Lab6Pruebas.c: 215: MensajeLCD_Var("Valor no valido");
  1286   000D84  0E46               	movlw	low STR_4
  1287   000D86  6E23               	movwf	MensajeLCD_Var@a^0,c
  1288   000D88  EC28  F00D         	call	_MensajeLCD_Var	;wreg free
  1289                           
  1290                           ;Lab6Pruebas.c: 216: _delay((unsigned long)((2000)*(1000000/4000.0)));
  1291   000D8C  0E03               	movlw	3
  1292   000D8E  0100               	movlb	0	; () banked
  1293   000D90  6F65               	movwf	(??_main+1)& (0+255),b
  1294   000D92  0E8A               	movlw	138
  1295   000D94  6F64               	movwf	??_main& (0+255),b
  1296   000D96  0E55               	movlw	85
  1297   000D98                     u3327:
  1298   000D98  2EE8               	decfsz	wreg,f,c
  1299   000D9A  D7FE               	bra	u3327
  1300   000D9C  2F64               	decfsz	??_main& (0+255),f,b
  1301   000D9E  D7FC               	bra	u3327
  1302   000DA0  2F65               	decfsz	(??_main+1)& (0+255),f,b
  1303   000DA2  D7FA               	bra	u3327
  1304   000DA4  D000               	nop2	
  1305   000DA6  00FF               	reset		;# 
  1306   000DA8                     l4235:
  1307                           
  1308                           ;Lab6Pruebas.c: 218: };Lab6Pruebas.c: 221: objetivo = objetivo + Tecla;
  1309   000DA8  503B               	movf	_objetivo^0,w,c
  1310   000DAA  243C               	addwf	_Tecla^0,w,c
  1311   000DAC  6E3B               	movwf	_objetivo^0,c
  1312                           
  1313                           ;Lab6Pruebas.c: 222: faltantes = objetivo;
  1314   000DAE  C03B  F03A         	movff	_objetivo,_faltantes
  1315                           
  1316                           ;Lab6Pruebas.c: 223: contadas = objetivo - faltantes;
  1317   000DB2  503A               	movf	_faltantes^0,w,c
  1318   000DB4  5C3B               	subwf	_objetivo^0,w,c
  1319   000DB6  6E39               	movwf	_contadas^0,c
  1320                           
  1321                           ;Lab6Pruebas.c: 229: block = 1;
  1322   000DB8  0E01               	movlw	1
  1323   000DBA  6E37               	movwf	_block^0,c
  1324                           
  1325                           ;Lab6Pruebas.c: 230: BorraLCD();
  1326   000DBC  ECD0  F00D         	call	_BorraLCD	;wreg free
  1327                           
  1328                           ;Lab6Pruebas.c: 231: MensajeLCD_Var("Faltantes :");
  1329   000DC0  0E73               	movlw	low STR_5
  1330   000DC2  6E23               	movwf	MensajeLCD_Var@a^0,c
  1331   000DC4  EC28  F00D         	call	_MensajeLCD_Var	;wreg free
  1332                           
  1333                           ;Lab6Pruebas.c: 232: EscribeLCD_n8(faltantes,2);
  1334   000DC8  0E02               	movlw	2
  1335   000DCA  6E26               	movwf	EscribeLCD_n8@b^0,c
  1336   000DCC  503A               	movf	_faltantes^0,w,c
  1337   000DCE  ECED  F007         	call	_EscribeLCD_n8
  1338                           
  1339                           ;Lab6Pruebas.c: 233: DireccionaLCD(0xC0);
  1340   000DD2  0EC0               	movlw	192
  1341   000DD4  EC9B  F00D         	call	_DireccionaLCD
  1342                           
  1343                           ;Lab6Pruebas.c: 234: MensajeLCD_Var("Objetivo :");
  1344   000DD8  0E7F               	movlw	low STR_6
  1345   000DDA  6E23               	movwf	MensajeLCD_Var@a^0,c
  1346   000DDC  EC28  F00D         	call	_MensajeLCD_Var	;wreg free
  1347                           
  1348                           ;Lab6Pruebas.c: 235: EscribeLCD_n8(objetivo,2);
  1349   000DE0  0E02               	movlw	2
  1350   000DE2  6E26               	movwf	EscribeLCD_n8@b^0,c
  1351   000DE4  503B               	movf	_objetivo^0,w,c
  1352   000DE6  ECED  F007         	call	_EscribeLCD_n8
  1353                           
  1354                           ;Lab6Pruebas.c: 237: unsigned char Antiguo_sensor = 0;
  1355   000DEA  6A27               	clrf	main@Antiguo_sensor^0,c
  1356   000DEC                     l4257:
  1357                           
  1358                           ;Lab6Pruebas.c: 241: if(emergency == 1){
  1359   000DEC  0434               	decf	_emergency^0,w,c
  1360   000DEE  B4D8               	btfsc	status,2,c
  1361                           
  1362                           ;Lab6Pruebas.c: 242: Emergencia();
  1363   000DF0  ECFF  F00C         	call	_Emergencia	;wreg free
  1364                           
  1365                           ;Lab6Pruebas.c: 243: };Lab6Pruebas.c: 249: objeto = dis;
  1366   000DF4  C028  F02F         	movff	_dis,_objeto
  1367                           
  1368                           ;Lab6Pruebas.c: 253: if(objeto < 7 && objeto >= 1){
  1369   000DF8  0E07               	movlw	7
  1370   000DFA  602F               	cpfslt	_objeto^0,c
  1371   000DFC  D006               	goto	l344
  1372   000DFE  502F               	movf	_objeto^0,w,c
  1373   000E00  B4D8               	btfsc	status,2,c
  1374   000E02  D003               	goto	l344
  1375                           
  1376                           ;Lab6Pruebas.c: 254: Actual_sensor= objeto;
  1377   000E04  C02F  F02C         	movff	_objeto,_Actual_sensor
  1378                           
  1379                           ;Lab6Pruebas.c: 255: } else {
  1380   000E08  D001               	goto	l4269
  1381   000E0A                     l344:
  1382                           
  1383                           ;Lab6Pruebas.c: 256: Actual_sensor = 0;
  1384   000E0A  6A2C               	clrf	_Actual_sensor^0,c
  1385   000E0C                     l4269:
  1386                           
  1387                           ;Lab6Pruebas.c: 257: };Lab6Pruebas.c: 258: if( Actual_sensor != 0 && Antiguo_sensor == 0
      +                           && contadas < objetivo){
  1388   000E0C  502C               	movf	_Actual_sensor^0,w,c
  1389   000E0E  B4D8               	btfsc	status,2,c
  1390   000E10  D02B               	goto	l4295
  1391   000E12  5027               	movf	main@Antiguo_sensor^0,w,c
  1392   000E14  A4D8               	btfss	status,2,c
  1393   000E16  D028               	goto	l4295
  1394   000E18  503B               	movf	_objetivo^0,w,c
  1395   000E1A  5C39               	subwf	_contadas^0,w,c
  1396   000E1C  B0D8               	btfsc	status,0,c
  1397   000E1E  D024               	goto	l4295
  1398                           
  1399                           ;Lab6Pruebas.c: 263: contador = 0;
  1400   000E20  6A33               	clrf	_contador^0,c
  1401                           
  1402                           ;Lab6Pruebas.c: 265: _delay((unsigned long)((100)*(1000000/4000.0)));
  1403   000E22  0E21               	movlw	33
  1404   000E24  0100               	movlb	0	; () banked
  1405   000E26  6F64               	movwf	??_main& (0+255),b
  1406   000E28  0E76               	movlw	118
  1407   000E2A                     u3337:
  1408   000E2A  2EE8               	decfsz	wreg,f,c
  1409   000E2C  D7FE               	bra	u3337
  1410   000E2E  2F64               	decfsz	??_main& (0+255),f,b
  1411   000E30  D7FC               	bra	u3337
  1412   000E32  0000               	nop	
  1413                           
  1414                           ;Lab6Pruebas.c: 267: contadas++;
  1415   000E34  2A39               	incf	_contadas^0,f,c
  1416                           
  1417                           ;Lab6Pruebas.c: 268: faltantes--;
  1418   000E36  063A               	decf	_faltantes^0,f,c
  1419                           
  1420                           ;Lab6Pruebas.c: 270: if(contadas%10 == 0 && contadas != objetivo){
  1421   000E38  0E0A               	movlw	10
  1422   000E3A  6E1E               	movwf	___lbmod@divisor^0,c
  1423   000E3C  5039               	movf	_contadas^0,w,c
  1424   000E3E  EC14  F00D         	call	___lbmod
  1425   000E42  0900               	iorlw	0
  1426   000E44  A4D8               	btfss	status,2,c
  1427   000E46  D00E               	goto	l4293
  1428   000E48  503B               	movf	_objetivo^0,w,c
  1429   000E4A  1839               	xorwf	_contadas^0,w,c
  1430   000E4C  B4D8               	btfsc	status,2,c
  1431   000E4E  D00A               	goto	l4293
  1432                           
  1433                           ;Lab6Pruebas.c: 273: LATA2 = 1;
  1434   000E50  8489               	bsf	3977,2,c	;volatile
  1435                           
  1436                           ;Lab6Pruebas.c: 274: _delay((unsigned long)((500)*(1000000/4000.0)));
  1437   000E52  0EA3               	movlw	163
  1438   000E54  0100               	movlb	0	; () banked
  1439   000E56  6F64               	movwf	??_main& (0+255),b
  1440   000E58  0E55               	movlw	85
  1441   000E5A                     u3347:
  1442   000E5A  2EE8               	decfsz	wreg,f,c
  1443   000E5C  D7FE               	bra	u3347
  1444   000E5E  2F64               	decfsz	??_main& (0+255),f,b
  1445   000E60  D7FC               	bra	u3347
  1446                           
  1447                           ;Lab6Pruebas.c: 275: LATA2 = 0;
  1448   000E62  9489               	bcf	3977,2,c	;volatile
  1449   000E64                     l4293:
  1450                           
  1451                           ;Lab6Pruebas.c: 276: };Lab6Pruebas.c: 277: MostrarNumeros();
  1452   000E64  EC07  F00B         	call	_MostrarNumeros	;wreg free
  1453   000E68                     l4295:
  1454                           
  1455                           ;Lab6Pruebas.c: 278: };Lab6Pruebas.c: 281: Antiguo_sensor = Actual_sensor;
  1456   000E68  C02C  F027         	movff	_Actual_sensor,main@Antiguo_sensor
  1457                           
  1458                           ;Lab6Pruebas.c: 286: OcultarCursorLCD();
  1459   000E6C  ECBC  F00D         	call	_OcultarCursorLCD	;wreg free
  1460                           
  1461                           ;Lab6Pruebas.c: 287: DireccionaLCD(0x8B);
  1462   000E70  0E8B               	movlw	139
  1463   000E72  EC9B  F00D         	call	_DireccionaLCD
  1464                           
  1465                           ;Lab6Pruebas.c: 290: EscribeLCD_n8(faltantes,2);
  1466   000E76  0E02               	movlw	2
  1467   000E78  6E26               	movwf	EscribeLCD_n8@b^0,c
  1468   000E7A  503A               	movf	_faltantes^0,w,c
  1469   000E7C  ECED  F007         	call	_EscribeLCD_n8
  1470                           
  1471                           ;Lab6Pruebas.c: 295: if (contadas == objetivo) {
  1472   000E80  503B               	movf	_objetivo^0,w,c
  1473   000E82  1839               	xorwf	_contadas^0,w,c
  1474   000E84  A4D8               	btfss	status,2,c
  1475   000E86  D7B2               	goto	l4257
  1476                           
  1477                           ;Lab6Pruebas.c: 296: LATA2 = 1;
  1478   000E88  8489               	bsf	3977,2,c	;volatile
  1479                           
  1480                           ;Lab6Pruebas.c: 297: BorraLCD();
  1481   000E8A  ECD0  F00D         	call	_BorraLCD	;wreg free
  1482                           
  1483                           ;Lab6Pruebas.c: 298: MensajeLCD_Var(*FIN);
  1484   000E8E  C03F  F023         	movff	_FIN,MensajeLCD_Var@a
  1485   000E92  EC28  F00D         	call	_MensajeLCD_Var	;wreg free
  1486                           
  1487                           ;Lab6Pruebas.c: 299: _delay((unsigned long)((1000)*(1000000/4000.0)));
  1488   000E96  0E02               	movlw	2
  1489   000E98  0100               	movlb	0	; () banked
  1490   000E9A  6F65               	movwf	(??_main+1)& (0+255),b
  1491   000E9C  0E45               	movlw	69
  1492   000E9E  6F64               	movwf	??_main& (0+255),b
  1493   000EA0  0EA9               	movlw	169
  1494   000EA2                     u3357:
  1495   000EA2  2EE8               	decfsz	wreg,f,c
  1496   000EA4  D7FE               	bra	u3357
  1497   000EA6  2F64               	decfsz	??_main& (0+255),f,b
  1498   000EA8  D7FC               	bra	u3357
  1499   000EAA  2F65               	decfsz	(??_main+1)& (0+255),f,b
  1500   000EAC  D7FA               	bra	u3357
  1501   000EAE  D000               	nop2	
  1502                           
  1503                           ;Lab6Pruebas.c: 300: LATA2 = 0;
  1504   000EB0  9489               	bcf	3977,2,c	;volatile
  1505                           
  1506                           ;Lab6Pruebas.c: 302: };Lab6Pruebas.c: 303: };Lab6Pruebas.c: 310: ok = 0;
  1507                           
  1508                           ;Lab6Pruebas.c: 301: break;
  1509   000EB2  6A36               	clrf	_ok^0,c
  1510   000EB4                     l4315:
  1511                           
  1512                           ;Lab6Pruebas.c: 314: if(emergency == 1){
  1513   000EB4  0434               	decf	_emergency^0,w,c
  1514   000EB6  B4D8               	btfsc	status,2,c
  1515                           
  1516                           ;Lab6Pruebas.c: 315: Emergencia();
  1517   000EB8  ECFF  F00C         	call	_Emergencia	;wreg free
  1518                           
  1519                           ;Lab6Pruebas.c: 316: };Lab6Pruebas.c: 318: if(ok > 0){
  1520   000EBC  5036               	movf	_ok^0,w,c
  1521   000EBE  B4D8               	btfsc	status,2,c
  1522   000EC0  D7F9               	goto	l4315
  1523                           
  1524                           ;Lab6Pruebas.c: 319: ok = 0;
  1525   000EC2  6A36               	clrf	_ok^0,c
  1526                           
  1527                           ;Lab6Pruebas.c: 320: objetivo = 0;
  1528   000EC4  6A3B               	clrf	_objetivo^0,c
  1529                           
  1530                           ;Lab6Pruebas.c: 321: contadas = 0;
  1531   000EC6  6A39               	clrf	_contadas^0,c
  1532                           
  1533                           ;Lab6Pruebas.c: 322: input =0;
  1534   000EC8  6A38               	clrf	_input^0,c
  1535                           
  1536                           ;Lab6Pruebas.c: 323: MostrarNumeros();
  1537   000ECA  EC07  F00B         	call	_MostrarNumeros	;wreg free
  1538                           
  1539                           ;Lab6Pruebas.c: 324: break;
  1540   000ECE  D72F               	goto	l4193
  1541   000ED0                     __end_of_main:
  1542                           	callstack 0
  1543                           
  1544 ;; *************** function _MostrarNumeros *****************
  1545 ;; Defined at:
  1546 ;;		line 616 in file "Lab6Pruebas.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;		None
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;		None
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      void 
  1553 ;; Registers used:
  1554 ;;		wreg, status,2, status,0, cstack
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1560 ;;      Params:         0       0       0       0       0       0       0       0       0
  1561 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1562 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1563 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1564 ;;Total ram usage:        0 bytes
  1565 ;; Hardware stack levels used: 1
  1566 ;; Hardware stack levels required when called: 5
  1567 ;; This function calls:
  1568 ;;		_EEPROM_Write
  1569 ;;		___lbmod
  1570 ;; This function is called by:
  1571 ;;		_main
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           	psect	text1
  1576   00160E                     __ptext1:
  1577                           	callstack 0
  1578   00160E                     _MostrarNumeros:
  1579                           	callstack 25
  1580                           
  1581                           ;Lab6Pruebas.c: 619: LATD = contadas % 10;
  1582                           
  1583                           ;incstack = 0
  1584   00160E  0E0A               	movlw	10
  1585   001610  6E1E               	movwf	___lbmod@divisor^0,c
  1586   001612  5039               	movf	_contadas^0,w,c
  1587   001614  EC14  F00D         	call	___lbmod
  1588   001618  6E8C               	movwf	140,c	;volatile
  1589                           
  1590                           ;Lab6Pruebas.c: 622: if(contadas<10){
  1591   00161A  0E0A               	movlw	10
  1592   00161C  6039               	cpfslt	_contadas^0,c
  1593   00161E  D002               	goto	l4101
  1594                           
  1595                           ;Lab6Pruebas.c: 624: LATE = 0b101;
  1596   001620  0E05               	movlw	5
  1597   001622  D018               	goto	L5
  1598   001624                     l4101:
  1599   001624  0E14               	movlw	20
  1600   001626  6039               	cpfslt	_contadas^0,c
  1601   001628  D002               	goto	l4105
  1602                           
  1603                           ;Lab6Pruebas.c: 627: LATE=0b100;
  1604   00162A  0E04               	movlw	4
  1605   00162C  D013               	goto	L5
  1606   00162E                     l4105:
  1607   00162E  0E1E               	movlw	30
  1608   001630  6039               	cpfslt	_contadas^0,c
  1609   001632  D002               	goto	l4109
  1610                           
  1611                           ;Lab6Pruebas.c: 630: LATE=0b110;
  1612   001634  0E06               	movlw	6
  1613   001636  D00E               	goto	L5
  1614   001638                     l4109:
  1615   001638  0E28               	movlw	40
  1616   00163A  6039               	cpfslt	_contadas^0,c
  1617   00163C  D002               	goto	l4113
  1618                           
  1619                           ;Lab6Pruebas.c: 633: LATE=0b010;
  1620   00163E  0E02               	movlw	2
  1621   001640  D009               	goto	L5
  1622   001642                     l4113:
  1623   001642  0E32               	movlw	50
  1624   001644  6039               	cpfslt	_contadas^0,c
  1625   001646  D002               	goto	l4117
  1626                           
  1627                           ;Lab6Pruebas.c: 636: LATE = 0b011;
  1628   001648  0E03               	movlw	3
  1629   00164A  D004               	goto	L5
  1630   00164C                     l4117:
  1631   00164C  0E3C               	movlw	60
  1632   00164E  6039               	cpfslt	_contadas^0,c
  1633   001650  D002               	goto	l442
  1634                           
  1635                           ;Lab6Pruebas.c: 639: LATE = 0b111;
  1636   001652  0E07               	movlw	7
  1637   001654                     L5:
  1638   001654  6E8D               	movwf	141,c	;volatile
  1639   001656                     l442:
  1640                           
  1641                           ;Lab6Pruebas.c: 640: };Lab6Pruebas.c: 642: EEPROM_Write(0x01, objetivo);
  1642   001656  C03B  F01E         	movff	_objetivo,EEPROM_Write@data
  1643   00165A  0E01               	movlw	1
  1644   00165C  EC50  F00D         	call	_EEPROM_Write
  1645                           
  1646                           ;Lab6Pruebas.c: 643: EEPROM_Write(0x02, contadas);
  1647   001660  C039  F01E         	movff	_contadas,EEPROM_Write@data
  1648   001664  0E02               	movlw	2
  1649   001666  EC50  F00D         	call	_EEPROM_Write
  1650                           
  1651                           ;Lab6Pruebas.c: 644: EEPROM_Write(0x03, faltantes);
  1652   00166A  C03A  F01E         	movff	_faltantes,EEPROM_Write@data
  1653   00166E  0E03               	movlw	3
  1654   001670  EC50  F00D         	call	_EEPROM_Write
  1655   001674  0012               	return		;funcret
  1656   001676                     __end_of_MostrarNumeros:
  1657                           	callstack 0
  1658                           
  1659 ;; *************** function _EEPROM_Write *****************
  1660 ;; Defined at:
  1661 ;;		line 780 in file "Lab6Pruebas.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;  address         1    wreg     unsigned char 
  1664 ;;  data            1   29[COMRAM] unsigned char 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  address         1   30[COMRAM] unsigned char 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		wreg, status,2
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1676 ;;      Params:         1       0       0       0       0       0       0       0       0
  1677 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1678 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1679 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1680 ;;Total ram usage:        2 bytes
  1681 ;; Hardware stack levels used: 1
  1682 ;; Hardware stack levels required when called: 4
  1683 ;; This function calls:
  1684 ;;		Nothing
  1685 ;; This function is called by:
  1686 ;;		_MostrarNumeros
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text2
  1691   001AA0                     __ptext2:
  1692                           	callstack 0
  1693   001AA0                     _EEPROM_Write:
  1694                           	callstack 25
  1695                           
  1696                           ;incstack = 0
  1697                           ;EEPROM_Write@address stored from wreg
  1698   001AA0  6E1F               	movwf	EEPROM_Write@address^0,c
  1699                           
  1700                           ;Lab6Pruebas.c: 781: EEADR = address;
  1701   001AA2  C01F  FFA9         	movff	EEPROM_Write@address,4009	;volatile
  1702                           
  1703                           ;Lab6Pruebas.c: 782: EEDATA = data;
  1704   001AA6  C01E  FFA8         	movff	EEPROM_Write@data,4008	;volatile
  1705                           
  1706                           ;Lab6Pruebas.c: 783: EECON1bits.EEPGD = 0;
  1707   001AAA  9EA6               	bcf	166,7,c	;volsfr
  1708                           
  1709                           ;Lab6Pruebas.c: 784: EECON1bits.WREN = 1;
  1710   001AAC  84A6               	bsf	166,2,c	;volsfr
  1711                           
  1712                           ;Lab6Pruebas.c: 787: INTCONbits.GIE = 0;
  1713   001AAE  9EF2               	bcf	242,7,c	;volatile
  1714                           
  1715                           ;Lab6Pruebas.c: 788: EECON2 = 0x55;
  1716   001AB0  0E55               	movlw	85
  1717   001AB2  6EA7               	movwf	167,c	;volsfr
  1718                           
  1719                           ;Lab6Pruebas.c: 789: EECON2 = 0xAA;
  1720   001AB4  0EAA               	movlw	170
  1721   001AB6  6EA7               	movwf	167,c	;volsfr
  1722                           
  1723                           ;Lab6Pruebas.c: 790: EECON1bits.WR = 1;
  1724   001AB8  82A6               	bsf	166,1,c	;volsfr
  1725                           
  1726                           ;Lab6Pruebas.c: 791: INTCONbits.GIE = 1;
  1727   001ABA  8EF2               	bsf	242,7,c	;volatile
  1728   001ABC                     l517:
  1729   001ABC  B2A6               	btfsc	166,1,c	;volsfr
  1730   001ABE  D7FE               	goto	l517
  1731                           
  1732                           ;Lab6Pruebas.c: 794: EECON1bits.WREN = 0;
  1733   001AC0  94A6               	bcf	166,2,c	;volsfr
  1734   001AC2  0012               	return		;funcret
  1735   001AC4                     __end_of_EEPROM_Write:
  1736                           	callstack 0
  1737                           
  1738 ;; *************** function _EscribeLCD_n8 *****************
  1739 ;; Defined at:
  1740 ;;		line 149 in file "LibLCDXC8.h"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;  a               1    wreg     unsigned char 
  1743 ;;  b               1   37[COMRAM] unsigned char 
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;  a               1    3[BANK0 ] unsigned char 
  1746 ;;  unidad          1    2[BANK0 ] unsigned char 
  1747 ;;  decena          1    1[BANK0 ] unsigned char 
  1748 ;;  centena         1    0[BANK0 ] unsigned char 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		wreg, status,2, status,0, cstack
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1758 ;;      Params:         1       0       0       0       0       0       0       0       0
  1759 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1760 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1761 ;;      Totals:         1       4       0       0       0       0       0       0       0
  1762 ;;Total ram usage:        5 bytes
  1763 ;; Hardware stack levels used: 1
  1764 ;; Hardware stack levels required when called: 6
  1765 ;; This function calls:
  1766 ;;		_EnviaDato
  1767 ;;		_HabilitaLCD
  1768 ;;		_RetardoLCD
  1769 ;;		___lbdiv
  1770 ;;		___lbmod
  1771 ;; This function is called by:
  1772 ;;		_main
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           	psect	text3
  1777   000FDA                     __ptext3:
  1778                           	callstack 0
  1779   000FDA                     _EscribeLCD_n8:
  1780                           	callstack 24
  1781                           
  1782                           ;incstack = 0
  1783                           ;EscribeLCD_n8@a stored from wreg
  1784   000FDA  0100               	movlb	0	; () banked
  1785   000FDC  6F63               	movwf	EscribeLCD_n8@a& (0+255),b
  1786                           
  1787                           ;LibLCDXC8.h: 154: unsigned char centena,decena,unidad;;LibLCDXC8.h: 155: LATA3=1;
  1788   000FDE  8689               	bsf	3977,3,c	;volatile
  1789                           
  1790                           ;LibLCDXC8.h: 156: switch(b){
  1791   000FE0  D071               	goto	l4019
  1792   000FE2                     l3987:
  1793   000FE2  0E0A               	movlw	10
  1794   000FE4  6E1E               	movwf	___lbmod@divisor^0,c
  1795   000FE6  0100               	movlb	0	; () banked
  1796   000FE8  5163               	movf	EscribeLCD_n8@a& (0+255),w,b
  1797   000FEA  EC14  F00D         	call	___lbmod
  1798   000FEE  0100               	movlb	0	; () banked
  1799   000FF0  6F62               	movwf	EscribeLCD_n8@unidad& (0+255),b
  1800                           
  1801                           ;LibLCDXC8.h: 158: EnviaDato(unidad+48);
  1802   000FF2  5162               	movf	EscribeLCD_n8@unidad& (0+255),w,b
  1803   000FF4  0F30               	addlw	48
  1804   000FF6  EC44  F00C         	call	_EnviaDato
  1805                           
  1806                           ;LibLCDXC8.h: 159: HabilitaLCD();
  1807   000FFA  ECDA  F00D         	call	_HabilitaLCD	;wreg free
  1808                           
  1809                           ;LibLCDXC8.h: 160: RetardoLCD(4);
  1810   000FFE  0E04               	movlw	4
  1811   001000  EC9C  F00B         	call	_RetardoLCD
  1812                           
  1813                           ;LibLCDXC8.h: 161: break;
  1814   001004  0012               	return	
  1815   001006                     l3993:
  1816   001006  0E0A               	movlw	10
  1817   001008  6E22               	movwf	___lbdiv@divisor^0,c
  1818   00100A  0E64               	movlw	100
  1819   00100C  6E1E               	movwf	___lbmod@divisor^0,c
  1820   00100E  0100               	movlb	0	; () banked
  1821   001010  5163               	movf	EscribeLCD_n8@a& (0+255),w,b
  1822   001012  EC14  F00D         	call	___lbmod
  1823   001016  ECAC  F00C         	call	___lbdiv
  1824   00101A  0100               	movlb	0	; () banked
  1825   00101C  6F61               	movwf	EscribeLCD_n8@decena& (0+255),b
  1826                           
  1827                           ;LibLCDXC8.h: 163: unidad=a%10;
  1828   00101E  0E0A               	movlw	10
  1829   001020  6E1E               	movwf	___lbmod@divisor^0,c
  1830   001022  5163               	movf	EscribeLCD_n8@a& (0+255),w,b
  1831   001024  EC14  F00D         	call	___lbmod
  1832   001028  0100               	movlb	0	; () banked
  1833   00102A  6F62               	movwf	EscribeLCD_n8@unidad& (0+255),b
  1834                           
  1835                           ;LibLCDXC8.h: 164: EnviaDato(decena+48);
  1836   00102C  5161               	movf	EscribeLCD_n8@decena& (0+255),w,b
  1837   00102E  0F30               	addlw	48
  1838   001030  EC44  F00C         	call	_EnviaDato
  1839                           
  1840                           ;LibLCDXC8.h: 165: HabilitaLCD();
  1841   001034  ECDA  F00D         	call	_HabilitaLCD	;wreg free
  1842                           
  1843                           ;LibLCDXC8.h: 166: RetardoLCD(4);
  1844   001038  0E04               	movlw	4
  1845   00103A  EC9C  F00B         	call	_RetardoLCD
  1846                           
  1847                           ;LibLCDXC8.h: 167: EnviaDato(unidad+48);
  1848   00103E  0100               	movlb	0	; () banked
  1849   001040  5162               	movf	EscribeLCD_n8@unidad& (0+255),w,b
  1850   001042  0F30               	addlw	48
  1851   001044  EC44  F00C         	call	_EnviaDato
  1852                           
  1853                           ;LibLCDXC8.h: 168: HabilitaLCD();
  1854   001048  ECDA  F00D         	call	_HabilitaLCD	;wreg free
  1855                           
  1856                           ;LibLCDXC8.h: 169: RetardoLCD(4);
  1857   00104C  0E04               	movlw	4
  1858   00104E  EC9C  F00B         	call	_RetardoLCD
  1859                           
  1860                           ;LibLCDXC8.h: 170: break;
  1861   001052  0012               	return	
  1862   001054                     l4003:
  1863   001054  0E64               	movlw	100
  1864   001056  6E22               	movwf	___lbdiv@divisor^0,c
  1865   001058  0100               	movlb	0	; () banked
  1866   00105A  5163               	movf	EscribeLCD_n8@a& (0+255),w,b
  1867   00105C  ECAC  F00C         	call	___lbdiv
  1868   001060  0100               	movlb	0	; () banked
  1869   001062  6F60               	movwf	EscribeLCD_n8@centena& (0+255),b
  1870                           
  1871                           ;LibLCDXC8.h: 172: decena=(a%100)/10;
  1872   001064  0E0A               	movlw	10
  1873   001066  6E22               	movwf	___lbdiv@divisor^0,c
  1874   001068  0E64               	movlw	100
  1875   00106A  6E1E               	movwf	___lbmod@divisor^0,c
  1876   00106C  5163               	movf	EscribeLCD_n8@a& (0+255),w,b
  1877   00106E  EC14  F00D         	call	___lbmod
  1878   001072  ECAC  F00C         	call	___lbdiv
  1879   001076  0100               	movlb	0	; () banked
  1880   001078  6F61               	movwf	EscribeLCD_n8@decena& (0+255),b
  1881                           
  1882                           ;LibLCDXC8.h: 173: unidad=a%10;
  1883   00107A  0E0A               	movlw	10
  1884   00107C  6E1E               	movwf	___lbmod@divisor^0,c
  1885   00107E  5163               	movf	EscribeLCD_n8@a& (0+255),w,b
  1886   001080  EC14  F00D         	call	___lbmod
  1887   001084  0100               	movlb	0	; () banked
  1888   001086  6F62               	movwf	EscribeLCD_n8@unidad& (0+255),b
  1889                           
  1890                           ;LibLCDXC8.h: 174: EnviaDato(centena+48);
  1891   001088  5160               	movf	EscribeLCD_n8@centena& (0+255),w,b
  1892   00108A  0F30               	addlw	48
  1893   00108C  EC44  F00C         	call	_EnviaDato
  1894                           
  1895                           ;LibLCDXC8.h: 175: HabilitaLCD();
  1896   001090  ECDA  F00D         	call	_HabilitaLCD	;wreg free
  1897                           
  1898                           ;LibLCDXC8.h: 176: RetardoLCD(4);
  1899   001094  0E04               	movlw	4
  1900   001096  EC9C  F00B         	call	_RetardoLCD
  1901                           
  1902                           ;LibLCDXC8.h: 177: EnviaDato(decena+48);
  1903   00109A  0100               	movlb	0	; () banked
  1904   00109C  5161               	movf	EscribeLCD_n8@decena& (0+255),w,b
  1905   00109E  0F30               	addlw	48
  1906   0010A0  EC44  F00C         	call	_EnviaDato
  1907                           
  1908                           ;LibLCDXC8.h: 178: HabilitaLCD();
  1909   0010A4  ECDA  F00D         	call	_HabilitaLCD	;wreg free
  1910                           
  1911                           ;LibLCDXC8.h: 179: RetardoLCD(4);
  1912   0010A8  0E04               	movlw	4
  1913   0010AA  EC9C  F00B         	call	_RetardoLCD
  1914                           
  1915                           ;LibLCDXC8.h: 180: EnviaDato(unidad+48);
  1916   0010AE  0100               	movlb	0	; () banked
  1917   0010B0  5162               	movf	EscribeLCD_n8@unidad& (0+255),w,b
  1918   0010B2  0F30               	addlw	48
  1919   0010B4  EC44  F00C         	call	_EnviaDato
  1920                           
  1921                           ;LibLCDXC8.h: 181: HabilitaLCD();
  1922   0010B8  ECDA  F00D         	call	_HabilitaLCD	;wreg free
  1923                           
  1924                           ;LibLCDXC8.h: 182: RetardoLCD(4);
  1925   0010BC  0E04               	movlw	4
  1926   0010BE  EC9C  F00B         	call	_RetardoLCD
  1927                           
  1928                           ;LibLCDXC8.h: 183: break;
  1929   0010C2  0012               	return	
  1930   0010C4                     l4019:
  1931   0010C4  5026               	movf	EscribeLCD_n8@b^0,w,c
  1932                           
  1933                           ; Switch size 1, requested type "simple"
  1934                           ; Number of cases is 3, Range of values is 1 to 3
  1935                           ; switch strategies available:
  1936                           ; Name         Instructions Cycles
  1937                           ; simple_byte           10     6 (average)
  1938                           ;	Chosen strategy is simple_byte
  1939   0010C6  0A01               	xorlw	1	; case 1
  1940   0010C8  B4D8               	btfsc	status,2,c
  1941   0010CA  D78B               	goto	l3987
  1942   0010CC  0A03               	xorlw	3	; case 2
  1943   0010CE  B4D8               	btfsc	status,2,c
  1944   0010D0  D79A               	goto	l3993
  1945   0010D2  0A01               	xorlw	1	; case 3
  1946   0010D4  A4D8               	btfss	status,2,c
  1947   0010D6  0012               	return	
  1948   0010D8  D7BD               	goto	l4003
  1949   0010DA                     __end_of_EscribeLCD_n8:
  1950                           	callstack 0
  1951                           
  1952 ;; *************** function ___lbmod *****************
  1953 ;; Defined at:
  1954 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbmod.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;  dividend        1    wreg     unsigned char 
  1957 ;;  divisor         1   29[COMRAM] unsigned char 
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;  dividend        1   30[COMRAM] unsigned char 
  1960 ;;  rem             1   32[COMRAM] unsigned char 
  1961 ;;  counter         1   31[COMRAM] unsigned char 
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      unsigned char 
  1964 ;; Registers used:
  1965 ;;		wreg, status,2, status,0
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1971 ;;      Params:         1       0       0       0       0       0       0       0       0
  1972 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1973 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1974 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1975 ;;Total ram usage:        4 bytes
  1976 ;; Hardware stack levels used: 1
  1977 ;; Hardware stack levels required when called: 4
  1978 ;; This function calls:
  1979 ;;		Nothing
  1980 ;; This function is called by:
  1981 ;;		_EscribeLCD_n8
  1982 ;;		_main
  1983 ;;		_MostrarNumeros
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text4
  1988   001A28                     __ptext4:
  1989                           	callstack 0
  1990   001A28                     ___lbmod:
  1991                           	callstack 26
  1992                           
  1993                           ;incstack = 0
  1994                           ;___lbmod@dividend stored from wreg
  1995   001A28  6E1F               	movwf	___lbmod@dividend^0,c
  1996   001A2A  0E08               	movlw	8
  1997   001A2C  6E20               	movwf	___lbmod@counter^0,c
  1998   001A2E  6A21               	clrf	___lbmod@rem^0,c
  1999   001A30                     l3971:
  2000   001A30  90D8               	bcf	status,0,c
  2001   001A32  341F               	rlcf	___lbmod@dividend^0,w,c
  2002   001A34  3421               	rlcf	___lbmod@rem^0,w,c
  2003   001A36  6E21               	movwf	___lbmod@rem^0,c
  2004   001A38  90D8               	bcf	status,0,c
  2005   001A3A  361F               	rlcf	___lbmod@dividend^0,f,c
  2006   001A3C  501E               	movf	___lbmod@divisor^0,w,c
  2007   001A3E  5C21               	subwf	___lbmod@rem^0,w,c
  2008   001A40  A0D8               	btfss	status,0,c
  2009   001A42  D002               	goto	l3979
  2010   001A44  501E               	movf	___lbmod@divisor^0,w,c
  2011   001A46  5E21               	subwf	___lbmod@rem^0,f,c
  2012   001A48                     l3979:
  2013   001A48  2E20               	decfsz	___lbmod@counter^0,f,c
  2014   001A4A  D7F2               	goto	l3971
  2015   001A4C  5021               	movf	___lbmod@rem^0,w,c
  2016   001A4E  0012               	return		;funcret
  2017   001A50                     __end_of___lbmod:
  2018                           	callstack 0
  2019                           
  2020 ;; *************** function ___lbdiv *****************
  2021 ;; Defined at:
  2022 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbdiv.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  dividend        1    wreg     unsigned char 
  2025 ;;  divisor         1   33[COMRAM] unsigned char 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  dividend        1   34[COMRAM] unsigned char 
  2028 ;;  quotient        1   36[COMRAM] unsigned char 
  2029 ;;  counter         1   35[COMRAM] unsigned char 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      unsigned char 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2, status,0
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2039 ;;      Params:         1       0       0       0       0       0       0       0       0
  2040 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2041 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2042 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2043 ;;Total ram usage:        4 bytes
  2044 ;; Hardware stack levels used: 1
  2045 ;; Hardware stack levels required when called: 4
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		_EscribeLCD_n8
  2050 ;;		_main
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           	psect	text5
  2055   001958                     __ptext5:
  2056                           	callstack 0
  2057   001958                     ___lbdiv:
  2058                           	callstack 26
  2059                           
  2060                           ;incstack = 0
  2061                           ;___lbdiv@dividend stored from wreg
  2062   001958  6E23               	movwf	___lbdiv@dividend^0,c
  2063   00195A  6A25               	clrf	___lbdiv@quotient^0,c
  2064   00195C  5022               	movf	___lbdiv@divisor^0,w,c
  2065   00195E  B4D8               	btfsc	status,2,c
  2066   001960  D015               	goto	l3963
  2067   001962  0E01               	movlw	1
  2068   001964  6E24               	movwf	___lbdiv@counter^0,c
  2069   001966  D003               	goto	l3951
  2070   001968                     l3947:
  2071   001968  90D8               	bcf	status,0,c
  2072   00196A  3622               	rlcf	___lbdiv@divisor^0,f,c
  2073   00196C  2A24               	incf	___lbdiv@counter^0,f,c
  2074   00196E                     l3951:
  2075   00196E  AE22               	btfss	___lbdiv@divisor^0,7,c
  2076   001970  D7FB               	goto	l3947
  2077   001972                     u3020:
  2078   001972  90D8               	bcf	status,0,c
  2079   001974  3625               	rlcf	___lbdiv@quotient^0,f,c
  2080   001976  5022               	movf	___lbdiv@divisor^0,w,c
  2081   001978  5C23               	subwf	___lbdiv@dividend^0,w,c
  2082   00197A  A0D8               	btfss	status,0,c
  2083   00197C  D003               	goto	l3959
  2084   00197E  5022               	movf	___lbdiv@divisor^0,w,c
  2085   001980  5E23               	subwf	___lbdiv@dividend^0,f,c
  2086   001982  8025               	bsf	___lbdiv@quotient^0,0,c
  2087   001984                     l3959:
  2088   001984  90D8               	bcf	status,0,c
  2089   001986  3222               	rrcf	___lbdiv@divisor^0,f,c
  2090   001988  2E24               	decfsz	___lbdiv@counter^0,f,c
  2091   00198A  D7F3               	goto	u3020
  2092   00198C                     l3963:
  2093   00198C  5025               	movf	___lbdiv@quotient^0,w,c
  2094   00198E  0012               	return		;funcret
  2095   001990                     __end_of___lbdiv:
  2096                           	callstack 0
  2097                           
  2098 ;; *************** function _Emergencia *****************
  2099 ;; Defined at:
  2100 ;;		line 649 in file "Lab6Pruebas.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;		None
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;		None
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  1    wreg      void 
  2107 ;; Registers used:
  2108 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2114 ;;      Params:         0       0       0       0       0       0       0       0       0
  2115 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2116 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2117 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2118 ;;Total ram usage:        0 bytes
  2119 ;; Hardware stack levels used: 1
  2120 ;; Hardware stack levels required when called: 8
  2121 ;; This function calls:
  2122 ;;		_BorraLCD
  2123 ;;		_DireccionaLCD
  2124 ;;		_MensajeLCD_Var
  2125 ;; This function is called by:
  2126 ;;		_main
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text6
  2131   0019FE                     __ptext6:
  2132                           	callstack 0
  2133   0019FE                     _Emergencia:
  2134                           	callstack 22
  2135                           
  2136                           ;Lab6Pruebas.c: 650: LATE = 0b001;
  2137                           
  2138                           ;incstack = 0
  2139   0019FE  0E01               	movlw	1
  2140   001A00  6E8D               	movwf	141,c	;volatile
  2141                           
  2142                           ;Lab6Pruebas.c: 651: LATD = 8;
  2143   001A02  0E08               	movlw	8
  2144   001A04  6E8C               	movwf	140,c	;volatile
  2145                           
  2146                           ;Lab6Pruebas.c: 652: BorraLCD();
  2147   001A06  ECD0  F00D         	call	_BorraLCD	;wreg free
  2148                           
  2149                           ;Lab6Pruebas.c: 653: MensajeLCD_Var("    EMERGENCY");
  2150   001A0A  0E65               	movlw	low STR_9
  2151   001A0C  6E23               	movwf	MensajeLCD_Var@a^0,c
  2152   001A0E  EC28  F00D         	call	_MensajeLCD_Var	;wreg free
  2153                           
  2154                           ;Lab6Pruebas.c: 654: DireccionaLCD(0xC0);
  2155   001A12  0EC0               	movlw	192
  2156   001A14  EC9B  F00D         	call	_DireccionaLCD
  2157                           
  2158                           ;Lab6Pruebas.c: 655: MensajeLCD_Var("      STOP");
  2159   001A18  0E8A               	movlw	low STR_10
  2160   001A1A  6E23               	movwf	MensajeLCD_Var@a^0,c
  2161   001A1C  EC28  F00D         	call	_MensajeLCD_Var	;wreg free
  2162                           
  2163                           ;Lab6Pruebas.c: 656: CCPR1L=1;
  2164   001A20  0E01               	movlw	1
  2165   001A22  6EBE               	movwf	190,c	;volatile
  2166   001A24                     l4093:
  2167                           
  2168                           ;Lab6Pruebas.c: 659: GIE = 0;
  2169   001A24  9EF2               	bcf	4082,7,c	;volatile
  2170   001A26  D7FE               	goto	l4093
  2171   001A28                     __end_of_Emergencia:
  2172                           	callstack 0
  2173                           
  2174 ;; *************** function _MensajeLCD_Var *****************
  2175 ;; Defined at:
  2176 ;;		line 236 in file "LibLCDXC8.h"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  a               1   34[COMRAM] PTR unsigned char 
  2179 ;;		 -> STR_10(11), STR_9(14), STR_6(11), STR_5(12), 
  2180 ;;		 -> STR_4(16), STR_3(11), STR_2(16), STR_1(17), 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2192 ;;      Params:         1       0       0       0       0       0       0       0       0
  2193 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2194 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2195 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2196 ;;Total ram usage:        1 bytes
  2197 ;; Hardware stack levels used: 1
  2198 ;; Hardware stack levels required when called: 7
  2199 ;; This function calls:
  2200 ;;		_EscribeLCD_c
  2201 ;; This function is called by:
  2202 ;;		_main
  2203 ;;		_Emergencia
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           	psect	text7
  2208   001A50                     __ptext7:
  2209                           	callstack 0
  2210   001A50                     _MensajeLCD_Var:
  2211                           	callstack 23
  2212                           
  2213                           ;LibLCDXC8.h: 240: while (*a) {
  2214                           
  2215                           ;incstack = 0
  2216   001A50  D009               	goto	l3883
  2217   001A52                     l3879:
  2218                           
  2219                           ;LibLCDXC8.h: 241: EscribeLCD_c(*a);
  2220   001A52  C023  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  2221   001A56                     	if	1	;There is more than 1 active tblptr byte
  2222   001A56  0E08               	movlw	high __smallconst
  2223   001A58  6EF7               	movwf	tblptrh,c
  2224   001A5A                     	endif
  2225   001A5A                     	if	0	;tblptru may be non-zero
  2226   001A5A                     	endif
  2227   001A5A                     	if	0	;tblptru may be non-zero
  2228   001A5A                     	endif
  2229   001A5A  0008               	tblrd		*
  2230   001A5C  50F5               	movf	tablat,w,c
  2231   001A5E  EC90  F00D         	call	_EscribeLCD_c
  2232                           
  2233                           ;LibLCDXC8.h: 242: a++;
  2234   001A62  2A23               	incf	MensajeLCD_Var@a^0,f,c
  2235   001A64                     l3883:
  2236   001A64  C023  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  2237   001A68                     	if	1	;There is more than 1 active tblptr byte
  2238   001A68  0E08               	movlw	high __smallconst
  2239   001A6A  6EF7               	movwf	tblptrh,c
  2240   001A6C                     	endif
  2241   001A6C                     	if	0	;tblptru may be non-zero
  2242   001A6C                     	endif
  2243   001A6C                     	if	0	;tblptru may be non-zero
  2244   001A6C                     	endif
  2245   001A6C  0008               	tblrd		*
  2246   001A6E  50F5               	movf	tablat,w,c
  2247   001A70  0900               	iorlw	0
  2248   001A72  B4D8               	btfsc	status,2,c
  2249   001A74  0012               	return	
  2250   001A76  D7ED               	goto	l3879
  2251   001A78                     __end_of_MensajeLCD_Var:
  2252                           	callstack 0
  2253                           
  2254 ;; *************** function _Bienvenida *****************
  2255 ;; Defined at:
  2256 ;;		line 665 in file "Lab6Pruebas.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;		None
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;  pos             1    1[BANK0 ] unsigned char 
  2261 ;;  max_pos         1    0[BANK0 ] unsigned char 
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2271 ;;      Params:         0       0       0       0       0       0       0       0       0
  2272 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2273 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2274 ;;      Totals:         1       2       0       0       0       0       0       0       0
  2275 ;;Total ram usage:        3 bytes
  2276 ;; Hardware stack levels used: 1
  2277 ;; Hardware stack levels required when called: 8
  2278 ;; This function calls:
  2279 ;;		_ConfiguraLCD
  2280 ;;		_CrearCaracter
  2281 ;;		_DireccionaLCD
  2282 ;;		_EscribeLCD_c
  2283 ;;		_InicializaLCD
  2284 ;;		_MostrarCursorLCD
  2285 ;;		_OcultarCursorLCD
  2286 ;; This function is called by:
  2287 ;;		_main
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           	psect	text8
  2292   000ED0                     __ptext8:
  2293                           	callstack 0
  2294   000ED0                     _Bienvenida:
  2295                           	callstack 22
  2296                           
  2297                           ;Lab6Pruebas.c: 667: unsigned char max_pos = 15;
  2298                           
  2299                           ;incstack = 0
  2300   000ED0  0E0F               	movlw	15
  2301   000ED2  0100               	movlb	0	; () banked
  2302   000ED4  6F60               	movwf	Bienvenida@max_pos& (0+255),b
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;Lab6Pruebas.c: 668: ConfiguraLCD(4);
  2306   000ED6  0E04               	movlw	4
  2307   000ED8  EC84  F00D         	call	_ConfiguraLCD
  2308                           
  2309                           ;Lab6Pruebas.c: 669: InicializaLCD();
  2310   000EDC  EC09  F00A         	call	_InicializaLCD	;wreg free
  2311                           
  2312                           ;Lab6Pruebas.c: 670: OcultarCursorLCD();
  2313   000EE0  ECBC  F00D         	call	_OcultarCursorLCD	;wreg free
  2314                           
  2315                           ;Lab6Pruebas.c: 671: CrearCaracter(0, banda1);
  2316   000EE4  0E09               	movlw	low _banda1
  2317   000EE6  6E22               	movwf	CrearCaracter@data^0,c
  2318   000EE8  0E00               	movlw	0
  2319   000EEA  EC6F  F00B         	call	_CrearCaracter
  2320                           
  2321                           ;Lab6Pruebas.c: 672: CrearCaracter(1, banda2);
  2322   000EEE  0E01               	movlw	low _banda2
  2323   000EF0  6E22               	movwf	CrearCaracter@data^0,c
  2324   000EF2  0E01               	movlw	1
  2325   000EF4  EC6F  F00B         	call	_CrearCaracter
  2326                           
  2327                           ;Lab6Pruebas.c: 673: for (pos = 0; pos <= max_pos; pos++) {
  2328   000EF8  0100               	movlb	0	; () banked
  2329   000EFA  6B61               	clrf	Bienvenida@pos& (0+255),b
  2330   000EFC  D011               	goto	l4043
  2331   000EFE                     l4037:
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;Lab6Pruebas.c: 675: DireccionaLCD(0x80 + pos);
  2335   000EFE  5161               	movf	Bienvenida@pos& (0+255),w,b
  2336   000F00  0F80               	addlw	128
  2337   000F02  EC9B  F00D         	call	_DireccionaLCD
  2338                           
  2339                           ;Lab6Pruebas.c: 676: EscribeLCD_c(1);
  2340   000F06  0E01               	movlw	1
  2341   000F08  EC90  F00D         	call	_EscribeLCD_c
  2342                           
  2343                           ;Lab6Pruebas.c: 677: _delay((unsigned long)((50)*(1000000/4000.0)));
  2344   000F0C  0E11               	movlw	17
  2345   000F0E  6E26               	movwf	??_Bienvenida^0,c
  2346   000F10  0E3A               	movlw	58
  2347   000F12                     u3367:
  2348   000F12  2EE8               	decfsz	wreg,f,c
  2349   000F14  D7FE               	bra	u3367
  2350   000F16  2E26               	decfsz	??_Bienvenida^0,f,c
  2351   000F18  D7FC               	bra	u3367
  2352   000F1A  D000               	nop2	
  2353   000F1C  0100               	movlb	0	; () banked
  2354   000F1E  2B61               	incf	Bienvenida@pos& (0+255),f,b
  2355   000F20                     l4043:
  2356                           
  2357                           ; BSR set to: 0
  2358   000F20  5161               	movf	Bienvenida@pos& (0+255),w,b
  2359   000F22  5D60               	subwf	Bienvenida@max_pos& (0+255),w,b
  2360   000F24  B0D8               	btfsc	status,0,c
  2361   000F26  D7EB               	goto	l4037
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;Lab6Pruebas.c: 678: };Lab6Pruebas.c: 680: for (pos = 0; pos < max_pos; pos++) {
  2365   000F28  6B61               	clrf	Bienvenida@pos& (0+255),b
  2366   000F2A  D021               	goto	l4057
  2367   000F2C                     l4045:
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;Lab6Pruebas.c: 682: DireccionaLCD(0x80 + pos);
  2371   000F2C  5161               	movf	Bienvenida@pos& (0+255),w,b
  2372   000F2E  0F80               	addlw	128
  2373   000F30  EC9B  F00D         	call	_DireccionaLCD
  2374                           
  2375                           ;Lab6Pruebas.c: 683: EscribeLCD_c(0);
  2376   000F34  0E00               	movlw	0
  2377   000F36  EC90  F00D         	call	_EscribeLCD_c
  2378                           
  2379                           ;Lab6Pruebas.c: 684: _delay((unsigned long)((50)*(1000000/4000.0)));
  2380   000F3A  0E11               	movlw	17
  2381   000F3C  6E26               	movwf	??_Bienvenida^0,c
  2382   000F3E  0E3A               	movlw	58
  2383   000F40                     u3377:
  2384   000F40  2EE8               	decfsz	wreg,f,c
  2385   000F42  D7FE               	bra	u3377
  2386   000F44  2E26               	decfsz	??_Bienvenida^0,f,c
  2387   000F46  D7FC               	bra	u3377
  2388   000F48  D000               	nop2	
  2389                           
  2390                           ;Lab6Pruebas.c: 685: DireccionaLCD(0x80 + pos);
  2391   000F4A  0100               	movlb	0	; () banked
  2392   000F4C  5161               	movf	Bienvenida@pos& (0+255),w,b
  2393   000F4E  0F80               	addlw	128
  2394   000F50  EC9B  F00D         	call	_DireccionaLCD
  2395                           
  2396                           ;Lab6Pruebas.c: 686: EscribeLCD_c(1);
  2397   000F54  0E01               	movlw	1
  2398   000F56  EC90  F00D         	call	_EscribeLCD_c
  2399                           
  2400                           ;Lab6Pruebas.c: 687: _delay((unsigned long)((50)*(1000000/4000.0)));
  2401   000F5A  0E11               	movlw	17
  2402   000F5C  6E26               	movwf	??_Bienvenida^0,c
  2403   000F5E  0E3A               	movlw	58
  2404   000F60                     u3387:
  2405   000F60  2EE8               	decfsz	wreg,f,c
  2406   000F62  D7FE               	bra	u3387
  2407   000F64  2E26               	decfsz	??_Bienvenida^0,f,c
  2408   000F66  D7FC               	bra	u3387
  2409   000F68  D000               	nop2	
  2410   000F6A  0100               	movlb	0	; () banked
  2411   000F6C  2B61               	incf	Bienvenida@pos& (0+255),f,b
  2412   000F6E                     l4057:
  2413                           
  2414                           ; BSR set to: 0
  2415   000F6E  5160               	movf	Bienvenida@max_pos& (0+255),w,b
  2416   000F70  5D61               	subwf	Bienvenida@pos& (0+255),w,b
  2417   000F72  A0D8               	btfss	status,0,c
  2418   000F74  D7DB               	goto	l4045
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;Lab6Pruebas.c: 688: };Lab6Pruebas.c: 690: DireccionaLCD(0x80 + max_pos);
  2422   000F76  5160               	movf	Bienvenida@max_pos& (0+255),w,b
  2423   000F78  0F80               	addlw	128
  2424   000F7A  EC9B  F00D         	call	_DireccionaLCD
  2425                           
  2426                           ;Lab6Pruebas.c: 691: EscribeLCD_c(0);
  2427   000F7E  0E00               	movlw	0
  2428   000F80  EC90  F00D         	call	_EscribeLCD_c
  2429                           
  2430                           ;Lab6Pruebas.c: 692: for (pos = max_pos; pos > 0; pos--) {
  2431   000F84  C060  F061         	movff	Bienvenida@max_pos,Bienvenida@pos
  2432   000F88                     l4063:
  2433   000F88  0100               	movlb	0	; () banked
  2434   000F8A  5161               	movf	Bienvenida@pos& (0+255),w,b
  2435   000F8C  B4D8               	btfsc	status,2,c
  2436   000F8E  D022               	goto	l4081
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;Lab6Pruebas.c: 694: DireccionaLCD(0x80 + pos);
  2440   000F90  5161               	movf	Bienvenida@pos& (0+255),w,b
  2441   000F92  0F80               	addlw	128
  2442   000F94  EC9B  F00D         	call	_DireccionaLCD
  2443                           
  2444                           ;Lab6Pruebas.c: 695: EscribeLCD_c(0);
  2445   000F98  0E00               	movlw	0
  2446   000F9A  EC90  F00D         	call	_EscribeLCD_c
  2447                           
  2448                           ;Lab6Pruebas.c: 696: _delay((unsigned long)((50)*(1000000/4000.0)));
  2449   000F9E  0E11               	movlw	17
  2450   000FA0  6E26               	movwf	??_Bienvenida^0,c
  2451   000FA2  0E3A               	movlw	58
  2452   000FA4                     u3397:
  2453   000FA4  2EE8               	decfsz	wreg,f,c
  2454   000FA6  D7FE               	bra	u3397
  2455   000FA8  2E26               	decfsz	??_Bienvenida^0,f,c
  2456   000FAA  D7FC               	bra	u3397
  2457   000FAC  D000               	nop2	
  2458                           
  2459                           ;Lab6Pruebas.c: 697: DireccionaLCD(0x80 + pos);
  2460   000FAE  0100               	movlb	0	; () banked
  2461   000FB0  5161               	movf	Bienvenida@pos& (0+255),w,b
  2462   000FB2  0F80               	addlw	128
  2463   000FB4  EC9B  F00D         	call	_DireccionaLCD
  2464                           
  2465                           ;Lab6Pruebas.c: 698: EscribeLCD_c(1);
  2466   000FB8  0E01               	movlw	1
  2467   000FBA  EC90  F00D         	call	_EscribeLCD_c
  2468                           
  2469                           ;Lab6Pruebas.c: 699: _delay((unsigned long)((50)*(1000000/4000.0)));
  2470   000FBE  0E11               	movlw	17
  2471   000FC0  6E26               	movwf	??_Bienvenida^0,c
  2472   000FC2  0E3A               	movlw	58
  2473   000FC4                     u3407:
  2474   000FC4  2EE8               	decfsz	wreg,f,c
  2475   000FC6  D7FE               	bra	u3407
  2476   000FC8  2E26               	decfsz	??_Bienvenida^0,f,c
  2477   000FCA  D7FC               	bra	u3407
  2478   000FCC  D000               	nop2	
  2479   000FCE  0100               	movlb	0	; () banked
  2480   000FD0  0761               	decf	Bienvenida@pos& (0+255),f,b
  2481   000FD2  D7DA               	goto	l4063
  2482   000FD4                     l4081:
  2483                           
  2484                           ; BSR set to: 0
  2485                           ;Lab6Pruebas.c: 703: MostrarCursorLCD();
  2486   000FD4  ECC6  F00D         	call	_MostrarCursorLCD	;wreg free
  2487   000FD8  0012               	return		;funcret
  2488   000FDA                     __end_of_Bienvenida:
  2489                           	callstack 0
  2490                           
  2491 ;; *************** function _OcultarCursorLCD *****************
  2492 ;; Defined at:
  2493 ;;		line 314 in file "LibLCDXC8.h"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      void 
  2500 ;; Registers used:
  2501 ;;		wreg, status,2, status,0, cstack
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2507 ;;      Params:         0       0       0       0       0       0       0       0       0
  2508 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2509 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2510 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2511 ;;Total ram usage:        0 bytes
  2512 ;; Hardware stack levels used: 1
  2513 ;; Hardware stack levels required when called: 6
  2514 ;; This function calls:
  2515 ;;		_EnviaDato
  2516 ;;		_HabilitaLCD
  2517 ;;		_RetardoLCD
  2518 ;; This function is called by:
  2519 ;;		_main
  2520 ;;		_Bienvenida
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text9
  2525   001B78                     __ptext9:
  2526                           	callstack 0
  2527   001B78                     _OcultarCursorLCD:
  2528                           	callstack 24
  2529                           
  2530                           ;LibLCDXC8.h: 315: LATA3 = 0;
  2531                           
  2532                           ;incstack = 0
  2533   001B78  9689               	bcf	3977,3,c	;volatile
  2534                           
  2535                           ;LibLCDXC8.h: 316: EnviaDato(0x0C);
  2536   001B7A  0E0C               	movlw	12
  2537   001B7C  EC44  F00C         	call	_EnviaDato
  2538                           
  2539                           ;LibLCDXC8.h: 317: HabilitaLCD();
  2540   001B80  ECDA  F00D         	call	_HabilitaLCD	;wreg free
  2541                           
  2542                           ;LibLCDXC8.h: 318: RetardoLCD(4);
  2543   001B84  0E04               	movlw	4
  2544   001B86  EC9C  F00B         	call	_RetardoLCD
  2545   001B8A  0012               	return		;funcret
  2546   001B8C                     __end_of_OcultarCursorLCD:
  2547                           	callstack 0
  2548                           
  2549 ;; *************** function _MostrarCursorLCD *****************
  2550 ;; Defined at:
  2551 ;;		line 320 in file "LibLCDXC8.h"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;		None
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;		None
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  1    wreg      void 
  2558 ;; Registers used:
  2559 ;;		wreg, status,2, status,0, cstack
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2565 ;;      Params:         0       0       0       0       0       0       0       0       0
  2566 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2567 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2568 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2569 ;;Total ram usage:        0 bytes
  2570 ;; Hardware stack levels used: 1
  2571 ;; Hardware stack levels required when called: 6
  2572 ;; This function calls:
  2573 ;;		_EnviaDato
  2574 ;;		_HabilitaLCD
  2575 ;;		_RetardoLCD
  2576 ;; This function is called by:
  2577 ;;		_main
  2578 ;;		_Bienvenida
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           	psect	text10
  2583   001B8C                     __ptext10:
  2584                           	callstack 0
  2585   001B8C                     _MostrarCursorLCD:
  2586                           	callstack 24
  2587                           
  2588                           ;LibLCDXC8.h: 321: LATA3 = 0;
  2589                           
  2590                           ;incstack = 0
  2591   001B8C  9689               	bcf	3977,3,c	;volatile
  2592                           
  2593                           ;LibLCDXC8.h: 322: EnviaDato(0x0E);
  2594   001B8E  0E0E               	movlw	14
  2595   001B90  EC44  F00C         	call	_EnviaDato
  2596                           
  2597                           ;LibLCDXC8.h: 324: HabilitaLCD();
  2598   001B94  ECDA  F00D         	call	_HabilitaLCD	;wreg free
  2599                           
  2600                           ;LibLCDXC8.h: 325: RetardoLCD(4);
  2601   001B98  0E04               	movlw	4
  2602   001B9A  EC9C  F00B         	call	_RetardoLCD
  2603   001B9E  0012               	return		;funcret
  2604   001BA0                     __end_of_MostrarCursorLCD:
  2605                           	callstack 0
  2606                           
  2607 ;; *************** function _InicializaLCD *****************
  2608 ;; Defined at:
  2609 ;;		line 75 in file "LibLCDXC8.h"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;		None
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;		None
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  1    wreg      void 
  2616 ;; Registers used:
  2617 ;;		wreg, status,2, status,0, cstack
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2623 ;;      Params:         0       0       0       0       0       0       0       0       0
  2624 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2625 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2626 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2627 ;;Total ram usage:        0 bytes
  2628 ;; Hardware stack levels used: 1
  2629 ;; Hardware stack levels required when called: 7
  2630 ;; This function calls:
  2631 ;;		_BorraLCD
  2632 ;;		_EnviaDato
  2633 ;;		_HabilitaLCD
  2634 ;;		_RetardoLCD
  2635 ;; This function is called by:
  2636 ;;		_main
  2637 ;;		_Bienvenida
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641                           	psect	text11
  2642   001412                     __ptext11:
  2643                           	callstack 0
  2644   001412                     _InicializaLCD:
  2645                           	callstack 23
  2646                           
  2647                           ;LibLCDXC8.h: 77: LATA3=0;
  2648                           
  2649                           ;incstack = 0
  2650   001412  9689               	bcf	3977,3,c	;volatile
  2651                           
  2652                           ;LibLCDXC8.h: 78: if(interfaz==4)
  2653   001414  0E04               	movlw	4
  2654   001416  1841               	xorwf	_interfaz^0,w,c
  2655   001418  A4D8               	btfss	status,2,c
  2656   00141A  D004               	goto	l3829
  2657                           
  2658                           ;LibLCDXC8.h: 79: LATD=(LATD & 0b00001111) | 0x30;
  2659   00141C  508C               	movf	140,w,c	;volatile
  2660   00141E  0B0F               	andlw	15
  2661   001420  0930               	iorlw	48
  2662   001422  D001               	goto	L6
  2663   001424                     l3829:
  2664                           
  2665                           ;LibLCDXC8.h: 80: else;LibLCDXC8.h: 81: LATD=0x3F;
  2666   001424  0E3F               	movlw	63
  2667   001426                     L6:
  2668   001426  6E8C               	movwf	140,c	;volatile
  2669                           
  2670                           ;LibLCDXC8.h: 82: HabilitaLCD();
  2671   001428  ECDA  F00D         	call	_HabilitaLCD	;wreg free
  2672                           
  2673                           ;LibLCDXC8.h: 83: RetardoLCD(1);
  2674   00142C  0E01               	movlw	1
  2675   00142E  EC9C  F00B         	call	_RetardoLCD
  2676                           
  2677                           ;LibLCDXC8.h: 84: if(interfaz==4)
  2678   001432  0E04               	movlw	4
  2679   001434  1841               	xorwf	_interfaz^0,w,c
  2680   001436  A4D8               	btfss	status,2,c
  2681   001438  D004               	goto	l3839
  2682                           
  2683                           ;LibLCDXC8.h: 85: LATD=(LATD & 0b00001111) | 0x30;
  2684   00143A  508C               	movf	140,w,c	;volatile
  2685   00143C  0B0F               	andlw	15
  2686   00143E  0930               	iorlw	48
  2687   001440  D001               	goto	L7
  2688   001442                     l3839:
  2689                           
  2690                           ;LibLCDXC8.h: 86: else;LibLCDXC8.h: 87: LATD=0x3F;
  2691   001442  0E3F               	movlw	63
  2692   001444                     L7:
  2693   001444  6E8C               	movwf	140,c	;volatile
  2694                           
  2695                           ;LibLCDXC8.h: 88: HabilitaLCD();
  2696   001446  ECDA  F00D         	call	_HabilitaLCD	;wreg free
  2697                           
  2698                           ;LibLCDXC8.h: 89: RetardoLCD(3);
  2699   00144A  0E03               	movlw	3
  2700   00144C  EC9C  F00B         	call	_RetardoLCD
  2701                           
  2702                           ;LibLCDXC8.h: 90: if(interfaz==4)
  2703   001450  0E04               	movlw	4
  2704   001452  1841               	xorwf	_interfaz^0,w,c
  2705   001454  A4D8               	btfss	status,2,c
  2706   001456  D004               	goto	l3849
  2707                           
  2708                           ;LibLCDXC8.h: 91: LATD=(LATD & 0b00001111) | 0x30;
  2709   001458  508C               	movf	140,w,c	;volatile
  2710   00145A  0B0F               	andlw	15
  2711   00145C  0930               	iorlw	48
  2712   00145E  D001               	goto	L8
  2713   001460                     l3849:
  2714                           
  2715                           ;LibLCDXC8.h: 92: else;LibLCDXC8.h: 93: LATD=0x3F;
  2716   001460  0E3F               	movlw	63
  2717   001462                     L8:
  2718   001462  6E8C               	movwf	140,c	;volatile
  2719                           
  2720                           ;LibLCDXC8.h: 94: HabilitaLCD();
  2721   001464  ECDA  F00D         	call	_HabilitaLCD	;wreg free
  2722                           
  2723                           ;LibLCDXC8.h: 95: RetardoLCD(4);
  2724   001468  0E04               	movlw	4
  2725   00146A  EC9C  F00B         	call	_RetardoLCD
  2726                           
  2727                           ;LibLCDXC8.h: 96: if(interfaz==4){
  2728   00146E  0E04               	movlw	4
  2729   001470  1841               	xorwf	_interfaz^0,w,c
  2730   001472  A4D8               	btfss	status,2,c
  2731   001474  D011               	goto	l3869
  2732                           
  2733                           ;LibLCDXC8.h: 97: LATD=(LATD & 0b00001111) | 0x20;
  2734   001476  508C               	movf	140,w,c	;volatile
  2735   001478  0B0F               	andlw	15
  2736   00147A  0920               	iorlw	32
  2737   00147C  6E8C               	movwf	140,c	;volatile
  2738                           
  2739                           ;LibLCDXC8.h: 98: HabilitaLCD();
  2740   00147E  ECDA  F00D         	call	_HabilitaLCD	;wreg free
  2741                           
  2742                           ;LibLCDXC8.h: 99: RetardoLCD(4);
  2743   001482  0E04               	movlw	4
  2744   001484  EC9C  F00B         	call	_RetardoLCD
  2745                           
  2746                           ;LibLCDXC8.h: 100: EnviaDato(0x2F);
  2747   001488  0E2F               	movlw	47
  2748   00148A  EC44  F00C         	call	_EnviaDato
  2749                           
  2750                           ;LibLCDXC8.h: 101: HabilitaLCD();
  2751   00148E  ECDA  F00D         	call	_HabilitaLCD	;wreg free
  2752                           
  2753                           ;LibLCDXC8.h: 102: RetardoLCD(4);
  2754   001492  0E04               	movlw	4
  2755   001494  EC9C  F00B         	call	_RetardoLCD
  2756   001498                     l3869:
  2757                           
  2758                           ;LibLCDXC8.h: 103: };LibLCDXC8.h: 104: BorraLCD();
  2759   001498  ECD0  F00D         	call	_BorraLCD	;wreg free
  2760                           
  2761                           ;LibLCDXC8.h: 105: EnviaDato(0xF);
  2762   00149C  0E0F               	movlw	15
  2763   00149E  EC44  F00C         	call	_EnviaDato
  2764                           
  2765                           ;LibLCDXC8.h: 106: HabilitaLCD();
  2766   0014A2  ECDA  F00D         	call	_HabilitaLCD	;wreg free
  2767                           
  2768                           ;LibLCDXC8.h: 107: RetardoLCD(4);
  2769   0014A6  0E04               	movlw	4
  2770   0014A8  EC9C  F00B         	call	_RetardoLCD
  2771   0014AC  0012               	return		;funcret
  2772   0014AE                     __end_of_InicializaLCD:
  2773                           	callstack 0
  2774                           
  2775 ;; *************** function _BorraLCD *****************
  2776 ;; Defined at:
  2777 ;;		line 116 in file "LibLCDXC8.h"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;		None
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;		None
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1    wreg      void 
  2784 ;; Registers used:
  2785 ;;		wreg, status,2, status,0, cstack
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2791 ;;      Params:         0       0       0       0       0       0       0       0       0
  2792 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2793 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2794 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2795 ;;Total ram usage:        0 bytes
  2796 ;; Hardware stack levels used: 1
  2797 ;; Hardware stack levels required when called: 6
  2798 ;; This function calls:
  2799 ;;		_EnviaDato
  2800 ;;		_HabilitaLCD
  2801 ;;		_RetardoLCD
  2802 ;; This function is called by:
  2803 ;;		_InicializaLCD
  2804 ;;		_main
  2805 ;;		_Emergencia
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           	psect	text12
  2810   001BA0                     __ptext12:
  2811                           	callstack 0
  2812   001BA0                     _BorraLCD:
  2813                           	callstack 23
  2814                           
  2815                           ;LibLCDXC8.h: 118: LATA3=0;
  2816                           
  2817                           ;incstack = 0
  2818   001BA0  9689               	bcf	3977,3,c	;volatile
  2819                           
  2820                           ;LibLCDXC8.h: 119: EnviaDato(0x01);
  2821   001BA2  0E01               	movlw	1
  2822   001BA4  EC44  F00C         	call	_EnviaDato
  2823                           
  2824                           ;LibLCDXC8.h: 120: HabilitaLCD();
  2825   001BA8  ECDA  F00D         	call	_HabilitaLCD	;wreg free
  2826                           
  2827                           ;LibLCDXC8.h: 121: RetardoLCD(2);
  2828   001BAC  0E02               	movlw	2
  2829   001BAE  EC9C  F00B         	call	_RetardoLCD
  2830   001BB2  0012               	return		;funcret
  2831   001BB4                     __end_of_BorraLCD:
  2832                           	callstack 0
  2833                           
  2834 ;; *************** function _EscribeLCD_c *****************
  2835 ;; Defined at:
  2836 ;;		line 140 in file "LibLCDXC8.h"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  a               1    wreg     unsigned char 
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;  a               1   33[COMRAM] unsigned char 
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  1    wreg      void 
  2843 ;; Registers used:
  2844 ;;		wreg, status,2, status,0, cstack
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2850 ;;      Params:         0       0       0       0       0       0       0       0       0
  2851 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2852 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2853 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2854 ;;Total ram usage:        1 bytes
  2855 ;; Hardware stack levels used: 1
  2856 ;; Hardware stack levels required when called: 6
  2857 ;; This function calls:
  2858 ;;		_EnviaDato
  2859 ;;		_HabilitaLCD
  2860 ;;		_RetardoLCD
  2861 ;; This function is called by:
  2862 ;;		_MensajeLCD_Var
  2863 ;;		_Bienvenida
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867                           	psect	text13
  2868   001B20                     __ptext13:
  2869                           	callstack 0
  2870   001B20                     _EscribeLCD_c:
  2871                           	callstack 23
  2872                           
  2873                           ;incstack = 0
  2874                           ;EscribeLCD_c@a stored from wreg
  2875   001B20  6E22               	movwf	EscribeLCD_c@a^0,c
  2876                           
  2877                           ;LibLCDXC8.h: 144: LATA3=1;
  2878   001B22  8689               	bsf	3977,3,c	;volatile
  2879                           
  2880                           ;LibLCDXC8.h: 145: EnviaDato(a);
  2881   001B24  5022               	movf	EscribeLCD_c@a^0,w,c
  2882   001B26  EC44  F00C         	call	_EnviaDato
  2883                           
  2884                           ;LibLCDXC8.h: 146: HabilitaLCD();
  2885   001B2A  ECDA  F00D         	call	_HabilitaLCD	;wreg free
  2886                           
  2887                           ;LibLCDXC8.h: 147: RetardoLCD(4);
  2888   001B2E  0E04               	movlw	4
  2889   001B30  EC9C  F00B         	call	_RetardoLCD
  2890   001B34  0012               	return		;funcret
  2891   001B36                     __end_of_EscribeLCD_c:
  2892                           	callstack 0
  2893                           
  2894 ;; *************** function _DireccionaLCD *****************
  2895 ;; Defined at:
  2896 ;;		line 247 in file "LibLCDXC8.h"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  a               1    wreg     unsigned char 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  a               1   33[COMRAM] unsigned char 
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  1    wreg      void 
  2903 ;; Registers used:
  2904 ;;		wreg, status,2, status,0, cstack
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2910 ;;      Params:         0       0       0       0       0       0       0       0       0
  2911 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2912 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2913 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2914 ;;Total ram usage:        1 bytes
  2915 ;; Hardware stack levels used: 1
  2916 ;; Hardware stack levels required when called: 6
  2917 ;; This function calls:
  2918 ;;		_EnviaDato
  2919 ;;		_HabilitaLCD
  2920 ;;		_RetardoLCD
  2921 ;; This function is called by:
  2922 ;;		_main
  2923 ;;		_Emergencia
  2924 ;;		_Bienvenida
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           	psect	text14
  2929   001B36                     __ptext14:
  2930                           	callstack 0
  2931   001B36                     _DireccionaLCD:
  2932                           	callstack 23
  2933                           
  2934                           ;incstack = 0
  2935                           ;DireccionaLCD@a stored from wreg
  2936   001B36  6E22               	movwf	DireccionaLCD@a^0,c
  2937                           
  2938                           ;LibLCDXC8.h: 250: LATA3=0;
  2939   001B38  9689               	bcf	3977,3,c	;volatile
  2940                           
  2941                           ;LibLCDXC8.h: 251: EnviaDato(a);
  2942   001B3A  5022               	movf	DireccionaLCD@a^0,w,c
  2943   001B3C  EC44  F00C         	call	_EnviaDato
  2944                           
  2945                           ;LibLCDXC8.h: 252: HabilitaLCD();
  2946   001B40  ECDA  F00D         	call	_HabilitaLCD	;wreg free
  2947                           
  2948                           ;LibLCDXC8.h: 253: RetardoLCD(4);
  2949   001B44  0E04               	movlw	4
  2950   001B46  EC9C  F00B         	call	_RetardoLCD
  2951   001B4A  0012               	return		;funcret
  2952   001B4C                     __end_of_DireccionaLCD:
  2953                           	callstack 0
  2954                           
  2955 ;; *************** function _CrearCaracter *****************
  2956 ;; Defined at:
  2957 ;;		line 328 in file "LibLCDXC8.h"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  pos             1    wreg     unsigned char 
  2960 ;;  data            1   33[COMRAM] PTR const unsigned char 
  2961 ;;		 -> banda2(8), banda1(8), 
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;  pos             1   35[COMRAM] unsigned char 
  2964 ;;  i               1   36[COMRAM] unsigned char 
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      void 
  2967 ;; Registers used:
  2968 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2974 ;;      Params:         1       0       0       0       0       0       0       0       0
  2975 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2976 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2977 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2978 ;;Total ram usage:        4 bytes
  2979 ;; Hardware stack levels used: 1
  2980 ;; Hardware stack levels required when called: 6
  2981 ;; This function calls:
  2982 ;;		_EnviaDato
  2983 ;;		_HabilitaLCD
  2984 ;;		_RetardoLCD
  2985 ;; This function is called by:
  2986 ;;		_Bienvenida
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           	psect	text15
  2991   0016DE                     __ptext15:
  2992                           	callstack 0
  2993   0016DE                     _CrearCaracter:
  2994                           	callstack 23
  2995                           
  2996                           ;incstack = 0
  2997                           ;CrearCaracter@pos stored from wreg
  2998   0016DE  6E24               	movwf	CrearCaracter@pos^0,c
  2999                           
  3000                           ;LibLCDXC8.h: 329: unsigned char i;;LibLCDXC8.h: 331: LATA3 = 0;
  3001   0016E0  9689               	bcf	3977,3,c	;volatile
  3002                           
  3003                           ;LibLCDXC8.h: 332: EnviaDato(0x40 + (pos * 8));
  3004   0016E2  5024               	movf	CrearCaracter@pos^0,w,c
  3005   0016E4  0D08               	mullw	8
  3006   0016E6  50F3               	movf	243,w,c
  3007   0016E8  0F40               	addlw	64
  3008   0016EA  EC44  F00C         	call	_EnviaDato
  3009                           
  3010                           ;LibLCDXC8.h: 333: HabilitaLCD();
  3011   0016EE  ECDA  F00D         	call	_HabilitaLCD	;wreg free
  3012                           
  3013                           ;LibLCDXC8.h: 334: RetardoLCD(4);
  3014   0016F2  0E04               	movlw	4
  3015   0016F4  EC9C  F00B         	call	_RetardoLCD
  3016                           
  3017                           ;LibLCDXC8.h: 337: LATA3 = 1;
  3018   0016F8  8689               	bsf	3977,3,c	;volatile
  3019                           
  3020                           ;LibLCDXC8.h: 338: for(i = 0; i < 8; i++) {
  3021   0016FA  6A25               	clrf	CrearCaracter@i^0,c
  3022   0016FC                     l3925:
  3023                           
  3024                           ;LibLCDXC8.h: 339: EnviaDato(data[i]);
  3025   0016FC  5022               	movf	CrearCaracter@data^0,w,c
  3026   0016FE  2425               	addwf	CrearCaracter@i^0,w,c
  3027   001700  6E23               	movwf	??_CrearCaracter^0,c
  3028   001702  C023  FFF6         	movff	??_CrearCaracter,tblptrl
  3029   001706                     	if	1	;There is more than 1 active tblptr byte
  3030   001706  0E08               	movlw	high __smallconst
  3031   001708  6EF7               	movwf	tblptrh,c
  3032   00170A                     	endif
  3033   00170A                     	if	0	;tblptru may be non-zero
  3034   00170A                     	endif
  3035   00170A                     	if	0	;tblptru may be non-zero
  3036   00170A                     	endif
  3037   00170A  0008               	tblrd		*
  3038   00170C  50F5               	movf	tablat,w,c
  3039   00170E  EC44  F00C         	call	_EnviaDato
  3040                           
  3041                           ;LibLCDXC8.h: 340: HabilitaLCD();
  3042   001712  ECDA  F00D         	call	_HabilitaLCD	;wreg free
  3043                           
  3044                           ;LibLCDXC8.h: 341: RetardoLCD(4);
  3045   001716  0E04               	movlw	4
  3046   001718  EC9C  F00B         	call	_RetardoLCD
  3047   00171C  2A25               	incf	CrearCaracter@i^0,f,c
  3048   00171E  0E07               	movlw	7
  3049   001720  6425               	cpfsgt	CrearCaracter@i^0,c
  3050   001722  D7EC               	goto	l3925
  3051                           
  3052                           ;LibLCDXC8.h: 342: };LibLCDXC8.h: 345: LATA3 = 0;
  3053   001724  9689               	bcf	3977,3,c	;volatile
  3054                           
  3055                           ;LibLCDXC8.h: 346: EnviaDato(0x80);
  3056   001726  0E80               	movlw	128
  3057   001728  EC44  F00C         	call	_EnviaDato
  3058                           
  3059                           ;LibLCDXC8.h: 347: HabilitaLCD();
  3060   00172C  ECDA  F00D         	call	_HabilitaLCD	;wreg free
  3061                           
  3062                           ;LibLCDXC8.h: 348: RetardoLCD(4);
  3063   001730  0E04               	movlw	4
  3064   001732  EC9C  F00B         	call	_RetardoLCD
  3065   001736  0012               	return		;funcret
  3066   001738                     __end_of_CrearCaracter:
  3067                           	callstack 0
  3068                           
  3069 ;; *************** function _EnviaDato *****************
  3070 ;; Defined at:
  3071 ;;		line 63 in file "LibLCDXC8.h"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;  a               1    wreg     unsigned char 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  a               1   32[COMRAM] unsigned char 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg, status,2, status,0, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3085 ;;      Params:         0       0       0       0       0       0       0       0       0
  3086 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3087 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3088 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3089 ;;Total ram usage:        2 bytes
  3090 ;; Hardware stack levels used: 1
  3091 ;; Hardware stack levels required when called: 5
  3092 ;; This function calls:
  3093 ;;		_HabilitaLCD
  3094 ;;		_RetardoLCD
  3095 ;; This function is called by:
  3096 ;;		_InicializaLCD
  3097 ;;		_BorraLCD
  3098 ;;		_EscribeLCD_c
  3099 ;;		_EscribeLCD_n8
  3100 ;;		_DireccionaLCD
  3101 ;;		_OcultarCursorLCD
  3102 ;;		_MostrarCursorLCD
  3103 ;;		_CrearCaracter
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           	psect	text16
  3108   001888                     __ptext16:
  3109                           	callstack 0
  3110   001888                     _EnviaDato:
  3111                           	callstack 24
  3112                           
  3113                           ;incstack = 0
  3114                           ;EnviaDato@a stored from wreg
  3115   001888  6E21               	movwf	EnviaDato@a^0,c
  3116                           
  3117                           ;LibLCDXC8.h: 64: if(interfaz==4){
  3118   00188A  0E04               	movlw	4
  3119   00188C  1841               	xorwf	_interfaz^0,w,c
  3120   00188E  A4D8               	btfss	status,2,c
  3121   001890  D01A               	goto	l3799
  3122                           
  3123                           ;LibLCDXC8.h: 65: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3124   001892  C021  F020         	movff	EnviaDato@a,??_EnviaDato
  3125   001896  0EF0               	movlw	240
  3126   001898  1620               	andwf	??_EnviaDato^0,f,c
  3127   00189A  508C               	movf	140,w,c	;volatile
  3128   00189C  0B0F               	andlw	15
  3129   00189E  1020               	iorwf	??_EnviaDato^0,w,c
  3130   0018A0  6E8C               	movwf	140,c	;volatile
  3131                           
  3132                           ;LibLCDXC8.h: 66: HabilitaLCD();
  3133   0018A2  ECDA  F00D         	call	_HabilitaLCD	;wreg free
  3134                           
  3135                           ;LibLCDXC8.h: 67: RetardoLCD(1);
  3136   0018A6  0E01               	movlw	1
  3137   0018A8  EC9C  F00B         	call	_RetardoLCD
  3138                           
  3139                           ;LibLCDXC8.h: 68: LATD=(LATD & 0b00001111) | (a<<4);
  3140   0018AC  C021  F020         	movff	EnviaDato@a,??_EnviaDato
  3141   0018B0  3A20               	swapf	??_EnviaDato^0,f,c
  3142   0018B2  0EF0               	movlw	240
  3143   0018B4  1620               	andwf	??_EnviaDato^0,f,c
  3144   0018B6  508C               	movf	140,w,c	;volatile
  3145   0018B8  0B0F               	andlw	15
  3146   0018BA  1020               	iorwf	??_EnviaDato^0,w,c
  3147   0018BC  6E8C               	movwf	140,c	;volatile
  3148                           
  3149                           ;LibLCDXC8.h: 70: RetardoLCD(1);
  3150   0018BE  0E01               	movlw	1
  3151   0018C0  EC9C  F00B         	call	_RetardoLCD
  3152                           
  3153                           ;LibLCDXC8.h: 71: }else if(interfaz==8){
  3154   0018C4  0012               	return	
  3155   0018C6                     l3799:
  3156   0018C6  0E08               	movlw	8
  3157   0018C8  1841               	xorwf	_interfaz^0,w,c
  3158   0018CA  A4D8               	btfss	status,2,c
  3159   0018CC  0012               	return	
  3160                           
  3161                           ;LibLCDXC8.h: 72: LATD=a;
  3162   0018CE  C021  FF8C         	movff	EnviaDato@a,3980	;volatile
  3163   0018D2  0012               	return		;funcret
  3164   0018D4                     __end_of_EnviaDato:
  3165                           	callstack 0
  3166                           
  3167 ;; *************** function _RetardoLCD *****************
  3168 ;; Defined at:
  3169 ;;		line 287 in file "LibLCDXC8.h"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  a               1    wreg     unsigned char 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;  a               1   30[COMRAM] unsigned char 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      void 
  3176 ;; Registers used:
  3177 ;;		wreg, status,2, status,0
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3183 ;;      Params:         0       0       0       0       0       0       0       0       0
  3184 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3185 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3186 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3187 ;;Total ram usage:        2 bytes
  3188 ;; Hardware stack levels used: 1
  3189 ;; Hardware stack levels required when called: 4
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_EnviaDato
  3194 ;;		_InicializaLCD
  3195 ;;		_BorraLCD
  3196 ;;		_EscribeLCD_c
  3197 ;;		_EscribeLCD_n8
  3198 ;;		_DireccionaLCD
  3199 ;;		_OcultarCursorLCD
  3200 ;;		_MostrarCursorLCD
  3201 ;;		_CrearCaracter
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text17
  3206   001738                     __ptext17:
  3207                           	callstack 0
  3208   001738                     _RetardoLCD:
  3209                           	callstack 25
  3210                           
  3211                           ;incstack = 0
  3212                           ;RetardoLCD@a stored from wreg
  3213   001738  6E1F               	movwf	RetardoLCD@a^0,c
  3214                           
  3215                           ;LibLCDXC8.h: 288: switch(a){
  3216   00173A  D01B               	goto	l3785
  3217   00173C                     l3775:
  3218   00173C  0E05               	movlw	5
  3219   00173E  6E1E               	movwf	??_RetardoLCD^0,c
  3220   001740  0EDE               	movlw	222
  3221   001742                     u3417:
  3222   001742  2EE8               	decfsz	wreg,f,c
  3223   001744  D7FE               	bra	u3417
  3224   001746  2E1E               	decfsz	??_RetardoLCD^0,f,c
  3225   001748  D7FC               	bra	u3417
  3226                           
  3227                           ;LibLCDXC8.h: 291: break;
  3228   00174A  0012               	return	
  3229   00174C                     l3777:
  3230   00174C  0E53               	movlw	83
  3231   00174E                     u3427:
  3232   00174E  2EE8               	decfsz	wreg,f,c
  3233   001750  D7FE               	bra	u3427
  3234   001752  0000               	nop	
  3235                           
  3236                           ;LibLCDXC8.h: 293: _delay((unsigned long)((640)*(1000000/4000000.0)));
  3237   001754  0E35               	movlw	53
  3238   001756                     u3437:
  3239   001756  2EE8               	decfsz	wreg,f,c
  3240   001758  D7FE               	bra	u3437
  3241   00175A  0000               	nop	
  3242                           
  3243                           ;LibLCDXC8.h: 295: break;
  3244   00175C  0012               	return	
  3245   00175E                     l3779:
  3246   00175E  0E08               	movlw	8
  3247   001760                     u3447:
  3248   001760  2EE8               	decfsz	wreg,f,c
  3249   001762  D7FE               	bra	u3447
  3250   001764  0000               	nop	
  3251                           
  3252                           ;LibLCDXC8.h: 298: break;
  3253   001766  0012               	return	
  3254   001768                     l3781:
  3255   001768  0E03               	movlw	3
  3256   00176A                     u3457:
  3257   00176A  2EE8               	decfsz	wreg,f,c
  3258   00176C  D7FE               	bra	u3457
  3259   00176E  0000               	nop	
  3260                           
  3261                           ;LibLCDXC8.h: 301: break;
  3262   001770  0012               	return	
  3263   001772                     l3785:
  3264   001772  501F               	movf	RetardoLCD@a^0,w,c
  3265                           
  3266                           ; Switch size 1, requested type "simple"
  3267                           ; Number of cases is 4, Range of values is 1 to 4
  3268                           ; switch strategies available:
  3269                           ; Name         Instructions Cycles
  3270                           ; simple_byte           13     7 (average)
  3271                           ;	Chosen strategy is simple_byte
  3272   001774  0A01               	xorlw	1	; case 1
  3273   001776  B4D8               	btfsc	status,2,c
  3274   001778  D7E1               	goto	l3775
  3275   00177A  0A03               	xorlw	3	; case 2
  3276   00177C  B4D8               	btfsc	status,2,c
  3277   00177E  D7E6               	goto	l3777
  3278   001780  0A01               	xorlw	1	; case 3
  3279   001782  B4D8               	btfsc	status,2,c
  3280   001784  D7EC               	goto	l3779
  3281   001786  0A07               	xorlw	7	; case 4
  3282   001788  A4D8               	btfss	status,2,c
  3283   00178A  0012               	return	
  3284   00178C  D7ED               	goto	l3781
  3285   00178E                     __end_of_RetardoLCD:
  3286                           	callstack 0
  3287                           
  3288 ;; *************** function _HabilitaLCD *****************
  3289 ;; Defined at:
  3290 ;;		line 109 in file "LibLCDXC8.h"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;		None
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;		None
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  1    wreg      void 
  3297 ;; Registers used:
  3298 ;;		wreg
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3304 ;;      Params:         0       0       0       0       0       0       0       0       0
  3305 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3306 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3307 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3308 ;;Total ram usage:        0 bytes
  3309 ;; Hardware stack levels used: 1
  3310 ;; Hardware stack levels required when called: 4
  3311 ;; This function calls:
  3312 ;;		Nothing
  3313 ;; This function is called by:
  3314 ;;		_EnviaDato
  3315 ;;		_InicializaLCD
  3316 ;;		_BorraLCD
  3317 ;;		_EscribeLCD_c
  3318 ;;		_EscribeLCD_n8
  3319 ;;		_DireccionaLCD
  3320 ;;		_OcultarCursorLCD
  3321 ;;		_MostrarCursorLCD
  3322 ;;		_CrearCaracter
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           	psect	text18
  3327   001BB4                     __ptext18:
  3328                           	callstack 0
  3329   001BB4                     _HabilitaLCD:
  3330                           	callstack 25
  3331                           
  3332                           ;LibLCDXC8.h: 111: LATA5=1;
  3333                           
  3334                           ;incstack = 0
  3335   001BB4  8A89               	bsf	3977,5,c	;volatile
  3336                           
  3337                           ;LibLCDXC8.h: 112: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3338   001BB6  0E03               	movlw	3
  3339   001BB8                     u3467:
  3340   001BB8  2EE8               	decfsz	wreg,f,c
  3341   001BBA  D7FE               	bra	u3467
  3342   001BBC  0000               	nop	
  3343                           
  3344                           ;LibLCDXC8.h: 114: LATA5=0;
  3345   001BBE  9A89               	bcf	3977,5,c	;volatile
  3346   001BC0  0012               	return		;funcret
  3347   001BC2                     __end_of_HabilitaLCD:
  3348                           	callstack 0
  3349                           
  3350 ;; *************** function _ConfiguraLCD *****************
  3351 ;; Defined at:
  3352 ;;		line 59 in file "LibLCDXC8.h"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;  a               1    wreg     unsigned char 
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  a               1   29[COMRAM] unsigned char 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      void 
  3359 ;; Registers used:
  3360 ;;		wreg, status,2, status,0
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3366 ;;      Params:         0       0       0       0       0       0       0       0       0
  3367 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3368 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3369 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3370 ;;Total ram usage:        1 bytes
  3371 ;; Hardware stack levels used: 1
  3372 ;; Hardware stack levels required when called: 4
  3373 ;; This function calls:
  3374 ;;		Nothing
  3375 ;; This function is called by:
  3376 ;;		_main
  3377 ;;		_Bienvenida
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text19
  3382   001B08                     __ptext19:
  3383                           	callstack 0
  3384   001B08                     _ConfiguraLCD:
  3385                           	callstack 26
  3386                           
  3387                           ;incstack = 0
  3388                           ;ConfiguraLCD@a stored from wreg
  3389   001B08  6E1E               	movwf	ConfiguraLCD@a^0,c
  3390                           
  3391                           ;LibLCDXC8.h: 60: if(a==4 | a ==8)
  3392   001B0A  0E04               	movlw	4
  3393   001B0C  181E               	xorwf	ConfiguraLCD@a^0,w,c
  3394   001B0E  B4D8               	btfsc	status,2,c
  3395   001B10  D004               	goto	u2940
  3396   001B12  0E08               	movlw	8
  3397   001B14  181E               	xorwf	ConfiguraLCD@a^0,w,c
  3398   001B16  A4D8               	btfss	status,2,c
  3399   001B18  0012               	return	
  3400   001B1A                     u2940:
  3401                           
  3402                           ;LibLCDXC8.h: 61: interfaz=a;
  3403   001B1A  C01E  F041         	movff	ConfiguraLCD@a,_interfaz
  3404   001B1E  0012               	return		;funcret
  3405   001B20                     __end_of_ConfiguraLCD:
  3406                           	callstack 0
  3407                           
  3408 ;; *************** function _ISR *****************
  3409 ;; Defined at:
  3410 ;;		line 338 in file "Lab6Pruebas.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;		None
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;  d               3   25[COMRAM] float 
  3415 ;;  numAscii        0   25[COMRAM] unsigned char [0]
  3416 ;;  comando         1   28[COMRAM] unsigned char 
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3426 ;;      Params:         0       0       0       0       0       0       0       0       0
  3427 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3428 ;;      Temps:         10       0       0       0       0       0       0       0       0
  3429 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3430 ;;Total ram usage:       14 bytes
  3431 ;; Hardware stack levels used: 1
  3432 ;; Hardware stack levels required when called: 3
  3433 ;; This function calls:
  3434 ;;		_ConversionADC
  3435 ;;		_MedirDistancia
  3436 ;;		_Transmitir
  3437 ;;		_TransmitirVar
  3438 ;;		___awdiv
  3439 ;;		___awtoft
  3440 ;;		___fttol
  3441 ;;		_numASCII
  3442 ;;		i2_DireccionaLCD
  3443 ;;		i2_EscribeLCD_c
  3444 ;;		i2_EscribeLCD_n8
  3445 ;;		i2_MostrarNumeros
  3446 ;;		i2___lbdiv
  3447 ;; This function is called by:
  3448 ;;		Interrupt level 2
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           	psect	intcode
  3453   000008                     __pintcode:
  3454                           	callstack 0
  3455   000008                     _ISR:
  3456                           	callstack 22
  3457                           
  3458                           ;incstack = 0
  3459   000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3460   00000A  ED51  F004         	call	int_func,f	;refresh shadow registers
  3461                           
  3462                           	psect	intcode_body
  3463   0008A2                     __pintcode_body:
  3464                           	callstack 22
  3465   0008A2                     int_func:
  3466                           	callstack 22
  3467   0008A2  0006               	pop		; remove dummy address from shadow register refresh
  3468   0008A4  CFD9 F012          	movff	fsr2l,??_ISR+2
  3469   0008A8  CFDA F013          	movff	fsr2h,??_ISR+3
  3470   0008AC  CFF3 F014          	movff	prodl,??_ISR+4
  3471   0008B0  CFF4 F015          	movff	prodh,??_ISR+5
  3472   0008B4  CFF6 F016          	movff	tblptrl,??_ISR+6
  3473   0008B8  CFF7 F017          	movff	tblptrh,??_ISR+7
  3474   0008BC  CFF8 F018          	movff	tblptru,??_ISR+8
  3475   0008C0  CFF5 F019          	movff	tablat,??_ISR+9
  3476                           
  3477                           ;Lab6Pruebas.c: 341: if(TMR0IF == 1){
  3478   0008C4  A4F2               	btfss	4082,2,c	;volatile
  3479   0008C6  D08A               	goto	i2l3593
  3480                           
  3481                           ;Lab6Pruebas.c: 343: TMR0 = 49911;
  3482   0008C8  0EC2               	movlw	194
  3483   0008CA  6ED7               	movwf	215,c	;volatile
  3484   0008CC  0EF7               	movlw	247
  3485   0008CE  6ED6               	movwf	214,c	;volatile
  3486                           
  3487                           ;Lab6Pruebas.c: 344: TMR0IF = 0;
  3488   0008D0  94F2               	bcf	4082,2,c	;volatile
  3489                           
  3490                           ;Lab6Pruebas.c: 345: LATA1 = LATA1^1;
  3491   0008D2  B289               	btfsc	3977,1,c	;volatile
  3492   0008D4  D002               	goto	i2u248_40
  3493   0008D6  8289               	bsf	3977,1,c	;volatile
  3494   0008D8  D001               	goto	i2u249_45
  3495   0008DA                     i2u248_40:
  3496   0008DA  9289               	bcf	3977,1,c	;volatile
  3497   0008DC                     i2u249_45:
  3498                           
  3499                           ;Lab6Pruebas.c: 351: if(LATA1 == 1){
  3500   0008DC  A289               	btfss	3977,1,c	;volatile
  3501   0008DE  D07E               	goto	i2l3593
  3502                           
  3503                           ;Lab6Pruebas.c: 355: if(flagMotor == 0){
  3504   0008E0  502B               	movf	_flagMotor^0,w,c
  3505   0008E2  A4D8               	btfss	status,2,c
  3506   0008E4  D010               	goto	i2l3567
  3507                           
  3508                           ;Lab6Pruebas.c: 356: valADC = ConversionADC(0);
  3509   0008E6  0E00               	movlw	0
  3510   0008E8  EC74  F00D         	call	_ConversionADC
  3511   0008EC  6E2A               	movwf	_valADC^0,c
  3512                           
  3513                           ;Lab6Pruebas.c: 357: valPWM = (valADC * 100/255);
  3514   0008EE  502A               	movf	_valADC^0,w,c
  3515   0008F0  0D64               	mullw	100
  3516   0008F2  CFF3 F001          	movff	prodl,___awdiv@dividend
  3517   0008F6  CFF4 F002          	movff	prodh,___awdiv@dividend+1
  3518   0008FA  0E00               	movlw	0
  3519   0008FC  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3520   0008FE  6803               	setf	___awdiv@divisor^0,c
  3521   000900  EC57  F00A         	call	___awdiv	;wreg free
  3522   000904  D00C               	goto	L9
  3523   000906                     i2l3567:
  3524                           
  3525                           ;Lab6Pruebas.c: 359: valPWM = (realPWM*100/240);
  3526   000906  5029               	movf	_realPWM^0,w,c
  3527   000908  0D64               	mullw	100
  3528   00090A  CFF3 F001          	movff	prodl,___awdiv@dividend
  3529   00090E  CFF4 F002          	movff	prodh,___awdiv@dividend+1
  3530   000912  0E00               	movlw	0
  3531   000914  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3532   000916  0EF0               	movlw	240
  3533   000918  6E03               	movwf	___awdiv@divisor^0,c
  3534   00091A  EC57  F00A         	call	___awdiv	;wreg free
  3535   00091E                     L9:
  3536   00091E  C001  F03D         	movff	?___awdiv,_valPWM
  3537   000922  C002  F03E         	movff	?___awdiv+1,_valPWM+1
  3538                           
  3539                           ;Lab6Pruebas.c: 361: };Lab6Pruebas.c: 366: unsigned char numAscii[];;Lab6Pruebas.c: 367:
      +                           numASCII(valPWM, numAscii);
  3540   000926  C03D  F009         	movff	_valPWM,numASCII@number
  3541   00092A  C03E  F00A         	movff	_valPWM+1,numASCII@number+1
  3542   00092E  0E1A               	movlw	low ISR@numAscii
  3543   000930  6E0B               	movwf	numASCII@ascii_values^0,c
  3544   000932  0E00               	movlw	high ISR@numAscii
  3545   000934  6E0C               	movwf	(numASCII@ascii_values+1)^0,c
  3546   000936  ECE0  F008         	call	_numASCII	;wreg free
  3547                           
  3548                           ;Lab6Pruebas.c: 370: TransmitirVar("Valor de PWM: ");
  3549   00093A  0E56               	movlw	low STR_7
  3550   00093C  6E02               	movwf	TransmitirVar@buffer^0,c
  3551   00093E  5002               	movf	TransmitirVar@buffer^0,w,c
  3552   000940  A4D8               	btfss	status,2,c
  3553   000942  0E08               	movlw	high __smallconst
  3554   000944  6E03               	movwf	(TransmitirVar@buffer+1)^0,c
  3555   000946  ECF2  F00B         	call	_TransmitirVar	;wreg free
  3556                           
  3557                           ;Lab6Pruebas.c: 371: TransmitirVar(numAscii);
  3558   00094A  0E1A               	movlw	low ISR@numAscii
  3559   00094C  6E02               	movwf	TransmitirVar@buffer^0,c
  3560   00094E  0E00               	movlw	high ISR@numAscii
  3561   000950  6E03               	movwf	(TransmitirVar@buffer+1)^0,c
  3562   000952  ECF2  F00B         	call	_TransmitirVar	;wreg free
  3563                           
  3564                           ;Lab6Pruebas.c: 372: Transmitir('%');
  3565   000956  0E25               	movlw	37
  3566   000958  ECE8  F00D         	call	_Transmitir
  3567                           
  3568                           ;Lab6Pruebas.c: 373: TransmitirVar("\rDistancia objeto: ");
  3569   00095C  0E11               	movlw	low STR_8
  3570   00095E  6E02               	movwf	TransmitirVar@buffer^0,c
  3571   000960  5002               	movf	TransmitirVar@buffer^0,w,c
  3572   000962  A4D8               	btfss	status,2,c
  3573   000964  0E08               	movlw	high __smallconst
  3574   000966  6E03               	movwf	(TransmitirVar@buffer+1)^0,c
  3575   000968  ECF2  F00B         	call	_TransmitirVar	;wreg free
  3576                           
  3577                           ;Lab6Pruebas.c: 374: dis = MedirDistancia();
  3578   00096C  EC98  F00A         	call	_MedirDistancia	;wreg free
  3579   000970  6E28               	movwf	_dis^0,c
  3580                           
  3581                           ;Lab6Pruebas.c: 376: if(dis >= 10){
  3582   000972  0E09               	movlw	9
  3583   000974  6428               	cpfsgt	_dis^0,c
  3584   000976  D002               	goto	i2l3585
  3585                           
  3586                           ;Lab6Pruebas.c: 377: dis = 9;
  3587   000978  0E09               	movlw	9
  3588   00097A  6E28               	movwf	_dis^0,c
  3589   00097C                     i2l3585:
  3590                           
  3591                           ;Lab6Pruebas.c: 378: };Lab6Pruebas.c: 379: Transmitir(dis+48);
  3592   00097C  5028               	movf	_dis^0,w,c
  3593   00097E  0F30               	addlw	48
  3594   000980  ECE8  F00D         	call	_Transmitir
  3595                           
  3596                           ;Lab6Pruebas.c: 380: Transmitir('\r');
  3597   000984  0E0D               	movlw	13
  3598   000986  ECE8  F00D         	call	_Transmitir
  3599                           
  3600                           ;Lab6Pruebas.c: 384: float d = 240*valPWM/100;
  3601   00098A  0E00               	movlw	0
  3602   00098C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3603   00098E  0E64               	movlw	100
  3604   000990  6E03               	movwf	___awdiv@divisor^0,c
  3605   000992  0EF0               	movlw	240
  3606   000994  023D               	mulwf	_valPWM^0,c
  3607   000996  CFF3 F010          	movff	prodl,??_ISR
  3608   00099A  CFF4 F011          	movff	prodh,??_ISR+1
  3609   00099E  023E               	mulwf	(_valPWM+1)^0,c
  3610   0009A0  50F3               	movf	prodl,w,c
  3611   0009A2  2611               	addwf	(??_ISR+1)^0,f,c
  3612   0009A4  C010  F001         	movff	??_ISR,___awdiv@dividend
  3613   0009A8  C011  F002         	movff	??_ISR+1,___awdiv@dividend+1
  3614   0009AC  EC57  F00A         	call	___awdiv	;wreg free
  3615   0009B0  C001  F009         	movff	?___awdiv,___awtoft@c
  3616   0009B4  C002  F00A         	movff	?___awdiv+1,___awtoft@c+1
  3617   0009B8  ECE4  F00C         	call	___awtoft	;wreg free
  3618   0009BC  C009  F01A         	movff	?___awtoft,ISR@d
  3619   0009C0  C00A  F01B         	movff	?___awtoft+1,ISR@d+1
  3620   0009C4  C00B  F01C         	movff	?___awtoft+2,ISR@d+2
  3621                           
  3622                           ;Lab6Pruebas.c: 385: CCPR1L=d;
  3623   0009C8  C01A  F001         	movff	ISR@d,___fttol@f1
  3624   0009CC  C01B  F002         	movff	ISR@d+1,___fttol@f1+1
  3625   0009D0  C01C  F003         	movff	ISR@d+2,___fttol@f1+2
  3626   0009D4  EC49  F009         	call	___fttol	;wreg free
  3627   0009D8  5001               	movf	?___fttol^0,w,c
  3628   0009DA  6EBE               	movwf	190,c	;volatile
  3629   0009DC                     i2l3593:
  3630                           
  3631                           ;Lab6Pruebas.c: 389: };Lab6Pruebas.c: 393: };Lab6Pruebas.c: 396: if(RBIF==1 ){
  3632   0009DC  A0F2               	btfss	4082,0,c	;volatile
  3633   0009DE  D0FC               	goto	i2l3743
  3634                           
  3635                           ;Lab6Pruebas.c: 398: if(PORTB!=0b11110000 && Iniciarpregunta == 1){
  3636   0009E0  0EF0               	movlw	240
  3637   0009E2  1881               	xorwf	129,w,c	;volatile
  3638   0009E4  B4D8               	btfsc	status,2,c
  3639   0009E6  D0DD               	goto	i2l3725
  3640   0009E8  0435               	decf	_Iniciarpregunta^0,w,c
  3641   0009EA  A4D8               	btfss	status,2,c
  3642   0009EC  D0DA               	goto	i2l3725
  3643                           
  3644                           ;Lab6Pruebas.c: 401: LATB=0b11111110;
  3645   0009EE  0EFE               	movlw	254
  3646   0009F0  6E8A               	movwf	138,c	;volatile
  3647                           
  3648                           ;Lab6Pruebas.c: 404: if(RB4==0) {
  3649   0009F2  B881               	btfsc	3969,4,c	;volatile
  3650   0009F4  D008               	goto	i2l370
  3651                           
  3652                           ;Lab6Pruebas.c: 406: faltantes = objetivo;
  3653   0009F6  C03B  F03A         	movff	_objetivo,_faltantes
  3654                           
  3655                           ;Lab6Pruebas.c: 407: contadas = objetivo - faltantes;
  3656   0009FA  503A               	movf	_faltantes^0,w,c
  3657   0009FC  5C3B               	subwf	_objetivo^0,w,c
  3658   0009FE  6E39               	movwf	_contadas^0,c
  3659   000A00                     i2l3607:
  3660                           
  3661                           ;Lab6Pruebas.c: 408: MostrarNumeros();
  3662   000A00  EC3B  F00B         	call	i2_MostrarNumeros	;wreg free
  3663                           
  3664                           ;Lab6Pruebas.c: 409: }
  3665   000A04  D0CC               	goto	i2l3723
  3666   000A06                     i2l370:
  3667                           
  3668                           ;Lab6Pruebas.c: 410: else if(RB5==0){
  3669   000A06  BA81               	btfsc	3969,5,c	;volatile
  3670   000A08  D00B               	goto	i2l372
  3671                           
  3672                           ;Lab6Pruebas.c: 411: input++;
  3673   000A0A  2A38               	incf	_input^0,f,c
  3674                           
  3675                           ;Lab6Pruebas.c: 412: if(input <= 2){
  3676   000A0C  0E03               	movlw	3
  3677   000A0E  6038               	cpfslt	_input^0,c
  3678   000A10  D0C6               	goto	i2l3723
  3679                           
  3680                           ;Lab6Pruebas.c: 413: Tecla = 0;
  3681   000A12  6A3C               	clrf	_Tecla^0,c
  3682                           
  3683                           ;Lab6Pruebas.c: 414: EscribeLCD_n8(Tecla,1);
  3684   000A14  0E01               	movlw	1
  3685   000A16  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3686   000A18  503C               	movf	_Tecla^0,w,c
  3687   000A1A  EC6D  F008         	call	i2_EscribeLCD_n8
  3688                           
  3689                           ;Lab6Pruebas.c: 415: };Lab6Pruebas.c: 417: }
  3690   000A1E  D0BF               	goto	i2l3723
  3691   000A20                     i2l372:
  3692                           
  3693                           ;Lab6Pruebas.c: 418: else if(RB6==0){
  3694   000A20  BC81               	btfsc	3969,6,c	;volatile
  3695   000A22  D004               	goto	i2l375
  3696                           
  3697                           ;Lab6Pruebas.c: 420: contadas = objetivo;
  3698   000A24  C03B  F039         	movff	_objetivo,_contadas
  3699                           
  3700                           ;Lab6Pruebas.c: 421: faltantes = 0;
  3701   000A28  6A3A               	clrf	_faltantes^0,c
  3702   000A2A  D7EA               	goto	i2l3607
  3703   000A2C                     i2l375:
  3704                           
  3705                           ;Lab6Pruebas.c: 425: else if(RB7==0){
  3706   000A2C  BE81               	btfsc	3969,7,c	;volatile
  3707   000A2E  D006               	goto	i2l3623
  3708                           
  3709                           ;Lab6Pruebas.c: 427: LATA4 = LATA4^1;
  3710   000A30  B889               	btfsc	3977,4,c	;volatile
  3711   000A32  D002               	goto	i2u261_40
  3712   000A34  8889               	bsf	3977,4,c	;volatile
  3713   000A36  D0B3               	goto	i2l3723
  3714   000A38                     i2u261_40:
  3715   000A38  9889               	bcf	3977,4,c	;volatile
  3716                           
  3717                           ;Lab6Pruebas.c: 428: }
  3718   000A3A  D0B1               	goto	i2l3723
  3719   000A3C                     i2l3623:
  3720                           
  3721                           ;Lab6Pruebas.c: 429: else{;Lab6Pruebas.c: 430: LATB=0b11111101;
  3722   000A3C  0EFD               	movlw	253
  3723   000A3E  6E8A               	movwf	138,c	;volatile
  3724                           
  3725                           ;Lab6Pruebas.c: 433: if(RB4==0) {
  3726   000A40  B881               	btfsc	3969,4,c	;volatile
  3727   000A42  D00C               	goto	i2l379
  3728                           
  3729                           ;Lab6Pruebas.c: 434: input++;
  3730   000A44  2A38               	incf	_input^0,f,c
  3731                           
  3732                           ;Lab6Pruebas.c: 435: if(input <= 2){
  3733   000A46  0E03               	movlw	3
  3734   000A48  6038               	cpfslt	_input^0,c
  3735   000A4A  D0A9               	goto	i2l3723
  3736                           
  3737                           ;Lab6Pruebas.c: 436: Tecla = 7;
  3738   000A4C  0E07               	movlw	7
  3739   000A4E  6E3C               	movwf	_Tecla^0,c
  3740                           
  3741                           ;Lab6Pruebas.c: 437: EscribeLCD_n8(Tecla,1);
  3742   000A50  0E01               	movlw	1
  3743   000A52  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3744   000A54  503C               	movf	_Tecla^0,w,c
  3745   000A56  EC6D  F008         	call	i2_EscribeLCD_n8
  3746   000A5A  D0A1               	goto	i2l3723
  3747   000A5C                     i2l379:
  3748                           
  3749                           ;Lab6Pruebas.c: 440: else if(RB5==0){
  3750   000A5C  BA81               	btfsc	3969,5,c	;volatile
  3751   000A5E  D00C               	goto	i2l382
  3752                           
  3753                           ;Lab6Pruebas.c: 441: input++;
  3754   000A60  2A38               	incf	_input^0,f,c
  3755                           
  3756                           ;Lab6Pruebas.c: 442: if(input <=2){
  3757   000A62  0E03               	movlw	3
  3758   000A64  6038               	cpfslt	_input^0,c
  3759   000A66  D09B               	goto	i2l3723
  3760                           
  3761                           ;Lab6Pruebas.c: 443: Tecla = 8;
  3762   000A68  0E08               	movlw	8
  3763   000A6A  6E3C               	movwf	_Tecla^0,c
  3764                           
  3765                           ;Lab6Pruebas.c: 444: EscribeLCD_n8(Tecla,1);
  3766   000A6C  0E01               	movlw	1
  3767   000A6E  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3768   000A70  503C               	movf	_Tecla^0,w,c
  3769   000A72  EC6D  F008         	call	i2_EscribeLCD_n8
  3770   000A76  D093               	goto	i2l3723
  3771   000A78                     i2l382:
  3772                           
  3773                           ;Lab6Pruebas.c: 447: else if(RB6==0){
  3774   000A78  BC81               	btfsc	3969,6,c	;volatile
  3775   000A7A  D00C               	goto	i2l385
  3776                           
  3777                           ;Lab6Pruebas.c: 448: input++;
  3778   000A7C  2A38               	incf	_input^0,f,c
  3779                           
  3780                           ;Lab6Pruebas.c: 449: if(input <=2){
  3781   000A7E  0E03               	movlw	3
  3782   000A80  6038               	cpfslt	_input^0,c
  3783   000A82  D08D               	goto	i2l3723
  3784                           
  3785                           ;Lab6Pruebas.c: 450: Tecla = 9;
  3786   000A84  0E09               	movlw	9
  3787   000A86  6E3C               	movwf	_Tecla^0,c
  3788                           
  3789                           ;Lab6Pruebas.c: 451: EscribeLCD_n8(Tecla,1);
  3790   000A88  0E01               	movlw	1
  3791   000A8A  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3792   000A8C  503C               	movf	_Tecla^0,w,c
  3793   000A8E  EC6D  F008         	call	i2_EscribeLCD_n8
  3794   000A92  D085               	goto	i2l3723
  3795   000A94                     i2l385:
  3796                           
  3797                           ;Lab6Pruebas.c: 454: else if(RB7==0) {
  3798   000A94  BE81               	btfsc	3969,7,c	;volatile
  3799   000A96  D024               	goto	i2l3663
  3800                           
  3801                           ;Lab6Pruebas.c: 458: if(input == 1){
  3802   000A98  0438               	decf	_input^0,w,c
  3803   000A9A  A4D8               	btfss	status,2,c
  3804   000A9C  D00B               	goto	i2l3657
  3805                           
  3806                           ;Lab6Pruebas.c: 459: DireccionaLCD(0xC0);
  3807   000A9E  0EC0               	movlw	192
  3808   000AA0  ECB1  F00D         	call	i2_DireccionaLCD
  3809                           
  3810                           ;Lab6Pruebas.c: 461: EscribeLCD_c(' ');
  3811   000AA4  0E20               	movlw	32
  3812   000AA6  ECA6  F00D         	call	i2_EscribeLCD_c
  3813                           
  3814                           ;Lab6Pruebas.c: 462: DireccionaLCD(0xC0);
  3815   000AAA  0EC0               	movlw	192
  3816   000AAC  ECB1  F00D         	call	i2_DireccionaLCD
  3817   000AB0                     i2l3655:
  3818                           
  3819                           ;Lab6Pruebas.c: 463: input --;
  3820   000AB0  0638               	decf	_input^0,f,c
  3821                           
  3822                           ;Lab6Pruebas.c: 465: } else if (input == 2){
  3823   000AB2  D075               	goto	i2l3723
  3824   000AB4                     i2l3657:
  3825   000AB4  0E02               	movlw	2
  3826   000AB6  1838               	xorwf	_input^0,w,c
  3827   000AB8  A4D8               	btfss	status,2,c
  3828   000ABA  D010               	goto	i2l391
  3829                           
  3830                           ;Lab6Pruebas.c: 466: DireccionaLCD(0xC1);
  3831   000ABC  0EC1               	movlw	193
  3832   000ABE  ECB1  F00D         	call	i2_DireccionaLCD
  3833                           
  3834                           ;Lab6Pruebas.c: 468: EscribeLCD_c(' ');
  3835   000AC2  0E20               	movlw	32
  3836   000AC4  ECA6  F00D         	call	i2_EscribeLCD_c
  3837                           
  3838                           ;Lab6Pruebas.c: 469: DireccionaLCD(0xC1);
  3839   000AC8  0EC1               	movlw	193
  3840   000ACA  ECB1  F00D         	call	i2_DireccionaLCD
  3841                           
  3842                           ;Lab6Pruebas.c: 470: Tecla = objetivo/10;
  3843   000ACE  0E0A               	movlw	10
  3844   000AD0  6E05               	movwf	i2___lbdiv@divisor^0,c
  3845   000AD2  503B               	movf	_objetivo^0,w,c
  3846   000AD4  ECC8  F00C         	call	i2___lbdiv
  3847   000AD8  6E3C               	movwf	_Tecla^0,c
  3848   000ADA  D7EA               	goto	i2l3655
  3849   000ADC                     i2l391:
  3850                           
  3851                           ;Lab6Pruebas.c: 474: __nop();
  3852   000ADC  0000               	nop	
  3853   000ADE  D05F               	goto	i2l3723
  3854   000AE0                     i2l3663:
  3855                           
  3856                           ;Lab6Pruebas.c: 479: else{;Lab6Pruebas.c: 480: LATB=0b11111011;
  3857   000AE0  0EFB               	movlw	251
  3858   000AE2  6E8A               	movwf	138,c	;volatile
  3859                           
  3860                           ;Lab6Pruebas.c: 483: if(RB4==0){
  3861   000AE4  B881               	btfsc	3969,4,c	;volatile
  3862   000AE6  D00C               	goto	i2l394
  3863                           
  3864                           ;Lab6Pruebas.c: 484: input++;
  3865   000AE8  2A38               	incf	_input^0,f,c
  3866                           
  3867                           ;Lab6Pruebas.c: 485: if(input <=2){
  3868   000AEA  0E03               	movlw	3
  3869   000AEC  6038               	cpfslt	_input^0,c
  3870   000AEE  D057               	goto	i2l3723
  3871                           
  3872                           ;Lab6Pruebas.c: 486: Tecla = 4;
  3873   000AF0  0E04               	movlw	4
  3874   000AF2  6E3C               	movwf	_Tecla^0,c
  3875                           
  3876                           ;Lab6Pruebas.c: 487: EscribeLCD_n8(Tecla,1);
  3877   000AF4  0E01               	movlw	1
  3878   000AF6  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3879   000AF8  503C               	movf	_Tecla^0,w,c
  3880   000AFA  EC6D  F008         	call	i2_EscribeLCD_n8
  3881   000AFE  D04F               	goto	i2l3723
  3882   000B00                     i2l394:
  3883                           
  3884                           ;Lab6Pruebas.c: 490: else if(RB5==0){
  3885   000B00  BA81               	btfsc	3969,5,c	;volatile
  3886   000B02  D00C               	goto	i2l397
  3887                           
  3888                           ;Lab6Pruebas.c: 491: input++;
  3889   000B04  2A38               	incf	_input^0,f,c
  3890                           
  3891                           ;Lab6Pruebas.c: 492: if(input <=2){
  3892   000B06  0E03               	movlw	3
  3893   000B08  6038               	cpfslt	_input^0,c
  3894   000B0A  D049               	goto	i2l3723
  3895                           
  3896                           ;Lab6Pruebas.c: 493: Tecla = 5;
  3897   000B0C  0E05               	movlw	5
  3898   000B0E  6E3C               	movwf	_Tecla^0,c
  3899                           
  3900                           ;Lab6Pruebas.c: 494: EscribeLCD_n8(Tecla,1);
  3901   000B10  0E01               	movlw	1
  3902   000B12  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3903   000B14  503C               	movf	_Tecla^0,w,c
  3904   000B16  EC6D  F008         	call	i2_EscribeLCD_n8
  3905   000B1A  D041               	goto	i2l3723
  3906   000B1C                     i2l397:
  3907                           
  3908                           ;Lab6Pruebas.c: 497: else if(RB6==0){
  3909   000B1C  BC81               	btfsc	3969,6,c	;volatile
  3910   000B1E  D00C               	goto	i2l400
  3911                           
  3912                           ;Lab6Pruebas.c: 498: input++;
  3913   000B20  2A38               	incf	_input^0,f,c
  3914                           
  3915                           ;Lab6Pruebas.c: 499: if(input <=2){
  3916   000B22  0E03               	movlw	3
  3917   000B24  6038               	cpfslt	_input^0,c
  3918   000B26  D03B               	goto	i2l3723
  3919                           
  3920                           ;Lab6Pruebas.c: 500: Tecla = 6;
  3921   000B28  0E06               	movlw	6
  3922   000B2A  6E3C               	movwf	_Tecla^0,c
  3923                           
  3924                           ;Lab6Pruebas.c: 501: EscribeLCD_n8(Tecla,1);
  3925   000B2C  0E01               	movlw	1
  3926   000B2E  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3927   000B30  503C               	movf	_Tecla^0,w,c
  3928   000B32  EC6D  F008         	call	i2_EscribeLCD_n8
  3929   000B36  D033               	goto	i2l3723
  3930   000B38                     i2l400:
  3931                           
  3932                           ;Lab6Pruebas.c: 504: else if(RB7==0){
  3933   000B38  BE81               	btfsc	3969,7,c	;volatile
  3934   000B3A  D003               	goto	i2l3693
  3935                           
  3936                           ;Lab6Pruebas.c: 506: emergency = 1;
  3937   000B3C  0E01               	movlw	1
  3938   000B3E  6E34               	movwf	_emergency^0,c
  3939                           
  3940                           ;Lab6Pruebas.c: 507: }
  3941   000B40  D02E               	goto	i2l3723
  3942   000B42                     i2l3693:
  3943                           
  3944                           ;Lab6Pruebas.c: 508: else{;Lab6Pruebas.c: 509: LATB=0b11110111;
  3945   000B42  0EF7               	movlw	247
  3946   000B44  6E8A               	movwf	138,c	;volatile
  3947                           
  3948                           ;Lab6Pruebas.c: 512: if(RB4==0){
  3949   000B46  B881               	btfsc	3969,4,c	;volatile
  3950   000B48  D00C               	goto	i2l405
  3951                           
  3952                           ;Lab6Pruebas.c: 513: input++;
  3953   000B4A  2A38               	incf	_input^0,f,c
  3954                           
  3955                           ;Lab6Pruebas.c: 514: if(input <=2){
  3956   000B4C  0E03               	movlw	3
  3957   000B4E  6038               	cpfslt	_input^0,c
  3958   000B50  D026               	goto	i2l3723
  3959                           
  3960                           ;Lab6Pruebas.c: 515: Tecla = 1;
  3961   000B52  0E01               	movlw	1
  3962   000B54  6E3C               	movwf	_Tecla^0,c
  3963                           
  3964                           ;Lab6Pruebas.c: 516: EscribeLCD_n8(Tecla,1);
  3965   000B56  0E01               	movlw	1
  3966   000B58  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3967   000B5A  503C               	movf	_Tecla^0,w,c
  3968   000B5C  EC6D  F008         	call	i2_EscribeLCD_n8
  3969   000B60  D01E               	goto	i2l3723
  3970   000B62                     i2l405:
  3971                           
  3972                           ;Lab6Pruebas.c: 519: else if(RB5==0){
  3973   000B62  BA81               	btfsc	3969,5,c	;volatile
  3974   000B64  D00C               	goto	i2l408
  3975                           
  3976                           ;Lab6Pruebas.c: 520: input++;
  3977   000B66  2A38               	incf	_input^0,f,c
  3978                           
  3979                           ;Lab6Pruebas.c: 521: if(input <=2){
  3980   000B68  0E03               	movlw	3
  3981   000B6A  6038               	cpfslt	_input^0,c
  3982   000B6C  D018               	goto	i2l3723
  3983                           
  3984                           ;Lab6Pruebas.c: 522: Tecla = 2;
  3985   000B6E  0E02               	movlw	2
  3986   000B70  6E3C               	movwf	_Tecla^0,c
  3987                           
  3988                           ;Lab6Pruebas.c: 523: EscribeLCD_n8(Tecla,1);
  3989   000B72  0E01               	movlw	1
  3990   000B74  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3991   000B76  503C               	movf	_Tecla^0,w,c
  3992   000B78  EC6D  F008         	call	i2_EscribeLCD_n8
  3993   000B7C  D010               	goto	i2l3723
  3994   000B7E                     i2l408:
  3995                           
  3996                           ;Lab6Pruebas.c: 526: else if(RB6==0){
  3997   000B7E  BC81               	btfsc	3969,6,c	;volatile
  3998   000B80  D00C               	goto	i2l411
  3999                           
  4000                           ;Lab6Pruebas.c: 527: input++;
  4001   000B82  2A38               	incf	_input^0,f,c
  4002                           
  4003                           ;Lab6Pruebas.c: 528: if(input <=2){
  4004   000B84  0E03               	movlw	3
  4005   000B86  6038               	cpfslt	_input^0,c
  4006   000B88  D00A               	goto	i2l3723
  4007                           
  4008                           ;Lab6Pruebas.c: 529: Tecla = 3;
  4009   000B8A  0E03               	movlw	3
  4010   000B8C  6E3C               	movwf	_Tecla^0,c
  4011                           
  4012                           ;Lab6Pruebas.c: 530: EscribeLCD_n8(Tecla,1);
  4013   000B8E  0E01               	movlw	1
  4014   000B90  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  4015   000B92  503C               	movf	_Tecla^0,w,c
  4016   000B94  EC6D  F008         	call	i2_EscribeLCD_n8
  4017   000B98  D002               	goto	i2l3723
  4018   000B9A                     i2l411:
  4019                           
  4020                           ;Lab6Pruebas.c: 533: else if(RB7==0){
  4021   000B9A  AE81               	btfss	3969,7,c	;volatile
  4022                           
  4023                           ;Lab6Pruebas.c: 535: ok++;
  4024   000B9C  2A36               	incf	_ok^0,f,c
  4025   000B9E                     i2l3723:
  4026                           
  4027                           ;Lab6Pruebas.c: 536: };Lab6Pruebas.c: 537: };Lab6Pruebas.c: 538: };Lab6Pruebas.c: 539: }
      +                          ;Lab6Pruebas.c: 540: LATB=0b11110000;
  4028   000B9E  0EF0               	movlw	240
  4029   000BA0  6E8A               	movwf	138,c	;volatile
  4030   000BA2                     i2l3725:
  4031                           
  4032                           ;Lab6Pruebas.c: 543: };Lab6Pruebas.c: 547: if(ok == 0){
  4033   000BA2  5036               	movf	_ok^0,w,c
  4034   000BA4  A4D8               	btfss	status,2,c
  4035   000BA6  D007               	goto	i2l3731
  4036                           
  4037                           ;Lab6Pruebas.c: 548: if(input == 1){
  4038   000BA8  0438               	decf	_input^0,w,c
  4039   000BAA  A4D8               	btfss	status,2,c
  4040   000BAC  D004               	goto	i2l3731
  4041                           
  4042                           ;Lab6Pruebas.c: 549: objetivo = Tecla*10;
  4043   000BAE  503C               	movf	_Tecla^0,w,c
  4044   000BB0  0D0A               	mullw	10
  4045   000BB2  CFF3 F03B          	movff	prodl,_objetivo
  4046   000BB6                     i2l3731:
  4047                           
  4048                           ;Lab6Pruebas.c: 551: };Lab6Pruebas.c: 552: };Lab6Pruebas.c: 554: if(input > 2 && block =
      +                          = 0){
  4049   000BB6  0E02               	movlw	2
  4050   000BB8  6438               	cpfsgt	_input^0,c
  4051   000BBA  D005               	goto	i2l3737
  4052   000BBC  5037               	movf	_block^0,w,c
  4053   000BBE  A4D8               	btfss	status,2,c
  4054   000BC0  D002               	goto	i2l3737
  4055                           
  4056                           ;Lab6Pruebas.c: 556: input =2;
  4057   000BC2  0E02               	movlw	2
  4058   000BC4  6E38               	movwf	_input^0,c
  4059   000BC6                     i2l3737:
  4060                           
  4061                           ;Lab6Pruebas.c: 557: };Lab6Pruebas.c: 559: _delay((unsigned long)((250)*(1000000/4000.0)
      +                          ));
  4062   000BC6  0E52               	movlw	82
  4063   000BC8  6E10               	movwf	??_ISR^0,c
  4064   000BCA  0E2A               	movlw	42
  4065   000BCC                     i2u347_47:
  4066   000BCC  2EE8               	decfsz	wreg,f,c
  4067   000BCE  D7FE               	bra	i2u347_47
  4068   000BD0  2E10               	decfsz	??_ISR^0,f,c
  4069   000BD2  D7FC               	bra	i2u347_47
  4070                           
  4071                           ;Lab6Pruebas.c: 560: contador = 0;
  4072   000BD4  6A33               	clrf	_contador^0,c
  4073                           
  4074                           ;Lab6Pruebas.c: 562: RBIF=0;
  4075   000BD6  90F2               	bcf	4082,0,c	;volatile
  4076   000BD8                     i2l3743:
  4077                           
  4078                           ;Lab6Pruebas.c: 564: };Lab6Pruebas.c: 567: if (RCIF == 1){
  4079   000BD8  AA9E               	btfss	3998,5,c	;volatile
  4080   000BDA  D03C               	goto	i2l434
  4081                           
  4082                           ;Lab6Pruebas.c: 568: RCIF = 0;
  4083   000BDC  9A9E               	bcf	3998,5,c	;volatile
  4084                           
  4085                           ;Lab6Pruebas.c: 569: char comando = RCREG;
  4086   000BDE  CFAE F01D          	movff	4014,ISR@comando	;volatile
  4087                           
  4088                           ;Lab6Pruebas.c: 572: switch (comando){
  4089   000BE2  D00D               	goto	i2l3759
  4090   000BE4                     i2l421:
  4091                           
  4092                           ;Lab6Pruebas.c: 574: case 'z':;Lab6Pruebas.c: 575: realPWM=0;
  4093   000BE4  6A29               	clrf	_realPWM^0,c
  4094                           
  4095                           ;Lab6Pruebas.c: 576: break;
  4096   000BE6  D030               	goto	i2l422
  4097   000BE8                     i2l3747:
  4098                           
  4099                           ;Lab6Pruebas.c: 578: case 'x':;Lab6Pruebas.c: 579: realPWM=240*0.2;
  4100   000BE8  0E30               	movlw	48
  4101   000BEA  D007               	goto	L13
  4102   000BEC                     i2l3749:
  4103                           
  4104                           ;Lab6Pruebas.c: 582: case 'c':;Lab6Pruebas.c: 583: realPWM=240*0.4;
  4105   000BEC  0E60               	movlw	96
  4106   000BEE  D005               	goto	L13
  4107   000BF0                     i2l3751:
  4108                           
  4109                           ;Lab6Pruebas.c: 586: case 'v':;Lab6Pruebas.c: 587: realPWM=240*0.6;
  4110   000BF0  0E90               	movlw	144
  4111   000BF2  D003               	goto	L13
  4112   000BF4                     i2l3753:
  4113                           
  4114                           ;Lab6Pruebas.c: 590: case 'b':;Lab6Pruebas.c: 591: realPWM=240*0.8;
  4115   000BF4  0EC0               	movlw	192
  4116   000BF6  D001               	goto	L13
  4117   000BF8                     i2l3755:
  4118                           
  4119                           ;Lab6Pruebas.c: 594: case 'n':;Lab6Pruebas.c: 595: realPWM=240;
  4120   000BF8  0EF0               	movlw	240
  4121   000BFA                     L13:
  4122   000BFA  6E29               	movwf	_realPWM^0,c
  4123                           
  4124                           ;Lab6Pruebas.c: 596: break;
  4125   000BFC  D025               	goto	i2l422
  4126   000BFE                     i2l3759:
  4127   000BFE  501D               	movf	ISR@comando^0,w,c
  4128                           
  4129                           ; Switch size 1, requested type "simple"
  4130                           ; Number of cases is 12, Range of values is 66 to 122
  4131                           ; switch strategies available:
  4132                           ; Name         Instructions Cycles
  4133                           ; simple_byte           37    19 (average)
  4134                           ;	Chosen strategy is simple_byte
  4135   000C00  0A42               	xorlw	66	; case 66
  4136   000C02  B4D8               	btfsc	status,2,c
  4137   000C04  D7F7               	goto	i2l3753
  4138   000C06  0A01               	xorlw	1	; case 67
  4139   000C08  B4D8               	btfsc	status,2,c
  4140   000C0A  D7F0               	goto	i2l3749
  4141   000C0C  0A0D               	xorlw	13	; case 78
  4142   000C0E  B4D8               	btfsc	status,2,c
  4143   000C10  D7F3               	goto	i2l3755
  4144   000C12  0A18               	xorlw	24	; case 86
  4145   000C14  B4D8               	btfsc	status,2,c
  4146   000C16  D7EC               	goto	i2l3751
  4147   000C18  0A0E               	xorlw	14	; case 88
  4148   000C1A  B4D8               	btfsc	status,2,c
  4149   000C1C  D7E5               	goto	i2l3747
  4150   000C1E  0A02               	xorlw	2	; case 90
  4151   000C20  B4D8               	btfsc	status,2,c
  4152   000C22  D7E0               	goto	i2l421
  4153   000C24  0A38               	xorlw	56	; case 98
  4154   000C26  B4D8               	btfsc	status,2,c
  4155   000C28  D7E5               	goto	i2l3753
  4156   000C2A  0A01               	xorlw	1	; case 99
  4157   000C2C  B4D8               	btfsc	status,2,c
  4158   000C2E  D7DE               	goto	i2l3749
  4159   000C30  0A0D               	xorlw	13	; case 110
  4160   000C32  B4D8               	btfsc	status,2,c
  4161   000C34  D7E1               	goto	i2l3755
  4162   000C36  0A18               	xorlw	24	; case 118
  4163   000C38  B4D8               	btfsc	status,2,c
  4164   000C3A  D7DA               	goto	i2l3751
  4165   000C3C  0A0E               	xorlw	14	; case 120
  4166   000C3E  B4D8               	btfsc	status,2,c
  4167   000C40  D7D3               	goto	i2l3747
  4168   000C42  0A02               	xorlw	2	; case 122
  4169   000C44  B4D8               	btfsc	status,2,c
  4170   000C46  D7CE               	goto	i2l421
  4171   000C48                     i2l422:
  4172                           
  4173                           ;Lab6Pruebas.c: 605: CCPR1L = realPWM;
  4174   000C48  C029  FFBE         	movff	_realPWM,4030	;volatile
  4175                           
  4176                           ;Lab6Pruebas.c: 606: flagMotor = 1;
  4177   000C4C  0E01               	movlw	1
  4178   000C4E  6E2B               	movwf	_flagMotor^0,c
  4179                           
  4180                           ;Lab6Pruebas.c: 607: CREN = 1;
  4181   000C50  88AB               	bsf	4011,4,c	;volatile
  4182                           
  4183                           ;Lab6Pruebas.c: 608: RCIE = 1;
  4184   000C52  8A9D               	bsf	3997,5,c	;volatile
  4185   000C54                     i2l434:
  4186   000C54  C019  FFF5         	movff	??_ISR+9,tablat
  4187   000C58  C018  FFF8         	movff	??_ISR+8,tblptru
  4188   000C5C  C017  FFF7         	movff	??_ISR+7,tblptrh
  4189   000C60  C016  FFF6         	movff	??_ISR+6,tblptrl
  4190   000C64  C015  FFF4         	movff	??_ISR+5,prodh
  4191   000C68  C014  FFF3         	movff	??_ISR+4,prodl
  4192   000C6C  C013  FFDA         	movff	??_ISR+3,fsr2h
  4193   000C70  C012  FFD9         	movff	??_ISR+2,fsr2l
  4194   000C74  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4195   000C76  0011               	retfie		f
  4196   000C78                     __end_of_ISR:
  4197                           	callstack 0
  4198                           
  4199 ;; *************** function i2_MostrarNumeros *****************
  4200 ;; Defined at:
  4201 ;;		line 616 in file "Lab6Pruebas.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;		None
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;		None
  4206 ;; Return value:  Size  Location     Type
  4207 ;;                  1    wreg      void 
  4208 ;; Registers used:
  4209 ;;		wreg, status,2, status,0, cstack
  4210 ;; Tracked objects:
  4211 ;;		On entry : 0/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4215 ;;      Params:         0       0       0       0       0       0       0       0       0
  4216 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4217 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4218 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4219 ;;Total ram usage:        0 bytes
  4220 ;; Hardware stack levels used: 1
  4221 ;; Hardware stack levels required when called: 1
  4222 ;; This function calls:
  4223 ;;		i2_EEPROM_Write
  4224 ;;		i2___lbmod
  4225 ;; This function is called by:
  4226 ;;		_ISR
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           	psect	text21
  4231   001676                     __ptext21:
  4232                           	callstack 0
  4233   001676                     i2_MostrarNumeros:
  4234                           	callstack 23
  4235                           
  4236                           ;Lab6Pruebas.c: 619: LATD = contadas % 10;
  4237                           
  4238                           ;incstack = 0
  4239   001676  0E0A               	movlw	10
  4240   001678  6E01               	movwf	i2___lbmod@divisor^0,c
  4241   00167A  5039               	movf	_contadas^0,w,c
  4242   00167C  EC3C  F00D         	call	i2___lbmod
  4243   001680  6E8C               	movwf	140,c	;volatile
  4244                           
  4245                           ;Lab6Pruebas.c: 622: if(contadas<10){
  4246   001682  0E0A               	movlw	10
  4247   001684  6039               	cpfslt	_contadas^0,c
  4248   001686  D002               	goto	i2l3327
  4249                           
  4250                           ;Lab6Pruebas.c: 624: LATE = 0b101;
  4251   001688  0E05               	movlw	5
  4252   00168A  D018               	goto	L18
  4253   00168C                     i2l3327:
  4254   00168C  0E14               	movlw	20
  4255   00168E  6039               	cpfslt	_contadas^0,c
  4256   001690  D002               	goto	i2l3331
  4257                           
  4258                           ;Lab6Pruebas.c: 627: LATE=0b100;
  4259   001692  0E04               	movlw	4
  4260   001694  D013               	goto	L18
  4261   001696                     i2l3331:
  4262   001696  0E1E               	movlw	30
  4263   001698  6039               	cpfslt	_contadas^0,c
  4264   00169A  D002               	goto	i2l3335
  4265                           
  4266                           ;Lab6Pruebas.c: 630: LATE=0b110;
  4267   00169C  0E06               	movlw	6
  4268   00169E  D00E               	goto	L18
  4269   0016A0                     i2l3335:
  4270   0016A0  0E28               	movlw	40
  4271   0016A2  6039               	cpfslt	_contadas^0,c
  4272   0016A4  D002               	goto	i2l3339
  4273                           
  4274                           ;Lab6Pruebas.c: 633: LATE=0b010;
  4275   0016A6  0E02               	movlw	2
  4276   0016A8  D009               	goto	L18
  4277   0016AA                     i2l3339:
  4278   0016AA  0E32               	movlw	50
  4279   0016AC  6039               	cpfslt	_contadas^0,c
  4280   0016AE  D002               	goto	i2l3343
  4281                           
  4282                           ;Lab6Pruebas.c: 636: LATE = 0b011;
  4283   0016B0  0E03               	movlw	3
  4284   0016B2  D004               	goto	L18
  4285   0016B4                     i2l3343:
  4286   0016B4  0E3C               	movlw	60
  4287   0016B6  6039               	cpfslt	_contadas^0,c
  4288   0016B8  D002               	goto	i2l442
  4289                           
  4290                           ;Lab6Pruebas.c: 639: LATE = 0b111;
  4291   0016BA  0E07               	movlw	7
  4292   0016BC                     L18:
  4293   0016BC  6E8D               	movwf	141,c	;volatile
  4294   0016BE                     i2l442:
  4295                           
  4296                           ;Lab6Pruebas.c: 640: };Lab6Pruebas.c: 642: EEPROM_Write(0x01, objetivo);
  4297   0016BE  C03B  F001         	movff	_objetivo,i2EEPROM_Write@data
  4298   0016C2  0E01               	movlw	1
  4299   0016C4  EC62  F00D         	call	i2_EEPROM_Write
  4300                           
  4301                           ;Lab6Pruebas.c: 643: EEPROM_Write(0x02, contadas);
  4302   0016C8  C039  F001         	movff	_contadas,i2EEPROM_Write@data
  4303   0016CC  0E02               	movlw	2
  4304   0016CE  EC62  F00D         	call	i2_EEPROM_Write
  4305                           
  4306                           ;Lab6Pruebas.c: 644: EEPROM_Write(0x03, faltantes);
  4307   0016D2  C03A  F001         	movff	_faltantes,i2EEPROM_Write@data
  4308   0016D6  0E03               	movlw	3
  4309   0016D8  EC62  F00D         	call	i2_EEPROM_Write
  4310   0016DC  0012               	return		;funcret
  4311   0016DE                     __end_ofi2_MostrarNumeros:
  4312                           	callstack 0
  4313                           
  4314 ;; *************** function i2_EEPROM_Write *****************
  4315 ;; Defined at:
  4316 ;;		line 780 in file "Lab6Pruebas.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;  address         1    wreg     unsigned char 
  4319 ;;  data            1    0[COMRAM] unsigned char 
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;  address         1    1[COMRAM] unsigned char 
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  1    wreg      void 
  4324 ;; Registers used:
  4325 ;;		wreg, status,2
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4331 ;;      Params:         1       0       0       0       0       0       0       0       0
  4332 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4333 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4334 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4335 ;;Total ram usage:        2 bytes
  4336 ;; Hardware stack levels used: 1
  4337 ;; This function calls:
  4338 ;;		Nothing
  4339 ;; This function is called by:
  4340 ;;		i2_MostrarNumeros
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           	psect	text22
  4345   001AC4                     __ptext22:
  4346                           	callstack 0
  4347   001AC4                     i2_EEPROM_Write:
  4348                           	callstack 23
  4349                           
  4350                           ;incstack = 0
  4351                           ;i2EEPROM_Write@address stored from wreg
  4352   001AC4  6E02               	movwf	i2EEPROM_Write@address^0,c
  4353                           
  4354                           ;Lab6Pruebas.c: 781: EEADR = address;
  4355   001AC6  C002  FFA9         	movff	i2EEPROM_Write@address,4009	;volatile
  4356                           
  4357                           ;Lab6Pruebas.c: 782: EEDATA = data;
  4358   001ACA  C001  FFA8         	movff	i2EEPROM_Write@data,4008	;volatile
  4359                           
  4360                           ;Lab6Pruebas.c: 783: EECON1bits.EEPGD = 0;
  4361   001ACE  9EA6               	bcf	166,7,c	;volsfr
  4362                           
  4363                           ;Lab6Pruebas.c: 784: EECON1bits.WREN = 1;
  4364   001AD0  84A6               	bsf	166,2,c	;volsfr
  4365                           
  4366                           ;Lab6Pruebas.c: 787: INTCONbits.GIE = 0;
  4367   001AD2  9EF2               	bcf	242,7,c	;volatile
  4368                           
  4369                           ;Lab6Pruebas.c: 788: EECON2 = 0x55;
  4370   001AD4  0E55               	movlw	85
  4371   001AD6  6EA7               	movwf	167,c	;volsfr
  4372                           
  4373                           ;Lab6Pruebas.c: 789: EECON2 = 0xAA;
  4374   001AD8  0EAA               	movlw	170
  4375   001ADA  6EA7               	movwf	167,c	;volsfr
  4376                           
  4377                           ;Lab6Pruebas.c: 790: EECON1bits.WR = 1;
  4378   001ADC  82A6               	bsf	166,1,c	;volsfr
  4379                           
  4380                           ;Lab6Pruebas.c: 791: INTCONbits.GIE = 1;
  4381   001ADE  8EF2               	bsf	242,7,c	;volatile
  4382   001AE0                     i2l517:
  4383   001AE0  B2A6               	btfsc	166,1,c	;volsfr
  4384   001AE2  D7FE               	goto	i2l517
  4385                           
  4386                           ;Lab6Pruebas.c: 794: EECON1bits.WREN = 0;
  4387   001AE4  94A6               	bcf	166,2,c	;volsfr
  4388   001AE6  0012               	return		;funcret
  4389   001AE8                     __end_ofi2_EEPROM_Write:
  4390                           	callstack 0
  4391                           
  4392 ;; *************** function i2_EscribeLCD_n8 *****************
  4393 ;; Defined at:
  4394 ;;		line 149 in file "LibLCDXC8.h"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;  a               1    wreg     unsigned char 
  4397 ;;  b               1    8[COMRAM] unsigned char 
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;  a               1   12[COMRAM] unsigned char 
  4400 ;;  unidad          1   11[COMRAM] unsigned char 
  4401 ;;  decena          1   10[COMRAM] unsigned char 
  4402 ;;  centena         1    9[COMRAM] unsigned char 
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  1    wreg      void 
  4405 ;; Registers used:
  4406 ;;		wreg, status,2, status,0, cstack
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4412 ;;      Params:         1       0       0       0       0       0       0       0       0
  4413 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4414 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4415 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4416 ;;Total ram usage:        5 bytes
  4417 ;; Hardware stack levels used: 1
  4418 ;; Hardware stack levels required when called: 2
  4419 ;; This function calls:
  4420 ;;		i2_EnviaDato
  4421 ;;		i2_HabilitaLCD
  4422 ;;		i2_RetardoLCD
  4423 ;;		i2___lbdiv
  4424 ;;		i2___lbmod
  4425 ;; This function is called by:
  4426 ;;		_ISR
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           	psect	text23
  4431   0010DA                     __ptext23:
  4432                           	callstack 0
  4433   0010DA                     i2_EscribeLCD_n8:
  4434                           	callstack 22
  4435                           
  4436                           ;incstack = 0
  4437                           ;i2EscribeLCD_n8@a stored from wreg
  4438   0010DA  6E0D               	movwf	i2EscribeLCD_n8@a^0,c
  4439                           
  4440                           ;LibLCDXC8.h: 154: unsigned char centena,decena,unidad;;LibLCDXC8.h: 155: LATA3=1;
  4441   0010DC  8689               	bsf	3977,3,c	;volatile
  4442                           
  4443                           ;LibLCDXC8.h: 156: switch(b){
  4444   0010DE  D065               	goto	i2l3311
  4445   0010E0                     i2l3279:
  4446   0010E0  0E0A               	movlw	10
  4447   0010E2  6E01               	movwf	i2___lbmod@divisor^0,c
  4448   0010E4  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4449   0010E6  EC3C  F00D         	call	i2___lbmod
  4450   0010EA  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  4451                           
  4452                           ;LibLCDXC8.h: 158: EnviaDato(unidad+48);
  4453   0010EC  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  4454   0010EE  0F30               	addlw	48
  4455   0010F0  EC6A  F00C         	call	i2_EnviaDato
  4456                           
  4457                           ;LibLCDXC8.h: 159: HabilitaLCD();
  4458   0010F4  ECE1  F00D         	call	i2_HabilitaLCD	;wreg free
  4459                           
  4460                           ;LibLCDXC8.h: 160: RetardoLCD(4);
  4461   0010F8  0E04               	movlw	4
  4462   0010FA  ECC7  F00B         	call	i2_RetardoLCD
  4463                           
  4464                           ;LibLCDXC8.h: 161: break;
  4465   0010FE  0012               	return	
  4466   001100                     i2l3285:
  4467   001100  0E0A               	movlw	10
  4468   001102  6E05               	movwf	i2___lbdiv@divisor^0,c
  4469   001104  0E64               	movlw	100
  4470   001106  6E01               	movwf	i2___lbmod@divisor^0,c
  4471   001108  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4472   00110A  EC3C  F00D         	call	i2___lbmod
  4473   00110E  ECC8  F00C         	call	i2___lbdiv
  4474   001112  6E0B               	movwf	i2EscribeLCD_n8@decena^0,c
  4475                           
  4476                           ;LibLCDXC8.h: 163: unidad=a%10;
  4477   001114  0E0A               	movlw	10
  4478   001116  6E01               	movwf	i2___lbmod@divisor^0,c
  4479   001118  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4480   00111A  EC3C  F00D         	call	i2___lbmod
  4481   00111E  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  4482                           
  4483                           ;LibLCDXC8.h: 164: EnviaDato(decena+48);
  4484   001120  500B               	movf	i2EscribeLCD_n8@decena^0,w,c
  4485   001122  0F30               	addlw	48
  4486   001124  EC6A  F00C         	call	i2_EnviaDato
  4487                           
  4488                           ;LibLCDXC8.h: 165: HabilitaLCD();
  4489   001128  ECE1  F00D         	call	i2_HabilitaLCD	;wreg free
  4490                           
  4491                           ;LibLCDXC8.h: 166: RetardoLCD(4);
  4492   00112C  0E04               	movlw	4
  4493   00112E  ECC7  F00B         	call	i2_RetardoLCD
  4494                           
  4495                           ;LibLCDXC8.h: 167: EnviaDato(unidad+48);
  4496   001132  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  4497   001134  0F30               	addlw	48
  4498   001136  EC6A  F00C         	call	i2_EnviaDato
  4499                           
  4500                           ;LibLCDXC8.h: 168: HabilitaLCD();
  4501   00113A  ECE1  F00D         	call	i2_HabilitaLCD	;wreg free
  4502                           
  4503                           ;LibLCDXC8.h: 169: RetardoLCD(4);
  4504   00113E  0E04               	movlw	4
  4505   001140  ECC7  F00B         	call	i2_RetardoLCD
  4506                           
  4507                           ;LibLCDXC8.h: 170: break;
  4508   001144  0012               	return	
  4509   001146                     i2l3295:
  4510   001146  0E64               	movlw	100
  4511   001148  6E05               	movwf	i2___lbdiv@divisor^0,c
  4512   00114A  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4513   00114C  ECC8  F00C         	call	i2___lbdiv
  4514   001150  6E0A               	movwf	i2EscribeLCD_n8@centena^0,c
  4515                           
  4516                           ;LibLCDXC8.h: 172: decena=(a%100)/10;
  4517   001152  0E0A               	movlw	10
  4518   001154  6E05               	movwf	i2___lbdiv@divisor^0,c
  4519   001156  0E64               	movlw	100
  4520   001158  6E01               	movwf	i2___lbmod@divisor^0,c
  4521   00115A  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4522   00115C  EC3C  F00D         	call	i2___lbmod
  4523   001160  ECC8  F00C         	call	i2___lbdiv
  4524   001164  6E0B               	movwf	i2EscribeLCD_n8@decena^0,c
  4525                           
  4526                           ;LibLCDXC8.h: 173: unidad=a%10;
  4527   001166  0E0A               	movlw	10
  4528   001168  6E01               	movwf	i2___lbmod@divisor^0,c
  4529   00116A  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4530   00116C  EC3C  F00D         	call	i2___lbmod
  4531   001170  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  4532                           
  4533                           ;LibLCDXC8.h: 174: EnviaDato(centena+48);
  4534   001172  500A               	movf	i2EscribeLCD_n8@centena^0,w,c
  4535   001174  0F30               	addlw	48
  4536   001176  EC6A  F00C         	call	i2_EnviaDato
  4537                           
  4538                           ;LibLCDXC8.h: 175: HabilitaLCD();
  4539   00117A  ECE1  F00D         	call	i2_HabilitaLCD	;wreg free
  4540                           
  4541                           ;LibLCDXC8.h: 176: RetardoLCD(4);
  4542   00117E  0E04               	movlw	4
  4543   001180  ECC7  F00B         	call	i2_RetardoLCD
  4544                           
  4545                           ;LibLCDXC8.h: 177: EnviaDato(decena+48);
  4546   001184  500B               	movf	i2EscribeLCD_n8@decena^0,w,c
  4547   001186  0F30               	addlw	48
  4548   001188  EC6A  F00C         	call	i2_EnviaDato
  4549                           
  4550                           ;LibLCDXC8.h: 178: HabilitaLCD();
  4551   00118C  ECE1  F00D         	call	i2_HabilitaLCD	;wreg free
  4552                           
  4553                           ;LibLCDXC8.h: 179: RetardoLCD(4);
  4554   001190  0E04               	movlw	4
  4555   001192  ECC7  F00B         	call	i2_RetardoLCD
  4556                           
  4557                           ;LibLCDXC8.h: 180: EnviaDato(unidad+48);
  4558   001196  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  4559   001198  0F30               	addlw	48
  4560   00119A  EC6A  F00C         	call	i2_EnviaDato
  4561                           
  4562                           ;LibLCDXC8.h: 181: HabilitaLCD();
  4563   00119E  ECE1  F00D         	call	i2_HabilitaLCD	;wreg free
  4564                           
  4565                           ;LibLCDXC8.h: 182: RetardoLCD(4);
  4566   0011A2  0E04               	movlw	4
  4567   0011A4  ECC7  F00B         	call	i2_RetardoLCD
  4568                           
  4569                           ;LibLCDXC8.h: 183: break;
  4570   0011A8  0012               	return	
  4571   0011AA                     i2l3311:
  4572   0011AA  5009               	movf	i2EscribeLCD_n8@b^0,w,c
  4573                           
  4574                           ; Switch size 1, requested type "simple"
  4575                           ; Number of cases is 3, Range of values is 1 to 3
  4576                           ; switch strategies available:
  4577                           ; Name         Instructions Cycles
  4578                           ; simple_byte           10     6 (average)
  4579                           ;	Chosen strategy is simple_byte
  4580   0011AC  0A01               	xorlw	1	; case 1
  4581   0011AE  B4D8               	btfsc	status,2,c
  4582   0011B0  D797               	goto	i2l3279
  4583   0011B2  0A03               	xorlw	3	; case 2
  4584   0011B4  B4D8               	btfsc	status,2,c
  4585   0011B6  D7A4               	goto	i2l3285
  4586   0011B8  0A01               	xorlw	1	; case 3
  4587   0011BA  A4D8               	btfss	status,2,c
  4588   0011BC  0012               	return	
  4589   0011BE  D7C3               	goto	i2l3295
  4590   0011C0                     __end_ofi2_EscribeLCD_n8:
  4591                           	callstack 0
  4592                           
  4593 ;; *************** function i2___lbmod *****************
  4594 ;; Defined at:
  4595 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbmod.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;  dividend        1    wreg     unsigned char 
  4598 ;;  divisor         1    0[COMRAM] unsigned char 
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;  dividend        1    1[COMRAM] unsigned char 
  4601 ;;  rem             1    3[COMRAM] unsigned char 
  4602 ;;  counter         1    2[COMRAM] unsigned char 
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  1    wreg      unsigned char 
  4605 ;; Registers used:
  4606 ;;		wreg, status,2, status,0
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4612 ;;      Params:         1       0       0       0       0       0       0       0       0
  4613 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4614 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4615 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4616 ;;Total ram usage:        4 bytes
  4617 ;; Hardware stack levels used: 1
  4618 ;; This function calls:
  4619 ;;		Nothing
  4620 ;; This function is called by:
  4621 ;;		i2_EscribeLCD_n8
  4622 ;;		i2_MostrarNumeros
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           	psect	text24
  4627   001A78                     __ptext24:
  4628                           	callstack 0
  4629   001A78                     i2___lbmod:
  4630                           	callstack 23
  4631                           
  4632                           ;incstack = 0
  4633                           ;i2___lbmod@dividend stored from wreg
  4634   001A78  6E02               	movwf	i2___lbmod@dividend^0,c
  4635   001A7A  0E08               	movlw	8
  4636   001A7C  6E03               	movwf	i2___lbmod@counter^0,c
  4637   001A7E  6A04               	clrf	i2___lbmod@rem^0,c
  4638   001A80                     i2l2981:
  4639   001A80  90D8               	bcf	status,0,c
  4640   001A82  3402               	rlcf	i2___lbmod@dividend^0,w,c
  4641   001A84  3404               	rlcf	i2___lbmod@rem^0,w,c
  4642   001A86  6E04               	movwf	i2___lbmod@rem^0,c
  4643   001A88  90D8               	bcf	status,0,c
  4644   001A8A  3602               	rlcf	i2___lbmod@dividend^0,f,c
  4645   001A8C  5001               	movf	i2___lbmod@divisor^0,w,c
  4646   001A8E  5C04               	subwf	i2___lbmod@rem^0,w,c
  4647   001A90  A0D8               	btfss	status,0,c
  4648   001A92  D002               	goto	i2l2989
  4649   001A94  5001               	movf	i2___lbmod@divisor^0,w,c
  4650   001A96  5E04               	subwf	i2___lbmod@rem^0,f,c
  4651   001A98                     i2l2989:
  4652   001A98  2E03               	decfsz	i2___lbmod@counter^0,f,c
  4653   001A9A  D7F2               	goto	i2l2981
  4654   001A9C  5004               	movf	i2___lbmod@rem^0,w,c
  4655   001A9E  0012               	return		;funcret
  4656   001AA0                     __end_ofi2___lbmod:
  4657                           	callstack 0
  4658                           
  4659 ;; *************** function i2___lbdiv *****************
  4660 ;; Defined at:
  4661 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbdiv.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;  dividend        1    wreg     unsigned char 
  4664 ;;  divisor         1    4[COMRAM] unsigned char 
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;  dividend        1    5[COMRAM] unsigned char 
  4667 ;;  quotient        1    7[COMRAM] unsigned char 
  4668 ;;  counter         1    6[COMRAM] unsigned char 
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  1    wreg      unsigned char 
  4671 ;; Registers used:
  4672 ;;		wreg, status,2, status,0
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4678 ;;      Params:         1       0       0       0       0       0       0       0       0
  4679 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4680 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4681 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4682 ;;Total ram usage:        4 bytes
  4683 ;; Hardware stack levels used: 1
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_ISR
  4688 ;;		i2_EscribeLCD_n8
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           	psect	text25
  4693   001990                     __ptext25:
  4694                           	callstack 0
  4695   001990                     i2___lbdiv:
  4696                           	callstack 24
  4697                           
  4698                           ;incstack = 0
  4699                           ;i2___lbdiv@dividend stored from wreg
  4700   001990  6E06               	movwf	i2___lbdiv@dividend^0,c
  4701   001992  6A08               	clrf	i2___lbdiv@quotient^0,c
  4702   001994  5005               	movf	i2___lbdiv@divisor^0,w,c
  4703   001996  B4D8               	btfsc	status,2,c
  4704   001998  D015               	goto	i2l2973
  4705   00199A  0E01               	movlw	1
  4706   00199C  6E07               	movwf	i2___lbdiv@counter^0,c
  4707   00199E  D003               	goto	i2l2961
  4708   0019A0                     i2l2957:
  4709   0019A0  90D8               	bcf	status,0,c
  4710   0019A2  3605               	rlcf	i2___lbdiv@divisor^0,f,c
  4711   0019A4  2A07               	incf	i2___lbdiv@counter^0,f,c
  4712   0019A6                     i2l2961:
  4713   0019A6  AE05               	btfss	i2___lbdiv@divisor^0,7,c
  4714   0019A8  D7FB               	goto	i2l2957
  4715   0019AA                     i2u189_40:
  4716   0019AA  90D8               	bcf	status,0,c
  4717   0019AC  3608               	rlcf	i2___lbdiv@quotient^0,f,c
  4718   0019AE  5005               	movf	i2___lbdiv@divisor^0,w,c
  4719   0019B0  5C06               	subwf	i2___lbdiv@dividend^0,w,c
  4720   0019B2  A0D8               	btfss	status,0,c
  4721   0019B4  D003               	goto	i2l2969
  4722   0019B6  5005               	movf	i2___lbdiv@divisor^0,w,c
  4723   0019B8  5E06               	subwf	i2___lbdiv@dividend^0,f,c
  4724   0019BA  8008               	bsf	i2___lbdiv@quotient^0,0,c
  4725   0019BC                     i2l2969:
  4726   0019BC  90D8               	bcf	status,0,c
  4727   0019BE  3205               	rrcf	i2___lbdiv@divisor^0,f,c
  4728   0019C0  2E07               	decfsz	i2___lbdiv@counter^0,f,c
  4729   0019C2  D7F3               	goto	i2u189_40
  4730   0019C4                     i2l2973:
  4731   0019C4  5008               	movf	i2___lbdiv@quotient^0,w,c
  4732   0019C6  0012               	return		;funcret
  4733   0019C8                     __end_ofi2___lbdiv:
  4734                           	callstack 0
  4735                           
  4736 ;; *************** function i2_EscribeLCD_c *****************
  4737 ;; Defined at:
  4738 ;;		line 140 in file "LibLCDXC8.h"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;  a               1    wreg     unsigned char 
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;  a               1    4[COMRAM] unsigned char 
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  1    wreg      void 
  4745 ;; Registers used:
  4746 ;;		wreg, status,2, status,0, cstack
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4752 ;;      Params:         0       0       0       0       0       0       0       0       0
  4753 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4754 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4755 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4756 ;;Total ram usage:        1 bytes
  4757 ;; Hardware stack levels used: 1
  4758 ;; Hardware stack levels required when called: 2
  4759 ;; This function calls:
  4760 ;;		i2_EnviaDato
  4761 ;;		i2_HabilitaLCD
  4762 ;;		i2_RetardoLCD
  4763 ;; This function is called by:
  4764 ;;		_ISR
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           	psect	text26
  4769   001B4C                     __ptext26:
  4770                           	callstack 0
  4771   001B4C                     i2_EscribeLCD_c:
  4772                           	callstack 22
  4773                           
  4774                           ;incstack = 0
  4775                           ;i2EscribeLCD_c@a stored from wreg
  4776   001B4C  6E05               	movwf	i2EscribeLCD_c@a^0,c
  4777                           
  4778                           ;LibLCDXC8.h: 144: LATA3=1;
  4779   001B4E  8689               	bsf	3977,3,c	;volatile
  4780                           
  4781                           ;LibLCDXC8.h: 145: EnviaDato(a);
  4782   001B50  5005               	movf	i2EscribeLCD_c@a^0,w,c
  4783   001B52  EC6A  F00C         	call	i2_EnviaDato
  4784                           
  4785                           ;LibLCDXC8.h: 146: HabilitaLCD();
  4786   001B56  ECE1  F00D         	call	i2_HabilitaLCD	;wreg free
  4787                           
  4788                           ;LibLCDXC8.h: 147: RetardoLCD(4);
  4789   001B5A  0E04               	movlw	4
  4790   001B5C  ECC7  F00B         	call	i2_RetardoLCD
  4791   001B60  0012               	return		;funcret
  4792   001B62                     __end_ofi2_EscribeLCD_c:
  4793                           	callstack 0
  4794                           
  4795 ;; *************** function i2_DireccionaLCD *****************
  4796 ;; Defined at:
  4797 ;;		line 247 in file "LibLCDXC8.h"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;  a               1    wreg     unsigned char 
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;  a               1    4[COMRAM] unsigned char 
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  1    wreg      void 
  4804 ;; Registers used:
  4805 ;;		wreg, status,2, status,0, cstack
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4811 ;;      Params:         0       0       0       0       0       0       0       0       0
  4812 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4813 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4814 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4815 ;;Total ram usage:        1 bytes
  4816 ;; Hardware stack levels used: 1
  4817 ;; Hardware stack levels required when called: 2
  4818 ;; This function calls:
  4819 ;;		i2_EnviaDato
  4820 ;;		i2_HabilitaLCD
  4821 ;;		i2_RetardoLCD
  4822 ;; This function is called by:
  4823 ;;		_ISR
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text27
  4828   001B62                     __ptext27:
  4829                           	callstack 0
  4830   001B62                     i2_DireccionaLCD:
  4831                           	callstack 22
  4832                           
  4833                           ;incstack = 0
  4834                           ;i2DireccionaLCD@a stored from wreg
  4835   001B62  6E05               	movwf	i2DireccionaLCD@a^0,c
  4836                           
  4837                           ;LibLCDXC8.h: 250: LATA3=0;
  4838   001B64  9689               	bcf	3977,3,c	;volatile
  4839                           
  4840                           ;LibLCDXC8.h: 251: EnviaDato(a);
  4841   001B66  5005               	movf	i2DireccionaLCD@a^0,w,c
  4842   001B68  EC6A  F00C         	call	i2_EnviaDato
  4843                           
  4844                           ;LibLCDXC8.h: 252: HabilitaLCD();
  4845   001B6C  ECE1  F00D         	call	i2_HabilitaLCD	;wreg free
  4846                           
  4847                           ;LibLCDXC8.h: 253: RetardoLCD(4);
  4848   001B70  0E04               	movlw	4
  4849   001B72  ECC7  F00B         	call	i2_RetardoLCD
  4850   001B76  0012               	return		;funcret
  4851   001B78                     __end_ofi2_DireccionaLCD:
  4852                           	callstack 0
  4853                           
  4854 ;; *************** function i2_EnviaDato *****************
  4855 ;; Defined at:
  4856 ;;		line 63 in file "LibLCDXC8.h"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;  a               1    wreg     unsigned char 
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;  a               1    3[COMRAM] unsigned char 
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  1    wreg      void 
  4863 ;; Registers used:
  4864 ;;		wreg, status,2, status,0, cstack
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4870 ;;      Params:         0       0       0       0       0       0       0       0       0
  4871 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4872 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4873 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4874 ;;Total ram usage:        2 bytes
  4875 ;; Hardware stack levels used: 1
  4876 ;; Hardware stack levels required when called: 1
  4877 ;; This function calls:
  4878 ;;		i2_HabilitaLCD
  4879 ;;		i2_RetardoLCD
  4880 ;; This function is called by:
  4881 ;;		i2_EscribeLCD_c
  4882 ;;		i2_EscribeLCD_n8
  4883 ;;		i2_DireccionaLCD
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           
  4887                           	psect	text28
  4888   0018D4                     __ptext28:
  4889                           	callstack 0
  4890   0018D4                     i2_EnviaDato:
  4891                           	callstack 22
  4892                           
  4893                           ;incstack = 0
  4894                           ;i2EnviaDato@a stored from wreg
  4895   0018D4  6E04               	movwf	i2EnviaDato@a^0,c
  4896                           
  4897                           ;LibLCDXC8.h: 64: if(interfaz==4){
  4898   0018D6  0E04               	movlw	4
  4899   0018D8  1841               	xorwf	_interfaz^0,w,c
  4900   0018DA  A4D8               	btfss	status,2,c
  4901   0018DC  D01A               	goto	i2l2929
  4902                           
  4903                           ;LibLCDXC8.h: 65: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  4904   0018DE  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  4905   0018E2  0EF0               	movlw	240
  4906   0018E4  1603               	andwf	??i2_EnviaDato^0,f,c
  4907   0018E6  508C               	movf	140,w,c	;volatile
  4908   0018E8  0B0F               	andlw	15
  4909   0018EA  1003               	iorwf	??i2_EnviaDato^0,w,c
  4910   0018EC  6E8C               	movwf	140,c	;volatile
  4911                           
  4912                           ;LibLCDXC8.h: 66: HabilitaLCD();
  4913   0018EE  ECE1  F00D         	call	i2_HabilitaLCD	;wreg free
  4914                           
  4915                           ;LibLCDXC8.h: 67: RetardoLCD(1);
  4916   0018F2  0E01               	movlw	1
  4917   0018F4  ECC7  F00B         	call	i2_RetardoLCD
  4918                           
  4919                           ;LibLCDXC8.h: 68: LATD=(LATD & 0b00001111) | (a<<4);
  4920   0018F8  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  4921   0018FC  3A03               	swapf	??i2_EnviaDato^0,f,c
  4922   0018FE  0EF0               	movlw	240
  4923   001900  1603               	andwf	??i2_EnviaDato^0,f,c
  4924   001902  508C               	movf	140,w,c	;volatile
  4925   001904  0B0F               	andlw	15
  4926   001906  1003               	iorwf	??i2_EnviaDato^0,w,c
  4927   001908  6E8C               	movwf	140,c	;volatile
  4928                           
  4929                           ;LibLCDXC8.h: 70: RetardoLCD(1);
  4930   00190A  0E01               	movlw	1
  4931   00190C  ECC7  F00B         	call	i2_RetardoLCD
  4932                           
  4933                           ;LibLCDXC8.h: 71: }else if(interfaz==8){
  4934   001910  0012               	return	
  4935   001912                     i2l2929:
  4936   001912  0E08               	movlw	8
  4937   001914  1841               	xorwf	_interfaz^0,w,c
  4938   001916  A4D8               	btfss	status,2,c
  4939   001918  0012               	return	
  4940                           
  4941                           ;LibLCDXC8.h: 72: LATD=a;
  4942   00191A  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  4943   00191E  0012               	return		;funcret
  4944   001920                     __end_ofi2_EnviaDato:
  4945                           	callstack 0
  4946                           
  4947 ;; *************** function i2_RetardoLCD *****************
  4948 ;; Defined at:
  4949 ;;		line 287 in file "LibLCDXC8.h"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;  a               1    wreg     unsigned char 
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;  a               1    1[COMRAM] unsigned char 
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  1    wreg      void 
  4956 ;; Registers used:
  4957 ;;		wreg, status,2, status,0
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4963 ;;      Params:         0       0       0       0       0       0       0       0       0
  4964 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4965 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4966 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4967 ;;Total ram usage:        2 bytes
  4968 ;; Hardware stack levels used: 1
  4969 ;; This function calls:
  4970 ;;		Nothing
  4971 ;; This function is called by:
  4972 ;;		i2_EnviaDato
  4973 ;;		i2_EscribeLCD_c
  4974 ;;		i2_EscribeLCD_n8
  4975 ;;		i2_DireccionaLCD
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           	psect	text29
  4980   00178E                     __ptext29:
  4981                           	callstack 0
  4982   00178E                     i2_RetardoLCD:
  4983                           	callstack 23
  4984                           
  4985                           ;incstack = 0
  4986                           ;i2RetardoLCD@a stored from wreg
  4987   00178E  6E02               	movwf	i2RetardoLCD@a^0,c
  4988                           
  4989                           ;LibLCDXC8.h: 288: switch(a){
  4990   001790  D01B               	goto	i2l2589
  4991   001792                     i2l2579:
  4992   001792  0E05               	movlw	5
  4993   001794  6E01               	movwf	??i2_RetardoLCD^0,c
  4994   001796  0EDE               	movlw	222
  4995   001798                     i2u348_47:
  4996   001798  2EE8               	decfsz	wreg,f,c
  4997   00179A  D7FE               	bra	i2u348_47
  4998   00179C  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  4999   00179E  D7FC               	bra	i2u348_47
  5000                           
  5001                           ;LibLCDXC8.h: 291: break;
  5002   0017A0  0012               	return	
  5003   0017A2                     i2l2581:
  5004   0017A2  0E53               	movlw	83
  5005   0017A4                     i2u349_47:
  5006   0017A4  2EE8               	decfsz	wreg,f,c
  5007   0017A6  D7FE               	bra	i2u349_47
  5008   0017A8  0000               	nop	
  5009                           
  5010                           ;LibLCDXC8.h: 293: _delay((unsigned long)((640)*(1000000/4000000.0)));
  5011   0017AA  0E35               	movlw	53
  5012   0017AC                     i2u350_47:
  5013   0017AC  2EE8               	decfsz	wreg,f,c
  5014   0017AE  D7FE               	bra	i2u350_47
  5015   0017B0  0000               	nop	
  5016                           
  5017                           ;LibLCDXC8.h: 295: break;
  5018   0017B2  0012               	return	
  5019   0017B4                     i2l2583:
  5020   0017B4  0E08               	movlw	8
  5021   0017B6                     i2u351_47:
  5022   0017B6  2EE8               	decfsz	wreg,f,c
  5023   0017B8  D7FE               	bra	i2u351_47
  5024   0017BA  0000               	nop	
  5025                           
  5026                           ;LibLCDXC8.h: 298: break;
  5027   0017BC  0012               	return	
  5028   0017BE                     i2l2585:
  5029   0017BE  0E03               	movlw	3
  5030   0017C0                     i2u352_47:
  5031   0017C0  2EE8               	decfsz	wreg,f,c
  5032   0017C2  D7FE               	bra	i2u352_47
  5033   0017C4  0000               	nop	
  5034                           
  5035                           ;LibLCDXC8.h: 301: break;
  5036   0017C6  0012               	return	
  5037   0017C8                     i2l2589:
  5038   0017C8  5002               	movf	i2RetardoLCD@a^0,w,c
  5039                           
  5040                           ; Switch size 1, requested type "simple"
  5041                           ; Number of cases is 4, Range of values is 1 to 4
  5042                           ; switch strategies available:
  5043                           ; Name         Instructions Cycles
  5044                           ; simple_byte           13     7 (average)
  5045                           ;	Chosen strategy is simple_byte
  5046   0017CA  0A01               	xorlw	1	; case 1
  5047   0017CC  B4D8               	btfsc	status,2,c
  5048   0017CE  D7E1               	goto	i2l2579
  5049   0017D0  0A03               	xorlw	3	; case 2
  5050   0017D2  B4D8               	btfsc	status,2,c
  5051   0017D4  D7E6               	goto	i2l2581
  5052   0017D6  0A01               	xorlw	1	; case 3
  5053   0017D8  B4D8               	btfsc	status,2,c
  5054   0017DA  D7EC               	goto	i2l2583
  5055   0017DC  0A07               	xorlw	7	; case 4
  5056   0017DE  A4D8               	btfss	status,2,c
  5057   0017E0  0012               	return	
  5058   0017E2  D7ED               	goto	i2l2585
  5059   0017E4                     __end_ofi2_RetardoLCD:
  5060                           	callstack 0
  5061                           
  5062 ;; *************** function i2_HabilitaLCD *****************
  5063 ;; Defined at:
  5064 ;;		line 109 in file "LibLCDXC8.h"
  5065 ;; Parameters:    Size  Location     Type
  5066 ;;		None
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;		None
  5069 ;; Return value:  Size  Location     Type
  5070 ;;                  1    wreg      void 
  5071 ;; Registers used:
  5072 ;;		wreg
  5073 ;; Tracked objects:
  5074 ;;		On entry : 0/0
  5075 ;;		On exit  : 0/0
  5076 ;;		Unchanged: 0/0
  5077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5078 ;;      Params:         0       0       0       0       0       0       0       0       0
  5079 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5080 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5081 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5082 ;;Total ram usage:        0 bytes
  5083 ;; Hardware stack levels used: 1
  5084 ;; This function calls:
  5085 ;;		Nothing
  5086 ;; This function is called by:
  5087 ;;		i2_EnviaDato
  5088 ;;		i2_EscribeLCD_c
  5089 ;;		i2_EscribeLCD_n8
  5090 ;;		i2_DireccionaLCD
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           	psect	text30
  5095   001BC2                     __ptext30:
  5096                           	callstack 0
  5097   001BC2                     i2_HabilitaLCD:
  5098                           	callstack 23
  5099                           
  5100                           ;LibLCDXC8.h: 111: LATA5=1;
  5101                           
  5102                           ;incstack = 0
  5103   001BC2  8A89               	bsf	3977,5,c	;volatile
  5104                           
  5105                           ;LibLCDXC8.h: 112: _delay((unsigned long)((40)*(1000000/4000000.0)));
  5106   001BC4  0E03               	movlw	3
  5107   001BC6                     i2u353_47:
  5108   001BC6  2EE8               	decfsz	wreg,f,c
  5109   001BC8  D7FE               	bra	i2u353_47
  5110   001BCA  0000               	nop	
  5111                           
  5112                           ;LibLCDXC8.h: 114: LATA5=0;
  5113   001BCC  9A89               	bcf	3977,5,c	;volatile
  5114   001BCE  0012               	return		;funcret
  5115   001BD0                     __end_ofi2_HabilitaLCD:
  5116                           	callstack 0
  5117                           
  5118 ;; *************** function _numASCII *****************
  5119 ;; Defined at:
  5120 ;;		line 734 in file "Lab6Pruebas.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;  number          2    8[COMRAM] int 
  5123 ;;  ascii_values    2   10[COMRAM] PTR unsigned char 
  5124 ;;		 -> ISR@numAscii(0), 
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;		None
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  1    wreg      void 
  5129 ;; Registers used:
  5130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5136 ;;      Params:         4       0       0       0       0       0       0       0       0
  5137 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5138 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5139 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5140 ;;Total ram usage:        4 bytes
  5141 ;; Hardware stack levels used: 1
  5142 ;; Hardware stack levels required when called: 1
  5143 ;; This function calls:
  5144 ;;		___awdiv
  5145 ;;		___awmod
  5146 ;; This function is called by:
  5147 ;;		_ISR
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151                           	psect	text31
  5152   0011C0                     __ptext31:
  5153                           	callstack 0
  5154   0011C0                     _numASCII:
  5155                           	callstack 23
  5156                           
  5157                           ;Lab6Pruebas.c: 735: if (number < 10) {
  5158                           
  5159                           ;incstack = 0
  5160   0011C0  BE0A               	btfsc	(numASCII@number+1)^0,7,c
  5161   0011C2  D006               	goto	i2u203_40
  5162   0011C4  500A               	movf	(numASCII@number+1)^0,w,c
  5163   0011C6  E113               	bnz	i2l3155
  5164   0011C8  0E0A               	movlw	10
  5165   0011CA  5C09               	subwf	numASCII@number^0,w,c
  5166   0011CC  B0D8               	btfsc	status,0,c
  5167   0011CE  D00F               	goto	i2l3155
  5168   0011D0                     i2u203_40:
  5169                           
  5170                           ;Lab6Pruebas.c: 736: ascii_values[0] = '0' + number;
  5171   0011D0  5009               	movf	numASCII@number^0,w,c
  5172   0011D2  0F30               	addlw	48
  5173   0011D4  C00B  FFD9         	movff	numASCII@ascii_values,fsr2l
  5174   0011D8  C00C  FFDA         	movff	numASCII@ascii_values+1,fsr2h
  5175   0011DC  6EDF               	movwf	indf2,c
  5176                           
  5177                           ;Lab6Pruebas.c: 737: ascii_values[1] = '\0';
  5178   0011DE  EE20 F001          	lfsr	2,1
  5179   0011E2  500B               	movf	numASCII@ascii_values^0,w,c
  5180   0011E4  26D9               	addwf	fsr2l,f,c
  5181   0011E6  500C               	movf	(numASCII@ascii_values+1)^0,w,c
  5182   0011E8  22DA               	addwfc	fsr2h,f,c
  5183   0011EA  6ADF               	clrf	indf2,c
  5184                           
  5185                           ;Lab6Pruebas.c: 738: } else if (number < 100) {
  5186   0011EC  0012               	return	
  5187   0011EE                     i2l3155:
  5188   0011EE  BE0A               	btfsc	(numASCII@number+1)^0,7,c
  5189   0011F0  D006               	goto	i2u204_40
  5190   0011F2  500A               	movf	(numASCII@number+1)^0,w,c
  5191   0011F4  E130               	bnz	i2l3161
  5192   0011F6  0E64               	movlw	100
  5193   0011F8  5C09               	subwf	numASCII@number^0,w,c
  5194   0011FA  B0D8               	btfsc	status,0,c
  5195   0011FC  D02C               	goto	i2l3161
  5196   0011FE                     i2u204_40:
  5197                           
  5198                           ;Lab6Pruebas.c: 739: ascii_values[0] = '0' + number / 10;
  5199   0011FE  C009  F001         	movff	numASCII@number,___awdiv@dividend
  5200   001202  C00A  F002         	movff	numASCII@number+1,___awdiv@dividend+1
  5201   001206  0E00               	movlw	0
  5202   001208  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5203   00120A  0E0A               	movlw	10
  5204   00120C  6E03               	movwf	___awdiv@divisor^0,c
  5205   00120E  EC57  F00A         	call	___awdiv	;wreg free
  5206   001212  5001               	movf	?___awdiv^0,w,c
  5207   001214  0F30               	addlw	48
  5208   001216  C00B  FFD9         	movff	numASCII@ascii_values,fsr2l
  5209   00121A  C00C  FFDA         	movff	numASCII@ascii_values+1,fsr2h
  5210   00121E  6EDF               	movwf	indf2,c
  5211                           
  5212                           ;Lab6Pruebas.c: 740: ascii_values[1] = '0' + number % 10;
  5213   001220  EE20 F001          	lfsr	2,1
  5214   001224  500B               	movf	numASCII@ascii_values^0,w,c
  5215   001226  26D9               	addwf	fsr2l,f,c
  5216   001228  500C               	movf	(numASCII@ascii_values+1)^0,w,c
  5217   00122A  22DA               	addwfc	fsr2h,f,c
  5218   00122C  C009  F001         	movff	numASCII@number,___awmod@dividend
  5219   001230  C00A  F002         	movff	numASCII@number+1,___awmod@dividend+1
  5220   001234  0E00               	movlw	0
  5221   001236  6E04               	movwf	(___awmod@divisor+1)^0,c
  5222   001238  0E0A               	movlw	10
  5223   00123A  6E03               	movwf	___awmod@divisor^0,c
  5224   00123C  ECD0  F00A         	call	___awmod	;wreg free
  5225   001240  5001               	movf	?___awmod^0,w,c
  5226   001242  0F30               	addlw	48
  5227   001244  6EDF               	movwf	indf2,c
  5228                           
  5229                           ;Lab6Pruebas.c: 741: ascii_values[2] = '\0';
  5230   001246  EE20 F002          	lfsr	2,2
  5231   00124A  500B               	movf	numASCII@ascii_values^0,w,c
  5232   00124C  26D9               	addwf	fsr2l,f,c
  5233   00124E  500C               	movf	(numASCII@ascii_values+1)^0,w,c
  5234   001250  22DA               	addwfc	fsr2h,f,c
  5235   001252  6ADF               	clrf	indf2,c
  5236                           
  5237                           ;Lab6Pruebas.c: 742: } else {
  5238   001254  0012               	return	
  5239   001256                     i2l3161:
  5240                           
  5241                           ;Lab6Pruebas.c: 743: ascii_values[0] = '1';
  5242   001256  C00B  FFD9         	movff	numASCII@ascii_values,fsr2l
  5243   00125A  C00C  FFDA         	movff	numASCII@ascii_values+1,fsr2h
  5244   00125E  0E31               	movlw	49
  5245   001260  6EDF               	movwf	indf2,c
  5246                           
  5247                           ;Lab6Pruebas.c: 744: ascii_values[1] = '0';
  5248   001262  EE20 F001          	lfsr	2,1
  5249   001266  500B               	movf	numASCII@ascii_values^0,w,c
  5250   001268  26D9               	addwf	fsr2l,f,c
  5251   00126A  500C               	movf	(numASCII@ascii_values+1)^0,w,c
  5252   00126C  22DA               	addwfc	fsr2h,f,c
  5253   00126E  0E30               	movlw	48
  5254   001270  6EDF               	movwf	indf2,c
  5255                           
  5256                           ;Lab6Pruebas.c: 745: ascii_values[2] = '0';
  5257   001272  EE20 F002          	lfsr	2,2
  5258   001276  500B               	movf	numASCII@ascii_values^0,w,c
  5259   001278  26D9               	addwf	fsr2l,f,c
  5260   00127A  500C               	movf	(numASCII@ascii_values+1)^0,w,c
  5261   00127C  22DA               	addwfc	fsr2h,f,c
  5262   00127E  0E30               	movlw	48
  5263   001280  6EDF               	movwf	indf2,c
  5264                           
  5265                           ;Lab6Pruebas.c: 746: ascii_values[3] = '\0';
  5266   001282  EE20 F003          	lfsr	2,3
  5267   001286  500B               	movf	numASCII@ascii_values^0,w,c
  5268   001288  26D9               	addwf	fsr2l,f,c
  5269   00128A  500C               	movf	(numASCII@ascii_values+1)^0,w,c
  5270   00128C  22DA               	addwfc	fsr2h,f,c
  5271   00128E  6ADF               	clrf	indf2,c
  5272   001290  0012               	return		;funcret
  5273   001292                     __end_of_numASCII:
  5274                           	callstack 0
  5275                           
  5276 ;; *************** function ___awmod *****************
  5277 ;; Defined at:
  5278 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;  dividend        2    0[COMRAM] int 
  5281 ;;  divisor         2    2[COMRAM] int 
  5282 ;; Auto vars:     Size  Location     Type
  5283 ;;  sign            1    5[COMRAM] unsigned char 
  5284 ;;  counter         1    4[COMRAM] unsigned char 
  5285 ;; Return value:  Size  Location     Type
  5286 ;;                  2    0[COMRAM] int 
  5287 ;; Registers used:
  5288 ;;		wreg, status,2, status,0
  5289 ;; Tracked objects:
  5290 ;;		On entry : 0/0
  5291 ;;		On exit  : 0/0
  5292 ;;		Unchanged: 0/0
  5293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5294 ;;      Params:         4       0       0       0       0       0       0       0       0
  5295 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5296 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5297 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5298 ;;Total ram usage:        6 bytes
  5299 ;; Hardware stack levels used: 1
  5300 ;; This function calls:
  5301 ;;		Nothing
  5302 ;; This function is called by:
  5303 ;;		_numASCII
  5304 ;; This function uses a non-reentrant model
  5305 ;;
  5306                           
  5307                           	psect	text32
  5308   0015A0                     __ptext32:
  5309                           	callstack 0
  5310   0015A0                     ___awmod:
  5311                           	callstack 23
  5312                           
  5313                           ;incstack = 0
  5314   0015A0  6A06               	clrf	___awmod@sign^0,c
  5315   0015A2  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  5316   0015A4  D006               	goto	i2l2823
  5317   0015A6  6C01               	negf	___awmod@dividend^0,c
  5318   0015A8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5319   0015AA  B0D8               	btfsc	status,0,c
  5320   0015AC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5321   0015AE  0E01               	movlw	1
  5322   0015B0  6E06               	movwf	___awmod@sign^0,c
  5323   0015B2                     i2l2823:
  5324   0015B2  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5325   0015B4  D004               	goto	i2l2827
  5326   0015B6  6C03               	negf	___awmod@divisor^0,c
  5327   0015B8  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5328   0015BA  B0D8               	btfsc	status,0,c
  5329   0015BC  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5330   0015BE                     i2l2827:
  5331   0015BE  5003               	movf	___awmod@divisor^0,w,c
  5332   0015C0  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5333   0015C2  B4D8               	btfsc	status,2,c
  5334   0015C4  D018               	goto	i2l2843
  5335   0015C6  0E01               	movlw	1
  5336   0015C8  6E05               	movwf	___awmod@counter^0,c
  5337   0015CA  D004               	goto	i2l2833
  5338   0015CC                     i2l2831:
  5339   0015CC  90D8               	bcf	status,0,c
  5340   0015CE  3603               	rlcf	___awmod@divisor^0,f,c
  5341   0015D0  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5342   0015D2  2A05               	incf	___awmod@counter^0,f,c
  5343   0015D4                     i2l2833:
  5344   0015D4  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5345   0015D6  D7FA               	goto	i2l2831
  5346   0015D8                     i2u175_40:
  5347   0015D8  5003               	movf	___awmod@divisor^0,w,c
  5348   0015DA  5C01               	subwf	___awmod@dividend^0,w,c
  5349   0015DC  5004               	movf	(___awmod@divisor+1)^0,w,c
  5350   0015DE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5351   0015E0  A0D8               	btfss	status,0,c
  5352   0015E2  D004               	goto	i2l2839
  5353   0015E4  5003               	movf	___awmod@divisor^0,w,c
  5354   0015E6  5E01               	subwf	___awmod@dividend^0,f,c
  5355   0015E8  5004               	movf	(___awmod@divisor+1)^0,w,c
  5356   0015EA  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5357   0015EC                     i2l2839:
  5358   0015EC  90D8               	bcf	status,0,c
  5359   0015EE  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5360   0015F0  3203               	rrcf	___awmod@divisor^0,f,c
  5361   0015F2  2E05               	decfsz	___awmod@counter^0,f,c
  5362   0015F4  D7F1               	goto	i2u175_40
  5363   0015F6                     i2l2843:
  5364   0015F6  5006               	movf	___awmod@sign^0,w,c
  5365   0015F8  B4D8               	btfsc	status,2,c
  5366   0015FA  D004               	goto	i2l2847
  5367   0015FC  6C01               	negf	___awmod@dividend^0,c
  5368   0015FE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5369   001600  B0D8               	btfsc	status,0,c
  5370   001602  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5371   001604                     i2l2847:
  5372   001604  C001  F001         	movff	___awmod@dividend,?___awmod
  5373   001608  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5374   00160C  0012               	return		;funcret
  5375   00160E                     __end_of___awmod:
  5376                           	callstack 0
  5377                           
  5378 ;; *************** function ___awdiv *****************
  5379 ;; Defined at:
  5380 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;  dividend        2    0[COMRAM] int 
  5383 ;;  divisor         2    2[COMRAM] int 
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;  quotient        2    6[COMRAM] int 
  5386 ;;  sign            1    5[COMRAM] unsigned char 
  5387 ;;  counter         1    4[COMRAM] unsigned char 
  5388 ;; Return value:  Size  Location     Type
  5389 ;;                  2    0[COMRAM] int 
  5390 ;; Registers used:
  5391 ;;		wreg, status,2, status,0
  5392 ;; Tracked objects:
  5393 ;;		On entry : 0/0
  5394 ;;		On exit  : 0/0
  5395 ;;		Unchanged: 0/0
  5396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5397 ;;      Params:         4       0       0       0       0       0       0       0       0
  5398 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5399 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5400 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5401 ;;Total ram usage:        8 bytes
  5402 ;; Hardware stack levels used: 1
  5403 ;; This function calls:
  5404 ;;		Nothing
  5405 ;; This function is called by:
  5406 ;;		_ISR
  5407 ;;		_numASCII
  5408 ;; This function uses a non-reentrant model
  5409 ;;
  5410                           
  5411                           	psect	text33
  5412   0014AE                     __ptext33:
  5413                           	callstack 0
  5414   0014AE                     ___awdiv:
  5415                           	callstack 23
  5416                           
  5417                           ;incstack = 0
  5418   0014AE  6A06               	clrf	___awdiv@sign^0,c
  5419   0014B0  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5420   0014B2  D006               	goto	i2l2779
  5421   0014B4  6C03               	negf	___awdiv@divisor^0,c
  5422   0014B6  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5423   0014B8  B0D8               	btfsc	status,0,c
  5424   0014BA  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5425   0014BC  0E01               	movlw	1
  5426   0014BE  6E06               	movwf	___awdiv@sign^0,c
  5427   0014C0                     i2l2779:
  5428   0014C0  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
  5429   0014C2  D006               	goto	i2l2785
  5430   0014C4  6C01               	negf	___awdiv@dividend^0,c
  5431   0014C6  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5432   0014C8  B0D8               	btfsc	status,0,c
  5433   0014CA  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5434   0014CC  0E01               	movlw	1
  5435   0014CE  1A06               	xorwf	___awdiv@sign^0,f,c
  5436   0014D0                     i2l2785:
  5437   0014D0  0E00               	movlw	0
  5438   0014D2  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5439   0014D4  0E00               	movlw	0
  5440   0014D6  6E07               	movwf	___awdiv@quotient^0,c
  5441   0014D8  5003               	movf	___awdiv@divisor^0,w,c
  5442   0014DA  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5443   0014DC  B4D8               	btfsc	status,2,c
  5444   0014DE  D01C               	goto	i2l2807
  5445   0014E0  0E01               	movlw	1
  5446   0014E2  6E05               	movwf	___awdiv@counter^0,c
  5447   0014E4  D004               	goto	i2l2793
  5448   0014E6                     i2l2791:
  5449   0014E6  90D8               	bcf	status,0,c
  5450   0014E8  3603               	rlcf	___awdiv@divisor^0,f,c
  5451   0014EA  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5452   0014EC  2A05               	incf	___awdiv@counter^0,f,c
  5453   0014EE                     i2l2793:
  5454   0014EE  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5455   0014F0  D7FA               	goto	i2l2791
  5456   0014F2                     i2u169_40:
  5457   0014F2  90D8               	bcf	status,0,c
  5458   0014F4  3607               	rlcf	___awdiv@quotient^0,f,c
  5459   0014F6  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5460   0014F8  5003               	movf	___awdiv@divisor^0,w,c
  5461   0014FA  5C01               	subwf	___awdiv@dividend^0,w,c
  5462   0014FC  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5463   0014FE  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5464   001500  A0D8               	btfss	status,0,c
  5465   001502  D005               	goto	i2l2803
  5466   001504  5003               	movf	___awdiv@divisor^0,w,c
  5467   001506  5E01               	subwf	___awdiv@dividend^0,f,c
  5468   001508  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5469   00150A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5470   00150C  8007               	bsf	___awdiv@quotient^0,0,c
  5471   00150E                     i2l2803:
  5472   00150E  90D8               	bcf	status,0,c
  5473   001510  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5474   001512  3203               	rrcf	___awdiv@divisor^0,f,c
  5475   001514  2E05               	decfsz	___awdiv@counter^0,f,c
  5476   001516  D7ED               	goto	i2u169_40
  5477   001518                     i2l2807:
  5478   001518  5006               	movf	___awdiv@sign^0,w,c
  5479   00151A  B4D8               	btfsc	status,2,c
  5480   00151C  D004               	goto	i2l2811
  5481   00151E  6C07               	negf	___awdiv@quotient^0,c
  5482   001520  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5483   001522  B0D8               	btfsc	status,0,c
  5484   001524  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5485   001526                     i2l2811:
  5486   001526  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5487   00152A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5488   00152E  0012               	return		;funcret
  5489   001530                     __end_of___awdiv:
  5490                           	callstack 0
  5491                           
  5492 ;; *************** function ___fttol *****************
  5493 ;; Defined at:
  5494 ;;		line 44 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\fttol.c"
  5495 ;; Parameters:    Size  Location     Type
  5496 ;;  f1              3    0[COMRAM] float 
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;  lval            4   10[COMRAM] unsigned long 
  5499 ;;  exp1            1   14[COMRAM] unsigned char 
  5500 ;;  sign1           1    9[COMRAM] unsigned char 
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  4    0[COMRAM] long 
  5503 ;; Registers used:
  5504 ;;		wreg, status,2, status,0
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5510 ;;      Params:         4       0       0       0       0       0       0       0       0
  5511 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5512 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5513 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5514 ;;Total ram usage:       15 bytes
  5515 ;; Hardware stack levels used: 1
  5516 ;; This function calls:
  5517 ;;		Nothing
  5518 ;; This function is called by:
  5519 ;;		_ISR
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           	psect	text34
  5524   001292                     __ptext34:
  5525                           	callstack 0
  5526   001292                     ___fttol:
  5527                           	callstack 24
  5528                           
  5529                           ;incstack = 0
  5530   001292  C003  F005         	movff	___fttol@f1+2,??___fttol
  5531   001296  6A06               	clrf	(??___fttol+1)^0,c
  5532   001298  6A07               	clrf	(??___fttol+2)^0,c
  5533   00129A  3402               	rlcf	(___fttol@f1+1)^0,w,c
  5534   00129C  3605               	rlcf	??___fttol^0,f,c
  5535   00129E  E301               	bnc	u216_41
  5536   0012A0  8006               	bsf	(??___fttol+1)^0,0,c
  5537   0012A2                     u216_41:
  5538   0012A2  5005               	movf	??___fttol^0,w,c
  5539   0012A4  6E0F               	movwf	___fttol@exp1^0,c
  5540   0012A6  500F               	movf	___fttol@exp1^0,w,c
  5541   0012A8  A4D8               	btfss	status,2,c
  5542   0012AA  D009               	goto	i2l3229
  5543   0012AC                     i2u217_40:
  5544   0012AC  0E00               	movlw	0
  5545   0012AE  6E01               	movwf	?___fttol^0,c
  5546   0012B0  0E00               	movlw	0
  5547   0012B2  6E02               	movwf	(?___fttol+1)^0,c
  5548   0012B4  0E00               	movlw	0
  5549   0012B6  6E03               	movwf	(?___fttol+2)^0,c
  5550   0012B8  0E00               	movlw	0
  5551   0012BA  6E04               	movwf	(?___fttol+3)^0,c
  5552   0012BC  0012               	return	
  5553   0012BE                     i2l3229:
  5554   0012BE  0E17               	movlw	23
  5555   0012C0  6E05               	movwf	??___fttol^0,c
  5556   0012C2  C001  F006         	movff	___fttol@f1,??___fttol+1
  5557   0012C6  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  5558   0012CA  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  5559   0012CE  2805               	incf	??___fttol^0,w,c
  5560   0012D0  6E09               	movwf	(??___fttol+4)^0,c
  5561   0012D2  D004               	goto	i2u218_40
  5562   0012D4                     i2u218_45:
  5563   0012D4  90D8               	bcf	status,0,c
  5564   0012D6  3208               	rrcf	(??___fttol+3)^0,f,c
  5565   0012D8  3207               	rrcf	(??___fttol+2)^0,f,c
  5566   0012DA  3206               	rrcf	(??___fttol+1)^0,f,c
  5567   0012DC                     i2u218_40:
  5568   0012DC  2E09               	decfsz	(??___fttol+4)^0,f,c
  5569   0012DE  D7FA               	goto	i2u218_45
  5570   0012E0  5006               	movf	(??___fttol+1)^0,w,c
  5571   0012E2  6E0A               	movwf	___fttol@sign1^0,c
  5572   0012E4  8E02               	bsf	(___fttol@f1+1)^0,7,c
  5573   0012E6  0EFF               	movlw	255
  5574   0012E8  1601               	andwf	___fttol@f1^0,f,c
  5575   0012EA  0EFF               	movlw	255
  5576   0012EC  1602               	andwf	(___fttol@f1+1)^0,f,c
  5577   0012EE  0E00               	movlw	0
  5578   0012F0  1603               	andwf	(___fttol@f1+2)^0,f,c
  5579   0012F2  5001               	movf	___fttol@f1^0,w,c
  5580   0012F4  6E0B               	movwf	___fttol@lval^0,c
  5581   0012F6  5002               	movf	(___fttol@f1+1)^0,w,c
  5582   0012F8  6E0C               	movwf	(___fttol@lval+1)^0,c
  5583   0012FA  5003               	movf	(___fttol@f1+2)^0,w,c
  5584   0012FC  6E0D               	movwf	(___fttol@lval+2)^0,c
  5585   0012FE  6A0E               	clrf	(___fttol@lval+3)^0,c
  5586   001300  0E8E               	movlw	142
  5587   001302  5E0F               	subwf	___fttol@exp1^0,f,c
  5588   001304  AE0F               	btfss	___fttol@exp1^0,7,c
  5589   001306  D00D               	goto	i2l3251
  5590   001308  500F               	movf	___fttol@exp1^0,w,c
  5591   00130A  0A80               	xorlw	128
  5592   00130C  0F8F               	addlw	143
  5593   00130E  A0D8               	btfss	status,0,c
  5594   001310  D7CD               	goto	i2u217_40
  5595   001312                     i2l3247:
  5596   001312  90D8               	bcf	status,0,c
  5597   001314  320E               	rrcf	(___fttol@lval+3)^0,f,c
  5598   001316  320D               	rrcf	(___fttol@lval+2)^0,f,c
  5599   001318  320C               	rrcf	(___fttol@lval+1)^0,f,c
  5600   00131A  320B               	rrcf	___fttol@lval^0,f,c
  5601   00131C  3E0F               	incfsz	___fttol@exp1^0,f,c
  5602   00131E  D7F9               	goto	i2l3247
  5603   001320  D00D               	goto	i2u222_40
  5604   001322                     i2l3251:
  5605   001322  0E17               	movlw	23
  5606   001324  640F               	cpfsgt	___fttol@exp1^0,c
  5607   001326  D007               	goto	i2l3259
  5608   001328  D7C1               	goto	i2u217_40
  5609   00132A                     i2l3257:
  5610   00132A  90D8               	bcf	status,0,c
  5611   00132C  360B               	rlcf	___fttol@lval^0,f,c
  5612   00132E  360C               	rlcf	(___fttol@lval+1)^0,f,c
  5613   001330  360D               	rlcf	(___fttol@lval+2)^0,f,c
  5614   001332  360E               	rlcf	(___fttol@lval+3)^0,f,c
  5615   001334  060F               	decf	___fttol@exp1^0,f,c
  5616   001336                     i2l3259:
  5617   001336  500F               	movf	___fttol@exp1^0,w,c
  5618   001338  A4D8               	btfss	status,2,c
  5619   00133A  D7F7               	goto	i2l3257
  5620   00133C                     i2u222_40:
  5621   00133C  500A               	movf	___fttol@sign1^0,w,c
  5622   00133E  B4D8               	btfsc	status,2,c
  5623   001340  D008               	goto	i2l3265
  5624   001342  1E0E               	comf	(___fttol@lval+3)^0,f,c
  5625   001344  1E0D               	comf	(___fttol@lval+2)^0,f,c
  5626   001346  1E0C               	comf	(___fttol@lval+1)^0,f,c
  5627   001348  6C0B               	negf	___fttol@lval^0,c
  5628   00134A  0E00               	movlw	0
  5629   00134C  220C               	addwfc	(___fttol@lval+1)^0,f,c
  5630   00134E  220D               	addwfc	(___fttol@lval+2)^0,f,c
  5631   001350  220E               	addwfc	(___fttol@lval+3)^0,f,c
  5632   001352                     i2l3265:
  5633   001352  C00B  F001         	movff	___fttol@lval,?___fttol
  5634   001356  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  5635   00135A  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  5636   00135E  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  5637   001362  0012               	return		;funcret
  5638   001364                     __end_of___fttol:
  5639                           	callstack 0
  5640                           
  5641 ;; *************** function ___awtoft *****************
  5642 ;; Defined at:
  5643 ;;		line 32 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awtoft.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;  c               2    8[COMRAM] int 
  5646 ;; Auto vars:     Size  Location     Type
  5647 ;;  sign            1   11[COMRAM] unsigned char 
  5648 ;; Return value:  Size  Location     Type
  5649 ;;                  3    8[COMRAM] float 
  5650 ;; Registers used:
  5651 ;;		wreg, status,2, status,0, cstack
  5652 ;; Tracked objects:
  5653 ;;		On entry : 0/0
  5654 ;;		On exit  : 0/0
  5655 ;;		Unchanged: 0/0
  5656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5657 ;;      Params:         3       0       0       0       0       0       0       0       0
  5658 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5659 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5660 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5661 ;;Total ram usage:        4 bytes
  5662 ;; Hardware stack levels used: 1
  5663 ;; Hardware stack levels required when called: 1
  5664 ;; This function calls:
  5665 ;;		___ftpack
  5666 ;; This function is called by:
  5667 ;;		_ISR
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671                           	psect	text35
  5672   0019C8                     __ptext35:
  5673                           	callstack 0
  5674   0019C8                     ___awtoft:
  5675                           	callstack 23
  5676                           
  5677                           ;incstack = 0
  5678   0019C8  6A0C               	clrf	___awtoft@sign^0,c
  5679   0019CA  AE0A               	btfss	(___awtoft@c+1)^0,7,c
  5680   0019CC  D006               	goto	i2l3219
  5681   0019CE  6C09               	negf	___awtoft@c^0,c
  5682   0019D0  1E0A               	comf	(___awtoft@c+1)^0,f,c
  5683   0019D2  B0D8               	btfsc	status,0,c
  5684   0019D4  2A0A               	incf	(___awtoft@c+1)^0,f,c
  5685   0019D6  0E01               	movlw	1
  5686   0019D8  6E0C               	movwf	___awtoft@sign^0,c
  5687   0019DA                     i2l3219:
  5688   0019DA  C009  F001         	movff	___awtoft@c,___ftpack@arg
  5689   0019DE  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5690   0019E2  6A03               	clrf	(___ftpack@arg+2)^0,c
  5691   0019E4  0E8E               	movlw	142
  5692   0019E6  6E04               	movwf	___ftpack@exp^0,c
  5693   0019E8  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  5694   0019EC  ECB2  F009         	call	___ftpack	;wreg free
  5695   0019F0  C001  F009         	movff	?___ftpack,?___awtoft
  5696   0019F4  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  5697   0019F8  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  5698   0019FC  0012               	return		;funcret
  5699   0019FE                     __end_of___awtoft:
  5700                           	callstack 0
  5701                           
  5702 ;; *************** function ___ftpack *****************
  5703 ;; Defined at:
  5704 ;;		line 62 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\float.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;  arg             3    0[COMRAM] unsigned um
  5707 ;;  exp             1    3[COMRAM] unsigned char 
  5708 ;;  sign            1    4[COMRAM] unsigned char 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;		None
  5711 ;; Return value:  Size  Location     Type
  5712 ;;                  3    0[COMRAM] float 
  5713 ;; Registers used:
  5714 ;;		wreg, status,2, status,0
  5715 ;; Tracked objects:
  5716 ;;		On entry : 0/0
  5717 ;;		On exit  : 0/0
  5718 ;;		Unchanged: 0/0
  5719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5720 ;;      Params:         5       0       0       0       0       0       0       0       0
  5721 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5722 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5723 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5724 ;;Total ram usage:        8 bytes
  5725 ;; Hardware stack levels used: 1
  5726 ;; This function calls:
  5727 ;;		Nothing
  5728 ;; This function is called by:
  5729 ;;		___awtoft
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732                           
  5733                           	psect	text36
  5734   001364                     __ptext36:
  5735                           	callstack 0
  5736   001364                     ___ftpack:
  5737                           	callstack 23
  5738                           
  5739                           ;incstack = 0
  5740   001364  5004               	movf	___ftpack@exp^0,w,c
  5741   001366  B4D8               	btfsc	status,2,c
  5742   001368  D005               	goto	i2u159_40
  5743   00136A  5001               	movf	___ftpack@arg^0,w,c
  5744   00136C  1002               	iorwf	(___ftpack@arg+1)^0,w,c
  5745   00136E  1003               	iorwf	(___ftpack@arg+2)^0,w,c
  5746   001370  A4D8               	btfss	status,2,c
  5747   001372  D00C               	goto	i2l2745
  5748   001374                     i2u159_40:
  5749   001374  0E00               	movlw	0
  5750   001376  6E01               	movwf	?___ftpack^0,c
  5751   001378  0E00               	movlw	0
  5752   00137A  6E02               	movwf	(?___ftpack+1)^0,c
  5753   00137C  0E00               	movlw	0
  5754   00137E  6E03               	movwf	(?___ftpack+2)^0,c
  5755   001380  0012               	return	
  5756   001382                     i2l2743:
  5757   001382  2A04               	incf	___ftpack@exp^0,f,c
  5758   001384  90D8               	bcf	status,0,c
  5759   001386  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  5760   001388  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  5761   00138A  3201               	rrcf	___ftpack@arg^0,f,c
  5762   00138C                     i2l2745:
  5763   00138C  0E00               	movlw	0
  5764   00138E  1401               	andwf	___ftpack@arg^0,w,c
  5765   001390  6E06               	movwf	??___ftpack^0,c
  5766   001392  0E00               	movlw	0
  5767   001394  1402               	andwf	(___ftpack@arg+1)^0,w,c
  5768   001396  6E07               	movwf	(??___ftpack+1)^0,c
  5769   001398  0EFE               	movlw	254
  5770   00139A  1403               	andwf	(___ftpack@arg+2)^0,w,c
  5771   00139C  6E08               	movwf	(??___ftpack+2)^0,c
  5772   00139E  5006               	movf	??___ftpack^0,w,c
  5773   0013A0  1007               	iorwf	(??___ftpack+1)^0,w,c
  5774   0013A2  1008               	iorwf	(??___ftpack+2)^0,w,c
  5775   0013A4  B4D8               	btfsc	status,2,c
  5776   0013A6  D00C               	goto	i2l2751
  5777   0013A8  D7EC               	goto	i2l2743
  5778   0013AA                     i2l2747:
  5779   0013AA  2A04               	incf	___ftpack@exp^0,f,c
  5780   0013AC  0E01               	movlw	1
  5781   0013AE  2601               	addwf	___ftpack@arg^0,f,c
  5782   0013B0  0E00               	movlw	0
  5783   0013B2  2202               	addwfc	(___ftpack@arg+1)^0,f,c
  5784   0013B4  0E00               	movlw	0
  5785   0013B6  2203               	addwfc	(___ftpack@arg+2)^0,f,c
  5786   0013B8  90D8               	bcf	status,0,c
  5787   0013BA  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  5788   0013BC  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  5789   0013BE  3201               	rrcf	___ftpack@arg^0,f,c
  5790   0013C0                     i2l2751:
  5791   0013C0  0E00               	movlw	0
  5792   0013C2  1401               	andwf	___ftpack@arg^0,w,c
  5793   0013C4  6E06               	movwf	??___ftpack^0,c
  5794   0013C6  0E00               	movlw	0
  5795   0013C8  1402               	andwf	(___ftpack@arg+1)^0,w,c
  5796   0013CA  6E07               	movwf	(??___ftpack+1)^0,c
  5797   0013CC  0EFF               	movlw	255
  5798   0013CE  1403               	andwf	(___ftpack@arg+2)^0,w,c
  5799   0013D0  6E08               	movwf	(??___ftpack+2)^0,c
  5800   0013D2  5006               	movf	??___ftpack^0,w,c
  5801   0013D4  1007               	iorwf	(??___ftpack+1)^0,w,c
  5802   0013D6  1008               	iorwf	(??___ftpack+2)^0,w,c
  5803   0013D8  B4D8               	btfsc	status,2,c
  5804   0013DA  D006               	goto	i2l2755
  5805   0013DC  D7E6               	goto	i2l2747
  5806   0013DE                     i2l2753:
  5807   0013DE  0604               	decf	___ftpack@exp^0,f,c
  5808   0013E0  90D8               	bcf	status,0,c
  5809   0013E2  3601               	rlcf	___ftpack@arg^0,f,c
  5810   0013E4  3602               	rlcf	(___ftpack@arg+1)^0,f,c
  5811   0013E6  3603               	rlcf	(___ftpack@arg+2)^0,f,c
  5812   0013E8                     i2l2755:
  5813   0013E8  BE02               	btfsc	(___ftpack@arg+1)^0,7,c
  5814   0013EA  D003               	goto	i2u163_40
  5815   0013EC  0E02               	movlw	2
  5816   0013EE  6004               	cpfslt	___ftpack@exp^0,c
  5817   0013F0  D7F6               	goto	i2l2753
  5818   0013F2                     i2u163_40:
  5819   0013F2  A004               	btfss	___ftpack@exp^0,0,c
  5820   0013F4  9E02               	bcf	(___ftpack@arg+1)^0,7,c
  5821   0013F6  90D8               	bcf	status,0,c
  5822   0013F8  3204               	rrcf	___ftpack@exp^0,f,c
  5823   0013FA  5004               	movf	___ftpack@exp^0,w,c
  5824   0013FC  1203               	iorwf	(___ftpack@arg+2)^0,f,c
  5825   0013FE  5005               	movf	___ftpack@sign^0,w,c
  5826   001400  A4D8               	btfss	status,2,c
  5827   001402  8E03               	bsf	(___ftpack@arg+2)^0,7,c
  5828   001404  C001  F001         	movff	___ftpack@arg,?___ftpack
  5829   001408  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5830   00140C  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5831   001410  0012               	return		;funcret
  5832   001412                     __end_of___ftpack:
  5833                           	callstack 0
  5834                           
  5835 ;; *************** function _TransmitirVar *****************
  5836 ;; Defined at:
  5837 ;;		line 716 in file "Lab6Pruebas.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;  buffer          2    1[COMRAM] PTR unsigned char 
  5840 ;;		 -> STR_8(20), STR_7(15), ISR@numAscii(0), 
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;		None
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  1    wreg      void 
  5845 ;; Registers used:
  5846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5852 ;;      Params:         2       0       0       0       0       0       0       0       0
  5853 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5854 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5855 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5856 ;;Total ram usage:        2 bytes
  5857 ;; Hardware stack levels used: 1
  5858 ;; Hardware stack levels required when called: 1
  5859 ;; This function calls:
  5860 ;;		_Transmitir
  5861 ;; This function is called by:
  5862 ;;		_ISR
  5863 ;; This function uses a non-reentrant model
  5864 ;;
  5865                           
  5866                           	psect	text37
  5867   0017E4                     __ptext37:
  5868                           	callstack 0
  5869   0017E4                     _TransmitirVar:
  5870                           	callstack 23
  5871                           
  5872                           ;Lab6Pruebas.c: 717: while (*buffer) {
  5873                           
  5874                           ;incstack = 0
  5875   0017E4  D014               	goto	i2l3175
  5876   0017E6                     i2l3171:
  5877                           
  5878                           ;Lab6Pruebas.c: 718: Transmitir(*buffer);
  5879   0017E6  C002  FFF6         	movff	TransmitirVar@buffer,tblptrl
  5880   0017EA  C003  FFF7         	movff	TransmitirVar@buffer+1,tblptrh
  5881   0017EE  6AF8               	clrf	tblptru,c
  5882   0017F0  0E07               	movlw	(high __ramtop+-1)
  5883   0017F2  64F7               	cpfsgt	tblptrh,c
  5884   0017F4  D003               	bra	i2u205_47
  5885   0017F6  0008               	tblrd		*
  5886   0017F8  50F5               	movf	tablat,w,c
  5887   0017FA  D005               	bra	i2u205_40
  5888   0017FC                     i2u205_47:
  5889   0017FC  CFF6 FFD9          	movff	tblptrl,fsr2l
  5890   001800  CFF7 FFDA          	movff	tblptrh,fsr2h
  5891   001804  50DF               	movf	indf2,w,c
  5892   001806                     i2u205_40:
  5893   001806  ECE8  F00D         	call	_Transmitir
  5894                           
  5895                           ;Lab6Pruebas.c: 719: buffer++;
  5896   00180A  4A02               	infsnz	TransmitirVar@buffer^0,f,c
  5897   00180C  2A03               	incf	(TransmitirVar@buffer+1)^0,f,c
  5898   00180E                     i2l3175:
  5899   00180E  C002  FFF6         	movff	TransmitirVar@buffer,tblptrl
  5900   001812  C003  FFF7         	movff	TransmitirVar@buffer+1,tblptrh
  5901   001816  6AF8               	clrf	tblptru,c
  5902   001818  0E07               	movlw	(high __ramtop+-1)
  5903   00181A  64F7               	cpfsgt	tblptrh,c
  5904   00181C  D003               	bra	i2u206_47
  5905   00181E  0008               	tblrd		*
  5906   001820  50F5               	movf	tablat,w,c
  5907   001822  D005               	bra	i2u206_40
  5908   001824                     i2u206_47:
  5909   001824  CFF6 FFD9          	movff	tblptrl,fsr2l
  5910   001828  CFF7 FFDA          	movff	tblptrh,fsr2h
  5911   00182C  50DF               	movf	indf2,w,c
  5912   00182E                     i2u206_40:
  5913   00182E  0900               	iorlw	0
  5914   001830  B4D8               	btfsc	status,2,c
  5915   001832  0012               	return	
  5916   001834  D7D8               	goto	i2l3171
  5917   001836                     __end_of_TransmitirVar:
  5918                           	callstack 0
  5919                           
  5920 ;; *************** function _Transmitir *****************
  5921 ;; Defined at:
  5922 ;;		line 711 in file "Lab6Pruebas.c"
  5923 ;; Parameters:    Size  Location     Type
  5924 ;;  BufferT         1    wreg     unsigned char 
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;  BufferT         1    0[COMRAM] unsigned char 
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  1    wreg      void 
  5929 ;; Registers used:
  5930 ;;		wreg
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5936 ;;      Params:         0       0       0       0       0       0       0       0       0
  5937 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5938 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5939 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5940 ;;Total ram usage:        1 bytes
  5941 ;; Hardware stack levels used: 1
  5942 ;; This function calls:
  5943 ;;		Nothing
  5944 ;; This function is called by:
  5945 ;;		_ISR
  5946 ;;		_TransmitirVar
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           	psect	text38
  5951   001BD0                     __ptext38:
  5952                           	callstack 0
  5953   001BD0                     _Transmitir:
  5954                           	callstack 23
  5955                           
  5956                           ;incstack = 0
  5957                           ;Transmitir@BufferT stored from wreg
  5958   001BD0  6E01               	movwf	Transmitir@BufferT^0,c
  5959   001BD2                     
  5960                           ;Lab6Pruebas.c: 712: while(TRMT == 0);
  5961   001BD2  A2AC               	btfss	4012,1,c	;volatile
  5962   001BD4  D7FE               	goto	i2l2713
  5963                           
  5964                           ;Lab6Pruebas.c: 713: TXREG = BufferT;
  5965   001BD6  C001  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  5966   001BDA  0012               	return		;funcret
  5967   001BDC                     __end_of_Transmitir:
  5968                           	callstack 0
  5969                           
  5970 ;; *************** function _MedirDistancia *****************
  5971 ;; Defined at:
  5972 ;;		line 750 in file "Lab6Pruebas.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;		None
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;  aux             1    7[COMRAM] unsigned char 
  5977 ;; Return value:  Size  Location     Type
  5978 ;;                  1    wreg      unsigned char 
  5979 ;; Registers used:
  5980 ;;		wreg, status,2, status,0, cstack
  5981 ;; Tracked objects:
  5982 ;;		On entry : 0/0
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5986 ;;      Params:         0       0       0       0       0       0       0       0       0
  5987 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5988 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5989 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5990 ;;Total ram usage:        1 bytes
  5991 ;; Hardware stack levels used: 1
  5992 ;; Hardware stack levels required when called: 1
  5993 ;; This function calls:
  5994 ;;		___lwdiv
  5995 ;; This function is called by:
  5996 ;;		_ISR
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999                           
  6000                           	psect	text39
  6001   001530                     __ptext39:
  6002                           	callstack 0
  6003   001530                     _MedirDistancia:
  6004                           	callstack 23
  6005                           
  6006                           ;Lab6Pruebas.c: 752: CCP2CON=0b00000100;
  6007                           
  6008                           ;incstack = 0
  6009   001530  0E04               	movlw	4
  6010   001532  6EBA               	movwf	186,c	;volatile
  6011                           
  6012                           ;Lab6Pruebas.c: 753: TMR1=0;
  6013   001534  0E00               	movlw	0
  6014   001536  6ECF               	movwf	207,c	;volatile
  6015   001538  0E00               	movlw	0
  6016   00153A  6ECE               	movwf	206,c	;volatile
  6017                           
  6018                           ;Lab6Pruebas.c: 754: CCP2IF=0;
  6019   00153C  90A1               	bcf	4001,0,c	;volatile
  6020                           
  6021                           ;Lab6Pruebas.c: 755: RC0=1;
  6022   00153E  8082               	bsf	3970,0,c	;volatile
  6023                           
  6024                           ;Lab6Pruebas.c: 756: _delay((unsigned long)((10)*(1000000/4000000.0)));
  6025   001540  D000               	nop2		;2 cycle nop
  6026                           
  6027                           ;Lab6Pruebas.c: 757: RC0=0;
  6028   001542  9082               	bcf	3970,0,c	;volatile
  6029                           
  6030                           ;Lab6Pruebas.c: 758: etimeout=1;
  6031   001544  0E01               	movlw	1
  6032   001546  6E31               	movwf	_etimeout^0,c
  6033   001548                     i2l500:
  6034   001548  B282               	btfsc	3970,1,c	;volatile
  6035   00154A  D003               	goto	i2u209_40
  6036   00154C  0431               	decf	_etimeout^0,w,c
  6037   00154E  B4D8               	btfsc	status,2,c
  6038   001550  D7FB               	goto	i2l500
  6039   001552                     i2u209_40:
  6040                           
  6041                           ;Lab6Pruebas.c: 761: if(etimeout==0){
  6042   001552  5031               	movf	_etimeout^0,w,c
  6043   001554  A4D8               	btfss	status,2,c
  6044   001556  D002               	goto	i2l505
  6045                           
  6046                           ;Lab6Pruebas.c: 762: return 0;
  6047   001558  0E00               	movlw	0
  6048   00155A  0012               	return	
  6049   00155C                     i2l505:
  6050                           
  6051                           ;Lab6Pruebas.c: 763: };Lab6Pruebas.c: 764: TMR1ON=1;
  6052   00155C  80CD               	bsf	4045,0,c	;volatile
  6053   00155E                     i2l507:
  6054   00155E  B0A1               	btfsc	4001,0,c	;volatile
  6055   001560  D002               	goto	i2u212_40
  6056   001562  A09E               	btfss	3998,0,c	;volatile
  6057   001564  D7FC               	goto	i2l507
  6058   001566                     i2u212_40:
  6059                           
  6060                           ;Lab6Pruebas.c: 766: TMR1ON=0;
  6061   001566  90CD               	bcf	4045,0,c	;volatile
  6062                           
  6063                           ;Lab6Pruebas.c: 767: if(TMR1IF==1)
  6064   001568  A09E               	btfss	3998,0,c	;volatile
  6065   00156A  D002               	goto	i2l3201
  6066                           
  6067                           ;Lab6Pruebas.c: 768: aux=255;
  6068   00156C  6808               	setf	MedirDistancia@aux^0,c
  6069   00156E  D016               	goto	i2l3207
  6070   001570                     i2l3201:
  6071                           
  6072                           ;Lab6Pruebas.c: 769: else{;Lab6Pruebas.c: 770: if(CCPR2>=154)
  6073   001570  50BC               	movf	188,w,c	;volatile
  6074   001572  E104               	bnz	i2u214_40
  6075   001574  0E9A               	movlw	154
  6076   001576  5CBB               	subwf	187,w,c	;volatile
  6077   001578  A0D8               	btfss	status,0,c
  6078   00157A  D004               	goto	i2l3205
  6079   00157C                     i2u214_40:
  6080                           
  6081                           ;Lab6Pruebas.c: 771: CCPR2=154;
  6082   00157C  0E00               	movlw	0
  6083   00157E  6EBC               	movwf	188,c	;volatile
  6084   001580  0E9A               	movlw	154
  6085   001582  6EBB               	movwf	187,c	;volatile
  6086   001584                     i2l3205:
  6087                           
  6088                           ;Lab6Pruebas.c: 772: aux=CCPR2/(14) ;
  6089   001584  CFBB F001          	movff	4027,___lwdiv@dividend	;volatile
  6090   001588  CFBC F002          	movff	4028,___lwdiv@dividend+1	;volatile
  6091   00158C  0E00               	movlw	0
  6092   00158E  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  6093   001590  0E0E               	movlw	14
  6094   001592  6E03               	movwf	___lwdiv@divisor^0,c
  6095   001594  EC1B  F00C         	call	___lwdiv	;wreg free
  6096   001598  5001               	movf	?___lwdiv^0,w,c
  6097   00159A  6E08               	movwf	MedirDistancia@aux^0,c
  6098   00159C                     i2l3207:
  6099                           
  6100                           ;Lab6Pruebas.c: 773: };Lab6Pruebas.c: 775: return aux;
  6101   00159C  5008               	movf	MedirDistancia@aux^0,w,c
  6102   00159E  0012               	return		;funcret
  6103   0015A0                     __end_of_MedirDistancia:
  6104                           	callstack 0
  6105                           
  6106 ;; *************** function ___lwdiv *****************
  6107 ;; Defined at:
  6108 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lwdiv.c"
  6109 ;; Parameters:    Size  Location     Type
  6110 ;;  dividend        2    0[COMRAM] unsigned int 
  6111 ;;  divisor         2    2[COMRAM] unsigned int 
  6112 ;; Auto vars:     Size  Location     Type
  6113 ;;  quotient        2    4[COMRAM] unsigned int 
  6114 ;;  counter         1    6[COMRAM] unsigned char 
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  2    0[COMRAM] unsigned int 
  6117 ;; Registers used:
  6118 ;;		wreg, status,2, status,0
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6124 ;;      Params:         4       0       0       0       0       0       0       0       0
  6125 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6127 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6128 ;;Total ram usage:        7 bytes
  6129 ;; Hardware stack levels used: 1
  6130 ;; This function calls:
  6131 ;;		Nothing
  6132 ;; This function is called by:
  6133 ;;		_MedirDistancia
  6134 ;; This function uses a non-reentrant model
  6135 ;;
  6136                           
  6137                           	psect	text40
  6138   001836                     __ptext40:
  6139                           	callstack 0
  6140   001836                     ___lwdiv:
  6141                           	callstack 23
  6142                           
  6143                           ;incstack = 0
  6144   001836  0E00               	movlw	0
  6145   001838  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  6146   00183A  0E00               	movlw	0
  6147   00183C  6E05               	movwf	___lwdiv@quotient^0,c
  6148   00183E  5003               	movf	___lwdiv@divisor^0,w,c
  6149   001840  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6150   001842  B4D8               	btfsc	status,2,c
  6151   001844  D01C               	goto	i2l1005
  6152   001846  0E01               	movlw	1
  6153   001848  6E07               	movwf	___lwdiv@counter^0,c
  6154   00184A  D004               	goto	i2l2903
  6155   00184C                     i2l2901:
  6156   00184C  90D8               	bcf	status,0,c
  6157   00184E  3603               	rlcf	___lwdiv@divisor^0,f,c
  6158   001850  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6159   001852  2A07               	incf	___lwdiv@counter^0,f,c
  6160   001854                     i2l2903:
  6161   001854  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  6162   001856  D7FA               	goto	i2l2901
  6163   001858                     i2u183_40:
  6164   001858  90D8               	bcf	status,0,c
  6165   00185A  3605               	rlcf	___lwdiv@quotient^0,f,c
  6166   00185C  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6167   00185E  5003               	movf	___lwdiv@divisor^0,w,c
  6168   001860  5C01               	subwf	___lwdiv@dividend^0,w,c
  6169   001862  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  6170   001864  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6171   001866  A0D8               	btfss	status,0,c
  6172   001868  D005               	goto	i2l2913
  6173   00186A  5003               	movf	___lwdiv@divisor^0,w,c
  6174   00186C  5E01               	subwf	___lwdiv@dividend^0,f,c
  6175   00186E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  6176   001870  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6177   001872  8005               	bsf	___lwdiv@quotient^0,0,c
  6178   001874                     i2l2913:
  6179   001874  90D8               	bcf	status,0,c
  6180   001876  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6181   001878  3203               	rrcf	___lwdiv@divisor^0,f,c
  6182   00187A  2E07               	decfsz	___lwdiv@counter^0,f,c
  6183   00187C  D7ED               	goto	i2u183_40
  6184   00187E                     i2l1005:
  6185   00187E  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  6186   001882  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6187   001886  0012               	return		;funcret
  6188   001888                     __end_of___lwdiv:
  6189                           	callstack 0
  6190                           
  6191 ;; *************** function _ConversionADC *****************
  6192 ;; Defined at:
  6193 ;;		line 723 in file "Lab6Pruebas.c"
  6194 ;; Parameters:    Size  Location     Type
  6195 ;;  canal           1    wreg     unsigned char 
  6196 ;; Auto vars:     Size  Location     Type
  6197 ;;  canal           1    0[COMRAM] unsigned char 
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  1    wreg      unsigned char 
  6200 ;; Registers used:
  6201 ;;		wreg, status,2, status,0
  6202 ;; Tracked objects:
  6203 ;;		On entry : 0/0
  6204 ;;		On exit  : 0/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6207 ;;      Params:         0       0       0       0       0       0       0       0       0
  6208 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6209 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6210 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6211 ;;Total ram usage:        1 bytes
  6212 ;; Hardware stack levels used: 1
  6213 ;; This function calls:
  6214 ;;		Nothing
  6215 ;; This function is called by:
  6216 ;;		_ISR
  6217 ;; This function uses a non-reentrant model
  6218 ;;
  6219                           
  6220                           	psect	text41
  6221   001AE8                     __ptext41:
  6222                           	callstack 0
  6223   001AE8                     _ConversionADC:
  6224                           	callstack 24
  6225                           
  6226                           ;incstack = 0
  6227                           ;ConversionADC@canal stored from wreg
  6228   001AE8  6E01               	movwf	ConversionADC@canal^0,c
  6229                           
  6230                           ;Lab6Pruebas.c: 724: if(canal > 12)
  6231   001AEA  0E0C               	movlw	12
  6232   001AEC  6401               	cpfsgt	ConversionADC@canal^0,c
  6233   001AEE  D002               	goto	i2l3143
  6234                           
  6235                           ;Lab6Pruebas.c: 725: return 0;
  6236   001AF0  0E00               	movlw	0
  6237   001AF2  0012               	return	
  6238   001AF4                     i2l3143:
  6239                           
  6240                           ;Lab6Pruebas.c: 727: ADCON0=(canal<<2)|0b00000001;
  6241   001AF4  4401               	rlncf	ConversionADC@canal^0,w,c
  6242   001AF6  46E8               	rlncf	wreg,f,c
  6243   001AF8  0BFC               	andlw	252
  6244   001AFA  0901               	iorlw	1
  6245   001AFC  6EC2               	movwf	194,c	;volatile
  6246                           
  6247                           ;Lab6Pruebas.c: 728: GO=1;
  6248   001AFE  82C2               	bsf	4034,1,c	;volatile
  6249   001B00                     i2l488:
  6250   001B00  B2C2               	btfsc	4034,1,c	;volatile
  6251   001B02  D7FE               	goto	i2l488
  6252                           
  6253                           ;Lab6Pruebas.c: 730: return ADRESH;
  6254   001B04  50C4               	movf	196,w,c	;volatile
  6255   001B06  0012               	return		;funcret
  6256   001B08                     __end_of_ConversionADC:
  6257                           	callstack 0
  6258                           
  6259                           	psect	rparam
  6260   000001                     ___rparam_used  equ	1
  6261   000000                     ___param_bank   equ	0
  6262   000000                     __Lparam        equ	__Lrparam
  6263   000000                     __Hparam        equ	__Hrparam
  6264                           
  6265                           	psect	temp
  6266   000042                     btemp:
  6267                           	callstack 0
  6268   000042                     	ds	1
  6269   000042                     int$flags       set	btemp
  6270   000043                     wtemp8          set	btemp+1
  6271   000043                     ttemp5          set	btemp+1
  6272   000046                     ttemp6          set	btemp+4
  6273   00004A                     ttemp7          set	btemp+8
  6274                           
  6275                           	psect	idloc
  6276                           
  6277                           ;Config register IDLOC0 @ 0x200000
  6278                           ;	unspecified, using default values
  6279   200000                     	org	2097152
  6280   200000  FF                 	db	255
  6281                           
  6282                           ;Config register IDLOC1 @ 0x200001
  6283                           ;	unspecified, using default values
  6284   200001                     	org	2097153
  6285   200001  FF                 	db	255
  6286                           
  6287                           ;Config register IDLOC2 @ 0x200002
  6288                           ;	unspecified, using default values
  6289   200002                     	org	2097154
  6290   200002  FF                 	db	255
  6291                           
  6292                           ;Config register IDLOC3 @ 0x200003
  6293                           ;	unspecified, using default values
  6294   200003                     	org	2097155
  6295   200003  FF                 	db	255
  6296                           
  6297                           ;Config register IDLOC4 @ 0x200004
  6298                           ;	unspecified, using default values
  6299   200004                     	org	2097156
  6300   200004  FF                 	db	255
  6301                           
  6302                           ;Config register IDLOC5 @ 0x200005
  6303                           ;	unspecified, using default values
  6304   200005                     	org	2097157
  6305   200005  FF                 	db	255
  6306                           
  6307                           ;Config register IDLOC6 @ 0x200006
  6308                           ;	unspecified, using default values
  6309   200006                     	org	2097158
  6310   200006  FF                 	db	255
  6311                           
  6312                           ;Config register IDLOC7 @ 0x200007
  6313                           ;	unspecified, using default values
  6314   200007                     	org	2097159
  6315   200007  FF                 	db	255
  6316                           
  6317                           	psect	config
  6318                           
  6319                           ;Config register CONFIG1L @ 0x300000
  6320                           ;	unspecified, using default values
  6321                           ;	PLL Prescaler Selection bits
  6322                           ;	PLLDIV = 0x0, unprogrammed default
  6323                           ;	System Clock Postscaler Selection bits
  6324                           ;	CPUDIV = 0x0, unprogrammed default
  6325                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  6326                           ;	USBDIV = 0x0, unprogrammed default
  6327   300000                     	org	3145728
  6328   300000  00                 	db	0
  6329                           
  6330                           ;Config register CONFIG1H @ 0x300001
  6331                           ;	Oscillator Selection bits
  6332                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  6333                           ;	Fail-Safe Clock Monitor Enable bit
  6334                           ;	FCMEN = 0x0, unprogrammed default
  6335                           ;	Internal/External Oscillator Switchover bit
  6336                           ;	IESO = 0x0, unprogrammed default
  6337   300001                     	org	3145729
  6338   300001  09                 	db	9
  6339                           
  6340                           ;Config register CONFIG2L @ 0x300002
  6341                           ;	unspecified, using default values
  6342                           ;	Power-up Timer Enable bit
  6343                           ;	PWRT = 0x1, unprogrammed default
  6344                           ;	Brown-out Reset Enable bits
  6345                           ;	BOR = 0x3, unprogrammed default
  6346                           ;	Brown-out Reset Voltage bits
  6347                           ;	BORV = 0x3, unprogrammed default
  6348                           ;	USB Voltage Regulator Enable bit
  6349                           ;	VREGEN = 0x0, unprogrammed default
  6350   300002                     	org	3145730
  6351   300002  1F                 	db	31
  6352                           
  6353                           ;Config register CONFIG2H @ 0x300003
  6354                           ;	Watchdog Timer Enable bit
  6355                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6356                           ;	Watchdog Timer Postscale Select bits
  6357                           ;	WDTPS = 0xF, unprogrammed default
  6358   300003                     	org	3145731
  6359   300003  1E                 	db	30
  6360                           
  6361                           ; Padding undefined space
  6362   300004                     	org	3145732
  6363   300004  FF                 	db	255
  6364                           
  6365                           ;Config register CONFIG3H @ 0x300005
  6366                           ;	CCP2 MUX bit
  6367                           ;	CCP2MX = 0x1, unprogrammed default
  6368                           ;	PORTB A/D Enable bit
  6369                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  6370                           ;	Low-Power Timer 1 Oscillator Enable bit
  6371                           ;	LPT1OSC = 0x0, unprogrammed default
  6372                           ;	MCLR Pin Enable bit
  6373                           ;	MCLRE = 0x1, unprogrammed default
  6374   300005                     	org	3145733
  6375   300005  81                 	db	129
  6376                           
  6377                           ;Config register CONFIG4L @ 0x300006
  6378                           ;	Stack Full/Underflow Reset Enable bit
  6379                           ;	STVREN = 0x1, unprogrammed default
  6380                           ;	Single-Supply ICSP Enable bit
  6381                           ;	LVP = OFF, Single-Supply ICSP disabled
  6382                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  6383                           ;	ICPRT = 0x0, unprogrammed default
  6384                           ;	Extended Instruction Set Enable bit
  6385                           ;	XINST = 0x0, unprogrammed default
  6386                           ;	Background Debugger Enable bit
  6387                           ;	DEBUG = 0x1, unprogrammed default
  6388   300006                     	org	3145734
  6389   300006  81                 	db	129
  6390                           
  6391                           ; Padding undefined space
  6392   300007                     	org	3145735
  6393   300007  FF                 	db	255
  6394                           
  6395                           ;Config register CONFIG5L @ 0x300008
  6396                           ;	unspecified, using default values
  6397                           ;	Code Protection bit
  6398                           ;	CP0 = 0x1, unprogrammed default
  6399                           ;	Code Protection bit
  6400                           ;	CP1 = 0x1, unprogrammed default
  6401                           ;	Code Protection bit
  6402                           ;	CP2 = 0x1, unprogrammed default
  6403                           ;	Code Protection bit
  6404                           ;	CP3 = 0x1, unprogrammed default
  6405   300008                     	org	3145736
  6406   300008  0F                 	db	15
  6407                           
  6408                           ;Config register CONFIG5H @ 0x300009
  6409                           ;	unspecified, using default values
  6410                           ;	Boot Block Code Protection bit
  6411                           ;	CPB = 0x1, unprogrammed default
  6412                           ;	Data EEPROM Code Protection bit
  6413                           ;	CPD = 0x1, unprogrammed default
  6414   300009                     	org	3145737
  6415   300009  C0                 	db	192
  6416                           
  6417                           ;Config register CONFIG6L @ 0x30000A
  6418                           ;	unspecified, using default values
  6419                           ;	Write Protection bit
  6420                           ;	WRT0 = 0x1, unprogrammed default
  6421                           ;	Write Protection bit
  6422                           ;	WRT1 = 0x1, unprogrammed default
  6423                           ;	Write Protection bit
  6424                           ;	WRT2 = 0x1, unprogrammed default
  6425                           ;	Write Protection bit
  6426                           ;	WRT3 = 0x1, unprogrammed default
  6427   30000A                     	org	3145738
  6428   30000A  0F                 	db	15
  6429                           
  6430                           ;Config register CONFIG6H @ 0x30000B
  6431                           ;	unspecified, using default values
  6432                           ;	Configuration Register Write Protection bit
  6433                           ;	WRTC = 0x1, unprogrammed default
  6434                           ;	Boot Block Write Protection bit
  6435                           ;	WRTB = 0x1, unprogrammed default
  6436                           ;	Data EEPROM Write Protection bit
  6437                           ;	WRTD = 0x1, unprogrammed default
  6438   30000B                     	org	3145739
  6439   30000B  E0                 	db	224
  6440                           
  6441                           ;Config register CONFIG7L @ 0x30000C
  6442                           ;	unspecified, using default values
  6443                           ;	Table Read Protection bit
  6444                           ;	EBTR0 = 0x1, unprogrammed default
  6445                           ;	Table Read Protection bit
  6446                           ;	EBTR1 = 0x1, unprogrammed default
  6447                           ;	Table Read Protection bit
  6448                           ;	EBTR2 = 0x1, unprogrammed default
  6449                           ;	Table Read Protection bit
  6450                           ;	EBTR3 = 0x1, unprogrammed default
  6451   30000C                     	org	3145740
  6452   30000C  0F                 	db	15
  6453                           
  6454                           ;Config register CONFIG7H @ 0x30000D
  6455                           ;	unspecified, using default values
  6456                           ;	Boot Block Table Read Protection bit
  6457                           ;	EBTRB = 0x1, unprogrammed default
  6458   30000D                     	org	3145741
  6459   30000D  40                 	db	64
  6460                           tosu	equ	0xFFF
  6461                           tosh	equ	0xFFE
  6462                           tosl	equ	0xFFD
  6463                           stkptr	equ	0xFFC
  6464                           pclatu	equ	0xFFB
  6465                           pclath	equ	0xFFA
  6466                           pcl	equ	0xFF9
  6467                           tblptru	equ	0xFF8
  6468                           tblptrh	equ	0xFF7
  6469                           tblptrl	equ	0xFF6
  6470                           tablat	equ	0xFF5
  6471                           prodh	equ	0xFF4
  6472                           prodl	equ	0xFF3
  6473                           indf0	equ	0xFEF
  6474                           postinc0	equ	0xFEE
  6475                           postdec0	equ	0xFED
  6476                           preinc0	equ	0xFEC
  6477                           plusw0	equ	0xFEB
  6478                           fsr0h	equ	0xFEA
  6479                           fsr0l	equ	0xFE9
  6480                           wreg	equ	0xFE8
  6481                           indf1	equ	0xFE7
  6482                           postinc1	equ	0xFE6
  6483                           postdec1	equ	0xFE5
  6484                           preinc1	equ	0xFE4
  6485                           plusw1	equ	0xFE3
  6486                           fsr1h	equ	0xFE2
  6487                           fsr1l	equ	0xFE1
  6488                           bsr	equ	0xFE0
  6489                           indf2	equ	0xFDF
  6490                           postinc2	equ	0xFDE
  6491                           postdec2	equ	0xFDD
  6492                           preinc2	equ	0xFDC
  6493                           plusw2	equ	0xFDB
  6494                           fsr2h	equ	0xFDA
  6495                           fsr2l	equ	0xFD9
  6496                           status	equ	0xFD8

Data Sizes:
    Strings     143
    Constant    16
    Data        3
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      65
    BANK0           160      6       6
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    aux	PTR unsigned char [1] size(1) Largest target is 17
		 -> STR_1(CODE[17]), 

    CrearCaracter@data	PTR const unsigned char  size(1) Largest target is 8
		 -> banda1(CODE[8]), banda2(CODE[8]), 

    FIN	PTR unsigned char [1] size(1) Largest target is 16
		 -> STR_2(CODE[16]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_10(CODE[11]), STR_2(CODE[16]), STR_3(CODE[11]), 
		 -> STR_4(CODE[16]), STR_5(CODE[12]), STR_6(CODE[11]), STR_9(CODE[14]), 

    numASCII@ascii_values	PTR unsigned char  size(2) Largest target is 0
		 -> ISR@numAscii(COMRAM[0]), 

    TransmitirVar@buffer	PTR unsigned char  size(2) Largest target is 20
		 -> ISR@numAscii(COMRAM[0]), STR_7(CODE[15]), STR_8(CODE[20]), 


Critical Paths under _main in COMRAM

    _main->_Bienvenida
    _main->_EscribeLCD_n8
    _MostrarNumeros->___lbmod
    _EscribeLCD_n8->___lbdiv
    ___lbdiv->___lbmod
    _Emergencia->_MensajeLCD_Var
    _MensajeLCD_Var->_EscribeLCD_c
    _Bienvenida->_CrearCaracter
    _OcultarCursorLCD->_EnviaDato
    _MostrarCursorLCD->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _CrearCaracter->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->___fttol
    i2_MostrarNumeros->i2___lbmod
    i2_EscribeLCD_n8->i2___lbdiv
    i2___lbdiv->i2___lbmod
    i2_EscribeLCD_c->i2_EnviaDato
    i2_DireccionaLCD->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD
    _numASCII->___awdiv
    ___awtoft->___awdiv
    ___awtoft->___ftpack
    _TransmitirVar->_Transmitir
    _MedirDistancia->___lwdiv

Critical Paths under _main in BANK0

    _main->_EscribeLCD_n8

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7559
                                             38 COMRAM     1     1      0
                                              4 BANK0      2     2      0
                         _Bienvenida
                           _BorraLCD
                       _ConfiguraLCD
                      _DireccionaLCD
                         _Emergencia
                      _EscribeLCD_n8
                      _InicializaLCD
                     _MensajeLCD_Var
                   _MostrarCursorLCD
                     _MostrarNumeros
                   _OcultarCursorLCD
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (1) _MostrarNumeros                                       0     0      0     326
                       _EEPROM_Write
                            ___lbmod
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write                                         2     1      1      54
                                             29 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _EscribeLCD_n8                                        5     4      1    1305
                                             37 COMRAM     1     0      1
                                              0 BANK0      4     4      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1     272
                                             29 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     272
                                             33 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Emergencia                                           0     0      0     888
                           _BorraLCD
                      _DireccionaLCD
                     _MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       1     0      1     371
                                             34 COMRAM     1     0      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (1) _Bienvenida                                           3     3      0    2490
                                             37 COMRAM     1     1      0
                                              0 BANK0      2     2      0
                       _ConfiguraLCD
                      _CrearCaracter
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                   _MostrarCursorLCD
                   _OcultarCursorLCD
 ---------------------------------------------------------------------------------
 (1) _OcultarCursorLCD                                     0     0      0     235
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _MostrarCursorLCD                                     0     0      0     235
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     470
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     235
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0     282
                                             33 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     282
                                             33 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _CrearCaracter                                        4     3      1     418
                                             33 COMRAM     4     3      1
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _EnviaDato                                            2     2      0     188
                                             31 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _RetardoLCD                                           2     2      0      47
                                             29 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0     141
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                 14    14      0    3851
                                             15 COMRAM    14    14      0
                      _ConversionADC
                     _MedirDistancia
                         _Transmitir
                      _TransmitirVar
                            ___awdiv
                           ___awtoft
                            ___fttol
                           _numASCII
                    i2_DireccionaLCD
                     i2_EscribeLCD_c
                    i2_EscribeLCD_n8
                   i2_MostrarNumeros
                          i2___lbdiv
 ---------------------------------------------------------------------------------
 (7) i2_MostrarNumeros                                     0     0      0     227
                     i2_EEPROM_Write
                          i2___lbmod
 ---------------------------------------------------------------------------------
 (8) i2_EEPROM_Write                                       2     1      1      54
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (7) i2_EscribeLCD_n8                                      5     4      1     836
                                              8 COMRAM     5     4      1
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
                          i2___lbdiv
                          i2___lbmod
 ---------------------------------------------------------------------------------
 (8) i2___lbmod                                            4     3      1     173
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (7) i2___lbdiv                                            4     3      1     174
                                              4 COMRAM     4     3      1
                          i2___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (7) i2_EscribeLCD_c                                       1     1      0     174
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) i2_DireccionaLCD                                      1     1      0     174
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_EnviaDato                                          2     2      0     116
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_RetardoLCD                                         2     2      0      29
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _numASCII                                             4     0      4     916
                                              8 COMRAM     4     0      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     308
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) ___fttol                                             15    11      4     253
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (7) ___awtoft                                             4     1      3     326
                                              8 COMRAM     4     1      3
                            ___awdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (8) ___ftpack                                             8     3      5     234
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (7) _TransmitirVar                                        2     0      2      77
                                              1 COMRAM     2     0      2
                         _Transmitir
 ---------------------------------------------------------------------------------
 (8) _Transmitir                                           1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _MedirDistancia                                       1     1      0     189
                                              7 COMRAM     1     1      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              7     3      4     164
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _ConversionADC                                        1     1      0      58
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Bienvenida
     _ConfiguraLCD
     _CrearCaracter
       _EnviaDato
         _HabilitaLCD
         _RetardoLCD
       _HabilitaLCD
       _RetardoLCD
     _DireccionaLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _EscribeLCD_c
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _InicializaLCD
       _BorraLCD
         _EnviaDato
         _HabilitaLCD
         _RetardoLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _MostrarCursorLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _OcultarCursorLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
   _BorraLCD
   _ConfiguraLCD
   _DireccionaLCD
   _Emergencia
     _BorraLCD
     _DireccionaLCD
     _MensajeLCD_Var
       _EscribeLCD_c
   _EscribeLCD_n8
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
     ___lbdiv
       ___lbmod (ARG)
     ___lbmod
   _InicializaLCD
   _MensajeLCD_Var
   _MostrarCursorLCD
   _MostrarNumeros
     _EEPROM_Write
     ___lbmod
   _OcultarCursorLCD
   ___lbdiv
   ___lbmod

 _ISR (ROOT)
   _ConversionADC
   _MedirDistancia
     ___lwdiv
   _Transmitir
   _TransmitirVar
     _Transmitir
   ___awdiv
   ___awtoft
     ___awdiv (ARG)
     ___ftpack (ARG)
   ___fttol
   _numASCII
     ___awdiv
     ___awmod
   i2_DireccionaLCD
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_EscribeLCD_c
     i2_EnviaDato
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_EscribeLCD_n8
     i2_EnviaDato
     i2_HabilitaLCD
     i2_RetardoLCD
     i2___lbdiv
       i2___lbmod (ARG)
     i2___lbmod
   i2_MostrarNumeros
     i2_EEPROM_Write
     i2___lbmod
   i2___lbdiv

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      6       6      3.8%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     39      65     69.1%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRllh        37      0       0      0.0%
BITBIGSFRlll        33      0       0      0.0%
BITBIGSFRlh          5      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      71      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Mar 07 15:34:39 2025

       Transmitir@BufferT 0001                        _GO 7E11          i2DireccionaLCD@a 0005  
                      _RI 7E84          i2EscribeLCD_n8@a 000D          i2EscribeLCD_n8@b 0009  
            ___awdiv@sign 0006                EnviaDato@a 0021                        _ok 0036  
           _InicializaLCD 1412                       l344 0E0A                       l442 1656  
                     l517 1ABC                       _GIE 7F97                       _FIN 003F  
                     _RC0 7C10                       _RC1 7C11                       _RB4 7C0C  
                     _RB5 7C0D                       _RB6 7C0E                       _RB7 7C0F  
                     _PR2 0FCB                       _ISR 0008                       _dis 0028  
                     _aux 0040              ___awmod@sign 0006                       wreg 0FE8  
                    ?_ISR 0001                      ISR@d 001A          ??i2_EscribeLCD_c 0005  
                    l4003 1054                      l4101 1624                      l4113 1642  
                    l4105 162E                      l4043 0F20                      l4019 10C4  
                    l4045 0F2C                      l4037 0EFE                      l4117 164C  
                    l4109 1638                      l4213 0D54                      l4063 0F88  
                    l4081 0FD4                      l4057 0F6E                      l4225 0D76  
                    l4217 0D5C                      l4315 0EB4                      l4235 0DA8  
                    l4093 1A24                      l4257 0DEC                      l4193 0D2E  
                    l4187 0D24                      l4293 0E64                      l4269 0E0C  
                    l4295 0E68                      l3781 1768                      l3925 16FC  
                    l3829 1424                      l3775 173C                      l3839 1442  
                    l3951 196E                      l3777 174C                      l3785 1772  
                    l3849 1460                      l3779 175E                      l3883 1A64  
                    l3947 1968                      l3963 198C                      l3971 1A30  
                    l3869 1498                      l3799 18C6                      l3879 1A52  
                    l3959 1984                      l3993 1006                      l3979 1A48  
                    l3987 0FE2                      STR_1 0825                      STR_2 0836  
                    STR_3 0895                      STR_4 0846                      STR_5 0873  
                    STR_6 087F                      STR_7 0856                      STR_8 0811  
                    STR_9 0865                      _CREN 7D5C                      u3020 1972  
                    _LATA 0F89                      _LATB 0F8A                      _LATC 0F8B  
                    _LATD 0F8C                      _LATE 0F8D                      u3317 0D16  
                    u3407 0FC4                      u3327 0D98                      u3417 1742  
                    u3337 0E2A                      u3427 174E                      u3347 0E5A  
                    u3437 1756                      u3357 0EA2                      u3447 1760  
                    u3367 0F12                      u3457 176A                      u3377 0F40  
                    u3467 1BB8                      u3387 0F60                      u2940 1B1A  
                    u3397 0FA4                      _RBIE 7F93                      _RBIF 7F90  
                    _RCIE 7CED                      _RCIF 7CF5                      _RBPU 7F8F  
                    _TMR0 0FD6                      _TMR1 0FCE                      _TMR2 0FCC  
                    _TRMT 7D61            ??_EscribeLCD_c 0022                      _main 0C78  
            ___ftpack@arg 0001              ___ftpack@exp 0004                      fsr2h 0FDA  
                    indf2 0FDF                      fsr2l 0FD9                      btemp 0042  
              _Bienvenida 0ED0                      prodh 0FF4                      prodl 0FF3  
                    start 000E            CrearCaracter@i 0025              ___param_bank 0000  
                   ??_ISR 0010              ___fttol@exp1 000F      __end_of_EEPROM_Write 1AC4  
            ___fttol@lval 000B           i2_DireccionaLCD 1B62         ??i2_EscribeLCD_n8 000A  
          ?_InicializaLCD 0001                     ?_main 0001           __end_of___awdiv 1530  
         __end_of___lbdiv 1990                     _EEADR 0FA9                     STR_10 088A  
                   _CCPR2 0FBB           __end_of___awmod 160E             EscribeLCD_c@a 0022  
         __end_of___lbmod 1A50                     _T0CON 0FD5           ___awdiv@divisor 0003  
                   _T1CON 0FCD           __end_of___fttol 1364                     _T2CON 0FCA  
                   _LATA1 7C49                     _LATA2 7C4A                     _LATA3 7C4B  
                   _LATA4 7C4C                     _LATA5 7C4D           __end_of___lwdiv 1888  
                   i2l400 0B38                     i2l411 0B9A                     i2l500 1548  
                   i2l421 0BE4                     i2l405 0B62                     i2l422 0C48  
                   i2l408 0B7E                     i2l505 155C                     i2l442 16BE  
                   i2l434 0C54                     i2l370 0A06                     i2l507 155E  
                   i2l372 0A20                     i2l517 1AE0                     i2l382 0A78  
                   i2l391 0ADC                     i2l375 0A2C                     i2l385 0A94  
                   i2l394 0B00                     i2l379 0A5C                     i2l397 0B1C  
                   i2l488 1B00           ___awdiv@counter 0005                     _RCREG 0FAE  
                   _RCSTA 0FAB      numASCII@ascii_values 000B                     _SPBRG 0FAF  
                   _PORTB 0F81                     _TRISA 0F92                     _TRISB 0F93  
                   _TRISD 0F95                     _TRISE 0F96                     _TXREG 0FAD  
                   _TXSTA 0FAC                _Emergencia 19FE           ??_EscribeLCD_n8 0027  
                   _Tecla 003C             ___awtoft@sign 000C                     _block 0037  
                   _input 0038           ??_ConversionADC 0001             ___ftpack@sign 0005  
                   tablat 0FF5               _HabilitaLCD 1BB4                     ttemp5 0043  
                   ttemp6 0046                     ttemp7 004A           ??_TransmitirVar 0004  
                   status 0FD8                     wtemp8 0043             i2___lbmod@rem 0004  
         ___lbdiv@divisor 0022          EEPROM_Write@data 001E           ___lbdiv@counter 0024  
        __end_of_BorraLCD 1BB4           __initialization 1920           _Iniciarpregunta 0035  
            __end_of_main 0ED0                    ??_main 0064      __end_of_ConfiguraLCD 1B20  
           ___fttol@sign1 000A             __activetblptr 0002     __end_of_CrearCaracter 1738  
                  _ADCON0 0FC2                    _ADCON1 0FC1                    _ADCON2 0FC0  
                  _CCP2IF 7D08                    _ADRESH 0FC4                    _EEDATA 0FA8  
          DireccionaLCD@a 0022                    _CCPR1L 0FBE                    _EECON2 0FA7  
          EscribeLCD_n8@a 0063            EscribeLCD_n8@b 0026          ___awdiv@dividend 0001  
        __end_of___awtoft 19FE          __end_of___ftpack 1412                    i2l1005 187E  
                  i2l3201 1570                    i2l3205 1584                    i2l3143 1AF4  
                  i2l3207 159C                    i2l3311 11AA                    i2l3161 1256  
                  i2l3171 17E6                    i2l3219 19DA                    i2l3251 1322  
                  i2l3155 11EE                    i2l3331 1696                    i2l3229 12BE  
                  i2l3175 180E                    i2l3247 1312                    i2l3343 16B4  
                  i2l3335 16A0                    i2l3327 168C                    i2l2713 1BD2  
                  i2l3265 1352                    i2l3257 132A                    i2l3259 1336  
                  i2l2811 1526                    i2l2803 150E                    i2l3339 16AA  
                  i2l2901 184C                    i2l2581 17A2                    i2l3285 1100  
                  i2l2903 1854                    i2l2751 13C0                    i2l2743 1382  
                  i2l2807 1518                    i2l2831 15CC                    i2l2823 15B2  
                  i2l2583 17B4                    i2l3295 1146                    i2l3279 10E0  
                  i2l3623 0A3C                    i2l3607 0A00                    i2l2913 1874  
                  i2l2753 13DE                    i2l2745 138C                    i2l2833 15D4  
                  i2l2585 17BE                    i2l2755 13E8                    i2l2747 13AA  
                  i2l2843 15F6                    i2l2827 15BE                    i2l2579 1792  
                  i2l3731 0BB6                    i2l3723 0B9E                    i2l2589 17C8  
                  i2l3725 0BA2                    i2l2791 14E6                    i2l2847 1604  
                  i2l2839 15EC                    i2l3751 0BF0                    i2l3655 0AB0  
                  i2l3663 0AE0                    i2l3743 0BD8                    i2l3567 0906  
                  i2l2793 14EE                    i2l2785 14D0                    i2l2929 1912  
                  i2l2961 19A6                    i2l3753 0BF4                    i2l3737 0BC6  
                  i2l3657 0AB4                    i2l3585 097C                    i2l3593 09DC  
                  i2l2779 14C0                    i2l3755 0BF8                    i2l3747 0BE8  
                  u216_41 12A2                    i2l2957 19A0                    i2l2973 19C4  
                  i2l2981 1A80                    i2l3749 0BEC                    i2l3693 0B42  
                  i2l3759 0BFE                    i2l2969 19BC                    i2l2989 1A98  
                  _TMR0IE 7F95                    _TMR0IF 7F92                    _TMR1IF 7CF0  
                  _TMR0ON 7EAF                    _TMR1ON 7E68                    _TMR2ON 7E52  
        i2_MostrarNumeros 1676                    _TRISC0 7CA0                    _TRISC2 7CA2  
   __end_of_DireccionaLCD 1B4C                _RetardoLCD 1738               ?_Bienvenida 0001  
 __end_ofi2_DireccionaLCD 1B78         Bienvenida@max_pos 0060             Bienvenida@pos 0061  
    EscribeLCD_n8@centena 0060                    _banda1 0809                    _banda2 0801  
               ??___awdiv 0005                 ??___lbdiv 0023                 ??___awmod 0005  
               ??___lbmod 001F                 ??___fttol 0005                 ??___lwdiv 0005  
         ??_InicializaLCD 0022                    _valADC 002A                    _objeto 002F  
                  _valPWM 003D          __end_of_numASCII 1292                    clear_0 1944  
        ___awdiv@quotient 0007           ___awmod@divisor 0003                    isa$std 0001  
__end_of_OcultarCursorLCD 1B8C           ___awmod@counter 0005      __end_of_EscribeLCD_c 1B36  
            ?i2_EnviaDato 0001              __pdataCOMRAM 003F         __end_ofi2___lbdiv 19C8  
       __end_ofi2___lbmod 1AA0               ?_Emergencia 0001              __mediumconst 0000  
                  tblptrh 0FF7                    tblptrl 0FF6                    tblptru 0FF8  
              _Transmitir 1BD0         MedirDistancia@aux 0008          ___lbdiv@dividend 0023  
        ??_MedirDistancia 0008           ___lbmod@divisor 001E     __end_ofi2_HabilitaLCD 1BD0  
              __accesstop 0060   __end_of__initialization 194A           ___lbmod@counter 0020  
           ___rparam_used 0001                ___awtoft@c 0009                ___fttol@f1 0001  
          __pcstackCOMRAM 0001          CrearCaracter@pos 0024         __end_of_EnviaDato 18D4  
        ___lbdiv@quotient 0025               ISR@numAscii 001A                 ?_BorraLCD 0001  
          _MensajeLCD_Var 1A50       TransmitirVar@buffer 0002              _EEPROM_Write 1AA0  
         MensajeLCD_Var@a 0023               ?_RetardoLCD 0001               RetardoLCD@a 001F  
         i2_EscribeLCD_n8 10DA          ?i2_DireccionaLCD 0001                   _CCP1CON 0FBD  
                 _CCP2CON 0FBA                   _BAUDCON 0FB8            _MostrarNumeros 160E  
               ?___awtoft 0009                 ?___ftpack 0001          _MostrarCursorLCD 1B8C  
  __end_of_MensajeLCD_Var 1A78                ??_BorraLCD 0022               ?_Transmitir 0001  
            ?_HabilitaLCD 0001                 ?_numASCII 0009              _ConfiguraLCD 1B08  
                 __Hparam 0000     i2EscribeLCD_n8@decena 000B                   __Lparam 0000  
  __end_of_MostrarNumeros 1676                   ___awdiv 14AE                   ___lbdiv 1958  
                 ___awmod 15A0                   ___lbmod 1A28                   ___fttol 1292  
   i2EscribeLCD_n8@unidad 000C                   ___lwdiv 1836              __psmallconst 0800  
                 __pcinit 1920                ??___awtoft 000C                ??___ftpack 0006  
                 __ramtop 0800                   __ptext0 0C78                   __ptext1 160E  
                 __ptext2 1AA0                   __ptext3 0FDA                   __ptext4 1A28  
                 __ptext5 1958                   __ptext6 19FE                   __ptext7 1A50  
                 __ptext8 0ED0                   __ptext9 1B78  __end_ofi2_MostrarNumeros 16DE  
                 _realPWM 0029             _Actual_sensor 002C          ___awmod@dividend 0001  
         ?_MensajeLCD_Var 0023     __end_of_EscribeLCD_n8 10DA            __pintcode_body 08A2  
    end_of_initialization 194A   __end_ofi2_EscribeLCD_n8 11C0     __end_of_ConversionADC 1B08  
           __Lmediumconst 0000                   int_func 08A2                ??_numASCII 000D  
            _EscribeLCD_c 1B20              ??_Bienvenida 0026        ConversionADC@canal 0001  
   __end_of_TransmitirVar 1836                   postinc0 0FEE           ?_MostrarNumeros 0001  
      i2EEPROM_Write@data 0001         ?_OcultarCursorLCD 0001              ??_Emergencia 0024  
      ??_OcultarCursorLCD 0022          ___lbmod@dividend 001F        __end_of_Bienvenida 0FDA  
         i2EscribeLCD_c@a 0005                 i2___lbdiv 1990                 i2___lbmod 1A78  
             ___lbmod@rem 0021            i2_EEPROM_Write 1AC4             ?i2_RetardoLCD 0001  
      __end_of_Emergencia 1A28         CrearCaracter@data 0022            __end_of_banda1 0811  
          __end_of_banda2 0809             __pidataCOMRAM 1BDC     __end_of_InicializaLCD 14AE  
               _EnviaDato 1888       start_initialization 1920               __end_of_ISR 0C78  
              ?i2___lbdiv 0005                ?i2___lbmod 0001    __end_ofi2_EEPROM_Write 1AE8  
        ?i2_EscribeLCD_n8 0009            ??i2_RetardoLCD 0001              ??_RetardoLCD 001E  
__end_of_MostrarCursorLCD 1BA0        i2___lbdiv@dividend 0006       EscribeLCD_n8@decena 0061  
     EscribeLCD_n8@unidad 0062                ?_EnviaDato 0001               __pbssCOMRAM 0028  
      __end_of_RetardoLCD 178E             __pcstackBANK0 0060             _CrearCaracter 16DE  
      i2___lbdiv@quotient 0008                ISR@comando 001D              ??_Transmitir 0001  
         ?i2_EEPROM_Write 0001             _DireccionaLCD 1B36            i2_EscribeLCD_c 1B4C  
        ___lwdiv@dividend 0001                 __pintcode 0008                 _flagMotor 002B  
               _faltantes 003A                  ?___awdiv 0001                  ?___lbdiv 0022  
                ?___awmod 0001                  ?___lbmod 001E                  ?___fttol 0001  
                ?___lwdiv 0001        __end_of_Transmitir 1BDC                 _emergency 0034  
        ??_MensajeLCD_Var 0024         ?i2_MostrarNumeros 0001               __smallconst 0800  
          ?_CrearCaracter 0022        ??i2_MostrarNumeros 0005          ___lwdiv@quotient 0005  
             ??i2___lbdiv 0006               ??i2___lbmod 0002             i2_HabilitaLCD 1BC2  
          ?_DireccionaLCD 0001    __end_ofi2_EscribeLCD_c 1B62          ??_MostrarNumeros 0022  
                i2u203_40 11D0                  i2u212_40 1566                  i2u204_40 11FE  
                i2u205_40 1806                  i2u205_47 17FC                  i2u214_40 157C  
                i2u206_40 182E                  i2u222_40 133C                  i2u206_47 1824  
                i2u209_40 1552                  i2u217_40 12AC                  i2u218_40 12DC  
                i2u218_45 12D4                  i2u163_40 13F2                  i2u261_40 0A38  
                i2u350_47 17AC                  i2u183_40 1858                  i2u159_40 1374  
                i2u175_40 15D8                  i2u351_47 17B6                  i2u248_40 08DA  
                i2u352_47 17C0                  i2u169_40 14F2                  i2u249_45 08DC  
                i2u353_47 1BC6                  i2u347_47 0BCC                  i2u348_47 1798  
                i2u189_40 19AA                  i2u349_47 17A4             ??i2_EnviaDato 0003  
    __end_ofi2_RetardoLCD 17E4               ??_EnviaDato 0020                  _BorraLCD 1BA0  
          ?i2_HabilitaLCD 0001           ?i2_EscribeLCD_c 0001                _EECON1bits 0FA6  
   i2EEPROM_Write@address 0002                  __Hrparam 0000         i2___lbdiv@divisor 0005  
  i2EscribeLCD_n8@centena 000A         i2___lbdiv@counter 0007                  __Lrparam 0000  
            i2EnviaDato@a 0004                  ___awtoft 19C8                  ___ftpack 1364  
         ??_CrearCaracter 0023             ConfiguraLCD@a 001E         ??i2_DireccionaLCD 0005  
         ___lwdiv@divisor 0003           ___lwdiv@counter 0007                  __ptext10 1B8C  
                __ptext11 1412                  __ptext12 1BA0                  __ptext21 1676  
                __ptext13 1B20                  __ptext30 1BC2                  __ptext22 1AC4  
                __ptext14 1B36                  __ptext31 11C0                  __ptext23 10DA  
                __ptext15 16DE                  __ptext40 1836                  __ptext32 15A0  
                __ptext24 1A78                  __ptext16 1888                  __ptext41 1AE8  
                __ptext33 14AE                  __ptext25 1990                  __ptext17 1738  
                __ptext34 1292                  __ptext26 1B4C                  __ptext18 1BB4  
                __ptext35 19C8                  __ptext27 1B62                  __ptext19 1B08  
                __ptext36 1364                  __ptext28 18D4                  __ptext37 17E4  
                __ptext29 178E                  __ptext38 1BD0                  __ptext39 1530  
          numASCII@number 0009       __end_ofi2_EnviaDato 1920             ?_EEPROM_Write 001E  
                _contadas 0039                  _contador 0033        i2___lbmod@dividend 0002  
                _ctimeout 0030                  _inactive 0032           ??_DireccionaLCD 0022  
                _etimeout 0031                  _objetivo 003B                  _numASCII 11C0  
                _interfaz 0041         ?_MostrarCursorLCD 0001        ??_MostrarCursorLCD 0022  
                isa$xinst 0000            _MedirDistancia 1530                  int$flags 0042  
            _motorAntiguo 002D                _INTCONbits 0FF2          ??i2_EEPROM_Write 0002  
          ??_EEPROM_Write 001F             _EscribeLCD_n8 0FDA           ??i2_HabilitaLCD 0001  
                intlevel2 0000             ??_HabilitaLCD 001E             _ConversionADC 1AE8  
           ?_ConfiguraLCD 0001         i2___lbmod@divisor 0001         i2___lbmod@counter 0003  
           i2RetardoLCD@a 0002    __end_of_MedirDistancia 15A0             _TransmitirVar 17E4  
             _motorActual 002E               i2_EnviaDato 18D4        main@Antiguo_sensor 0027  
          ?_EscribeLCD_n8 0026            ?_ConversionADC 0001            ??_ConfiguraLCD 001E  
        _OcultarCursorLCD 1B78             ?_EscribeLCD_c 0001              i2_RetardoLCD 178E  
          ?_TransmitirVar 0002           ?_MedirDistancia 0001       EEPROM_Write@address 001F  
     __end_of_HabilitaLCD 1BC2  
