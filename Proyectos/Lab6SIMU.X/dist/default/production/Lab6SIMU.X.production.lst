

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Mar 07 01:38:20 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=1
    50                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1,group=1
    51                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,group=1
    52                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60   000000                     
    61                           ; Generated 25/07/2024 GMT
    62                           ; 
    63                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4550 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95   000FE0                     bsr             equ	4064
    96   000FE9                     fsr0            equ	4073
    97   000FEA                     fsr0h           equ	4074
    98   000FE9                     fsr0l           equ	4073
    99   000FE1                     fsr1            equ	4065
   100   000FE2                     fsr1h           equ	4066
   101   000FE1                     fsr1l           equ	4065
   102   000FD9                     fsr2            equ	4057
   103   000FDA                     fsr2h           equ	4058
   104   000FD9                     fsr2l           equ	4057
   105   000FEF                     indf0           equ	4079
   106   000FE7                     indf1           equ	4071
   107   000FDF                     indf2           equ	4063
   108   000FF2                     intcon          equ	4082
   109   000000                     nvmcon          equ	0
   110   000FF9                     pcl             equ	4089
   111   000FFA                     pclath          equ	4090
   112   000FFB                     pclatu          equ	4091
   113   000FEB                     plusw0          equ	4075
   114   000FE3                     plusw1          equ	4067
   115   000FDB                     plusw2          equ	4059
   116   000FED                     postdec0        equ	4077
   117   000FE5                     postdec1        equ	4069
   118   000FDD                     postdec2        equ	4061
   119   000FEE                     postinc0        equ	4078
   120   000FE6                     postinc1        equ	4070
   121   000FDE                     postinc2        equ	4062
   122   000FEC                     preinc0         equ	4076
   123   000FE4                     preinc1         equ	4068
   124   000FDC                     preinc2         equ	4060
   125   000FF3                     prod            equ	4083
   126   000FF4                     prodh           equ	4084
   127   000FF3                     prodl           equ	4083
   128   000FD8                     status          equ	4056
   129   000FF5                     tablat          equ	4085
   130   000FF6                     tblptr          equ	4086
   131   000FF7                     tblptrh         equ	4087
   132   000FF6                     tblptrl         equ	4086
   133   000FF8                     tblptru         equ	4088
   134   000FFD                     tosl            equ	4093
   135   000FE8                     wreg            equ	4072
   136   000F62                     SPPDATA         equ	3938	;# 
   137   000F63                     SPPCFG          equ	3939	;# 
   138   000F64                     SPPEPS          equ	3940	;# 
   139   000F65                     SPPCON          equ	3941	;# 
   140   000F66                     UFRM            equ	3942	;# 
   141   000F66                     UFRML           equ	3942	;# 
   142   000F67                     UFRMH           equ	3943	;# 
   143   000F68                     UIR             equ	3944	;# 
   144   000F69                     UIE             equ	3945	;# 
   145   000F6A                     UEIR            equ	3946	;# 
   146   000F6B                     UEIE            equ	3947	;# 
   147   000F6C                     USTAT           equ	3948	;# 
   148   000F6D                     UCON            equ	3949	;# 
   149   000F6E                     UADDR           equ	3950	;# 
   150   000F6F                     UCFG            equ	3951	;# 
   151   000F70                     UEP0            equ	3952	;# 
   152   000F71                     UEP1            equ	3953	;# 
   153   000F72                     UEP2            equ	3954	;# 
   154   000F73                     UEP3            equ	3955	;# 
   155   000F74                     UEP4            equ	3956	;# 
   156   000F75                     UEP5            equ	3957	;# 
   157   000F76                     UEP6            equ	3958	;# 
   158   000F77                     UEP7            equ	3959	;# 
   159   000F78                     UEP8            equ	3960	;# 
   160   000F79                     UEP9            equ	3961	;# 
   161   000F7A                     UEP10           equ	3962	;# 
   162   000F7B                     UEP11           equ	3963	;# 
   163   000F7C                     UEP12           equ	3964	;# 
   164   000F7D                     UEP13           equ	3965	;# 
   165   000F7E                     UEP14           equ	3966	;# 
   166   000F7F                     UEP15           equ	3967	;# 
   167   000F80                     PORTA           equ	3968	;# 
   168   000F81                     PORTB           equ	3969	;# 
   169   000F82                     PORTC           equ	3970	;# 
   170   000F83                     PORTD           equ	3971	;# 
   171   000F84                     PORTE           equ	3972	;# 
   172   000F89                     LATA            equ	3977	;# 
   173   000F8A                     LATB            equ	3978	;# 
   174   000F8B                     LATC            equ	3979	;# 
   175   000F8C                     LATD            equ	3980	;# 
   176   000F8D                     LATE            equ	3981	;# 
   177   000F92                     TRISA           equ	3986	;# 
   178   000F92                     DDRA            equ	3986	;# 
   179   000F93                     TRISB           equ	3987	;# 
   180   000F93                     DDRB            equ	3987	;# 
   181   000F94                     TRISC           equ	3988	;# 
   182   000F94                     DDRC            equ	3988	;# 
   183   000F95                     TRISD           equ	3989	;# 
   184   000F95                     DDRD            equ	3989	;# 
   185   000F96                     TRISE           equ	3990	;# 
   186   000F96                     DDRE            equ	3990	;# 
   187   000F9B                     OSCTUNE         equ	3995	;# 
   188   000F9D                     PIE1            equ	3997	;# 
   189   000F9E                     PIR1            equ	3998	;# 
   190   000F9F                     IPR1            equ	3999	;# 
   191   000FA0                     PIE2            equ	4000	;# 
   192   000FA1                     PIR2            equ	4001	;# 
   193   000FA2                     IPR2            equ	4002	;# 
   194   000FA6                     EECON1          equ	4006	;# 
   195   000FA7                     EECON2          equ	4007	;# 
   196   000FA8                     EEDATA          equ	4008	;# 
   197   000FA9                     EEADR           equ	4009	;# 
   198   000FAB                     RCSTA           equ	4011	;# 
   199   000FAB                     RCSTA1          equ	4011	;# 
   200   000FAC                     TXSTA           equ	4012	;# 
   201   000FAC                     TXSTA1          equ	4012	;# 
   202   000FAD                     TXREG           equ	4013	;# 
   203   000FAD                     TXREG1          equ	4013	;# 
   204   000FAE                     RCREG           equ	4014	;# 
   205   000FAE                     RCREG1          equ	4014	;# 
   206   000FAF                     SPBRG           equ	4015	;# 
   207   000FAF                     SPBRG1          equ	4015	;# 
   208   000FB0                     SPBRGH          equ	4016	;# 
   209   000FB1                     T3CON           equ	4017	;# 
   210   000FB2                     TMR3            equ	4018	;# 
   211   000FB2                     TMR3L           equ	4018	;# 
   212   000FB3                     TMR3H           equ	4019	;# 
   213   000FB4                     CMCON           equ	4020	;# 
   214   000FB5                     CVRCON          equ	4021	;# 
   215   000FB6                     ECCP1AS         equ	4022	;# 
   216   000FB6                     CCP1AS          equ	4022	;# 
   217   000FB7                     ECCP1DEL        equ	4023	;# 
   218   000FB7                     CCP1DEL         equ	4023	;# 
   219   000FB8                     BAUDCON         equ	4024	;# 
   220   000FB8                     BAUDCTL         equ	4024	;# 
   221   000FBA                     CCP2CON         equ	4026	;# 
   222   000FBB                     CCPR2           equ	4027	;# 
   223   000FBB                     CCPR2L          equ	4027	;# 
   224   000FBC                     CCPR2H          equ	4028	;# 
   225   000FBD                     CCP1CON         equ	4029	;# 
   226   000FBD                     ECCP1CON        equ	4029	;# 
   227   000FBE                     CCPR1           equ	4030	;# 
   228   000FBE                     CCPR1L          equ	4030	;# 
   229   000FBF                     CCPR1H          equ	4031	;# 
   230   000FC0                     ADCON2          equ	4032	;# 
   231   000FC1                     ADCON1          equ	4033	;# 
   232   000FC2                     ADCON0          equ	4034	;# 
   233   000FC3                     ADRES           equ	4035	;# 
   234   000FC3                     ADRESL          equ	4035	;# 
   235   000FC4                     ADRESH          equ	4036	;# 
   236   000FC5                     SSPCON2         equ	4037	;# 
   237   000FC6                     SSPCON1         equ	4038	;# 
   238   000FC7                     SSPSTAT         equ	4039	;# 
   239   000FC8                     SSPADD          equ	4040	;# 
   240   000FC9                     SSPBUF          equ	4041	;# 
   241   000FCA                     T2CON           equ	4042	;# 
   242   000FCB                     PR2             equ	4043	;# 
   243   000FCB                     MEMCON          equ	4043	;# 
   244   000FCC                     TMR2            equ	4044	;# 
   245   000FCD                     T1CON           equ	4045	;# 
   246   000FCE                     TMR1            equ	4046	;# 
   247   000FCE                     TMR1L           equ	4046	;# 
   248   000FCF                     TMR1H           equ	4047	;# 
   249   000FD0                     RCON            equ	4048	;# 
   250   000FD1                     WDTCON          equ	4049	;# 
   251   000FD2                     HLVDCON         equ	4050	;# 
   252   000FD2                     LVDCON          equ	4050	;# 
   253   000FD3                     OSCCON          equ	4051	;# 
   254   000FD5                     T0CON           equ	4053	;# 
   255   000FD6                     TMR0            equ	4054	;# 
   256   000FD6                     TMR0L           equ	4054	;# 
   257   000FD7                     TMR0H           equ	4055	;# 
   258   000FD8                     STATUS          equ	4056	;# 
   259   000FD9                     FSR2            equ	4057	;# 
   260   000FD9                     FSR2L           equ	4057	;# 
   261   000FDA                     FSR2H           equ	4058	;# 
   262   000FDB                     PLUSW2          equ	4059	;# 
   263   000FDC                     PREINC2         equ	4060	;# 
   264   000FDD                     POSTDEC2        equ	4061	;# 
   265   000FDE                     POSTINC2        equ	4062	;# 
   266   000FDF                     INDF2           equ	4063	;# 
   267   000FE0                     BSR             equ	4064	;# 
   268   000FE1                     FSR1            equ	4065	;# 
   269   000FE1                     FSR1L           equ	4065	;# 
   270   000FE2                     FSR1H           equ	4066	;# 
   271   000FE3                     PLUSW1          equ	4067	;# 
   272   000FE4                     PREINC1         equ	4068	;# 
   273   000FE5                     POSTDEC1        equ	4069	;# 
   274   000FE6                     POSTINC1        equ	4070	;# 
   275   000FE7                     INDF1           equ	4071	;# 
   276   000FE8                     WREG            equ	4072	;# 
   277   000FE9                     FSR0            equ	4073	;# 
   278   000FE9                     FSR0L           equ	4073	;# 
   279   000FEA                     FSR0H           equ	4074	;# 
   280   000FEB                     PLUSW0          equ	4075	;# 
   281   000FEC                     PREINC0         equ	4076	;# 
   282   000FED                     POSTDEC0        equ	4077	;# 
   283   000FEE                     POSTINC0        equ	4078	;# 
   284   000FEF                     INDF0           equ	4079	;# 
   285   000FF0                     INTCON3         equ	4080	;# 
   286   000FF1                     INTCON2         equ	4081	;# 
   287   000FF2                     INTCON          equ	4082	;# 
   288   000FF3                     PROD            equ	4083	;# 
   289   000FF3                     PRODL           equ	4083	;# 
   290   000FF4                     PRODH           equ	4084	;# 
   291   000FF5                     TABLAT          equ	4085	;# 
   292   000FF6                     TBLPTR          equ	4086	;# 
   293   000FF6                     TBLPTRL         equ	4086	;# 
   294   000FF7                     TBLPTRH         equ	4087	;# 
   295   000FF8                     TBLPTRU         equ	4088	;# 
   296   000FF9                     PCLAT           equ	4089	;# 
   297   000FF9                     PC              equ	4089	;# 
   298   000FF9                     PCL             equ	4089	;# 
   299   000FFA                     PCLATH          equ	4090	;# 
   300   000FFB                     PCLATU          equ	4091	;# 
   301   000FFC                     STKPTR          equ	4092	;# 
   302   000FFD                     TOS             equ	4093	;# 
   303   000FFD                     TOSL            equ	4093	;# 
   304   000FFE                     TOSH            equ	4094	;# 
   305   000FFF                     TOSU            equ	4095	;# 
   306                           
   307                           	psect	idataCOMRAM
   308   001BE0                     __pidataCOMRAM:
   309                           	callstack 0
   310                           
   311                           ;initializer for _FIN
   312   001BE0  36                 	db	low STR_2
   313                           
   314                           ;initializer for _aux
   315   001BE1  25                 	db	low STR_1
   316                           
   317                           ;initializer for _interfaz
   318   001BE2  08                 	db	8
   319                           
   320                           	psect	smallconst
   321   000800                     __psmallconst:
   322                           	callstack 0
   323   000800  00                 	db	0
   324   000801                     _banda2:
   325                           	callstack 0
   326   000801  00                 	db	0
   327   000802  00                 	db	0
   328   000803  00                 	db	0
   329   000804  00                 	db	0
   330   000805  00                 	db	0
   331   000806  1F                 	db	31
   332   000807  15                 	db	21
   333   000808  1F                 	db	31
   334   000809                     __end_of_banda2:
   335                           	callstack 0
   336   000809                     _banda1:
   337                           	callstack 0
   338   000809  00                 	db	0
   339   00080A  0E                 	db	14
   340   00080B  0A                 	db	10
   341   00080C  0E                 	db	14
   342   00080D  00                 	db	0
   343   00080E  1F                 	db	31
   344   00080F  15                 	db	21
   345   000810  1F                 	db	31
   346   000811                     __end_of_banda1:
   347                           	callstack 0
   348   007CF0                     _TMR1IF         set	31984
   349   007E68                     _TMR1ON         set	32360
   350   007C11                     _RC1            set	31761
   351   007C10                     _RC0            set	31760
   352   007D08                     _CCP2IF         set	32008
   353   007E11                     _GO             set	32273
   354   007D61                     _TRMT           set	32097
   355   007C0F                     _RB7            set	31759
   356   007C0E                     _RB6            set	31758
   357   007C0D                     _RB5            set	31757
   358   007C0C                     _RB4            set	31756
   359   007C4C                     _LATA4          set	31820
   360   007C49                     _LATA1          set	31817
   361   007C4A                     _LATA2          set	31818
   362   007E84                     _RI             set	32388
   363   007EAF                     _TMR0ON         set	32431
   364   007F97                     _GIE            set	32663
   365   007F95                     _TMR0IE         set	32661
   366   007F92                     _TMR0IF         set	32658
   367   007F93                     _RBIE           set	32659
   368   007F90                     _RBIF           set	32656
   369   007E52                     _TMR2ON         set	32338
   370   007F8F                     _RBPU           set	32655
   371   007CA2                     _TRISC2         set	31906
   372   007CA0                     _TRISC0         set	31904
   373   007C4D                     _LATA5          set	31821
   374   007C4B                     _LATA3          set	31819
   375   000FBB                     _CCPR2          set	4027
   376   000FCE                     _TMR1           set	4046
   377   000FD6                     _TMR0           set	4054
   378   000FBA                     _CCP2CON        set	4026
   379   000FC4                     _ADRESH         set	4036
   380   000FAD                     _TXREG          set	4013
   381   000F81                     _PORTB          set	3969
   382   000FD5                     _T0CON          set	4053
   383   000FCD                     _T1CON          set	4045
   384   000FBD                     _CCP1CON        set	4029
   385   000FBE                     _CCPR1L         set	4030
   386   000FCA                     _T2CON          set	4042
   387   000FCB                     _PR2            set	4043
   388   000FCC                     _TMR2           set	4044
   389   000FC0                     _ADCON2         set	4032
   390   000FC1                     _ADCON1         set	4033
   391   000FC2                     _ADCON0         set	4034
   392   000FAF                     _SPBRG          set	4015
   393   000FB8                     _BAUDCON        set	4024
   394   000FAB                     _RCSTA          set	4011
   395   000FAC                     _TXSTA          set	4012
   396   000F8D                     _LATE           set	3981
   397   000F8B                     _LATC           set	3979
   398   000F8A                     _LATB           set	3978
   399   000F89                     _LATA           set	3977
   400   000F96                     _TRISE          set	3990
   401   000F95                     _TRISD          set	3989
   402   000F93                     _TRISB          set	3987
   403   000F92                     _TRISA          set	3986
   404   000F8C                     _LATD           set	3980
   405   000811                     STR_8:
   406   000811  0D                 	db	13
   407   000812  44                 	db	68	;'D'
   408   000813  69                 	db	105	;'i'
   409   000814  73                 	db	115	;'s'
   410   000815  74                 	db	116	;'t'
   411   000816  61                 	db	97	;'a'
   412   000817  6E                 	db	110	;'n'
   413   000818  63                 	db	99	;'c'
   414   000819  69                 	db	105	;'i'
   415   00081A  61                 	db	97	;'a'
   416   00081B  20                 	db	32
   417   00081C  6F                 	db	111	;'o'
   418   00081D  62                 	db	98	;'b'
   419   00081E  6A                 	db	106	;'j'
   420   00081F  65                 	db	101	;'e'
   421   000820  74                 	db	116	;'t'
   422   000821  6F                 	db	111	;'o'
   423   000822  3A                 	db	58	;':'
   424   000823  20                 	db	32
   425   000824  00                 	db	0
   426   000825                     STR_1:
   427   000825  50                 	db	80	;'P'
   428   000826  69                 	db	105	;'i'
   429   000827  65                 	db	101	;'e'
   430   000828  7A                 	db	122	;'z'
   431   000829  61                 	db	97	;'a'
   432   00082A  73                 	db	115	;'s'
   433   00082B  20                 	db	32
   434   00082C  61                 	db	97	;'a'
   435   00082D  20                 	db	32
   436   00082E  63                 	db	99	;'c'
   437   00082F  6F                 	db	111	;'o'
   438   000830  6E                 	db	110	;'n'
   439   000831  74                 	db	116	;'t'
   440   000832  61                 	db	97	;'a'
   441   000833  72                 	db	114	;'r'
   442   000834  3A                 	db	58	;':'
   443   000835  00                 	db	0
   444   000836                     STR_2:
   445   000836  20                 	db	32
   446   000837  20                 	db	32
   447   000838  43                 	db	67	;'C'
   448   000839  4F                 	db	79	;'O'
   449   00083A  4D                 	db	77	;'M'
   450   00083B  50                 	db	80	;'P'
   451   00083C  4C                 	db	76	;'L'
   452   00083D  45                 	db	69	;'E'
   453   00083E  54                 	db	84	;'T'
   454   00083F  41                 	db	65	;'A'
   455   000840  53                 	db	83	;'S'
   456   000841  21                 	db	33
   457   000842  21                 	db	33
   458   000843  21                 	db	33
   459   000844  20                 	db	32
   460   000845  00                 	db	0
   461   000846                     STR_4:
   462   000846  56                 	db	86	;'V'
   463   000847  61                 	db	97	;'a'
   464   000848  6C                 	db	108	;'l'
   465   000849  6F                 	db	111	;'o'
   466   00084A  72                 	db	114	;'r'
   467   00084B  20                 	db	32
   468   00084C  6E                 	db	110	;'n'
   469   00084D  6F                 	db	111	;'o'
   470   00084E  20                 	db	32
   471   00084F  76                 	db	118	;'v'
   472   000850  61                 	db	97	;'a'
   473   000851  6C                 	db	108	;'l'
   474   000852  69                 	db	105	;'i'
   475   000853  64                 	db	100	;'d'
   476   000854  6F                 	db	111	;'o'
   477   000855  00                 	db	0
   478   000856                     STR_7:
   479   000856  56                 	db	86	;'V'
   480   000857  61                 	db	97	;'a'
   481   000858  6C                 	db	108	;'l'
   482   000859  6F                 	db	111	;'o'
   483   00085A  72                 	db	114	;'r'
   484   00085B  20                 	db	32
   485   00085C  64                 	db	100	;'d'
   486   00085D  65                 	db	101	;'e'
   487   00085E  20                 	db	32
   488   00085F  50                 	db	80	;'P'
   489   000860  57                 	db	87	;'W'
   490   000861  4D                 	db	77	;'M'
   491   000862  3A                 	db	58	;':'
   492   000863  20                 	db	32
   493   000864  00                 	db	0
   494   000865                     STR_9:
   495   000865  20                 	db	32
   496   000866  20                 	db	32
   497   000867  20                 	db	32
   498   000868  20                 	db	32
   499   000869  45                 	db	69	;'E'
   500   00086A  4D                 	db	77	;'M'
   501   00086B  45                 	db	69	;'E'
   502   00086C  52                 	db	82	;'R'
   503   00086D  47                 	db	71	;'G'
   504   00086E  45                 	db	69	;'E'
   505   00086F  4E                 	db	78	;'N'
   506   000870  43                 	db	67	;'C'
   507   000871  59                 	db	89	;'Y'
   508   000872  00                 	db	0
   509   000873                     STR_5:
   510   000873  46                 	db	70	;'F'
   511   000874  61                 	db	97	;'a'
   512   000875  6C                 	db	108	;'l'
   513   000876  74                 	db	116	;'t'
   514   000877  61                 	db	97	;'a'
   515   000878  6E                 	db	110	;'n'
   516   000879  74                 	db	116	;'t'
   517   00087A  65                 	db	101	;'e'
   518   00087B  73                 	db	115	;'s'
   519   00087C  20                 	db	32
   520   00087D  3A                 	db	58	;':'
   521   00087E  00                 	db	0
   522   00087F                     STR_6:
   523   00087F  4F                 	db	79	;'O'
   524   000880  62                 	db	98	;'b'
   525   000881  6A                 	db	106	;'j'
   526   000882  65                 	db	101	;'e'
   527   000883  74                 	db	116	;'t'
   528   000884  69                 	db	105	;'i'
   529   000885  76                 	db	118	;'v'
   530   000886  6F                 	db	111	;'o'
   531   000887  20                 	db	32
   532   000888  3A                 	db	58	;':'
   533   000889  00                 	db	0
   534   00088A                     STR_10:
   535   00088A  20                 	db	32
   536   00088B  20                 	db	32
   537   00088C  20                 	db	32
   538   00088D  20                 	db	32
   539   00088E  20                 	db	32
   540   00088F  20                 	db	32
   541   000890  53                 	db	83	;'S'
   542   000891  54                 	db	84	;'T'
   543   000892  4F                 	db	79	;'O'
   544   000893  50                 	db	80	;'P'
   545   000894  00                 	db	0
   546   000895                     STR_3:
   547   000895  42                 	db	66	;'B'
   548   000896  69                 	db	105	;'i'
   549   000897  65                 	db	101	;'e'
   550   000898  6E                 	db	110	;'n'
   551   000899  76                 	db	118	;'v'
   552   00089A  65                 	db	101	;'e'
   553   00089B  6E                 	db	110	;'n'
   554   00089C  69                 	db	105	;'i'
   555   00089D  64                 	db	100	;'d'
   556   00089E  61                 	db	97	;'a'
   557   00089F  00                 	db	0
   558   0008A0  00                 	db	0	; dummy byte at the end
   559   000002                     __activetblptr  equ	2
   560                           
   561                           ; #config settings
   562                           
   563                           	psect	cinit
   564   00196C                     __pcinit:
   565                           	callstack 0
   566   00196C                     start_initialization:
   567                           	callstack 0
   568   00196C                     __initialization:
   569                           	callstack 0
   570                           
   571                           ; Initialize objects allocated to COMRAM (3 bytes)
   572                           ; load TBLPTR registers with __pidataCOMRAM
   573   00196C  0EE0               	movlw	low __pidataCOMRAM
   574   00196E  6EF6               	movwf	tblptrl,c
   575   001970  0E1B               	movlw	high __pidataCOMRAM
   576   001972  6EF7               	movwf	tblptrh,c
   577   001974  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   578   001976  6EF8               	movwf	tblptru,c
   579   001978  0009               	tblrd		*+	;fetch initializer
   580   00197A  CFF5 F03C          	movff	tablat,__pdataCOMRAM
   581   00197E  0009               	tblrd		*+	;fetch initializer
   582   001980  CFF5 F03D          	movff	tablat,__pdataCOMRAM+1
   583   001984  0009               	tblrd		*+	;fetch initializer
   584   001986  CFF5 F03E          	movff	tablat,__pdataCOMRAM+2
   585                           
   586                           ; Clear objects allocated to COMRAM (18 bytes)
   587   00198A  EE00  F02A         	lfsr	0,__pbssCOMRAM
   588   00198E  0E12               	movlw	18
   589   001990                     clear_0:
   590   001990  6AEE               	clrf	postinc0,c
   591   001992  06E8               	decf	wreg,f,c
   592   001994  E1FD               	bnz	clear_0
   593   001996                     end_of_initialization:
   594                           	callstack 0
   595   001996                     __end_of__initialization:
   596                           	callstack 0
   597   001996  903F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   598   001998  923F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   599   00199A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   600   00199C  6EF8               	movwf	tblptru,c
   601   00199E  0100               	movlb	0
   602   0019A0  EF0A  F006         	goto	_main	;jump to C main() function
   603                           
   604                           	psect	bssCOMRAM
   605   00002A                     __pbssCOMRAM:
   606                           	callstack 0
   607   00002A                     _flagMotor:
   608                           	callstack 0
   609   00002A                     	ds	1
   610   00002B                     _Actual_sensor:
   611                           	callstack 0
   612   00002B                     	ds	1
   613   00002C                     _motorAntiguo:
   614                           	callstack 0
   615   00002C                     	ds	1
   616   00002D                     _motorActual:
   617                           	callstack 0
   618   00002D                     	ds	1
   619   00002E                     _objeto:
   620                           	callstack 0
   621   00002E                     	ds	1
   622   00002F                     _ctimeout:
   623                           	callstack 0
   624   00002F                     	ds	1
   625   000030                     _etimeout:
   626                           	callstack 0
   627   000030                     	ds	1
   628   000031                     _inactive:
   629                           	callstack 0
   630   000031                     	ds	1
   631   000032                     _contador:
   632                           	callstack 0
   633   000032                     	ds	1
   634   000033                     _emergency:
   635                           	callstack 0
   636   000033                     	ds	1
   637   000034                     _Iniciarpregunta:
   638                           	callstack 0
   639   000034                     	ds	1
   640   000035                     _ok:
   641                           	callstack 0
   642   000035                     	ds	1
   643   000036                     _block:
   644                           	callstack 0
   645   000036                     	ds	1
   646   000037                     _input:
   647                           	callstack 0
   648   000037                     	ds	1
   649   000038                     _contadas:
   650                           	callstack 0
   651   000038                     	ds	1
   652   000039                     _faltantes:
   653                           	callstack 0
   654   000039                     	ds	1
   655   00003A                     _objetivo:
   656                           	callstack 0
   657   00003A                     	ds	1
   658   00003B                     _Tecla:
   659                           	callstack 0
   660   00003B                     	ds	1
   661                           
   662                           	psect	dataCOMRAM
   663   00003C                     __pdataCOMRAM:
   664                           	callstack 0
   665   00003C                     _FIN:
   666                           	callstack 0
   667   00003C                     	ds	1
   668   00003D                     _aux:
   669                           	callstack 0
   670   00003D                     	ds	1
   671   00003E                     _interfaz:
   672                           	callstack 0
   673   00003E                     	ds	1
   674                           
   675                           	psect	cstackBANK0
   676   000060                     __pcstackBANK0:
   677                           	callstack 0
   678   000060                     EscribeLCD_n8@centena:
   679                           	callstack 0
   680   000060                     Bienvenida@max_pos:
   681                           	callstack 0
   682                           
   683                           ; 1 bytes @ 0x0
   684   000060                     	ds	1
   685   000061                     EscribeLCD_n8@decena:
   686                           	callstack 0
   687   000061                     Bienvenida@pos:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0x1
   691   000061                     	ds	1
   692   000062                     EscribeLCD_n8@unidad:
   693                           	callstack 0
   694                           
   695                           ; 1 bytes @ 0x2
   696   000062                     	ds	1
   697   000063                     EscribeLCD_n8@a:
   698                           	callstack 0
   699                           
   700                           ; 1 bytes @ 0x3
   701   000063                     	ds	1
   702   000064                     ??_main:
   703                           
   704                           ; 1 bytes @ 0x4
   705   000064                     	ds	2
   706   000066                     main@Antiguo_sensor:
   707                           	callstack 0
   708                           
   709                           ; 1 bytes @ 0x6
   710   000066                     	ds	1
   711                           
   712                           	psect	cstackCOMRAM
   713   000001                     __pcstackCOMRAM:
   714                           	callstack 0
   715   000001                     ?___awdiv:
   716                           	callstack 0
   717   000001                     ?___awmod:
   718                           	callstack 0
   719   000001                     ?i2___lwdiv:
   720                           	callstack 0
   721   000001                     ?___ftpack:
   722                           	callstack 0
   723   000001                     ?___fttol:
   724                           	callstack 0
   725   000001                     Transmitir@BufferT:
   726                           	callstack 0
   727   000001                     ConversionADC@canal:
   728                           	callstack 0
   729   000001                     i2___lbmod@divisor:
   730                           	callstack 0
   731   000001                     ___awdiv@dividend:
   732                           	callstack 0
   733   000001                     ___awmod@dividend:
   734                           	callstack 0
   735   000001                     i2___lwdiv@dividend:
   736                           	callstack 0
   737   000001                     ___ftpack@arg:
   738                           	callstack 0
   739   000001                     ___fttol@f1:
   740                           	callstack 0
   741   000001                     ??i2_RetardoLCD:
   742                           
   743                           ; 1 bytes @ 0x0
   744   000001                     	ds	1
   745   000002                     i2RetardoLCD@a:
   746                           	callstack 0
   747   000002                     i2___lbmod@dividend:
   748                           	callstack 0
   749   000002                     TransmitirVar@buffer:
   750                           	callstack 0
   751   000002                     
   752                           ; 1 bytes @ 0x1
   753   000002                     	ds	1
   754   000003                     i2___lbmod@counter:
   755                           	callstack 0
   756   000003                     ___awdiv@divisor:
   757                           	callstack 0
   758   000003                     ___awmod@divisor:
   759                           	callstack 0
   760   000003                     i2___lwdiv@divisor:
   761                           	callstack 0
   762   000003                     ??i2_EnviaDato:
   763                           
   764                           ; 1 bytes @ 0x2
   765   000003                     	ds	1
   766   000004                     ___ftpack@exp:
   767                           	callstack 0
   768   000004                     i2EnviaDato@a:
   769                           	callstack 0
   770   000004                     i2___lbmod@rem:
   771                           	callstack 0
   772   000004                     
   773                           ; 1 bytes @ 0x3
   774   000004                     	ds	1
   775   000005                     ___awdiv@counter:
   776                           	callstack 0
   777   000005                     ___awmod@counter:
   778                           	callstack 0
   779   000005                     ___ftpack@sign:
   780                           	callstack 0
   781   000005                     i2EscribeLCD_c@a:
   782                           	callstack 0
   783   000005                     i2DireccionaLCD@a:
   784                           	callstack 0
   785   000005                     i2___lbdiv@divisor:
   786                           	callstack 0
   787   000005                     i2___lwdiv@quotient:
   788                           	callstack 0
   789   000005                     ??___fttol:
   790   000005                     
   791                           ; 1 bytes @ 0x4
   792   000005                     	ds	1
   793   000006                     ___awdiv@sign:
   794                           	callstack 0
   795   000006                     ___awmod@sign:
   796                           	callstack 0
   797   000006                     i2___lbdiv@dividend:
   798                           	callstack 0
   799   000006                     ??___ftpack:
   800   000006                     
   801                           ; 1 bytes @ 0x5
   802   000006                     	ds	1
   803   000007                     i2___lbdiv@counter:
   804                           	callstack 0
   805   000007                     i2___lwdiv@counter:
   806                           	callstack 0
   807   000007                     ___awdiv@quotient:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x6
   811   000007                     	ds	1
   812   000008                     i2MedirDistancia@aux:
   813                           	callstack 0
   814   000008                     i2___lbdiv@quotient:
   815                           	callstack 0
   816   000008                     
   817                           ; 1 bytes @ 0x7
   818   000008                     	ds	1
   819   000009                     ?___awtoft:
   820                           	callstack 0
   821   000009                     i2EscribeLCD_n8@b:
   822                           	callstack 0
   823   000009                     numASCII@number:
   824                           	callstack 0
   825   000009                     ___awtoft@c:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x8
   829   000009                     	ds	1
   830   00000A                     ___fttol@sign1:
   831                           	callstack 0
   832   00000A                     i2EscribeLCD_n8@centena:
   833                           	callstack 0
   834   00000A                     
   835                           ; 1 bytes @ 0x9
   836   00000A                     	ds	1
   837   00000B                     i2EscribeLCD_n8@decena:
   838                           	callstack 0
   839   00000B                     numASCII@ascii_values:
   840                           	callstack 0
   841   00000B                     ___fttol@lval:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0xA
   845   00000B                     	ds	1
   846   00000C                     ___awtoft@sign:
   847                           	callstack 0
   848   00000C                     i2EscribeLCD_n8@unidad:
   849                           	callstack 0
   850   00000C                     
   851                           ; 1 bytes @ 0xB
   852   00000C                     	ds	1
   853   00000D                     i2EscribeLCD_n8@a:
   854                           	callstack 0
   855   00000D                     
   856                           ; 1 bytes @ 0xC
   857   00000D                     	ds	2
   858   00000F                     ___fttol@exp1:
   859                           	callstack 0
   860                           
   861                           ; 1 bytes @ 0xE
   862   00000F                     	ds	1
   863   000010                     ??_ISR:
   864                           
   865                           ; 1 bytes @ 0xF
   866   000010                     	ds	10
   867   00001A                     ISR@numAscii:
   868                           	callstack 0
   869   00001A                     ISR@d:
   870                           	callstack 0
   871                           
   872                           ; 3 bytes @ 0x19
   873   00001A                     	ds	3
   874   00001D                     ISR@valADC:
   875                           	callstack 0
   876                           
   877                           ; 1 bytes @ 0x1C
   878   00001D                     	ds	1
   879   00001E                     ISR@valPWM:
   880                           	callstack 0
   881                           
   882                           ; 2 bytes @ 0x1D
   883   00001E                     	ds	2
   884   000020                     ISR@dis:
   885                           	callstack 0
   886                           
   887                           ; 1 bytes @ 0x1F
   888   000020                     	ds	1
   889   000021                     ?___lwdiv:
   890                           	callstack 0
   891   000021                     ConfiguraLCD@a:
   892                           	callstack 0
   893   000021                     ___lbmod@divisor:
   894                           	callstack 0
   895   000021                     ___lwdiv@dividend:
   896                           	callstack 0
   897   000021                     ??_RetardoLCD:
   898   000021                     
   899                           ; 1 bytes @ 0x20
   900   000021                     	ds	1
   901   000022                     RetardoLCD@a:
   902                           	callstack 0
   903   000022                     ___lbmod@dividend:
   904                           	callstack 0
   905   000022                     
   906                           ; 1 bytes @ 0x21
   907   000022                     	ds	1
   908   000023                     ___lbmod@counter:
   909                           	callstack 0
   910   000023                     ___lwdiv@divisor:
   911                           	callstack 0
   912   000023                     ??_EnviaDato:
   913                           
   914                           ; 1 bytes @ 0x22
   915   000023                     	ds	1
   916   000024                     EnviaDato@a:
   917                           	callstack 0
   918   000024                     ___lbmod@rem:
   919                           	callstack 0
   920                           
   921                           ; 1 bytes @ 0x23
   922   000024                     	ds	1
   923   000025                     EscribeLCD_c@a:
   924                           	callstack 0
   925   000025                     DireccionaLCD@a:
   926                           	callstack 0
   927   000025                     CrearCaracter@data:
   928                           	callstack 0
   929   000025                     ___lbdiv@divisor:
   930                           	callstack 0
   931   000025                     ___lwdiv@counter:
   932                           	callstack 0
   933   000025                     
   934                           ; 1 bytes @ 0x24
   935   000025                     	ds	1
   936   000026                     MensajeLCD_Var@a:
   937                           	callstack 0
   938   000026                     ___lbdiv@dividend:
   939                           	callstack 0
   940   000026                     ___lwdiv@quotient:
   941                           	callstack 0
   942   000026                     ??_CrearCaracter:
   943   000026                     
   944                           ; 1 bytes @ 0x25
   945   000026                     	ds	1
   946   000027                     CrearCaracter@pos:
   947                           	callstack 0
   948   000027                     ___lbdiv@counter:
   949                           	callstack 0
   950   000027                     
   951                           ; 1 bytes @ 0x26
   952   000027                     	ds	1
   953   000028                     CrearCaracter@i:
   954                           	callstack 0
   955   000028                     MedirDistancia@aux:
   956                           	callstack 0
   957   000028                     ___lbdiv@quotient:
   958                           	callstack 0
   959   000028                     
   960                           ; 1 bytes @ 0x27
   961   000028                     	ds	1
   962   000029                     EscribeLCD_n8@b:
   963                           	callstack 0
   964   000029                     ??_Bienvenida:
   965                           
   966                           ; 1 bytes @ 0x28
   967   000029                     	ds	1
   968   00002A                     
   969                           ; 1 bytes @ 0x29
   970 ;;
   971 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   972 ;;
   973 ;; *************** function _main *****************
   974 ;; Defined at:
   975 ;;		line 67 in file "Lab6SIMU.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  Antiguo_sens    1    6[BANK0 ] unsigned char 
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   989 ;;      Params:         0       0       0       0       0       0       0       0       0
   990 ;;      Locals:         0       1       0       0       0       0       0       0       0
   991 ;;      Temps:          0       2       0       0       0       0       0       0       0
   992 ;;      Totals:         0       3       0       0       0       0       0       0       0
   993 ;;Total ram usage:        3 bytes
   994 ;; Hardware stack levels required when called: 9
   995 ;; This function calls:
   996 ;;		_Bienvenida
   997 ;;		_BorraLCD
   998 ;;		_ConfiguraLCD
   999 ;;		_DireccionaLCD
  1000 ;;		_Emergencia
  1001 ;;		_EscribeLCD_n8
  1002 ;;		_InicializaLCD
  1003 ;;		_MedirDistancia
  1004 ;;		_MensajeLCD_Var
  1005 ;;		_MostrarCursorLCD
  1006 ;;		_MostrarNumeros
  1007 ;;		_OcultarCursorLCD
  1008 ;;		___lbdiv
  1009 ;;		___lbmod
  1010 ;; This function is called by:
  1011 ;;		Startup code after reset
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           	psect	text0
  1016   000C14                     __ptext0:
  1017                           	callstack 0
  1018   000C14                     _main:
  1019                           	callstack 22
  1020                           
  1021                           ;Lab6SIMU.c: 70: TRISA = 0x01;
  1022                           
  1023                           ;incstack = 0
  1024   000C14  0E01               	movlw	1
  1025   000C16  6E92               	movwf	146,c	;volatile
  1026                           
  1027                           ;Lab6SIMU.c: 72: TRISB = 0b11110000;
  1028   000C18  0EF0               	movlw	240
  1029   000C1A  6E93               	movwf	147,c	;volatile
  1030                           
  1031                           ;Lab6SIMU.c: 73: TRISC0 = 0;
  1032   000C1C  9094               	bcf	3988,0,c	;volatile
  1033                           
  1034                           ;Lab6SIMU.c: 74: TRISC2=0;
  1035   000C1E  9494               	bcf	3988,2,c	;volatile
  1036                           
  1037                           ;Lab6SIMU.c: 76: TRISD = 0x00;
  1038   000C20  6A95               	clrf	149,c	;volatile
  1039                           
  1040                           ;Lab6SIMU.c: 77: TRISE = 0x00;
  1041   000C22  6A96               	clrf	150,c	;volatile
  1042                           
  1043                           ;Lab6SIMU.c: 80: LATA = 0b010000;
  1044   000C24  0E10               	movlw	16
  1045   000C26  6E89               	movwf	137,c	;volatile
  1046                           
  1047                           ;Lab6SIMU.c: 81: LATB = 0x00;
  1048   000C28  6A8A               	clrf	138,c	;volatile
  1049                           
  1050                           ;Lab6SIMU.c: 82: LATC = 0x00;
  1051   000C2A  6A8B               	clrf	139,c	;volatile
  1052                           
  1053                           ;Lab6SIMU.c: 83: LATD = 0x00;
  1054   000C2C  6A8C               	clrf	140,c	;volatile
  1055                           
  1056                           ;Lab6SIMU.c: 84: LATE = 0x00;
  1057   000C2E  6A8D               	clrf	141,c	;volatile
  1058                           
  1059                           ;Lab6SIMU.c: 85: RBPU=0;
  1060   000C30  9EF1               	bcf	4081,7,c	;volatile
  1061                           
  1062                           ;Lab6SIMU.c: 89: TXSTA = 0b00100100;
  1063   000C32  0E24               	movlw	36
  1064   000C34  6EAC               	movwf	172,c	;volatile
  1065                           
  1066                           ;Lab6SIMU.c: 90: RCSTA = 0b10010000;
  1067   000C36  0E90               	movlw	144
  1068   000C38  6EAB               	movwf	171,c	;volatile
  1069                           
  1070                           ;Lab6SIMU.c: 91: BAUDCON = 0b00001000;
  1071   000C3A  0E08               	movlw	8
  1072   000C3C  6EB8               	movwf	184,c	;volatile
  1073                           
  1074                           ;Lab6SIMU.c: 92: SPBRG = 25;
  1075   000C3E  0E19               	movlw	25
  1076   000C40  6EAF               	movwf	175,c	;volatile
  1077                           
  1078                           ;Lab6SIMU.c: 95: ADCON0=0b00000001;
  1079   000C42  0E01               	movlw	1
  1080   000C44  6EC2               	movwf	194,c	;volatile
  1081                           
  1082                           ;Lab6SIMU.c: 96: ADCON1=0b00001110;
  1083   000C46  0E0E               	movlw	14
  1084   000C48  6EC1               	movwf	193,c	;volatile
  1085                           
  1086                           ;Lab6SIMU.c: 97: ADCON2=0b00001000;
  1087   000C4A  0E08               	movlw	8
  1088   000C4C  6EC0               	movwf	192,c	;volatile
  1089                           
  1090                           ;Lab6SIMU.c: 100: TMR2=0;
  1091   000C4E  6ACC               	clrf	204,c	;volatile
  1092                           
  1093                           ;Lab6SIMU.c: 101: PR2=249;
  1094   000C50  0EF9               	movlw	249
  1095   000C52  6ECB               	movwf	203,c	;volatile
  1096                           
  1097                           ;Lab6SIMU.c: 102: T2CON=0b00000000;
  1098   000C54  6ACA               	clrf	202,c	;volatile
  1099                           
  1100                           ;Lab6SIMU.c: 103: CCPR1L=1;
  1101   000C56  0E01               	movlw	1
  1102   000C58  6EBE               	movwf	190,c	;volatile
  1103                           
  1104                           ;Lab6SIMU.c: 104: CCP1CON=0b00001100;
  1105   000C5A  0E0C               	movlw	12
  1106   000C5C  6EBD               	movwf	189,c	;volatile
  1107                           
  1108                           ;Lab6SIMU.c: 105: TMR2ON=1;
  1109   000C5E  84CA               	bsf	4042,2,c	;volatile
  1110                           
  1111                           ;Lab6SIMU.c: 109: T1CON=0b10000000;
  1112   000C60  0E80               	movlw	128
  1113   000C62  6ECD               	movwf	205,c	;volatile
  1114                           
  1115                           ;Lab6SIMU.c: 114: RBIF=0;
  1116   000C64  90F2               	bcf	4082,0,c	;volatile
  1117                           
  1118                           ;Lab6SIMU.c: 115: RBIE=1;
  1119   000C66  86F2               	bsf	4082,3,c	;volatile
  1120                           
  1121                           ;Lab6SIMU.c: 118: T0CON = 0b00000010;
  1122   000C68  0E02               	movlw	2
  1123   000C6A  6ED5               	movwf	213,c	;volatile
  1124                           
  1125                           ;Lab6SIMU.c: 120: TMR0 = 49911;
  1126   000C6C  0EC2               	movlw	194
  1127   000C6E  6ED7               	movwf	215,c	;volatile
  1128   000C70  0EF7               	movlw	247
  1129   000C72  6ED6               	movwf	214,c	;volatile
  1130                           
  1131                           ;Lab6SIMU.c: 123: TMR0IF = 0;
  1132   000C74  94F2               	bcf	4082,2,c	;volatile
  1133                           
  1134                           ;Lab6SIMU.c: 124: TMR0IE = 1;
  1135   000C76  8AF2               	bsf	4082,5,c	;volatile
  1136                           
  1137                           ;Lab6SIMU.c: 126: GIE=1;
  1138   000C78  8EF2               	bsf	4082,7,c	;volatile
  1139                           
  1140                           ;Lab6SIMU.c: 127: TMR0ON = 1;
  1141   000C7A  8ED5               	bsf	4053,7,c	;volatile
  1142                           
  1143                           ;Lab6SIMU.c: 131: ConfiguraLCD(4);
  1144   000C7C  0E04               	movlw	4
  1145   000C7E  EC86  F00D         	call	_ConfiguraLCD
  1146                           
  1147                           ;Lab6SIMU.c: 132: InicializaLCD();
  1148   000C82  ECE2  F009         	call	_InicializaLCD	;wreg free
  1149                           
  1150                           ;Lab6SIMU.c: 133: OcultarCursorLCD();
  1151   000C86  ECBE  F00D         	call	_OcultarCursorLCD	;wreg free
  1152                           
  1153                           ;Lab6SIMU.c: 137: if(RI == 1){
  1154   000C8A  A8D0               	btfss	4048,4,c	;volatile
  1155   000C8C  D018               	goto	l4216
  1156                           
  1157                           ;Lab6SIMU.c: 141: BorraLCD();
  1158   000C8E  ECD2  F00D         	call	_BorraLCD	;wreg free
  1159                           
  1160                           ;Lab6SIMU.c: 142: Bienvenida();
  1161   000C92  EC41  F007         	call	_Bienvenida	;wreg free
  1162                           
  1163                           ;Lab6SIMU.c: 143: contador = 0;
  1164   000C96  6A32               	clrf	_contador^0,c
  1165                           
  1166                           ;Lab6SIMU.c: 144: BorraLCD();
  1167   000C98  ECD2  F00D         	call	_BorraLCD	;wreg free
  1168                           
  1169                           ;Lab6SIMU.c: 145: MensajeLCD_Var("Bienvenida");
  1170   000C9C  0E95               	movlw	low STR_3
  1171   000C9E  6E26               	movwf	MensajeLCD_Var@a^0,c
  1172   000CA0  EC4E  F00D         	call	_MensajeLCD_Var	;wreg free
  1173                           
  1174                           ;Lab6SIMU.c: 147: _delay((unsigned long)((1000)*(1000000/4000.0)));
  1175   000CA4  0E02               	movlw	2
  1176   000CA6  0100               	movlb	0	; () banked
  1177   000CA8  6F65               	movwf	(??_main+1)& (0+255),b
  1178   000CAA  0E45               	movlw	69
  1179   000CAC  6F64               	movwf	??_main& (0+255),b
  1180   000CAE  0EA9               	movlw	169
  1181   000CB0                     u3657:
  1182   000CB0  2EE8               	decfsz	wreg,f,c
  1183   000CB2  D7FE               	bra	u3657
  1184   000CB4  2F64               	decfsz	??_main& (0+255),f,b
  1185   000CB6  D7FC               	bra	u3657
  1186   000CB8  2F65               	decfsz	(??_main+1)& (0+255),f,b
  1187   000CBA  D7FA               	bra	u3657
  1188   000CBC  D000               	nop2	
  1189   000CBE                     l4216:
  1190                           
  1191                           ;Lab6SIMU.c: 148: };Lab6SIMU.c: 151: if(RI == 0){
  1192   000CBE  B8D0               	btfsc	4048,4,c	;volatile
  1193   000CC0  D003               	goto	l4222
  1194                           
  1195                           ;Lab6SIMU.c: 153: LATE = 0b101;
  1196   000CC2  0E05               	movlw	5
  1197   000CC4  6E8D               	movwf	141,c	;volatile
  1198                           
  1199                           ;Lab6SIMU.c: 154: RI = 1;
  1200   000CC6  88D0               	bsf	4048,4,c	;volatile
  1201   000CC8                     l4222:
  1202                           
  1203                           ;Lab6SIMU.c: 164: input = 0;
  1204   000CC8  6A37               	clrf	_input^0,c
  1205                           
  1206                           ;Lab6SIMU.c: 165: objetivo = 0;
  1207   000CCA  6A3A               	clrf	_objetivo^0,c
  1208                           
  1209                           ;Lab6SIMU.c: 166: ok = 0;
  1210   000CCC  6A35               	clrf	_ok^0,c
  1211                           
  1212                           ;Lab6SIMU.c: 167: contador = 0;
  1213   000CCE  6A32               	clrf	_contador^0,c
  1214                           
  1215                           ;Lab6SIMU.c: 173: BorraLCD();
  1216   000CD0  ECD2  F00D         	call	_BorraLCD	;wreg free
  1217                           
  1218                           ;Lab6SIMU.c: 174: MostrarCursorLCD();
  1219   000CD4  ECC8  F00D         	call	_MostrarCursorLCD	;wreg free
  1220                           
  1221                           ;Lab6SIMU.c: 175: MensajeLCD_Var(*aux);
  1222   000CD8  C03D  F026         	movff	_aux,MensajeLCD_Var@a
  1223   000CDC  EC4E  F00D         	call	_MensajeLCD_Var	;wreg free
  1224                           
  1225                           ;Lab6SIMU.c: 177: DireccionaLCD(0xC0);
  1226   000CE0  0EC0               	movlw	192
  1227   000CE2  EC9D  F00D         	call	_DireccionaLCD
  1228                           
  1229                           ;Lab6SIMU.c: 178: Iniciarpregunta=1;
  1230   000CE6  0E01               	movlw	1
  1231   000CE8  6E34               	movwf	_Iniciarpregunta^0,c
  1232                           
  1233                           ;Lab6SIMU.c: 179: block = 0;
  1234   000CEA  6A36               	clrf	_block^0,c
  1235                           
  1236                           ;Lab6SIMU.c: 184: while(ok == 0){
  1237   000CEC  D004               	goto	l4246
  1238   000CEE                     l4242:
  1239                           
  1240                           ;Lab6SIMU.c: 185: if(emergency == 1) Emergencia();
  1241   000CEE  0433               	decf	_emergency^0,w,c
  1242   000CF0  B4D8               	btfsc	status,2,c
  1243   000CF2  EC25  F00D         	call	_Emergencia	;wreg free
  1244   000CF6                     l4246:
  1245   000CF6  5035               	movf	_ok^0,w,c
  1246   000CF8  B4D8               	btfsc	status,2,c
  1247   000CFA  D7F9               	goto	l4242
  1248                           
  1249                           ;Lab6SIMU.c: 188: };Lab6SIMU.c: 193: if(input < 2){
  1250   000CFC  0E02               	movlw	2
  1251   000CFE  6037               	cpfslt	_input^0,c
  1252   000D00  D007               	goto	l4254
  1253                           
  1254                           ;Lab6SIMU.c: 195: Tecla = 0;
  1255   000D02  6A3B               	clrf	_Tecla^0,c
  1256                           
  1257                           ;Lab6SIMU.c: 196: objetivo = objetivo/10;
  1258   000D04  0E0A               	movlw	10
  1259   000D06  6E25               	movwf	___lbdiv@divisor^0,c
  1260   000D08  503A               	movf	_objetivo^0,w,c
  1261   000D0A  ECD2  F00C         	call	___lbdiv
  1262   000D0E  6E3A               	movwf	_objetivo^0,c
  1263   000D10                     l4254:
  1264                           
  1265                           ;Lab6SIMU.c: 197: };Lab6SIMU.c: 198: input = 3;
  1266   000D10  0E03               	movlw	3
  1267   000D12  6E37               	movwf	_input^0,c
  1268                           
  1269                           ;Lab6SIMU.c: 201: if(objetivo > 59){
  1270   000D14  0E3B               	movlw	59
  1271   000D16  643A               	cpfsgt	_objetivo^0,c
  1272   000D18  D014               	goto	l4264
  1273                           
  1274                           ;Lab6SIMU.c: 202: BorraLCD();
  1275   000D1A  ECD2  F00D         	call	_BorraLCD	;wreg free
  1276                           
  1277                           ;Lab6SIMU.c: 203: MensajeLCD_Var("Valor no valido");
  1278   000D1E  0E46               	movlw	low STR_4
  1279   000D20  6E26               	movwf	MensajeLCD_Var@a^0,c
  1280   000D22  EC4E  F00D         	call	_MensajeLCD_Var	;wreg free
  1281                           
  1282                           ;Lab6SIMU.c: 204: _delay((unsigned long)((2000)*(1000000/4000.0)));
  1283   000D26  0E03               	movlw	3
  1284   000D28  0100               	movlb	0	; () banked
  1285   000D2A  6F65               	movwf	(??_main+1)& (0+255),b
  1286   000D2C  0E8A               	movlw	138
  1287   000D2E  6F64               	movwf	??_main& (0+255),b
  1288   000D30  0E55               	movlw	85
  1289   000D32                     u3667:
  1290   000D32  2EE8               	decfsz	wreg,f,c
  1291   000D34  D7FE               	bra	u3667
  1292   000D36  2F64               	decfsz	??_main& (0+255),f,b
  1293   000D38  D7FC               	bra	u3667
  1294   000D3A  2F65               	decfsz	(??_main+1)& (0+255),f,b
  1295   000D3C  D7FA               	bra	u3667
  1296   000D3E  D000               	nop2	
  1297   000D40  00FF               	reset		;# 
  1298   000D42                     l4264:
  1299                           
  1300                           ;Lab6SIMU.c: 206: };Lab6SIMU.c: 209: objetivo = objetivo + Tecla;
  1301   000D42  503A               	movf	_objetivo^0,w,c
  1302   000D44  243B               	addwf	_Tecla^0,w,c
  1303   000D46  6E3A               	movwf	_objetivo^0,c
  1304                           
  1305                           ;Lab6SIMU.c: 210: faltantes = objetivo;
  1306   000D48  C03A  F039         	movff	_objetivo,_faltantes
  1307                           
  1308                           ;Lab6SIMU.c: 211: contadas = objetivo - faltantes;
  1309   000D4C  5039               	movf	_faltantes^0,w,c
  1310   000D4E  5C3A               	subwf	_objetivo^0,w,c
  1311   000D50  6E38               	movwf	_contadas^0,c
  1312                           
  1313                           ;Lab6SIMU.c: 216: block = 1;
  1314   000D52  0E01               	movlw	1
  1315   000D54  6E36               	movwf	_block^0,c
  1316                           
  1317                           ;Lab6SIMU.c: 217: BorraLCD();
  1318   000D56  ECD2  F00D         	call	_BorraLCD	;wreg free
  1319                           
  1320                           ;Lab6SIMU.c: 218: MensajeLCD_Var("Faltantes :");
  1321   000D5A  0E73               	movlw	low STR_5
  1322   000D5C  6E26               	movwf	MensajeLCD_Var@a^0,c
  1323   000D5E  EC4E  F00D         	call	_MensajeLCD_Var	;wreg free
  1324                           
  1325                           ;Lab6SIMU.c: 219: EscribeLCD_n8(faltantes,2);
  1326   000D62  0E02               	movlw	2
  1327   000D64  6E29               	movwf	EscribeLCD_n8@b^0,c
  1328   000D66  5039               	movf	_faltantes^0,w,c
  1329   000D68  ECC6  F007         	call	_EscribeLCD_n8
  1330                           
  1331                           ;Lab6SIMU.c: 220: DireccionaLCD(0xC0);
  1332   000D6C  0EC0               	movlw	192
  1333   000D6E  EC9D  F00D         	call	_DireccionaLCD
  1334                           
  1335                           ;Lab6SIMU.c: 221: MensajeLCD_Var("Objetivo :");
  1336   000D72  0E7F               	movlw	low STR_6
  1337   000D74  6E26               	movwf	MensajeLCD_Var@a^0,c
  1338   000D76  EC4E  F00D         	call	_MensajeLCD_Var	;wreg free
  1339                           
  1340                           ;Lab6SIMU.c: 222: EscribeLCD_n8(objetivo,2);
  1341   000D7A  0E02               	movlw	2
  1342   000D7C  6E29               	movwf	EscribeLCD_n8@b^0,c
  1343   000D7E  503A               	movf	_objetivo^0,w,c
  1344   000D80  ECC6  F007         	call	_EscribeLCD_n8
  1345                           
  1346                           ;Lab6SIMU.c: 224: unsigned char Antiguo_sensor = 0;
  1347   000D84  0100               	movlb	0	; () banked
  1348   000D86  6B66               	clrf	main@Antiguo_sensor& (0+255),b
  1349   000D88                     l4286:
  1350                           
  1351                           ;Lab6SIMU.c: 228: if(emergency == 1){
  1352   000D88  0433               	decf	_emergency^0,w,c
  1353   000D8A  B4D8               	btfsc	status,2,c
  1354                           
  1355                           ;Lab6SIMU.c: 229: Emergencia();
  1356   000D8C  EC25  F00D         	call	_Emergencia	;wreg free
  1357                           
  1358                           ;Lab6SIMU.c: 230: };Lab6SIMU.c: 236: objeto = MedirDistancia();
  1359   000D90  EC71  F00A         	call	_MedirDistancia	;wreg free
  1360   000D94  6E2E               	movwf	_objeto^0,c
  1361                           
  1362                           ;Lab6SIMU.c: 237: _delay((unsigned long)((150)*(1000000/4000.0)));
  1363   000D96  0E31               	movlw	49
  1364   000D98  0100               	movlb	0	; () banked
  1365   000D9A  6F64               	movwf	??_main& (0+255),b
  1366   000D9C  0EB2               	movlw	178
  1367   000D9E                     u3677:
  1368   000D9E  2EE8               	decfsz	wreg,f,c
  1369   000DA0  D7FE               	bra	u3677
  1370   000DA2  2F64               	decfsz	??_main& (0+255),f,b
  1371   000DA4  D7FC               	bra	u3677
  1372   000DA6  0000               	nop	
  1373                           
  1374                           ;Lab6SIMU.c: 239: if(objeto < 8 && objeto >= 1){
  1375   000DA8  0E08               	movlw	8
  1376   000DAA  602E               	cpfslt	_objeto^0,c
  1377   000DAC  D006               	goto	l320
  1378   000DAE  502E               	movf	_objeto^0,w,c
  1379   000DB0  B4D8               	btfsc	status,2,c
  1380   000DB2  D003               	goto	l320
  1381                           
  1382                           ;Lab6SIMU.c: 240: Actual_sensor= objeto;
  1383   000DB4  C02E  F02B         	movff	_objeto,_Actual_sensor
  1384                           
  1385                           ;Lab6SIMU.c: 241: } else {
  1386   000DB8  D001               	goto	l4300
  1387   000DBA                     l320:
  1388                           
  1389                           ;Lab6SIMU.c: 242: Actual_sensor = 0;
  1390   000DBA  6A2B               	clrf	_Actual_sensor^0,c
  1391   000DBC                     l4300:
  1392                           
  1393                           ;Lab6SIMU.c: 243: };Lab6SIMU.c: 244: if( Actual_sensor != 0 && Antiguo_sensor == 0 && co
      +                          ntadas < objetivo){
  1394   000DBC  502B               	movf	_Actual_sensor^0,w,c
  1395   000DBE  B4D8               	btfsc	status,2,c
  1396   000DC0  D02C               	goto	l4326
  1397   000DC2  0100               	movlb	0	; () banked
  1398   000DC4  5166               	movf	main@Antiguo_sensor& (0+255),w,b
  1399   000DC6  A4D8               	btfss	status,2,c
  1400   000DC8  D028               	goto	l4326
  1401                           
  1402                           ; BSR set to: 0
  1403   000DCA  503A               	movf	_objetivo^0,w,c
  1404   000DCC  5C38               	subwf	_contadas^0,w,c
  1405   000DCE  B0D8               	btfsc	status,0,c
  1406   000DD0  D024               	goto	l4326
  1407                           
  1408                           ; BSR set to: 0
  1409                           ;Lab6SIMU.c: 249: contador = 0;
  1410   000DD2  6A32               	clrf	_contador^0,c
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;Lab6SIMU.c: 251: _delay((unsigned long)((100)*(1000000/4000.0)));
  1414   000DD4  0E21               	movlw	33
  1415   000DD6  0100               	movlb	0	; () banked
  1416   000DD8  6F64               	movwf	??_main& (0+255),b
  1417   000DDA  0E76               	movlw	118
  1418   000DDC                     u3687:
  1419   000DDC  2EE8               	decfsz	wreg,f,c
  1420   000DDE  D7FE               	bra	u3687
  1421   000DE0  2F64               	decfsz	??_main& (0+255),f,b
  1422   000DE2  D7FC               	bra	u3687
  1423   000DE4  0000               	nop	
  1424                           
  1425                           ;Lab6SIMU.c: 253: contadas++;
  1426   000DE6  2A38               	incf	_contadas^0,f,c
  1427                           
  1428                           ;Lab6SIMU.c: 254: faltantes--;
  1429   000DE8  0639               	decf	_faltantes^0,f,c
  1430                           
  1431                           ;Lab6SIMU.c: 256: if(contadas%10 == 0 && contadas != objetivo){
  1432   000DEA  0E0A               	movlw	10
  1433   000DEC  6E21               	movwf	___lbmod@divisor^0,c
  1434   000DEE  5038               	movf	_contadas^0,w,c
  1435   000DF0  EC3A  F00D         	call	___lbmod
  1436   000DF4  0900               	iorlw	0
  1437   000DF6  A4D8               	btfss	status,2,c
  1438   000DF8  D00E               	goto	l4324
  1439   000DFA  503A               	movf	_objetivo^0,w,c
  1440   000DFC  1838               	xorwf	_contadas^0,w,c
  1441   000DFE  B4D8               	btfsc	status,2,c
  1442   000E00  D00A               	goto	l4324
  1443                           
  1444                           ;Lab6SIMU.c: 259: LATA2 = 1;
  1445   000E02  8489               	bsf	3977,2,c	;volatile
  1446                           
  1447                           ;Lab6SIMU.c: 260: _delay((unsigned long)((500)*(1000000/4000.0)));
  1448   000E04  0EA3               	movlw	163
  1449   000E06  0100               	movlb	0	; () banked
  1450   000E08  6F64               	movwf	??_main& (0+255),b
  1451   000E0A  0E55               	movlw	85
  1452   000E0C                     u3697:
  1453   000E0C  2EE8               	decfsz	wreg,f,c
  1454   000E0E  D7FE               	bra	u3697
  1455   000E10  2F64               	decfsz	??_main& (0+255),f,b
  1456   000E12  D7FC               	bra	u3697
  1457                           
  1458                           ;Lab6SIMU.c: 261: LATA2 = 0;
  1459   000E14  9489               	bcf	3977,2,c	;volatile
  1460   000E16                     l4324:
  1461                           
  1462                           ;Lab6SIMU.c: 262: };Lab6SIMU.c: 263: MostrarNumeros();
  1463   000E16  EC9B  F00B         	call	_MostrarNumeros	;wreg free
  1464   000E1A                     l4326:
  1465                           
  1466                           ;Lab6SIMU.c: 264: };Lab6SIMU.c: 267: Antiguo_sensor = Actual_sensor;
  1467   000E1A  C02B  F066         	movff	_Actual_sensor,main@Antiguo_sensor
  1468                           
  1469                           ;Lab6SIMU.c: 272: OcultarCursorLCD();
  1470   000E1E  ECBE  F00D         	call	_OcultarCursorLCD	;wreg free
  1471                           
  1472                           ;Lab6SIMU.c: 273: DireccionaLCD(0x8B);
  1473   000E22  0E8B               	movlw	139
  1474   000E24  EC9D  F00D         	call	_DireccionaLCD
  1475                           
  1476                           ;Lab6SIMU.c: 276: EscribeLCD_n8(faltantes,2);
  1477   000E28  0E02               	movlw	2
  1478   000E2A  6E29               	movwf	EscribeLCD_n8@b^0,c
  1479   000E2C  5039               	movf	_faltantes^0,w,c
  1480   000E2E  ECC6  F007         	call	_EscribeLCD_n8
  1481                           
  1482                           ;Lab6SIMU.c: 281: if (contadas == objetivo) {
  1483   000E32  503A               	movf	_objetivo^0,w,c
  1484   000E34  1838               	xorwf	_contadas^0,w,c
  1485   000E36  A4D8               	btfss	status,2,c
  1486   000E38  D7A7               	goto	l4286
  1487                           
  1488                           ;Lab6SIMU.c: 282: LATA2 = 1;
  1489   000E3A  8489               	bsf	3977,2,c	;volatile
  1490                           
  1491                           ;Lab6SIMU.c: 283: BorraLCD();
  1492   000E3C  ECD2  F00D         	call	_BorraLCD	;wreg free
  1493                           
  1494                           ;Lab6SIMU.c: 284: MensajeLCD_Var(*FIN);
  1495   000E40  C03C  F026         	movff	_FIN,MensajeLCD_Var@a
  1496   000E44  EC4E  F00D         	call	_MensajeLCD_Var	;wreg free
  1497                           
  1498                           ;Lab6SIMU.c: 285: _delay((unsigned long)((1000)*(1000000/4000.0)));
  1499   000E48  0E02               	movlw	2
  1500   000E4A  0100               	movlb	0	; () banked
  1501   000E4C  6F65               	movwf	(??_main+1)& (0+255),b
  1502   000E4E  0E45               	movlw	69
  1503   000E50  6F64               	movwf	??_main& (0+255),b
  1504   000E52  0EA9               	movlw	169
  1505   000E54                     u3707:
  1506   000E54  2EE8               	decfsz	wreg,f,c
  1507   000E56  D7FE               	bra	u3707
  1508   000E58  2F64               	decfsz	??_main& (0+255),f,b
  1509   000E5A  D7FC               	bra	u3707
  1510   000E5C  2F65               	decfsz	(??_main+1)& (0+255),f,b
  1511   000E5E  D7FA               	bra	u3707
  1512   000E60  D000               	nop2	
  1513                           
  1514                           ;Lab6SIMU.c: 286: LATA2 = 0;
  1515   000E62  9489               	bcf	3977,2,c	;volatile
  1516                           
  1517                           ;Lab6SIMU.c: 288: };Lab6SIMU.c: 289: };Lab6SIMU.c: 296: ok = 0;
  1518                           
  1519                           ;Lab6SIMU.c: 287: break;
  1520   000E64  6A35               	clrf	_ok^0,c
  1521   000E66                     l4346:
  1522                           
  1523                           ;Lab6SIMU.c: 300: if(emergency == 1){
  1524   000E66  0433               	decf	_emergency^0,w,c
  1525   000E68  B4D8               	btfsc	status,2,c
  1526                           
  1527                           ;Lab6SIMU.c: 301: Emergencia();
  1528   000E6A  EC25  F00D         	call	_Emergencia	;wreg free
  1529                           
  1530                           ;Lab6SIMU.c: 302: };Lab6SIMU.c: 304: if(ok > 0){
  1531   000E6E  5035               	movf	_ok^0,w,c
  1532   000E70  B4D8               	btfsc	status,2,c
  1533   000E72  D7F9               	goto	l4346
  1534                           
  1535                           ;Lab6SIMU.c: 305: ok = 0;
  1536   000E74  6A35               	clrf	_ok^0,c
  1537                           
  1538                           ;Lab6SIMU.c: 306: objetivo = 0;
  1539   000E76  6A3A               	clrf	_objetivo^0,c
  1540                           
  1541                           ;Lab6SIMU.c: 307: contadas = 0;
  1542   000E78  6A38               	clrf	_contadas^0,c
  1543                           
  1544                           ;Lab6SIMU.c: 308: input =0;
  1545   000E7A  6A37               	clrf	_input^0,c
  1546                           
  1547                           ;Lab6SIMU.c: 309: MostrarNumeros();
  1548   000E7C  EC9B  F00B         	call	_MostrarNumeros	;wreg free
  1549                           
  1550                           ;Lab6SIMU.c: 310: break;
  1551   000E80  D723               	goto	l4222
  1552   000E82                     __end_of_main:
  1553                           	callstack 0
  1554                           
  1555 ;; *************** function _MostrarNumeros *****************
  1556 ;; Defined at:
  1557 ;;		line 572 in file "Lab6SIMU.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;		None
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;		None
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  1    wreg      void 
  1564 ;; Registers used:
  1565 ;;		wreg, status,2, status,0, cstack
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1571 ;;      Params:         0       0       0       0       0       0       0       0       0
  1572 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1573 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1574 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1575 ;;Total ram usage:        0 bytes
  1576 ;; Hardware stack levels used: 1
  1577 ;; Hardware stack levels required when called: 5
  1578 ;; This function calls:
  1579 ;;		___lbmod
  1580 ;; This function is called by:
  1581 ;;		_main
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           	psect	text1
  1586   001736                     __ptext1:
  1587                           	callstack 0
  1588   001736                     _MostrarNumeros:
  1589                           	callstack 25
  1590                           
  1591                           ;Lab6SIMU.c: 575: LATD = contadas % 10;
  1592                           
  1593                           ;incstack = 0
  1594   001736  0E0A               	movlw	10
  1595   001738  6E21               	movwf	___lbmod@divisor^0,c
  1596   00173A  5038               	movf	_contadas^0,w,c
  1597   00173C  EC3A  F00D         	call	___lbmod
  1598   001740  6E8C               	movwf	140,c	;volatile
  1599                           
  1600                           ;Lab6SIMU.c: 578: if(contadas<10){
  1601   001742  0E0A               	movlw	10
  1602   001744  6038               	cpfslt	_contadas^0,c
  1603   001746  D003               	goto	l4138
  1604                           
  1605                           ;Lab6SIMU.c: 580: LATE = 0b101;
  1606   001748  0E05               	movlw	5
  1607   00174A  6E8D               	movwf	141,c	;volatile
  1608                           
  1609                           ;Lab6SIMU.c: 581: } else if(contadas<20){
  1610   00174C  0012               	return	
  1611   00174E                     l4138:
  1612   00174E  0E14               	movlw	20
  1613   001750  6038               	cpfslt	_contadas^0,c
  1614   001752  D003               	goto	l4142
  1615                           
  1616                           ;Lab6SIMU.c: 583: LATE=0b100;
  1617   001754  0E04               	movlw	4
  1618   001756  6E8D               	movwf	141,c	;volatile
  1619                           
  1620                           ;Lab6SIMU.c: 584: } else if (contadas<30){
  1621   001758  0012               	return	
  1622   00175A                     l4142:
  1623   00175A  0E1E               	movlw	30
  1624   00175C  6038               	cpfslt	_contadas^0,c
  1625   00175E  D003               	goto	l4146
  1626                           
  1627                           ;Lab6SIMU.c: 586: LATE=0b110;
  1628   001760  0E06               	movlw	6
  1629   001762  6E8D               	movwf	141,c	;volatile
  1630                           
  1631                           ;Lab6SIMU.c: 587: } else if (contadas<40){
  1632   001764  0012               	return	
  1633   001766                     l4146:
  1634   001766  0E28               	movlw	40
  1635   001768  6038               	cpfslt	_contadas^0,c
  1636   00176A  D003               	goto	l4150
  1637                           
  1638                           ;Lab6SIMU.c: 589: LATE=0b010;
  1639   00176C  0E02               	movlw	2
  1640   00176E  6E8D               	movwf	141,c	;volatile
  1641                           
  1642                           ;Lab6SIMU.c: 590: } else if (contadas<50){
  1643   001770  0012               	return	
  1644   001772                     l4150:
  1645   001772  0E32               	movlw	50
  1646   001774  6038               	cpfslt	_contadas^0,c
  1647   001776  D003               	goto	l4154
  1648                           
  1649                           ;Lab6SIMU.c: 592: LATE = 0b011;
  1650   001778  0E03               	movlw	3
  1651   00177A  6E8D               	movwf	141,c	;volatile
  1652                           
  1653                           ;Lab6SIMU.c: 593: } else if (contadas<60){
  1654   00177C  0012               	return	
  1655   00177E                     l4154:
  1656   00177E  0E3C               	movlw	60
  1657   001780  6038               	cpfslt	_contadas^0,c
  1658   001782  0012               	return	
  1659                           
  1660                           ;Lab6SIMU.c: 595: LATE = 0b111;
  1661   001784  0E07               	movlw	7
  1662   001786  6E8D               	movwf	141,c	;volatile
  1663   001788  0012               	return	
  1664   00178A                     __end_of_MostrarNumeros:
  1665                           	callstack 0
  1666                           
  1667 ;; *************** function _MedirDistancia *****************
  1668 ;; Defined at:
  1669 ;;		line 702 in file "Lab6SIMU.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;		None
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  aux             1   39[COMRAM] unsigned char 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      unsigned char 
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1683 ;;      Params:         0       0       0       0       0       0       0       0       0
  1684 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1685 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1686 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1687 ;;Total ram usage:        1 bytes
  1688 ;; Hardware stack levels used: 1
  1689 ;; Hardware stack levels required when called: 5
  1690 ;; This function calls:
  1691 ;;		___lwdiv
  1692 ;; This function is called by:
  1693 ;;		_main
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text2
  1698   0014E2                     __ptext2:
  1699                           	callstack 0
  1700   0014E2                     _MedirDistancia:
  1701                           	callstack 25
  1702                           
  1703                           ;Lab6SIMU.c: 704: CCP2CON=0b00000100;
  1704                           
  1705                           ;incstack = 0
  1706   0014E2  0E04               	movlw	4
  1707   0014E4  6EBA               	movwf	186,c	;volatile
  1708                           
  1709                           ;Lab6SIMU.c: 705: TMR1=0;
  1710   0014E6  0E00               	movlw	0
  1711   0014E8  6ECF               	movwf	207,c	;volatile
  1712   0014EA  0E00               	movlw	0
  1713   0014EC  6ECE               	movwf	206,c	;volatile
  1714                           
  1715                           ;Lab6SIMU.c: 706: CCP2IF=0;
  1716   0014EE  90A1               	bcf	4001,0,c	;volatile
  1717                           
  1718                           ;Lab6SIMU.c: 707: RC0=1;
  1719   0014F0  8082               	bsf	3970,0,c	;volatile
  1720                           
  1721                           ;Lab6SIMU.c: 708: _delay((unsigned long)((10)*(1000000/4000000.0)));
  1722   0014F2  D000               	nop2		;2 cycle nop
  1723                           
  1724                           ;Lab6SIMU.c: 709: RC0=0;
  1725   0014F4  9082               	bcf	3970,0,c	;volatile
  1726                           
  1727                           ;Lab6SIMU.c: 710: etimeout=1;
  1728   0014F6  0E01               	movlw	1
  1729   0014F8  6E30               	movwf	_etimeout^0,c
  1730   0014FA                     l463:
  1731   0014FA  B282               	btfsc	3970,1,c	;volatile
  1732   0014FC  D003               	goto	u3360
  1733   0014FE  0430               	decf	_etimeout^0,w,c
  1734   001500  B4D8               	btfsc	status,2,c
  1735   001502  D7FB               	goto	l463
  1736   001504                     u3360:
  1737                           
  1738                           ;Lab6SIMU.c: 713: if(etimeout==0){
  1739   001504  5030               	movf	_etimeout^0,w,c
  1740   001506  A4D8               	btfss	status,2,c
  1741   001508  D002               	goto	l468
  1742                           
  1743                           ;Lab6SIMU.c: 714: return 0;
  1744   00150A  0E00               	movlw	0
  1745   00150C  0012               	return	
  1746   00150E                     l468:
  1747                           
  1748                           ;Lab6SIMU.c: 715: };Lab6SIMU.c: 716: TMR1ON=1;
  1749   00150E  80CD               	bsf	4045,0,c	;volatile
  1750   001510                     l470:
  1751   001510  B0A1               	btfsc	4001,0,c	;volatile
  1752   001512  D002               	goto	u3390
  1753   001514  A09E               	btfss	3998,0,c	;volatile
  1754   001516  D7FC               	goto	l470
  1755   001518                     u3390:
  1756                           
  1757                           ;Lab6SIMU.c: 718: TMR1ON=0;
  1758   001518  90CD               	bcf	4045,0,c	;volatile
  1759                           
  1760                           ;Lab6SIMU.c: 719: if(TMR1IF==1)
  1761   00151A  A09E               	btfss	3998,0,c	;volatile
  1762   00151C  D002               	goto	l4122
  1763                           
  1764                           ;Lab6SIMU.c: 720: aux=255;
  1765   00151E  6828               	setf	MedirDistancia@aux^0,c
  1766   001520  D016               	goto	l4128
  1767   001522                     l4122:
  1768                           
  1769                           ;Lab6SIMU.c: 721: else{;Lab6SIMU.c: 722: if(CCPR2>=3556)
  1770   001522  0EE4               	movlw	228
  1771   001524  5CBB               	subwf	187,w,c	;volatile
  1772   001526  0E0D               	movlw	13
  1773   001528  58BC               	subwfb	188,w,c	;volatile
  1774   00152A  A0D8               	btfss	status,0,c
  1775   00152C  D004               	goto	l4126
  1776                           
  1777                           ;Lab6SIMU.c: 723: CCPR2=3556;
  1778   00152E  0E0D               	movlw	13
  1779   001530  6EBC               	movwf	188,c	;volatile
  1780   001532  0EE4               	movlw	228
  1781   001534  6EBB               	movwf	187,c	;volatile
  1782   001536                     l4126:
  1783                           
  1784                           ;Lab6SIMU.c: 724: aux=CCPR2/(14) ;
  1785   001536  CFBB F021          	movff	4027,___lwdiv@dividend	;volatile
  1786   00153A  CFBC F022          	movff	4028,___lwdiv@dividend+1	;volatile
  1787   00153E  0E00               	movlw	0
  1788   001540  6E24               	movwf	(___lwdiv@divisor+1)^0,c
  1789   001542  0E0E               	movlw	14
  1790   001544  6E23               	movwf	___lwdiv@divisor^0,c
  1791   001546  ECEF  F00B         	call	___lwdiv	;wreg free
  1792   00154A  5021               	movf	?___lwdiv^0,w,c
  1793   00154C  6E28               	movwf	MedirDistancia@aux^0,c
  1794   00154E                     l4128:
  1795                           
  1796                           ;Lab6SIMU.c: 725: };Lab6SIMU.c: 727: return aux;
  1797   00154E  5028               	movf	MedirDistancia@aux^0,w,c
  1798   001550  0012               	return		;funcret
  1799   001552                     __end_of_MedirDistancia:
  1800                           	callstack 0
  1801                           
  1802 ;; *************** function ___lwdiv *****************
  1803 ;; Defined at:
  1804 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lwdiv.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;  dividend        2   32[COMRAM] unsigned int 
  1807 ;;  divisor         2   34[COMRAM] unsigned int 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;  quotient        2   37[COMRAM] unsigned int 
  1810 ;;  counter         1   36[COMRAM] unsigned char 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  2   32[COMRAM] unsigned int 
  1813 ;; Registers used:
  1814 ;;		wreg, status,2, status,0
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1820 ;;      Params:         4       0       0       0       0       0       0       0       0
  1821 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1822 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1823 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1824 ;;Total ram usage:        7 bytes
  1825 ;; Hardware stack levels used: 1
  1826 ;; Hardware stack levels required when called: 4
  1827 ;; This function calls:
  1828 ;;		Nothing
  1829 ;; This function is called by:
  1830 ;;		_MedirDistancia
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text3
  1835   0017DE                     __ptext3:
  1836                           	callstack 0
  1837   0017DE                     ___lwdiv:
  1838                           	callstack 25
  1839                           
  1840                           ;incstack = 0
  1841   0017DE  0E00               	movlw	0
  1842   0017E0  6E27               	movwf	(___lwdiv@quotient+1)^0,c
  1843   0017E2  0E00               	movlw	0
  1844   0017E4  6E26               	movwf	___lwdiv@quotient^0,c
  1845   0017E6  5023               	movf	___lwdiv@divisor^0,w,c
  1846   0017E8  1024               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1847   0017EA  B4D8               	btfsc	status,2,c
  1848   0017EC  D01C               	goto	l978
  1849   0017EE  0E01               	movlw	1
  1850   0017F0  6E25               	movwf	___lwdiv@counter^0,c
  1851   0017F2  D004               	goto	l3974
  1852   0017F4                     l3972:
  1853   0017F4  90D8               	bcf	status,0,c
  1854   0017F6  3623               	rlcf	___lwdiv@divisor^0,f,c
  1855   0017F8  3624               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1856   0017FA  2A25               	incf	___lwdiv@counter^0,f,c
  1857   0017FC                     l3974:
  1858   0017FC  AE24               	btfss	(___lwdiv@divisor+1)^0,7,c
  1859   0017FE  D7FA               	goto	l3972
  1860   001800                     u3300:
  1861   001800  90D8               	bcf	status,0,c
  1862   001802  3626               	rlcf	___lwdiv@quotient^0,f,c
  1863   001804  3627               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1864   001806  5023               	movf	___lwdiv@divisor^0,w,c
  1865   001808  5C21               	subwf	___lwdiv@dividend^0,w,c
  1866   00180A  5024               	movf	(___lwdiv@divisor+1)^0,w,c
  1867   00180C  5822               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1868   00180E  A0D8               	btfss	status,0,c
  1869   001810  D005               	goto	l3984
  1870   001812  5023               	movf	___lwdiv@divisor^0,w,c
  1871   001814  5E21               	subwf	___lwdiv@dividend^0,f,c
  1872   001816  5024               	movf	(___lwdiv@divisor+1)^0,w,c
  1873   001818  5A22               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1874   00181A  8026               	bsf	___lwdiv@quotient^0,0,c
  1875   00181C                     l3984:
  1876   00181C  90D8               	bcf	status,0,c
  1877   00181E  3224               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1878   001820  3223               	rrcf	___lwdiv@divisor^0,f,c
  1879   001822  2E25               	decfsz	___lwdiv@counter^0,f,c
  1880   001824  D7ED               	goto	u3300
  1881   001826                     l978:
  1882   001826  C026  F021         	movff	___lwdiv@quotient,?___lwdiv
  1883   00182A  C027  F022         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1884   00182E  0012               	return		;funcret
  1885   001830                     __end_of___lwdiv:
  1886                           	callstack 0
  1887                           
  1888 ;; *************** function _EscribeLCD_n8 *****************
  1889 ;; Defined at:
  1890 ;;		line 149 in file "LibLCDXC8.h"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  a               1    wreg     unsigned char 
  1893 ;;  b               1   40[COMRAM] unsigned char 
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;  a               1    3[BANK0 ] unsigned char 
  1896 ;;  unidad          1    2[BANK0 ] unsigned char 
  1897 ;;  decena          1    1[BANK0 ] unsigned char 
  1898 ;;  centena         1    0[BANK0 ] unsigned char 
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  1    wreg      void 
  1901 ;; Registers used:
  1902 ;;		wreg, status,2, status,0, cstack
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1908 ;;      Params:         1       0       0       0       0       0       0       0       0
  1909 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1910 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1911 ;;      Totals:         1       4       0       0       0       0       0       0       0
  1912 ;;Total ram usage:        5 bytes
  1913 ;; Hardware stack levels used: 1
  1914 ;; Hardware stack levels required when called: 6
  1915 ;; This function calls:
  1916 ;;		_EnviaDato
  1917 ;;		_HabilitaLCD
  1918 ;;		_RetardoLCD
  1919 ;;		___lbdiv
  1920 ;;		___lbmod
  1921 ;; This function is called by:
  1922 ;;		_main
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           	psect	text4
  1927   000F8C                     __ptext4:
  1928                           	callstack 0
  1929   000F8C                     _EscribeLCD_n8:
  1930                           	callstack 24
  1931                           
  1932                           ;incstack = 0
  1933                           ;EscribeLCD_n8@a stored from wreg
  1934   000F8C  0100               	movlb	0	; () banked
  1935   000F8E  6F63               	movwf	EscribeLCD_n8@a& (0+255),b
  1936                           
  1937                           ;LibLCDXC8.h: 154: unsigned char centena,decena,unidad;;LibLCDXC8.h: 155: LATA3=1;
  1938   000F90  8689               	bsf	3977,3,c	;volatile
  1939                           
  1940                           ;LibLCDXC8.h: 156: switch(b){
  1941   000F92  D071               	goto	l4022
  1942   000F94                     l3990:
  1943   000F94  0E0A               	movlw	10
  1944   000F96  6E21               	movwf	___lbmod@divisor^0,c
  1945   000F98  0100               	movlb	0	; () banked
  1946   000F9A  5163               	movf	EscribeLCD_n8@a& (0+255),w,b
  1947   000F9C  EC3A  F00D         	call	___lbmod
  1948   000FA0  0100               	movlb	0	; () banked
  1949   000FA2  6F62               	movwf	EscribeLCD_n8@unidad& (0+255),b
  1950                           
  1951                           ;LibLCDXC8.h: 158: EnviaDato(unidad+48);
  1952   000FA4  5162               	movf	EscribeLCD_n8@unidad& (0+255),w,b
  1953   000FA6  0F30               	addlw	48
  1954   000FA8  EC6A  F00C         	call	_EnviaDato
  1955                           
  1956                           ;LibLCDXC8.h: 159: HabilitaLCD();
  1957   000FAC  ECDC  F00D         	call	_HabilitaLCD	;wreg free
  1958                           
  1959                           ;LibLCDXC8.h: 160: RetardoLCD(4);
  1960   000FB0  0E04               	movlw	4
  1961   000FB2  EC45  F00B         	call	_RetardoLCD
  1962                           
  1963                           ;LibLCDXC8.h: 161: break;
  1964   000FB6  0012               	return	
  1965   000FB8                     l3996:
  1966   000FB8  0E0A               	movlw	10
  1967   000FBA  6E25               	movwf	___lbdiv@divisor^0,c
  1968   000FBC  0E64               	movlw	100
  1969   000FBE  6E21               	movwf	___lbmod@divisor^0,c
  1970   000FC0  0100               	movlb	0	; () banked
  1971   000FC2  5163               	movf	EscribeLCD_n8@a& (0+255),w,b
  1972   000FC4  EC3A  F00D         	call	___lbmod
  1973   000FC8  ECD2  F00C         	call	___lbdiv
  1974   000FCC  0100               	movlb	0	; () banked
  1975   000FCE  6F61               	movwf	EscribeLCD_n8@decena& (0+255),b
  1976                           
  1977                           ;LibLCDXC8.h: 163: unidad=a%10;
  1978   000FD0  0E0A               	movlw	10
  1979   000FD2  6E21               	movwf	___lbmod@divisor^0,c
  1980   000FD4  5163               	movf	EscribeLCD_n8@a& (0+255),w,b
  1981   000FD6  EC3A  F00D         	call	___lbmod
  1982   000FDA  0100               	movlb	0	; () banked
  1983   000FDC  6F62               	movwf	EscribeLCD_n8@unidad& (0+255),b
  1984                           
  1985                           ;LibLCDXC8.h: 164: EnviaDato(decena+48);
  1986   000FDE  5161               	movf	EscribeLCD_n8@decena& (0+255),w,b
  1987   000FE0  0F30               	addlw	48
  1988   000FE2  EC6A  F00C         	call	_EnviaDato
  1989                           
  1990                           ;LibLCDXC8.h: 165: HabilitaLCD();
  1991   000FE6  ECDC  F00D         	call	_HabilitaLCD	;wreg free
  1992                           
  1993                           ;LibLCDXC8.h: 166: RetardoLCD(4);
  1994   000FEA  0E04               	movlw	4
  1995   000FEC  EC45  F00B         	call	_RetardoLCD
  1996                           
  1997                           ;LibLCDXC8.h: 167: EnviaDato(unidad+48);
  1998   000FF0  0100               	movlb	0	; () banked
  1999   000FF2  5162               	movf	EscribeLCD_n8@unidad& (0+255),w,b
  2000   000FF4  0F30               	addlw	48
  2001   000FF6  EC6A  F00C         	call	_EnviaDato
  2002                           
  2003                           ;LibLCDXC8.h: 168: HabilitaLCD();
  2004   000FFA  ECDC  F00D         	call	_HabilitaLCD	;wreg free
  2005                           
  2006                           ;LibLCDXC8.h: 169: RetardoLCD(4);
  2007   000FFE  0E04               	movlw	4
  2008   001000  EC45  F00B         	call	_RetardoLCD
  2009                           
  2010                           ;LibLCDXC8.h: 170: break;
  2011   001004  0012               	return	
  2012   001006                     l4006:
  2013   001006  0E64               	movlw	100
  2014   001008  6E25               	movwf	___lbdiv@divisor^0,c
  2015   00100A  0100               	movlb	0	; () banked
  2016   00100C  5163               	movf	EscribeLCD_n8@a& (0+255),w,b
  2017   00100E  ECD2  F00C         	call	___lbdiv
  2018   001012  0100               	movlb	0	; () banked
  2019   001014  6F60               	movwf	EscribeLCD_n8@centena& (0+255),b
  2020                           
  2021                           ;LibLCDXC8.h: 172: decena=(a%100)/10;
  2022   001016  0E0A               	movlw	10
  2023   001018  6E25               	movwf	___lbdiv@divisor^0,c
  2024   00101A  0E64               	movlw	100
  2025   00101C  6E21               	movwf	___lbmod@divisor^0,c
  2026   00101E  5163               	movf	EscribeLCD_n8@a& (0+255),w,b
  2027   001020  EC3A  F00D         	call	___lbmod
  2028   001024  ECD2  F00C         	call	___lbdiv
  2029   001028  0100               	movlb	0	; () banked
  2030   00102A  6F61               	movwf	EscribeLCD_n8@decena& (0+255),b
  2031                           
  2032                           ;LibLCDXC8.h: 173: unidad=a%10;
  2033   00102C  0E0A               	movlw	10
  2034   00102E  6E21               	movwf	___lbmod@divisor^0,c
  2035   001030  5163               	movf	EscribeLCD_n8@a& (0+255),w,b
  2036   001032  EC3A  F00D         	call	___lbmod
  2037   001036  0100               	movlb	0	; () banked
  2038   001038  6F62               	movwf	EscribeLCD_n8@unidad& (0+255),b
  2039                           
  2040                           ;LibLCDXC8.h: 174: EnviaDato(centena+48);
  2041   00103A  5160               	movf	EscribeLCD_n8@centena& (0+255),w,b
  2042   00103C  0F30               	addlw	48
  2043   00103E  EC6A  F00C         	call	_EnviaDato
  2044                           
  2045                           ;LibLCDXC8.h: 175: HabilitaLCD();
  2046   001042  ECDC  F00D         	call	_HabilitaLCD	;wreg free
  2047                           
  2048                           ;LibLCDXC8.h: 176: RetardoLCD(4);
  2049   001046  0E04               	movlw	4
  2050   001048  EC45  F00B         	call	_RetardoLCD
  2051                           
  2052                           ;LibLCDXC8.h: 177: EnviaDato(decena+48);
  2053   00104C  0100               	movlb	0	; () banked
  2054   00104E  5161               	movf	EscribeLCD_n8@decena& (0+255),w,b
  2055   001050  0F30               	addlw	48
  2056   001052  EC6A  F00C         	call	_EnviaDato
  2057                           
  2058                           ;LibLCDXC8.h: 178: HabilitaLCD();
  2059   001056  ECDC  F00D         	call	_HabilitaLCD	;wreg free
  2060                           
  2061                           ;LibLCDXC8.h: 179: RetardoLCD(4);
  2062   00105A  0E04               	movlw	4
  2063   00105C  EC45  F00B         	call	_RetardoLCD
  2064                           
  2065                           ;LibLCDXC8.h: 180: EnviaDato(unidad+48);
  2066   001060  0100               	movlb	0	; () banked
  2067   001062  5162               	movf	EscribeLCD_n8@unidad& (0+255),w,b
  2068   001064  0F30               	addlw	48
  2069   001066  EC6A  F00C         	call	_EnviaDato
  2070                           
  2071                           ;LibLCDXC8.h: 181: HabilitaLCD();
  2072   00106A  ECDC  F00D         	call	_HabilitaLCD	;wreg free
  2073                           
  2074                           ;LibLCDXC8.h: 182: RetardoLCD(4);
  2075   00106E  0E04               	movlw	4
  2076   001070  EC45  F00B         	call	_RetardoLCD
  2077                           
  2078                           ;LibLCDXC8.h: 183: break;
  2079   001074  0012               	return	
  2080   001076                     l4022:
  2081   001076  5029               	movf	EscribeLCD_n8@b^0,w,c
  2082                           
  2083                           ; Switch size 1, requested type "simple"
  2084                           ; Number of cases is 3, Range of values is 1 to 3
  2085                           ; switch strategies available:
  2086                           ; Name         Instructions Cycles
  2087                           ; simple_byte           10     6 (average)
  2088                           ;	Chosen strategy is simple_byte
  2089   001078  0A01               	xorlw	1	; case 1
  2090   00107A  B4D8               	btfsc	status,2,c
  2091   00107C  D78B               	goto	l3990
  2092   00107E  0A03               	xorlw	3	; case 2
  2093   001080  B4D8               	btfsc	status,2,c
  2094   001082  D79A               	goto	l3996
  2095   001084  0A01               	xorlw	1	; case 3
  2096   001086  A4D8               	btfss	status,2,c
  2097   001088  0012               	return	
  2098   00108A  D7BD               	goto	l4006
  2099   00108C                     __end_of_EscribeLCD_n8:
  2100                           	callstack 0
  2101                           
  2102 ;; *************** function ___lbmod *****************
  2103 ;; Defined at:
  2104 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbmod.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  dividend        1    wreg     unsigned char 
  2107 ;;  divisor         1   32[COMRAM] unsigned char 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  dividend        1   33[COMRAM] unsigned char 
  2110 ;;  rem             1   35[COMRAM] unsigned char 
  2111 ;;  counter         1   34[COMRAM] unsigned char 
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  1    wreg      unsigned char 
  2114 ;; Registers used:
  2115 ;;		wreg, status,2, status,0
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2121 ;;      Params:         1       0       0       0       0       0       0       0       0
  2122 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2123 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2124 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2125 ;;Total ram usage:        4 bytes
  2126 ;; Hardware stack levels used: 1
  2127 ;; Hardware stack levels required when called: 4
  2128 ;; This function calls:
  2129 ;;		Nothing
  2130 ;; This function is called by:
  2131 ;;		_EscribeLCD_n8
  2132 ;;		_main
  2133 ;;		_MostrarNumeros
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text5
  2138   001A74                     __ptext5:
  2139                           	callstack 0
  2140   001A74                     ___lbmod:
  2141                           	callstack 26
  2142                           
  2143                           ;incstack = 0
  2144                           ;___lbmod@dividend stored from wreg
  2145   001A74  6E22               	movwf	___lbmod@dividend^0,c
  2146   001A76  0E08               	movlw	8
  2147   001A78  6E23               	movwf	___lbmod@counter^0,c
  2148   001A7A  6A24               	clrf	___lbmod@rem^0,c
  2149   001A7C                     l3952:
  2150   001A7C  90D8               	bcf	status,0,c
  2151   001A7E  3422               	rlcf	___lbmod@dividend^0,w,c
  2152   001A80  3424               	rlcf	___lbmod@rem^0,w,c
  2153   001A82  6E24               	movwf	___lbmod@rem^0,c
  2154   001A84  90D8               	bcf	status,0,c
  2155   001A86  3622               	rlcf	___lbmod@dividend^0,f,c
  2156   001A88  5021               	movf	___lbmod@divisor^0,w,c
  2157   001A8A  5C24               	subwf	___lbmod@rem^0,w,c
  2158   001A8C  A0D8               	btfss	status,0,c
  2159   001A8E  D002               	goto	l3960
  2160   001A90  5021               	movf	___lbmod@divisor^0,w,c
  2161   001A92  5E24               	subwf	___lbmod@rem^0,f,c
  2162   001A94                     l3960:
  2163   001A94  2E23               	decfsz	___lbmod@counter^0,f,c
  2164   001A96  D7F2               	goto	l3952
  2165   001A98  5024               	movf	___lbmod@rem^0,w,c
  2166   001A9A  0012               	return		;funcret
  2167   001A9C                     __end_of___lbmod:
  2168                           	callstack 0
  2169                           
  2170 ;; *************** function ___lbdiv *****************
  2171 ;; Defined at:
  2172 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbdiv.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;  dividend        1    wreg     unsigned char 
  2175 ;;  divisor         1   36[COMRAM] unsigned char 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  dividend        1   37[COMRAM] unsigned char 
  2178 ;;  quotient        1   39[COMRAM] unsigned char 
  2179 ;;  counter         1   38[COMRAM] unsigned char 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      unsigned char 
  2182 ;; Registers used:
  2183 ;;		wreg, status,2, status,0
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2189 ;;      Params:         1       0       0       0       0       0       0       0       0
  2190 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2191 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2192 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2193 ;;Total ram usage:        4 bytes
  2194 ;; Hardware stack levels used: 1
  2195 ;; Hardware stack levels required when called: 4
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_EscribeLCD_n8
  2200 ;;		_main
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text6
  2205   0019A4                     __ptext6:
  2206                           	callstack 0
  2207   0019A4                     ___lbdiv:
  2208                           	callstack 26
  2209                           
  2210                           ;incstack = 0
  2211                           ;___lbdiv@dividend stored from wreg
  2212   0019A4  6E26               	movwf	___lbdiv@dividend^0,c
  2213   0019A6  6A28               	clrf	___lbdiv@quotient^0,c
  2214   0019A8  5025               	movf	___lbdiv@divisor^0,w,c
  2215   0019AA  B4D8               	btfsc	status,2,c
  2216   0019AC  D015               	goto	l3944
  2217   0019AE  0E01               	movlw	1
  2218   0019B0  6E27               	movwf	___lbdiv@counter^0,c
  2219   0019B2  D003               	goto	l3932
  2220   0019B4                     l3928:
  2221   0019B4  90D8               	bcf	status,0,c
  2222   0019B6  3625               	rlcf	___lbdiv@divisor^0,f,c
  2223   0019B8  2A27               	incf	___lbdiv@counter^0,f,c
  2224   0019BA                     l3932:
  2225   0019BA  AE25               	btfss	___lbdiv@divisor^0,7,c
  2226   0019BC  D7FB               	goto	l3928
  2227   0019BE                     u3260:
  2228   0019BE  90D8               	bcf	status,0,c
  2229   0019C0  3628               	rlcf	___lbdiv@quotient^0,f,c
  2230   0019C2  5025               	movf	___lbdiv@divisor^0,w,c
  2231   0019C4  5C26               	subwf	___lbdiv@dividend^0,w,c
  2232   0019C6  A0D8               	btfss	status,0,c
  2233   0019C8  D003               	goto	l3940
  2234   0019CA  5025               	movf	___lbdiv@divisor^0,w,c
  2235   0019CC  5E26               	subwf	___lbdiv@dividend^0,f,c
  2236   0019CE  8028               	bsf	___lbdiv@quotient^0,0,c
  2237   0019D0                     l3940:
  2238   0019D0  90D8               	bcf	status,0,c
  2239   0019D2  3225               	rrcf	___lbdiv@divisor^0,f,c
  2240   0019D4  2E27               	decfsz	___lbdiv@counter^0,f,c
  2241   0019D6  D7F3               	goto	u3260
  2242   0019D8                     l3944:
  2243   0019D8  5028               	movf	___lbdiv@quotient^0,w,c
  2244   0019DA  0012               	return		;funcret
  2245   0019DC                     __end_of___lbdiv:
  2246                           	callstack 0
  2247                           
  2248 ;; *************** function _Emergencia *****************
  2249 ;; Defined at:
  2250 ;;		line 601 in file "Lab6SIMU.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;		None
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;		None
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      void 
  2257 ;; Registers used:
  2258 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2264 ;;      Params:         0       0       0       0       0       0       0       0       0
  2265 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2266 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2267 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2268 ;;Total ram usage:        0 bytes
  2269 ;; Hardware stack levels used: 1
  2270 ;; Hardware stack levels required when called: 8
  2271 ;; This function calls:
  2272 ;;		_BorraLCD
  2273 ;;		_DireccionaLCD
  2274 ;;		_MensajeLCD_Var
  2275 ;; This function is called by:
  2276 ;;		_main
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text7
  2281   001A4A                     __ptext7:
  2282                           	callstack 0
  2283   001A4A                     _Emergencia:
  2284                           	callstack 22
  2285                           
  2286                           ;Lab6SIMU.c: 602: LATE = 0b001;
  2287                           
  2288                           ;incstack = 0
  2289   001A4A  0E01               	movlw	1
  2290   001A4C  6E8D               	movwf	141,c	;volatile
  2291                           
  2292                           ;Lab6SIMU.c: 603: LATD = 8;
  2293   001A4E  0E08               	movlw	8
  2294   001A50  6E8C               	movwf	140,c	;volatile
  2295                           
  2296                           ;Lab6SIMU.c: 604: BorraLCD();
  2297   001A52  ECD2  F00D         	call	_BorraLCD	;wreg free
  2298                           
  2299                           ;Lab6SIMU.c: 605: MensajeLCD_Var("    EMERGENCY");
  2300   001A56  0E65               	movlw	low STR_9
  2301   001A58  6E26               	movwf	MensajeLCD_Var@a^0,c
  2302   001A5A  EC4E  F00D         	call	_MensajeLCD_Var	;wreg free
  2303                           
  2304                           ;Lab6SIMU.c: 606: DireccionaLCD(0xC0);
  2305   001A5E  0EC0               	movlw	192
  2306   001A60  EC9D  F00D         	call	_DireccionaLCD
  2307                           
  2308                           ;Lab6SIMU.c: 607: MensajeLCD_Var("      STOP");
  2309   001A64  0E8A               	movlw	low STR_10
  2310   001A66  6E26               	movwf	MensajeLCD_Var@a^0,c
  2311   001A68  EC4E  F00D         	call	_MensajeLCD_Var	;wreg free
  2312                           
  2313                           ;Lab6SIMU.c: 608: CCPR1L=1;
  2314   001A6C  0E01               	movlw	1
  2315   001A6E  6EBE               	movwf	190,c	;volatile
  2316   001A70                     l4096:
  2317                           
  2318                           ;Lab6SIMU.c: 611: GIE = 0;
  2319   001A70  9EF2               	bcf	4082,7,c	;volatile
  2320   001A72  D7FE               	goto	l4096
  2321   001A74                     __end_of_Emergencia:
  2322                           	callstack 0
  2323                           
  2324 ;; *************** function _MensajeLCD_Var *****************
  2325 ;; Defined at:
  2326 ;;		line 236 in file "LibLCDXC8.h"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  a               1   37[COMRAM] PTR unsigned char 
  2329 ;;		 -> STR_10(11), STR_9(14), STR_6(11), STR_5(12), 
  2330 ;;		 -> STR_4(16), STR_3(11), STR_2(16), STR_1(17), 
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;		None
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      void 
  2335 ;; Registers used:
  2336 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2342 ;;      Params:         1       0       0       0       0       0       0       0       0
  2343 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2345 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2346 ;;Total ram usage:        1 bytes
  2347 ;; Hardware stack levels used: 1
  2348 ;; Hardware stack levels required when called: 7
  2349 ;; This function calls:
  2350 ;;		_EscribeLCD_c
  2351 ;; This function is called by:
  2352 ;;		_main
  2353 ;;		_Emergencia
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text8
  2358   001A9C                     __ptext8:
  2359                           	callstack 0
  2360   001A9C                     _MensajeLCD_Var:
  2361                           	callstack 23
  2362                           
  2363                           ;LibLCDXC8.h: 240: while (*a) {
  2364                           
  2365                           ;incstack = 0
  2366   001A9C  D009               	goto	l3864
  2367   001A9E                     l3860:
  2368                           
  2369                           ;LibLCDXC8.h: 241: EscribeLCD_c(*a);
  2370   001A9E  C026  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  2371   001AA2                     	if	1	;There is more than 1 active tblptr byte
  2372   001AA2  0E08               	movlw	high __smallconst
  2373   001AA4  6EF7               	movwf	tblptrh,c
  2374   001AA6                     	endif
  2375   001AA6                     	if	0	;tblptru may be non-zero
  2376   001AA6                     	endif
  2377   001AA6                     	if	0	;tblptru may be non-zero
  2378   001AA6                     	endif
  2379   001AA6  0008               	tblrd		*
  2380   001AA8  50F5               	movf	tablat,w,c
  2381   001AAA  EC92  F00D         	call	_EscribeLCD_c
  2382                           
  2383                           ;LibLCDXC8.h: 242: a++;
  2384   001AAE  2A26               	incf	MensajeLCD_Var@a^0,f,c
  2385   001AB0                     l3864:
  2386   001AB0  C026  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  2387   001AB4                     	if	1	;There is more than 1 active tblptr byte
  2388   001AB4  0E08               	movlw	high __smallconst
  2389   001AB6  6EF7               	movwf	tblptrh,c
  2390   001AB8                     	endif
  2391   001AB8                     	if	0	;tblptru may be non-zero
  2392   001AB8                     	endif
  2393   001AB8                     	if	0	;tblptru may be non-zero
  2394   001AB8                     	endif
  2395   001AB8  0008               	tblrd		*
  2396   001ABA  50F5               	movf	tablat,w,c
  2397   001ABC  0900               	iorlw	0
  2398   001ABE  B4D8               	btfsc	status,2,c
  2399   001AC0  0012               	return	
  2400   001AC2  D7ED               	goto	l3860
  2401   001AC4                     __end_of_MensajeLCD_Var:
  2402                           	callstack 0
  2403                           
  2404 ;; *************** function _Bienvenida *****************
  2405 ;; Defined at:
  2406 ;;		line 617 in file "Lab6SIMU.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;		None
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;  pos             1    1[BANK0 ] unsigned char 
  2411 ;;  max_pos         1    0[BANK0 ] unsigned char 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  1    wreg      void 
  2414 ;; Registers used:
  2415 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2421 ;;      Params:         0       0       0       0       0       0       0       0       0
  2422 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2423 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2424 ;;      Totals:         1       2       0       0       0       0       0       0       0
  2425 ;;Total ram usage:        3 bytes
  2426 ;; Hardware stack levels used: 1
  2427 ;; Hardware stack levels required when called: 8
  2428 ;; This function calls:
  2429 ;;		_ConfiguraLCD
  2430 ;;		_CrearCaracter
  2431 ;;		_DireccionaLCD
  2432 ;;		_EscribeLCD_c
  2433 ;;		_InicializaLCD
  2434 ;;		_MostrarCursorLCD
  2435 ;;		_OcultarCursorLCD
  2436 ;; This function is called by:
  2437 ;;		_main
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441                           	psect	text9
  2442   000E82                     __ptext9:
  2443                           	callstack 0
  2444   000E82                     _Bienvenida:
  2445                           	callstack 22
  2446                           
  2447                           ;Lab6SIMU.c: 619: unsigned char max_pos = 15;
  2448                           
  2449                           ;incstack = 0
  2450   000E82  0E0F               	movlw	15
  2451   000E84  0100               	movlb	0	; () banked
  2452   000E86  6F60               	movwf	Bienvenida@max_pos& (0+255),b
  2453                           
  2454                           ; BSR set to: 0
  2455                           ;Lab6SIMU.c: 620: ConfiguraLCD(4);
  2456   000E88  0E04               	movlw	4
  2457   000E8A  EC86  F00D         	call	_ConfiguraLCD
  2458                           
  2459                           ;Lab6SIMU.c: 621: InicializaLCD();
  2460   000E8E  ECE2  F009         	call	_InicializaLCD	;wreg free
  2461                           
  2462                           ;Lab6SIMU.c: 622: OcultarCursorLCD();
  2463   000E92  ECBE  F00D         	call	_OcultarCursorLCD	;wreg free
  2464                           
  2465                           ;Lab6SIMU.c: 623: CrearCaracter(0, banda1);
  2466   000E96  0E09               	movlw	low _banda1
  2467   000E98  6E25               	movwf	CrearCaracter@data^0,c
  2468   000E9A  0E00               	movlw	0
  2469   000E9C  EC18  F00B         	call	_CrearCaracter
  2470                           
  2471                           ;Lab6SIMU.c: 624: CrearCaracter(1, banda2);
  2472   000EA0  0E01               	movlw	low _banda2
  2473   000EA2  6E25               	movwf	CrearCaracter@data^0,c
  2474   000EA4  0E01               	movlw	1
  2475   000EA6  EC18  F00B         	call	_CrearCaracter
  2476                           
  2477                           ;Lab6SIMU.c: 625: for (pos = 0; pos <= max_pos; pos++) {
  2478   000EAA  0100               	movlb	0	; () banked
  2479   000EAC  6B61               	clrf	Bienvenida@pos& (0+255),b
  2480   000EAE  D011               	goto	l4046
  2481   000EB0                     l4040:
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;Lab6SIMU.c: 627: DireccionaLCD(0x80 + pos);
  2485   000EB0  5161               	movf	Bienvenida@pos& (0+255),w,b
  2486   000EB2  0F80               	addlw	128
  2487   000EB4  EC9D  F00D         	call	_DireccionaLCD
  2488                           
  2489                           ;Lab6SIMU.c: 628: EscribeLCD_c(1);
  2490   000EB8  0E01               	movlw	1
  2491   000EBA  EC92  F00D         	call	_EscribeLCD_c
  2492                           
  2493                           ;Lab6SIMU.c: 629: _delay((unsigned long)((50)*(1000000/4000.0)));
  2494   000EBE  0E11               	movlw	17
  2495   000EC0  6E29               	movwf	??_Bienvenida^0,c
  2496   000EC2  0E3A               	movlw	58
  2497   000EC4                     u3717:
  2498   000EC4  2EE8               	decfsz	wreg,f,c
  2499   000EC6  D7FE               	bra	u3717
  2500   000EC8  2E29               	decfsz	??_Bienvenida^0,f,c
  2501   000ECA  D7FC               	bra	u3717
  2502   000ECC  D000               	nop2	
  2503   000ECE  0100               	movlb	0	; () banked
  2504   000ED0  2B61               	incf	Bienvenida@pos& (0+255),f,b
  2505   000ED2                     l4046:
  2506                           
  2507                           ; BSR set to: 0
  2508   000ED2  5161               	movf	Bienvenida@pos& (0+255),w,b
  2509   000ED4  5D60               	subwf	Bienvenida@max_pos& (0+255),w,b
  2510   000ED6  B0D8               	btfsc	status,0,c
  2511   000ED8  D7EB               	goto	l4040
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;Lab6SIMU.c: 630: };Lab6SIMU.c: 632: for (pos = 0; pos < max_pos; pos++) {
  2515   000EDA  6B61               	clrf	Bienvenida@pos& (0+255),b
  2516   000EDC  D021               	goto	l4060
  2517   000EDE                     l4048:
  2518                           
  2519                           ; BSR set to: 0
  2520                           ;Lab6SIMU.c: 634: DireccionaLCD(0x80 + pos);
  2521   000EDE  5161               	movf	Bienvenida@pos& (0+255),w,b
  2522   000EE0  0F80               	addlw	128
  2523   000EE2  EC9D  F00D         	call	_DireccionaLCD
  2524                           
  2525                           ;Lab6SIMU.c: 635: EscribeLCD_c(0);
  2526   000EE6  0E00               	movlw	0
  2527   000EE8  EC92  F00D         	call	_EscribeLCD_c
  2528                           
  2529                           ;Lab6SIMU.c: 636: _delay((unsigned long)((50)*(1000000/4000.0)));
  2530   000EEC  0E11               	movlw	17
  2531   000EEE  6E29               	movwf	??_Bienvenida^0,c
  2532   000EF0  0E3A               	movlw	58
  2533   000EF2                     u3727:
  2534   000EF2  2EE8               	decfsz	wreg,f,c
  2535   000EF4  D7FE               	bra	u3727
  2536   000EF6  2E29               	decfsz	??_Bienvenida^0,f,c
  2537   000EF8  D7FC               	bra	u3727
  2538   000EFA  D000               	nop2	
  2539                           
  2540                           ;Lab6SIMU.c: 637: DireccionaLCD(0x80 + pos);
  2541   000EFC  0100               	movlb	0	; () banked
  2542   000EFE  5161               	movf	Bienvenida@pos& (0+255),w,b
  2543   000F00  0F80               	addlw	128
  2544   000F02  EC9D  F00D         	call	_DireccionaLCD
  2545                           
  2546                           ;Lab6SIMU.c: 638: EscribeLCD_c(1);
  2547   000F06  0E01               	movlw	1
  2548   000F08  EC92  F00D         	call	_EscribeLCD_c
  2549                           
  2550                           ;Lab6SIMU.c: 639: _delay((unsigned long)((50)*(1000000/4000.0)));
  2551   000F0C  0E11               	movlw	17
  2552   000F0E  6E29               	movwf	??_Bienvenida^0,c
  2553   000F10  0E3A               	movlw	58
  2554   000F12                     u3737:
  2555   000F12  2EE8               	decfsz	wreg,f,c
  2556   000F14  D7FE               	bra	u3737
  2557   000F16  2E29               	decfsz	??_Bienvenida^0,f,c
  2558   000F18  D7FC               	bra	u3737
  2559   000F1A  D000               	nop2	
  2560   000F1C  0100               	movlb	0	; () banked
  2561   000F1E  2B61               	incf	Bienvenida@pos& (0+255),f,b
  2562   000F20                     l4060:
  2563                           
  2564                           ; BSR set to: 0
  2565   000F20  5160               	movf	Bienvenida@max_pos& (0+255),w,b
  2566   000F22  5D61               	subwf	Bienvenida@pos& (0+255),w,b
  2567   000F24  A0D8               	btfss	status,0,c
  2568   000F26  D7DB               	goto	l4048
  2569                           
  2570                           ; BSR set to: 0
  2571                           ;Lab6SIMU.c: 640: };Lab6SIMU.c: 642: DireccionaLCD(0x80 + max_pos);
  2572   000F28  5160               	movf	Bienvenida@max_pos& (0+255),w,b
  2573   000F2A  0F80               	addlw	128
  2574   000F2C  EC9D  F00D         	call	_DireccionaLCD
  2575                           
  2576                           ;Lab6SIMU.c: 643: EscribeLCD_c(0);
  2577   000F30  0E00               	movlw	0
  2578   000F32  EC92  F00D         	call	_EscribeLCD_c
  2579                           
  2580                           ;Lab6SIMU.c: 644: for (pos = max_pos; pos > 0; pos--) {
  2581   000F36  C060  F061         	movff	Bienvenida@max_pos,Bienvenida@pos
  2582   000F3A                     l4066:
  2583   000F3A  0100               	movlb	0	; () banked
  2584   000F3C  5161               	movf	Bienvenida@pos& (0+255),w,b
  2585   000F3E  B4D8               	btfsc	status,2,c
  2586   000F40  D022               	goto	l4084
  2587                           
  2588                           ; BSR set to: 0
  2589                           ;Lab6SIMU.c: 646: DireccionaLCD(0x80 + pos);
  2590   000F42  5161               	movf	Bienvenida@pos& (0+255),w,b
  2591   000F44  0F80               	addlw	128
  2592   000F46  EC9D  F00D         	call	_DireccionaLCD
  2593                           
  2594                           ;Lab6SIMU.c: 647: EscribeLCD_c(0);
  2595   000F4A  0E00               	movlw	0
  2596   000F4C  EC92  F00D         	call	_EscribeLCD_c
  2597                           
  2598                           ;Lab6SIMU.c: 648: _delay((unsigned long)((50)*(1000000/4000.0)));
  2599   000F50  0E11               	movlw	17
  2600   000F52  6E29               	movwf	??_Bienvenida^0,c
  2601   000F54  0E3A               	movlw	58
  2602   000F56                     u3747:
  2603   000F56  2EE8               	decfsz	wreg,f,c
  2604   000F58  D7FE               	bra	u3747
  2605   000F5A  2E29               	decfsz	??_Bienvenida^0,f,c
  2606   000F5C  D7FC               	bra	u3747
  2607   000F5E  D000               	nop2	
  2608                           
  2609                           ;Lab6SIMU.c: 649: DireccionaLCD(0x80 + pos);
  2610   000F60  0100               	movlb	0	; () banked
  2611   000F62  5161               	movf	Bienvenida@pos& (0+255),w,b
  2612   000F64  0F80               	addlw	128
  2613   000F66  EC9D  F00D         	call	_DireccionaLCD
  2614                           
  2615                           ;Lab6SIMU.c: 650: EscribeLCD_c(1);
  2616   000F6A  0E01               	movlw	1
  2617   000F6C  EC92  F00D         	call	_EscribeLCD_c
  2618                           
  2619                           ;Lab6SIMU.c: 651: _delay((unsigned long)((50)*(1000000/4000.0)));
  2620   000F70  0E11               	movlw	17
  2621   000F72  6E29               	movwf	??_Bienvenida^0,c
  2622   000F74  0E3A               	movlw	58
  2623   000F76                     u3757:
  2624   000F76  2EE8               	decfsz	wreg,f,c
  2625   000F78  D7FE               	bra	u3757
  2626   000F7A  2E29               	decfsz	??_Bienvenida^0,f,c
  2627   000F7C  D7FC               	bra	u3757
  2628   000F7E  D000               	nop2	
  2629   000F80  0100               	movlb	0	; () banked
  2630   000F82  0761               	decf	Bienvenida@pos& (0+255),f,b
  2631   000F84  D7DA               	goto	l4066
  2632   000F86                     l4084:
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;Lab6SIMU.c: 655: MostrarCursorLCD();
  2636   000F86  ECC8  F00D         	call	_MostrarCursorLCD	;wreg free
  2637   000F8A  0012               	return		;funcret
  2638   000F8C                     __end_of_Bienvenida:
  2639                           	callstack 0
  2640                           
  2641 ;; *************** function _OcultarCursorLCD *****************
  2642 ;; Defined at:
  2643 ;;		line 314 in file "LibLCDXC8.h"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;		None
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;		None
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  1    wreg      void 
  2650 ;; Registers used:
  2651 ;;		wreg, status,2, status,0, cstack
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2657 ;;      Params:         0       0       0       0       0       0       0       0       0
  2658 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2659 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2660 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2661 ;;Total ram usage:        0 bytes
  2662 ;; Hardware stack levels used: 1
  2663 ;; Hardware stack levels required when called: 6
  2664 ;; This function calls:
  2665 ;;		_EnviaDato
  2666 ;;		_HabilitaLCD
  2667 ;;		_RetardoLCD
  2668 ;; This function is called by:
  2669 ;;		_main
  2670 ;;		_Bienvenida
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           	psect	text10
  2675   001B7C                     __ptext10:
  2676                           	callstack 0
  2677   001B7C                     _OcultarCursorLCD:
  2678                           	callstack 24
  2679                           
  2680                           ;LibLCDXC8.h: 315: LATA3 = 0;
  2681                           
  2682                           ;incstack = 0
  2683   001B7C  9689               	bcf	3977,3,c	;volatile
  2684                           
  2685                           ;LibLCDXC8.h: 316: EnviaDato(0x0C);
  2686   001B7E  0E0C               	movlw	12
  2687   001B80  EC6A  F00C         	call	_EnviaDato
  2688                           
  2689                           ;LibLCDXC8.h: 317: HabilitaLCD();
  2690   001B84  ECDC  F00D         	call	_HabilitaLCD	;wreg free
  2691                           
  2692                           ;LibLCDXC8.h: 318: RetardoLCD(4);
  2693   001B88  0E04               	movlw	4
  2694   001B8A  EC45  F00B         	call	_RetardoLCD
  2695   001B8E  0012               	return		;funcret
  2696   001B90                     __end_of_OcultarCursorLCD:
  2697                           	callstack 0
  2698                           
  2699 ;; *************** function _MostrarCursorLCD *****************
  2700 ;; Defined at:
  2701 ;;		line 320 in file "LibLCDXC8.h"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;		None
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  1    wreg      void 
  2708 ;; Registers used:
  2709 ;;		wreg, status,2, status,0, cstack
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2715 ;;      Params:         0       0       0       0       0       0       0       0       0
  2716 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2717 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2718 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2719 ;;Total ram usage:        0 bytes
  2720 ;; Hardware stack levels used: 1
  2721 ;; Hardware stack levels required when called: 6
  2722 ;; This function calls:
  2723 ;;		_EnviaDato
  2724 ;;		_HabilitaLCD
  2725 ;;		_RetardoLCD
  2726 ;; This function is called by:
  2727 ;;		_main
  2728 ;;		_Bienvenida
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text11
  2733   001B90                     __ptext11:
  2734                           	callstack 0
  2735   001B90                     _MostrarCursorLCD:
  2736                           	callstack 24
  2737                           
  2738                           ;LibLCDXC8.h: 321: LATA3 = 0;
  2739                           
  2740                           ;incstack = 0
  2741   001B90  9689               	bcf	3977,3,c	;volatile
  2742                           
  2743                           ;LibLCDXC8.h: 322: EnviaDato(0x0E);
  2744   001B92  0E0E               	movlw	14
  2745   001B94  EC6A  F00C         	call	_EnviaDato
  2746                           
  2747                           ;LibLCDXC8.h: 324: HabilitaLCD();
  2748   001B98  ECDC  F00D         	call	_HabilitaLCD	;wreg free
  2749                           
  2750                           ;LibLCDXC8.h: 325: RetardoLCD(4);
  2751   001B9C  0E04               	movlw	4
  2752   001B9E  EC45  F00B         	call	_RetardoLCD
  2753   001BA2  0012               	return		;funcret
  2754   001BA4                     __end_of_MostrarCursorLCD:
  2755                           	callstack 0
  2756                           
  2757 ;; *************** function _InicializaLCD *****************
  2758 ;; Defined at:
  2759 ;;		line 75 in file "LibLCDXC8.h"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;		None
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;		None
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  1    wreg      void 
  2766 ;; Registers used:
  2767 ;;		wreg, status,2, status,0, cstack
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2773 ;;      Params:         0       0       0       0       0       0       0       0       0
  2774 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2775 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2776 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2777 ;;Total ram usage:        0 bytes
  2778 ;; Hardware stack levels used: 1
  2779 ;; Hardware stack levels required when called: 7
  2780 ;; This function calls:
  2781 ;;		_BorraLCD
  2782 ;;		_EnviaDato
  2783 ;;		_HabilitaLCD
  2784 ;;		_RetardoLCD
  2785 ;; This function is called by:
  2786 ;;		_main
  2787 ;;		_Bienvenida
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           	psect	text12
  2792   0013C4                     __ptext12:
  2793                           	callstack 0
  2794   0013C4                     _InicializaLCD:
  2795                           	callstack 23
  2796                           
  2797                           ;LibLCDXC8.h: 77: LATA3=0;
  2798                           
  2799                           ;incstack = 0
  2800   0013C4  9689               	bcf	3977,3,c	;volatile
  2801                           
  2802                           ;LibLCDXC8.h: 78: if(interfaz==4)
  2803   0013C6  0E04               	movlw	4
  2804   0013C8  183E               	xorwf	_interfaz^0,w,c
  2805   0013CA  A4D8               	btfss	status,2,c
  2806   0013CC  D004               	goto	l3810
  2807                           
  2808                           ;LibLCDXC8.h: 79: LATD=(LATD & 0b00001111) | 0x30;
  2809   0013CE  508C               	movf	140,w,c	;volatile
  2810   0013D0  0B0F               	andlw	15
  2811   0013D2  0930               	iorlw	48
  2812   0013D4  D001               	goto	L1
  2813   0013D6                     l3810:
  2814                           
  2815                           ;LibLCDXC8.h: 80: else;LibLCDXC8.h: 81: LATD=0x3F;
  2816   0013D6  0E3F               	movlw	63
  2817   0013D8                     L1:
  2818   0013D8  6E8C               	movwf	140,c	;volatile
  2819                           
  2820                           ;LibLCDXC8.h: 82: HabilitaLCD();
  2821   0013DA  ECDC  F00D         	call	_HabilitaLCD	;wreg free
  2822                           
  2823                           ;LibLCDXC8.h: 83: RetardoLCD(1);
  2824   0013DE  0E01               	movlw	1
  2825   0013E0  EC45  F00B         	call	_RetardoLCD
  2826                           
  2827                           ;LibLCDXC8.h: 84: if(interfaz==4)
  2828   0013E4  0E04               	movlw	4
  2829   0013E6  183E               	xorwf	_interfaz^0,w,c
  2830   0013E8  A4D8               	btfss	status,2,c
  2831   0013EA  D004               	goto	l3820
  2832                           
  2833                           ;LibLCDXC8.h: 85: LATD=(LATD & 0b00001111) | 0x30;
  2834   0013EC  508C               	movf	140,w,c	;volatile
  2835   0013EE  0B0F               	andlw	15
  2836   0013F0  0930               	iorlw	48
  2837   0013F2  D001               	goto	L2
  2838   0013F4                     l3820:
  2839                           
  2840                           ;LibLCDXC8.h: 86: else;LibLCDXC8.h: 87: LATD=0x3F;
  2841   0013F4  0E3F               	movlw	63
  2842   0013F6                     L2:
  2843   0013F6  6E8C               	movwf	140,c	;volatile
  2844                           
  2845                           ;LibLCDXC8.h: 88: HabilitaLCD();
  2846   0013F8  ECDC  F00D         	call	_HabilitaLCD	;wreg free
  2847                           
  2848                           ;LibLCDXC8.h: 89: RetardoLCD(3);
  2849   0013FC  0E03               	movlw	3
  2850   0013FE  EC45  F00B         	call	_RetardoLCD
  2851                           
  2852                           ;LibLCDXC8.h: 90: if(interfaz==4)
  2853   001402  0E04               	movlw	4
  2854   001404  183E               	xorwf	_interfaz^0,w,c
  2855   001406  A4D8               	btfss	status,2,c
  2856   001408  D004               	goto	l3830
  2857                           
  2858                           ;LibLCDXC8.h: 91: LATD=(LATD & 0b00001111) | 0x30;
  2859   00140A  508C               	movf	140,w,c	;volatile
  2860   00140C  0B0F               	andlw	15
  2861   00140E  0930               	iorlw	48
  2862   001410  D001               	goto	L3
  2863   001412                     l3830:
  2864                           
  2865                           ;LibLCDXC8.h: 92: else;LibLCDXC8.h: 93: LATD=0x3F;
  2866   001412  0E3F               	movlw	63
  2867   001414                     L3:
  2868   001414  6E8C               	movwf	140,c	;volatile
  2869                           
  2870                           ;LibLCDXC8.h: 94: HabilitaLCD();
  2871   001416  ECDC  F00D         	call	_HabilitaLCD	;wreg free
  2872                           
  2873                           ;LibLCDXC8.h: 95: RetardoLCD(4);
  2874   00141A  0E04               	movlw	4
  2875   00141C  EC45  F00B         	call	_RetardoLCD
  2876                           
  2877                           ;LibLCDXC8.h: 96: if(interfaz==4){
  2878   001420  0E04               	movlw	4
  2879   001422  183E               	xorwf	_interfaz^0,w,c
  2880   001424  A4D8               	btfss	status,2,c
  2881   001426  D011               	goto	l3850
  2882                           
  2883                           ;LibLCDXC8.h: 97: LATD=(LATD & 0b00001111) | 0x20;
  2884   001428  508C               	movf	140,w,c	;volatile
  2885   00142A  0B0F               	andlw	15
  2886   00142C  0920               	iorlw	32
  2887   00142E  6E8C               	movwf	140,c	;volatile
  2888                           
  2889                           ;LibLCDXC8.h: 98: HabilitaLCD();
  2890   001430  ECDC  F00D         	call	_HabilitaLCD	;wreg free
  2891                           
  2892                           ;LibLCDXC8.h: 99: RetardoLCD(4);
  2893   001434  0E04               	movlw	4
  2894   001436  EC45  F00B         	call	_RetardoLCD
  2895                           
  2896                           ;LibLCDXC8.h: 100: EnviaDato(0x2F);
  2897   00143A  0E2F               	movlw	47
  2898   00143C  EC6A  F00C         	call	_EnviaDato
  2899                           
  2900                           ;LibLCDXC8.h: 101: HabilitaLCD();
  2901   001440  ECDC  F00D         	call	_HabilitaLCD	;wreg free
  2902                           
  2903                           ;LibLCDXC8.h: 102: RetardoLCD(4);
  2904   001444  0E04               	movlw	4
  2905   001446  EC45  F00B         	call	_RetardoLCD
  2906   00144A                     l3850:
  2907                           
  2908                           ;LibLCDXC8.h: 103: };LibLCDXC8.h: 104: BorraLCD();
  2909   00144A  ECD2  F00D         	call	_BorraLCD	;wreg free
  2910                           
  2911                           ;LibLCDXC8.h: 105: EnviaDato(0xF);
  2912   00144E  0E0F               	movlw	15
  2913   001450  EC6A  F00C         	call	_EnviaDato
  2914                           
  2915                           ;LibLCDXC8.h: 106: HabilitaLCD();
  2916   001454  ECDC  F00D         	call	_HabilitaLCD	;wreg free
  2917                           
  2918                           ;LibLCDXC8.h: 107: RetardoLCD(4);
  2919   001458  0E04               	movlw	4
  2920   00145A  EC45  F00B         	call	_RetardoLCD
  2921   00145E  0012               	return		;funcret
  2922   001460                     __end_of_InicializaLCD:
  2923                           	callstack 0
  2924                           
  2925 ;; *************** function _BorraLCD *****************
  2926 ;; Defined at:
  2927 ;;		line 116 in file "LibLCDXC8.h"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;		None
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;		None
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      void 
  2934 ;; Registers used:
  2935 ;;		wreg, status,2, status,0, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2941 ;;      Params:         0       0       0       0       0       0       0       0       0
  2942 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2943 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2944 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2945 ;;Total ram usage:        0 bytes
  2946 ;; Hardware stack levels used: 1
  2947 ;; Hardware stack levels required when called: 6
  2948 ;; This function calls:
  2949 ;;		_EnviaDato
  2950 ;;		_HabilitaLCD
  2951 ;;		_RetardoLCD
  2952 ;; This function is called by:
  2953 ;;		_InicializaLCD
  2954 ;;		_main
  2955 ;;		_Emergencia
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           	psect	text13
  2960   001BA4                     __ptext13:
  2961                           	callstack 0
  2962   001BA4                     _BorraLCD:
  2963                           	callstack 23
  2964                           
  2965                           ;LibLCDXC8.h: 118: LATA3=0;
  2966                           
  2967                           ;incstack = 0
  2968   001BA4  9689               	bcf	3977,3,c	;volatile
  2969                           
  2970                           ;LibLCDXC8.h: 119: EnviaDato(0x01);
  2971   001BA6  0E01               	movlw	1
  2972   001BA8  EC6A  F00C         	call	_EnviaDato
  2973                           
  2974                           ;LibLCDXC8.h: 120: HabilitaLCD();
  2975   001BAC  ECDC  F00D         	call	_HabilitaLCD	;wreg free
  2976                           
  2977                           ;LibLCDXC8.h: 121: RetardoLCD(2);
  2978   001BB0  0E02               	movlw	2
  2979   001BB2  EC45  F00B         	call	_RetardoLCD
  2980   001BB6  0012               	return		;funcret
  2981   001BB8                     __end_of_BorraLCD:
  2982                           	callstack 0
  2983                           
  2984 ;; *************** function _EscribeLCD_c *****************
  2985 ;; Defined at:
  2986 ;;		line 140 in file "LibLCDXC8.h"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;  a               1    wreg     unsigned char 
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;  a               1   36[COMRAM] unsigned char 
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  1    wreg      void 
  2993 ;; Registers used:
  2994 ;;		wreg, status,2, status,0, cstack
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3000 ;;      Params:         0       0       0       0       0       0       0       0       0
  3001 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3003 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3004 ;;Total ram usage:        1 bytes
  3005 ;; Hardware stack levels used: 1
  3006 ;; Hardware stack levels required when called: 6
  3007 ;; This function calls:
  3008 ;;		_EnviaDato
  3009 ;;		_HabilitaLCD
  3010 ;;		_RetardoLCD
  3011 ;; This function is called by:
  3012 ;;		_MensajeLCD_Var
  3013 ;;		_Bienvenida
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           	psect	text14
  3018   001B24                     __ptext14:
  3019                           	callstack 0
  3020   001B24                     _EscribeLCD_c:
  3021                           	callstack 23
  3022                           
  3023                           ;incstack = 0
  3024                           ;EscribeLCD_c@a stored from wreg
  3025   001B24  6E25               	movwf	EscribeLCD_c@a^0,c
  3026                           
  3027                           ;LibLCDXC8.h: 144: LATA3=1;
  3028   001B26  8689               	bsf	3977,3,c	;volatile
  3029                           
  3030                           ;LibLCDXC8.h: 145: EnviaDato(a);
  3031   001B28  5025               	movf	EscribeLCD_c@a^0,w,c
  3032   001B2A  EC6A  F00C         	call	_EnviaDato
  3033                           
  3034                           ;LibLCDXC8.h: 146: HabilitaLCD();
  3035   001B2E  ECDC  F00D         	call	_HabilitaLCD	;wreg free
  3036                           
  3037                           ;LibLCDXC8.h: 147: RetardoLCD(4);
  3038   001B32  0E04               	movlw	4
  3039   001B34  EC45  F00B         	call	_RetardoLCD
  3040   001B38  0012               	return		;funcret
  3041   001B3A                     __end_of_EscribeLCD_c:
  3042                           	callstack 0
  3043                           
  3044 ;; *************** function _DireccionaLCD *****************
  3045 ;; Defined at:
  3046 ;;		line 247 in file "LibLCDXC8.h"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;  a               1    wreg     unsigned char 
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;  a               1   36[COMRAM] unsigned char 
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  1    wreg      void 
  3053 ;; Registers used:
  3054 ;;		wreg, status,2, status,0, cstack
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3060 ;;      Params:         0       0       0       0       0       0       0       0       0
  3061 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3062 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3063 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3064 ;;Total ram usage:        1 bytes
  3065 ;; Hardware stack levels used: 1
  3066 ;; Hardware stack levels required when called: 6
  3067 ;; This function calls:
  3068 ;;		_EnviaDato
  3069 ;;		_HabilitaLCD
  3070 ;;		_RetardoLCD
  3071 ;; This function is called by:
  3072 ;;		_main
  3073 ;;		_Emergencia
  3074 ;;		_Bienvenida
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           	psect	text15
  3079   001B3A                     __ptext15:
  3080                           	callstack 0
  3081   001B3A                     _DireccionaLCD:
  3082                           	callstack 23
  3083                           
  3084                           ;incstack = 0
  3085                           ;DireccionaLCD@a stored from wreg
  3086   001B3A  6E25               	movwf	DireccionaLCD@a^0,c
  3087                           
  3088                           ;LibLCDXC8.h: 250: LATA3=0;
  3089   001B3C  9689               	bcf	3977,3,c	;volatile
  3090                           
  3091                           ;LibLCDXC8.h: 251: EnviaDato(a);
  3092   001B3E  5025               	movf	DireccionaLCD@a^0,w,c
  3093   001B40  EC6A  F00C         	call	_EnviaDato
  3094                           
  3095                           ;LibLCDXC8.h: 252: HabilitaLCD();
  3096   001B44  ECDC  F00D         	call	_HabilitaLCD	;wreg free
  3097                           
  3098                           ;LibLCDXC8.h: 253: RetardoLCD(4);
  3099   001B48  0E04               	movlw	4
  3100   001B4A  EC45  F00B         	call	_RetardoLCD
  3101   001B4E  0012               	return		;funcret
  3102   001B50                     __end_of_DireccionaLCD:
  3103                           	callstack 0
  3104                           
  3105 ;; *************** function _CrearCaracter *****************
  3106 ;; Defined at:
  3107 ;;		line 328 in file "LibLCDXC8.h"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;  pos             1    wreg     unsigned char 
  3110 ;;  data            1   36[COMRAM] PTR const unsigned char 
  3111 ;;		 -> banda2(8), banda1(8), 
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;  pos             1   38[COMRAM] unsigned char 
  3114 ;;  i               1   39[COMRAM] unsigned char 
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  1    wreg      void 
  3117 ;; Registers used:
  3118 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3124 ;;      Params:         1       0       0       0       0       0       0       0       0
  3125 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3126 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3127 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3128 ;;Total ram usage:        4 bytes
  3129 ;; Hardware stack levels used: 1
  3130 ;; Hardware stack levels required when called: 6
  3131 ;; This function calls:
  3132 ;;		_EnviaDato
  3133 ;;		_HabilitaLCD
  3134 ;;		_RetardoLCD
  3135 ;; This function is called by:
  3136 ;;		_Bienvenida
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           	psect	text16
  3141   001630                     __ptext16:
  3142                           	callstack 0
  3143   001630                     _CrearCaracter:
  3144                           	callstack 23
  3145                           
  3146                           ;incstack = 0
  3147                           ;CrearCaracter@pos stored from wreg
  3148   001630  6E27               	movwf	CrearCaracter@pos^0,c
  3149                           
  3150                           ;LibLCDXC8.h: 329: unsigned char i;;LibLCDXC8.h: 331: LATA3 = 0;
  3151   001632  9689               	bcf	3977,3,c	;volatile
  3152                           
  3153                           ;LibLCDXC8.h: 332: EnviaDato(0x40 + (pos * 8));
  3154   001634  5027               	movf	CrearCaracter@pos^0,w,c
  3155   001636  0D08               	mullw	8
  3156   001638  50F3               	movf	243,w,c
  3157   00163A  0F40               	addlw	64
  3158   00163C  EC6A  F00C         	call	_EnviaDato
  3159                           
  3160                           ;LibLCDXC8.h: 333: HabilitaLCD();
  3161   001640  ECDC  F00D         	call	_HabilitaLCD	;wreg free
  3162                           
  3163                           ;LibLCDXC8.h: 334: RetardoLCD(4);
  3164   001644  0E04               	movlw	4
  3165   001646  EC45  F00B         	call	_RetardoLCD
  3166                           
  3167                           ;LibLCDXC8.h: 337: LATA3 = 1;
  3168   00164A  8689               	bsf	3977,3,c	;volatile
  3169                           
  3170                           ;LibLCDXC8.h: 338: for(i = 0; i < 8; i++) {
  3171   00164C  6A28               	clrf	CrearCaracter@i^0,c
  3172   00164E                     l3906:
  3173                           
  3174                           ;LibLCDXC8.h: 339: EnviaDato(data[i]);
  3175   00164E  5025               	movf	CrearCaracter@data^0,w,c
  3176   001650  2428               	addwf	CrearCaracter@i^0,w,c
  3177   001652  6E26               	movwf	??_CrearCaracter^0,c
  3178   001654  C026  FFF6         	movff	??_CrearCaracter,tblptrl
  3179   001658                     	if	1	;There is more than 1 active tblptr byte
  3180   001658  0E08               	movlw	high __smallconst
  3181   00165A  6EF7               	movwf	tblptrh,c
  3182   00165C                     	endif
  3183   00165C                     	if	0	;tblptru may be non-zero
  3184   00165C                     	endif
  3185   00165C                     	if	0	;tblptru may be non-zero
  3186   00165C                     	endif
  3187   00165C  0008               	tblrd		*
  3188   00165E  50F5               	movf	tablat,w,c
  3189   001660  EC6A  F00C         	call	_EnviaDato
  3190                           
  3191                           ;LibLCDXC8.h: 340: HabilitaLCD();
  3192   001664  ECDC  F00D         	call	_HabilitaLCD	;wreg free
  3193                           
  3194                           ;LibLCDXC8.h: 341: RetardoLCD(4);
  3195   001668  0E04               	movlw	4
  3196   00166A  EC45  F00B         	call	_RetardoLCD
  3197   00166E  2A28               	incf	CrearCaracter@i^0,f,c
  3198   001670  0E07               	movlw	7
  3199   001672  6428               	cpfsgt	CrearCaracter@i^0,c
  3200   001674  D7EC               	goto	l3906
  3201                           
  3202                           ;LibLCDXC8.h: 342: };LibLCDXC8.h: 345: LATA3 = 0;
  3203   001676  9689               	bcf	3977,3,c	;volatile
  3204                           
  3205                           ;LibLCDXC8.h: 346: EnviaDato(0x80);
  3206   001678  0E80               	movlw	128
  3207   00167A  EC6A  F00C         	call	_EnviaDato
  3208                           
  3209                           ;LibLCDXC8.h: 347: HabilitaLCD();
  3210   00167E  ECDC  F00D         	call	_HabilitaLCD	;wreg free
  3211                           
  3212                           ;LibLCDXC8.h: 348: RetardoLCD(4);
  3213   001682  0E04               	movlw	4
  3214   001684  EC45  F00B         	call	_RetardoLCD
  3215   001688  0012               	return		;funcret
  3216   00168A                     __end_of_CrearCaracter:
  3217                           	callstack 0
  3218                           
  3219 ;; *************** function _EnviaDato *****************
  3220 ;; Defined at:
  3221 ;;		line 63 in file "LibLCDXC8.h"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;  a               1    wreg     unsigned char 
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;  a               1   35[COMRAM] unsigned char 
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      void 
  3228 ;; Registers used:
  3229 ;;		wreg, status,2, status,0, cstack
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3235 ;;      Params:         0       0       0       0       0       0       0       0       0
  3236 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3237 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3238 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3239 ;;Total ram usage:        2 bytes
  3240 ;; Hardware stack levels used: 1
  3241 ;; Hardware stack levels required when called: 5
  3242 ;; This function calls:
  3243 ;;		_HabilitaLCD
  3244 ;;		_RetardoLCD
  3245 ;; This function is called by:
  3246 ;;		_InicializaLCD
  3247 ;;		_BorraLCD
  3248 ;;		_EscribeLCD_c
  3249 ;;		_EscribeLCD_n8
  3250 ;;		_DireccionaLCD
  3251 ;;		_OcultarCursorLCD
  3252 ;;		_MostrarCursorLCD
  3253 ;;		_CrearCaracter
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           	psect	text17
  3258   0018D4                     __ptext17:
  3259                           	callstack 0
  3260   0018D4                     _EnviaDato:
  3261                           	callstack 24
  3262                           
  3263                           ;incstack = 0
  3264                           ;EnviaDato@a stored from wreg
  3265   0018D4  6E24               	movwf	EnviaDato@a^0,c
  3266                           
  3267                           ;LibLCDXC8.h: 64: if(interfaz==4){
  3268   0018D6  0E04               	movlw	4
  3269   0018D8  183E               	xorwf	_interfaz^0,w,c
  3270   0018DA  A4D8               	btfss	status,2,c
  3271   0018DC  D01A               	goto	l3780
  3272                           
  3273                           ;LibLCDXC8.h: 65: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3274   0018DE  C024  F023         	movff	EnviaDato@a,??_EnviaDato
  3275   0018E2  0EF0               	movlw	240
  3276   0018E4  1623               	andwf	??_EnviaDato^0,f,c
  3277   0018E6  508C               	movf	140,w,c	;volatile
  3278   0018E8  0B0F               	andlw	15
  3279   0018EA  1023               	iorwf	??_EnviaDato^0,w,c
  3280   0018EC  6E8C               	movwf	140,c	;volatile
  3281                           
  3282                           ;LibLCDXC8.h: 66: HabilitaLCD();
  3283   0018EE  ECDC  F00D         	call	_HabilitaLCD	;wreg free
  3284                           
  3285                           ;LibLCDXC8.h: 67: RetardoLCD(1);
  3286   0018F2  0E01               	movlw	1
  3287   0018F4  EC45  F00B         	call	_RetardoLCD
  3288                           
  3289                           ;LibLCDXC8.h: 68: LATD=(LATD & 0b00001111) | (a<<4);
  3290   0018F8  C024  F023         	movff	EnviaDato@a,??_EnviaDato
  3291   0018FC  3A23               	swapf	??_EnviaDato^0,f,c
  3292   0018FE  0EF0               	movlw	240
  3293   001900  1623               	andwf	??_EnviaDato^0,f,c
  3294   001902  508C               	movf	140,w,c	;volatile
  3295   001904  0B0F               	andlw	15
  3296   001906  1023               	iorwf	??_EnviaDato^0,w,c
  3297   001908  6E8C               	movwf	140,c	;volatile
  3298                           
  3299                           ;LibLCDXC8.h: 70: RetardoLCD(1);
  3300   00190A  0E01               	movlw	1
  3301   00190C  EC45  F00B         	call	_RetardoLCD
  3302                           
  3303                           ;LibLCDXC8.h: 71: }else if(interfaz==8){
  3304   001910  0012               	return	
  3305   001912                     l3780:
  3306   001912  0E08               	movlw	8
  3307   001914  183E               	xorwf	_interfaz^0,w,c
  3308   001916  A4D8               	btfss	status,2,c
  3309   001918  0012               	return	
  3310                           
  3311                           ;LibLCDXC8.h: 72: LATD=a;
  3312   00191A  C024  FF8C         	movff	EnviaDato@a,3980	;volatile
  3313   00191E  0012               	return		;funcret
  3314   001920                     __end_of_EnviaDato:
  3315                           	callstack 0
  3316                           
  3317 ;; *************** function _RetardoLCD *****************
  3318 ;; Defined at:
  3319 ;;		line 287 in file "LibLCDXC8.h"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;  a               1    wreg     unsigned char 
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;  a               1   33[COMRAM] unsigned char 
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  1    wreg      void 
  3326 ;; Registers used:
  3327 ;;		wreg, status,2, status,0
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3333 ;;      Params:         0       0       0       0       0       0       0       0       0
  3334 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3335 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3336 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3337 ;;Total ram usage:        2 bytes
  3338 ;; Hardware stack levels used: 1
  3339 ;; Hardware stack levels required when called: 4
  3340 ;; This function calls:
  3341 ;;		Nothing
  3342 ;; This function is called by:
  3343 ;;		_EnviaDato
  3344 ;;		_InicializaLCD
  3345 ;;		_BorraLCD
  3346 ;;		_EscribeLCD_c
  3347 ;;		_EscribeLCD_n8
  3348 ;;		_DireccionaLCD
  3349 ;;		_OcultarCursorLCD
  3350 ;;		_MostrarCursorLCD
  3351 ;;		_CrearCaracter
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355                           	psect	text18
  3356   00168A                     __ptext18:
  3357                           	callstack 0
  3358   00168A                     _RetardoLCD:
  3359                           	callstack 25
  3360                           
  3361                           ;incstack = 0
  3362                           ;RetardoLCD@a stored from wreg
  3363   00168A  6E22               	movwf	RetardoLCD@a^0,c
  3364                           
  3365                           ;LibLCDXC8.h: 288: switch(a){
  3366   00168C  D01B               	goto	l3766
  3367   00168E                     l3756:
  3368   00168E  0E05               	movlw	5
  3369   001690  6E21               	movwf	??_RetardoLCD^0,c
  3370   001692  0EDE               	movlw	222
  3371   001694                     u3767:
  3372   001694  2EE8               	decfsz	wreg,f,c
  3373   001696  D7FE               	bra	u3767
  3374   001698  2E21               	decfsz	??_RetardoLCD^0,f,c
  3375   00169A  D7FC               	bra	u3767
  3376                           
  3377                           ;LibLCDXC8.h: 291: break;
  3378   00169C  0012               	return	
  3379   00169E                     l3758:
  3380   00169E  0E53               	movlw	83
  3381   0016A0                     u3777:
  3382   0016A0  2EE8               	decfsz	wreg,f,c
  3383   0016A2  D7FE               	bra	u3777
  3384   0016A4  0000               	nop	
  3385                           
  3386                           ;LibLCDXC8.h: 293: _delay((unsigned long)((640)*(1000000/4000000.0)));
  3387   0016A6  0E35               	movlw	53
  3388   0016A8                     u3787:
  3389   0016A8  2EE8               	decfsz	wreg,f,c
  3390   0016AA  D7FE               	bra	u3787
  3391   0016AC  0000               	nop	
  3392                           
  3393                           ;LibLCDXC8.h: 295: break;
  3394   0016AE  0012               	return	
  3395   0016B0                     l3760:
  3396   0016B0  0E08               	movlw	8
  3397   0016B2                     u3797:
  3398   0016B2  2EE8               	decfsz	wreg,f,c
  3399   0016B4  D7FE               	bra	u3797
  3400   0016B6  0000               	nop	
  3401                           
  3402                           ;LibLCDXC8.h: 298: break;
  3403   0016B8  0012               	return	
  3404   0016BA                     l3762:
  3405   0016BA  0E03               	movlw	3
  3406   0016BC                     u3807:
  3407   0016BC  2EE8               	decfsz	wreg,f,c
  3408   0016BE  D7FE               	bra	u3807
  3409   0016C0  0000               	nop	
  3410                           
  3411                           ;LibLCDXC8.h: 301: break;
  3412   0016C2  0012               	return	
  3413   0016C4                     l3766:
  3414   0016C4  5022               	movf	RetardoLCD@a^0,w,c
  3415                           
  3416                           ; Switch size 1, requested type "simple"
  3417                           ; Number of cases is 4, Range of values is 1 to 4
  3418                           ; switch strategies available:
  3419                           ; Name         Instructions Cycles
  3420                           ; simple_byte           13     7 (average)
  3421                           ;	Chosen strategy is simple_byte
  3422   0016C6  0A01               	xorlw	1	; case 1
  3423   0016C8  B4D8               	btfsc	status,2,c
  3424   0016CA  D7E1               	goto	l3756
  3425   0016CC  0A03               	xorlw	3	; case 2
  3426   0016CE  B4D8               	btfsc	status,2,c
  3427   0016D0  D7E6               	goto	l3758
  3428   0016D2  0A01               	xorlw	1	; case 3
  3429   0016D4  B4D8               	btfsc	status,2,c
  3430   0016D6  D7EC               	goto	l3760
  3431   0016D8  0A07               	xorlw	7	; case 4
  3432   0016DA  A4D8               	btfss	status,2,c
  3433   0016DC  0012               	return	
  3434   0016DE  D7ED               	goto	l3762
  3435   0016E0                     __end_of_RetardoLCD:
  3436                           	callstack 0
  3437                           
  3438 ;; *************** function _HabilitaLCD *****************
  3439 ;; Defined at:
  3440 ;;		line 109 in file "LibLCDXC8.h"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;		None
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		wreg
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3454 ;;      Params:         0       0       0       0       0       0       0       0       0
  3455 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3456 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3457 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3458 ;;Total ram usage:        0 bytes
  3459 ;; Hardware stack levels used: 1
  3460 ;; Hardware stack levels required when called: 4
  3461 ;; This function calls:
  3462 ;;		Nothing
  3463 ;; This function is called by:
  3464 ;;		_EnviaDato
  3465 ;;		_InicializaLCD
  3466 ;;		_BorraLCD
  3467 ;;		_EscribeLCD_c
  3468 ;;		_EscribeLCD_n8
  3469 ;;		_DireccionaLCD
  3470 ;;		_OcultarCursorLCD
  3471 ;;		_MostrarCursorLCD
  3472 ;;		_CrearCaracter
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           	psect	text19
  3477   001BB8                     __ptext19:
  3478                           	callstack 0
  3479   001BB8                     _HabilitaLCD:
  3480                           	callstack 25
  3481                           
  3482                           ;LibLCDXC8.h: 111: LATA5=1;
  3483                           
  3484                           ;incstack = 0
  3485   001BB8  8A89               	bsf	3977,5,c	;volatile
  3486                           
  3487                           ;LibLCDXC8.h: 112: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3488   001BBA  0E03               	movlw	3
  3489   001BBC                     u3817:
  3490   001BBC  2EE8               	decfsz	wreg,f,c
  3491   001BBE  D7FE               	bra	u3817
  3492   001BC0  0000               	nop	
  3493                           
  3494                           ;LibLCDXC8.h: 114: LATA5=0;
  3495   001BC2  9A89               	bcf	3977,5,c	;volatile
  3496   001BC4  0012               	return		;funcret
  3497   001BC6                     __end_of_HabilitaLCD:
  3498                           	callstack 0
  3499                           
  3500 ;; *************** function _ConfiguraLCD *****************
  3501 ;; Defined at:
  3502 ;;		line 59 in file "LibLCDXC8.h"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;  a               1    wreg     unsigned char 
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;  a               1   32[COMRAM] unsigned char 
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  1    wreg      void 
  3509 ;; Registers used:
  3510 ;;		wreg, status,2, status,0
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3516 ;;      Params:         0       0       0       0       0       0       0       0       0
  3517 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3518 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3519 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3520 ;;Total ram usage:        1 bytes
  3521 ;; Hardware stack levels used: 1
  3522 ;; Hardware stack levels required when called: 4
  3523 ;; This function calls:
  3524 ;;		Nothing
  3525 ;; This function is called by:
  3526 ;;		_main
  3527 ;;		_Bienvenida
  3528 ;; This function uses a non-reentrant model
  3529 ;;
  3530                           
  3531                           	psect	text20
  3532   001B0C                     __ptext20:
  3533                           	callstack 0
  3534   001B0C                     _ConfiguraLCD:
  3535                           	callstack 26
  3536                           
  3537                           ;incstack = 0
  3538                           ;ConfiguraLCD@a stored from wreg
  3539   001B0C  6E21               	movwf	ConfiguraLCD@a^0,c
  3540                           
  3541                           ;LibLCDXC8.h: 60: if(a==4 | a ==8)
  3542   001B0E  0E04               	movlw	4
  3543   001B10  1821               	xorwf	ConfiguraLCD@a^0,w,c
  3544   001B12  B4D8               	btfsc	status,2,c
  3545   001B14  D004               	goto	u3180
  3546   001B16  0E08               	movlw	8
  3547   001B18  1821               	xorwf	ConfiguraLCD@a^0,w,c
  3548   001B1A  A4D8               	btfss	status,2,c
  3549   001B1C  0012               	return	
  3550   001B1E                     u3180:
  3551                           
  3552                           ;LibLCDXC8.h: 61: interfaz=a;
  3553   001B1E  C021  F03E         	movff	ConfiguraLCD@a,_interfaz
  3554   001B22  0012               	return		;funcret
  3555   001B24                     __end_of_ConfiguraLCD:
  3556                           	callstack 0
  3557                           
  3558 ;; *************** function _ISR *****************
  3559 ;; Defined at:
  3560 ;;		line 324 in file "Lab6SIMU.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;		None
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;  d               3   25[COMRAM] float 
  3565 ;;  valPWM          2   29[COMRAM] int 
  3566 ;;  dis             1   31[COMRAM] unsigned char 
  3567 ;;  valADC          1   28[COMRAM] unsigned char 
  3568 ;;  numAscii        0   25[COMRAM] unsigned char [0]
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3578 ;;      Params:         0       0       0       0       0       0       0       0       0
  3579 ;;      Locals:         7       0       0       0       0       0       0       0       0
  3580 ;;      Temps:         10       0       0       0       0       0       0       0       0
  3581 ;;      Totals:        17       0       0       0       0       0       0       0       0
  3582 ;;Total ram usage:       17 bytes
  3583 ;; Hardware stack levels used: 1
  3584 ;; Hardware stack levels required when called: 3
  3585 ;; This function calls:
  3586 ;;		_ConversionADC
  3587 ;;		_Transmitir
  3588 ;;		_TransmitirVar
  3589 ;;		___awdiv
  3590 ;;		___awtoft
  3591 ;;		___fttol
  3592 ;;		_numASCII
  3593 ;;		i2_DireccionaLCD
  3594 ;;		i2_EscribeLCD_c
  3595 ;;		i2_EscribeLCD_n8
  3596 ;;		i2_MedirDistancia
  3597 ;;		i2_MostrarNumeros
  3598 ;;		i2___lbdiv
  3599 ;; This function is called by:
  3600 ;;		Interrupt level 2
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           	psect	intcode
  3605   000008                     __pintcode:
  3606                           	callstack 0
  3607   000008                     _ISR:
  3608                           	callstack 22
  3609                           
  3610                           ;incstack = 0
  3611   000008  823F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3612   00000A  ED51  F004         	call	int_func,f	;refresh shadow registers
  3613                           
  3614                           	psect	intcode_body
  3615   0008A2                     __pintcode_body:
  3616                           	callstack 22
  3617   0008A2                     int_func:
  3618                           	callstack 22
  3619   0008A2  0006               	pop		; remove dummy address from shadow register refresh
  3620   0008A4  CFD9 F012          	movff	fsr2l,??_ISR+2
  3621   0008A8  CFDA F013          	movff	fsr2h,??_ISR+3
  3622   0008AC  CFF3 F014          	movff	prodl,??_ISR+4
  3623   0008B0  CFF4 F015          	movff	prodh,??_ISR+5
  3624   0008B4  CFF6 F016          	movff	tblptrl,??_ISR+6
  3625   0008B8  CFF7 F017          	movff	tblptrh,??_ISR+7
  3626   0008BC  CFF8 F018          	movff	tblptru,??_ISR+8
  3627   0008C0  CFF5 F019          	movff	tablat,??_ISR+9
  3628                           
  3629                           ;Lab6SIMU.c: 327: if(TMR0IF == 1){
  3630   0008C4  A4F2               	btfss	4082,2,c	;volatile
  3631   0008C6  D096               	goto	i2l339
  3632                           
  3633                           ;Lab6SIMU.c: 329: TMR0 = 49911;
  3634   0008C8  0EC2               	movlw	194
  3635   0008CA  6ED7               	movwf	215,c	;volatile
  3636   0008CC  0EF7               	movlw	247
  3637   0008CE  6ED6               	movwf	214,c	;volatile
  3638                           
  3639                           ;Lab6SIMU.c: 330: TMR0IF = 0;
  3640   0008D0  94F2               	bcf	4082,2,c	;volatile
  3641                           
  3642                           ;Lab6SIMU.c: 331: LATA1 = LATA1^1;
  3643   0008D2  B289               	btfsc	3977,1,c	;volatile
  3644   0008D4  D002               	goto	i2u268_40
  3645   0008D6  8289               	bsf	3977,1,c	;volatile
  3646   0008D8  D001               	goto	i2u269_45
  3647   0008DA                     i2u268_40:
  3648   0008DA  9289               	bcf	3977,1,c	;volatile
  3649   0008DC                     i2u269_45:
  3650                           
  3651                           ;Lab6SIMU.c: 337: if(LATA1 == 1){
  3652   0008DC  A289               	btfss	3977,1,c	;volatile
  3653   0008DE  D06F               	goto	i2l3576
  3654                           
  3655                           ;Lab6SIMU.c: 338: flagMotor= 0;
  3656   0008E0  6A2A               	clrf	_flagMotor^0,c
  3657                           
  3658                           ;Lab6SIMU.c: 340: unsigned char valADC = ConversionADC(0);
  3659   0008E2  0E00               	movlw	0
  3660   0008E4  EC76  F00D         	call	_ConversionADC
  3661   0008E8  6E1D               	movwf	ISR@valADC^0,c
  3662                           
  3663                           ;Lab6SIMU.c: 347: int valPWM = (valADC * 100/255);
  3664   0008EA  501D               	movf	ISR@valADC^0,w,c
  3665   0008EC  0D64               	mullw	100
  3666   0008EE  CFF3 F001          	movff	prodl,___awdiv@dividend
  3667   0008F2  CFF4 F002          	movff	prodh,___awdiv@dividend+1
  3668   0008F6  0E00               	movlw	0
  3669   0008F8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3670   0008FA  6803               	setf	___awdiv@divisor^0,c
  3671   0008FC  EC30  F00A         	call	___awdiv	;wreg free
  3672   000900  C001  F01E         	movff	?___awdiv,ISR@valPWM
  3673   000904  C002  F01F         	movff	?___awdiv+1,ISR@valPWM+1
  3674                           
  3675                           ;Lab6SIMU.c: 348: unsigned char numAscii[];;Lab6SIMU.c: 349: numASCII(valPWM, numAscii);
  3676   000908  C01E  F009         	movff	ISR@valPWM,numASCII@number
  3677   00090C  C01F  F00A         	movff	ISR@valPWM+1,numASCII@number+1
  3678   000910  0E1A               	movlw	low ISR@numAscii
  3679   000912  6E0B               	movwf	numASCII@ascii_values^0,c
  3680   000914  0E00               	movlw	high ISR@numAscii
  3681   000916  6E0C               	movwf	(numASCII@ascii_values+1)^0,c
  3682   000918  ECB9  F008         	call	_numASCII	;wreg free
  3683                           
  3684                           ;Lab6SIMU.c: 352: TransmitirVar("Valor de PWM: ");
  3685   00091C  0E56               	movlw	low STR_7
  3686   00091E  6E02               	movwf	TransmitirVar@buffer^0,c
  3687   000920  5002               	movf	TransmitirVar@buffer^0,w,c
  3688   000922  A4D8               	btfss	status,2,c
  3689   000924  0E08               	movlw	high __smallconst
  3690   000926  6E03               	movwf	(TransmitirVar@buffer+1)^0,c
  3691   000928  EC41  F00C         	call	_TransmitirVar	;wreg free
  3692                           
  3693                           ;Lab6SIMU.c: 353: TransmitirVar(numAscii);
  3694   00092C  0E1A               	movlw	low ISR@numAscii
  3695   00092E  6E02               	movwf	TransmitirVar@buffer^0,c
  3696   000930  0E00               	movlw	high ISR@numAscii
  3697   000932  6E03               	movwf	(TransmitirVar@buffer+1)^0,c
  3698   000934  EC41  F00C         	call	_TransmitirVar	;wreg free
  3699                           
  3700                           ;Lab6SIMU.c: 354: Transmitir('%');
  3701   000938  0E25               	movlw	37
  3702   00093A  ECEA  F00D         	call	_Transmitir
  3703                           
  3704                           ;Lab6SIMU.c: 355: TransmitirVar("\rDistancia objeto: ");
  3705   00093E  0E11               	movlw	low STR_8
  3706   000940  6E02               	movwf	TransmitirVar@buffer^0,c
  3707   000942  5002               	movf	TransmitirVar@buffer^0,w,c
  3708   000944  A4D8               	btfss	status,2,c
  3709   000946  0E08               	movlw	high __smallconst
  3710   000948  6E03               	movwf	(TransmitirVar@buffer+1)^0,c
  3711   00094A  EC41  F00C         	call	_TransmitirVar	;wreg free
  3712                           
  3713                           ;Lab6SIMU.c: 356: unsigned char dis = MedirDistancia();
  3714   00094E  ECA9  F00A         	call	i2_MedirDistancia	;wreg free
  3715   000952  6E20               	movwf	ISR@dis^0,c
  3716                           
  3717                           ;Lab6SIMU.c: 357: if(dis >= 10){
  3718   000954  0E09               	movlw	9
  3719   000956  6420               	cpfsgt	ISR@dis^0,c
  3720   000958  D002               	goto	i2l3568
  3721                           
  3722                           ;Lab6SIMU.c: 358: dis = 9;
  3723   00095A  0E09               	movlw	9
  3724   00095C  6E20               	movwf	ISR@dis^0,c
  3725   00095E                     i2l3568:
  3726                           
  3727                           ;Lab6SIMU.c: 359: };Lab6SIMU.c: 360: Transmitir(dis+48);
  3728   00095E  5020               	movf	ISR@dis^0,w,c
  3729   000960  0F30               	addlw	48
  3730   000962  ECEA  F00D         	call	_Transmitir
  3731                           
  3732                           ;Lab6SIMU.c: 361: Transmitir('\r');
  3733   000966  0E0D               	movlw	13
  3734   000968  ECEA  F00D         	call	_Transmitir
  3735                           
  3736                           ;Lab6SIMU.c: 365: float d = 240*valPWM/100;
  3737   00096C  0E00               	movlw	0
  3738   00096E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3739   000970  0E64               	movlw	100
  3740   000972  6E03               	movwf	___awdiv@divisor^0,c
  3741   000974  0EF0               	movlw	240
  3742   000976  021E               	mulwf	ISR@valPWM^0,c
  3743   000978  CFF3 F010          	movff	prodl,??_ISR
  3744   00097C  CFF4 F011          	movff	prodh,??_ISR+1
  3745   000980  021F               	mulwf	(ISR@valPWM+1)^0,c
  3746   000982  50F3               	movf	prodl,w,c
  3747   000984  2611               	addwf	(??_ISR+1)^0,f,c
  3748   000986  C010  F001         	movff	??_ISR,___awdiv@dividend
  3749   00098A  C011  F002         	movff	??_ISR+1,___awdiv@dividend+1
  3750   00098E  EC30  F00A         	call	___awdiv	;wreg free
  3751   000992  C001  F009         	movff	?___awdiv,___awtoft@c
  3752   000996  C002  F00A         	movff	?___awdiv+1,___awtoft@c+1
  3753   00099A  EC0A  F00D         	call	___awtoft	;wreg free
  3754   00099E  C009  F01A         	movff	?___awtoft,ISR@d
  3755   0009A2  C00A  F01B         	movff	?___awtoft+1,ISR@d+1
  3756   0009A6  C00B  F01C         	movff	?___awtoft+2,ISR@d+2
  3757                           
  3758                           ;Lab6SIMU.c: 366: CCPR1L=d;
  3759   0009AA  C01A  F001         	movff	ISR@d,___fttol@f1
  3760   0009AE  C01B  F002         	movff	ISR@d+1,___fttol@f1+1
  3761   0009B2  C01C  F003         	movff	ISR@d+2,___fttol@f1+2
  3762   0009B6  EC22  F009         	call	___fttol	;wreg free
  3763   0009BA  5001               	movf	?___fttol^0,w,c
  3764   0009BC  6EBE               	movwf	190,c	;volatile
  3765   0009BE                     i2l3576:
  3766                           
  3767                           ;Lab6SIMU.c: 370: };Lab6SIMU.c: 373: if (contador == 0 && inactive == 1) {
  3768   0009BE  5032               	movf	_contador^0,w,c
  3769   0009C0  A4D8               	btfss	status,2,c
  3770   0009C2  D005               	goto	i2l3582
  3771   0009C4  0431               	decf	_inactive^0,w,c
  3772   0009C6  A4D8               	btfss	status,2,c
  3773   0009C8  D002               	goto	i2l3582
  3774                           
  3775                           ;Lab6SIMU.c: 376: LATA4 =1;
  3776   0009CA  8889               	bsf	3977,4,c	;volatile
  3777                           
  3778                           ;Lab6SIMU.c: 377: inactive = 0;
  3779   0009CC  6A31               	clrf	_inactive^0,c
  3780   0009CE                     i2l3582:
  3781                           
  3782                           ;Lab6SIMU.c: 378: };Lab6SIMU.c: 381: contador++;
  3783   0009CE  2A32               	incf	_contador^0,f,c
  3784                           
  3785                           ;Lab6SIMU.c: 382: if(contador < 20) inactive = 0;
  3786   0009D0  0E14               	movlw	20
  3787   0009D2  6032               	cpfslt	_contador^0,c
  3788   0009D4  D001               	goto	i2l3588
  3789   0009D6  6A31               	clrf	_inactive^0,c
  3790   0009D8                     i2l3588:
  3791                           
  3792                           ;Lab6SIMU.c: 384: if(contador >= 20 && contador < 40){
  3793   0009D8  0E13               	movlw	19
  3794   0009DA  6432               	cpfsgt	_contador^0,c
  3795   0009DC  D007               	goto	i2l3596
  3796   0009DE  0E28               	movlw	40
  3797   0009E0  6032               	cpfslt	_contador^0,c
  3798   0009E2  D004               	goto	i2l3596
  3799                           
  3800                           ;Lab6SIMU.c: 386: LATA4 = 0;
  3801   0009E4  9889               	bcf	3977,4,c	;volatile
  3802                           
  3803                           ;Lab6SIMU.c: 387: inactive = 1;
  3804   0009E6  0E01               	movlw	1
  3805   0009E8  6E31               	movwf	_inactive^0,c
  3806                           
  3807                           ;Lab6SIMU.c: 388: } else if(contador >= 40){
  3808   0009EA  D004               	goto	i2l339
  3809   0009EC                     i2l3596:
  3810   0009EC  0E27               	movlw	39
  3811   0009EE  6432               	cpfsgt	_contador^0,c
  3812   0009F0  D001               	goto	i2l339
  3813   0009F2  0003               	sleep		;# 
  3814   0009F4                     i2l339:
  3815                           
  3816                           ;Lab6SIMU.c: 394: };Lab6SIMU.c: 395: };Lab6SIMU.c: 398: if(RBIF==1 ){
  3817   0009F4  A0F2               	btfss	4082,0,c	;volatile
  3818   0009F6  D0FC               	goto	i2l397
  3819                           
  3820                           ;Lab6SIMU.c: 400: if(PORTB!=0b11110000 && Iniciarpregunta == 1){
  3821   0009F8  0EF0               	movlw	240
  3822   0009FA  1881               	xorwf	129,w,c	;volatile
  3823   0009FC  B4D8               	btfsc	status,2,c
  3824   0009FE  D0DD               	goto	i2l3730
  3825   000A00  0434               	decf	_Iniciarpregunta^0,w,c
  3826   000A02  A4D8               	btfss	status,2,c
  3827   000A04  D0DA               	goto	i2l3730
  3828                           
  3829                           ;Lab6SIMU.c: 403: LATB=0b11111110;
  3830   000A06  0EFE               	movlw	254
  3831   000A08  6E8A               	movwf	138,c	;volatile
  3832                           
  3833                           ;Lab6SIMU.c: 406: if(RB4==0) {
  3834   000A0A  B881               	btfsc	3969,4,c	;volatile
  3835   000A0C  D008               	goto	i2l349
  3836                           
  3837                           ;Lab6SIMU.c: 408: faltantes = objetivo;
  3838   000A0E  C03A  F039         	movff	_objetivo,_faltantes
  3839                           
  3840                           ;Lab6SIMU.c: 409: contadas = objetivo - faltantes;
  3841   000A12  5039               	movf	_faltantes^0,w,c
  3842   000A14  5C3A               	subwf	_objetivo^0,w,c
  3843   000A16  6E38               	movwf	_contadas^0,c
  3844   000A18                     i2l3612:
  3845                           
  3846                           ;Lab6SIMU.c: 410: MostrarNumeros();
  3847   000A18  ECC5  F00B         	call	i2_MostrarNumeros	;wreg free
  3848                           
  3849                           ;Lab6SIMU.c: 411: }
  3850   000A1C  D0CC               	goto	i2l3728
  3851   000A1E                     i2l349:
  3852                           
  3853                           ;Lab6SIMU.c: 412: else if(RB5==0){
  3854   000A1E  BA81               	btfsc	3969,5,c	;volatile
  3855   000A20  D00B               	goto	i2l351
  3856                           
  3857                           ;Lab6SIMU.c: 413: input++;
  3858   000A22  2A37               	incf	_input^0,f,c
  3859                           
  3860                           ;Lab6SIMU.c: 414: if(input <= 2){
  3861   000A24  0E03               	movlw	3
  3862   000A26  6037               	cpfslt	_input^0,c
  3863   000A28  D0C6               	goto	i2l3728
  3864                           
  3865                           ;Lab6SIMU.c: 415: Tecla = 0;
  3866   000A2A  6A3B               	clrf	_Tecla^0,c
  3867                           
  3868                           ;Lab6SIMU.c: 416: EscribeLCD_n8(Tecla,1);
  3869   000A2C  0E01               	movlw	1
  3870   000A2E  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3871   000A30  503B               	movf	_Tecla^0,w,c
  3872   000A32  EC46  F008         	call	i2_EscribeLCD_n8
  3873                           
  3874                           ;Lab6SIMU.c: 417: };Lab6SIMU.c: 419: }
  3875   000A36  D0BF               	goto	i2l3728
  3876   000A38                     i2l351:
  3877                           
  3878                           ;Lab6SIMU.c: 420: else if(RB6==0){
  3879   000A38  BC81               	btfsc	3969,6,c	;volatile
  3880   000A3A  D004               	goto	i2l354
  3881                           
  3882                           ;Lab6SIMU.c: 422: contadas = objetivo;
  3883   000A3C  C03A  F038         	movff	_objetivo,_contadas
  3884                           
  3885                           ;Lab6SIMU.c: 423: faltantes = 0;
  3886   000A40  6A39               	clrf	_faltantes^0,c
  3887   000A42  D7EA               	goto	i2l3612
  3888   000A44                     i2l354:
  3889                           
  3890                           ;Lab6SIMU.c: 427: else if(RB7==0){
  3891   000A44  BE81               	btfsc	3969,7,c	;volatile
  3892   000A46  D006               	goto	i2l3628
  3893                           
  3894                           ;Lab6SIMU.c: 429: LATA4 = LATA4^1;
  3895   000A48  B889               	btfsc	3977,4,c	;volatile
  3896   000A4A  D002               	goto	i2u286_40
  3897   000A4C  8889               	bsf	3977,4,c	;volatile
  3898   000A4E  D0B3               	goto	i2l3728
  3899   000A50                     i2u286_40:
  3900   000A50  9889               	bcf	3977,4,c	;volatile
  3901                           
  3902                           ;Lab6SIMU.c: 430: }
  3903   000A52  D0B1               	goto	i2l3728
  3904   000A54                     i2l3628:
  3905                           
  3906                           ;Lab6SIMU.c: 431: else{;Lab6SIMU.c: 432: LATB=0b11111101;
  3907   000A54  0EFD               	movlw	253
  3908   000A56  6E8A               	movwf	138,c	;volatile
  3909                           
  3910                           ;Lab6SIMU.c: 435: if(RB4==0) {
  3911   000A58  B881               	btfsc	3969,4,c	;volatile
  3912   000A5A  D00C               	goto	i2l358
  3913                           
  3914                           ;Lab6SIMU.c: 436: input++;
  3915   000A5C  2A37               	incf	_input^0,f,c
  3916                           
  3917                           ;Lab6SIMU.c: 437: if(input <= 2){
  3918   000A5E  0E03               	movlw	3
  3919   000A60  6037               	cpfslt	_input^0,c
  3920   000A62  D0A9               	goto	i2l3728
  3921                           
  3922                           ;Lab6SIMU.c: 438: Tecla = 7;
  3923   000A64  0E07               	movlw	7
  3924   000A66  6E3B               	movwf	_Tecla^0,c
  3925                           
  3926                           ;Lab6SIMU.c: 439: EscribeLCD_n8(Tecla,1);
  3927   000A68  0E01               	movlw	1
  3928   000A6A  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3929   000A6C  503B               	movf	_Tecla^0,w,c
  3930   000A6E  EC46  F008         	call	i2_EscribeLCD_n8
  3931   000A72  D0A1               	goto	i2l3728
  3932   000A74                     i2l358:
  3933                           
  3934                           ;Lab6SIMU.c: 442: else if(RB5==0){
  3935   000A74  BA81               	btfsc	3969,5,c	;volatile
  3936   000A76  D00C               	goto	i2l361
  3937                           
  3938                           ;Lab6SIMU.c: 443: input++;
  3939   000A78  2A37               	incf	_input^0,f,c
  3940                           
  3941                           ;Lab6SIMU.c: 444: if(input <=2){
  3942   000A7A  0E03               	movlw	3
  3943   000A7C  6037               	cpfslt	_input^0,c
  3944   000A7E  D09B               	goto	i2l3728
  3945                           
  3946                           ;Lab6SIMU.c: 445: Tecla = 8;
  3947   000A80  0E08               	movlw	8
  3948   000A82  6E3B               	movwf	_Tecla^0,c
  3949                           
  3950                           ;Lab6SIMU.c: 446: EscribeLCD_n8(Tecla,1);
  3951   000A84  0E01               	movlw	1
  3952   000A86  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3953   000A88  503B               	movf	_Tecla^0,w,c
  3954   000A8A  EC46  F008         	call	i2_EscribeLCD_n8
  3955   000A8E  D093               	goto	i2l3728
  3956   000A90                     i2l361:
  3957                           
  3958                           ;Lab6SIMU.c: 449: else if(RB6==0){
  3959   000A90  BC81               	btfsc	3969,6,c	;volatile
  3960   000A92  D00C               	goto	i2l364
  3961                           
  3962                           ;Lab6SIMU.c: 450: input++;
  3963   000A94  2A37               	incf	_input^0,f,c
  3964                           
  3965                           ;Lab6SIMU.c: 451: if(input <=2){
  3966   000A96  0E03               	movlw	3
  3967   000A98  6037               	cpfslt	_input^0,c
  3968   000A9A  D08D               	goto	i2l3728
  3969                           
  3970                           ;Lab6SIMU.c: 452: Tecla = 9;
  3971   000A9C  0E09               	movlw	9
  3972   000A9E  6E3B               	movwf	_Tecla^0,c
  3973                           
  3974                           ;Lab6SIMU.c: 453: EscribeLCD_n8(Tecla,1);
  3975   000AA0  0E01               	movlw	1
  3976   000AA2  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3977   000AA4  503B               	movf	_Tecla^0,w,c
  3978   000AA6  EC46  F008         	call	i2_EscribeLCD_n8
  3979   000AAA  D085               	goto	i2l3728
  3980   000AAC                     i2l364:
  3981                           
  3982                           ;Lab6SIMU.c: 456: else if(RB7==0) {
  3983   000AAC  BE81               	btfsc	3969,7,c	;volatile
  3984   000AAE  D024               	goto	i2l3668
  3985                           
  3986                           ;Lab6SIMU.c: 460: if(input == 1){
  3987   000AB0  0437               	decf	_input^0,w,c
  3988   000AB2  A4D8               	btfss	status,2,c
  3989   000AB4  D00B               	goto	i2l3662
  3990                           
  3991                           ;Lab6SIMU.c: 461: DireccionaLCD(0xC0);
  3992   000AB6  0EC0               	movlw	192
  3993   000AB8  ECB3  F00D         	call	i2_DireccionaLCD
  3994                           
  3995                           ;Lab6SIMU.c: 463: EscribeLCD_c(' ');
  3996   000ABC  0E20               	movlw	32
  3997   000ABE  ECA8  F00D         	call	i2_EscribeLCD_c
  3998                           
  3999                           ;Lab6SIMU.c: 464: DireccionaLCD(0xC0);
  4000   000AC2  0EC0               	movlw	192
  4001   000AC4  ECB3  F00D         	call	i2_DireccionaLCD
  4002   000AC8                     i2l3660:
  4003                           
  4004                           ;Lab6SIMU.c: 465: input --;
  4005   000AC8  0637               	decf	_input^0,f,c
  4006                           
  4007                           ;Lab6SIMU.c: 467: } else if (input == 2){
  4008   000ACA  D075               	goto	i2l3728
  4009   000ACC                     i2l3662:
  4010   000ACC  0E02               	movlw	2
  4011   000ACE  1837               	xorwf	_input^0,w,c
  4012   000AD0  A4D8               	btfss	status,2,c
  4013   000AD2  D010               	goto	i2l370
  4014                           
  4015                           ;Lab6SIMU.c: 468: DireccionaLCD(0xC1);
  4016   000AD4  0EC1               	movlw	193
  4017   000AD6  ECB3  F00D         	call	i2_DireccionaLCD
  4018                           
  4019                           ;Lab6SIMU.c: 470: EscribeLCD_c(' ');
  4020   000ADA  0E20               	movlw	32
  4021   000ADC  ECA8  F00D         	call	i2_EscribeLCD_c
  4022                           
  4023                           ;Lab6SIMU.c: 471: DireccionaLCD(0xC1);
  4024   000AE0  0EC1               	movlw	193
  4025   000AE2  ECB3  F00D         	call	i2_DireccionaLCD
  4026                           
  4027                           ;Lab6SIMU.c: 472: Tecla = objetivo/10;
  4028   000AE6  0E0A               	movlw	10
  4029   000AE8  6E05               	movwf	i2___lbdiv@divisor^0,c
  4030   000AEA  503A               	movf	_objetivo^0,w,c
  4031   000AEC  ECEE  F00C         	call	i2___lbdiv
  4032   000AF0  6E3B               	movwf	_Tecla^0,c
  4033   000AF2  D7EA               	goto	i2l3660
  4034   000AF4                     i2l370:
  4035                           
  4036                           ;Lab6SIMU.c: 476: __nop();
  4037   000AF4  0000               	nop	
  4038   000AF6  D05F               	goto	i2l3728
  4039   000AF8                     i2l3668:
  4040                           
  4041                           ;Lab6SIMU.c: 481: else{;Lab6SIMU.c: 482: LATB=0b11111011;
  4042   000AF8  0EFB               	movlw	251
  4043   000AFA  6E8A               	movwf	138,c	;volatile
  4044                           
  4045                           ;Lab6SIMU.c: 485: if(RB4==0){
  4046   000AFC  B881               	btfsc	3969,4,c	;volatile
  4047   000AFE  D00C               	goto	i2l373
  4048                           
  4049                           ;Lab6SIMU.c: 486: input++;
  4050   000B00  2A37               	incf	_input^0,f,c
  4051                           
  4052                           ;Lab6SIMU.c: 487: if(input <=2){
  4053   000B02  0E03               	movlw	3
  4054   000B04  6037               	cpfslt	_input^0,c
  4055   000B06  D057               	goto	i2l3728
  4056                           
  4057                           ;Lab6SIMU.c: 488: Tecla = 4;
  4058   000B08  0E04               	movlw	4
  4059   000B0A  6E3B               	movwf	_Tecla^0,c
  4060                           
  4061                           ;Lab6SIMU.c: 489: EscribeLCD_n8(Tecla,1);
  4062   000B0C  0E01               	movlw	1
  4063   000B0E  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  4064   000B10  503B               	movf	_Tecla^0,w,c
  4065   000B12  EC46  F008         	call	i2_EscribeLCD_n8
  4066   000B16  D04F               	goto	i2l3728
  4067   000B18                     i2l373:
  4068                           
  4069                           ;Lab6SIMU.c: 492: else if(RB5==0){
  4070   000B18  BA81               	btfsc	3969,5,c	;volatile
  4071   000B1A  D00C               	goto	i2l376
  4072                           
  4073                           ;Lab6SIMU.c: 493: input++;
  4074   000B1C  2A37               	incf	_input^0,f,c
  4075                           
  4076                           ;Lab6SIMU.c: 494: if(input <=2){
  4077   000B1E  0E03               	movlw	3
  4078   000B20  6037               	cpfslt	_input^0,c
  4079   000B22  D049               	goto	i2l3728
  4080                           
  4081                           ;Lab6SIMU.c: 495: Tecla = 5;
  4082   000B24  0E05               	movlw	5
  4083   000B26  6E3B               	movwf	_Tecla^0,c
  4084                           
  4085                           ;Lab6SIMU.c: 496: EscribeLCD_n8(Tecla,1);
  4086   000B28  0E01               	movlw	1
  4087   000B2A  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  4088   000B2C  503B               	movf	_Tecla^0,w,c
  4089   000B2E  EC46  F008         	call	i2_EscribeLCD_n8
  4090   000B32  D041               	goto	i2l3728
  4091   000B34                     i2l376:
  4092                           
  4093                           ;Lab6SIMU.c: 499: else if(RB6==0){
  4094   000B34  BC81               	btfsc	3969,6,c	;volatile
  4095   000B36  D00C               	goto	i2l379
  4096                           
  4097                           ;Lab6SIMU.c: 500: input++;
  4098   000B38  2A37               	incf	_input^0,f,c
  4099                           
  4100                           ;Lab6SIMU.c: 501: if(input <=2){
  4101   000B3A  0E03               	movlw	3
  4102   000B3C  6037               	cpfslt	_input^0,c
  4103   000B3E  D03B               	goto	i2l3728
  4104                           
  4105                           ;Lab6SIMU.c: 502: Tecla = 6;
  4106   000B40  0E06               	movlw	6
  4107   000B42  6E3B               	movwf	_Tecla^0,c
  4108                           
  4109                           ;Lab6SIMU.c: 503: EscribeLCD_n8(Tecla,1);
  4110   000B44  0E01               	movlw	1
  4111   000B46  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  4112   000B48  503B               	movf	_Tecla^0,w,c
  4113   000B4A  EC46  F008         	call	i2_EscribeLCD_n8
  4114   000B4E  D033               	goto	i2l3728
  4115   000B50                     i2l379:
  4116                           
  4117                           ;Lab6SIMU.c: 506: else if(RB7==0){
  4118   000B50  BE81               	btfsc	3969,7,c	;volatile
  4119   000B52  D003               	goto	i2l3698
  4120                           
  4121                           ;Lab6SIMU.c: 508: emergency = 1;
  4122   000B54  0E01               	movlw	1
  4123   000B56  6E33               	movwf	_emergency^0,c
  4124                           
  4125                           ;Lab6SIMU.c: 509: }
  4126   000B58  D02E               	goto	i2l3728
  4127   000B5A                     i2l3698:
  4128                           
  4129                           ;Lab6SIMU.c: 510: else{;Lab6SIMU.c: 511: LATB=0b11110111;
  4130   000B5A  0EF7               	movlw	247
  4131   000B5C  6E8A               	movwf	138,c	;volatile
  4132                           
  4133                           ;Lab6SIMU.c: 514: if(RB4==0){
  4134   000B5E  B881               	btfsc	3969,4,c	;volatile
  4135   000B60  D00C               	goto	i2l384
  4136                           
  4137                           ;Lab6SIMU.c: 515: input++;
  4138   000B62  2A37               	incf	_input^0,f,c
  4139                           
  4140                           ;Lab6SIMU.c: 516: if(input <=2){
  4141   000B64  0E03               	movlw	3
  4142   000B66  6037               	cpfslt	_input^0,c
  4143   000B68  D026               	goto	i2l3728
  4144                           
  4145                           ;Lab6SIMU.c: 517: Tecla = 1;
  4146   000B6A  0E01               	movlw	1
  4147   000B6C  6E3B               	movwf	_Tecla^0,c
  4148                           
  4149                           ;Lab6SIMU.c: 518: EscribeLCD_n8(Tecla,1);
  4150   000B6E  0E01               	movlw	1
  4151   000B70  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  4152   000B72  503B               	movf	_Tecla^0,w,c
  4153   000B74  EC46  F008         	call	i2_EscribeLCD_n8
  4154   000B78  D01E               	goto	i2l3728
  4155   000B7A                     i2l384:
  4156                           
  4157                           ;Lab6SIMU.c: 521: else if(RB5==0){
  4158   000B7A  BA81               	btfsc	3969,5,c	;volatile
  4159   000B7C  D00C               	goto	i2l387
  4160                           
  4161                           ;Lab6SIMU.c: 522: input++;
  4162   000B7E  2A37               	incf	_input^0,f,c
  4163                           
  4164                           ;Lab6SIMU.c: 523: if(input <=2){
  4165   000B80  0E03               	movlw	3
  4166   000B82  6037               	cpfslt	_input^0,c
  4167   000B84  D018               	goto	i2l3728
  4168                           
  4169                           ;Lab6SIMU.c: 524: Tecla = 2;
  4170   000B86  0E02               	movlw	2
  4171   000B88  6E3B               	movwf	_Tecla^0,c
  4172                           
  4173                           ;Lab6SIMU.c: 525: EscribeLCD_n8(Tecla,1);
  4174   000B8A  0E01               	movlw	1
  4175   000B8C  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  4176   000B8E  503B               	movf	_Tecla^0,w,c
  4177   000B90  EC46  F008         	call	i2_EscribeLCD_n8
  4178   000B94  D010               	goto	i2l3728
  4179   000B96                     i2l387:
  4180                           
  4181                           ;Lab6SIMU.c: 528: else if(RB6==0){
  4182   000B96  BC81               	btfsc	3969,6,c	;volatile
  4183   000B98  D00C               	goto	i2l390
  4184                           
  4185                           ;Lab6SIMU.c: 529: input++;
  4186   000B9A  2A37               	incf	_input^0,f,c
  4187                           
  4188                           ;Lab6SIMU.c: 530: if(input <=2){
  4189   000B9C  0E03               	movlw	3
  4190   000B9E  6037               	cpfslt	_input^0,c
  4191   000BA0  D00A               	goto	i2l3728
  4192                           
  4193                           ;Lab6SIMU.c: 531: Tecla = 3;
  4194   000BA2  0E03               	movlw	3
  4195   000BA4  6E3B               	movwf	_Tecla^0,c
  4196                           
  4197                           ;Lab6SIMU.c: 532: EscribeLCD_n8(Tecla,1);
  4198   000BA6  0E01               	movlw	1
  4199   000BA8  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  4200   000BAA  503B               	movf	_Tecla^0,w,c
  4201   000BAC  EC46  F008         	call	i2_EscribeLCD_n8
  4202   000BB0  D002               	goto	i2l3728
  4203   000BB2                     i2l390:
  4204                           
  4205                           ;Lab6SIMU.c: 535: else if(RB7==0){
  4206   000BB2  AE81               	btfss	3969,7,c	;volatile
  4207                           
  4208                           ;Lab6SIMU.c: 537: ok++;
  4209   000BB4  2A35               	incf	_ok^0,f,c
  4210   000BB6                     i2l3728:
  4211                           
  4212                           ;Lab6SIMU.c: 538: };Lab6SIMU.c: 539: };Lab6SIMU.c: 540: };Lab6SIMU.c: 541: };Lab6SIMU.c:
      +                           542: LATB=0b11110000;
  4213   000BB6  0EF0               	movlw	240
  4214   000BB8  6E8A               	movwf	138,c	;volatile
  4215   000BBA                     i2l3730:
  4216                           
  4217                           ;Lab6SIMU.c: 545: };Lab6SIMU.c: 549: if(ok == 0){
  4218   000BBA  5035               	movf	_ok^0,w,c
  4219   000BBC  A4D8               	btfss	status,2,c
  4220   000BBE  D007               	goto	i2l3736
  4221                           
  4222                           ;Lab6SIMU.c: 550: if(input == 1){
  4223   000BC0  0437               	decf	_input^0,w,c
  4224   000BC2  A4D8               	btfss	status,2,c
  4225   000BC4  D004               	goto	i2l3736
  4226                           
  4227                           ;Lab6SIMU.c: 551: objetivo = Tecla*10;
  4228   000BC6  503B               	movf	_Tecla^0,w,c
  4229   000BC8  0D0A               	mullw	10
  4230   000BCA  CFF3 F03A          	movff	prodl,_objetivo
  4231   000BCE                     i2l3736:
  4232                           
  4233                           ;Lab6SIMU.c: 553: };Lab6SIMU.c: 554: };Lab6SIMU.c: 556: if(input > 2 && block == 0){
  4234   000BCE  0E02               	movlw	2
  4235   000BD0  6437               	cpfsgt	_input^0,c
  4236   000BD2  D005               	goto	i2l3742
  4237   000BD4  5036               	movf	_block^0,w,c
  4238   000BD6  A4D8               	btfss	status,2,c
  4239   000BD8  D002               	goto	i2l3742
  4240                           
  4241                           ;Lab6SIMU.c: 558: input =2;
  4242   000BDA  0E02               	movlw	2
  4243   000BDC  6E37               	movwf	_input^0,c
  4244   000BDE                     i2l3742:
  4245                           
  4246                           ;Lab6SIMU.c: 559: };Lab6SIMU.c: 561: _delay((unsigned long)((250)*(1000000/4000.0)));
  4247   000BDE  0E52               	movlw	82
  4248   000BE0  6E10               	movwf	??_ISR^0,c
  4249   000BE2  0E2A               	movlw	42
  4250   000BE4                     i2u382_47:
  4251   000BE4  2EE8               	decfsz	wreg,f,c
  4252   000BE6  D7FE               	bra	i2u382_47
  4253   000BE8  2E10               	decfsz	??_ISR^0,f,c
  4254   000BEA  D7FC               	bra	i2u382_47
  4255                           
  4256                           ;Lab6SIMU.c: 562: contador = 0;
  4257   000BEC  6A32               	clrf	_contador^0,c
  4258                           
  4259                           ;Lab6SIMU.c: 564: RBIF=0;
  4260   000BEE  90F2               	bcf	4082,0,c	;volatile
  4261   000BF0                     i2l397:
  4262   000BF0  C019  FFF5         	movff	??_ISR+9,tablat
  4263   000BF4  C018  FFF8         	movff	??_ISR+8,tblptru
  4264   000BF8  C017  FFF7         	movff	??_ISR+7,tblptrh
  4265   000BFC  C016  FFF6         	movff	??_ISR+6,tblptrl
  4266   000C00  C015  FFF4         	movff	??_ISR+5,prodh
  4267   000C04  C014  FFF3         	movff	??_ISR+4,prodl
  4268   000C08  C013  FFDA         	movff	??_ISR+3,fsr2h
  4269   000C0C  C012  FFD9         	movff	??_ISR+2,fsr2l
  4270   000C10  923F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4271   000C12  0011               	retfie		f
  4272   000C14                     __end_of_ISR:
  4273                           	callstack 0
  4274                           
  4275 ;; *************** function i2_MostrarNumeros *****************
  4276 ;; Defined at:
  4277 ;;		line 572 in file "Lab6SIMU.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;		None
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;		None
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  1    wreg      void 
  4284 ;; Registers used:
  4285 ;;		wreg, status,2, status,0, cstack
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4291 ;;      Params:         0       0       0       0       0       0       0       0       0
  4292 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4293 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4294 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4295 ;;Total ram usage:        0 bytes
  4296 ;; Hardware stack levels used: 1
  4297 ;; Hardware stack levels required when called: 1
  4298 ;; This function calls:
  4299 ;;		i2___lbmod
  4300 ;; This function is called by:
  4301 ;;		_ISR
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304                           
  4305                           	psect	text22
  4306   00178A                     __ptext22:
  4307                           	callstack 0
  4308   00178A                     i2_MostrarNumeros:
  4309                           	callstack 23
  4310                           
  4311                           ;Lab6SIMU.c: 575: LATD = contadas % 10;
  4312                           
  4313                           ;incstack = 0
  4314   00178A  0E0A               	movlw	10
  4315   00178C  6E01               	movwf	i2___lbmod@divisor^0,c
  4316   00178E  5038               	movf	_contadas^0,w,c
  4317   001790  EC62  F00D         	call	i2___lbmod
  4318   001794  6E8C               	movwf	140,c	;volatile
  4319                           
  4320                           ;Lab6SIMU.c: 578: if(contadas<10){
  4321   001796  0E0A               	movlw	10
  4322   001798  6038               	cpfslt	_contadas^0,c
  4323   00179A  D003               	goto	i2l3284
  4324                           
  4325                           ;Lab6SIMU.c: 580: LATE = 0b101;
  4326   00179C  0E05               	movlw	5
  4327   00179E  6E8D               	movwf	141,c	;volatile
  4328                           
  4329                           ;Lab6SIMU.c: 581: } else if(contadas<20){
  4330   0017A0  0012               	return	
  4331   0017A2                     i2l3284:
  4332   0017A2  0E14               	movlw	20
  4333   0017A4  6038               	cpfslt	_contadas^0,c
  4334   0017A6  D003               	goto	i2l3288
  4335                           
  4336                           ;Lab6SIMU.c: 583: LATE=0b100;
  4337   0017A8  0E04               	movlw	4
  4338   0017AA  6E8D               	movwf	141,c	;volatile
  4339                           
  4340                           ;Lab6SIMU.c: 584: } else if (contadas<30){
  4341   0017AC  0012               	return	
  4342   0017AE                     i2l3288:
  4343   0017AE  0E1E               	movlw	30
  4344   0017B0  6038               	cpfslt	_contadas^0,c
  4345   0017B2  D003               	goto	i2l3292
  4346                           
  4347                           ;Lab6SIMU.c: 586: LATE=0b110;
  4348   0017B4  0E06               	movlw	6
  4349   0017B6  6E8D               	movwf	141,c	;volatile
  4350                           
  4351                           ;Lab6SIMU.c: 587: } else if (contadas<40){
  4352   0017B8  0012               	return	
  4353   0017BA                     i2l3292:
  4354   0017BA  0E28               	movlw	40
  4355   0017BC  6038               	cpfslt	_contadas^0,c
  4356   0017BE  D003               	goto	i2l3296
  4357                           
  4358                           ;Lab6SIMU.c: 589: LATE=0b010;
  4359   0017C0  0E02               	movlw	2
  4360   0017C2  6E8D               	movwf	141,c	;volatile
  4361                           
  4362                           ;Lab6SIMU.c: 590: } else if (contadas<50){
  4363   0017C4  0012               	return	
  4364   0017C6                     i2l3296:
  4365   0017C6  0E32               	movlw	50
  4366   0017C8  6038               	cpfslt	_contadas^0,c
  4367   0017CA  D003               	goto	i2l3300
  4368                           
  4369                           ;Lab6SIMU.c: 592: LATE = 0b011;
  4370   0017CC  0E03               	movlw	3
  4371   0017CE  6E8D               	movwf	141,c	;volatile
  4372                           
  4373                           ;Lab6SIMU.c: 593: } else if (contadas<60){
  4374   0017D0  0012               	return	
  4375   0017D2                     i2l3300:
  4376   0017D2  0E3C               	movlw	60
  4377   0017D4  6038               	cpfslt	_contadas^0,c
  4378   0017D6  0012               	return	
  4379                           
  4380                           ;Lab6SIMU.c: 595: LATE = 0b111;
  4381   0017D8  0E07               	movlw	7
  4382   0017DA  6E8D               	movwf	141,c	;volatile
  4383   0017DC  0012               	return	
  4384   0017DE                     __end_ofi2_MostrarNumeros:
  4385                           	callstack 0
  4386                           
  4387 ;; *************** function i2_MedirDistancia *****************
  4388 ;; Defined at:
  4389 ;;		line 702 in file "Lab6SIMU.c"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;		None
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;  aux             1    7[COMRAM] unsigned char 
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  1    wreg      unsigned char 
  4396 ;; Registers used:
  4397 ;;		wreg, status,2, status,0, cstack
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4403 ;;      Params:         0       0       0       0       0       0       0       0       0
  4404 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4406 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4407 ;;Total ram usage:        1 bytes
  4408 ;; Hardware stack levels used: 1
  4409 ;; Hardware stack levels required when called: 1
  4410 ;; This function calls:
  4411 ;;		i2___lwdiv
  4412 ;; This function is called by:
  4413 ;;		_ISR
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text23
  4418   001552                     __ptext23:
  4419                           	callstack 0
  4420   001552                     i2_MedirDistancia:
  4421                           	callstack 23
  4422                           
  4423                           ;Lab6SIMU.c: 704: CCP2CON=0b00000100;
  4424                           
  4425                           ;incstack = 0
  4426   001552  0E04               	movlw	4
  4427   001554  6EBA               	movwf	186,c	;volatile
  4428                           
  4429                           ;Lab6SIMU.c: 705: TMR1=0;
  4430   001556  0E00               	movlw	0
  4431   001558  6ECF               	movwf	207,c	;volatile
  4432   00155A  0E00               	movlw	0
  4433   00155C  6ECE               	movwf	206,c	;volatile
  4434                           
  4435                           ;Lab6SIMU.c: 706: CCP2IF=0;
  4436   00155E  90A1               	bcf	4001,0,c	;volatile
  4437                           
  4438                           ;Lab6SIMU.c: 707: RC0=1;
  4439   001560  8082               	bsf	3970,0,c	;volatile
  4440                           
  4441                           ;Lab6SIMU.c: 708: _delay((unsigned long)((10)*(1000000/4000000.0)));
  4442   001562  D000               	nop2		;2 cycle nop
  4443                           
  4444                           ;Lab6SIMU.c: 709: RC0=0;
  4445   001564  9082               	bcf	3970,0,c	;volatile
  4446                           
  4447                           ;Lab6SIMU.c: 710: etimeout=1;
  4448   001566  0E01               	movlw	1
  4449   001568  6E30               	movwf	_etimeout^0,c
  4450   00156A                     i2l463:
  4451   00156A  B282               	btfsc	3970,1,c	;volatile
  4452   00156C  D003               	goto	i2u244_40
  4453   00156E  0430               	decf	_etimeout^0,w,c
  4454   001570  B4D8               	btfsc	status,2,c
  4455   001572  D7FB               	goto	i2l463
  4456   001574                     i2u244_40:
  4457                           
  4458                           ;Lab6SIMU.c: 713: if(etimeout==0){
  4459   001574  5030               	movf	_etimeout^0,w,c
  4460   001576  A4D8               	btfss	status,2,c
  4461   001578  D002               	goto	i2l468
  4462                           
  4463                           ;Lab6SIMU.c: 714: return 0;
  4464   00157A  0E00               	movlw	0
  4465   00157C  0012               	return	
  4466   00157E                     i2l468:
  4467                           
  4468                           ;Lab6SIMU.c: 715: };Lab6SIMU.c: 716: TMR1ON=1;
  4469   00157E  80CD               	bsf	4045,0,c	;volatile
  4470   001580                     i2l470:
  4471   001580  B0A1               	btfsc	4001,0,c	;volatile
  4472   001582  D002               	goto	i2u247_40
  4473   001584  A09E               	btfss	3998,0,c	;volatile
  4474   001586  D7FC               	goto	i2l470
  4475   001588                     i2u247_40:
  4476                           
  4477                           ;Lab6SIMU.c: 718: TMR1ON=0;
  4478   001588  90CD               	bcf	4045,0,c	;volatile
  4479                           
  4480                           ;Lab6SIMU.c: 719: if(TMR1IF==1)
  4481   00158A  A09E               	btfss	3998,0,c	;volatile
  4482   00158C  D002               	goto	i2l3328
  4483                           
  4484                           ;Lab6SIMU.c: 720: aux=255;
  4485   00158E  6808               	setf	i2MedirDistancia@aux^0,c
  4486   001590  D016               	goto	i2l3334
  4487   001592                     i2l3328:
  4488                           
  4489                           ;Lab6SIMU.c: 721: else{;Lab6SIMU.c: 722: if(CCPR2>=3556)
  4490   001592  0EE4               	movlw	228
  4491   001594  5CBB               	subwf	187,w,c	;volatile
  4492   001596  0E0D               	movlw	13
  4493   001598  58BC               	subwfb	188,w,c	;volatile
  4494   00159A  A0D8               	btfss	status,0,c
  4495   00159C  D004               	goto	i2l3332
  4496                           
  4497                           ;Lab6SIMU.c: 723: CCPR2=3556;
  4498   00159E  0E0D               	movlw	13
  4499   0015A0  6EBC               	movwf	188,c	;volatile
  4500   0015A2  0EE4               	movlw	228
  4501   0015A4  6EBB               	movwf	187,c	;volatile
  4502   0015A6                     i2l3332:
  4503                           
  4504                           ;Lab6SIMU.c: 724: aux=CCPR2/(14) ;
  4505   0015A6  CFBB F001          	movff	4027,i2___lwdiv@dividend	;volatile
  4506   0015AA  CFBC F002          	movff	4028,i2___lwdiv@dividend+1	;volatile
  4507   0015AE  0E00               	movlw	0
  4508   0015B0  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
  4509   0015B2  0E0E               	movlw	14
  4510   0015B4  6E03               	movwf	i2___lwdiv@divisor^0,c
  4511   0015B6  EC18  F00C         	call	i2___lwdiv	;wreg free
  4512   0015BA  5001               	movf	?i2___lwdiv^0,w,c
  4513   0015BC  6E08               	movwf	i2MedirDistancia@aux^0,c
  4514   0015BE                     i2l3334:
  4515                           
  4516                           ;Lab6SIMU.c: 725: };Lab6SIMU.c: 727: return aux;
  4517   0015BE  5008               	movf	i2MedirDistancia@aux^0,w,c
  4518   0015C0  0012               	return		;funcret
  4519   0015C2                     __end_ofi2_MedirDistancia:
  4520                           	callstack 0
  4521                           
  4522 ;; *************** function i2___lwdiv *****************
  4523 ;; Defined at:
  4524 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lwdiv.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;  dividend        2    0[COMRAM] unsigned int 
  4527 ;;  divisor         2    2[COMRAM] unsigned int 
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;  quotient        2    4[COMRAM] unsigned int 
  4530 ;;  counter         1    6[COMRAM] unsigned char 
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  2    0[COMRAM] unsigned int 
  4533 ;; Registers used:
  4534 ;;		wreg, status,2, status,0
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4540 ;;      Params:         4       0       0       0       0       0       0       0       0
  4541 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4542 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4543 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4544 ;;Total ram usage:        7 bytes
  4545 ;; Hardware stack levels used: 1
  4546 ;; This function calls:
  4547 ;;		Nothing
  4548 ;; This function is called by:
  4549 ;;		i2_MedirDistancia
  4550 ;; This function uses a non-reentrant model
  4551 ;;
  4552                           
  4553                           	psect	text24
  4554   001830                     __ptext24:
  4555                           	callstack 0
  4556   001830                     i2___lwdiv:
  4557                           	callstack 23
  4558                           
  4559                           ;incstack = 0
  4560   001830  0E00               	movlw	0
  4561   001832  6E06               	movwf	(i2___lwdiv@quotient+1)^0,c
  4562   001834  0E00               	movlw	0
  4563   001836  6E05               	movwf	i2___lwdiv@quotient^0,c
  4564   001838  5003               	movf	i2___lwdiv@divisor^0,w,c
  4565   00183A  1004               	iorwf	(i2___lwdiv@divisor+1)^0,w,c
  4566   00183C  B4D8               	btfsc	status,2,c
  4567   00183E  D01C               	goto	i2l978
  4568   001840  0E01               	movlw	1
  4569   001842  6E07               	movwf	i2___lwdiv@counter^0,c
  4570   001844  D004               	goto	i2l2944
  4571   001846                     i2l2942:
  4572   001846  90D8               	bcf	status,0,c
  4573   001848  3603               	rlcf	i2___lwdiv@divisor^0,f,c
  4574   00184A  3604               	rlcf	(i2___lwdiv@divisor+1)^0,f,c
  4575   00184C  2A07               	incf	i2___lwdiv@counter^0,f,c
  4576   00184E                     i2l2944:
  4577   00184E  AE04               	btfss	(i2___lwdiv@divisor+1)^0,7,c
  4578   001850  D7FA               	goto	i2l2942
  4579   001852                     i2u203_40:
  4580   001852  90D8               	bcf	status,0,c
  4581   001854  3605               	rlcf	i2___lwdiv@quotient^0,f,c
  4582   001856  3606               	rlcf	(i2___lwdiv@quotient+1)^0,f,c
  4583   001858  5003               	movf	i2___lwdiv@divisor^0,w,c
  4584   00185A  5C01               	subwf	i2___lwdiv@dividend^0,w,c
  4585   00185C  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
  4586   00185E  5802               	subwfb	(i2___lwdiv@dividend+1)^0,w,c
  4587   001860  A0D8               	btfss	status,0,c
  4588   001862  D005               	goto	i2l2954
  4589   001864  5003               	movf	i2___lwdiv@divisor^0,w,c
  4590   001866  5E01               	subwf	i2___lwdiv@dividend^0,f,c
  4591   001868  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
  4592   00186A  5A02               	subwfb	(i2___lwdiv@dividend+1)^0,f,c
  4593   00186C  8005               	bsf	i2___lwdiv@quotient^0,0,c
  4594   00186E                     i2l2954:
  4595   00186E  90D8               	bcf	status,0,c
  4596   001870  3204               	rrcf	(i2___lwdiv@divisor+1)^0,f,c
  4597   001872  3203               	rrcf	i2___lwdiv@divisor^0,f,c
  4598   001874  2E07               	decfsz	i2___lwdiv@counter^0,f,c
  4599   001876  D7ED               	goto	i2u203_40
  4600   001878                     i2l978:
  4601   001878  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  4602   00187C  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  4603   001880  0012               	return		;funcret
  4604   001882                     __end_ofi2___lwdiv:
  4605                           	callstack 0
  4606                           
  4607 ;; *************** function i2_EscribeLCD_n8 *****************
  4608 ;; Defined at:
  4609 ;;		line 149 in file "LibLCDXC8.h"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;  a               1    wreg     unsigned char 
  4612 ;;  b               1    8[COMRAM] unsigned char 
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;  a               1   12[COMRAM] unsigned char 
  4615 ;;  unidad          1   11[COMRAM] unsigned char 
  4616 ;;  decena          1   10[COMRAM] unsigned char 
  4617 ;;  centena         1    9[COMRAM] unsigned char 
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  1    wreg      void 
  4620 ;; Registers used:
  4621 ;;		wreg, status,2, status,0, cstack
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4627 ;;      Params:         1       0       0       0       0       0       0       0       0
  4628 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4630 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4631 ;;Total ram usage:        5 bytes
  4632 ;; Hardware stack levels used: 1
  4633 ;; Hardware stack levels required when called: 2
  4634 ;; This function calls:
  4635 ;;		i2_EnviaDato
  4636 ;;		i2_HabilitaLCD
  4637 ;;		i2_RetardoLCD
  4638 ;;		i2___lbdiv
  4639 ;;		i2___lbmod
  4640 ;; This function is called by:
  4641 ;;		_ISR
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           	psect	text25
  4646   00108C                     __ptext25:
  4647                           	callstack 0
  4648   00108C                     i2_EscribeLCD_n8:
  4649                           	callstack 22
  4650                           
  4651                           ;incstack = 0
  4652                           ;i2EscribeLCD_n8@a stored from wreg
  4653   00108C  6E0D               	movwf	i2EscribeLCD_n8@a^0,c
  4654                           
  4655                           ;LibLCDXC8.h: 154: unsigned char centena,decena,unidad;;LibLCDXC8.h: 155: LATA3=1;
  4656   00108E  8689               	bsf	3977,3,c	;volatile
  4657                           
  4658                           ;LibLCDXC8.h: 156: switch(b){
  4659   001090  D065               	goto	i2l3268
  4660   001092                     i2l3236:
  4661   001092  0E0A               	movlw	10
  4662   001094  6E01               	movwf	i2___lbmod@divisor^0,c
  4663   001096  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4664   001098  EC62  F00D         	call	i2___lbmod
  4665   00109C  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  4666                           
  4667                           ;LibLCDXC8.h: 158: EnviaDato(unidad+48);
  4668   00109E  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  4669   0010A0  0F30               	addlw	48
  4670   0010A2  EC90  F00C         	call	i2_EnviaDato
  4671                           
  4672                           ;LibLCDXC8.h: 159: HabilitaLCD();
  4673   0010A6  ECE3  F00D         	call	i2_HabilitaLCD	;wreg free
  4674                           
  4675                           ;LibLCDXC8.h: 160: RetardoLCD(4);
  4676   0010AA  0E04               	movlw	4
  4677   0010AC  EC70  F00B         	call	i2_RetardoLCD
  4678                           
  4679                           ;LibLCDXC8.h: 161: break;
  4680   0010B0  0012               	return	
  4681   0010B2                     i2l3242:
  4682   0010B2  0E0A               	movlw	10
  4683   0010B4  6E05               	movwf	i2___lbdiv@divisor^0,c
  4684   0010B6  0E64               	movlw	100
  4685   0010B8  6E01               	movwf	i2___lbmod@divisor^0,c
  4686   0010BA  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4687   0010BC  EC62  F00D         	call	i2___lbmod
  4688   0010C0  ECEE  F00C         	call	i2___lbdiv
  4689   0010C4  6E0B               	movwf	i2EscribeLCD_n8@decena^0,c
  4690                           
  4691                           ;LibLCDXC8.h: 163: unidad=a%10;
  4692   0010C6  0E0A               	movlw	10
  4693   0010C8  6E01               	movwf	i2___lbmod@divisor^0,c
  4694   0010CA  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4695   0010CC  EC62  F00D         	call	i2___lbmod
  4696   0010D0  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  4697                           
  4698                           ;LibLCDXC8.h: 164: EnviaDato(decena+48);
  4699   0010D2  500B               	movf	i2EscribeLCD_n8@decena^0,w,c
  4700   0010D4  0F30               	addlw	48
  4701   0010D6  EC90  F00C         	call	i2_EnviaDato
  4702                           
  4703                           ;LibLCDXC8.h: 165: HabilitaLCD();
  4704   0010DA  ECE3  F00D         	call	i2_HabilitaLCD	;wreg free
  4705                           
  4706                           ;LibLCDXC8.h: 166: RetardoLCD(4);
  4707   0010DE  0E04               	movlw	4
  4708   0010E0  EC70  F00B         	call	i2_RetardoLCD
  4709                           
  4710                           ;LibLCDXC8.h: 167: EnviaDato(unidad+48);
  4711   0010E4  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  4712   0010E6  0F30               	addlw	48
  4713   0010E8  EC90  F00C         	call	i2_EnviaDato
  4714                           
  4715                           ;LibLCDXC8.h: 168: HabilitaLCD();
  4716   0010EC  ECE3  F00D         	call	i2_HabilitaLCD	;wreg free
  4717                           
  4718                           ;LibLCDXC8.h: 169: RetardoLCD(4);
  4719   0010F0  0E04               	movlw	4
  4720   0010F2  EC70  F00B         	call	i2_RetardoLCD
  4721                           
  4722                           ;LibLCDXC8.h: 170: break;
  4723   0010F6  0012               	return	
  4724   0010F8                     i2l3252:
  4725   0010F8  0E64               	movlw	100
  4726   0010FA  6E05               	movwf	i2___lbdiv@divisor^0,c
  4727   0010FC  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4728   0010FE  ECEE  F00C         	call	i2___lbdiv
  4729   001102  6E0A               	movwf	i2EscribeLCD_n8@centena^0,c
  4730                           
  4731                           ;LibLCDXC8.h: 172: decena=(a%100)/10;
  4732   001104  0E0A               	movlw	10
  4733   001106  6E05               	movwf	i2___lbdiv@divisor^0,c
  4734   001108  0E64               	movlw	100
  4735   00110A  6E01               	movwf	i2___lbmod@divisor^0,c
  4736   00110C  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4737   00110E  EC62  F00D         	call	i2___lbmod
  4738   001112  ECEE  F00C         	call	i2___lbdiv
  4739   001116  6E0B               	movwf	i2EscribeLCD_n8@decena^0,c
  4740                           
  4741                           ;LibLCDXC8.h: 173: unidad=a%10;
  4742   001118  0E0A               	movlw	10
  4743   00111A  6E01               	movwf	i2___lbmod@divisor^0,c
  4744   00111C  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4745   00111E  EC62  F00D         	call	i2___lbmod
  4746   001122  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  4747                           
  4748                           ;LibLCDXC8.h: 174: EnviaDato(centena+48);
  4749   001124  500A               	movf	i2EscribeLCD_n8@centena^0,w,c
  4750   001126  0F30               	addlw	48
  4751   001128  EC90  F00C         	call	i2_EnviaDato
  4752                           
  4753                           ;LibLCDXC8.h: 175: HabilitaLCD();
  4754   00112C  ECE3  F00D         	call	i2_HabilitaLCD	;wreg free
  4755                           
  4756                           ;LibLCDXC8.h: 176: RetardoLCD(4);
  4757   001130  0E04               	movlw	4
  4758   001132  EC70  F00B         	call	i2_RetardoLCD
  4759                           
  4760                           ;LibLCDXC8.h: 177: EnviaDato(decena+48);
  4761   001136  500B               	movf	i2EscribeLCD_n8@decena^0,w,c
  4762   001138  0F30               	addlw	48
  4763   00113A  EC90  F00C         	call	i2_EnviaDato
  4764                           
  4765                           ;LibLCDXC8.h: 178: HabilitaLCD();
  4766   00113E  ECE3  F00D         	call	i2_HabilitaLCD	;wreg free
  4767                           
  4768                           ;LibLCDXC8.h: 179: RetardoLCD(4);
  4769   001142  0E04               	movlw	4
  4770   001144  EC70  F00B         	call	i2_RetardoLCD
  4771                           
  4772                           ;LibLCDXC8.h: 180: EnviaDato(unidad+48);
  4773   001148  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  4774   00114A  0F30               	addlw	48
  4775   00114C  EC90  F00C         	call	i2_EnviaDato
  4776                           
  4777                           ;LibLCDXC8.h: 181: HabilitaLCD();
  4778   001150  ECE3  F00D         	call	i2_HabilitaLCD	;wreg free
  4779                           
  4780                           ;LibLCDXC8.h: 182: RetardoLCD(4);
  4781   001154  0E04               	movlw	4
  4782   001156  EC70  F00B         	call	i2_RetardoLCD
  4783                           
  4784                           ;LibLCDXC8.h: 183: break;
  4785   00115A  0012               	return	
  4786   00115C                     i2l3268:
  4787   00115C  5009               	movf	i2EscribeLCD_n8@b^0,w,c
  4788                           
  4789                           ; Switch size 1, requested type "simple"
  4790                           ; Number of cases is 3, Range of values is 1 to 3
  4791                           ; switch strategies available:
  4792                           ; Name         Instructions Cycles
  4793                           ; simple_byte           10     6 (average)
  4794                           ;	Chosen strategy is simple_byte
  4795   00115E  0A01               	xorlw	1	; case 1
  4796   001160  B4D8               	btfsc	status,2,c
  4797   001162  D797               	goto	i2l3236
  4798   001164  0A03               	xorlw	3	; case 2
  4799   001166  B4D8               	btfsc	status,2,c
  4800   001168  D7A4               	goto	i2l3242
  4801   00116A  0A01               	xorlw	1	; case 3
  4802   00116C  A4D8               	btfss	status,2,c
  4803   00116E  0012               	return	
  4804   001170  D7C3               	goto	i2l3252
  4805   001172                     __end_ofi2_EscribeLCD_n8:
  4806                           	callstack 0
  4807                           
  4808 ;; *************** function i2___lbmod *****************
  4809 ;; Defined at:
  4810 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbmod.c"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;  dividend        1    wreg     unsigned char 
  4813 ;;  divisor         1    0[COMRAM] unsigned char 
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;  dividend        1    1[COMRAM] unsigned char 
  4816 ;;  rem             1    3[COMRAM] unsigned char 
  4817 ;;  counter         1    2[COMRAM] unsigned char 
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      unsigned char 
  4820 ;; Registers used:
  4821 ;;		wreg, status,2, status,0
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4827 ;;      Params:         1       0       0       0       0       0       0       0       0
  4828 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4829 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4830 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4831 ;;Total ram usage:        4 bytes
  4832 ;; Hardware stack levels used: 1
  4833 ;; This function calls:
  4834 ;;		Nothing
  4835 ;; This function is called by:
  4836 ;;		i2_EscribeLCD_n8
  4837 ;;		i2_MostrarNumeros
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           	psect	text26
  4842   001AC4                     __ptext26:
  4843                           	callstack 0
  4844   001AC4                     i2___lbmod:
  4845                           	callstack 23
  4846                           
  4847                           ;incstack = 0
  4848                           ;i2___lbmod@dividend stored from wreg
  4849   001AC4  6E02               	movwf	i2___lbmod@dividend^0,c
  4850   001AC6  0E08               	movlw	8
  4851   001AC8  6E03               	movwf	i2___lbmod@counter^0,c
  4852   001ACA  6A04               	clrf	i2___lbmod@rem^0,c
  4853   001ACC                     i2l2922:
  4854   001ACC  90D8               	bcf	status,0,c
  4855   001ACE  3402               	rlcf	i2___lbmod@dividend^0,w,c
  4856   001AD0  3404               	rlcf	i2___lbmod@rem^0,w,c
  4857   001AD2  6E04               	movwf	i2___lbmod@rem^0,c
  4858   001AD4  90D8               	bcf	status,0,c
  4859   001AD6  3602               	rlcf	i2___lbmod@dividend^0,f,c
  4860   001AD8  5001               	movf	i2___lbmod@divisor^0,w,c
  4861   001ADA  5C04               	subwf	i2___lbmod@rem^0,w,c
  4862   001ADC  A0D8               	btfss	status,0,c
  4863   001ADE  D002               	goto	i2l2930
  4864   001AE0  5001               	movf	i2___lbmod@divisor^0,w,c
  4865   001AE2  5E04               	subwf	i2___lbmod@rem^0,f,c
  4866   001AE4                     i2l2930:
  4867   001AE4  2E03               	decfsz	i2___lbmod@counter^0,f,c
  4868   001AE6  D7F2               	goto	i2l2922
  4869   001AE8  5004               	movf	i2___lbmod@rem^0,w,c
  4870   001AEA  0012               	return		;funcret
  4871   001AEC                     __end_ofi2___lbmod:
  4872                           	callstack 0
  4873                           
  4874 ;; *************** function i2___lbdiv *****************
  4875 ;; Defined at:
  4876 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbdiv.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;  dividend        1    wreg     unsigned char 
  4879 ;;  divisor         1    4[COMRAM] unsigned char 
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;  dividend        1    5[COMRAM] unsigned char 
  4882 ;;  quotient        1    7[COMRAM] unsigned char 
  4883 ;;  counter         1    6[COMRAM] unsigned char 
  4884 ;; Return value:  Size  Location     Type
  4885 ;;                  1    wreg      unsigned char 
  4886 ;; Registers used:
  4887 ;;		wreg, status,2, status,0
  4888 ;; Tracked objects:
  4889 ;;		On entry : 0/0
  4890 ;;		On exit  : 0/0
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4893 ;;      Params:         1       0       0       0       0       0       0       0       0
  4894 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4895 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4896 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4897 ;;Total ram usage:        4 bytes
  4898 ;; Hardware stack levels used: 1
  4899 ;; This function calls:
  4900 ;;		Nothing
  4901 ;; This function is called by:
  4902 ;;		_ISR
  4903 ;;		i2_EscribeLCD_n8
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907                           	psect	text27
  4908   0019DC                     __ptext27:
  4909                           	callstack 0
  4910   0019DC                     i2___lbdiv:
  4911                           	callstack 24
  4912                           
  4913                           ;incstack = 0
  4914                           ;i2___lbdiv@dividend stored from wreg
  4915   0019DC  6E06               	movwf	i2___lbdiv@dividend^0,c
  4916   0019DE  6A08               	clrf	i2___lbdiv@quotient^0,c
  4917   0019E0  5005               	movf	i2___lbdiv@divisor^0,w,c
  4918   0019E2  B4D8               	btfsc	status,2,c
  4919   0019E4  D015               	goto	i2l2914
  4920   0019E6  0E01               	movlw	1
  4921   0019E8  6E07               	movwf	i2___lbdiv@counter^0,c
  4922   0019EA  D003               	goto	i2l2902
  4923   0019EC                     i2l2898:
  4924   0019EC  90D8               	bcf	status,0,c
  4925   0019EE  3605               	rlcf	i2___lbdiv@divisor^0,f,c
  4926   0019F0  2A07               	incf	i2___lbdiv@counter^0,f,c
  4927   0019F2                     i2l2902:
  4928   0019F2  AE05               	btfss	i2___lbdiv@divisor^0,7,c
  4929   0019F4  D7FB               	goto	i2l2898
  4930   0019F6                     i2u199_40:
  4931   0019F6  90D8               	bcf	status,0,c
  4932   0019F8  3608               	rlcf	i2___lbdiv@quotient^0,f,c
  4933   0019FA  5005               	movf	i2___lbdiv@divisor^0,w,c
  4934   0019FC  5C06               	subwf	i2___lbdiv@dividend^0,w,c
  4935   0019FE  A0D8               	btfss	status,0,c
  4936   001A00  D003               	goto	i2l2910
  4937   001A02  5005               	movf	i2___lbdiv@divisor^0,w,c
  4938   001A04  5E06               	subwf	i2___lbdiv@dividend^0,f,c
  4939   001A06  8008               	bsf	i2___lbdiv@quotient^0,0,c
  4940   001A08                     i2l2910:
  4941   001A08  90D8               	bcf	status,0,c
  4942   001A0A  3205               	rrcf	i2___lbdiv@divisor^0,f,c
  4943   001A0C  2E07               	decfsz	i2___lbdiv@counter^0,f,c
  4944   001A0E  D7F3               	goto	i2u199_40
  4945   001A10                     i2l2914:
  4946   001A10  5008               	movf	i2___lbdiv@quotient^0,w,c
  4947   001A12  0012               	return		;funcret
  4948   001A14                     __end_ofi2___lbdiv:
  4949                           	callstack 0
  4950                           
  4951 ;; *************** function i2_EscribeLCD_c *****************
  4952 ;; Defined at:
  4953 ;;		line 140 in file "LibLCDXC8.h"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;  a               1    wreg     unsigned char 
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;  a               1    4[COMRAM] unsigned char 
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  1    wreg      void 
  4960 ;; Registers used:
  4961 ;;		wreg, status,2, status,0, cstack
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4967 ;;      Params:         0       0       0       0       0       0       0       0       0
  4968 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4969 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4970 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4971 ;;Total ram usage:        1 bytes
  4972 ;; Hardware stack levels used: 1
  4973 ;; Hardware stack levels required when called: 2
  4974 ;; This function calls:
  4975 ;;		i2_EnviaDato
  4976 ;;		i2_HabilitaLCD
  4977 ;;		i2_RetardoLCD
  4978 ;; This function is called by:
  4979 ;;		_ISR
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           	psect	text28
  4984   001B50                     __ptext28:
  4985                           	callstack 0
  4986   001B50                     i2_EscribeLCD_c:
  4987                           	callstack 22
  4988                           
  4989                           ;incstack = 0
  4990                           ;i2EscribeLCD_c@a stored from wreg
  4991   001B50  6E05               	movwf	i2EscribeLCD_c@a^0,c
  4992                           
  4993                           ;LibLCDXC8.h: 144: LATA3=1;
  4994   001B52  8689               	bsf	3977,3,c	;volatile
  4995                           
  4996                           ;LibLCDXC8.h: 145: EnviaDato(a);
  4997   001B54  5005               	movf	i2EscribeLCD_c@a^0,w,c
  4998   001B56  EC90  F00C         	call	i2_EnviaDato
  4999                           
  5000                           ;LibLCDXC8.h: 146: HabilitaLCD();
  5001   001B5A  ECE3  F00D         	call	i2_HabilitaLCD	;wreg free
  5002                           
  5003                           ;LibLCDXC8.h: 147: RetardoLCD(4);
  5004   001B5E  0E04               	movlw	4
  5005   001B60  EC70  F00B         	call	i2_RetardoLCD
  5006   001B64  0012               	return		;funcret
  5007   001B66                     __end_ofi2_EscribeLCD_c:
  5008                           	callstack 0
  5009                           
  5010 ;; *************** function i2_DireccionaLCD *****************
  5011 ;; Defined at:
  5012 ;;		line 247 in file "LibLCDXC8.h"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;  a               1    wreg     unsigned char 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;  a               1    4[COMRAM] unsigned char 
  5017 ;; Return value:  Size  Location     Type
  5018 ;;                  1    wreg      void 
  5019 ;; Registers used:
  5020 ;;		wreg, status,2, status,0, cstack
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5026 ;;      Params:         0       0       0       0       0       0       0       0       0
  5027 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5029 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5030 ;;Total ram usage:        1 bytes
  5031 ;; Hardware stack levels used: 1
  5032 ;; Hardware stack levels required when called: 2
  5033 ;; This function calls:
  5034 ;;		i2_EnviaDato
  5035 ;;		i2_HabilitaLCD
  5036 ;;		i2_RetardoLCD
  5037 ;; This function is called by:
  5038 ;;		_ISR
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           	psect	text29
  5043   001B66                     __ptext29:
  5044                           	callstack 0
  5045   001B66                     i2_DireccionaLCD:
  5046                           	callstack 22
  5047                           
  5048                           ;incstack = 0
  5049                           ;i2DireccionaLCD@a stored from wreg
  5050   001B66  6E05               	movwf	i2DireccionaLCD@a^0,c
  5051                           
  5052                           ;LibLCDXC8.h: 250: LATA3=0;
  5053   001B68  9689               	bcf	3977,3,c	;volatile
  5054                           
  5055                           ;LibLCDXC8.h: 251: EnviaDato(a);
  5056   001B6A  5005               	movf	i2DireccionaLCD@a^0,w,c
  5057   001B6C  EC90  F00C         	call	i2_EnviaDato
  5058                           
  5059                           ;LibLCDXC8.h: 252: HabilitaLCD();
  5060   001B70  ECE3  F00D         	call	i2_HabilitaLCD	;wreg free
  5061                           
  5062                           ;LibLCDXC8.h: 253: RetardoLCD(4);
  5063   001B74  0E04               	movlw	4
  5064   001B76  EC70  F00B         	call	i2_RetardoLCD
  5065   001B7A  0012               	return		;funcret
  5066   001B7C                     __end_ofi2_DireccionaLCD:
  5067                           	callstack 0
  5068                           
  5069 ;; *************** function i2_EnviaDato *****************
  5070 ;; Defined at:
  5071 ;;		line 63 in file "LibLCDXC8.h"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  a               1    wreg     unsigned char 
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;  a               1    3[COMRAM] unsigned char 
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  1    wreg      void 
  5078 ;; Registers used:
  5079 ;;		wreg, status,2, status,0, cstack
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5085 ;;      Params:         0       0       0       0       0       0       0       0       0
  5086 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5087 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5088 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5089 ;;Total ram usage:        2 bytes
  5090 ;; Hardware stack levels used: 1
  5091 ;; Hardware stack levels required when called: 1
  5092 ;; This function calls:
  5093 ;;		i2_HabilitaLCD
  5094 ;;		i2_RetardoLCD
  5095 ;; This function is called by:
  5096 ;;		i2_EscribeLCD_c
  5097 ;;		i2_EscribeLCD_n8
  5098 ;;		i2_DireccionaLCD
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           	psect	text30
  5103   001920                     __ptext30:
  5104                           	callstack 0
  5105   001920                     i2_EnviaDato:
  5106                           	callstack 22
  5107                           
  5108                           ;incstack = 0
  5109                           ;i2EnviaDato@a stored from wreg
  5110   001920  6E04               	movwf	i2EnviaDato@a^0,c
  5111                           
  5112                           ;LibLCDXC8.h: 64: if(interfaz==4){
  5113   001922  0E04               	movlw	4
  5114   001924  183E               	xorwf	_interfaz^0,w,c
  5115   001926  A4D8               	btfss	status,2,c
  5116   001928  D01A               	goto	i2l2888
  5117                           
  5118                           ;LibLCDXC8.h: 65: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  5119   00192A  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  5120   00192E  0EF0               	movlw	240
  5121   001930  1603               	andwf	??i2_EnviaDato^0,f,c
  5122   001932  508C               	movf	140,w,c	;volatile
  5123   001934  0B0F               	andlw	15
  5124   001936  1003               	iorwf	??i2_EnviaDato^0,w,c
  5125   001938  6E8C               	movwf	140,c	;volatile
  5126                           
  5127                           ;LibLCDXC8.h: 66: HabilitaLCD();
  5128   00193A  ECE3  F00D         	call	i2_HabilitaLCD	;wreg free
  5129                           
  5130                           ;LibLCDXC8.h: 67: RetardoLCD(1);
  5131   00193E  0E01               	movlw	1
  5132   001940  EC70  F00B         	call	i2_RetardoLCD
  5133                           
  5134                           ;LibLCDXC8.h: 68: LATD=(LATD & 0b00001111) | (a<<4);
  5135   001944  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  5136   001948  3A03               	swapf	??i2_EnviaDato^0,f,c
  5137   00194A  0EF0               	movlw	240
  5138   00194C  1603               	andwf	??i2_EnviaDato^0,f,c
  5139   00194E  508C               	movf	140,w,c	;volatile
  5140   001950  0B0F               	andlw	15
  5141   001952  1003               	iorwf	??i2_EnviaDato^0,w,c
  5142   001954  6E8C               	movwf	140,c	;volatile
  5143                           
  5144                           ;LibLCDXC8.h: 70: RetardoLCD(1);
  5145   001956  0E01               	movlw	1
  5146   001958  EC70  F00B         	call	i2_RetardoLCD
  5147                           
  5148                           ;LibLCDXC8.h: 71: }else if(interfaz==8){
  5149   00195C  0012               	return	
  5150   00195E                     i2l2888:
  5151   00195E  0E08               	movlw	8
  5152   001960  183E               	xorwf	_interfaz^0,w,c
  5153   001962  A4D8               	btfss	status,2,c
  5154   001964  0012               	return	
  5155                           
  5156                           ;LibLCDXC8.h: 72: LATD=a;
  5157   001966  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  5158   00196A  0012               	return		;funcret
  5159   00196C                     __end_ofi2_EnviaDato:
  5160                           	callstack 0
  5161                           
  5162 ;; *************** function i2_RetardoLCD *****************
  5163 ;; Defined at:
  5164 ;;		line 287 in file "LibLCDXC8.h"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;  a               1    wreg     unsigned char 
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;  a               1    1[COMRAM] unsigned char 
  5169 ;; Return value:  Size  Location     Type
  5170 ;;                  1    wreg      void 
  5171 ;; Registers used:
  5172 ;;		wreg, status,2, status,0
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5178 ;;      Params:         0       0       0       0       0       0       0       0       0
  5179 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5180 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5181 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5182 ;;Total ram usage:        2 bytes
  5183 ;; Hardware stack levels used: 1
  5184 ;; This function calls:
  5185 ;;		Nothing
  5186 ;; This function is called by:
  5187 ;;		i2_EnviaDato
  5188 ;;		i2_EscribeLCD_c
  5189 ;;		i2_EscribeLCD_n8
  5190 ;;		i2_DireccionaLCD
  5191 ;; This function uses a non-reentrant model
  5192 ;;
  5193                           
  5194                           	psect	text31
  5195   0016E0                     __ptext31:
  5196                           	callstack 0
  5197   0016E0                     i2_RetardoLCD:
  5198                           	callstack 23
  5199                           
  5200                           ;incstack = 0
  5201                           ;i2RetardoLCD@a stored from wreg
  5202   0016E0  6E02               	movwf	i2RetardoLCD@a^0,c
  5203                           
  5204                           ;LibLCDXC8.h: 288: switch(a){
  5205   0016E2  D01B               	goto	i2l2566
  5206   0016E4                     i2l2556:
  5207   0016E4  0E05               	movlw	5
  5208   0016E6  6E01               	movwf	??i2_RetardoLCD^0,c
  5209   0016E8  0EDE               	movlw	222
  5210   0016EA                     i2u383_47:
  5211   0016EA  2EE8               	decfsz	wreg,f,c
  5212   0016EC  D7FE               	bra	i2u383_47
  5213   0016EE  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  5214   0016F0  D7FC               	bra	i2u383_47
  5215                           
  5216                           ;LibLCDXC8.h: 291: break;
  5217   0016F2  0012               	return	
  5218   0016F4                     i2l2558:
  5219   0016F4  0E53               	movlw	83
  5220   0016F6                     i2u384_47:
  5221   0016F6  2EE8               	decfsz	wreg,f,c
  5222   0016F8  D7FE               	bra	i2u384_47
  5223   0016FA  0000               	nop	
  5224                           
  5225                           ;LibLCDXC8.h: 293: _delay((unsigned long)((640)*(1000000/4000000.0)));
  5226   0016FC  0E35               	movlw	53
  5227   0016FE                     i2u385_47:
  5228   0016FE  2EE8               	decfsz	wreg,f,c
  5229   001700  D7FE               	bra	i2u385_47
  5230   001702  0000               	nop	
  5231                           
  5232                           ;LibLCDXC8.h: 295: break;
  5233   001704  0012               	return	
  5234   001706                     i2l2560:
  5235   001706  0E08               	movlw	8
  5236   001708                     i2u386_47:
  5237   001708  2EE8               	decfsz	wreg,f,c
  5238   00170A  D7FE               	bra	i2u386_47
  5239   00170C  0000               	nop	
  5240                           
  5241                           ;LibLCDXC8.h: 298: break;
  5242   00170E  0012               	return	
  5243   001710                     i2l2562:
  5244   001710  0E03               	movlw	3
  5245   001712                     i2u387_47:
  5246   001712  2EE8               	decfsz	wreg,f,c
  5247   001714  D7FE               	bra	i2u387_47
  5248   001716  0000               	nop	
  5249                           
  5250                           ;LibLCDXC8.h: 301: break;
  5251   001718  0012               	return	
  5252   00171A                     i2l2566:
  5253   00171A  5002               	movf	i2RetardoLCD@a^0,w,c
  5254                           
  5255                           ; Switch size 1, requested type "simple"
  5256                           ; Number of cases is 4, Range of values is 1 to 4
  5257                           ; switch strategies available:
  5258                           ; Name         Instructions Cycles
  5259                           ; simple_byte           13     7 (average)
  5260                           ;	Chosen strategy is simple_byte
  5261   00171C  0A01               	xorlw	1	; case 1
  5262   00171E  B4D8               	btfsc	status,2,c
  5263   001720  D7E1               	goto	i2l2556
  5264   001722  0A03               	xorlw	3	; case 2
  5265   001724  B4D8               	btfsc	status,2,c
  5266   001726  D7E6               	goto	i2l2558
  5267   001728  0A01               	xorlw	1	; case 3
  5268   00172A  B4D8               	btfsc	status,2,c
  5269   00172C  D7EC               	goto	i2l2560
  5270   00172E  0A07               	xorlw	7	; case 4
  5271   001730  A4D8               	btfss	status,2,c
  5272   001732  0012               	return	
  5273   001734  D7ED               	goto	i2l2562
  5274   001736                     __end_ofi2_RetardoLCD:
  5275                           	callstack 0
  5276                           
  5277 ;; *************** function i2_HabilitaLCD *****************
  5278 ;; Defined at:
  5279 ;;		line 109 in file "LibLCDXC8.h"
  5280 ;; Parameters:    Size  Location     Type
  5281 ;;		None
  5282 ;; Auto vars:     Size  Location     Type
  5283 ;;		None
  5284 ;; Return value:  Size  Location     Type
  5285 ;;                  1    wreg      void 
  5286 ;; Registers used:
  5287 ;;		wreg
  5288 ;; Tracked objects:
  5289 ;;		On entry : 0/0
  5290 ;;		On exit  : 0/0
  5291 ;;		Unchanged: 0/0
  5292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5293 ;;      Params:         0       0       0       0       0       0       0       0       0
  5294 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5295 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5296 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5297 ;;Total ram usage:        0 bytes
  5298 ;; Hardware stack levels used: 1
  5299 ;; This function calls:
  5300 ;;		Nothing
  5301 ;; This function is called by:
  5302 ;;		i2_EnviaDato
  5303 ;;		i2_EscribeLCD_c
  5304 ;;		i2_EscribeLCD_n8
  5305 ;;		i2_DireccionaLCD
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           	psect	text32
  5310   001BC6                     __ptext32:
  5311                           	callstack 0
  5312   001BC6                     i2_HabilitaLCD:
  5313                           	callstack 23
  5314                           
  5315                           ;LibLCDXC8.h: 111: LATA5=1;
  5316                           
  5317                           ;incstack = 0
  5318   001BC6  8A89               	bsf	3977,5,c	;volatile
  5319                           
  5320                           ;LibLCDXC8.h: 112: _delay((unsigned long)((40)*(1000000/4000000.0)));
  5321   001BC8  0E03               	movlw	3
  5322   001BCA                     i2u388_47:
  5323   001BCA  2EE8               	decfsz	wreg,f,c
  5324   001BCC  D7FE               	bra	i2u388_47
  5325   001BCE  0000               	nop	
  5326                           
  5327                           ;LibLCDXC8.h: 114: LATA5=0;
  5328   001BD0  9A89               	bcf	3977,5,c	;volatile
  5329   001BD2  0012               	return		;funcret
  5330   001BD4                     __end_ofi2_HabilitaLCD:
  5331                           	callstack 0
  5332                           
  5333 ;; *************** function _numASCII *****************
  5334 ;; Defined at:
  5335 ;;		line 686 in file "Lab6SIMU.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;  number          2    8[COMRAM] int 
  5338 ;;  ascii_values    2   10[COMRAM] PTR unsigned char 
  5339 ;;		 -> ISR@numAscii(0), 
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;		None
  5342 ;; Return value:  Size  Location     Type
  5343 ;;                  1    wreg      void 
  5344 ;; Registers used:
  5345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5351 ;;      Params:         4       0       0       0       0       0       0       0       0
  5352 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5353 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5354 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5355 ;;Total ram usage:        4 bytes
  5356 ;; Hardware stack levels used: 1
  5357 ;; Hardware stack levels required when called: 1
  5358 ;; This function calls:
  5359 ;;		___awdiv
  5360 ;;		___awmod
  5361 ;; This function is called by:
  5362 ;;		_ISR
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           	psect	text33
  5367   001172                     __ptext33:
  5368                           	callstack 0
  5369   001172                     _numASCII:
  5370                           	callstack 23
  5371                           
  5372                           ;Lab6SIMU.c: 687: if (number < 10) {
  5373                           
  5374                           ;incstack = 0
  5375   001172  BE0A               	btfsc	(numASCII@number+1)^0,7,c
  5376   001174  D006               	goto	i2u223_40
  5377   001176  500A               	movf	(numASCII@number+1)^0,w,c
  5378   001178  E113               	bnz	i2l3146
  5379   00117A  0E0A               	movlw	10
  5380   00117C  5C09               	subwf	numASCII@number^0,w,c
  5381   00117E  B0D8               	btfsc	status,0,c
  5382   001180  D00F               	goto	i2l3146
  5383   001182                     i2u223_40:
  5384                           
  5385                           ;Lab6SIMU.c: 688: ascii_values[0] = '0' + number;
  5386   001182  5009               	movf	numASCII@number^0,w,c
  5387   001184  0F30               	addlw	48
  5388   001186  C00B  FFD9         	movff	numASCII@ascii_values,fsr2l
  5389   00118A  C00C  FFDA         	movff	numASCII@ascii_values+1,fsr2h
  5390   00118E  6EDF               	movwf	indf2,c
  5391                           
  5392                           ;Lab6SIMU.c: 689: ascii_values[1] = '\0';
  5393   001190  EE20 F001          	lfsr	2,1
  5394   001194  500B               	movf	numASCII@ascii_values^0,w,c
  5395   001196  26D9               	addwf	fsr2l,f,c
  5396   001198  500C               	movf	(numASCII@ascii_values+1)^0,w,c
  5397   00119A  22DA               	addwfc	fsr2h,f,c
  5398   00119C  6ADF               	clrf	indf2,c
  5399                           
  5400                           ;Lab6SIMU.c: 690: } else if (number < 100) {
  5401   00119E  0012               	return	
  5402   0011A0                     i2l3146:
  5403   0011A0  BE0A               	btfsc	(numASCII@number+1)^0,7,c
  5404   0011A2  D006               	goto	i2u224_40
  5405   0011A4  500A               	movf	(numASCII@number+1)^0,w,c
  5406   0011A6  E130               	bnz	i2l3152
  5407   0011A8  0E64               	movlw	100
  5408   0011AA  5C09               	subwf	numASCII@number^0,w,c
  5409   0011AC  B0D8               	btfsc	status,0,c
  5410   0011AE  D02C               	goto	i2l3152
  5411   0011B0                     i2u224_40:
  5412                           
  5413                           ;Lab6SIMU.c: 691: ascii_values[0] = '0' + number / 10;
  5414   0011B0  C009  F001         	movff	numASCII@number,___awdiv@dividend
  5415   0011B4  C00A  F002         	movff	numASCII@number+1,___awdiv@dividend+1
  5416   0011B8  0E00               	movlw	0
  5417   0011BA  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5418   0011BC  0E0A               	movlw	10
  5419   0011BE  6E03               	movwf	___awdiv@divisor^0,c
  5420   0011C0  EC30  F00A         	call	___awdiv	;wreg free
  5421   0011C4  5001               	movf	?___awdiv^0,w,c
  5422   0011C6  0F30               	addlw	48
  5423   0011C8  C00B  FFD9         	movff	numASCII@ascii_values,fsr2l
  5424   0011CC  C00C  FFDA         	movff	numASCII@ascii_values+1,fsr2h
  5425   0011D0  6EDF               	movwf	indf2,c
  5426                           
  5427                           ;Lab6SIMU.c: 692: ascii_values[1] = '0' + number % 10;
  5428   0011D2  EE20 F001          	lfsr	2,1
  5429   0011D6  500B               	movf	numASCII@ascii_values^0,w,c
  5430   0011D8  26D9               	addwf	fsr2l,f,c
  5431   0011DA  500C               	movf	(numASCII@ascii_values+1)^0,w,c
  5432   0011DC  22DA               	addwfc	fsr2h,f,c
  5433   0011DE  C009  F001         	movff	numASCII@number,___awmod@dividend
  5434   0011E2  C00A  F002         	movff	numASCII@number+1,___awmod@dividend+1
  5435   0011E6  0E00               	movlw	0
  5436   0011E8  6E04               	movwf	(___awmod@divisor+1)^0,c
  5437   0011EA  0E0A               	movlw	10
  5438   0011EC  6E03               	movwf	___awmod@divisor^0,c
  5439   0011EE  ECE1  F00A         	call	___awmod	;wreg free
  5440   0011F2  5001               	movf	?___awmod^0,w,c
  5441   0011F4  0F30               	addlw	48
  5442   0011F6  6EDF               	movwf	indf2,c
  5443                           
  5444                           ;Lab6SIMU.c: 693: ascii_values[2] = '\0';
  5445   0011F8  EE20 F002          	lfsr	2,2
  5446   0011FC  500B               	movf	numASCII@ascii_values^0,w,c
  5447   0011FE  26D9               	addwf	fsr2l,f,c
  5448   001200  500C               	movf	(numASCII@ascii_values+1)^0,w,c
  5449   001202  22DA               	addwfc	fsr2h,f,c
  5450   001204  6ADF               	clrf	indf2,c
  5451                           
  5452                           ;Lab6SIMU.c: 694: } else {
  5453   001206  0012               	return	
  5454   001208                     i2l3152:
  5455                           
  5456                           ;Lab6SIMU.c: 695: ascii_values[0] = '1';
  5457   001208  C00B  FFD9         	movff	numASCII@ascii_values,fsr2l
  5458   00120C  C00C  FFDA         	movff	numASCII@ascii_values+1,fsr2h
  5459   001210  0E31               	movlw	49
  5460   001212  6EDF               	movwf	indf2,c
  5461                           
  5462                           ;Lab6SIMU.c: 696: ascii_values[1] = '0';
  5463   001214  EE20 F001          	lfsr	2,1
  5464   001218  500B               	movf	numASCII@ascii_values^0,w,c
  5465   00121A  26D9               	addwf	fsr2l,f,c
  5466   00121C  500C               	movf	(numASCII@ascii_values+1)^0,w,c
  5467   00121E  22DA               	addwfc	fsr2h,f,c
  5468   001220  0E30               	movlw	48
  5469   001222  6EDF               	movwf	indf2,c
  5470                           
  5471                           ;Lab6SIMU.c: 697: ascii_values[2] = '0';
  5472   001224  EE20 F002          	lfsr	2,2
  5473   001228  500B               	movf	numASCII@ascii_values^0,w,c
  5474   00122A  26D9               	addwf	fsr2l,f,c
  5475   00122C  500C               	movf	(numASCII@ascii_values+1)^0,w,c
  5476   00122E  22DA               	addwfc	fsr2h,f,c
  5477   001230  0E30               	movlw	48
  5478   001232  6EDF               	movwf	indf2,c
  5479                           
  5480                           ;Lab6SIMU.c: 698: ascii_values[3] = '\0';
  5481   001234  EE20 F003          	lfsr	2,3
  5482   001238  500B               	movf	numASCII@ascii_values^0,w,c
  5483   00123A  26D9               	addwf	fsr2l,f,c
  5484   00123C  500C               	movf	(numASCII@ascii_values+1)^0,w,c
  5485   00123E  22DA               	addwfc	fsr2h,f,c
  5486   001240  6ADF               	clrf	indf2,c
  5487   001242  0012               	return		;funcret
  5488   001244                     __end_of_numASCII:
  5489                           	callstack 0
  5490                           
  5491 ;; *************** function ___awmod *****************
  5492 ;; Defined at:
  5493 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;  dividend        2    0[COMRAM] int 
  5496 ;;  divisor         2    2[COMRAM] int 
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;  sign            1    5[COMRAM] unsigned char 
  5499 ;;  counter         1    4[COMRAM] unsigned char 
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  2    0[COMRAM] int 
  5502 ;; Registers used:
  5503 ;;		wreg, status,2, status,0
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5509 ;;      Params:         4       0       0       0       0       0       0       0       0
  5510 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5511 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5512 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5513 ;;Total ram usage:        6 bytes
  5514 ;; Hardware stack levels used: 1
  5515 ;; This function calls:
  5516 ;;		Nothing
  5517 ;; This function is called by:
  5518 ;;		_numASCII
  5519 ;; This function uses a non-reentrant model
  5520 ;;
  5521                           
  5522                           	psect	text34
  5523   0015C2                     __ptext34:
  5524                           	callstack 0
  5525   0015C2                     ___awmod:
  5526                           	callstack 23
  5527                           
  5528                           ;incstack = 0
  5529   0015C2  6A06               	clrf	___awmod@sign^0,c
  5530   0015C4  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  5531   0015C6  D006               	goto	i2l2782
  5532   0015C8  6C01               	negf	___awmod@dividend^0,c
  5533   0015CA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5534   0015CC  B0D8               	btfsc	status,0,c
  5535   0015CE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5536   0015D0  0E01               	movlw	1
  5537   0015D2  6E06               	movwf	___awmod@sign^0,c
  5538   0015D4                     i2l2782:
  5539   0015D4  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5540   0015D6  D004               	goto	i2l2786
  5541   0015D8  6C03               	negf	___awmod@divisor^0,c
  5542   0015DA  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5543   0015DC  B0D8               	btfsc	status,0,c
  5544   0015DE  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5545   0015E0                     i2l2786:
  5546   0015E0  5003               	movf	___awmod@divisor^0,w,c
  5547   0015E2  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5548   0015E4  B4D8               	btfsc	status,2,c
  5549   0015E6  D018               	goto	i2l2802
  5550   0015E8  0E01               	movlw	1
  5551   0015EA  6E05               	movwf	___awmod@counter^0,c
  5552   0015EC  D004               	goto	i2l2792
  5553   0015EE                     i2l2790:
  5554   0015EE  90D8               	bcf	status,0,c
  5555   0015F0  3603               	rlcf	___awmod@divisor^0,f,c
  5556   0015F2  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5557   0015F4  2A05               	incf	___awmod@counter^0,f,c
  5558   0015F6                     i2l2792:
  5559   0015F6  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5560   0015F8  D7FA               	goto	i2l2790
  5561   0015FA                     i2u186_40:
  5562   0015FA  5003               	movf	___awmod@divisor^0,w,c
  5563   0015FC  5C01               	subwf	___awmod@dividend^0,w,c
  5564   0015FE  5004               	movf	(___awmod@divisor+1)^0,w,c
  5565   001600  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5566   001602  A0D8               	btfss	status,0,c
  5567   001604  D004               	goto	i2l2798
  5568   001606  5003               	movf	___awmod@divisor^0,w,c
  5569   001608  5E01               	subwf	___awmod@dividend^0,f,c
  5570   00160A  5004               	movf	(___awmod@divisor+1)^0,w,c
  5571   00160C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5572   00160E                     i2l2798:
  5573   00160E  90D8               	bcf	status,0,c
  5574   001610  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5575   001612  3203               	rrcf	___awmod@divisor^0,f,c
  5576   001614  2E05               	decfsz	___awmod@counter^0,f,c
  5577   001616  D7F1               	goto	i2u186_40
  5578   001618                     i2l2802:
  5579   001618  5006               	movf	___awmod@sign^0,w,c
  5580   00161A  B4D8               	btfsc	status,2,c
  5581   00161C  D004               	goto	i2l2806
  5582   00161E  6C01               	negf	___awmod@dividend^0,c
  5583   001620  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5584   001622  B0D8               	btfsc	status,0,c
  5585   001624  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5586   001626                     i2l2806:
  5587   001626  C001  F001         	movff	___awmod@dividend,?___awmod
  5588   00162A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5589   00162E  0012               	return		;funcret
  5590   001630                     __end_of___awmod:
  5591                           	callstack 0
  5592                           
  5593 ;; *************** function ___awdiv *****************
  5594 ;; Defined at:
  5595 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;  dividend        2    0[COMRAM] int 
  5598 ;;  divisor         2    2[COMRAM] int 
  5599 ;; Auto vars:     Size  Location     Type
  5600 ;;  quotient        2    6[COMRAM] int 
  5601 ;;  sign            1    5[COMRAM] unsigned char 
  5602 ;;  counter         1    4[COMRAM] unsigned char 
  5603 ;; Return value:  Size  Location     Type
  5604 ;;                  2    0[COMRAM] int 
  5605 ;; Registers used:
  5606 ;;		wreg, status,2, status,0
  5607 ;; Tracked objects:
  5608 ;;		On entry : 0/0
  5609 ;;		On exit  : 0/0
  5610 ;;		Unchanged: 0/0
  5611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5612 ;;      Params:         4       0       0       0       0       0       0       0       0
  5613 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5614 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5615 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5616 ;;Total ram usage:        8 bytes
  5617 ;; Hardware stack levels used: 1
  5618 ;; This function calls:
  5619 ;;		Nothing
  5620 ;; This function is called by:
  5621 ;;		_ISR
  5622 ;;		_numASCII
  5623 ;; This function uses a non-reentrant model
  5624 ;;
  5625                           
  5626                           	psect	text35
  5627   001460                     __ptext35:
  5628                           	callstack 0
  5629   001460                     ___awdiv:
  5630                           	callstack 23
  5631                           
  5632                           ;incstack = 0
  5633   001460  6A06               	clrf	___awdiv@sign^0,c
  5634   001462  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5635   001464  D006               	goto	i2l2738
  5636   001466  6C03               	negf	___awdiv@divisor^0,c
  5637   001468  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5638   00146A  B0D8               	btfsc	status,0,c
  5639   00146C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5640   00146E  0E01               	movlw	1
  5641   001470  6E06               	movwf	___awdiv@sign^0,c
  5642   001472                     i2l2738:
  5643   001472  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
  5644   001474  D006               	goto	i2l2744
  5645   001476  6C01               	negf	___awdiv@dividend^0,c
  5646   001478  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5647   00147A  B0D8               	btfsc	status,0,c
  5648   00147C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5649   00147E  0E01               	movlw	1
  5650   001480  1A06               	xorwf	___awdiv@sign^0,f,c
  5651   001482                     i2l2744:
  5652   001482  0E00               	movlw	0
  5653   001484  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5654   001486  0E00               	movlw	0
  5655   001488  6E07               	movwf	___awdiv@quotient^0,c
  5656   00148A  5003               	movf	___awdiv@divisor^0,w,c
  5657   00148C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5658   00148E  B4D8               	btfsc	status,2,c
  5659   001490  D01C               	goto	i2l2766
  5660   001492  0E01               	movlw	1
  5661   001494  6E05               	movwf	___awdiv@counter^0,c
  5662   001496  D004               	goto	i2l2752
  5663   001498                     i2l2750:
  5664   001498  90D8               	bcf	status,0,c
  5665   00149A  3603               	rlcf	___awdiv@divisor^0,f,c
  5666   00149C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5667   00149E  2A05               	incf	___awdiv@counter^0,f,c
  5668   0014A0                     i2l2752:
  5669   0014A0  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5670   0014A2  D7FA               	goto	i2l2750
  5671   0014A4                     i2u180_40:
  5672   0014A4  90D8               	bcf	status,0,c
  5673   0014A6  3607               	rlcf	___awdiv@quotient^0,f,c
  5674   0014A8  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5675   0014AA  5003               	movf	___awdiv@divisor^0,w,c
  5676   0014AC  5C01               	subwf	___awdiv@dividend^0,w,c
  5677   0014AE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5678   0014B0  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5679   0014B2  A0D8               	btfss	status,0,c
  5680   0014B4  D005               	goto	i2l2762
  5681   0014B6  5003               	movf	___awdiv@divisor^0,w,c
  5682   0014B8  5E01               	subwf	___awdiv@dividend^0,f,c
  5683   0014BA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5684   0014BC  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5685   0014BE  8007               	bsf	___awdiv@quotient^0,0,c
  5686   0014C0                     i2l2762:
  5687   0014C0  90D8               	bcf	status,0,c
  5688   0014C2  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5689   0014C4  3203               	rrcf	___awdiv@divisor^0,f,c
  5690   0014C6  2E05               	decfsz	___awdiv@counter^0,f,c
  5691   0014C8  D7ED               	goto	i2u180_40
  5692   0014CA                     i2l2766:
  5693   0014CA  5006               	movf	___awdiv@sign^0,w,c
  5694   0014CC  B4D8               	btfsc	status,2,c
  5695   0014CE  D004               	goto	i2l2770
  5696   0014D0  6C07               	negf	___awdiv@quotient^0,c
  5697   0014D2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5698   0014D4  B0D8               	btfsc	status,0,c
  5699   0014D6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5700   0014D8                     i2l2770:
  5701   0014D8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5702   0014DC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5703   0014E0  0012               	return		;funcret
  5704   0014E2                     __end_of___awdiv:
  5705                           	callstack 0
  5706                           
  5707 ;; *************** function ___fttol *****************
  5708 ;; Defined at:
  5709 ;;		line 44 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\fttol.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;  f1              3    0[COMRAM] float 
  5712 ;; Auto vars:     Size  Location     Type
  5713 ;;  lval            4   10[COMRAM] unsigned long 
  5714 ;;  exp1            1   14[COMRAM] unsigned char 
  5715 ;;  sign1           1    9[COMRAM] unsigned char 
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  4    0[COMRAM] long 
  5718 ;; Registers used:
  5719 ;;		wreg, status,2, status,0
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5725 ;;      Params:         4       0       0       0       0       0       0       0       0
  5726 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5727 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5728 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5729 ;;Total ram usage:       15 bytes
  5730 ;; Hardware stack levels used: 1
  5731 ;; This function calls:
  5732 ;;		Nothing
  5733 ;; This function is called by:
  5734 ;;		_ISR
  5735 ;; This function uses a non-reentrant model
  5736 ;;
  5737                           
  5738                           	psect	text36
  5739   001244                     __ptext36:
  5740                           	callstack 0
  5741   001244                     ___fttol:
  5742                           	callstack 24
  5743                           
  5744                           ;incstack = 0
  5745   001244  C003  F005         	movff	___fttol@f1+2,??___fttol
  5746   001248  6A06               	clrf	(??___fttol+1)^0,c
  5747   00124A  6A07               	clrf	(??___fttol+2)^0,c
  5748   00124C  3402               	rlcf	(___fttol@f1+1)^0,w,c
  5749   00124E  3605               	rlcf	??___fttol^0,f,c
  5750   001250  E301               	bnc	u229_41
  5751   001252  8006               	bsf	(??___fttol+1)^0,0,c
  5752   001254                     u229_41:
  5753   001254  5005               	movf	??___fttol^0,w,c
  5754   001256  6E0F               	movwf	___fttol@exp1^0,c
  5755   001258  500F               	movf	___fttol@exp1^0,w,c
  5756   00125A  A4D8               	btfss	status,2,c
  5757   00125C  D009               	goto	i2l3186
  5758   00125E                     i2u230_40:
  5759   00125E  0E00               	movlw	0
  5760   001260  6E01               	movwf	?___fttol^0,c
  5761   001262  0E00               	movlw	0
  5762   001264  6E02               	movwf	(?___fttol+1)^0,c
  5763   001266  0E00               	movlw	0
  5764   001268  6E03               	movwf	(?___fttol+2)^0,c
  5765   00126A  0E00               	movlw	0
  5766   00126C  6E04               	movwf	(?___fttol+3)^0,c
  5767   00126E  0012               	return	
  5768   001270                     i2l3186:
  5769   001270  0E17               	movlw	23
  5770   001272  6E05               	movwf	??___fttol^0,c
  5771   001274  C001  F006         	movff	___fttol@f1,??___fttol+1
  5772   001278  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  5773   00127C  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  5774   001280  2805               	incf	??___fttol^0,w,c
  5775   001282  6E09               	movwf	(??___fttol+4)^0,c
  5776   001284  D004               	goto	i2u231_40
  5777   001286                     i2u231_45:
  5778   001286  90D8               	bcf	status,0,c
  5779   001288  3208               	rrcf	(??___fttol+3)^0,f,c
  5780   00128A  3207               	rrcf	(??___fttol+2)^0,f,c
  5781   00128C  3206               	rrcf	(??___fttol+1)^0,f,c
  5782   00128E                     i2u231_40:
  5783   00128E  2E09               	decfsz	(??___fttol+4)^0,f,c
  5784   001290  D7FA               	goto	i2u231_45
  5785   001292  5006               	movf	(??___fttol+1)^0,w,c
  5786   001294  6E0A               	movwf	___fttol@sign1^0,c
  5787   001296  8E02               	bsf	(___fttol@f1+1)^0,7,c
  5788   001298  0EFF               	movlw	255
  5789   00129A  1601               	andwf	___fttol@f1^0,f,c
  5790   00129C  0EFF               	movlw	255
  5791   00129E  1602               	andwf	(___fttol@f1+1)^0,f,c
  5792   0012A0  0E00               	movlw	0
  5793   0012A2  1603               	andwf	(___fttol@f1+2)^0,f,c
  5794   0012A4  5001               	movf	___fttol@f1^0,w,c
  5795   0012A6  6E0B               	movwf	___fttol@lval^0,c
  5796   0012A8  5002               	movf	(___fttol@f1+1)^0,w,c
  5797   0012AA  6E0C               	movwf	(___fttol@lval+1)^0,c
  5798   0012AC  5003               	movf	(___fttol@f1+2)^0,w,c
  5799   0012AE  6E0D               	movwf	(___fttol@lval+2)^0,c
  5800   0012B0  6A0E               	clrf	(___fttol@lval+3)^0,c
  5801   0012B2  0E8E               	movlw	142
  5802   0012B4  5E0F               	subwf	___fttol@exp1^0,f,c
  5803   0012B6  AE0F               	btfss	___fttol@exp1^0,7,c
  5804   0012B8  D00D               	goto	i2l3208
  5805   0012BA  500F               	movf	___fttol@exp1^0,w,c
  5806   0012BC  0A80               	xorlw	128
  5807   0012BE  0F8F               	addlw	143
  5808   0012C0  A0D8               	btfss	status,0,c
  5809   0012C2  D7CD               	goto	i2u230_40
  5810   0012C4                     i2l3204:
  5811   0012C4  90D8               	bcf	status,0,c
  5812   0012C6  320E               	rrcf	(___fttol@lval+3)^0,f,c
  5813   0012C8  320D               	rrcf	(___fttol@lval+2)^0,f,c
  5814   0012CA  320C               	rrcf	(___fttol@lval+1)^0,f,c
  5815   0012CC  320B               	rrcf	___fttol@lval^0,f,c
  5816   0012CE  3E0F               	incfsz	___fttol@exp1^0,f,c
  5817   0012D0  D7F9               	goto	i2l3204
  5818   0012D2  D00D               	goto	i2u235_40
  5819   0012D4                     i2l3208:
  5820   0012D4  0E17               	movlw	23
  5821   0012D6  640F               	cpfsgt	___fttol@exp1^0,c
  5822   0012D8  D007               	goto	i2l3216
  5823   0012DA  D7C1               	goto	i2u230_40
  5824   0012DC                     i2l3214:
  5825   0012DC  90D8               	bcf	status,0,c
  5826   0012DE  360B               	rlcf	___fttol@lval^0,f,c
  5827   0012E0  360C               	rlcf	(___fttol@lval+1)^0,f,c
  5828   0012E2  360D               	rlcf	(___fttol@lval+2)^0,f,c
  5829   0012E4  360E               	rlcf	(___fttol@lval+3)^0,f,c
  5830   0012E6  060F               	decf	___fttol@exp1^0,f,c
  5831   0012E8                     i2l3216:
  5832   0012E8  500F               	movf	___fttol@exp1^0,w,c
  5833   0012EA  A4D8               	btfss	status,2,c
  5834   0012EC  D7F7               	goto	i2l3214
  5835   0012EE                     i2u235_40:
  5836   0012EE  500A               	movf	___fttol@sign1^0,w,c
  5837   0012F0  B4D8               	btfsc	status,2,c
  5838   0012F2  D008               	goto	i2l3222
  5839   0012F4  1E0E               	comf	(___fttol@lval+3)^0,f,c
  5840   0012F6  1E0D               	comf	(___fttol@lval+2)^0,f,c
  5841   0012F8  1E0C               	comf	(___fttol@lval+1)^0,f,c
  5842   0012FA  6C0B               	negf	___fttol@lval^0,c
  5843   0012FC  0E00               	movlw	0
  5844   0012FE  220C               	addwfc	(___fttol@lval+1)^0,f,c
  5845   001300  220D               	addwfc	(___fttol@lval+2)^0,f,c
  5846   001302  220E               	addwfc	(___fttol@lval+3)^0,f,c
  5847   001304                     i2l3222:
  5848   001304  C00B  F001         	movff	___fttol@lval,?___fttol
  5849   001308  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  5850   00130C  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  5851   001310  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  5852   001314  0012               	return		;funcret
  5853   001316                     __end_of___fttol:
  5854                           	callstack 0
  5855                           
  5856 ;; *************** function ___awtoft *****************
  5857 ;; Defined at:
  5858 ;;		line 32 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awtoft.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;  c               2    8[COMRAM] int 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;  sign            1   11[COMRAM] unsigned char 
  5863 ;; Return value:  Size  Location     Type
  5864 ;;                  3    8[COMRAM] float 
  5865 ;; Registers used:
  5866 ;;		wreg, status,2, status,0, cstack
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5872 ;;      Params:         3       0       0       0       0       0       0       0       0
  5873 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5874 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5875 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5876 ;;Total ram usage:        4 bytes
  5877 ;; Hardware stack levels used: 1
  5878 ;; Hardware stack levels required when called: 1
  5879 ;; This function calls:
  5880 ;;		___ftpack
  5881 ;; This function is called by:
  5882 ;;		_ISR
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885                           
  5886                           	psect	text37
  5887   001A14                     __ptext37:
  5888                           	callstack 0
  5889   001A14                     ___awtoft:
  5890                           	callstack 23
  5891                           
  5892                           ;incstack = 0
  5893   001A14  6A0C               	clrf	___awtoft@sign^0,c
  5894   001A16  AE0A               	btfss	(___awtoft@c+1)^0,7,c
  5895   001A18  D006               	goto	i2l3176
  5896   001A1A  6C09               	negf	___awtoft@c^0,c
  5897   001A1C  1E0A               	comf	(___awtoft@c+1)^0,f,c
  5898   001A1E  B0D8               	btfsc	status,0,c
  5899   001A20  2A0A               	incf	(___awtoft@c+1)^0,f,c
  5900   001A22  0E01               	movlw	1
  5901   001A24  6E0C               	movwf	___awtoft@sign^0,c
  5902   001A26                     i2l3176:
  5903   001A26  C009  F001         	movff	___awtoft@c,___ftpack@arg
  5904   001A2A  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5905   001A2E  6A03               	clrf	(___ftpack@arg+2)^0,c
  5906   001A30  0E8E               	movlw	142
  5907   001A32  6E04               	movwf	___ftpack@exp^0,c
  5908   001A34  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  5909   001A38  EC8B  F009         	call	___ftpack	;wreg free
  5910   001A3C  C001  F009         	movff	?___ftpack,?___awtoft
  5911   001A40  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  5912   001A44  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  5913   001A48  0012               	return		;funcret
  5914   001A4A                     __end_of___awtoft:
  5915                           	callstack 0
  5916                           
  5917 ;; *************** function ___ftpack *****************
  5918 ;; Defined at:
  5919 ;;		line 62 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\float.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  arg             3    0[COMRAM] unsigned um
  5922 ;;  exp             1    3[COMRAM] unsigned char 
  5923 ;;  sign            1    4[COMRAM] unsigned char 
  5924 ;; Auto vars:     Size  Location     Type
  5925 ;;		None
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  3    0[COMRAM] float 
  5928 ;; Registers used:
  5929 ;;		wreg, status,2, status,0
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5935 ;;      Params:         5       0       0       0       0       0       0       0       0
  5936 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5937 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5938 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5939 ;;Total ram usage:        8 bytes
  5940 ;; Hardware stack levels used: 1
  5941 ;; This function calls:
  5942 ;;		Nothing
  5943 ;; This function is called by:
  5944 ;;		___awtoft
  5945 ;; This function uses a non-reentrant model
  5946 ;;
  5947                           
  5948                           	psect	text38
  5949   001316                     __ptext38:
  5950                           	callstack 0
  5951   001316                     ___ftpack:
  5952                           	callstack 23
  5953                           
  5954                           ;incstack = 0
  5955   001316  5004               	movf	___ftpack@exp^0,w,c
  5956   001318  B4D8               	btfsc	status,2,c
  5957   00131A  D005               	goto	i2u170_40
  5958   00131C  5001               	movf	___ftpack@arg^0,w,c
  5959   00131E  1002               	iorwf	(___ftpack@arg+1)^0,w,c
  5960   001320  1003               	iorwf	(___ftpack@arg+2)^0,w,c
  5961   001322  A4D8               	btfss	status,2,c
  5962   001324  D00C               	goto	i2l2704
  5963   001326                     i2u170_40:
  5964   001326  0E00               	movlw	0
  5965   001328  6E01               	movwf	?___ftpack^0,c
  5966   00132A  0E00               	movlw	0
  5967   00132C  6E02               	movwf	(?___ftpack+1)^0,c
  5968   00132E  0E00               	movlw	0
  5969   001330  6E03               	movwf	(?___ftpack+2)^0,c
  5970   001332  0012               	return	
  5971   001334                     i2l2702:
  5972   001334  2A04               	incf	___ftpack@exp^0,f,c
  5973   001336  90D8               	bcf	status,0,c
  5974   001338  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  5975   00133A  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  5976   00133C  3201               	rrcf	___ftpack@arg^0,f,c
  5977   00133E                     i2l2704:
  5978   00133E  0E00               	movlw	0
  5979   001340  1401               	andwf	___ftpack@arg^0,w,c
  5980   001342  6E06               	movwf	??___ftpack^0,c
  5981   001344  0E00               	movlw	0
  5982   001346  1402               	andwf	(___ftpack@arg+1)^0,w,c
  5983   001348  6E07               	movwf	(??___ftpack+1)^0,c
  5984   00134A  0EFE               	movlw	254
  5985   00134C  1403               	andwf	(___ftpack@arg+2)^0,w,c
  5986   00134E  6E08               	movwf	(??___ftpack+2)^0,c
  5987   001350  5006               	movf	??___ftpack^0,w,c
  5988   001352  1007               	iorwf	(??___ftpack+1)^0,w,c
  5989   001354  1008               	iorwf	(??___ftpack+2)^0,w,c
  5990   001356  B4D8               	btfsc	status,2,c
  5991   001358  D00C               	goto	i2l2710
  5992   00135A  D7EC               	goto	i2l2702
  5993   00135C                     i2l2706:
  5994   00135C  2A04               	incf	___ftpack@exp^0,f,c
  5995   00135E  0E01               	movlw	1
  5996   001360  2601               	addwf	___ftpack@arg^0,f,c
  5997   001362  0E00               	movlw	0
  5998   001364  2202               	addwfc	(___ftpack@arg+1)^0,f,c
  5999   001366  0E00               	movlw	0
  6000   001368  2203               	addwfc	(___ftpack@arg+2)^0,f,c
  6001   00136A  90D8               	bcf	status,0,c
  6002   00136C  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  6003   00136E  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  6004   001370  3201               	rrcf	___ftpack@arg^0,f,c
  6005   001372                     i2l2710:
  6006   001372  0E00               	movlw	0
  6007   001374  1401               	andwf	___ftpack@arg^0,w,c
  6008   001376  6E06               	movwf	??___ftpack^0,c
  6009   001378  0E00               	movlw	0
  6010   00137A  1402               	andwf	(___ftpack@arg+1)^0,w,c
  6011   00137C  6E07               	movwf	(??___ftpack+1)^0,c
  6012   00137E  0EFF               	movlw	255
  6013   001380  1403               	andwf	(___ftpack@arg+2)^0,w,c
  6014   001382  6E08               	movwf	(??___ftpack+2)^0,c
  6015   001384  5006               	movf	??___ftpack^0,w,c
  6016   001386  1007               	iorwf	(??___ftpack+1)^0,w,c
  6017   001388  1008               	iorwf	(??___ftpack+2)^0,w,c
  6018   00138A  B4D8               	btfsc	status,2,c
  6019   00138C  D006               	goto	i2l2714
  6020   00138E  D7E6               	goto	i2l2706
  6021   001390                     i2l2712:
  6022   001390  0604               	decf	___ftpack@exp^0,f,c
  6023   001392  90D8               	bcf	status,0,c
  6024   001394  3601               	rlcf	___ftpack@arg^0,f,c
  6025   001396  3602               	rlcf	(___ftpack@arg+1)^0,f,c
  6026   001398  3603               	rlcf	(___ftpack@arg+2)^0,f,c
  6027   00139A                     i2l2714:
  6028   00139A  BE02               	btfsc	(___ftpack@arg+1)^0,7,c
  6029   00139C  D003               	goto	i2u174_40
  6030   00139E  0E02               	movlw	2
  6031   0013A0  6004               	cpfslt	___ftpack@exp^0,c
  6032   0013A2  D7F6               	goto	i2l2712
  6033   0013A4                     i2u174_40:
  6034   0013A4  A004               	btfss	___ftpack@exp^0,0,c
  6035   0013A6  9E02               	bcf	(___ftpack@arg+1)^0,7,c
  6036   0013A8  90D8               	bcf	status,0,c
  6037   0013AA  3204               	rrcf	___ftpack@exp^0,f,c
  6038   0013AC  5004               	movf	___ftpack@exp^0,w,c
  6039   0013AE  1203               	iorwf	(___ftpack@arg+2)^0,f,c
  6040   0013B0  5005               	movf	___ftpack@sign^0,w,c
  6041   0013B2  A4D8               	btfss	status,2,c
  6042   0013B4  8E03               	bsf	(___ftpack@arg+2)^0,7,c
  6043   0013B6  C001  F001         	movff	___ftpack@arg,?___ftpack
  6044   0013BA  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  6045   0013BE  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  6046   0013C2  0012               	return		;funcret
  6047   0013C4                     __end_of___ftpack:
  6048                           	callstack 0
  6049                           
  6050 ;; *************** function _TransmitirVar *****************
  6051 ;; Defined at:
  6052 ;;		line 668 in file "Lab6SIMU.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;  buffer          2    1[COMRAM] PTR unsigned char 
  6055 ;;		 -> STR_8(20), STR_7(15), ISR@numAscii(0), 
  6056 ;; Auto vars:     Size  Location     Type
  6057 ;;		None
  6058 ;; Return value:  Size  Location     Type
  6059 ;;                  1    wreg      void 
  6060 ;; Registers used:
  6061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6062 ;; Tracked objects:
  6063 ;;		On entry : 0/0
  6064 ;;		On exit  : 0/0
  6065 ;;		Unchanged: 0/0
  6066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6067 ;;      Params:         2       0       0       0       0       0       0       0       0
  6068 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6069 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6070 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6071 ;;Total ram usage:        2 bytes
  6072 ;; Hardware stack levels used: 1
  6073 ;; Hardware stack levels required when called: 1
  6074 ;; This function calls:
  6075 ;;		_Transmitir
  6076 ;; This function is called by:
  6077 ;;		_ISR
  6078 ;; This function uses a non-reentrant model
  6079 ;;
  6080                           
  6081                           	psect	text39
  6082   001882                     __ptext39:
  6083                           	callstack 0
  6084   001882                     _TransmitirVar:
  6085                           	callstack 23
  6086                           
  6087                           ;Lab6SIMU.c: 669: while (*buffer) {
  6088                           
  6089                           ;incstack = 0
  6090   001882  D014               	goto	i2l3166
  6091   001884                     i2l3162:
  6092                           
  6093                           ;Lab6SIMU.c: 670: Transmitir(*buffer);
  6094   001884  C002  FFF6         	movff	TransmitirVar@buffer,tblptrl
  6095   001888  C003  FFF7         	movff	TransmitirVar@buffer+1,tblptrh
  6096   00188C  6AF8               	clrf	tblptru,c
  6097   00188E  0E07               	movlw	(high __ramtop+-1)
  6098   001890  64F7               	cpfsgt	tblptrh,c
  6099   001892  D003               	bra	i2u225_47
  6100   001894  0008               	tblrd		*
  6101   001896  50F5               	movf	tablat,w,c
  6102   001898  D005               	bra	i2u225_40
  6103   00189A                     i2u225_47:
  6104   00189A  CFF6 FFD9          	movff	tblptrl,fsr2l
  6105   00189E  CFF7 FFDA          	movff	tblptrh,fsr2h
  6106   0018A2  50DF               	movf	indf2,w,c
  6107   0018A4                     i2u225_40:
  6108   0018A4  ECEA  F00D         	call	_Transmitir
  6109                           
  6110                           ;Lab6SIMU.c: 671: buffer++;
  6111   0018A8  4A02               	infsnz	TransmitirVar@buffer^0,f,c
  6112   0018AA  2A03               	incf	(TransmitirVar@buffer+1)^0,f,c
  6113   0018AC                     i2l3166:
  6114   0018AC  C002  FFF6         	movff	TransmitirVar@buffer,tblptrl
  6115   0018B0  C003  FFF7         	movff	TransmitirVar@buffer+1,tblptrh
  6116   0018B4  6AF8               	clrf	tblptru,c
  6117   0018B6  0E07               	movlw	(high __ramtop+-1)
  6118   0018B8  64F7               	cpfsgt	tblptrh,c
  6119   0018BA  D003               	bra	i2u226_47
  6120   0018BC  0008               	tblrd		*
  6121   0018BE  50F5               	movf	tablat,w,c
  6122   0018C0  D005               	bra	i2u226_40
  6123   0018C2                     i2u226_47:
  6124   0018C2  CFF6 FFD9          	movff	tblptrl,fsr2l
  6125   0018C6  CFF7 FFDA          	movff	tblptrh,fsr2h
  6126   0018CA  50DF               	movf	indf2,w,c
  6127   0018CC                     i2u226_40:
  6128   0018CC  0900               	iorlw	0
  6129   0018CE  B4D8               	btfsc	status,2,c
  6130   0018D0  0012               	return	
  6131   0018D2  D7D8               	goto	i2l3162
  6132   0018D4                     __end_of_TransmitirVar:
  6133                           	callstack 0
  6134                           
  6135 ;; *************** function _Transmitir *****************
  6136 ;; Defined at:
  6137 ;;		line 663 in file "Lab6SIMU.c"
  6138 ;; Parameters:    Size  Location     Type
  6139 ;;  BufferT         1    wreg     unsigned char 
  6140 ;; Auto vars:     Size  Location     Type
  6141 ;;  BufferT         1    0[COMRAM] unsigned char 
  6142 ;; Return value:  Size  Location     Type
  6143 ;;                  1    wreg      void 
  6144 ;; Registers used:
  6145 ;;		wreg
  6146 ;; Tracked objects:
  6147 ;;		On entry : 0/0
  6148 ;;		On exit  : 0/0
  6149 ;;		Unchanged: 0/0
  6150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6151 ;;      Params:         0       0       0       0       0       0       0       0       0
  6152 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6153 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6154 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6155 ;;Total ram usage:        1 bytes
  6156 ;; Hardware stack levels used: 1
  6157 ;; This function calls:
  6158 ;;		Nothing
  6159 ;; This function is called by:
  6160 ;;		_ISR
  6161 ;;		_TransmitirVar
  6162 ;; This function uses a non-reentrant model
  6163 ;;
  6164                           
  6165                           	psect	text40
  6166   001BD4                     __ptext40:
  6167                           	callstack 0
  6168   001BD4                     _Transmitir:
  6169                           	callstack 23
  6170                           
  6171                           ;incstack = 0
  6172                           ;Transmitir@BufferT stored from wreg
  6173   001BD4  6E01               	movwf	Transmitir@BufferT^0,c
  6174   001BD6                     
  6175                           ;Lab6SIMU.c: 664: while(TRMT == 0);
  6176   001BD6  A2AC               	btfss	4012,1,c	;volatile
  6177   001BD8  D7FE               	goto	i2l2690
  6178                           
  6179                           ;Lab6SIMU.c: 665: TXREG = BufferT;
  6180   001BDA  C001  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  6181   001BDE  0012               	return		;funcret
  6182   001BE0                     __end_of_Transmitir:
  6183                           	callstack 0
  6184                           
  6185 ;; *************** function _ConversionADC *****************
  6186 ;; Defined at:
  6187 ;;		line 675 in file "Lab6SIMU.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;  canal           1    wreg     unsigned char 
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;  canal           1    0[COMRAM] unsigned char 
  6192 ;; Return value:  Size  Location     Type
  6193 ;;                  1    wreg      unsigned char 
  6194 ;; Registers used:
  6195 ;;		wreg, status,2, status,0
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6201 ;;      Params:         0       0       0       0       0       0       0       0       0
  6202 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6203 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6204 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6205 ;;Total ram usage:        1 bytes
  6206 ;; Hardware stack levels used: 1
  6207 ;; This function calls:
  6208 ;;		Nothing
  6209 ;; This function is called by:
  6210 ;;		_ISR
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           	psect	text41
  6215   001AEC                     __ptext41:
  6216                           	callstack 0
  6217   001AEC                     _ConversionADC:
  6218                           	callstack 24
  6219                           
  6220                           ;incstack = 0
  6221                           ;ConversionADC@canal stored from wreg
  6222   001AEC  6E01               	movwf	ConversionADC@canal^0,c
  6223                           
  6224                           ;Lab6SIMU.c: 676: if(canal > 12)
  6225   001AEE  0E0C               	movlw	12
  6226   001AF0  6401               	cpfsgt	ConversionADC@canal^0,c
  6227   001AF2  D002               	goto	i2l3134
  6228                           
  6229                           ;Lab6SIMU.c: 677: return 0;
  6230   001AF4  0E00               	movlw	0
  6231   001AF6  0012               	return	
  6232   001AF8                     i2l3134:
  6233                           
  6234                           ;Lab6SIMU.c: 679: ADCON0=(canal<<2)|0b00000001;
  6235   001AF8  4401               	rlncf	ConversionADC@canal^0,w,c
  6236   001AFA  46E8               	rlncf	wreg,f,c
  6237   001AFC  0BFC               	andlw	252
  6238   001AFE  0901               	iorlw	1
  6239   001B00  6EC2               	movwf	194,c	;volatile
  6240                           
  6241                           ;Lab6SIMU.c: 680: GO=1;
  6242   001B02  82C2               	bsf	4034,1,c	;volatile
  6243   001B04                     i2l451:
  6244   001B04  B2C2               	btfsc	4034,1,c	;volatile
  6245   001B06  D7FE               	goto	i2l451
  6246                           
  6247                           ;Lab6SIMU.c: 682: return ADRESH;
  6248   001B08  50C4               	movf	196,w,c	;volatile
  6249   001B0A  0012               	return		;funcret
  6250   001B0C                     __end_of_ConversionADC:
  6251                           	callstack 0
  6252                           
  6253                           	psect	rparam
  6254   000001                     ___rparam_used  equ	1
  6255   000000                     ___param_bank   equ	0
  6256   000000                     __Lparam        equ	__Lrparam
  6257   000000                     __Hparam        equ	__Hrparam
  6258                           
  6259                           	psect	temp
  6260   00003F                     btemp:
  6261                           	callstack 0
  6262   00003F                     	ds	1
  6263   00003F                     int$flags       set	btemp
  6264   000040                     wtemp8          set	btemp+1
  6265   000040                     ttemp5          set	btemp+1
  6266   000043                     ttemp6          set	btemp+4
  6267   000047                     ttemp7          set	btemp+8
  6268                           
  6269                           	psect	idloc
  6270                           
  6271                           ;Config register IDLOC0 @ 0x200000
  6272                           ;	unspecified, using default values
  6273   200000                     	org	2097152
  6274   200000  FF                 	db	255
  6275                           
  6276                           ;Config register IDLOC1 @ 0x200001
  6277                           ;	unspecified, using default values
  6278   200001                     	org	2097153
  6279   200001  FF                 	db	255
  6280                           
  6281                           ;Config register IDLOC2 @ 0x200002
  6282                           ;	unspecified, using default values
  6283   200002                     	org	2097154
  6284   200002  FF                 	db	255
  6285                           
  6286                           ;Config register IDLOC3 @ 0x200003
  6287                           ;	unspecified, using default values
  6288   200003                     	org	2097155
  6289   200003  FF                 	db	255
  6290                           
  6291                           ;Config register IDLOC4 @ 0x200004
  6292                           ;	unspecified, using default values
  6293   200004                     	org	2097156
  6294   200004  FF                 	db	255
  6295                           
  6296                           ;Config register IDLOC5 @ 0x200005
  6297                           ;	unspecified, using default values
  6298   200005                     	org	2097157
  6299   200005  FF                 	db	255
  6300                           
  6301                           ;Config register IDLOC6 @ 0x200006
  6302                           ;	unspecified, using default values
  6303   200006                     	org	2097158
  6304   200006  FF                 	db	255
  6305                           
  6306                           ;Config register IDLOC7 @ 0x200007
  6307                           ;	unspecified, using default values
  6308   200007                     	org	2097159
  6309   200007  FF                 	db	255
  6310                           
  6311                           	psect	config
  6312                           
  6313                           ;Config register CONFIG1L @ 0x300000
  6314                           ;	unspecified, using default values
  6315                           ;	PLL Prescaler Selection bits
  6316                           ;	PLLDIV = 0x0, unprogrammed default
  6317                           ;	System Clock Postscaler Selection bits
  6318                           ;	CPUDIV = 0x0, unprogrammed default
  6319                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  6320                           ;	USBDIV = 0x0, unprogrammed default
  6321   300000                     	org	3145728
  6322   300000  00                 	db	0
  6323                           
  6324                           ;Config register CONFIG1H @ 0x300001
  6325                           ;	Oscillator Selection bits
  6326                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  6327                           ;	Fail-Safe Clock Monitor Enable bit
  6328                           ;	FCMEN = 0x0, unprogrammed default
  6329                           ;	Internal/External Oscillator Switchover bit
  6330                           ;	IESO = 0x0, unprogrammed default
  6331   300001                     	org	3145729
  6332   300001  09                 	db	9
  6333                           
  6334                           ;Config register CONFIG2L @ 0x300002
  6335                           ;	unspecified, using default values
  6336                           ;	Power-up Timer Enable bit
  6337                           ;	PWRT = 0x1, unprogrammed default
  6338                           ;	Brown-out Reset Enable bits
  6339                           ;	BOR = 0x3, unprogrammed default
  6340                           ;	Brown-out Reset Voltage bits
  6341                           ;	BORV = 0x3, unprogrammed default
  6342                           ;	USB Voltage Regulator Enable bit
  6343                           ;	VREGEN = 0x0, unprogrammed default
  6344   300002                     	org	3145730
  6345   300002  1F                 	db	31
  6346                           
  6347                           ;Config register CONFIG2H @ 0x300003
  6348                           ;	Watchdog Timer Enable bit
  6349                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6350                           ;	Watchdog Timer Postscale Select bits
  6351                           ;	WDTPS = 0xF, unprogrammed default
  6352   300003                     	org	3145731
  6353   300003  1E                 	db	30
  6354                           
  6355                           ; Padding undefined space
  6356   300004                     	org	3145732
  6357   300004  FF                 	db	255
  6358                           
  6359                           ;Config register CONFIG3H @ 0x300005
  6360                           ;	CCP2 MUX bit
  6361                           ;	CCP2MX = 0x1, unprogrammed default
  6362                           ;	PORTB A/D Enable bit
  6363                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  6364                           ;	Low-Power Timer 1 Oscillator Enable bit
  6365                           ;	LPT1OSC = 0x0, unprogrammed default
  6366                           ;	MCLR Pin Enable bit
  6367                           ;	MCLRE = 0x1, unprogrammed default
  6368   300005                     	org	3145733
  6369   300005  81                 	db	129
  6370                           
  6371                           ;Config register CONFIG4L @ 0x300006
  6372                           ;	Stack Full/Underflow Reset Enable bit
  6373                           ;	STVREN = 0x1, unprogrammed default
  6374                           ;	Single-Supply ICSP Enable bit
  6375                           ;	LVP = OFF, Single-Supply ICSP disabled
  6376                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  6377                           ;	ICPRT = 0x0, unprogrammed default
  6378                           ;	Extended Instruction Set Enable bit
  6379                           ;	XINST = 0x0, unprogrammed default
  6380                           ;	Background Debugger Enable bit
  6381                           ;	DEBUG = 0x1, unprogrammed default
  6382   300006                     	org	3145734
  6383   300006  81                 	db	129
  6384                           
  6385                           ; Padding undefined space
  6386   300007                     	org	3145735
  6387   300007  FF                 	db	255
  6388                           
  6389                           ;Config register CONFIG5L @ 0x300008
  6390                           ;	unspecified, using default values
  6391                           ;	Code Protection bit
  6392                           ;	CP0 = 0x1, unprogrammed default
  6393                           ;	Code Protection bit
  6394                           ;	CP1 = 0x1, unprogrammed default
  6395                           ;	Code Protection bit
  6396                           ;	CP2 = 0x1, unprogrammed default
  6397                           ;	Code Protection bit
  6398                           ;	CP3 = 0x1, unprogrammed default
  6399   300008                     	org	3145736
  6400   300008  0F                 	db	15
  6401                           
  6402                           ;Config register CONFIG5H @ 0x300009
  6403                           ;	unspecified, using default values
  6404                           ;	Boot Block Code Protection bit
  6405                           ;	CPB = 0x1, unprogrammed default
  6406                           ;	Data EEPROM Code Protection bit
  6407                           ;	CPD = 0x1, unprogrammed default
  6408   300009                     	org	3145737
  6409   300009  C0                 	db	192
  6410                           
  6411                           ;Config register CONFIG6L @ 0x30000A
  6412                           ;	unspecified, using default values
  6413                           ;	Write Protection bit
  6414                           ;	WRT0 = 0x1, unprogrammed default
  6415                           ;	Write Protection bit
  6416                           ;	WRT1 = 0x1, unprogrammed default
  6417                           ;	Write Protection bit
  6418                           ;	WRT2 = 0x1, unprogrammed default
  6419                           ;	Write Protection bit
  6420                           ;	WRT3 = 0x1, unprogrammed default
  6421   30000A                     	org	3145738
  6422   30000A  0F                 	db	15
  6423                           
  6424                           ;Config register CONFIG6H @ 0x30000B
  6425                           ;	unspecified, using default values
  6426                           ;	Configuration Register Write Protection bit
  6427                           ;	WRTC = 0x1, unprogrammed default
  6428                           ;	Boot Block Write Protection bit
  6429                           ;	WRTB = 0x1, unprogrammed default
  6430                           ;	Data EEPROM Write Protection bit
  6431                           ;	WRTD = 0x1, unprogrammed default
  6432   30000B                     	org	3145739
  6433   30000B  E0                 	db	224
  6434                           
  6435                           ;Config register CONFIG7L @ 0x30000C
  6436                           ;	unspecified, using default values
  6437                           ;	Table Read Protection bit
  6438                           ;	EBTR0 = 0x1, unprogrammed default
  6439                           ;	Table Read Protection bit
  6440                           ;	EBTR1 = 0x1, unprogrammed default
  6441                           ;	Table Read Protection bit
  6442                           ;	EBTR2 = 0x1, unprogrammed default
  6443                           ;	Table Read Protection bit
  6444                           ;	EBTR3 = 0x1, unprogrammed default
  6445   30000C                     	org	3145740
  6446   30000C  0F                 	db	15
  6447                           
  6448                           ;Config register CONFIG7H @ 0x30000D
  6449                           ;	unspecified, using default values
  6450                           ;	Boot Block Table Read Protection bit
  6451                           ;	EBTRB = 0x1, unprogrammed default
  6452   30000D                     	org	3145741
  6453   30000D  40                 	db	64
  6454                           tosu	equ	0xFFF
  6455                           tosh	equ	0xFFE
  6456                           tosl	equ	0xFFD
  6457                           stkptr	equ	0xFFC
  6458                           pclatu	equ	0xFFB
  6459                           pclath	equ	0xFFA
  6460                           pcl	equ	0xFF9
  6461                           tblptru	equ	0xFF8
  6462                           tblptrh	equ	0xFF7
  6463                           tblptrl	equ	0xFF6
  6464                           tablat	equ	0xFF5
  6465                           prodh	equ	0xFF4
  6466                           prodl	equ	0xFF3
  6467                           indf0	equ	0xFEF
  6468                           postinc0	equ	0xFEE
  6469                           postdec0	equ	0xFED
  6470                           preinc0	equ	0xFEC
  6471                           plusw0	equ	0xFEB
  6472                           fsr0h	equ	0xFEA
  6473                           fsr0l	equ	0xFE9
  6474                           wreg	equ	0xFE8
  6475                           indf1	equ	0xFE7
  6476                           postinc1	equ	0xFE6
  6477                           postdec1	equ	0xFE5
  6478                           preinc1	equ	0xFE4
  6479                           plusw1	equ	0xFE3
  6480                           fsr1h	equ	0xFE2
  6481                           fsr1l	equ	0xFE1
  6482                           bsr	equ	0xFE0
  6483                           indf2	equ	0xFDF
  6484                           postinc2	equ	0xFDE
  6485                           postdec2	equ	0xFDD
  6486                           preinc2	equ	0xFDC
  6487                           plusw2	equ	0xFDB
  6488                           fsr2h	equ	0xFDA
  6489                           fsr2l	equ	0xFD9
  6490                           status	equ	0xFD8

Data Sizes:
    Strings     143
    Constant    16
    Data        3
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     41      62
    BANK0           160      7       7
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    aux	PTR unsigned char [1] size(1) Largest target is 17
		 -> STR_1(CODE[17]), 

    CrearCaracter@data	PTR const unsigned char  size(1) Largest target is 8
		 -> banda1(CODE[8]), banda2(CODE[8]), 

    FIN	PTR unsigned char [1] size(1) Largest target is 16
		 -> STR_2(CODE[16]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_10(CODE[11]), STR_2(CODE[16]), STR_3(CODE[11]), 
		 -> STR_4(CODE[16]), STR_5(CODE[12]), STR_6(CODE[11]), STR_9(CODE[14]), 

    numASCII@ascii_values	PTR unsigned char  size(2) Largest target is 0
		 -> ISR@numAscii(COMRAM[0]), 

    TransmitirVar@buffer	PTR unsigned char  size(2) Largest target is 20
		 -> ISR@numAscii(COMRAM[0]), STR_7(CODE[15]), STR_8(CODE[20]), 


Critical Paths under _main in COMRAM

    _main->_Bienvenida
    _main->_EscribeLCD_n8
    _MostrarNumeros->___lbmod
    _MedirDistancia->___lwdiv
    _EscribeLCD_n8->___lbdiv
    ___lbdiv->___lbmod
    _Emergencia->_MensajeLCD_Var
    _MensajeLCD_Var->_EscribeLCD_c
    _Bienvenida->_CrearCaracter
    _OcultarCursorLCD->_EnviaDato
    _MostrarCursorLCD->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _CrearCaracter->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->___fttol
    i2_MostrarNumeros->i2___lbmod
    i2_MedirDistancia->i2___lwdiv
    i2_EscribeLCD_n8->i2___lbdiv
    i2___lbdiv->i2___lbmod
    i2_EscribeLCD_c->i2_EnviaDato
    i2_DireccionaLCD->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD
    _numASCII->___awdiv
    ___awtoft->___awdiv
    ___awtoft->___ftpack
    _TransmitirVar->_Transmitir

Critical Paths under _main in BANK0

    _main->_EscribeLCD_n8

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7792
                                              4 BANK0      3     3      0
                         _Bienvenida
                           _BorraLCD
                       _ConfiguraLCD
                      _DireccionaLCD
                         _Emergencia
                      _EscribeLCD_n8
                      _InicializaLCD
                     _MedirDistancia
                     _MensajeLCD_Var
                   _MostrarCursorLCD
                     _MostrarNumeros
                   _OcultarCursorLCD
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (1) _MostrarNumeros                                       0     0      0     272
                            ___lbmod
 ---------------------------------------------------------------------------------
 (1) _MedirDistancia                                       1     1      0     287
                                             39 COMRAM     1     1      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     247
                                             32 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _EscribeLCD_n8                                        5     4      1    1305
                                             40 COMRAM     1     0      1
                                              0 BANK0      4     4      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1     272
                                             32 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     272
                                             36 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Emergencia                                           0     0      0     888
                           _BorraLCD
                      _DireccionaLCD
                     _MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       1     0      1     371
                                             37 COMRAM     1     0      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (1) _Bienvenida                                           3     3      0    2490
                                             40 COMRAM     1     1      0
                                              0 BANK0      2     2      0
                       _ConfiguraLCD
                      _CrearCaracter
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                   _MostrarCursorLCD
                   _OcultarCursorLCD
 ---------------------------------------------------------------------------------
 (1) _OcultarCursorLCD                                     0     0      0     235
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _MostrarCursorLCD                                     0     0      0     235
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     470
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     235
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0     282
                                             36 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     282
                                             36 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _CrearCaracter                                        4     3      1     418
                                             36 COMRAM     4     3      1
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _EnviaDato                                            2     2      0     188
                                             34 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _RetardoLCD                                           2     2      0      47
                                             32 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0     141
                                             32 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                 17    17      0    3884
                                             15 COMRAM    17    17      0
                      _ConversionADC
                         _Transmitir
                      _TransmitirVar
                            ___awdiv
                           ___awtoft
                            ___fttol
                           _numASCII
                    i2_DireccionaLCD
                     i2_EscribeLCD_c
                    i2_EscribeLCD_n8
                   i2_MedirDistancia
                   i2_MostrarNumeros
                          i2___lbdiv
 ---------------------------------------------------------------------------------
 (7) i2_MostrarNumeros                                     0     0      0     173
                          i2___lbmod
 ---------------------------------------------------------------------------------
 (7) i2_MedirDistancia                                     1     1      0     189
                                              7 COMRAM     1     1      0
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (8) i2___lwdiv                                            7     3      4     164
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) i2_EscribeLCD_n8                                      5     4      1     836
                                              8 COMRAM     5     4      1
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
                          i2___lbdiv
                          i2___lbmod
 ---------------------------------------------------------------------------------
 (8) i2___lbmod                                            4     3      1     173
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (7) i2___lbdiv                                            4     3      1     174
                                              4 COMRAM     4     3      1
                          i2___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (7) i2_EscribeLCD_c                                       1     1      0     174
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) i2_DireccionaLCD                                      1     1      0     174
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_EnviaDato                                          2     2      0     116
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_RetardoLCD                                         2     2      0      29
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _numASCII                                             4     0      4     914
                                              8 COMRAM     4     0      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     306
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) ___fttol                                             15    11      4     253
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (7) ___awtoft                                             4     1      3     326
                                              8 COMRAM     4     1      3
                            ___awdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (8) ___ftpack                                             8     3      5     234
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (7) _TransmitirVar                                        2     0      2      77
                                              1 COMRAM     2     0      2
                         _Transmitir
 ---------------------------------------------------------------------------------
 (8) _Transmitir                                           1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ConversionADC                                        1     1      0      58
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Bienvenida
     _ConfiguraLCD
     _CrearCaracter
       _EnviaDato
         _HabilitaLCD
         _RetardoLCD
       _HabilitaLCD
       _RetardoLCD
     _DireccionaLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _EscribeLCD_c
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _InicializaLCD
       _BorraLCD
         _EnviaDato
         _HabilitaLCD
         _RetardoLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _MostrarCursorLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _OcultarCursorLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
   _BorraLCD
   _ConfiguraLCD
   _DireccionaLCD
   _Emergencia
     _BorraLCD
     _DireccionaLCD
     _MensajeLCD_Var
       _EscribeLCD_c
   _EscribeLCD_n8
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
     ___lbdiv
       ___lbmod (ARG)
     ___lbmod
   _InicializaLCD
   _MedirDistancia
     ___lwdiv
   _MensajeLCD_Var
   _MostrarCursorLCD
   _MostrarNumeros
     ___lbmod
   _OcultarCursorLCD
   ___lbdiv
   ___lbmod

 _ISR (ROOT)
   _ConversionADC
   _Transmitir
   _TransmitirVar
     _Transmitir
   ___awdiv
   ___awtoft
     ___awdiv (ARG)
     ___ftpack (ARG)
   ___fttol
   _numASCII
     ___awdiv
     ___awmod
   i2_DireccionaLCD
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_EscribeLCD_c
     i2_EnviaDato
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_EscribeLCD_n8
     i2_EnviaDato
     i2_HabilitaLCD
     i2_RetardoLCD
     i2___lbdiv
       i2___lbmod (ARG)
     i2___lbmod
   i2_MedirDistancia
     i2___lwdiv
   i2_MostrarNumeros
     i2___lbmod
   i2___lbdiv

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      7       7      4.4%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     41      62     66.0%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
BITBIGSFRll         33      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      69      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Mar 07 01:38:20 2025

       Transmitir@BufferT 0001                        _GO 7E11          i2DireccionaLCD@a 0005  
                      _RI 7E84          i2EscribeLCD_n8@a 000D          i2EscribeLCD_n8@b 0009  
            ___awdiv@sign 0006                EnviaDato@a 0024                        _ok 0035  
      i2___lwdiv@dividend 0001             _InicializaLCD 13C4                       l320 0DBA  
                     l470 1510                       l463 14FA                       l468 150E  
                     l978 1826                       _GIE 7F97                       _FIN 003C  
                     _RC0 7C10                       _RC1 7C11                       _RB4 7C0C  
                     _RB5 7C0D                       _RB6 7C0E                       _RB7 7C0F  
                     _PR2 0FCB                       _ISR 0008                       _aux 003D  
            ___awmod@sign 0006                       wreg 0FE8                      ?_ISR 0001  
                    ISR@d 001A          ??i2_EscribeLCD_c 0005                      l4006 1006  
                    l4022 1076                      l4040 0EB0                      l4122 1522  
                    l4060 0F20                      l4300 0DBC                      l4046 0ED2  
                    l4126 1536                      l4150 1772                      l4142 175A  
                    l4222 0CC8                      l4048 0EDE                      l4128 154E  
                    l4216 0CBE                      l4066 0F3A                      l4154 177E  
                    l4146 1766                      l4138 174E                      l4242 0CEE  
                    l4084 0F86                      l4324 0E16                      l4326 0E1A  
                    l4254 0D10                      l4246 0CF6                      l4096 1A70  
                    l4264 0D42                      l3810 13D6                      l4346 0E66  
                    l3820 13F4                      l3830 1412                      l4286 0D88  
                    l3760 16B0                      l3762 16BA                      l3906 164E  
                    l3850 144A                      l3756 168E                      l3780 1912  
                    l3860 1A9E                      l3940 19D0                      l3932 19BA  
                    l3758 169E                      l3766 16C4                      l3864 1AB0  
                    l3928 19B4                      l3944 19D8                      l3960 1A94  
                    l3952 1A7C                      l3972 17F4                      l3990 0F94  
                    l3974 17FC                      l3984 181C                      l3996 0FB8  
                    STR_1 0825                      STR_2 0836                      STR_3 0895  
                    STR_4 0846                      STR_5 0873                      STR_6 087F  
                    STR_7 0856                      STR_8 0811                      STR_9 0865  
                    _LATA 0F89                      _LATB 0F8A                      _LATC 0F8B  
                    _LATD 0F8C                      _LATE 0F8D                      u3300 1800  
                    u3180 1B1E                      u3260 19BE                      u3360 1504  
                    u3390 1518                      u3707 0E54                      u3717 0EC4  
                    u3807 16BC                      u3727 0EF2                      _RBIE 7F93  
                    _RBIF 7F90                      u3817 1BBC                      u3737 0F12  
                    u3657 0CB0                      u3747 0F56                      u3667 0D32  
                    u3757 0F76                      u3677 0D9E                      u3767 1694  
                    u3687 0DDC                      u3777 16A0                      u3697 0E0C  
                    u3787 16A8                      u3797 16B2                      _RBPU 7F8F  
                    _TMR0 0FD6                      _TMR1 0FCE                      _TMR2 0FCC  
                    _TRMT 7D61            ??_EscribeLCD_c 0025                      _main 0C14  
            ___ftpack@arg 0001              ___ftpack@exp 0004        i2___lwdiv@quotient 0005  
                    fsr2h 0FDA                      indf2 0FDF                      fsr2l 0FD9  
                    btemp 003F                _Bienvenida 0E82                      prodh 0FF4  
                    prodl 0FF3                      start 000E            CrearCaracter@i 0028  
            ___param_bank 0000                     ??_ISR 0010              ___fttol@exp1 000F  
            ___fttol@lval 000B           i2_DireccionaLCD 1B66         ??i2_EscribeLCD_n8 000A  
          ?_InicializaLCD 0001                     ?_main 0001           __end_of___awdiv 14E2  
         __end_of___lbdiv 19DC                     STR_10 088A                     _CCPR2 0FBB  
         __end_of___awmod 1630             EscribeLCD_c@a 0025           __end_of___lbmod 1A9C  
                   _T0CON 0FD5           ___awdiv@divisor 0003                     _T1CON 0FCD  
         __end_of___fttol 1316                     _T2CON 0FCA                     _LATA1 7C49  
                   _LATA2 7C4A                     _LATA3 7C4B                     _LATA4 7C4C  
                   _LATA5 7C4D           __end_of___lwdiv 1830                     i2l351 0A38  
                   i2l361 0A90                     i2l370 0AF4                     i2l354 0A44  
                   i2l451 1B04                     i2l339 09F4                     i2l364 0AAC  
                   i2l373 0B18                     i2l349 0A1E                     i2l470 1580  
                   i2l390 0BB2                     i2l358 0A74                     i2l463 156A  
                   i2l384 0B7A                     i2l376 0B34                     i2l387 0B96  
                   i2l379 0B50                     i2l468 157E                     i2l397 0BF0  
         ___awdiv@counter 0005                     i2l978 1878                     _RCSTA 0FAB  
    numASCII@ascii_values 000B                     _SPBRG 0FAF                     _PORTB 0F81  
                   _TRISA 0F92                     _TRISB 0F93                     _TRISD 0F95  
                   _TRISE 0F96                     _TXREG 0FAD                     _TXSTA 0FAC  
              _Emergencia 1A4A           ??_EscribeLCD_n8 002A                     _Tecla 003B  
           ___awtoft@sign 000C                     _block 0036                     _input 0037  
         ??_ConversionADC 0001             ___ftpack@sign 0005                     tablat 0FF5  
             _HabilitaLCD 1BB8                     ttemp5 0040                     ttemp6 0043  
                   ttemp7 0047           ??_TransmitirVar 0004                     status 0FD8  
                   wtemp8 0040             i2___lbmod@rem 0004           ___lbdiv@divisor 0025  
         ___lbdiv@counter 0027          __end_of_BorraLCD 1BB8           __initialization 196C  
         _Iniciarpregunta 0034              __end_of_main 0E82                    ??_main 0064  
    __end_of_ConfiguraLCD 1B24             ___fttol@sign1 000A             __activetblptr 0002  
   __end_of_CrearCaracter 168A                    ISR@dis 0020                    _ADCON0 0FC2  
                  _ADCON1 0FC1                    _ADCON2 0FC0                    _CCP2IF 7D08  
                  _ADRESH 0FC4            DireccionaLCD@a 0025                    _CCPR1L 0FBE  
          EscribeLCD_n8@a 0063            EscribeLCD_n8@b 0029          ___awdiv@dividend 0001  
        __end_of___awtoft 1A4A          __end_of___ftpack 13C4                    i2l3204 12C4  
                  i2l3300 17D2                    i2l3134 1AF8                    i2l3222 1304  
                  i2l3214 12DC                    i2l3216 12E8                    i2l3208 12D4  
                  i2l3152 1208                    i2l3162 1884                    i2l3146 11A0  
                  i2l3242 10B2                    i2l3252 10F8                    i2l3236 1092  
                  i2l3332 15A6                    i2l3166 18AC                    i2l2710 1372  
                  i2l2702 1334                    i2l3334 15BE                    i2l2712 1390  
                  i2l2704 133E                    i2l3176 1A26                    i2l2560 1706  
                  i2l3328 1592                    i2l2714 139A                    i2l2706 135C  
                  i2l3186 1270                    i2l2802 1618                    i2l2562 1710  
                  i2l2556 16E4                    i2l3268 115C                    i2l3292 17BA  
                  i2l3284 17A2                    i2l3612 0A18                    i2l2750 1498  
                  i2l2806 1626                    i2l2558 16F4                    i2l2566 171A  
                  i2l2910 1A08                    i2l2902 19F2                    i2l2752 14A0  
                  i2l2744 1482                    i2l3296 17C6                    i2l3288 17AE  
                  i2l2690 1BD6                    i2l2770 14D8                    i2l2762 14C0  
                  i2l2738 1472                    i2l2914 1A10                    i2l2930 1AE4  
                  i2l2922 1ACC                    i2l3730 0BBA                    i2l3660 0AC8  
                  i2l3628 0A54                    i2l2766 14CA                    i2l2790 15EE  
                  i2l2782 15D4                    i2l2942 1846                    i2l3742 0BDE  
                  i2l3662 0ACC                    i2l3582 09CE                    i2l2792 15F6  
                  i2l2944 184E                    i2l3736 0BCE                    i2l3728 0BB6  
                  i2l3568 095E                    i2l3576 09BE                    i2l2786 15E0  
                  i2l2954 186E                    i2l3668 0AF8                    i2l3596 09EC  
                  i2l3588 09D8                    i2l2798 160E                    i2l2888 195E  
                  i2l2898 19EC                    i2l3698 0B5A                    u229_41 1254  
                  _TMR0IE 7F95                    _TMR0IF 7F92                    _TMR1IF 7CF0  
                  _TMR0ON 7EAF                    _TMR1ON 7E68                    _TMR2ON 7E52  
        i2_MostrarNumeros 178A                    _TRISC0 7CA0                    _TRISC2 7CA2  
   __end_of_DireccionaLCD 1B50                _RetardoLCD 168A               ?_Bienvenida 0001  
 __end_ofi2_DireccionaLCD 1B7C         Bienvenida@max_pos 0060             Bienvenida@pos 0061  
    EscribeLCD_n8@centena 0060                    _banda1 0809                    _banda2 0801  
               ??___awdiv 0005                 ??___lbdiv 0026                 ??___awmod 0005  
               ??___lbmod 0022                 ??___fttol 0005                 ??___lwdiv 0025  
         ??_InicializaLCD 0025         ?i2_MedirDistancia 0001                    _objeto 002E  
        __end_of_numASCII 1244                    clear_0 1990          ___awdiv@quotient 0007  
         ___awmod@divisor 0003                    isa$std 0001  __end_of_OcultarCursorLCD 1B90  
         ___awmod@counter 0005      __end_of_EscribeLCD_c 1B3A        ??i2_MedirDistancia 0008  
            ?i2_EnviaDato 0001              __pdataCOMRAM 003C         __end_ofi2___lbdiv 1A14  
       __end_ofi2___lbmod 1AEC               ?_Emergencia 0001         __end_ofi2___lwdiv 1882  
            __mediumconst 0000                    tblptrh 0FF7                    tblptrl 0FF6  
                  tblptru 0FF8                _Transmitir 1BD4         MedirDistancia@aux 0028  
        ___lbdiv@dividend 0026          ??_MedirDistancia 0028           ___lbmod@divisor 0021  
   __end_ofi2_HabilitaLCD 1BD4                __accesstop 0060   __end_of__initialization 1996  
         ___lbmod@counter 0023             ___rparam_used 0001                ___awtoft@c 0009  
              ___fttol@f1 0001            __pcstackCOMRAM 0001          CrearCaracter@pos 0027  
       __end_of_EnviaDato 1920          ___lbdiv@quotient 0028               ISR@numAscii 001A  
               ?_BorraLCD 0001            _MensajeLCD_Var 1A9C       TransmitirVar@buffer 0002  
         MensajeLCD_Var@a 0026               ?_RetardoLCD 0001                 ISR@valADC 001D  
             RetardoLCD@a 0022                 ISR@valPWM 001E           i2_EscribeLCD_n8 108C  
        ?i2_DireccionaLCD 0001                   _CCP1CON 0FBD                   _CCP2CON 0FBA  
                 _BAUDCON 0FB8            _MostrarNumeros 1736                 ?___awtoft 0009  
               ?___ftpack 0001          _MostrarCursorLCD 1B90    __end_of_MensajeLCD_Var 1AC4  
              ??_BorraLCD 0025               ?_Transmitir 0001              ?_HabilitaLCD 0001  
               ?_numASCII 0009              _ConfiguraLCD 1B0C                   __Hparam 0000  
   i2EscribeLCD_n8@decena 000B                   __Lparam 0000    __end_of_MostrarNumeros 178A  
                 ___awdiv 1460                   ___lbdiv 19A4                   ___awmod 15C2  
                 ___lbmod 1A74                   ___fttol 1244     i2EscribeLCD_n8@unidad 000C  
                 ___lwdiv 17DE              __psmallconst 0800                   __pcinit 196C  
              ??___awtoft 000C                ??___ftpack 0006                   __ramtop 0800  
                 __ptext0 0C14                   __ptext1 1736                   __ptext2 14E2  
                 __ptext3 17DE                   __ptext4 0F8C                   __ptext5 1A74  
                 __ptext6 19A4                   __ptext7 1A4A                   __ptext8 1A9C  
                 __ptext9 0E82  __end_ofi2_MostrarNumeros 17DE             _Actual_sensor 002B  
        ___awmod@dividend 0001           ?_MensajeLCD_Var 0026     __end_of_EscribeLCD_n8 108C  
          __pintcode_body 08A2      end_of_initialization 1996   __end_ofi2_EscribeLCD_n8 1172  
   __end_of_ConversionADC 1B0C             __Lmediumconst 0000                   int_func 08A2  
              ??_numASCII 000D              _EscribeLCD_c 1B24              ??_Bienvenida 0029  
      ConversionADC@canal 0001     __end_of_TransmitirVar 18D4                   postinc0 0FEE  
         ?_MostrarNumeros 0001         ?_OcultarCursorLCD 0001              ??_Emergencia 0027  
      ??_OcultarCursorLCD 0025          ___lbmod@dividend 0022        __end_of_Bienvenida 0F8C  
         i2EscribeLCD_c@a 0005                 i2___lbdiv 19DC                 i2___lbmod 1AC4  
       i2___lwdiv@divisor 0003                 i2___lwdiv 1830         i2___lwdiv@counter 0007  
             ___lbmod@rem 0024             ?i2_RetardoLCD 0001        __end_of_Emergencia 1A74  
       CrearCaracter@data 0025            __end_of_banda1 0811            __end_of_banda2 0809  
           __pidataCOMRAM 1BE0     __end_of_InicializaLCD 1460                 _EnviaDato 18D4  
     start_initialization 196C               __end_of_ISR 0C14                ?i2___lbdiv 0005  
              ?i2___lbmod 0001                ?i2___lwdiv 0001          ?i2_EscribeLCD_n8 0009  
          ??i2_RetardoLCD 0001              ??_RetardoLCD 0021  __end_of_MostrarCursorLCD 1BA4  
      i2___lbdiv@dividend 0006       EscribeLCD_n8@decena 0061       EscribeLCD_n8@unidad 0062  
              ?_EnviaDato 0001               __pbssCOMRAM 002A        __end_of_RetardoLCD 16E0  
           __pcstackBANK0 0060             _CrearCaracter 1630        i2___lbdiv@quotient 0008  
            ??_Transmitir 0001             _DireccionaLCD 1B3A            i2_EscribeLCD_c 1B50  
        ___lwdiv@dividend 0021                 __pintcode 0008                 _flagMotor 002A  
               _faltantes 0039                  ?___awdiv 0001                  ?___lbdiv 0025  
                ?___awmod 0001                  ?___lbmod 0021                  ?___fttol 0001  
                ?___lwdiv 0021        __end_of_Transmitir 1BE0                 _emergency 0033  
        ??_MensajeLCD_Var 0027         ?i2_MostrarNumeros 0001               __smallconst 0800  
          ?_CrearCaracter 0025        ??i2_MostrarNumeros 0005          ___lwdiv@quotient 0026  
             ??i2___lbdiv 0006               ??i2___lbmod 0002          i2_MedirDistancia 1552  
             ??i2___lwdiv 0005             i2_HabilitaLCD 1BC6            ?_DireccionaLCD 0001  
  __end_ofi2_EscribeLCD_c 1B66          ??_MostrarNumeros 0025                  i2u203_40 1852  
                i2u230_40 125E                  i2u231_40 128E                  i2u223_40 1182  
                i2u231_45 1286                  i2u224_40 11B0                  i2u225_40 18A4  
                i2u225_47 189A                  i2u226_40 18CC                  i2u170_40 1326  
                i2u226_47 18C2                  i2u235_40 12EE                  i2u180_40 14A4  
                i2u244_40 1574                  i2u174_40 13A4                  i2u247_40 1588  
                i2u186_40 15FA                  i2u268_40 08DA                  i2u269_45 08DC  
                i2u286_40 0A50                  i2u382_47 0BE4                  i2u199_40 19F6  
                i2u383_47 16EA                  i2u384_47 16F6                  i2u385_47 16FE  
                i2u386_47 1708                  i2u387_47 1712                  i2u388_47 1BCA  
           ??i2_EnviaDato 0003      __end_ofi2_RetardoLCD 1736               ??_EnviaDato 0023  
                _BorraLCD 1BA4            ?i2_HabilitaLCD 0001           ?i2_EscribeLCD_c 0001  
                __Hrparam 0000         i2___lbdiv@divisor 0005    i2EscribeLCD_n8@centena 000A  
       i2___lbdiv@counter 0007                  __Lrparam 0000              i2EnviaDato@a 0004  
                ___awtoft 1A14                  ___ftpack 1316           ??_CrearCaracter 0026  
           ConfiguraLCD@a 0021         ??i2_DireccionaLCD 0005           ___lwdiv@divisor 0023  
         ___lwdiv@counter 0025                  __ptext10 1B7C                  __ptext11 1B90  
                __ptext20 1B0C                  __ptext12 13C4                  __ptext13 1BA4  
                __ptext30 1920                  __ptext22 178A                  __ptext14 1B24  
                __ptext31 16E0                  __ptext23 1552                  __ptext15 1B3A  
                __ptext40 1BD4                  __ptext32 1BC6                  __ptext24 1830  
                __ptext16 1630                  __ptext41 1AEC                  __ptext33 1172  
                __ptext25 108C                  __ptext17 18D4                  __ptext34 15C2  
                __ptext26 1AC4                  __ptext18 168A                  __ptext35 1460  
                __ptext27 19DC                  __ptext19 1BB8                  __ptext36 1244  
                __ptext28 1B50                  __ptext37 1A14                  __ptext29 1B66  
                __ptext38 1316                  __ptext39 1882            numASCII@number 0009  
     __end_ofi2_EnviaDato 196C                  _contadas 0038                  _contador 0032  
      i2___lbmod@dividend 0002                  _ctimeout 002F                  _inactive 0031  
         ??_DireccionaLCD 0025                  _etimeout 0030                  _objetivo 003A  
                _numASCII 1172                  _interfaz 003E         ?_MostrarCursorLCD 0001  
      ??_MostrarCursorLCD 0025                  isa$xinst 0000            _MedirDistancia 14E2  
                int$flags 003F              _motorAntiguo 002C             _EscribeLCD_n8 0F8C  
         ??i2_HabilitaLCD 0001                  intlevel2 0000             ??_HabilitaLCD 0021  
           _ConversionADC 1AEC             ?_ConfiguraLCD 0001         i2___lbmod@divisor 0001  
       i2___lbmod@counter 0003             i2RetardoLCD@a 0002    __end_of_MedirDistancia 1552  
           _TransmitirVar 1882               _motorActual 002D       i2MedirDistancia@aux 0008  
__end_ofi2_MedirDistancia 15C2               i2_EnviaDato 1920        main@Antiguo_sensor 0066  
          ?_EscribeLCD_n8 0029            ?_ConversionADC 0001            ??_ConfiguraLCD 0021  
        _OcultarCursorLCD 1B7C             ?_EscribeLCD_c 0001              i2_RetardoLCD 16E0  
          ?_TransmitirVar 0002           ?_MedirDistancia 0001       __end_of_HabilitaLCD 1BC6  
