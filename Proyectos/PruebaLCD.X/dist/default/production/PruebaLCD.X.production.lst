

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Jan 23 13:00:16 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 25/07/2024 GMT
    25                           ; 
    26                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4550 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000FE0                     bsr             equ	4064
    59   000FE9                     fsr0            equ	4073
    60   000FEA                     fsr0h           equ	4074
    61   000FE9                     fsr0l           equ	4073
    62   000FE1                     fsr1            equ	4065
    63   000FE2                     fsr1h           equ	4066
    64   000FE1                     fsr1l           equ	4065
    65   000FD9                     fsr2            equ	4057
    66   000FDA                     fsr2h           equ	4058
    67   000FD9                     fsr2l           equ	4057
    68   000FEF                     indf0           equ	4079
    69   000FE7                     indf1           equ	4071
    70   000FDF                     indf2           equ	4063
    71   000FF2                     intcon          equ	4082
    72   000000                     nvmcon          equ	0
    73   000FF9                     pcl             equ	4089
    74   000FFA                     pclath          equ	4090
    75   000FFB                     pclatu          equ	4091
    76   000FEB                     plusw0          equ	4075
    77   000FE3                     plusw1          equ	4067
    78   000FDB                     plusw2          equ	4059
    79   000FED                     postdec0        equ	4077
    80   000FE5                     postdec1        equ	4069
    81   000FDD                     postdec2        equ	4061
    82   000FEE                     postinc0        equ	4078
    83   000FE6                     postinc1        equ	4070
    84   000FDE                     postinc2        equ	4062
    85   000FEC                     preinc0         equ	4076
    86   000FE4                     preinc1         equ	4068
    87   000FDC                     preinc2         equ	4060
    88   000FF3                     prod            equ	4083
    89   000FF4                     prodh           equ	4084
    90   000FF3                     prodl           equ	4083
    91   000FD8                     status          equ	4056
    92   000FF5                     tablat          equ	4085
    93   000FF6                     tblptr          equ	4086
    94   000FF7                     tblptrh         equ	4087
    95   000FF6                     tblptrl         equ	4086
    96   000FF8                     tblptru         equ	4088
    97   000FFD                     tosl            equ	4093
    98   000FE8                     wreg            equ	4072
    99   000F62                     SPPDATA         equ	3938	;# 
   100   000F63                     SPPCFG          equ	3939	;# 
   101   000F64                     SPPEPS          equ	3940	;# 
   102   000F65                     SPPCON          equ	3941	;# 
   103   000F66                     UFRM            equ	3942	;# 
   104   000F66                     UFRML           equ	3942	;# 
   105   000F67                     UFRMH           equ	3943	;# 
   106   000F68                     UIR             equ	3944	;# 
   107   000F69                     UIE             equ	3945	;# 
   108   000F6A                     UEIR            equ	3946	;# 
   109   000F6B                     UEIE            equ	3947	;# 
   110   000F6C                     USTAT           equ	3948	;# 
   111   000F6D                     UCON            equ	3949	;# 
   112   000F6E                     UADDR           equ	3950	;# 
   113   000F6F                     UCFG            equ	3951	;# 
   114   000F70                     UEP0            equ	3952	;# 
   115   000F71                     UEP1            equ	3953	;# 
   116   000F72                     UEP2            equ	3954	;# 
   117   000F73                     UEP3            equ	3955	;# 
   118   000F74                     UEP4            equ	3956	;# 
   119   000F75                     UEP5            equ	3957	;# 
   120   000F76                     UEP6            equ	3958	;# 
   121   000F77                     UEP7            equ	3959	;# 
   122   000F78                     UEP8            equ	3960	;# 
   123   000F79                     UEP9            equ	3961	;# 
   124   000F7A                     UEP10           equ	3962	;# 
   125   000F7B                     UEP11           equ	3963	;# 
   126   000F7C                     UEP12           equ	3964	;# 
   127   000F7D                     UEP13           equ	3965	;# 
   128   000F7E                     UEP14           equ	3966	;# 
   129   000F7F                     UEP15           equ	3967	;# 
   130   000F80                     PORTA           equ	3968	;# 
   131   000F81                     PORTB           equ	3969	;# 
   132   000F82                     PORTC           equ	3970	;# 
   133   000F83                     PORTD           equ	3971	;# 
   134   000F84                     PORTE           equ	3972	;# 
   135   000F89                     LATA            equ	3977	;# 
   136   000F8A                     LATB            equ	3978	;# 
   137   000F8B                     LATC            equ	3979	;# 
   138   000F8C                     LATD            equ	3980	;# 
   139   000F8D                     LATE            equ	3981	;# 
   140   000F92                     TRISA           equ	3986	;# 
   141   000F92                     DDRA            equ	3986	;# 
   142   000F93                     TRISB           equ	3987	;# 
   143   000F93                     DDRB            equ	3987	;# 
   144   000F94                     TRISC           equ	3988	;# 
   145   000F94                     DDRC            equ	3988	;# 
   146   000F95                     TRISD           equ	3989	;# 
   147   000F95                     DDRD            equ	3989	;# 
   148   000F96                     TRISE           equ	3990	;# 
   149   000F96                     DDRE            equ	3990	;# 
   150   000F9B                     OSCTUNE         equ	3995	;# 
   151   000F9D                     PIE1            equ	3997	;# 
   152   000F9E                     PIR1            equ	3998	;# 
   153   000F9F                     IPR1            equ	3999	;# 
   154   000FA0                     PIE2            equ	4000	;# 
   155   000FA1                     PIR2            equ	4001	;# 
   156   000FA2                     IPR2            equ	4002	;# 
   157   000FA6                     EECON1          equ	4006	;# 
   158   000FA7                     EECON2          equ	4007	;# 
   159   000FA8                     EEDATA          equ	4008	;# 
   160   000FA9                     EEADR           equ	4009	;# 
   161   000FAB                     RCSTA           equ	4011	;# 
   162   000FAB                     RCSTA1          equ	4011	;# 
   163   000FAC                     TXSTA           equ	4012	;# 
   164   000FAC                     TXSTA1          equ	4012	;# 
   165   000FAD                     TXREG           equ	4013	;# 
   166   000FAD                     TXREG1          equ	4013	;# 
   167   000FAE                     RCREG           equ	4014	;# 
   168   000FAE                     RCREG1          equ	4014	;# 
   169   000FAF                     SPBRG           equ	4015	;# 
   170   000FAF                     SPBRG1          equ	4015	;# 
   171   000FB0                     SPBRGH          equ	4016	;# 
   172   000FB1                     T3CON           equ	4017	;# 
   173   000FB2                     TMR3            equ	4018	;# 
   174   000FB2                     TMR3L           equ	4018	;# 
   175   000FB3                     TMR3H           equ	4019	;# 
   176   000FB4                     CMCON           equ	4020	;# 
   177   000FB5                     CVRCON          equ	4021	;# 
   178   000FB6                     ECCP1AS         equ	4022	;# 
   179   000FB6                     CCP1AS          equ	4022	;# 
   180   000FB7                     ECCP1DEL        equ	4023	;# 
   181   000FB7                     CCP1DEL         equ	4023	;# 
   182   000FB8                     BAUDCON         equ	4024	;# 
   183   000FB8                     BAUDCTL         equ	4024	;# 
   184   000FBA                     CCP2CON         equ	4026	;# 
   185   000FBB                     CCPR2           equ	4027	;# 
   186   000FBB                     CCPR2L          equ	4027	;# 
   187   000FBC                     CCPR2H          equ	4028	;# 
   188   000FBD                     CCP1CON         equ	4029	;# 
   189   000FBD                     ECCP1CON        equ	4029	;# 
   190   000FBE                     CCPR1           equ	4030	;# 
   191   000FBE                     CCPR1L          equ	4030	;# 
   192   000FBF                     CCPR1H          equ	4031	;# 
   193   000FC0                     ADCON2          equ	4032	;# 
   194   000FC1                     ADCON1          equ	4033	;# 
   195   000FC2                     ADCON0          equ	4034	;# 
   196   000FC3                     ADRES           equ	4035	;# 
   197   000FC3                     ADRESL          equ	4035	;# 
   198   000FC4                     ADRESH          equ	4036	;# 
   199   000FC5                     SSPCON2         equ	4037	;# 
   200   000FC6                     SSPCON1         equ	4038	;# 
   201   000FC7                     SSPSTAT         equ	4039	;# 
   202   000FC8                     SSPADD          equ	4040	;# 
   203   000FC9                     SSPBUF          equ	4041	;# 
   204   000FCA                     T2CON           equ	4042	;# 
   205   000FCB                     PR2             equ	4043	;# 
   206   000FCB                     MEMCON          equ	4043	;# 
   207   000FCC                     TMR2            equ	4044	;# 
   208   000FCD                     T1CON           equ	4045	;# 
   209   000FCE                     TMR1            equ	4046	;# 
   210   000FCE                     TMR1L           equ	4046	;# 
   211   000FCF                     TMR1H           equ	4047	;# 
   212   000FD0                     RCON            equ	4048	;# 
   213   000FD1                     WDTCON          equ	4049	;# 
   214   000FD2                     HLVDCON         equ	4050	;# 
   215   000FD2                     LVDCON          equ	4050	;# 
   216   000FD3                     OSCCON          equ	4051	;# 
   217   000FD5                     T0CON           equ	4053	;# 
   218   000FD6                     TMR0            equ	4054	;# 
   219   000FD6                     TMR0L           equ	4054	;# 
   220   000FD7                     TMR0H           equ	4055	;# 
   221   000FD8                     STATUS          equ	4056	;# 
   222   000FD9                     FSR2            equ	4057	;# 
   223   000FD9                     FSR2L           equ	4057	;# 
   224   000FDA                     FSR2H           equ	4058	;# 
   225   000FDB                     PLUSW2          equ	4059	;# 
   226   000FDC                     PREINC2         equ	4060	;# 
   227   000FDD                     POSTDEC2        equ	4061	;# 
   228   000FDE                     POSTINC2        equ	4062	;# 
   229   000FDF                     INDF2           equ	4063	;# 
   230   000FE0                     BSR             equ	4064	;# 
   231   000FE1                     FSR1            equ	4065	;# 
   232   000FE1                     FSR1L           equ	4065	;# 
   233   000FE2                     FSR1H           equ	4066	;# 
   234   000FE3                     PLUSW1          equ	4067	;# 
   235   000FE4                     PREINC1         equ	4068	;# 
   236   000FE5                     POSTDEC1        equ	4069	;# 
   237   000FE6                     POSTINC1        equ	4070	;# 
   238   000FE7                     INDF1           equ	4071	;# 
   239   000FE8                     WREG            equ	4072	;# 
   240   000FE9                     FSR0            equ	4073	;# 
   241   000FE9                     FSR0L           equ	4073	;# 
   242   000FEA                     FSR0H           equ	4074	;# 
   243   000FEB                     PLUSW0          equ	4075	;# 
   244   000FEC                     PREINC0         equ	4076	;# 
   245   000FED                     POSTDEC0        equ	4077	;# 
   246   000FEE                     POSTINC0        equ	4078	;# 
   247   000FEF                     INDF0           equ	4079	;# 
   248   000FF0                     INTCON3         equ	4080	;# 
   249   000FF1                     INTCON2         equ	4081	;# 
   250   000FF2                     INTCON          equ	4082	;# 
   251   000FF3                     PROD            equ	4083	;# 
   252   000FF3                     PRODL           equ	4083	;# 
   253   000FF4                     PRODH           equ	4084	;# 
   254   000FF5                     TABLAT          equ	4085	;# 
   255   000FF6                     TBLPTR          equ	4086	;# 
   256   000FF6                     TBLPTRL         equ	4086	;# 
   257   000FF7                     TBLPTRH         equ	4087	;# 
   258   000FF8                     TBLPTRU         equ	4088	;# 
   259   000FF9                     PCLAT           equ	4089	;# 
   260   000FF9                     PC              equ	4089	;# 
   261   000FF9                     PCL             equ	4089	;# 
   262   000FFA                     PCLATH          equ	4090	;# 
   263   000FFB                     PCLATU          equ	4091	;# 
   264   000FFC                     STKPTR          equ	4092	;# 
   265   000FFD                     TOS             equ	4093	;# 
   266   000FFD                     TOSL            equ	4093	;# 
   267   000FFE                     TOSH            equ	4094	;# 
   268   000FFF                     TOSU            equ	4095	;# 
   269                           
   270                           	psect	idataCOMRAM
   271   000A38                     __pidataCOMRAM:
   272                           	callstack 0
   273                           
   274                           ;initializer for _interfaz
   275   000A38  08                 	db	8
   276   007C4C                     _LATA4          set	31820
   277   007C4B                     _LATA3          set	31819
   278   000F89                     _LATA           set	3977
   279   000F95                     _TRISD          set	3989
   280   000F92                     _TRISA          set	3986
   281   000FC1                     _ADCON1         set	4033
   282   000F8C                     _LATD           set	3980
   283                           
   284                           ; #config settings
   285                           
   286                           	psect	cinit
   287   0009B6                     __pcinit:
   288                           	callstack 0
   289   0009B6                     start_initialization:
   290                           	callstack 0
   291   0009B6                     __initialization:
   292                           	callstack 0
   293                           
   294                           ; Initialize objects allocated to COMRAM (1 bytes)
   295                           ; load TBLPTR registers with __pidataCOMRAM
   296   0009B6  0E38               	movlw	low __pidataCOMRAM
   297   0009B8  6EF6               	movwf	tblptrl,c
   298   0009BA  0E0A               	movlw	high __pidataCOMRAM
   299   0009BC  6EF7               	movwf	tblptrh,c
   300   0009BE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   301   0009C0  6EF8               	movwf	tblptru,c
   302   0009C2  0009               	tblrd		*+	;fetch initializer
   303   0009C4  CFF5 F008          	movff	tablat,__pdataCOMRAM
   304   0009C8                     end_of_initialization:
   305                           	callstack 0
   306   0009C8                     __end_of__initialization:
   307                           	callstack 0
   308   0009C8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   309   0009CA  6EF8               	movwf	tblptru,c
   310   0009CC  0100               	movlb	0
   311   0009CE  EF4F  F004         	goto	_main	;jump to C main() function
   312                           
   313                           	psect	dataCOMRAM
   314   000008                     __pdataCOMRAM:
   315                           	callstack 0
   316   000008                     _interfaz:
   317                           	callstack 0
   318   000008                     	ds	1
   319                           
   320                           	psect	cstackCOMRAM
   321   000001                     __pcstackCOMRAM:
   322                           	callstack 0
   323   000001                     ConfiguraLCD@a:
   324                           	callstack 0
   325   000001                     ??_RetardoLCD:
   326   000001                     
   327                           ; 1 bytes @ 0x0
   328   000001                     	ds	1
   329   000002                     RetardoLCD@a:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0x1
   333   000002                     	ds	1
   334   000003                     ??_EnviaDato:
   335                           
   336                           ; 1 bytes @ 0x2
   337   000003                     	ds	1
   338   000004                     EnviaDato@a:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0x3
   342   000004                     	ds	1
   343   000005                     EscribeLCD_c@a:
   344                           	callstack 0
   345   000005                     DireccionaLCD@a:
   346                           	callstack 0
   347   000005                     
   348                           ; 1 bytes @ 0x4
   349   000005                     	ds	1
   350   000006                     ??_main:
   351                           
   352                           ; 1 bytes @ 0x5
   353   000006                     	ds	2
   354                           
   355 ;;
   356 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   357 ;;
   358 ;; *************** function _main *****************
   359 ;; Defined at:
   360 ;;		line 6 in file "PruebaLCD.c"
   361 ;; Parameters:    Size  Location     Type
   362 ;;		None
   363 ;; Auto vars:     Size  Location     Type
   364 ;;		None
   365 ;; Return value:  Size  Location     Type
   366 ;;                  1    wreg      void 
   367 ;; Registers used:
   368 ;;		wreg, status,2, status,0, cstack
   369 ;; Tracked objects:
   370 ;;		On entry : 0/0
   371 ;;		On exit  : 0/0
   372 ;;		Unchanged: 0/0
   373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   374 ;;      Params:         0       0       0       0       0       0       0       0       0
   375 ;;      Locals:         0       0       0       0       0       0       0       0       0
   376 ;;      Temps:          2       0       0       0       0       0       0       0       0
   377 ;;      Totals:         2       0       0       0       0       0       0       0       0
   378 ;;Total ram usage:        2 bytes
   379 ;; Hardware stack levels required when called: 4
   380 ;; This function calls:
   381 ;;		_ConfiguraLCD
   382 ;;		_DireccionaLCD
   383 ;;		_EscribeLCD_c
   384 ;;		_InicializaLCD
   385 ;; This function is called by:
   386 ;;		Startup code after reset
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390                           	psect	text0
   391   00089E                     __ptext0:
   392                           	callstack 0
   393   00089E                     _main:
   394                           	callstack 27
   395                           
   396                           ;PruebaLCD.c: 7: ADCON1 = 15;
   397                           
   398                           ;incstack = 0
   399   00089E  0E0F               	movlw	15
   400   0008A0  6EC1               	movwf	193,c	;volatile
   401                           
   402                           ;PruebaLCD.c: 8: TRISA = 0;
   403   0008A2  6A92               	clrf	146,c	;volatile
   404                           
   405                           ;PruebaLCD.c: 9: TRISD=0;
   406   0008A4  6A95               	clrf	149,c	;volatile
   407                           
   408                           ;PruebaLCD.c: 10: LATA = 0;
   409   0008A6  6A89               	clrf	137,c	;volatile
   410                           
   411                           ;PruebaLCD.c: 11: LATD=0;
   412   0008A8  6A8C               	clrf	140,c	;volatile
   413                           
   414                           ;PruebaLCD.c: 12: _delay((unsigned long)((1000)*(1000000/4000.0)));
   415   0008AA  0E02               	movlw	2
   416   0008AC  6E07               	movwf	(??_main+1)^0,c
   417   0008AE  0E45               	movlw	69
   418   0008B0  6E06               	movwf	??_main^0,c
   419   0008B2  0EAA               	movlw	170
   420   0008B4                     u97:
   421   0008B4  2EE8               	decfsz	wreg,f,c
   422   0008B6  D7FE               	bra	u97
   423   0008B8  2E06               	decfsz	??_main^0,f,c
   424   0008BA  D7FC               	bra	u97
   425   0008BC  2E07               	decfsz	(??_main+1)^0,f,c
   426   0008BE  D7FA               	bra	u97
   427                           
   428                           ;PruebaLCD.c: 13: ConfiguraLCD(4);
   429   0008C0  0E04               	movlw	4
   430   0008C2  ECE9  F004         	call	_ConfiguraLCD
   431                           
   432                           ;PruebaLCD.c: 14: InicializaLCD();
   433   0008C6  EC01  F004         	call	_InicializaLCD	;wreg free
   434                           
   435                           ;PruebaLCD.c: 16: EscribeLCD_c('H');
   436   0008CA  0E48               	movlw	72
   437   0008CC  ECF5  F004         	call	_EscribeLCD_c
   438                           
   439                           ;PruebaLCD.c: 17: EscribeLCD_c('o');
   440   0008D0  0E6F               	movlw	111
   441   0008D2  ECF5  F004         	call	_EscribeLCD_c
   442                           
   443                           ;PruebaLCD.c: 18: EscribeLCD_c('l');
   444   0008D6  0E6C               	movlw	108
   445   0008D8  ECF5  F004         	call	_EscribeLCD_c
   446                           
   447                           ;PruebaLCD.c: 19: EscribeLCD_c('a');
   448   0008DC  0E61               	movlw	97
   449   0008DE  ECF5  F004         	call	_EscribeLCD_c
   450                           
   451                           ;PruebaLCD.c: 20: EscribeLCD_c(' ');
   452   0008E2  0E20               	movlw	32
   453   0008E4  ECF5  F004         	call	_EscribeLCD_c
   454                           
   455                           ;PruebaLCD.c: 21: EscribeLCD_c('m');
   456   0008E8  0E6D               	movlw	109
   457   0008EA  ECF5  F004         	call	_EscribeLCD_c
   458                           
   459                           ;PruebaLCD.c: 22: EscribeLCD_c('u');
   460   0008EE  0E75               	movlw	117
   461   0008F0  ECF5  F004         	call	_EscribeLCD_c
   462                           
   463                           ;PruebaLCD.c: 23: EscribeLCD_c('n');
   464   0008F4  0E6E               	movlw	110
   465   0008F6  ECF5  F004         	call	_EscribeLCD_c
   466                           
   467                           ;PruebaLCD.c: 24: EscribeLCD_c('d');
   468   0008FA  0E64               	movlw	100
   469   0008FC  ECF5  F004         	call	_EscribeLCD_c
   470                           
   471                           ;PruebaLCD.c: 25: EscribeLCD_c('o');
   472   000900  0E6F               	movlw	111
   473   000902  ECF5  F004         	call	_EscribeLCD_c
   474                           
   475                           ;PruebaLCD.c: 26: DireccionaLCD(0xC0);
   476   000906  0EC0               	movlw	192
   477   000908  EC00  F005         	call	_DireccionaLCD
   478                           
   479                           ;PruebaLCD.c: 27: EscribeLCD_c('7');
   480   00090C  0E37               	movlw	55
   481   00090E  ECF5  F004         	call	_EscribeLCD_c
   482                           
   483                           ;PruebaLCD.c: 28: EscribeLCD_c(';');
   484   000912  0E3B               	movlw	59
   485   000914  ECF5  F004         	call	_EscribeLCD_c
   486   000918                     l124:
   487   000918  D7FF               	goto	l124
   488   00091A                     __end_of_main:
   489                           	callstack 0
   490                           
   491 ;; *************** function _InicializaLCD *****************
   492 ;; Defined at:
   493 ;;		line 71 in file "LibLCDXC8.h"
   494 ;; Parameters:    Size  Location     Type
   495 ;;		None
   496 ;; Auto vars:     Size  Location     Type
   497 ;;		None
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		wreg, status,2, status,0, cstack
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   507 ;;      Params:         0       0       0       0       0       0       0       0       0
   508 ;;      Locals:         0       0       0       0       0       0       0       0       0
   509 ;;      Temps:          0       0       0       0       0       0       0       0       0
   510 ;;      Totals:         0       0       0       0       0       0       0       0       0
   511 ;;Total ram usage:        0 bytes
   512 ;; Hardware stack levels used: 1
   513 ;; Hardware stack levels required when called: 3
   514 ;; This function calls:
   515 ;;		_BorraLCD
   516 ;;		_EnviaDato
   517 ;;		_HabilitaLCD
   518 ;;		_RetardoLCD
   519 ;; This function is called by:
   520 ;;		_main
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524                           	psect	text1
   525   000802                     __ptext1:
   526                           	callstack 0
   527   000802                     _InicializaLCD:
   528                           	callstack 27
   529                           
   530                           ;LibLCDXC8.h: 73: LATA3=0;
   531                           
   532                           ;incstack = 0
   533   000802  9689               	bcf	3977,3,c	;volatile
   534                           
   535                           ;LibLCDXC8.h: 74: if(interfaz==4)
   536   000804  0E04               	movlw	4
   537   000806  1808               	xorwf	_interfaz^0,w,c
   538   000808  A4D8               	btfss	status,2,c
   539   00080A  D004               	goto	l927
   540                           
   541                           ;LibLCDXC8.h: 75: LATD=(LATD & 0b00001111) | 0x30;
   542   00080C  508C               	movf	140,w,c	;volatile
   543   00080E  0B0F               	andlw	15
   544   000810  0930               	iorlw	48
   545   000812  D001               	goto	L1
   546   000814                     l927:
   547                           
   548                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
   549   000814  0E3F               	movlw	63
   550   000816                     L1:
   551   000816  6E8C               	movwf	140,c	;volatile
   552                           
   553                           ;LibLCDXC8.h: 78: HabilitaLCD();
   554   000818  EC15  F005         	call	_HabilitaLCD	;wreg free
   555                           
   556                           ;LibLCDXC8.h: 79: RetardoLCD(1);
   557   00081C  0E01               	movlw	1
   558   00081E  EC8D  F004         	call	_RetardoLCD
   559                           
   560                           ;LibLCDXC8.h: 80: if(interfaz==4)
   561   000822  0E04               	movlw	4
   562   000824  1808               	xorwf	_interfaz^0,w,c
   563   000826  A4D8               	btfss	status,2,c
   564   000828  D004               	goto	l937
   565                           
   566                           ;LibLCDXC8.h: 81: LATD=(LATD & 0b00001111) | 0x30;
   567   00082A  508C               	movf	140,w,c	;volatile
   568   00082C  0B0F               	andlw	15
   569   00082E  0930               	iorlw	48
   570   000830  D001               	goto	L2
   571   000832                     l937:
   572                           
   573                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
   574   000832  0E3F               	movlw	63
   575   000834                     L2:
   576   000834  6E8C               	movwf	140,c	;volatile
   577                           
   578                           ;LibLCDXC8.h: 84: HabilitaLCD();
   579   000836  EC15  F005         	call	_HabilitaLCD	;wreg free
   580                           
   581                           ;LibLCDXC8.h: 85: RetardoLCD(3);
   582   00083A  0E03               	movlw	3
   583   00083C  EC8D  F004         	call	_RetardoLCD
   584                           
   585                           ;LibLCDXC8.h: 86: if(interfaz==4)
   586   000840  0E04               	movlw	4
   587   000842  1808               	xorwf	_interfaz^0,w,c
   588   000844  A4D8               	btfss	status,2,c
   589   000846  D004               	goto	l947
   590                           
   591                           ;LibLCDXC8.h: 87: LATD=(LATD & 0b00001111) | 0x30;
   592   000848  508C               	movf	140,w,c	;volatile
   593   00084A  0B0F               	andlw	15
   594   00084C  0930               	iorlw	48
   595   00084E  D001               	goto	L3
   596   000850                     l947:
   597                           
   598                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
   599   000850  0E3F               	movlw	63
   600   000852                     L3:
   601   000852  6E8C               	movwf	140,c	;volatile
   602                           
   603                           ;LibLCDXC8.h: 90: HabilitaLCD();
   604   000854  EC15  F005         	call	_HabilitaLCD	;wreg free
   605                           
   606                           ;LibLCDXC8.h: 91: RetardoLCD(4);
   607   000858  0E04               	movlw	4
   608   00085A  EC8D  F004         	call	_RetardoLCD
   609                           
   610                           ;LibLCDXC8.h: 92: if(interfaz==4){
   611   00085E  0E04               	movlw	4
   612   000860  1808               	xorwf	_interfaz^0,w,c
   613   000862  A4D8               	btfss	status,2,c
   614   000864  D011               	goto	l967
   615                           
   616                           ;LibLCDXC8.h: 93: LATD=(LATD & 0b00001111) | 0x20;
   617   000866  508C               	movf	140,w,c	;volatile
   618   000868  0B0F               	andlw	15
   619   00086A  0920               	iorlw	32
   620   00086C  6E8C               	movwf	140,c	;volatile
   621                           
   622                           ;LibLCDXC8.h: 94: HabilitaLCD();
   623   00086E  EC15  F005         	call	_HabilitaLCD	;wreg free
   624                           
   625                           ;LibLCDXC8.h: 95: RetardoLCD(4);
   626   000872  0E04               	movlw	4
   627   000874  EC8D  F004         	call	_RetardoLCD
   628                           
   629                           ;LibLCDXC8.h: 96: EnviaDato(0x2F);
   630   000878  0E2F               	movlw	47
   631   00087A  ECB8  F004         	call	_EnviaDato
   632                           
   633                           ;LibLCDXC8.h: 97: HabilitaLCD();
   634   00087E  EC15  F005         	call	_HabilitaLCD	;wreg free
   635                           
   636                           ;LibLCDXC8.h: 98: RetardoLCD(4);
   637   000882  0E04               	movlw	4
   638   000884  EC8D  F004         	call	_RetardoLCD
   639   000888                     l967:
   640                           
   641                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
   642   000888  EC0B  F005         	call	_BorraLCD	;wreg free
   643                           
   644                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
   645   00088C  0E0F               	movlw	15
   646   00088E  ECB8  F004         	call	_EnviaDato
   647                           
   648                           ;LibLCDXC8.h: 102: HabilitaLCD();
   649   000892  EC15  F005         	call	_HabilitaLCD	;wreg free
   650                           
   651                           ;LibLCDXC8.h: 103: RetardoLCD(4);
   652   000896  0E04               	movlw	4
   653   000898  EC8D  F004         	call	_RetardoLCD
   654   00089C  0012               	return		;funcret
   655   00089E                     __end_of_InicializaLCD:
   656                           	callstack 0
   657                           
   658 ;; *************** function _BorraLCD *****************
   659 ;; Defined at:
   660 ;;		line 112 in file "LibLCDXC8.h"
   661 ;; Parameters:    Size  Location     Type
   662 ;;		None
   663 ;; Auto vars:     Size  Location     Type
   664 ;;		None
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      void 
   667 ;; Registers used:
   668 ;;		wreg, status,2, status,0, cstack
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   674 ;;      Params:         0       0       0       0       0       0       0       0       0
   675 ;;      Locals:         0       0       0       0       0       0       0       0       0
   676 ;;      Temps:          0       0       0       0       0       0       0       0       0
   677 ;;      Totals:         0       0       0       0       0       0       0       0       0
   678 ;;Total ram usage:        0 bytes
   679 ;; Hardware stack levels used: 1
   680 ;; Hardware stack levels required when called: 2
   681 ;; This function calls:
   682 ;;		_EnviaDato
   683 ;;		_HabilitaLCD
   684 ;;		_RetardoLCD
   685 ;; This function is called by:
   686 ;;		_InicializaLCD
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           	psect	text2
   691   000A16                     __ptext2:
   692                           	callstack 0
   693   000A16                     _BorraLCD:
   694                           	callstack 27
   695                           
   696                           ;LibLCDXC8.h: 114: LATA3=0;
   697                           
   698                           ;incstack = 0
   699   000A16  9689               	bcf	3977,3,c	;volatile
   700                           
   701                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
   702   000A18  0E01               	movlw	1
   703   000A1A  ECB8  F004         	call	_EnviaDato
   704                           
   705                           ;LibLCDXC8.h: 116: HabilitaLCD();
   706   000A1E  EC15  F005         	call	_HabilitaLCD	;wreg free
   707                           
   708                           ;LibLCDXC8.h: 117: RetardoLCD(2);
   709   000A22  0E02               	movlw	2
   710   000A24  EC8D  F004         	call	_RetardoLCD
   711   000A28  0012               	return		;funcret
   712   000A2A                     __end_of_BorraLCD:
   713                           	callstack 0
   714                           
   715 ;; *************** function _EscribeLCD_c *****************
   716 ;; Defined at:
   717 ;;		line 136 in file "LibLCDXC8.h"
   718 ;; Parameters:    Size  Location     Type
   719 ;;  a               1    wreg     unsigned char 
   720 ;; Auto vars:     Size  Location     Type
   721 ;;  a               1    4[COMRAM] unsigned char 
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, status,2, status,0, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   731 ;;      Params:         0       0       0       0       0       0       0       0       0
   732 ;;      Locals:         1       0       0       0       0       0       0       0       0
   733 ;;      Temps:          0       0       0       0       0       0       0       0       0
   734 ;;      Totals:         1       0       0       0       0       0       0       0       0
   735 ;;Total ram usage:        1 bytes
   736 ;; Hardware stack levels used: 1
   737 ;; Hardware stack levels required when called: 2
   738 ;; This function calls:
   739 ;;		_EnviaDato
   740 ;;		_HabilitaLCD
   741 ;;		_RetardoLCD
   742 ;; This function is called by:
   743 ;;		_main
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text3
   748   0009EA                     __ptext3:
   749                           	callstack 0
   750   0009EA                     _EscribeLCD_c:
   751                           	callstack 28
   752                           
   753                           ;incstack = 0
   754                           ;EscribeLCD_c@a stored from wreg
   755   0009EA  6E05               	movwf	EscribeLCD_c@a^0,c
   756                           
   757                           ;LibLCDXC8.h: 140: LATA3=1;
   758   0009EC  8689               	bsf	3977,3,c	;volatile
   759                           
   760                           ;LibLCDXC8.h: 141: EnviaDato(a);
   761   0009EE  5005               	movf	EscribeLCD_c@a^0,w,c
   762   0009F0  ECB8  F004         	call	_EnviaDato
   763                           
   764                           ;LibLCDXC8.h: 142: HabilitaLCD();
   765   0009F4  EC15  F005         	call	_HabilitaLCD	;wreg free
   766                           
   767                           ;LibLCDXC8.h: 143: RetardoLCD(4);
   768   0009F8  0E04               	movlw	4
   769   0009FA  EC8D  F004         	call	_RetardoLCD
   770   0009FE  0012               	return		;funcret
   771   000A00                     __end_of_EscribeLCD_c:
   772                           	callstack 0
   773                           
   774 ;; *************** function _DireccionaLCD *****************
   775 ;; Defined at:
   776 ;;		line 238 in file "LibLCDXC8.h"
   777 ;; Parameters:    Size  Location     Type
   778 ;;  a               1    wreg     unsigned char 
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  a               1    4[COMRAM] unsigned char 
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		wreg, status,2, status,0, cstack
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   790 ;;      Params:         0       0       0       0       0       0       0       0       0
   791 ;;      Locals:         1       0       0       0       0       0       0       0       0
   792 ;;      Temps:          0       0       0       0       0       0       0       0       0
   793 ;;      Totals:         1       0       0       0       0       0       0       0       0
   794 ;;Total ram usage:        1 bytes
   795 ;; Hardware stack levels used: 1
   796 ;; Hardware stack levels required when called: 2
   797 ;; This function calls:
   798 ;;		_EnviaDato
   799 ;;		_HabilitaLCD
   800 ;;		_RetardoLCD
   801 ;; This function is called by:
   802 ;;		_main
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           	psect	text4
   807   000A00                     __ptext4:
   808                           	callstack 0
   809   000A00                     _DireccionaLCD:
   810                           	callstack 28
   811                           
   812                           ;incstack = 0
   813                           ;DireccionaLCD@a stored from wreg
   814   000A00  6E05               	movwf	DireccionaLCD@a^0,c
   815                           
   816                           ;LibLCDXC8.h: 241: LATA3=0;
   817   000A02  9689               	bcf	3977,3,c	;volatile
   818                           
   819                           ;LibLCDXC8.h: 242: EnviaDato(a);
   820   000A04  5005               	movf	DireccionaLCD@a^0,w,c
   821   000A06  ECB8  F004         	call	_EnviaDato
   822                           
   823                           ;LibLCDXC8.h: 243: HabilitaLCD();
   824   000A0A  EC15  F005         	call	_HabilitaLCD	;wreg free
   825                           
   826                           ;LibLCDXC8.h: 244: RetardoLCD(4);
   827   000A0E  0E04               	movlw	4
   828   000A10  EC8D  F004         	call	_RetardoLCD
   829   000A14  0012               	return		;funcret
   830   000A16                     __end_of_DireccionaLCD:
   831                           	callstack 0
   832                           
   833 ;; *************** function _EnviaDato *****************
   834 ;; Defined at:
   835 ;;		line 59 in file "LibLCDXC8.h"
   836 ;; Parameters:    Size  Location     Type
   837 ;;  a               1    wreg     unsigned char 
   838 ;; Auto vars:     Size  Location     Type
   839 ;;  a               1    3[COMRAM] unsigned char 
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, status,2, status,0, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   849 ;;      Params:         0       0       0       0       0       0       0       0       0
   850 ;;      Locals:         1       0       0       0       0       0       0       0       0
   851 ;;      Temps:          1       0       0       0       0       0       0       0       0
   852 ;;      Totals:         2       0       0       0       0       0       0       0       0
   853 ;;Total ram usage:        2 bytes
   854 ;; Hardware stack levels used: 1
   855 ;; Hardware stack levels required when called: 1
   856 ;; This function calls:
   857 ;;		_HabilitaLCD
   858 ;;		_RetardoLCD
   859 ;; This function is called by:
   860 ;;		_InicializaLCD
   861 ;;		_BorraLCD
   862 ;;		_EscribeLCD_c
   863 ;;		_DireccionaLCD
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           	psect	text5
   868   000970                     __ptext5:
   869                           	callstack 0
   870   000970                     _EnviaDato:
   871                           	callstack 28
   872                           
   873                           ;incstack = 0
   874                           ;EnviaDato@a stored from wreg
   875   000970  6E04               	movwf	EnviaDato@a^0,c
   876                           
   877                           ;LibLCDXC8.h: 60: if(interfaz==4){
   878   000972  0E04               	movlw	4
   879   000974  1808               	xorwf	_interfaz^0,w,c
   880   000976  A4D8               	btfss	status,2,c
   881   000978  D017               	goto	l905
   882                           
   883                           ;LibLCDXC8.h: 61: LATD=(LATD & 0b00001111) | (a & 0b11110000);
   884   00097A  C004  F003         	movff	EnviaDato@a,??_EnviaDato
   885   00097E  0EF0               	movlw	240
   886   000980  1603               	andwf	??_EnviaDato^0,f,c
   887   000982  508C               	movf	140,w,c	;volatile
   888   000984  0B0F               	andlw	15
   889   000986  1003               	iorwf	??_EnviaDato^0,w,c
   890   000988  6E8C               	movwf	140,c	;volatile
   891                           
   892                           ;LibLCDXC8.h: 62: HabilitaLCD();
   893   00098A  EC15  F005         	call	_HabilitaLCD	;wreg free
   894                           
   895                           ;LibLCDXC8.h: 63: RetardoLCD(1);
   896   00098E  0E01               	movlw	1
   897   000990  EC8D  F004         	call	_RetardoLCD
   898                           
   899                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a<<4);
   900   000994  C004  F003         	movff	EnviaDato@a,??_EnviaDato
   901   000998  3A03               	swapf	??_EnviaDato^0,f,c
   902   00099A  0EF0               	movlw	240
   903   00099C  1603               	andwf	??_EnviaDato^0,f,c
   904   00099E  508C               	movf	140,w,c	;volatile
   905   0009A0  0B0F               	andlw	15
   906   0009A2  1003               	iorwf	??_EnviaDato^0,w,c
   907   0009A4  6E8C               	movwf	140,c	;volatile
   908                           
   909                           ;LibLCDXC8.h: 67: }else if(interfaz==8){
   910   0009A6  0012               	return	
   911   0009A8                     l905:
   912   0009A8  0E08               	movlw	8
   913   0009AA  1808               	xorwf	_interfaz^0,w,c
   914   0009AC  A4D8               	btfss	status,2,c
   915   0009AE  0012               	return	
   916                           
   917                           ;LibLCDXC8.h: 68: LATD=a;
   918   0009B0  C004  FF8C         	movff	EnviaDato@a,3980	;volatile
   919   0009B4  0012               	return		;funcret
   920   0009B6                     __end_of_EnviaDato:
   921                           	callstack 0
   922                           
   923 ;; *************** function _RetardoLCD *****************
   924 ;; Defined at:
   925 ;;		line 274 in file "LibLCDXC8.h"
   926 ;; Parameters:    Size  Location     Type
   927 ;;  a               1    wreg     unsigned char 
   928 ;; Auto vars:     Size  Location     Type
   929 ;;  a               1    1[COMRAM] unsigned char 
   930 ;; Return value:  Size  Location     Type
   931 ;;                  1    wreg      void 
   932 ;; Registers used:
   933 ;;		wreg, status,2, status,0
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   939 ;;      Params:         0       0       0       0       0       0       0       0       0
   940 ;;      Locals:         1       0       0       0       0       0       0       0       0
   941 ;;      Temps:          1       0       0       0       0       0       0       0       0
   942 ;;      Totals:         2       0       0       0       0       0       0       0       0
   943 ;;Total ram usage:        2 bytes
   944 ;; Hardware stack levels used: 1
   945 ;; This function calls:
   946 ;;		Nothing
   947 ;; This function is called by:
   948 ;;		_EnviaDato
   949 ;;		_InicializaLCD
   950 ;;		_BorraLCD
   951 ;;		_EscribeLCD_c
   952 ;;		_DireccionaLCD
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text6
   957   00091A                     __ptext6:
   958                           	callstack 0
   959   00091A                     _RetardoLCD:
   960                           	callstack 29
   961                           
   962                           ;incstack = 0
   963                           ;RetardoLCD@a stored from wreg
   964   00091A  6E02               	movwf	RetardoLCD@a^0,c
   965                           
   966                           ;LibLCDXC8.h: 275: switch(a){
   967   00091C  D01B               	goto	l893
   968   00091E                     l883:
   969   00091E  0E05               	movlw	5
   970   000920  6E01               	movwf	??_RetardoLCD^0,c
   971   000922  0EDE               	movlw	222
   972   000924                     u107:
   973   000924  2EE8               	decfsz	wreg,f,c
   974   000926  D7FE               	bra	u107
   975   000928  2E01               	decfsz	??_RetardoLCD^0,f,c
   976   00092A  D7FC               	bra	u107
   977                           
   978                           ;LibLCDXC8.h: 278: break;
   979   00092C  0012               	return	
   980   00092E                     l885:
   981   00092E  0E53               	movlw	83
   982   000930                     u117:
   983   000930  2EE8               	decfsz	wreg,f,c
   984   000932  D7FE               	bra	u117
   985   000934  0000               	nop	
   986                           
   987                           ;LibLCDXC8.h: 280: _delay((unsigned long)((640)*(1000000/4000000.0)));
   988   000936  0E35               	movlw	53
   989   000938                     u127:
   990   000938  2EE8               	decfsz	wreg,f,c
   991   00093A  D7FE               	bra	u127
   992   00093C  0000               	nop	
   993                           
   994                           ;LibLCDXC8.h: 282: break;
   995   00093E  0012               	return	
   996   000940                     l887:
   997   000940  0E08               	movlw	8
   998   000942                     u137:
   999   000942  2EE8               	decfsz	wreg,f,c
  1000   000944  D7FE               	bra	u137
  1001   000946  0000               	nop	
  1002                           
  1003                           ;LibLCDXC8.h: 285: break;
  1004   000948  0012               	return	
  1005   00094A                     l889:
  1006   00094A  0E03               	movlw	3
  1007   00094C                     u147:
  1008   00094C  2EE8               	decfsz	wreg,f,c
  1009   00094E  D7FE               	bra	u147
  1010   000950  0000               	nop	
  1011                           
  1012                           ;LibLCDXC8.h: 288: break;
  1013   000952  0012               	return	
  1014   000954                     l893:
  1015   000954  5002               	movf	RetardoLCD@a^0,w,c
  1016                           
  1017                           ; Switch size 1, requested type "simple"
  1018                           ; Number of cases is 4, Range of values is 1 to 4
  1019                           ; switch strategies available:
  1020                           ; Name         Instructions Cycles
  1021                           ; simple_byte           13     7 (average)
  1022                           ;	Chosen strategy is simple_byte
  1023   000956  0A01               	xorlw	1	; case 1
  1024   000958  B4D8               	btfsc	status,2,c
  1025   00095A  D7E1               	goto	l883
  1026   00095C  0A03               	xorlw	3	; case 2
  1027   00095E  B4D8               	btfsc	status,2,c
  1028   000960  D7E6               	goto	l885
  1029   000962  0A01               	xorlw	1	; case 3
  1030   000964  B4D8               	btfsc	status,2,c
  1031   000966  D7EC               	goto	l887
  1032   000968  0A07               	xorlw	7	; case 4
  1033   00096A  A4D8               	btfss	status,2,c
  1034   00096C  0012               	return	
  1035   00096E  D7ED               	goto	l889
  1036   000970                     __end_of_RetardoLCD:
  1037                           	callstack 0
  1038                           
  1039 ;; *************** function _HabilitaLCD *****************
  1040 ;; Defined at:
  1041 ;;		line 105 in file "LibLCDXC8.h"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;		None
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;		None
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		wreg
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1055 ;;      Params:         0       0       0       0       0       0       0       0       0
  1056 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1058 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1059 ;;Total ram usage:        0 bytes
  1060 ;; Hardware stack levels used: 1
  1061 ;; This function calls:
  1062 ;;		Nothing
  1063 ;; This function is called by:
  1064 ;;		_EnviaDato
  1065 ;;		_InicializaLCD
  1066 ;;		_BorraLCD
  1067 ;;		_EscribeLCD_c
  1068 ;;		_DireccionaLCD
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text7
  1073   000A2A                     __ptext7:
  1074                           	callstack 0
  1075   000A2A                     _HabilitaLCD:
  1076                           	callstack 29
  1077                           
  1078                           ;LibLCDXC8.h: 107: LATA4=1;
  1079                           
  1080                           ;incstack = 0
  1081   000A2A  8889               	bsf	3977,4,c	;volatile
  1082                           
  1083                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1084   000A2C  0E03               	movlw	3
  1085   000A2E                     u157:
  1086   000A2E  2EE8               	decfsz	wreg,f,c
  1087   000A30  D7FE               	bra	u157
  1088   000A32  0000               	nop	
  1089                           
  1090                           ;LibLCDXC8.h: 110: LATA4=0;
  1091   000A34  9889               	bcf	3977,4,c	;volatile
  1092   000A36  0012               	return		;funcret
  1093   000A38                     __end_of_HabilitaLCD:
  1094                           	callstack 0
  1095                           
  1096 ;; *************** function _ConfiguraLCD *****************
  1097 ;; Defined at:
  1098 ;;		line 55 in file "LibLCDXC8.h"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;  a               1    wreg     unsigned char 
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  a               1    0[COMRAM] unsigned char 
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		wreg, status,2, status,0
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1112 ;;      Params:         0       0       0       0       0       0       0       0       0
  1113 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1115 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1116 ;;Total ram usage:        1 bytes
  1117 ;; Hardware stack levels used: 1
  1118 ;; This function calls:
  1119 ;;		Nothing
  1120 ;; This function is called by:
  1121 ;;		_main
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text8
  1126   0009D2                     __ptext8:
  1127                           	callstack 0
  1128   0009D2                     _ConfiguraLCD:
  1129                           	callstack 30
  1130                           
  1131                           ;incstack = 0
  1132                           ;ConfiguraLCD@a stored from wreg
  1133   0009D2  6E01               	movwf	ConfiguraLCD@a^0,c
  1134                           
  1135                           ;LibLCDXC8.h: 56: if(a==4 | a ==8)
  1136   0009D4  0E04               	movlw	4
  1137   0009D6  1801               	xorwf	ConfiguraLCD@a^0,w,c
  1138   0009D8  B4D8               	btfsc	status,2,c
  1139   0009DA  D004               	goto	u40
  1140   0009DC  0E08               	movlw	8
  1141   0009DE  1801               	xorwf	ConfiguraLCD@a^0,w,c
  1142   0009E0  A4D8               	btfss	status,2,c
  1143   0009E2  0012               	return	
  1144   0009E4                     u40:
  1145                           
  1146                           ;LibLCDXC8.h: 57: interfaz=a;
  1147   0009E4  C001  F008         	movff	ConfiguraLCD@a,_interfaz
  1148   0009E8  0012               	return		;funcret
  1149   0009EA                     __end_of_ConfiguraLCD:
  1150                           	callstack 0
  1151                           
  1152                           	psect	smallconst
  1153   000800                     __psmallconst:
  1154                           	callstack 0
  1155   000800  00                 	db	0
  1156   000801  00                 	db	0	; dummy byte at the end
  1157   000002                     __activetblptr  equ	2
  1158                           
  1159                           	psect	rparam
  1160   000001                     ___rparam_used  equ	1
  1161   000000                     ___param_bank   equ	0
  1162   000000                     __Lparam        equ	__Lrparam
  1163   000000                     __Hparam        equ	__Hrparam
  1164                           
  1165                           	psect	idloc
  1166                           
  1167                           ;Config register IDLOC0 @ 0x200000
  1168                           ;	unspecified, using default values
  1169   200000                     	org	2097152
  1170   200000  FF                 	db	255
  1171                           
  1172                           ;Config register IDLOC1 @ 0x200001
  1173                           ;	unspecified, using default values
  1174   200001                     	org	2097153
  1175   200001  FF                 	db	255
  1176                           
  1177                           ;Config register IDLOC2 @ 0x200002
  1178                           ;	unspecified, using default values
  1179   200002                     	org	2097154
  1180   200002  FF                 	db	255
  1181                           
  1182                           ;Config register IDLOC3 @ 0x200003
  1183                           ;	unspecified, using default values
  1184   200003                     	org	2097155
  1185   200003  FF                 	db	255
  1186                           
  1187                           ;Config register IDLOC4 @ 0x200004
  1188                           ;	unspecified, using default values
  1189   200004                     	org	2097156
  1190   200004  FF                 	db	255
  1191                           
  1192                           ;Config register IDLOC5 @ 0x200005
  1193                           ;	unspecified, using default values
  1194   200005                     	org	2097157
  1195   200005  FF                 	db	255
  1196                           
  1197                           ;Config register IDLOC6 @ 0x200006
  1198                           ;	unspecified, using default values
  1199   200006                     	org	2097158
  1200   200006  FF                 	db	255
  1201                           
  1202                           ;Config register IDLOC7 @ 0x200007
  1203                           ;	unspecified, using default values
  1204   200007                     	org	2097159
  1205   200007  FF                 	db	255
  1206                           
  1207                           	psect	config
  1208                           
  1209                           ;Config register CONFIG1L @ 0x300000
  1210                           ;	unspecified, using default values
  1211                           ;	PLL Prescaler Selection bits
  1212                           ;	PLLDIV = 0x0, unprogrammed default
  1213                           ;	System Clock Postscaler Selection bits
  1214                           ;	CPUDIV = 0x0, unprogrammed default
  1215                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1216                           ;	USBDIV = 0x0, unprogrammed default
  1217   300000                     	org	3145728
  1218   300000  00                 	db	0
  1219                           
  1220                           ;Config register CONFIG1H @ 0x300001
  1221                           ;	Oscillator Selection bits
  1222                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  1223                           ;	Fail-Safe Clock Monitor Enable bit
  1224                           ;	FCMEN = 0x0, unprogrammed default
  1225                           ;	Internal/External Oscillator Switchover bit
  1226                           ;	IESO = 0x0, unprogrammed default
  1227   300001                     	org	3145729
  1228   300001  09                 	db	9
  1229                           
  1230                           ;Config register CONFIG2L @ 0x300002
  1231                           ;	unspecified, using default values
  1232                           ;	Power-up Timer Enable bit
  1233                           ;	PWRT = 0x1, unprogrammed default
  1234                           ;	Brown-out Reset Enable bits
  1235                           ;	BOR = 0x3, unprogrammed default
  1236                           ;	Brown-out Reset Voltage bits
  1237                           ;	BORV = 0x3, unprogrammed default
  1238                           ;	USB Voltage Regulator Enable bit
  1239                           ;	VREGEN = 0x0, unprogrammed default
  1240   300002                     	org	3145730
  1241   300002  1F                 	db	31
  1242                           
  1243                           ;Config register CONFIG2H @ 0x300003
  1244                           ;	Watchdog Timer Enable bit
  1245                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1246                           ;	Watchdog Timer Postscale Select bits
  1247                           ;	WDTPS = 0xF, unprogrammed default
  1248   300003                     	org	3145731
  1249   300003  1E                 	db	30
  1250                           
  1251                           ; Padding undefined space
  1252   300004                     	org	3145732
  1253   300004  FF                 	db	255
  1254                           
  1255                           ;Config register CONFIG3H @ 0x300005
  1256                           ;	unspecified, using default values
  1257                           ;	CCP2 MUX bit
  1258                           ;	CCP2MX = 0x1, unprogrammed default
  1259                           ;	PORTB A/D Enable bit
  1260                           ;	PBADEN = 0x1, unprogrammed default
  1261                           ;	Low-Power Timer 1 Oscillator Enable bit
  1262                           ;	LPT1OSC = 0x0, unprogrammed default
  1263                           ;	MCLR Pin Enable bit
  1264                           ;	MCLRE = 0x1, unprogrammed default
  1265   300005                     	org	3145733
  1266   300005  83                 	db	131
  1267                           
  1268                           ;Config register CONFIG4L @ 0x300006
  1269                           ;	unspecified, using default values
  1270                           ;	Stack Full/Underflow Reset Enable bit
  1271                           ;	STVREN = 0x1, unprogrammed default
  1272                           ;	Single-Supply ICSP Enable bit
  1273                           ;	LVP = 0x1, unprogrammed default
  1274                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1275                           ;	ICPRT = 0x0, unprogrammed default
  1276                           ;	Extended Instruction Set Enable bit
  1277                           ;	XINST = 0x0, unprogrammed default
  1278                           ;	Background Debugger Enable bit
  1279                           ;	DEBUG = 0x1, unprogrammed default
  1280   300006                     	org	3145734
  1281   300006  85                 	db	133
  1282                           
  1283                           ; Padding undefined space
  1284   300007                     	org	3145735
  1285   300007  FF                 	db	255
  1286                           
  1287                           ;Config register CONFIG5L @ 0x300008
  1288                           ;	unspecified, using default values
  1289                           ;	Code Protection bit
  1290                           ;	CP0 = 0x1, unprogrammed default
  1291                           ;	Code Protection bit
  1292                           ;	CP1 = 0x1, unprogrammed default
  1293                           ;	Code Protection bit
  1294                           ;	CP2 = 0x1, unprogrammed default
  1295                           ;	Code Protection bit
  1296                           ;	CP3 = 0x1, unprogrammed default
  1297   300008                     	org	3145736
  1298   300008  0F                 	db	15
  1299                           
  1300                           ;Config register CONFIG5H @ 0x300009
  1301                           ;	unspecified, using default values
  1302                           ;	Boot Block Code Protection bit
  1303                           ;	CPB = 0x1, unprogrammed default
  1304                           ;	Data EEPROM Code Protection bit
  1305                           ;	CPD = 0x1, unprogrammed default
  1306   300009                     	org	3145737
  1307   300009  C0                 	db	192
  1308                           
  1309                           ;Config register CONFIG6L @ 0x30000A
  1310                           ;	unspecified, using default values
  1311                           ;	Write Protection bit
  1312                           ;	WRT0 = 0x1, unprogrammed default
  1313                           ;	Write Protection bit
  1314                           ;	WRT1 = 0x1, unprogrammed default
  1315                           ;	Write Protection bit
  1316                           ;	WRT2 = 0x1, unprogrammed default
  1317                           ;	Write Protection bit
  1318                           ;	WRT3 = 0x1, unprogrammed default
  1319   30000A                     	org	3145738
  1320   30000A  0F                 	db	15
  1321                           
  1322                           ;Config register CONFIG6H @ 0x30000B
  1323                           ;	unspecified, using default values
  1324                           ;	Configuration Register Write Protection bit
  1325                           ;	WRTC = 0x1, unprogrammed default
  1326                           ;	Boot Block Write Protection bit
  1327                           ;	WRTB = 0x1, unprogrammed default
  1328                           ;	Data EEPROM Write Protection bit
  1329                           ;	WRTD = 0x1, unprogrammed default
  1330   30000B                     	org	3145739
  1331   30000B  E0                 	db	224
  1332                           
  1333                           ;Config register CONFIG7L @ 0x30000C
  1334                           ;	unspecified, using default values
  1335                           ;	Table Read Protection bit
  1336                           ;	EBTR0 = 0x1, unprogrammed default
  1337                           ;	Table Read Protection bit
  1338                           ;	EBTR1 = 0x1, unprogrammed default
  1339                           ;	Table Read Protection bit
  1340                           ;	EBTR2 = 0x1, unprogrammed default
  1341                           ;	Table Read Protection bit
  1342                           ;	EBTR3 = 0x1, unprogrammed default
  1343   30000C                     	org	3145740
  1344   30000C  0F                 	db	15
  1345                           
  1346                           ;Config register CONFIG7H @ 0x30000D
  1347                           ;	unspecified, using default values
  1348                           ;	Boot Block Table Read Protection bit
  1349                           ;	EBTRB = 0x1, unprogrammed default
  1350   30000D                     	org	3145741
  1351   30000D  40                 	db	64
  1352                           tosu	equ	0xFFF
  1353                           tosh	equ	0xFFE
  1354                           tosl	equ	0xFFD
  1355                           stkptr	equ	0xFFC
  1356                           pclatu	equ	0xFFB
  1357                           pclath	equ	0xFFA
  1358                           pcl	equ	0xFF9
  1359                           tblptru	equ	0xFF8
  1360                           tblptrh	equ	0xFF7
  1361                           tblptrl	equ	0xFF6
  1362                           tablat	equ	0xFF5
  1363                           prodh	equ	0xFF4
  1364                           prodl	equ	0xFF3
  1365                           indf0	equ	0xFEF
  1366                           postinc0	equ	0xFEE
  1367                           postdec0	equ	0xFED
  1368                           preinc0	equ	0xFEC
  1369                           plusw0	equ	0xFEB
  1370                           fsr0h	equ	0xFEA
  1371                           fsr0l	equ	0xFE9
  1372                           wreg	equ	0xFE8
  1373                           indf1	equ	0xFE7
  1374                           postinc1	equ	0xFE6
  1375                           postdec1	equ	0xFE5
  1376                           preinc1	equ	0xFE4
  1377                           plusw1	equ	0xFE3
  1378                           fsr1h	equ	0xFE2
  1379                           fsr1l	equ	0xFE1
  1380                           bsr	equ	0xFE0
  1381                           indf2	equ	0xFDF
  1382                           postinc2	equ	0xFDE
  1383                           postdec2	equ	0xFDD
  1384                           preinc2	equ	0xFDC
  1385                           plusw2	equ	0xFDB
  1386                           fsr2h	equ	0xFDA
  1387                           fsr2l	equ	0xFD9
  1388                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_DireccionaLCD
    _main->_EscribeLCD_c
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     375
                                              5 COMRAM     2     2      0
                       _ConfiguraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _EscribeLCD_c                                         1     1      0      90
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0      90
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _EnviaDato                                            2     2      0      60
                                              2 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITBIGSFRh         118      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95      7       8      8.4%
BITBIGSFRl          41      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       8      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Jan 23 13:00:16 2025

                     u40 09E4                       u97 08B4               EnviaDato@a 0004  
                    l124 0918            _InicializaLCD 0802                      l905 09A8  
                    l927 0814                      l937 0832                      l883 091E  
                    l947 0850                      l885 092E                      l893 0954  
                    l887 0940                      l967 0888                      l889 094A  
                    u107 0924                      u117 0930                      u127 0938  
                    u137 0942                      u147 094C                      u157 0A2E  
                    wreg 0FE8                     _LATA 0F89                     _LATD 0F8C  
         ??_EscribeLCD_c 0005                     _main 089E                     start 0000  
           ___param_bank 0000           ?_InicializaLCD 0001                    ?_main 0001  
          EscribeLCD_c@a 0005                    _LATA3 7C4B                    _LATA4 7C4C  
                  _TRISA 0F92                    _TRISD 0F95                    tablat 0FF5  
            _HabilitaLCD 0A2A                    status 0FD8         __end_of_BorraLCD 0A2A  
        __initialization 09B6             __end_of_main 091A                   ??_main 0006  
   __end_of_ConfiguraLCD 09EA            __activetblptr 0002                   _ADCON1 0FC1  
         DireccionaLCD@a 0005    __end_of_DireccionaLCD 0A16               _RetardoLCD 091A  
        ??_InicializaLCD 0005                   isa$std 0001     __end_of_EscribeLCD_c 0A00  
           __pdataCOMRAM 0008             __mediumconst 0000                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8               __accesstop 0060  
__end_of__initialization 09C8            ___rparam_used 0001           __pcstackCOMRAM 0001  
      __end_of_EnviaDato 09B6                ?_BorraLCD 0001              ?_RetardoLCD 0001  
            RetardoLCD@a 0002               ??_BorraLCD 0005             ?_HabilitaLCD 0001  
           _ConfiguraLCD 09D2                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0800                  __pcinit 09B6                  __ramtop 0800  
                __ptext0 089E                  __ptext1 0802                  __ptext2 0A16  
                __ptext3 09EA                  __ptext4 0A00                  __ptext5 0970  
                __ptext6 091A                  __ptext7 0A2A                  __ptext8 09D2  
   end_of_initialization 09C8            __Lmediumconst 0000             _EscribeLCD_c 09EA  
          __pidataCOMRAM 0A38    __end_of_InicializaLCD 089E                _EnviaDato 0970  
    start_initialization 09B6             ??_RetardoLCD 0001               ?_EnviaDato 0001  
     __end_of_RetardoLCD 0970            _DireccionaLCD 0A00              __smallconst 0800  
         ?_DireccionaLCD 0001              ??_EnviaDato 0003                 _BorraLCD 0A16  
               __Hrparam 0000                 __Lrparam 0000            ConfiguraLCD@a 0001  
        ??_DireccionaLCD 0005                 _interfaz 0008                 isa$xinst 0000  
          ??_HabilitaLCD 0001            ?_ConfiguraLCD 0001           ??_ConfiguraLCD 0001  
          ?_EscribeLCD_c 0001      __end_of_HabilitaLCD 0A38  
