

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Mar 07 11:30:29 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=1
    50                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1,group=1
    51                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,group=1
    52                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60   000000                     
    61                           ; Generated 25/07/2024 GMT
    62                           ; 
    63                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4550 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95   000FE0                     bsr             equ	4064
    96   000FE9                     fsr0            equ	4073
    97   000FEA                     fsr0h           equ	4074
    98   000FE9                     fsr0l           equ	4073
    99   000FE1                     fsr1            equ	4065
   100   000FE2                     fsr1h           equ	4066
   101   000FE1                     fsr1l           equ	4065
   102   000FD9                     fsr2            equ	4057
   103   000FDA                     fsr2h           equ	4058
   104   000FD9                     fsr2l           equ	4057
   105   000FEF                     indf0           equ	4079
   106   000FE7                     indf1           equ	4071
   107   000FDF                     indf2           equ	4063
   108   000FF2                     intcon          equ	4082
   109   000000                     nvmcon          equ	0
   110   000FF9                     pcl             equ	4089
   111   000FFA                     pclath          equ	4090
   112   000FFB                     pclatu          equ	4091
   113   000FEB                     plusw0          equ	4075
   114   000FE3                     plusw1          equ	4067
   115   000FDB                     plusw2          equ	4059
   116   000FED                     postdec0        equ	4077
   117   000FE5                     postdec1        equ	4069
   118   000FDD                     postdec2        equ	4061
   119   000FEE                     postinc0        equ	4078
   120   000FE6                     postinc1        equ	4070
   121   000FDE                     postinc2        equ	4062
   122   000FEC                     preinc0         equ	4076
   123   000FE4                     preinc1         equ	4068
   124   000FDC                     preinc2         equ	4060
   125   000FF3                     prod            equ	4083
   126   000FF4                     prodh           equ	4084
   127   000FF3                     prodl           equ	4083
   128   000FD8                     status          equ	4056
   129   000FF5                     tablat          equ	4085
   130   000FF6                     tblptr          equ	4086
   131   000FF7                     tblptrh         equ	4087
   132   000FF6                     tblptrl         equ	4086
   133   000FF8                     tblptru         equ	4088
   134   000FFD                     tosl            equ	4093
   135   000FE8                     wreg            equ	4072
   136   000F62                     SPPDATA         equ	3938	;# 
   137   000F63                     SPPCFG          equ	3939	;# 
   138   000F64                     SPPEPS          equ	3940	;# 
   139   000F65                     SPPCON          equ	3941	;# 
   140   000F66                     UFRM            equ	3942	;# 
   141   000F66                     UFRML           equ	3942	;# 
   142   000F67                     UFRMH           equ	3943	;# 
   143   000F68                     UIR             equ	3944	;# 
   144   000F69                     UIE             equ	3945	;# 
   145   000F6A                     UEIR            equ	3946	;# 
   146   000F6B                     UEIE            equ	3947	;# 
   147   000F6C                     USTAT           equ	3948	;# 
   148   000F6D                     UCON            equ	3949	;# 
   149   000F6E                     UADDR           equ	3950	;# 
   150   000F6F                     UCFG            equ	3951	;# 
   151   000F70                     UEP0            equ	3952	;# 
   152   000F71                     UEP1            equ	3953	;# 
   153   000F72                     UEP2            equ	3954	;# 
   154   000F73                     UEP3            equ	3955	;# 
   155   000F74                     UEP4            equ	3956	;# 
   156   000F75                     UEP5            equ	3957	;# 
   157   000F76                     UEP6            equ	3958	;# 
   158   000F77                     UEP7            equ	3959	;# 
   159   000F78                     UEP8            equ	3960	;# 
   160   000F79                     UEP9            equ	3961	;# 
   161   000F7A                     UEP10           equ	3962	;# 
   162   000F7B                     UEP11           equ	3963	;# 
   163   000F7C                     UEP12           equ	3964	;# 
   164   000F7D                     UEP13           equ	3965	;# 
   165   000F7E                     UEP14           equ	3966	;# 
   166   000F7F                     UEP15           equ	3967	;# 
   167   000F80                     PORTA           equ	3968	;# 
   168   000F81                     PORTB           equ	3969	;# 
   169   000F82                     PORTC           equ	3970	;# 
   170   000F83                     PORTD           equ	3971	;# 
   171   000F84                     PORTE           equ	3972	;# 
   172   000F89                     LATA            equ	3977	;# 
   173   000F8A                     LATB            equ	3978	;# 
   174   000F8B                     LATC            equ	3979	;# 
   175   000F8C                     LATD            equ	3980	;# 
   176   000F8D                     LATE            equ	3981	;# 
   177   000F92                     TRISA           equ	3986	;# 
   178   000F92                     DDRA            equ	3986	;# 
   179   000F93                     TRISB           equ	3987	;# 
   180   000F93                     DDRB            equ	3987	;# 
   181   000F94                     TRISC           equ	3988	;# 
   182   000F94                     DDRC            equ	3988	;# 
   183   000F95                     TRISD           equ	3989	;# 
   184   000F95                     DDRD            equ	3989	;# 
   185   000F96                     TRISE           equ	3990	;# 
   186   000F96                     DDRE            equ	3990	;# 
   187   000F9B                     OSCTUNE         equ	3995	;# 
   188   000F9D                     PIE1            equ	3997	;# 
   189   000F9E                     PIR1            equ	3998	;# 
   190   000F9F                     IPR1            equ	3999	;# 
   191   000FA0                     PIE2            equ	4000	;# 
   192   000FA1                     PIR2            equ	4001	;# 
   193   000FA2                     IPR2            equ	4002	;# 
   194   000FA6                     EECON1          equ	4006	;# 
   195   000FA7                     EECON2          equ	4007	;# 
   196   000FA8                     EEDATA          equ	4008	;# 
   197   000FA9                     EEADR           equ	4009	;# 
   198   000FAB                     RCSTA           equ	4011	;# 
   199   000FAB                     RCSTA1          equ	4011	;# 
   200   000FAC                     TXSTA           equ	4012	;# 
   201   000FAC                     TXSTA1          equ	4012	;# 
   202   000FAD                     TXREG           equ	4013	;# 
   203   000FAD                     TXREG1          equ	4013	;# 
   204   000FAE                     RCREG           equ	4014	;# 
   205   000FAE                     RCREG1          equ	4014	;# 
   206   000FAF                     SPBRG           equ	4015	;# 
   207   000FAF                     SPBRG1          equ	4015	;# 
   208   000FB0                     SPBRGH          equ	4016	;# 
   209   000FB1                     T3CON           equ	4017	;# 
   210   000FB2                     TMR3            equ	4018	;# 
   211   000FB2                     TMR3L           equ	4018	;# 
   212   000FB3                     TMR3H           equ	4019	;# 
   213   000FB4                     CMCON           equ	4020	;# 
   214   000FB5                     CVRCON          equ	4021	;# 
   215   000FB6                     ECCP1AS         equ	4022	;# 
   216   000FB6                     CCP1AS          equ	4022	;# 
   217   000FB7                     ECCP1DEL        equ	4023	;# 
   218   000FB7                     CCP1DEL         equ	4023	;# 
   219   000FB8                     BAUDCON         equ	4024	;# 
   220   000FB8                     BAUDCTL         equ	4024	;# 
   221   000FBA                     CCP2CON         equ	4026	;# 
   222   000FBB                     CCPR2           equ	4027	;# 
   223   000FBB                     CCPR2L          equ	4027	;# 
   224   000FBC                     CCPR2H          equ	4028	;# 
   225   000FBD                     CCP1CON         equ	4029	;# 
   226   000FBD                     ECCP1CON        equ	4029	;# 
   227   000FBE                     CCPR1           equ	4030	;# 
   228   000FBE                     CCPR1L          equ	4030	;# 
   229   000FBF                     CCPR1H          equ	4031	;# 
   230   000FC0                     ADCON2          equ	4032	;# 
   231   000FC1                     ADCON1          equ	4033	;# 
   232   000FC2                     ADCON0          equ	4034	;# 
   233   000FC3                     ADRES           equ	4035	;# 
   234   000FC3                     ADRESL          equ	4035	;# 
   235   000FC4                     ADRESH          equ	4036	;# 
   236   000FC5                     SSPCON2         equ	4037	;# 
   237   000FC6                     SSPCON1         equ	4038	;# 
   238   000FC7                     SSPSTAT         equ	4039	;# 
   239   000FC8                     SSPADD          equ	4040	;# 
   240   000FC9                     SSPBUF          equ	4041	;# 
   241   000FCA                     T2CON           equ	4042	;# 
   242   000FCB                     PR2             equ	4043	;# 
   243   000FCB                     MEMCON          equ	4043	;# 
   244   000FCC                     TMR2            equ	4044	;# 
   245   000FCD                     T1CON           equ	4045	;# 
   246   000FCE                     TMR1            equ	4046	;# 
   247   000FCE                     TMR1L           equ	4046	;# 
   248   000FCF                     TMR1H           equ	4047	;# 
   249   000FD0                     RCON            equ	4048	;# 
   250   000FD1                     WDTCON          equ	4049	;# 
   251   000FD2                     HLVDCON         equ	4050	;# 
   252   000FD2                     LVDCON          equ	4050	;# 
   253   000FD3                     OSCCON          equ	4051	;# 
   254   000FD5                     T0CON           equ	4053	;# 
   255   000FD6                     TMR0            equ	4054	;# 
   256   000FD6                     TMR0L           equ	4054	;# 
   257   000FD7                     TMR0H           equ	4055	;# 
   258   000FD8                     STATUS          equ	4056	;# 
   259   000FD9                     FSR2            equ	4057	;# 
   260   000FD9                     FSR2L           equ	4057	;# 
   261   000FDA                     FSR2H           equ	4058	;# 
   262   000FDB                     PLUSW2          equ	4059	;# 
   263   000FDC                     PREINC2         equ	4060	;# 
   264   000FDD                     POSTDEC2        equ	4061	;# 
   265   000FDE                     POSTINC2        equ	4062	;# 
   266   000FDF                     INDF2           equ	4063	;# 
   267   000FE0                     BSR             equ	4064	;# 
   268   000FE1                     FSR1            equ	4065	;# 
   269   000FE1                     FSR1L           equ	4065	;# 
   270   000FE2                     FSR1H           equ	4066	;# 
   271   000FE3                     PLUSW1          equ	4067	;# 
   272   000FE4                     PREINC1         equ	4068	;# 
   273   000FE5                     POSTDEC1        equ	4069	;# 
   274   000FE6                     POSTINC1        equ	4070	;# 
   275   000FE7                     INDF1           equ	4071	;# 
   276   000FE8                     WREG            equ	4072	;# 
   277   000FE9                     FSR0            equ	4073	;# 
   278   000FE9                     FSR0L           equ	4073	;# 
   279   000FEA                     FSR0H           equ	4074	;# 
   280   000FEB                     PLUSW0          equ	4075	;# 
   281   000FEC                     PREINC0         equ	4076	;# 
   282   000FED                     POSTDEC0        equ	4077	;# 
   283   000FEE                     POSTINC0        equ	4078	;# 
   284   000FEF                     INDF0           equ	4079	;# 
   285   000FF0                     INTCON3         equ	4080	;# 
   286   000FF1                     INTCON2         equ	4081	;# 
   287   000FF2                     INTCON          equ	4082	;# 
   288   000FF3                     PROD            equ	4083	;# 
   289   000FF3                     PRODL           equ	4083	;# 
   290   000FF4                     PRODH           equ	4084	;# 
   291   000FF5                     TABLAT          equ	4085	;# 
   292   000FF6                     TBLPTR          equ	4086	;# 
   293   000FF6                     TBLPTRL         equ	4086	;# 
   294   000FF7                     TBLPTRH         equ	4087	;# 
   295   000FF8                     TBLPTRU         equ	4088	;# 
   296   000FF9                     PCLAT           equ	4089	;# 
   297   000FF9                     PC              equ	4089	;# 
   298   000FF9                     PCL             equ	4089	;# 
   299   000FFA                     PCLATH          equ	4090	;# 
   300   000FFB                     PCLATU          equ	4091	;# 
   301   000FFC                     STKPTR          equ	4092	;# 
   302   000FFD                     TOS             equ	4093	;# 
   303   000FFD                     TOSL            equ	4093	;# 
   304   000FFE                     TOSH            equ	4094	;# 
   305   000FFF                     TOSU            equ	4095	;# 
   306                           
   307                           	psect	idataCOMRAM
   308   001BDE                     __pidataCOMRAM:
   309                           	callstack 0
   310                           
   311                           ;initializer for _FIN
   312   001BDE  36                 	db	low STR_2
   313                           
   314                           ;initializer for _aux
   315   001BDF  25                 	db	low STR_1
   316                           
   317                           ;initializer for _interfaz
   318   001BE0  08                 	db	8
   319                           
   320                           	psect	smallconst
   321   000800                     __psmallconst:
   322                           	callstack 0
   323   000800  00                 	db	0
   324   000801                     _banda2:
   325                           	callstack 0
   326   000801  00                 	db	0
   327   000802  00                 	db	0
   328   000803  00                 	db	0
   329   000804  00                 	db	0
   330   000805  00                 	db	0
   331   000806  1F                 	db	31
   332   000807  15                 	db	21
   333   000808  1F                 	db	31
   334   000809                     __end_of_banda2:
   335                           	callstack 0
   336   000809                     _banda1:
   337                           	callstack 0
   338   000809  00                 	db	0
   339   00080A  0E                 	db	14
   340   00080B  0A                 	db	10
   341   00080C  0E                 	db	14
   342   00080D  00                 	db	0
   343   00080E  1F                 	db	31
   344   00080F  15                 	db	21
   345   000810  1F                 	db	31
   346   000811                     __end_of_banda1:
   347                           	callstack 0
   348   007CF0                     _TMR1IF         set	31984
   349   007E68                     _TMR1ON         set	32360
   350   007C11                     _RC1            set	31761
   351   007C10                     _RC0            set	31760
   352   007D08                     _CCP2IF         set	32008
   353   007E11                     _GO             set	32273
   354   007D61                     _TRMT           set	32097
   355   007C0F                     _RB7            set	31759
   356   007C0E                     _RB6            set	31758
   357   007C0D                     _RB5            set	31757
   358   007C0C                     _RB4            set	31756
   359   007C4C                     _LATA4          set	31820
   360   007C49                     _LATA1          set	31817
   361   007C4A                     _LATA2          set	31818
   362   007E84                     _RI             set	32388
   363   007EAF                     _TMR0ON         set	32431
   364   007F97                     _GIE            set	32663
   365   007F95                     _TMR0IE         set	32661
   366   007F92                     _TMR0IF         set	32658
   367   007F93                     _RBIE           set	32659
   368   007F90                     _RBIF           set	32656
   369   007E52                     _TMR2ON         set	32338
   370   007F8F                     _RBPU           set	32655
   371   007CA2                     _TRISC2         set	31906
   372   007CA0                     _TRISC0         set	31904
   373   007C4D                     _LATA5          set	31821
   374   007C4B                     _LATA3          set	31819
   375   000FBB                     _CCPR2          set	4027
   376   000FCE                     _TMR1           set	4046
   377   000FD6                     _TMR0           set	4054
   378   000FBA                     _CCP2CON        set	4026
   379   000FC4                     _ADRESH         set	4036
   380   000FAD                     _TXREG          set	4013
   381   000F81                     _PORTB          set	3969
   382   000FD5                     _T0CON          set	4053
   383   000FCD                     _T1CON          set	4045
   384   000FBD                     _CCP1CON        set	4029
   385   000FBE                     _CCPR1L         set	4030
   386   000FCA                     _T2CON          set	4042
   387   000FCB                     _PR2            set	4043
   388   000FCC                     _TMR2           set	4044
   389   000FC0                     _ADCON2         set	4032
   390   000FC1                     _ADCON1         set	4033
   391   000FC2                     _ADCON0         set	4034
   392   000FAF                     _SPBRG          set	4015
   393   000FB8                     _BAUDCON        set	4024
   394   000FAB                     _RCSTA          set	4011
   395   000FAC                     _TXSTA          set	4012
   396   000F8D                     _LATE           set	3981
   397   000F8B                     _LATC           set	3979
   398   000F8A                     _LATB           set	3978
   399   000F89                     _LATA           set	3977
   400   000F96                     _TRISE          set	3990
   401   000F95                     _TRISD          set	3989
   402   000F93                     _TRISB          set	3987
   403   000F92                     _TRISA          set	3986
   404   000F8C                     _LATD           set	3980
   405   000811                     STR_8:
   406   000811  0D                 	db	13
   407   000812  44                 	db	68	;'D'
   408   000813  69                 	db	105	;'i'
   409   000814  73                 	db	115	;'s'
   410   000815  74                 	db	116	;'t'
   411   000816  61                 	db	97	;'a'
   412   000817  6E                 	db	110	;'n'
   413   000818  63                 	db	99	;'c'
   414   000819  69                 	db	105	;'i'
   415   00081A  61                 	db	97	;'a'
   416   00081B  20                 	db	32
   417   00081C  6F                 	db	111	;'o'
   418   00081D  62                 	db	98	;'b'
   419   00081E  6A                 	db	106	;'j'
   420   00081F  65                 	db	101	;'e'
   421   000820  74                 	db	116	;'t'
   422   000821  6F                 	db	111	;'o'
   423   000822  3A                 	db	58	;':'
   424   000823  20                 	db	32
   425   000824  00                 	db	0
   426   000825                     STR_1:
   427   000825  50                 	db	80	;'P'
   428   000826  69                 	db	105	;'i'
   429   000827  65                 	db	101	;'e'
   430   000828  7A                 	db	122	;'z'
   431   000829  61                 	db	97	;'a'
   432   00082A  73                 	db	115	;'s'
   433   00082B  20                 	db	32
   434   00082C  61                 	db	97	;'a'
   435   00082D  20                 	db	32
   436   00082E  63                 	db	99	;'c'
   437   00082F  6F                 	db	111	;'o'
   438   000830  6E                 	db	110	;'n'
   439   000831  74                 	db	116	;'t'
   440   000832  61                 	db	97	;'a'
   441   000833  72                 	db	114	;'r'
   442   000834  3A                 	db	58	;':'
   443   000835  00                 	db	0
   444   000836                     STR_2:
   445   000836  20                 	db	32
   446   000837  20                 	db	32
   447   000838  43                 	db	67	;'C'
   448   000839  4F                 	db	79	;'O'
   449   00083A  4D                 	db	77	;'M'
   450   00083B  50                 	db	80	;'P'
   451   00083C  4C                 	db	76	;'L'
   452   00083D  45                 	db	69	;'E'
   453   00083E  54                 	db	84	;'T'
   454   00083F  41                 	db	65	;'A'
   455   000840  53                 	db	83	;'S'
   456   000841  21                 	db	33
   457   000842  21                 	db	33
   458   000843  21                 	db	33
   459   000844  20                 	db	32
   460   000845  00                 	db	0
   461   000846                     STR_4:
   462   000846  56                 	db	86	;'V'
   463   000847  61                 	db	97	;'a'
   464   000848  6C                 	db	108	;'l'
   465   000849  6F                 	db	111	;'o'
   466   00084A  72                 	db	114	;'r'
   467   00084B  20                 	db	32
   468   00084C  6E                 	db	110	;'n'
   469   00084D  6F                 	db	111	;'o'
   470   00084E  20                 	db	32
   471   00084F  76                 	db	118	;'v'
   472   000850  61                 	db	97	;'a'
   473   000851  6C                 	db	108	;'l'
   474   000852  69                 	db	105	;'i'
   475   000853  64                 	db	100	;'d'
   476   000854  6F                 	db	111	;'o'
   477   000855  00                 	db	0
   478   000856                     STR_7:
   479   000856  56                 	db	86	;'V'
   480   000857  61                 	db	97	;'a'
   481   000858  6C                 	db	108	;'l'
   482   000859  6F                 	db	111	;'o'
   483   00085A  72                 	db	114	;'r'
   484   00085B  20                 	db	32
   485   00085C  64                 	db	100	;'d'
   486   00085D  65                 	db	101	;'e'
   487   00085E  20                 	db	32
   488   00085F  50                 	db	80	;'P'
   489   000860  57                 	db	87	;'W'
   490   000861  4D                 	db	77	;'M'
   491   000862  3A                 	db	58	;':'
   492   000863  20                 	db	32
   493   000864  00                 	db	0
   494   000865                     STR_9:
   495   000865  20                 	db	32
   496   000866  20                 	db	32
   497   000867  20                 	db	32
   498   000868  20                 	db	32
   499   000869  45                 	db	69	;'E'
   500   00086A  4D                 	db	77	;'M'
   501   00086B  45                 	db	69	;'E'
   502   00086C  52                 	db	82	;'R'
   503   00086D  47                 	db	71	;'G'
   504   00086E  45                 	db	69	;'E'
   505   00086F  4E                 	db	78	;'N'
   506   000870  43                 	db	67	;'C'
   507   000871  59                 	db	89	;'Y'
   508   000872  00                 	db	0
   509   000873                     STR_5:
   510   000873  46                 	db	70	;'F'
   511   000874  61                 	db	97	;'a'
   512   000875  6C                 	db	108	;'l'
   513   000876  74                 	db	116	;'t'
   514   000877  61                 	db	97	;'a'
   515   000878  6E                 	db	110	;'n'
   516   000879  74                 	db	116	;'t'
   517   00087A  65                 	db	101	;'e'
   518   00087B  73                 	db	115	;'s'
   519   00087C  20                 	db	32
   520   00087D  3A                 	db	58	;':'
   521   00087E  00                 	db	0
   522   00087F                     STR_6:
   523   00087F  4F                 	db	79	;'O'
   524   000880  62                 	db	98	;'b'
   525   000881  6A                 	db	106	;'j'
   526   000882  65                 	db	101	;'e'
   527   000883  74                 	db	116	;'t'
   528   000884  69                 	db	105	;'i'
   529   000885  76                 	db	118	;'v'
   530   000886  6F                 	db	111	;'o'
   531   000887  20                 	db	32
   532   000888  3A                 	db	58	;':'
   533   000889  00                 	db	0
   534   00088A                     STR_10:
   535   00088A  20                 	db	32
   536   00088B  20                 	db	32
   537   00088C  20                 	db	32
   538   00088D  20                 	db	32
   539   00088E  20                 	db	32
   540   00088F  20                 	db	32
   541   000890  53                 	db	83	;'S'
   542   000891  54                 	db	84	;'T'
   543   000892  4F                 	db	79	;'O'
   544   000893  50                 	db	80	;'P'
   545   000894  00                 	db	0
   546   000895                     STR_3:
   547   000895  42                 	db	66	;'B'
   548   000896  69                 	db	105	;'i'
   549   000897  65                 	db	101	;'e'
   550   000898  6E                 	db	110	;'n'
   551   000899  76                 	db	118	;'v'
   552   00089A  65                 	db	101	;'e'
   553   00089B  6E                 	db	110	;'n'
   554   00089C  69                 	db	105	;'i'
   555   00089D  64                 	db	100	;'d'
   556   00089E  61                 	db	97	;'a'
   557   00089F  00                 	db	0
   558   0008A0  00                 	db	0	; dummy byte at the end
   559   000002                     __activetblptr  equ	2
   560                           
   561                           ; #config settings
   562                           
   563                           	psect	cinit
   564   00196A                     __pcinit:
   565                           	callstack 0
   566   00196A                     start_initialization:
   567                           	callstack 0
   568   00196A                     __initialization:
   569                           	callstack 0
   570                           
   571                           ; Initialize objects allocated to COMRAM (3 bytes)
   572                           ; load TBLPTR registers with __pidataCOMRAM
   573   00196A  0EDE               	movlw	low __pidataCOMRAM
   574   00196C  6EF6               	movwf	tblptrl,c
   575   00196E  0E1B               	movlw	high __pidataCOMRAM
   576   001970  6EF7               	movwf	tblptrh,c
   577   001972  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   578   001974  6EF8               	movwf	tblptru,c
   579   001976  0009               	tblrd		*+	;fetch initializer
   580   001978  CFF5 F03C          	movff	tablat,__pdataCOMRAM
   581   00197C  0009               	tblrd		*+	;fetch initializer
   582   00197E  CFF5 F03D          	movff	tablat,__pdataCOMRAM+1
   583   001982  0009               	tblrd		*+	;fetch initializer
   584   001984  CFF5 F03E          	movff	tablat,__pdataCOMRAM+2
   585                           
   586                           ; Clear objects allocated to COMRAM (18 bytes)
   587   001988  EE00  F02A         	lfsr	0,__pbssCOMRAM
   588   00198C  0E12               	movlw	18
   589   00198E                     clear_0:
   590   00198E  6AEE               	clrf	postinc0,c
   591   001990  06E8               	decf	wreg,f,c
   592   001992  E1FD               	bnz	clear_0
   593   001994                     end_of_initialization:
   594                           	callstack 0
   595   001994                     __end_of__initialization:
   596                           	callstack 0
   597   001994  903F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   598   001996  923F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   599   001998  0E00               	movlw	low (__Lmediumconst shr (0+16))
   600   00199A  6EF8               	movwf	tblptru,c
   601   00199C  0100               	movlb	0
   602   00199E  EF0A  F006         	goto	_main	;jump to C main() function
   603                           
   604                           	psect	bssCOMRAM
   605   00002A                     __pbssCOMRAM:
   606                           	callstack 0
   607   00002A                     _flagMotor:
   608                           	callstack 0
   609   00002A                     	ds	1
   610   00002B                     _Actual_sensor:
   611                           	callstack 0
   612   00002B                     	ds	1
   613   00002C                     _motorAntiguo:
   614                           	callstack 0
   615   00002C                     	ds	1
   616   00002D                     _motorActual:
   617                           	callstack 0
   618   00002D                     	ds	1
   619   00002E                     _objeto:
   620                           	callstack 0
   621   00002E                     	ds	1
   622   00002F                     _ctimeout:
   623                           	callstack 0
   624   00002F                     	ds	1
   625   000030                     _etimeout:
   626                           	callstack 0
   627   000030                     	ds	1
   628   000031                     _inactive:
   629                           	callstack 0
   630   000031                     	ds	1
   631   000032                     _contador:
   632                           	callstack 0
   633   000032                     	ds	1
   634   000033                     _emergency:
   635                           	callstack 0
   636   000033                     	ds	1
   637   000034                     _Iniciarpregunta:
   638                           	callstack 0
   639   000034                     	ds	1
   640   000035                     _ok:
   641                           	callstack 0
   642   000035                     	ds	1
   643   000036                     _block:
   644                           	callstack 0
   645   000036                     	ds	1
   646   000037                     _input:
   647                           	callstack 0
   648   000037                     	ds	1
   649   000038                     _contadas:
   650                           	callstack 0
   651   000038                     	ds	1
   652   000039                     _faltantes:
   653                           	callstack 0
   654   000039                     	ds	1
   655   00003A                     _objetivo:
   656                           	callstack 0
   657   00003A                     	ds	1
   658   00003B                     _Tecla:
   659                           	callstack 0
   660   00003B                     	ds	1
   661                           
   662                           	psect	dataCOMRAM
   663   00003C                     __pdataCOMRAM:
   664                           	callstack 0
   665   00003C                     _FIN:
   666                           	callstack 0
   667   00003C                     	ds	1
   668   00003D                     _aux:
   669                           	callstack 0
   670   00003D                     	ds	1
   671   00003E                     _interfaz:
   672                           	callstack 0
   673   00003E                     	ds	1
   674                           
   675                           	psect	cstackBANK0
   676   000060                     __pcstackBANK0:
   677                           	callstack 0
   678   000060                     EscribeLCD_n8@centena:
   679                           	callstack 0
   680   000060                     Bienvenida@max_pos:
   681                           	callstack 0
   682                           
   683                           ; 1 bytes @ 0x0
   684   000060                     	ds	1
   685   000061                     EscribeLCD_n8@decena:
   686                           	callstack 0
   687   000061                     Bienvenida@pos:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0x1
   691   000061                     	ds	1
   692   000062                     EscribeLCD_n8@unidad:
   693                           	callstack 0
   694                           
   695                           ; 1 bytes @ 0x2
   696   000062                     	ds	1
   697   000063                     EscribeLCD_n8@a:
   698                           	callstack 0
   699                           
   700                           ; 1 bytes @ 0x3
   701   000063                     	ds	1
   702   000064                     ??_main:
   703                           
   704                           ; 1 bytes @ 0x4
   705   000064                     	ds	2
   706   000066                     main@Antiguo_sensor:
   707                           	callstack 0
   708                           
   709                           ; 1 bytes @ 0x6
   710   000066                     	ds	1
   711                           
   712                           	psect	cstackCOMRAM
   713   000001                     __pcstackCOMRAM:
   714                           	callstack 0
   715   000001                     ?___awdiv:
   716                           	callstack 0
   717   000001                     ?___awmod:
   718                           	callstack 0
   719   000001                     ?i2___lwdiv:
   720                           	callstack 0
   721   000001                     ?___ftpack:
   722                           	callstack 0
   723   000001                     ?___fttol:
   724                           	callstack 0
   725   000001                     Transmitir@BufferT:
   726                           	callstack 0
   727   000001                     ConversionADC@canal:
   728                           	callstack 0
   729   000001                     i2___lbmod@divisor:
   730                           	callstack 0
   731   000001                     ___awdiv@dividend:
   732                           	callstack 0
   733   000001                     ___awmod@dividend:
   734                           	callstack 0
   735   000001                     i2___lwdiv@dividend:
   736                           	callstack 0
   737   000001                     ___ftpack@arg:
   738                           	callstack 0
   739   000001                     ___fttol@f1:
   740                           	callstack 0
   741   000001                     ??i2_RetardoLCD:
   742                           
   743                           ; 1 bytes @ 0x0
   744   000001                     	ds	1
   745   000002                     i2RetardoLCD@a:
   746                           	callstack 0
   747   000002                     i2___lbmod@dividend:
   748                           	callstack 0
   749   000002                     TransmitirVar@buffer:
   750                           	callstack 0
   751   000002                     
   752                           ; 1 bytes @ 0x1
   753   000002                     	ds	1
   754   000003                     i2___lbmod@counter:
   755                           	callstack 0
   756   000003                     ___awdiv@divisor:
   757                           	callstack 0
   758   000003                     ___awmod@divisor:
   759                           	callstack 0
   760   000003                     i2___lwdiv@divisor:
   761                           	callstack 0
   762   000003                     ??i2_EnviaDato:
   763                           
   764                           ; 1 bytes @ 0x2
   765   000003                     	ds	1
   766   000004                     ___ftpack@exp:
   767                           	callstack 0
   768   000004                     i2EnviaDato@a:
   769                           	callstack 0
   770   000004                     i2___lbmod@rem:
   771                           	callstack 0
   772   000004                     
   773                           ; 1 bytes @ 0x3
   774   000004                     	ds	1
   775   000005                     ___awdiv@counter:
   776                           	callstack 0
   777   000005                     ___awmod@counter:
   778                           	callstack 0
   779   000005                     ___ftpack@sign:
   780                           	callstack 0
   781   000005                     i2EscribeLCD_c@a:
   782                           	callstack 0
   783   000005                     i2DireccionaLCD@a:
   784                           	callstack 0
   785   000005                     i2___lbdiv@divisor:
   786                           	callstack 0
   787   000005                     i2___lwdiv@quotient:
   788                           	callstack 0
   789   000005                     ??___fttol:
   790   000005                     
   791                           ; 1 bytes @ 0x4
   792   000005                     	ds	1
   793   000006                     ___awdiv@sign:
   794                           	callstack 0
   795   000006                     ___awmod@sign:
   796                           	callstack 0
   797   000006                     i2___lbdiv@dividend:
   798                           	callstack 0
   799   000006                     ??___ftpack:
   800   000006                     
   801                           ; 1 bytes @ 0x5
   802   000006                     	ds	1
   803   000007                     i2___lbdiv@counter:
   804                           	callstack 0
   805   000007                     i2___lwdiv@counter:
   806                           	callstack 0
   807   000007                     ___awdiv@quotient:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x6
   811   000007                     	ds	1
   812   000008                     i2MedirDistancia@aux:
   813                           	callstack 0
   814   000008                     i2___lbdiv@quotient:
   815                           	callstack 0
   816   000008                     
   817                           ; 1 bytes @ 0x7
   818   000008                     	ds	1
   819   000009                     ?___awtoft:
   820                           	callstack 0
   821   000009                     i2EscribeLCD_n8@b:
   822                           	callstack 0
   823   000009                     numASCII@number:
   824                           	callstack 0
   825   000009                     ___awtoft@c:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x8
   829   000009                     	ds	1
   830   00000A                     ___fttol@sign1:
   831                           	callstack 0
   832   00000A                     i2EscribeLCD_n8@centena:
   833                           	callstack 0
   834   00000A                     
   835                           ; 1 bytes @ 0x9
   836   00000A                     	ds	1
   837   00000B                     i2EscribeLCD_n8@decena:
   838                           	callstack 0
   839   00000B                     numASCII@ascii_values:
   840                           	callstack 0
   841   00000B                     ___fttol@lval:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0xA
   845   00000B                     	ds	1
   846   00000C                     ___awtoft@sign:
   847                           	callstack 0
   848   00000C                     i2EscribeLCD_n8@unidad:
   849                           	callstack 0
   850   00000C                     
   851                           ; 1 bytes @ 0xB
   852   00000C                     	ds	1
   853   00000D                     i2EscribeLCD_n8@a:
   854                           	callstack 0
   855   00000D                     
   856                           ; 1 bytes @ 0xC
   857   00000D                     	ds	2
   858   00000F                     ___fttol@exp1:
   859                           	callstack 0
   860                           
   861                           ; 1 bytes @ 0xE
   862   00000F                     	ds	1
   863   000010                     ??_ISR:
   864                           
   865                           ; 1 bytes @ 0xF
   866   000010                     	ds	10
   867   00001A                     ISR@numAscii:
   868                           	callstack 0
   869   00001A                     ISR@d:
   870                           	callstack 0
   871                           
   872                           ; 3 bytes @ 0x19
   873   00001A                     	ds	3
   874   00001D                     ISR@valADC:
   875                           	callstack 0
   876                           
   877                           ; 1 bytes @ 0x1C
   878   00001D                     	ds	1
   879   00001E                     ISR@valPWM:
   880                           	callstack 0
   881                           
   882                           ; 2 bytes @ 0x1D
   883   00001E                     	ds	2
   884   000020                     ISR@dis:
   885                           	callstack 0
   886                           
   887                           ; 1 bytes @ 0x1F
   888   000020                     	ds	1
   889   000021                     ?___lwdiv:
   890                           	callstack 0
   891   000021                     ConfiguraLCD@a:
   892                           	callstack 0
   893   000021                     ___lbmod@divisor:
   894                           	callstack 0
   895   000021                     ___lwdiv@dividend:
   896                           	callstack 0
   897   000021                     ??_RetardoLCD:
   898   000021                     
   899                           ; 1 bytes @ 0x20
   900   000021                     	ds	1
   901   000022                     RetardoLCD@a:
   902                           	callstack 0
   903   000022                     ___lbmod@dividend:
   904                           	callstack 0
   905   000022                     
   906                           ; 1 bytes @ 0x21
   907   000022                     	ds	1
   908   000023                     ___lbmod@counter:
   909                           	callstack 0
   910   000023                     ___lwdiv@divisor:
   911                           	callstack 0
   912   000023                     ??_EnviaDato:
   913                           
   914                           ; 1 bytes @ 0x22
   915   000023                     	ds	1
   916   000024                     EnviaDato@a:
   917                           	callstack 0
   918   000024                     ___lbmod@rem:
   919                           	callstack 0
   920                           
   921                           ; 1 bytes @ 0x23
   922   000024                     	ds	1
   923   000025                     EscribeLCD_c@a:
   924                           	callstack 0
   925   000025                     DireccionaLCD@a:
   926                           	callstack 0
   927   000025                     CrearCaracter@data:
   928                           	callstack 0
   929   000025                     ___lbdiv@divisor:
   930                           	callstack 0
   931   000025                     ___lwdiv@counter:
   932                           	callstack 0
   933   000025                     
   934                           ; 1 bytes @ 0x24
   935   000025                     	ds	1
   936   000026                     MensajeLCD_Var@a:
   937                           	callstack 0
   938   000026                     ___lbdiv@dividend:
   939                           	callstack 0
   940   000026                     ___lwdiv@quotient:
   941                           	callstack 0
   942   000026                     ??_CrearCaracter:
   943   000026                     
   944                           ; 1 bytes @ 0x25
   945   000026                     	ds	1
   946   000027                     CrearCaracter@pos:
   947                           	callstack 0
   948   000027                     ___lbdiv@counter:
   949                           	callstack 0
   950   000027                     
   951                           ; 1 bytes @ 0x26
   952   000027                     	ds	1
   953   000028                     CrearCaracter@i:
   954                           	callstack 0
   955   000028                     MedirDistancia@aux:
   956                           	callstack 0
   957   000028                     ___lbdiv@quotient:
   958                           	callstack 0
   959   000028                     
   960                           ; 1 bytes @ 0x27
   961   000028                     	ds	1
   962   000029                     EscribeLCD_n8@b:
   963                           	callstack 0
   964   000029                     ??_Bienvenida:
   965                           
   966                           ; 1 bytes @ 0x28
   967   000029                     	ds	1
   968   00002A                     
   969                           ; 1 bytes @ 0x29
   970 ;;
   971 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   972 ;;
   973 ;; *************** function _main *****************
   974 ;; Defined at:
   975 ;;		line 67 in file "Lab6.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  Antiguo_sens    1    6[BANK0 ] unsigned char 
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   989 ;;      Params:         0       0       0       0       0       0       0       0       0
   990 ;;      Locals:         0       1       0       0       0       0       0       0       0
   991 ;;      Temps:          0       2       0       0       0       0       0       0       0
   992 ;;      Totals:         0       3       0       0       0       0       0       0       0
   993 ;;Total ram usage:        3 bytes
   994 ;; Hardware stack levels required when called: 9
   995 ;; This function calls:
   996 ;;		_Bienvenida
   997 ;;		_BorraLCD
   998 ;;		_ConfiguraLCD
   999 ;;		_DireccionaLCD
  1000 ;;		_Emergencia
  1001 ;;		_EscribeLCD_n8
  1002 ;;		_InicializaLCD
  1003 ;;		_MedirDistancia
  1004 ;;		_MensajeLCD_Var
  1005 ;;		_MostrarCursorLCD
  1006 ;;		_MostrarNumeros
  1007 ;;		_OcultarCursorLCD
  1008 ;;		___lbdiv
  1009 ;;		___lbmod
  1010 ;; This function is called by:
  1011 ;;		Startup code after reset
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           	psect	text0
  1016   000C14                     __ptext0:
  1017                           	callstack 0
  1018   000C14                     _main:
  1019                           	callstack 22
  1020                           
  1021                           ;Lab6.c: 70: TRISA = 0x01;
  1022                           
  1023                           ;incstack = 0
  1024   000C14  0E01               	movlw	1
  1025   000C16  6E92               	movwf	146,c	;volatile
  1026                           
  1027                           ;Lab6.c: 72: TRISB = 0b11110000;
  1028   000C18  0EF0               	movlw	240
  1029   000C1A  6E93               	movwf	147,c	;volatile
  1030                           
  1031                           ;Lab6.c: 73: TRISC0 = 0;
  1032   000C1C  9094               	bcf	3988,0,c	;volatile
  1033                           
  1034                           ;Lab6.c: 74: TRISC2=0;
  1035   000C1E  9494               	bcf	3988,2,c	;volatile
  1036                           
  1037                           ;Lab6.c: 76: TRISD = 0x00;
  1038   000C20  6A95               	clrf	149,c	;volatile
  1039                           
  1040                           ;Lab6.c: 77: TRISE = 0x00;
  1041   000C22  6A96               	clrf	150,c	;volatile
  1042                           
  1043                           ;Lab6.c: 80: LATA = 0b010000;
  1044   000C24  0E10               	movlw	16
  1045   000C26  6E89               	movwf	137,c	;volatile
  1046                           
  1047                           ;Lab6.c: 81: LATB = 0x00;
  1048   000C28  6A8A               	clrf	138,c	;volatile
  1049                           
  1050                           ;Lab6.c: 82: LATC = 0x00;
  1051   000C2A  6A8B               	clrf	139,c	;volatile
  1052                           
  1053                           ;Lab6.c: 83: LATD = 0x00;
  1054   000C2C  6A8C               	clrf	140,c	;volatile
  1055                           
  1056                           ;Lab6.c: 84: LATE = 0x00;
  1057   000C2E  6A8D               	clrf	141,c	;volatile
  1058                           
  1059                           ;Lab6.c: 85: RBPU=0;
  1060   000C30  9EF1               	bcf	4081,7,c	;volatile
  1061                           
  1062                           ;Lab6.c: 89: TXSTA = 0b00100100;
  1063   000C32  0E24               	movlw	36
  1064   000C34  6EAC               	movwf	172,c	;volatile
  1065                           
  1066                           ;Lab6.c: 90: RCSTA = 0b10010000;
  1067   000C36  0E90               	movlw	144
  1068   000C38  6EAB               	movwf	171,c	;volatile
  1069                           
  1070                           ;Lab6.c: 91: BAUDCON = 0b00001000;
  1071   000C3A  0E08               	movlw	8
  1072   000C3C  6EB8               	movwf	184,c	;volatile
  1073                           
  1074                           ;Lab6.c: 92: SPBRG = 25;
  1075   000C3E  0E19               	movlw	25
  1076   000C40  6EAF               	movwf	175,c	;volatile
  1077                           
  1078                           ;Lab6.c: 95: ADCON0=0b00000001;
  1079   000C42  0E01               	movlw	1
  1080   000C44  6EC2               	movwf	194,c	;volatile
  1081                           
  1082                           ;Lab6.c: 96: ADCON1=0b00001110;
  1083   000C46  0E0E               	movlw	14
  1084   000C48  6EC1               	movwf	193,c	;volatile
  1085                           
  1086                           ;Lab6.c: 97: ADCON2=0b00001000;
  1087   000C4A  0E08               	movlw	8
  1088   000C4C  6EC0               	movwf	192,c	;volatile
  1089                           
  1090                           ;Lab6.c: 100: TMR2=0;
  1091   000C4E  6ACC               	clrf	204,c	;volatile
  1092                           
  1093                           ;Lab6.c: 101: PR2=249;
  1094   000C50  0EF9               	movlw	249
  1095   000C52  6ECB               	movwf	203,c	;volatile
  1096                           
  1097                           ;Lab6.c: 102: T2CON=0b00000000;
  1098   000C54  6ACA               	clrf	202,c	;volatile
  1099                           
  1100                           ;Lab6.c: 103: CCPR1L=1;
  1101   000C56  0E01               	movlw	1
  1102   000C58  6EBE               	movwf	190,c	;volatile
  1103                           
  1104                           ;Lab6.c: 104: CCP1CON=0b00001100;
  1105   000C5A  0E0C               	movlw	12
  1106   000C5C  6EBD               	movwf	189,c	;volatile
  1107                           
  1108                           ;Lab6.c: 105: TMR2ON=1;
  1109   000C5E  84CA               	bsf	4042,2,c	;volatile
  1110                           
  1111                           ;Lab6.c: 109: T1CON=0b10000000;
  1112   000C60  0E80               	movlw	128
  1113   000C62  6ECD               	movwf	205,c	;volatile
  1114                           
  1115                           ;Lab6.c: 114: RBIF=0;
  1116   000C64  90F2               	bcf	4082,0,c	;volatile
  1117                           
  1118                           ;Lab6.c: 115: RBIE=1;
  1119   000C66  86F2               	bsf	4082,3,c	;volatile
  1120                           
  1121                           ;Lab6.c: 118: T0CON = 0b00000010;
  1122   000C68  0E02               	movlw	2
  1123   000C6A  6ED5               	movwf	213,c	;volatile
  1124                           
  1125                           ;Lab6.c: 120: TMR0 = 49911;
  1126   000C6C  0EC2               	movlw	194
  1127   000C6E  6ED7               	movwf	215,c	;volatile
  1128   000C70  0EF7               	movlw	247
  1129   000C72  6ED6               	movwf	214,c	;volatile
  1130                           
  1131                           ;Lab6.c: 123: TMR0IF = 0;
  1132   000C74  94F2               	bcf	4082,2,c	;volatile
  1133                           
  1134                           ;Lab6.c: 124: TMR0IE = 1;
  1135   000C76  8AF2               	bsf	4082,5,c	;volatile
  1136                           
  1137                           ;Lab6.c: 126: GIE=1;
  1138   000C78  8EF2               	bsf	4082,7,c	;volatile
  1139                           
  1140                           ;Lab6.c: 127: TMR0ON = 1;
  1141   000C7A  8ED5               	bsf	4053,7,c	;volatile
  1142                           
  1143                           ;Lab6.c: 131: ConfiguraLCD(4);
  1144   000C7C  0E04               	movlw	4
  1145   000C7E  EC85  F00D         	call	_ConfiguraLCD
  1146                           
  1147                           ;Lab6.c: 132: InicializaLCD();
  1148   000C82  ECE1  F009         	call	_InicializaLCD	;wreg free
  1149                           
  1150                           ;Lab6.c: 133: OcultarCursorLCD();
  1151   000C86  ECBD  F00D         	call	_OcultarCursorLCD	;wreg free
  1152                           
  1153                           ;Lab6.c: 137: if(RI == 1){
  1154   000C8A  A8D0               	btfss	4048,4,c	;volatile
  1155   000C8C  D018               	goto	l4216
  1156                           
  1157                           ;Lab6.c: 141: BorraLCD();
  1158   000C8E  ECD1  F00D         	call	_BorraLCD	;wreg free
  1159                           
  1160                           ;Lab6.c: 142: Bienvenida();
  1161   000C92  EC40  F007         	call	_Bienvenida	;wreg free
  1162                           
  1163                           ;Lab6.c: 143: contador = 0;
  1164   000C96  6A32               	clrf	_contador^0,c
  1165                           
  1166                           ;Lab6.c: 144: BorraLCD();
  1167   000C98  ECD1  F00D         	call	_BorraLCD	;wreg free
  1168                           
  1169                           ;Lab6.c: 145: MensajeLCD_Var("Bienvenida");
  1170   000C9C  0E95               	movlw	low STR_3
  1171   000C9E  6E26               	movwf	MensajeLCD_Var@a^0,c
  1172   000CA0  EC4D  F00D         	call	_MensajeLCD_Var	;wreg free
  1173                           
  1174                           ;Lab6.c: 147: _delay((unsigned long)((1000)*(1000000/4000.0)));
  1175   000CA4  0E02               	movlw	2
  1176   000CA6  0100               	movlb	0	; () banked
  1177   000CA8  6F65               	movwf	(??_main+1)& (0+255),b
  1178   000CAA  0E45               	movlw	69
  1179   000CAC  6F64               	movwf	??_main& (0+255),b
  1180   000CAE  0EA9               	movlw	169
  1181   000CB0                     u3657:
  1182   000CB0  2EE8               	decfsz	wreg,f,c
  1183   000CB2  D7FE               	bra	u3657
  1184   000CB4  2F64               	decfsz	??_main& (0+255),f,b
  1185   000CB6  D7FC               	bra	u3657
  1186   000CB8  2F65               	decfsz	(??_main+1)& (0+255),f,b
  1187   000CBA  D7FA               	bra	u3657
  1188   000CBC  D000               	nop2	
  1189   000CBE                     l4216:
  1190                           
  1191                           ;Lab6.c: 148: };Lab6.c: 151: if(RI == 0){
  1192   000CBE  B8D0               	btfsc	4048,4,c	;volatile
  1193   000CC0  D003               	goto	l4222
  1194                           
  1195                           ;Lab6.c: 153: LATE = 0b101;
  1196   000CC2  0E05               	movlw	5
  1197   000CC4  6E8D               	movwf	141,c	;volatile
  1198                           
  1199                           ;Lab6.c: 154: RI = 1;
  1200   000CC6  88D0               	bsf	4048,4,c	;volatile
  1201   000CC8                     l4222:
  1202                           
  1203                           ;Lab6.c: 164: input = 0;
  1204   000CC8  6A37               	clrf	_input^0,c
  1205                           
  1206                           ;Lab6.c: 165: objetivo = 0;
  1207   000CCA  6A3A               	clrf	_objetivo^0,c
  1208                           
  1209                           ;Lab6.c: 166: ok = 0;
  1210   000CCC  6A35               	clrf	_ok^0,c
  1211                           
  1212                           ;Lab6.c: 167: contador = 0;
  1213   000CCE  6A32               	clrf	_contador^0,c
  1214                           
  1215                           ;Lab6.c: 173: BorraLCD();
  1216   000CD0  ECD1  F00D         	call	_BorraLCD	;wreg free
  1217                           
  1218                           ;Lab6.c: 174: MostrarCursorLCD();
  1219   000CD4  ECC7  F00D         	call	_MostrarCursorLCD	;wreg free
  1220                           
  1221                           ;Lab6.c: 175: MensajeLCD_Var(*aux);
  1222   000CD8  C03D  F026         	movff	_aux,MensajeLCD_Var@a
  1223   000CDC  EC4D  F00D         	call	_MensajeLCD_Var	;wreg free
  1224                           
  1225                           ;Lab6.c: 177: DireccionaLCD(0xC0);
  1226   000CE0  0EC0               	movlw	192
  1227   000CE2  EC9C  F00D         	call	_DireccionaLCD
  1228                           
  1229                           ;Lab6.c: 178: Iniciarpregunta=1;
  1230   000CE6  0E01               	movlw	1
  1231   000CE8  6E34               	movwf	_Iniciarpregunta^0,c
  1232                           
  1233                           ;Lab6.c: 179: block = 0;
  1234   000CEA  6A36               	clrf	_block^0,c
  1235                           
  1236                           ;Lab6.c: 184: while(ok == 0){
  1237   000CEC  D004               	goto	l4246
  1238   000CEE                     l4242:
  1239                           
  1240                           ;Lab6.c: 185: if(emergency == 1) Emergencia();
  1241   000CEE  0433               	decf	_emergency^0,w,c
  1242   000CF0  B4D8               	btfsc	status,2,c
  1243   000CF2  EC24  F00D         	call	_Emergencia	;wreg free
  1244   000CF6                     l4246:
  1245   000CF6  5035               	movf	_ok^0,w,c
  1246   000CF8  B4D8               	btfsc	status,2,c
  1247   000CFA  D7F9               	goto	l4242
  1248                           
  1249                           ;Lab6.c: 188: };Lab6.c: 193: if(input < 2){
  1250   000CFC  0E02               	movlw	2
  1251   000CFE  6037               	cpfslt	_input^0,c
  1252   000D00  D007               	goto	l4254
  1253                           
  1254                           ;Lab6.c: 195: Tecla = 0;
  1255   000D02  6A3B               	clrf	_Tecla^0,c
  1256                           
  1257                           ;Lab6.c: 196: objetivo = objetivo/10;
  1258   000D04  0E0A               	movlw	10
  1259   000D06  6E25               	movwf	___lbdiv@divisor^0,c
  1260   000D08  503A               	movf	_objetivo^0,w,c
  1261   000D0A  ECD1  F00C         	call	___lbdiv
  1262   000D0E  6E3A               	movwf	_objetivo^0,c
  1263   000D10                     l4254:
  1264                           
  1265                           ;Lab6.c: 197: };Lab6.c: 198: input = 3;
  1266   000D10  0E03               	movlw	3
  1267   000D12  6E37               	movwf	_input^0,c
  1268                           
  1269                           ;Lab6.c: 201: if(objetivo > 59){
  1270   000D14  0E3B               	movlw	59
  1271   000D16  643A               	cpfsgt	_objetivo^0,c
  1272   000D18  D014               	goto	l4264
  1273                           
  1274                           ;Lab6.c: 202: BorraLCD();
  1275   000D1A  ECD1  F00D         	call	_BorraLCD	;wreg free
  1276                           
  1277                           ;Lab6.c: 203: MensajeLCD_Var("Valor no valido");
  1278   000D1E  0E46               	movlw	low STR_4
  1279   000D20  6E26               	movwf	MensajeLCD_Var@a^0,c
  1280   000D22  EC4D  F00D         	call	_MensajeLCD_Var	;wreg free
  1281                           
  1282                           ;Lab6.c: 204: _delay((unsigned long)((2000)*(1000000/4000.0)));
  1283   000D26  0E03               	movlw	3
  1284   000D28  0100               	movlb	0	; () banked
  1285   000D2A  6F65               	movwf	(??_main+1)& (0+255),b
  1286   000D2C  0E8A               	movlw	138
  1287   000D2E  6F64               	movwf	??_main& (0+255),b
  1288   000D30  0E55               	movlw	85
  1289   000D32                     u3667:
  1290   000D32  2EE8               	decfsz	wreg,f,c
  1291   000D34  D7FE               	bra	u3667
  1292   000D36  2F64               	decfsz	??_main& (0+255),f,b
  1293   000D38  D7FC               	bra	u3667
  1294   000D3A  2F65               	decfsz	(??_main+1)& (0+255),f,b
  1295   000D3C  D7FA               	bra	u3667
  1296   000D3E  D000               	nop2	
  1297   000D40  00FF               	reset		;# 
  1298   000D42                     l4264:
  1299                           
  1300                           ;Lab6.c: 206: };Lab6.c: 209: objetivo = objetivo + Tecla;
  1301   000D42  503A               	movf	_objetivo^0,w,c
  1302   000D44  243B               	addwf	_Tecla^0,w,c
  1303   000D46  6E3A               	movwf	_objetivo^0,c
  1304                           
  1305                           ;Lab6.c: 210: faltantes = objetivo;
  1306   000D48  C03A  F039         	movff	_objetivo,_faltantes
  1307                           
  1308                           ;Lab6.c: 211: contadas = objetivo - faltantes;
  1309   000D4C  5039               	movf	_faltantes^0,w,c
  1310   000D4E  5C3A               	subwf	_objetivo^0,w,c
  1311   000D50  6E38               	movwf	_contadas^0,c
  1312                           
  1313                           ;Lab6.c: 216: block = 1;
  1314   000D52  0E01               	movlw	1
  1315   000D54  6E36               	movwf	_block^0,c
  1316                           
  1317                           ;Lab6.c: 217: BorraLCD();
  1318   000D56  ECD1  F00D         	call	_BorraLCD	;wreg free
  1319                           
  1320                           ;Lab6.c: 218: MensajeLCD_Var("Faltantes :");
  1321   000D5A  0E73               	movlw	low STR_5
  1322   000D5C  6E26               	movwf	MensajeLCD_Var@a^0,c
  1323   000D5E  EC4D  F00D         	call	_MensajeLCD_Var	;wreg free
  1324                           
  1325                           ;Lab6.c: 219: EscribeLCD_n8(faltantes,2);
  1326   000D62  0E02               	movlw	2
  1327   000D64  6E29               	movwf	EscribeLCD_n8@b^0,c
  1328   000D66  5039               	movf	_faltantes^0,w,c
  1329   000D68  ECC5  F007         	call	_EscribeLCD_n8
  1330                           
  1331                           ;Lab6.c: 220: DireccionaLCD(0xC0);
  1332   000D6C  0EC0               	movlw	192
  1333   000D6E  EC9C  F00D         	call	_DireccionaLCD
  1334                           
  1335                           ;Lab6.c: 221: MensajeLCD_Var("Objetivo :");
  1336   000D72  0E7F               	movlw	low STR_6
  1337   000D74  6E26               	movwf	MensajeLCD_Var@a^0,c
  1338   000D76  EC4D  F00D         	call	_MensajeLCD_Var	;wreg free
  1339                           
  1340                           ;Lab6.c: 222: EscribeLCD_n8(objetivo,2);
  1341   000D7A  0E02               	movlw	2
  1342   000D7C  6E29               	movwf	EscribeLCD_n8@b^0,c
  1343   000D7E  503A               	movf	_objetivo^0,w,c
  1344   000D80  ECC5  F007         	call	_EscribeLCD_n8
  1345                           
  1346                           ;Lab6.c: 224: unsigned char Antiguo_sensor = 0;
  1347   000D84  0100               	movlb	0	; () banked
  1348   000D86  6B66               	clrf	main@Antiguo_sensor& (0+255),b
  1349   000D88                     l4286:
  1350                           
  1351                           ;Lab6.c: 228: if(emergency == 1){
  1352   000D88  0433               	decf	_emergency^0,w,c
  1353   000D8A  B4D8               	btfsc	status,2,c
  1354                           
  1355                           ;Lab6.c: 229: Emergencia();
  1356   000D8C  EC24  F00D         	call	_Emergencia	;wreg free
  1357                           
  1358                           ;Lab6.c: 230: };Lab6.c: 236: objeto = MedirDistancia();
  1359   000D90  EC70  F00A         	call	_MedirDistancia	;wreg free
  1360   000D94  6E2E               	movwf	_objeto^0,c
  1361                           
  1362                           ;Lab6.c: 237: _delay((unsigned long)((150)*(1000000/4000.0)));
  1363   000D96  0E31               	movlw	49
  1364   000D98  0100               	movlb	0	; () banked
  1365   000D9A  6F64               	movwf	??_main& (0+255),b
  1366   000D9C  0EB2               	movlw	178
  1367   000D9E                     u3677:
  1368   000D9E  2EE8               	decfsz	wreg,f,c
  1369   000DA0  D7FE               	bra	u3677
  1370   000DA2  2F64               	decfsz	??_main& (0+255),f,b
  1371   000DA4  D7FC               	bra	u3677
  1372   000DA6  0000               	nop	
  1373                           
  1374                           ;Lab6.c: 239: if(objeto < 8 && objeto >= 1){
  1375   000DA8  0E08               	movlw	8
  1376   000DAA  602E               	cpfslt	_objeto^0,c
  1377   000DAC  D006               	goto	l320
  1378   000DAE  502E               	movf	_objeto^0,w,c
  1379   000DB0  B4D8               	btfsc	status,2,c
  1380   000DB2  D003               	goto	l320
  1381                           
  1382                           ;Lab6.c: 240: Actual_sensor= objeto;
  1383   000DB4  C02E  F02B         	movff	_objeto,_Actual_sensor
  1384                           
  1385                           ;Lab6.c: 241: } else {
  1386   000DB8  D001               	goto	l4300
  1387   000DBA                     l320:
  1388                           
  1389                           ;Lab6.c: 242: Actual_sensor = 0;
  1390   000DBA  6A2B               	clrf	_Actual_sensor^0,c
  1391   000DBC                     l4300:
  1392                           
  1393                           ;Lab6.c: 243: };Lab6.c: 244: if( Actual_sensor != 0 && Antiguo_sensor == 0 && contadas <
      +                           objetivo){
  1394   000DBC  502B               	movf	_Actual_sensor^0,w,c
  1395   000DBE  B4D8               	btfsc	status,2,c
  1396   000DC0  D02C               	goto	l4326
  1397   000DC2  0100               	movlb	0	; () banked
  1398   000DC4  5166               	movf	main@Antiguo_sensor& (0+255),w,b
  1399   000DC6  A4D8               	btfss	status,2,c
  1400   000DC8  D028               	goto	l4326
  1401                           
  1402                           ; BSR set to: 0
  1403   000DCA  503A               	movf	_objetivo^0,w,c
  1404   000DCC  5C38               	subwf	_contadas^0,w,c
  1405   000DCE  B0D8               	btfsc	status,0,c
  1406   000DD0  D024               	goto	l4326
  1407                           
  1408                           ; BSR set to: 0
  1409                           ;Lab6.c: 249: contador = 0;
  1410   000DD2  6A32               	clrf	_contador^0,c
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;Lab6.c: 251: _delay((unsigned long)((100)*(1000000/4000.0)));
  1414   000DD4  0E21               	movlw	33
  1415   000DD6  0100               	movlb	0	; () banked
  1416   000DD8  6F64               	movwf	??_main& (0+255),b
  1417   000DDA  0E76               	movlw	118
  1418   000DDC                     u3687:
  1419   000DDC  2EE8               	decfsz	wreg,f,c
  1420   000DDE  D7FE               	bra	u3687
  1421   000DE0  2F64               	decfsz	??_main& (0+255),f,b
  1422   000DE2  D7FC               	bra	u3687
  1423   000DE4  0000               	nop	
  1424                           
  1425                           ;Lab6.c: 253: contadas++;
  1426   000DE6  2A38               	incf	_contadas^0,f,c
  1427                           
  1428                           ;Lab6.c: 254: faltantes--;
  1429   000DE8  0639               	decf	_faltantes^0,f,c
  1430                           
  1431                           ;Lab6.c: 256: if(contadas%10 == 0 && contadas != objetivo){
  1432   000DEA  0E0A               	movlw	10
  1433   000DEC  6E21               	movwf	___lbmod@divisor^0,c
  1434   000DEE  5038               	movf	_contadas^0,w,c
  1435   000DF0  EC39  F00D         	call	___lbmod
  1436   000DF4  0900               	iorlw	0
  1437   000DF6  A4D8               	btfss	status,2,c
  1438   000DF8  D00E               	goto	l4324
  1439   000DFA  503A               	movf	_objetivo^0,w,c
  1440   000DFC  1838               	xorwf	_contadas^0,w,c
  1441   000DFE  B4D8               	btfsc	status,2,c
  1442   000E00  D00A               	goto	l4324
  1443                           
  1444                           ;Lab6.c: 259: LATA2 = 1;
  1445   000E02  8489               	bsf	3977,2,c	;volatile
  1446                           
  1447                           ;Lab6.c: 260: _delay((unsigned long)((500)*(1000000/4000.0)));
  1448   000E04  0EA3               	movlw	163
  1449   000E06  0100               	movlb	0	; () banked
  1450   000E08  6F64               	movwf	??_main& (0+255),b
  1451   000E0A  0E55               	movlw	85
  1452   000E0C                     u3697:
  1453   000E0C  2EE8               	decfsz	wreg,f,c
  1454   000E0E  D7FE               	bra	u3697
  1455   000E10  2F64               	decfsz	??_main& (0+255),f,b
  1456   000E12  D7FC               	bra	u3697
  1457                           
  1458                           ;Lab6.c: 261: LATA2 = 0;
  1459   000E14  9489               	bcf	3977,2,c	;volatile
  1460   000E16                     l4324:
  1461                           
  1462                           ;Lab6.c: 262: };Lab6.c: 263: MostrarNumeros();
  1463   000E16  EC9A  F00B         	call	_MostrarNumeros	;wreg free
  1464   000E1A                     l4326:
  1465                           
  1466                           ;Lab6.c: 264: };Lab6.c: 267: Antiguo_sensor = Actual_sensor;
  1467   000E1A  C02B  F066         	movff	_Actual_sensor,main@Antiguo_sensor
  1468                           
  1469                           ;Lab6.c: 272: OcultarCursorLCD();
  1470   000E1E  ECBD  F00D         	call	_OcultarCursorLCD	;wreg free
  1471                           
  1472                           ;Lab6.c: 273: DireccionaLCD(0x8B);
  1473   000E22  0E8B               	movlw	139
  1474   000E24  EC9C  F00D         	call	_DireccionaLCD
  1475                           
  1476                           ;Lab6.c: 276: EscribeLCD_n8(faltantes,2);
  1477   000E28  0E02               	movlw	2
  1478   000E2A  6E29               	movwf	EscribeLCD_n8@b^0,c
  1479   000E2C  5039               	movf	_faltantes^0,w,c
  1480   000E2E  ECC5  F007         	call	_EscribeLCD_n8
  1481                           
  1482                           ;Lab6.c: 281: if (contadas == objetivo) {
  1483   000E32  503A               	movf	_objetivo^0,w,c
  1484   000E34  1838               	xorwf	_contadas^0,w,c
  1485   000E36  A4D8               	btfss	status,2,c
  1486   000E38  D7A7               	goto	l4286
  1487                           
  1488                           ;Lab6.c: 282: LATA2 = 1;
  1489   000E3A  8489               	bsf	3977,2,c	;volatile
  1490                           
  1491                           ;Lab6.c: 283: BorraLCD();
  1492   000E3C  ECD1  F00D         	call	_BorraLCD	;wreg free
  1493                           
  1494                           ;Lab6.c: 284: MensajeLCD_Var(*FIN);
  1495   000E40  C03C  F026         	movff	_FIN,MensajeLCD_Var@a
  1496   000E44  EC4D  F00D         	call	_MensajeLCD_Var	;wreg free
  1497                           
  1498                           ;Lab6.c: 285: _delay((unsigned long)((1000)*(1000000/4000.0)));
  1499   000E48  0E02               	movlw	2
  1500   000E4A  0100               	movlb	0	; () banked
  1501   000E4C  6F65               	movwf	(??_main+1)& (0+255),b
  1502   000E4E  0E45               	movlw	69
  1503   000E50  6F64               	movwf	??_main& (0+255),b
  1504   000E52  0EA9               	movlw	169
  1505   000E54                     u3707:
  1506   000E54  2EE8               	decfsz	wreg,f,c
  1507   000E56  D7FE               	bra	u3707
  1508   000E58  2F64               	decfsz	??_main& (0+255),f,b
  1509   000E5A  D7FC               	bra	u3707
  1510   000E5C  2F65               	decfsz	(??_main+1)& (0+255),f,b
  1511   000E5E  D7FA               	bra	u3707
  1512   000E60  D000               	nop2	
  1513                           
  1514                           ;Lab6.c: 286: LATA2 = 0;
  1515   000E62  9489               	bcf	3977,2,c	;volatile
  1516                           
  1517                           ;Lab6.c: 288: };Lab6.c: 289: };Lab6.c: 296: ok = 0;
  1518                           
  1519                           ;Lab6.c: 287: break;
  1520   000E64  6A35               	clrf	_ok^0,c
  1521   000E66                     l4346:
  1522                           
  1523                           ;Lab6.c: 300: if(emergency == 1){
  1524   000E66  0433               	decf	_emergency^0,w,c
  1525   000E68  B4D8               	btfsc	status,2,c
  1526                           
  1527                           ;Lab6.c: 301: Emergencia();
  1528   000E6A  EC24  F00D         	call	_Emergencia	;wreg free
  1529                           
  1530                           ;Lab6.c: 302: };Lab6.c: 304: if(ok > 0){
  1531   000E6E  5035               	movf	_ok^0,w,c
  1532   000E70  B4D8               	btfsc	status,2,c
  1533   000E72  D7F9               	goto	l4346
  1534                           
  1535                           ;Lab6.c: 305: ok = 0;
  1536   000E74  6A35               	clrf	_ok^0,c
  1537                           
  1538                           ;Lab6.c: 306: objetivo = 0;
  1539   000E76  6A3A               	clrf	_objetivo^0,c
  1540                           
  1541                           ;Lab6.c: 307: input =0;
  1542   000E78  6A37               	clrf	_input^0,c
  1543                           
  1544                           ;Lab6.c: 308: MostrarNumeros();
  1545   000E7A  EC9A  F00B         	call	_MostrarNumeros	;wreg free
  1546                           
  1547                           ;Lab6.c: 309: break;
  1548   000E7E  D724               	goto	l4222
  1549   000E80                     __end_of_main:
  1550                           	callstack 0
  1551                           
  1552 ;; *************** function _MostrarNumeros *****************
  1553 ;; Defined at:
  1554 ;;		line 571 in file "Lab6.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;		None
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;		None
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      void 
  1561 ;; Registers used:
  1562 ;;		wreg, status,2, status,0, cstack
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1568 ;;      Params:         0       0       0       0       0       0       0       0       0
  1569 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1570 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1571 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1572 ;;Total ram usage:        0 bytes
  1573 ;; Hardware stack levels used: 1
  1574 ;; Hardware stack levels required when called: 5
  1575 ;; This function calls:
  1576 ;;		___lbmod
  1577 ;; This function is called by:
  1578 ;;		_main
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text1
  1583   001734                     __ptext1:
  1584                           	callstack 0
  1585   001734                     _MostrarNumeros:
  1586                           	callstack 25
  1587                           
  1588                           ;Lab6.c: 574: LATD = contadas % 10;
  1589                           
  1590                           ;incstack = 0
  1591   001734  0E0A               	movlw	10
  1592   001736  6E21               	movwf	___lbmod@divisor^0,c
  1593   001738  5038               	movf	_contadas^0,w,c
  1594   00173A  EC39  F00D         	call	___lbmod
  1595   00173E  6E8C               	movwf	140,c	;volatile
  1596                           
  1597                           ;Lab6.c: 577: if(contadas<10){
  1598   001740  0E0A               	movlw	10
  1599   001742  6038               	cpfslt	_contadas^0,c
  1600   001744  D003               	goto	l4138
  1601                           
  1602                           ;Lab6.c: 579: LATE = 0b101;
  1603   001746  0E05               	movlw	5
  1604   001748  6E8D               	movwf	141,c	;volatile
  1605                           
  1606                           ;Lab6.c: 580: } else if(contadas<20){
  1607   00174A  0012               	return	
  1608   00174C                     l4138:
  1609   00174C  0E14               	movlw	20
  1610   00174E  6038               	cpfslt	_contadas^0,c
  1611   001750  D003               	goto	l4142
  1612                           
  1613                           ;Lab6.c: 582: LATE=0b100;
  1614   001752  0E04               	movlw	4
  1615   001754  6E8D               	movwf	141,c	;volatile
  1616                           
  1617                           ;Lab6.c: 583: } else if (contadas<30){
  1618   001756  0012               	return	
  1619   001758                     l4142:
  1620   001758  0E1E               	movlw	30
  1621   00175A  6038               	cpfslt	_contadas^0,c
  1622   00175C  D003               	goto	l4146
  1623                           
  1624                           ;Lab6.c: 585: LATE=0b110;
  1625   00175E  0E06               	movlw	6
  1626   001760  6E8D               	movwf	141,c	;volatile
  1627                           
  1628                           ;Lab6.c: 586: } else if (contadas<40){
  1629   001762  0012               	return	
  1630   001764                     l4146:
  1631   001764  0E28               	movlw	40
  1632   001766  6038               	cpfslt	_contadas^0,c
  1633   001768  D003               	goto	l4150
  1634                           
  1635                           ;Lab6.c: 588: LATE=0b010;
  1636   00176A  0E02               	movlw	2
  1637   00176C  6E8D               	movwf	141,c	;volatile
  1638                           
  1639                           ;Lab6.c: 589: } else if (contadas<50){
  1640   00176E  0012               	return	
  1641   001770                     l4150:
  1642   001770  0E32               	movlw	50
  1643   001772  6038               	cpfslt	_contadas^0,c
  1644   001774  D003               	goto	l4154
  1645                           
  1646                           ;Lab6.c: 591: LATE = 0b011;
  1647   001776  0E03               	movlw	3
  1648   001778  6E8D               	movwf	141,c	;volatile
  1649                           
  1650                           ;Lab6.c: 592: } else if (contadas<60){
  1651   00177A  0012               	return	
  1652   00177C                     l4154:
  1653   00177C  0E3C               	movlw	60
  1654   00177E  6038               	cpfslt	_contadas^0,c
  1655   001780  0012               	return	
  1656                           
  1657                           ;Lab6.c: 594: LATE = 0b111;
  1658   001782  0E07               	movlw	7
  1659   001784  6E8D               	movwf	141,c	;volatile
  1660   001786  0012               	return	
  1661   001788                     __end_of_MostrarNumeros:
  1662                           	callstack 0
  1663                           
  1664 ;; *************** function _MedirDistancia *****************
  1665 ;; Defined at:
  1666 ;;		line 701 in file "Lab6.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;		None
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;  aux             1   39[COMRAM] unsigned char 
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      unsigned char 
  1673 ;; Registers used:
  1674 ;;		wreg, status,2, status,0, cstack
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1680 ;;      Params:         0       0       0       0       0       0       0       0       0
  1681 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1682 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1683 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1684 ;;Total ram usage:        1 bytes
  1685 ;; Hardware stack levels used: 1
  1686 ;; Hardware stack levels required when called: 5
  1687 ;; This function calls:
  1688 ;;		___lwdiv
  1689 ;; This function is called by:
  1690 ;;		_main
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text2
  1695   0014E0                     __ptext2:
  1696                           	callstack 0
  1697   0014E0                     _MedirDistancia:
  1698                           	callstack 25
  1699                           
  1700                           ;Lab6.c: 703: CCP2CON=0b00000100;
  1701                           
  1702                           ;incstack = 0
  1703   0014E0  0E04               	movlw	4
  1704   0014E2  6EBA               	movwf	186,c	;volatile
  1705                           
  1706                           ;Lab6.c: 704: TMR1=0;
  1707   0014E4  0E00               	movlw	0
  1708   0014E6  6ECF               	movwf	207,c	;volatile
  1709   0014E8  0E00               	movlw	0
  1710   0014EA  6ECE               	movwf	206,c	;volatile
  1711                           
  1712                           ;Lab6.c: 705: CCP2IF=0;
  1713   0014EC  90A1               	bcf	4001,0,c	;volatile
  1714                           
  1715                           ;Lab6.c: 706: RC0=1;
  1716   0014EE  8082               	bsf	3970,0,c	;volatile
  1717                           
  1718                           ;Lab6.c: 707: _delay((unsigned long)((10)*(1000000/4000000.0)));
  1719   0014F0  D000               	nop2		;2 cycle nop
  1720                           
  1721                           ;Lab6.c: 708: RC0=0;
  1722   0014F2  9082               	bcf	3970,0,c	;volatile
  1723                           
  1724                           ;Lab6.c: 709: etimeout=1;
  1725   0014F4  0E01               	movlw	1
  1726   0014F6  6E30               	movwf	_etimeout^0,c
  1727   0014F8                     l463:
  1728   0014F8  B282               	btfsc	3970,1,c	;volatile
  1729   0014FA  D003               	goto	u3360
  1730   0014FC  0430               	decf	_etimeout^0,w,c
  1731   0014FE  B4D8               	btfsc	status,2,c
  1732   001500  D7FB               	goto	l463
  1733   001502                     u3360:
  1734                           
  1735                           ;Lab6.c: 712: if(etimeout==0){
  1736   001502  5030               	movf	_etimeout^0,w,c
  1737   001504  A4D8               	btfss	status,2,c
  1738   001506  D002               	goto	l468
  1739                           
  1740                           ;Lab6.c: 713: return 0;
  1741   001508  0E00               	movlw	0
  1742   00150A  0012               	return	
  1743   00150C                     l468:
  1744                           
  1745                           ;Lab6.c: 714: };Lab6.c: 715: TMR1ON=1;
  1746   00150C  80CD               	bsf	4045,0,c	;volatile
  1747   00150E                     l470:
  1748   00150E  B0A1               	btfsc	4001,0,c	;volatile
  1749   001510  D002               	goto	u3390
  1750   001512  A09E               	btfss	3998,0,c	;volatile
  1751   001514  D7FC               	goto	l470
  1752   001516                     u3390:
  1753                           
  1754                           ;Lab6.c: 717: TMR1ON=0;
  1755   001516  90CD               	bcf	4045,0,c	;volatile
  1756                           
  1757                           ;Lab6.c: 718: if(TMR1IF==1)
  1758   001518  A09E               	btfss	3998,0,c	;volatile
  1759   00151A  D002               	goto	l4122
  1760                           
  1761                           ;Lab6.c: 719: aux=255;
  1762   00151C  6828               	setf	MedirDistancia@aux^0,c
  1763   00151E  D016               	goto	l4128
  1764   001520                     l4122:
  1765                           
  1766                           ;Lab6.c: 720: else{;Lab6.c: 721: if(CCPR2>=3556)
  1767   001520  0EE4               	movlw	228
  1768   001522  5CBB               	subwf	187,w,c	;volatile
  1769   001524  0E0D               	movlw	13
  1770   001526  58BC               	subwfb	188,w,c	;volatile
  1771   001528  A0D8               	btfss	status,0,c
  1772   00152A  D004               	goto	l4126
  1773                           
  1774                           ;Lab6.c: 722: CCPR2=3556;
  1775   00152C  0E0D               	movlw	13
  1776   00152E  6EBC               	movwf	188,c	;volatile
  1777   001530  0EE4               	movlw	228
  1778   001532  6EBB               	movwf	187,c	;volatile
  1779   001534                     l4126:
  1780                           
  1781                           ;Lab6.c: 723: aux=CCPR2/(14) ;
  1782   001534  CFBB F021          	movff	4027,___lwdiv@dividend	;volatile
  1783   001538  CFBC F022          	movff	4028,___lwdiv@dividend+1	;volatile
  1784   00153C  0E00               	movlw	0
  1785   00153E  6E24               	movwf	(___lwdiv@divisor+1)^0,c
  1786   001540  0E0E               	movlw	14
  1787   001542  6E23               	movwf	___lwdiv@divisor^0,c
  1788   001544  ECEE  F00B         	call	___lwdiv	;wreg free
  1789   001548  5021               	movf	?___lwdiv^0,w,c
  1790   00154A  6E28               	movwf	MedirDistancia@aux^0,c
  1791   00154C                     l4128:
  1792                           
  1793                           ;Lab6.c: 724: };Lab6.c: 726: return aux;
  1794   00154C  5028               	movf	MedirDistancia@aux^0,w,c
  1795   00154E  0012               	return		;funcret
  1796   001550                     __end_of_MedirDistancia:
  1797                           	callstack 0
  1798                           
  1799 ;; *************** function ___lwdiv *****************
  1800 ;; Defined at:
  1801 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lwdiv.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  dividend        2   32[COMRAM] unsigned int 
  1804 ;;  divisor         2   34[COMRAM] unsigned int 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  quotient        2   37[COMRAM] unsigned int 
  1807 ;;  counter         1   36[COMRAM] unsigned char 
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  2   32[COMRAM] unsigned int 
  1810 ;; Registers used:
  1811 ;;		wreg, status,2, status,0
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1817 ;;      Params:         4       0       0       0       0       0       0       0       0
  1818 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1819 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1820 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1821 ;;Total ram usage:        7 bytes
  1822 ;; Hardware stack levels used: 1
  1823 ;; Hardware stack levels required when called: 4
  1824 ;; This function calls:
  1825 ;;		Nothing
  1826 ;; This function is called by:
  1827 ;;		_MedirDistancia
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text3
  1832   0017DC                     __ptext3:
  1833                           	callstack 0
  1834   0017DC                     ___lwdiv:
  1835                           	callstack 25
  1836                           
  1837                           ;incstack = 0
  1838   0017DC  0E00               	movlw	0
  1839   0017DE  6E27               	movwf	(___lwdiv@quotient+1)^0,c
  1840   0017E0  0E00               	movlw	0
  1841   0017E2  6E26               	movwf	___lwdiv@quotient^0,c
  1842   0017E4  5023               	movf	___lwdiv@divisor^0,w,c
  1843   0017E6  1024               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1844   0017E8  B4D8               	btfsc	status,2,c
  1845   0017EA  D01C               	goto	l978
  1846   0017EC  0E01               	movlw	1
  1847   0017EE  6E25               	movwf	___lwdiv@counter^0,c
  1848   0017F0  D004               	goto	l3974
  1849   0017F2                     l3972:
  1850   0017F2  90D8               	bcf	status,0,c
  1851   0017F4  3623               	rlcf	___lwdiv@divisor^0,f,c
  1852   0017F6  3624               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1853   0017F8  2A25               	incf	___lwdiv@counter^0,f,c
  1854   0017FA                     l3974:
  1855   0017FA  AE24               	btfss	(___lwdiv@divisor+1)^0,7,c
  1856   0017FC  D7FA               	goto	l3972
  1857   0017FE                     u3300:
  1858   0017FE  90D8               	bcf	status,0,c
  1859   001800  3626               	rlcf	___lwdiv@quotient^0,f,c
  1860   001802  3627               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1861   001804  5023               	movf	___lwdiv@divisor^0,w,c
  1862   001806  5C21               	subwf	___lwdiv@dividend^0,w,c
  1863   001808  5024               	movf	(___lwdiv@divisor+1)^0,w,c
  1864   00180A  5822               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1865   00180C  A0D8               	btfss	status,0,c
  1866   00180E  D005               	goto	l3984
  1867   001810  5023               	movf	___lwdiv@divisor^0,w,c
  1868   001812  5E21               	subwf	___lwdiv@dividend^0,f,c
  1869   001814  5024               	movf	(___lwdiv@divisor+1)^0,w,c
  1870   001816  5A22               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1871   001818  8026               	bsf	___lwdiv@quotient^0,0,c
  1872   00181A                     l3984:
  1873   00181A  90D8               	bcf	status,0,c
  1874   00181C  3224               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1875   00181E  3223               	rrcf	___lwdiv@divisor^0,f,c
  1876   001820  2E25               	decfsz	___lwdiv@counter^0,f,c
  1877   001822  D7ED               	goto	u3300
  1878   001824                     l978:
  1879   001824  C026  F021         	movff	___lwdiv@quotient,?___lwdiv
  1880   001828  C027  F022         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1881   00182C  0012               	return		;funcret
  1882   00182E                     __end_of___lwdiv:
  1883                           	callstack 0
  1884                           
  1885 ;; *************** function _EscribeLCD_n8 *****************
  1886 ;; Defined at:
  1887 ;;		line 149 in file "LibLCDXC8.h"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  a               1    wreg     unsigned char 
  1890 ;;  b               1   40[COMRAM] unsigned char 
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;  a               1    3[BANK0 ] unsigned char 
  1893 ;;  unidad          1    2[BANK0 ] unsigned char 
  1894 ;;  decena          1    1[BANK0 ] unsigned char 
  1895 ;;  centena         1    0[BANK0 ] unsigned char 
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2, status,0, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1905 ;;      Params:         1       0       0       0       0       0       0       0       0
  1906 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1908 ;;      Totals:         1       4       0       0       0       0       0       0       0
  1909 ;;Total ram usage:        5 bytes
  1910 ;; Hardware stack levels used: 1
  1911 ;; Hardware stack levels required when called: 6
  1912 ;; This function calls:
  1913 ;;		_EnviaDato
  1914 ;;		_HabilitaLCD
  1915 ;;		_RetardoLCD
  1916 ;;		___lbdiv
  1917 ;;		___lbmod
  1918 ;; This function is called by:
  1919 ;;		_main
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           	psect	text4
  1924   000F8A                     __ptext4:
  1925                           	callstack 0
  1926   000F8A                     _EscribeLCD_n8:
  1927                           	callstack 24
  1928                           
  1929                           ;incstack = 0
  1930                           ;EscribeLCD_n8@a stored from wreg
  1931   000F8A  0100               	movlb	0	; () banked
  1932   000F8C  6F63               	movwf	EscribeLCD_n8@a& (0+255),b
  1933                           
  1934                           ;LibLCDXC8.h: 154: unsigned char centena,decena,unidad;;LibLCDXC8.h: 155: LATA3=1;
  1935   000F8E  8689               	bsf	3977,3,c	;volatile
  1936                           
  1937                           ;LibLCDXC8.h: 156: switch(b){
  1938   000F90  D071               	goto	l4022
  1939   000F92                     l3990:
  1940   000F92  0E0A               	movlw	10
  1941   000F94  6E21               	movwf	___lbmod@divisor^0,c
  1942   000F96  0100               	movlb	0	; () banked
  1943   000F98  5163               	movf	EscribeLCD_n8@a& (0+255),w,b
  1944   000F9A  EC39  F00D         	call	___lbmod
  1945   000F9E  0100               	movlb	0	; () banked
  1946   000FA0  6F62               	movwf	EscribeLCD_n8@unidad& (0+255),b
  1947                           
  1948                           ;LibLCDXC8.h: 158: EnviaDato(unidad+48);
  1949   000FA2  5162               	movf	EscribeLCD_n8@unidad& (0+255),w,b
  1950   000FA4  0F30               	addlw	48
  1951   000FA6  EC69  F00C         	call	_EnviaDato
  1952                           
  1953                           ;LibLCDXC8.h: 159: HabilitaLCD();
  1954   000FAA  ECDB  F00D         	call	_HabilitaLCD	;wreg free
  1955                           
  1956                           ;LibLCDXC8.h: 160: RetardoLCD(4);
  1957   000FAE  0E04               	movlw	4
  1958   000FB0  EC44  F00B         	call	_RetardoLCD
  1959                           
  1960                           ;LibLCDXC8.h: 161: break;
  1961   000FB4  0012               	return	
  1962   000FB6                     l3996:
  1963   000FB6  0E0A               	movlw	10
  1964   000FB8  6E25               	movwf	___lbdiv@divisor^0,c
  1965   000FBA  0E64               	movlw	100
  1966   000FBC  6E21               	movwf	___lbmod@divisor^0,c
  1967   000FBE  0100               	movlb	0	; () banked
  1968   000FC0  5163               	movf	EscribeLCD_n8@a& (0+255),w,b
  1969   000FC2  EC39  F00D         	call	___lbmod
  1970   000FC6  ECD1  F00C         	call	___lbdiv
  1971   000FCA  0100               	movlb	0	; () banked
  1972   000FCC  6F61               	movwf	EscribeLCD_n8@decena& (0+255),b
  1973                           
  1974                           ;LibLCDXC8.h: 163: unidad=a%10;
  1975   000FCE  0E0A               	movlw	10
  1976   000FD0  6E21               	movwf	___lbmod@divisor^0,c
  1977   000FD2  5163               	movf	EscribeLCD_n8@a& (0+255),w,b
  1978   000FD4  EC39  F00D         	call	___lbmod
  1979   000FD8  0100               	movlb	0	; () banked
  1980   000FDA  6F62               	movwf	EscribeLCD_n8@unidad& (0+255),b
  1981                           
  1982                           ;LibLCDXC8.h: 164: EnviaDato(decena+48);
  1983   000FDC  5161               	movf	EscribeLCD_n8@decena& (0+255),w,b
  1984   000FDE  0F30               	addlw	48
  1985   000FE0  EC69  F00C         	call	_EnviaDato
  1986                           
  1987                           ;LibLCDXC8.h: 165: HabilitaLCD();
  1988   000FE4  ECDB  F00D         	call	_HabilitaLCD	;wreg free
  1989                           
  1990                           ;LibLCDXC8.h: 166: RetardoLCD(4);
  1991   000FE8  0E04               	movlw	4
  1992   000FEA  EC44  F00B         	call	_RetardoLCD
  1993                           
  1994                           ;LibLCDXC8.h: 167: EnviaDato(unidad+48);
  1995   000FEE  0100               	movlb	0	; () banked
  1996   000FF0  5162               	movf	EscribeLCD_n8@unidad& (0+255),w,b
  1997   000FF2  0F30               	addlw	48
  1998   000FF4  EC69  F00C         	call	_EnviaDato
  1999                           
  2000                           ;LibLCDXC8.h: 168: HabilitaLCD();
  2001   000FF8  ECDB  F00D         	call	_HabilitaLCD	;wreg free
  2002                           
  2003                           ;LibLCDXC8.h: 169: RetardoLCD(4);
  2004   000FFC  0E04               	movlw	4
  2005   000FFE  EC44  F00B         	call	_RetardoLCD
  2006                           
  2007                           ;LibLCDXC8.h: 170: break;
  2008   001002  0012               	return	
  2009   001004                     l4006:
  2010   001004  0E64               	movlw	100
  2011   001006  6E25               	movwf	___lbdiv@divisor^0,c
  2012   001008  0100               	movlb	0	; () banked
  2013   00100A  5163               	movf	EscribeLCD_n8@a& (0+255),w,b
  2014   00100C  ECD1  F00C         	call	___lbdiv
  2015   001010  0100               	movlb	0	; () banked
  2016   001012  6F60               	movwf	EscribeLCD_n8@centena& (0+255),b
  2017                           
  2018                           ;LibLCDXC8.h: 172: decena=(a%100)/10;
  2019   001014  0E0A               	movlw	10
  2020   001016  6E25               	movwf	___lbdiv@divisor^0,c
  2021   001018  0E64               	movlw	100
  2022   00101A  6E21               	movwf	___lbmod@divisor^0,c
  2023   00101C  5163               	movf	EscribeLCD_n8@a& (0+255),w,b
  2024   00101E  EC39  F00D         	call	___lbmod
  2025   001022  ECD1  F00C         	call	___lbdiv
  2026   001026  0100               	movlb	0	; () banked
  2027   001028  6F61               	movwf	EscribeLCD_n8@decena& (0+255),b
  2028                           
  2029                           ;LibLCDXC8.h: 173: unidad=a%10;
  2030   00102A  0E0A               	movlw	10
  2031   00102C  6E21               	movwf	___lbmod@divisor^0,c
  2032   00102E  5163               	movf	EscribeLCD_n8@a& (0+255),w,b
  2033   001030  EC39  F00D         	call	___lbmod
  2034   001034  0100               	movlb	0	; () banked
  2035   001036  6F62               	movwf	EscribeLCD_n8@unidad& (0+255),b
  2036                           
  2037                           ;LibLCDXC8.h: 174: EnviaDato(centena+48);
  2038   001038  5160               	movf	EscribeLCD_n8@centena& (0+255),w,b
  2039   00103A  0F30               	addlw	48
  2040   00103C  EC69  F00C         	call	_EnviaDato
  2041                           
  2042                           ;LibLCDXC8.h: 175: HabilitaLCD();
  2043   001040  ECDB  F00D         	call	_HabilitaLCD	;wreg free
  2044                           
  2045                           ;LibLCDXC8.h: 176: RetardoLCD(4);
  2046   001044  0E04               	movlw	4
  2047   001046  EC44  F00B         	call	_RetardoLCD
  2048                           
  2049                           ;LibLCDXC8.h: 177: EnviaDato(decena+48);
  2050   00104A  0100               	movlb	0	; () banked
  2051   00104C  5161               	movf	EscribeLCD_n8@decena& (0+255),w,b
  2052   00104E  0F30               	addlw	48
  2053   001050  EC69  F00C         	call	_EnviaDato
  2054                           
  2055                           ;LibLCDXC8.h: 178: HabilitaLCD();
  2056   001054  ECDB  F00D         	call	_HabilitaLCD	;wreg free
  2057                           
  2058                           ;LibLCDXC8.h: 179: RetardoLCD(4);
  2059   001058  0E04               	movlw	4
  2060   00105A  EC44  F00B         	call	_RetardoLCD
  2061                           
  2062                           ;LibLCDXC8.h: 180: EnviaDato(unidad+48);
  2063   00105E  0100               	movlb	0	; () banked
  2064   001060  5162               	movf	EscribeLCD_n8@unidad& (0+255),w,b
  2065   001062  0F30               	addlw	48
  2066   001064  EC69  F00C         	call	_EnviaDato
  2067                           
  2068                           ;LibLCDXC8.h: 181: HabilitaLCD();
  2069   001068  ECDB  F00D         	call	_HabilitaLCD	;wreg free
  2070                           
  2071                           ;LibLCDXC8.h: 182: RetardoLCD(4);
  2072   00106C  0E04               	movlw	4
  2073   00106E  EC44  F00B         	call	_RetardoLCD
  2074                           
  2075                           ;LibLCDXC8.h: 183: break;
  2076   001072  0012               	return	
  2077   001074                     l4022:
  2078   001074  5029               	movf	EscribeLCD_n8@b^0,w,c
  2079                           
  2080                           ; Switch size 1, requested type "simple"
  2081                           ; Number of cases is 3, Range of values is 1 to 3
  2082                           ; switch strategies available:
  2083                           ; Name         Instructions Cycles
  2084                           ; simple_byte           10     6 (average)
  2085                           ;	Chosen strategy is simple_byte
  2086   001076  0A01               	xorlw	1	; case 1
  2087   001078  B4D8               	btfsc	status,2,c
  2088   00107A  D78B               	goto	l3990
  2089   00107C  0A03               	xorlw	3	; case 2
  2090   00107E  B4D8               	btfsc	status,2,c
  2091   001080  D79A               	goto	l3996
  2092   001082  0A01               	xorlw	1	; case 3
  2093   001084  A4D8               	btfss	status,2,c
  2094   001086  0012               	return	
  2095   001088  D7BD               	goto	l4006
  2096   00108A                     __end_of_EscribeLCD_n8:
  2097                           	callstack 0
  2098                           
  2099 ;; *************** function ___lbmod *****************
  2100 ;; Defined at:
  2101 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbmod.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  dividend        1    wreg     unsigned char 
  2104 ;;  divisor         1   32[COMRAM] unsigned char 
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  dividend        1   33[COMRAM] unsigned char 
  2107 ;;  rem             1   35[COMRAM] unsigned char 
  2108 ;;  counter         1   34[COMRAM] unsigned char 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      unsigned char 
  2111 ;; Registers used:
  2112 ;;		wreg, status,2, status,0
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2118 ;;      Params:         1       0       0       0       0       0       0       0       0
  2119 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2121 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2122 ;;Total ram usage:        4 bytes
  2123 ;; Hardware stack levels used: 1
  2124 ;; Hardware stack levels required when called: 4
  2125 ;; This function calls:
  2126 ;;		Nothing
  2127 ;; This function is called by:
  2128 ;;		_EscribeLCD_n8
  2129 ;;		_main
  2130 ;;		_MostrarNumeros
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text5
  2135   001A72                     __ptext5:
  2136                           	callstack 0
  2137   001A72                     ___lbmod:
  2138                           	callstack 26
  2139                           
  2140                           ;incstack = 0
  2141                           ;___lbmod@dividend stored from wreg
  2142   001A72  6E22               	movwf	___lbmod@dividend^0,c
  2143   001A74  0E08               	movlw	8
  2144   001A76  6E23               	movwf	___lbmod@counter^0,c
  2145   001A78  6A24               	clrf	___lbmod@rem^0,c
  2146   001A7A                     l3952:
  2147   001A7A  90D8               	bcf	status,0,c
  2148   001A7C  3422               	rlcf	___lbmod@dividend^0,w,c
  2149   001A7E  3424               	rlcf	___lbmod@rem^0,w,c
  2150   001A80  6E24               	movwf	___lbmod@rem^0,c
  2151   001A82  90D8               	bcf	status,0,c
  2152   001A84  3622               	rlcf	___lbmod@dividend^0,f,c
  2153   001A86  5021               	movf	___lbmod@divisor^0,w,c
  2154   001A88  5C24               	subwf	___lbmod@rem^0,w,c
  2155   001A8A  A0D8               	btfss	status,0,c
  2156   001A8C  D002               	goto	l3960
  2157   001A8E  5021               	movf	___lbmod@divisor^0,w,c
  2158   001A90  5E24               	subwf	___lbmod@rem^0,f,c
  2159   001A92                     l3960:
  2160   001A92  2E23               	decfsz	___lbmod@counter^0,f,c
  2161   001A94  D7F2               	goto	l3952
  2162   001A96  5024               	movf	___lbmod@rem^0,w,c
  2163   001A98  0012               	return		;funcret
  2164   001A9A                     __end_of___lbmod:
  2165                           	callstack 0
  2166                           
  2167 ;; *************** function ___lbdiv *****************
  2168 ;; Defined at:
  2169 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbdiv.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  dividend        1    wreg     unsigned char 
  2172 ;;  divisor         1   36[COMRAM] unsigned char 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  dividend        1   37[COMRAM] unsigned char 
  2175 ;;  quotient        1   39[COMRAM] unsigned char 
  2176 ;;  counter         1   38[COMRAM] unsigned char 
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1    wreg      unsigned char 
  2179 ;; Registers used:
  2180 ;;		wreg, status,2, status,0
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2186 ;;      Params:         1       0       0       0       0       0       0       0       0
  2187 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2188 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2189 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2190 ;;Total ram usage:        4 bytes
  2191 ;; Hardware stack levels used: 1
  2192 ;; Hardware stack levels required when called: 4
  2193 ;; This function calls:
  2194 ;;		Nothing
  2195 ;; This function is called by:
  2196 ;;		_EscribeLCD_n8
  2197 ;;		_main
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           	psect	text6
  2202   0019A2                     __ptext6:
  2203                           	callstack 0
  2204   0019A2                     ___lbdiv:
  2205                           	callstack 26
  2206                           
  2207                           ;incstack = 0
  2208                           ;___lbdiv@dividend stored from wreg
  2209   0019A2  6E26               	movwf	___lbdiv@dividend^0,c
  2210   0019A4  6A28               	clrf	___lbdiv@quotient^0,c
  2211   0019A6  5025               	movf	___lbdiv@divisor^0,w,c
  2212   0019A8  B4D8               	btfsc	status,2,c
  2213   0019AA  D015               	goto	l3944
  2214   0019AC  0E01               	movlw	1
  2215   0019AE  6E27               	movwf	___lbdiv@counter^0,c
  2216   0019B0  D003               	goto	l3932
  2217   0019B2                     l3928:
  2218   0019B2  90D8               	bcf	status,0,c
  2219   0019B4  3625               	rlcf	___lbdiv@divisor^0,f,c
  2220   0019B6  2A27               	incf	___lbdiv@counter^0,f,c
  2221   0019B8                     l3932:
  2222   0019B8  AE25               	btfss	___lbdiv@divisor^0,7,c
  2223   0019BA  D7FB               	goto	l3928
  2224   0019BC                     u3260:
  2225   0019BC  90D8               	bcf	status,0,c
  2226   0019BE  3628               	rlcf	___lbdiv@quotient^0,f,c
  2227   0019C0  5025               	movf	___lbdiv@divisor^0,w,c
  2228   0019C2  5C26               	subwf	___lbdiv@dividend^0,w,c
  2229   0019C4  A0D8               	btfss	status,0,c
  2230   0019C6  D003               	goto	l3940
  2231   0019C8  5025               	movf	___lbdiv@divisor^0,w,c
  2232   0019CA  5E26               	subwf	___lbdiv@dividend^0,f,c
  2233   0019CC  8028               	bsf	___lbdiv@quotient^0,0,c
  2234   0019CE                     l3940:
  2235   0019CE  90D8               	bcf	status,0,c
  2236   0019D0  3225               	rrcf	___lbdiv@divisor^0,f,c
  2237   0019D2  2E27               	decfsz	___lbdiv@counter^0,f,c
  2238   0019D4  D7F3               	goto	u3260
  2239   0019D6                     l3944:
  2240   0019D6  5028               	movf	___lbdiv@quotient^0,w,c
  2241   0019D8  0012               	return		;funcret
  2242   0019DA                     __end_of___lbdiv:
  2243                           	callstack 0
  2244                           
  2245 ;; *************** function _Emergencia *****************
  2246 ;; Defined at:
  2247 ;;		line 600 in file "Lab6.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;		None
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;		None
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  1    wreg      void 
  2254 ;; Registers used:
  2255 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2261 ;;      Params:         0       0       0       0       0       0       0       0       0
  2262 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2263 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2264 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2265 ;;Total ram usage:        0 bytes
  2266 ;; Hardware stack levels used: 1
  2267 ;; Hardware stack levels required when called: 8
  2268 ;; This function calls:
  2269 ;;		_BorraLCD
  2270 ;;		_DireccionaLCD
  2271 ;;		_MensajeLCD_Var
  2272 ;; This function is called by:
  2273 ;;		_main
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           	psect	text7
  2278   001A48                     __ptext7:
  2279                           	callstack 0
  2280   001A48                     _Emergencia:
  2281                           	callstack 22
  2282                           
  2283                           ;Lab6.c: 601: LATE = 0b001;
  2284                           
  2285                           ;incstack = 0
  2286   001A48  0E01               	movlw	1
  2287   001A4A  6E8D               	movwf	141,c	;volatile
  2288                           
  2289                           ;Lab6.c: 602: LATD = 8;
  2290   001A4C  0E08               	movlw	8
  2291   001A4E  6E8C               	movwf	140,c	;volatile
  2292                           
  2293                           ;Lab6.c: 603: BorraLCD();
  2294   001A50  ECD1  F00D         	call	_BorraLCD	;wreg free
  2295                           
  2296                           ;Lab6.c: 604: MensajeLCD_Var("    EMERGENCY");
  2297   001A54  0E65               	movlw	low STR_9
  2298   001A56  6E26               	movwf	MensajeLCD_Var@a^0,c
  2299   001A58  EC4D  F00D         	call	_MensajeLCD_Var	;wreg free
  2300                           
  2301                           ;Lab6.c: 605: DireccionaLCD(0xC0);
  2302   001A5C  0EC0               	movlw	192
  2303   001A5E  EC9C  F00D         	call	_DireccionaLCD
  2304                           
  2305                           ;Lab6.c: 606: MensajeLCD_Var("      STOP");
  2306   001A62  0E8A               	movlw	low STR_10
  2307   001A64  6E26               	movwf	MensajeLCD_Var@a^0,c
  2308   001A66  EC4D  F00D         	call	_MensajeLCD_Var	;wreg free
  2309                           
  2310                           ;Lab6.c: 607: CCPR1L=1;
  2311   001A6A  0E01               	movlw	1
  2312   001A6C  6EBE               	movwf	190,c	;volatile
  2313   001A6E                     l4096:
  2314                           
  2315                           ;Lab6.c: 610: GIE = 0;
  2316   001A6E  9EF2               	bcf	4082,7,c	;volatile
  2317   001A70  D7FE               	goto	l4096
  2318   001A72                     __end_of_Emergencia:
  2319                           	callstack 0
  2320                           
  2321 ;; *************** function _MensajeLCD_Var *****************
  2322 ;; Defined at:
  2323 ;;		line 236 in file "LibLCDXC8.h"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;  a               1   37[COMRAM] PTR unsigned char 
  2326 ;;		 -> STR_10(11), STR_9(14), STR_6(11), STR_5(12), 
  2327 ;;		 -> STR_4(16), STR_3(11), STR_2(16), STR_1(17), 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2339 ;;      Params:         1       0       0       0       0       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2342 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2343 ;;Total ram usage:        1 bytes
  2344 ;; Hardware stack levels used: 1
  2345 ;; Hardware stack levels required when called: 7
  2346 ;; This function calls:
  2347 ;;		_EscribeLCD_c
  2348 ;; This function is called by:
  2349 ;;		_main
  2350 ;;		_Emergencia
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           	psect	text8
  2355   001A9A                     __ptext8:
  2356                           	callstack 0
  2357   001A9A                     _MensajeLCD_Var:
  2358                           	callstack 23
  2359                           
  2360                           ;LibLCDXC8.h: 240: while (*a) {
  2361                           
  2362                           ;incstack = 0
  2363   001A9A  D009               	goto	l3864
  2364   001A9C                     l3860:
  2365                           
  2366                           ;LibLCDXC8.h: 241: EscribeLCD_c(*a);
  2367   001A9C  C026  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  2368   001AA0                     	if	1	;There is more than 1 active tblptr byte
  2369   001AA0  0E08               	movlw	high __smallconst
  2370   001AA2  6EF7               	movwf	tblptrh,c
  2371   001AA4                     	endif
  2372   001AA4                     	if	0	;tblptru may be non-zero
  2373   001AA4                     	endif
  2374   001AA4                     	if	0	;tblptru may be non-zero
  2375   001AA4                     	endif
  2376   001AA4  0008               	tblrd		*
  2377   001AA6  50F5               	movf	tablat,w,c
  2378   001AA8  EC91  F00D         	call	_EscribeLCD_c
  2379                           
  2380                           ;LibLCDXC8.h: 242: a++;
  2381   001AAC  2A26               	incf	MensajeLCD_Var@a^0,f,c
  2382   001AAE                     l3864:
  2383   001AAE  C026  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  2384   001AB2                     	if	1	;There is more than 1 active tblptr byte
  2385   001AB2  0E08               	movlw	high __smallconst
  2386   001AB4  6EF7               	movwf	tblptrh,c
  2387   001AB6                     	endif
  2388   001AB6                     	if	0	;tblptru may be non-zero
  2389   001AB6                     	endif
  2390   001AB6                     	if	0	;tblptru may be non-zero
  2391   001AB6                     	endif
  2392   001AB6  0008               	tblrd		*
  2393   001AB8  50F5               	movf	tablat,w,c
  2394   001ABA  0900               	iorlw	0
  2395   001ABC  B4D8               	btfsc	status,2,c
  2396   001ABE  0012               	return	
  2397   001AC0  D7ED               	goto	l3860
  2398   001AC2                     __end_of_MensajeLCD_Var:
  2399                           	callstack 0
  2400                           
  2401 ;; *************** function _Bienvenida *****************
  2402 ;; Defined at:
  2403 ;;		line 616 in file "Lab6.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;		None
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  pos             1    1[BANK0 ] unsigned char 
  2408 ;;  max_pos         1    0[BANK0 ] unsigned char 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2418 ;;      Params:         0       0       0       0       0       0       0       0       0
  2419 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2420 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2421 ;;      Totals:         1       2       0       0       0       0       0       0       0
  2422 ;;Total ram usage:        3 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; Hardware stack levels required when called: 8
  2425 ;; This function calls:
  2426 ;;		_ConfiguraLCD
  2427 ;;		_CrearCaracter
  2428 ;;		_DireccionaLCD
  2429 ;;		_EscribeLCD_c
  2430 ;;		_InicializaLCD
  2431 ;;		_MostrarCursorLCD
  2432 ;;		_OcultarCursorLCD
  2433 ;; This function is called by:
  2434 ;;		_main
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438                           	psect	text9
  2439   000E80                     __ptext9:
  2440                           	callstack 0
  2441   000E80                     _Bienvenida:
  2442                           	callstack 22
  2443                           
  2444                           ;Lab6.c: 618: unsigned char max_pos = 15;
  2445                           
  2446                           ;incstack = 0
  2447   000E80  0E0F               	movlw	15
  2448   000E82  0100               	movlb	0	; () banked
  2449   000E84  6F60               	movwf	Bienvenida@max_pos& (0+255),b
  2450                           
  2451                           ; BSR set to: 0
  2452                           ;Lab6.c: 619: ConfiguraLCD(4);
  2453   000E86  0E04               	movlw	4
  2454   000E88  EC85  F00D         	call	_ConfiguraLCD
  2455                           
  2456                           ;Lab6.c: 620: InicializaLCD();
  2457   000E8C  ECE1  F009         	call	_InicializaLCD	;wreg free
  2458                           
  2459                           ;Lab6.c: 621: OcultarCursorLCD();
  2460   000E90  ECBD  F00D         	call	_OcultarCursorLCD	;wreg free
  2461                           
  2462                           ;Lab6.c: 622: CrearCaracter(0, banda1);
  2463   000E94  0E09               	movlw	low _banda1
  2464   000E96  6E25               	movwf	CrearCaracter@data^0,c
  2465   000E98  0E00               	movlw	0
  2466   000E9A  EC17  F00B         	call	_CrearCaracter
  2467                           
  2468                           ;Lab6.c: 623: CrearCaracter(1, banda2);
  2469   000E9E  0E01               	movlw	low _banda2
  2470   000EA0  6E25               	movwf	CrearCaracter@data^0,c
  2471   000EA2  0E01               	movlw	1
  2472   000EA4  EC17  F00B         	call	_CrearCaracter
  2473                           
  2474                           ;Lab6.c: 624: for (pos = 0; pos <= max_pos; pos++) {
  2475   000EA8  0100               	movlb	0	; () banked
  2476   000EAA  6B61               	clrf	Bienvenida@pos& (0+255),b
  2477   000EAC  D011               	goto	l4046
  2478   000EAE                     l4040:
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;Lab6.c: 626: DireccionaLCD(0x80 + pos);
  2482   000EAE  5161               	movf	Bienvenida@pos& (0+255),w,b
  2483   000EB0  0F80               	addlw	128
  2484   000EB2  EC9C  F00D         	call	_DireccionaLCD
  2485                           
  2486                           ;Lab6.c: 627: EscribeLCD_c(1);
  2487   000EB6  0E01               	movlw	1
  2488   000EB8  EC91  F00D         	call	_EscribeLCD_c
  2489                           
  2490                           ;Lab6.c: 628: _delay((unsigned long)((50)*(1000000/4000.0)));
  2491   000EBC  0E11               	movlw	17
  2492   000EBE  6E29               	movwf	??_Bienvenida^0,c
  2493   000EC0  0E3A               	movlw	58
  2494   000EC2                     u3717:
  2495   000EC2  2EE8               	decfsz	wreg,f,c
  2496   000EC4  D7FE               	bra	u3717
  2497   000EC6  2E29               	decfsz	??_Bienvenida^0,f,c
  2498   000EC8  D7FC               	bra	u3717
  2499   000ECA  D000               	nop2	
  2500   000ECC  0100               	movlb	0	; () banked
  2501   000ECE  2B61               	incf	Bienvenida@pos& (0+255),f,b
  2502   000ED0                     l4046:
  2503                           
  2504                           ; BSR set to: 0
  2505   000ED0  5161               	movf	Bienvenida@pos& (0+255),w,b
  2506   000ED2  5D60               	subwf	Bienvenida@max_pos& (0+255),w,b
  2507   000ED4  B0D8               	btfsc	status,0,c
  2508   000ED6  D7EB               	goto	l4040
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;Lab6.c: 629: };Lab6.c: 631: for (pos = 0; pos < max_pos; pos++) {
  2512   000ED8  6B61               	clrf	Bienvenida@pos& (0+255),b
  2513   000EDA  D021               	goto	l4060
  2514   000EDC                     l4048:
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;Lab6.c: 633: DireccionaLCD(0x80 + pos);
  2518   000EDC  5161               	movf	Bienvenida@pos& (0+255),w,b
  2519   000EDE  0F80               	addlw	128
  2520   000EE0  EC9C  F00D         	call	_DireccionaLCD
  2521                           
  2522                           ;Lab6.c: 634: EscribeLCD_c(0);
  2523   000EE4  0E00               	movlw	0
  2524   000EE6  EC91  F00D         	call	_EscribeLCD_c
  2525                           
  2526                           ;Lab6.c: 635: _delay((unsigned long)((50)*(1000000/4000.0)));
  2527   000EEA  0E11               	movlw	17
  2528   000EEC  6E29               	movwf	??_Bienvenida^0,c
  2529   000EEE  0E3A               	movlw	58
  2530   000EF0                     u3727:
  2531   000EF0  2EE8               	decfsz	wreg,f,c
  2532   000EF2  D7FE               	bra	u3727
  2533   000EF4  2E29               	decfsz	??_Bienvenida^0,f,c
  2534   000EF6  D7FC               	bra	u3727
  2535   000EF8  D000               	nop2	
  2536                           
  2537                           ;Lab6.c: 636: DireccionaLCD(0x80 + pos);
  2538   000EFA  0100               	movlb	0	; () banked
  2539   000EFC  5161               	movf	Bienvenida@pos& (0+255),w,b
  2540   000EFE  0F80               	addlw	128
  2541   000F00  EC9C  F00D         	call	_DireccionaLCD
  2542                           
  2543                           ;Lab6.c: 637: EscribeLCD_c(1);
  2544   000F04  0E01               	movlw	1
  2545   000F06  EC91  F00D         	call	_EscribeLCD_c
  2546                           
  2547                           ;Lab6.c: 638: _delay((unsigned long)((50)*(1000000/4000.0)));
  2548   000F0A  0E11               	movlw	17
  2549   000F0C  6E29               	movwf	??_Bienvenida^0,c
  2550   000F0E  0E3A               	movlw	58
  2551   000F10                     u3737:
  2552   000F10  2EE8               	decfsz	wreg,f,c
  2553   000F12  D7FE               	bra	u3737
  2554   000F14  2E29               	decfsz	??_Bienvenida^0,f,c
  2555   000F16  D7FC               	bra	u3737
  2556   000F18  D000               	nop2	
  2557   000F1A  0100               	movlb	0	; () banked
  2558   000F1C  2B61               	incf	Bienvenida@pos& (0+255),f,b
  2559   000F1E                     l4060:
  2560                           
  2561                           ; BSR set to: 0
  2562   000F1E  5160               	movf	Bienvenida@max_pos& (0+255),w,b
  2563   000F20  5D61               	subwf	Bienvenida@pos& (0+255),w,b
  2564   000F22  A0D8               	btfss	status,0,c
  2565   000F24  D7DB               	goto	l4048
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;Lab6.c: 639: };Lab6.c: 641: DireccionaLCD(0x80 + max_pos);
  2569   000F26  5160               	movf	Bienvenida@max_pos& (0+255),w,b
  2570   000F28  0F80               	addlw	128
  2571   000F2A  EC9C  F00D         	call	_DireccionaLCD
  2572                           
  2573                           ;Lab6.c: 642: EscribeLCD_c(0);
  2574   000F2E  0E00               	movlw	0
  2575   000F30  EC91  F00D         	call	_EscribeLCD_c
  2576                           
  2577                           ;Lab6.c: 643: for (pos = max_pos; pos > 0; pos--) {
  2578   000F34  C060  F061         	movff	Bienvenida@max_pos,Bienvenida@pos
  2579   000F38                     l4066:
  2580   000F38  0100               	movlb	0	; () banked
  2581   000F3A  5161               	movf	Bienvenida@pos& (0+255),w,b
  2582   000F3C  B4D8               	btfsc	status,2,c
  2583   000F3E  D022               	goto	l4084
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;Lab6.c: 645: DireccionaLCD(0x80 + pos);
  2587   000F40  5161               	movf	Bienvenida@pos& (0+255),w,b
  2588   000F42  0F80               	addlw	128
  2589   000F44  EC9C  F00D         	call	_DireccionaLCD
  2590                           
  2591                           ;Lab6.c: 646: EscribeLCD_c(0);
  2592   000F48  0E00               	movlw	0
  2593   000F4A  EC91  F00D         	call	_EscribeLCD_c
  2594                           
  2595                           ;Lab6.c: 647: _delay((unsigned long)((50)*(1000000/4000.0)));
  2596   000F4E  0E11               	movlw	17
  2597   000F50  6E29               	movwf	??_Bienvenida^0,c
  2598   000F52  0E3A               	movlw	58
  2599   000F54                     u3747:
  2600   000F54  2EE8               	decfsz	wreg,f,c
  2601   000F56  D7FE               	bra	u3747
  2602   000F58  2E29               	decfsz	??_Bienvenida^0,f,c
  2603   000F5A  D7FC               	bra	u3747
  2604   000F5C  D000               	nop2	
  2605                           
  2606                           ;Lab6.c: 648: DireccionaLCD(0x80 + pos);
  2607   000F5E  0100               	movlb	0	; () banked
  2608   000F60  5161               	movf	Bienvenida@pos& (0+255),w,b
  2609   000F62  0F80               	addlw	128
  2610   000F64  EC9C  F00D         	call	_DireccionaLCD
  2611                           
  2612                           ;Lab6.c: 649: EscribeLCD_c(1);
  2613   000F68  0E01               	movlw	1
  2614   000F6A  EC91  F00D         	call	_EscribeLCD_c
  2615                           
  2616                           ;Lab6.c: 650: _delay((unsigned long)((50)*(1000000/4000.0)));
  2617   000F6E  0E11               	movlw	17
  2618   000F70  6E29               	movwf	??_Bienvenida^0,c
  2619   000F72  0E3A               	movlw	58
  2620   000F74                     u3757:
  2621   000F74  2EE8               	decfsz	wreg,f,c
  2622   000F76  D7FE               	bra	u3757
  2623   000F78  2E29               	decfsz	??_Bienvenida^0,f,c
  2624   000F7A  D7FC               	bra	u3757
  2625   000F7C  D000               	nop2	
  2626   000F7E  0100               	movlb	0	; () banked
  2627   000F80  0761               	decf	Bienvenida@pos& (0+255),f,b
  2628   000F82  D7DA               	goto	l4066
  2629   000F84                     l4084:
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;Lab6.c: 654: MostrarCursorLCD();
  2633   000F84  ECC7  F00D         	call	_MostrarCursorLCD	;wreg free
  2634   000F88  0012               	return		;funcret
  2635   000F8A                     __end_of_Bienvenida:
  2636                           	callstack 0
  2637                           
  2638 ;; *************** function _OcultarCursorLCD *****************
  2639 ;; Defined at:
  2640 ;;		line 314 in file "LibLCDXC8.h"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;		None
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;		None
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2, status,0, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2654 ;;      Params:         0       0       0       0       0       0       0       0       0
  2655 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2656 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2657 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2658 ;;Total ram usage:        0 bytes
  2659 ;; Hardware stack levels used: 1
  2660 ;; Hardware stack levels required when called: 6
  2661 ;; This function calls:
  2662 ;;		_EnviaDato
  2663 ;;		_HabilitaLCD
  2664 ;;		_RetardoLCD
  2665 ;; This function is called by:
  2666 ;;		_main
  2667 ;;		_Bienvenida
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           	psect	text10
  2672   001B7A                     __ptext10:
  2673                           	callstack 0
  2674   001B7A                     _OcultarCursorLCD:
  2675                           	callstack 24
  2676                           
  2677                           ;LibLCDXC8.h: 315: LATA3 = 0;
  2678                           
  2679                           ;incstack = 0
  2680   001B7A  9689               	bcf	3977,3,c	;volatile
  2681                           
  2682                           ;LibLCDXC8.h: 316: EnviaDato(0x0C);
  2683   001B7C  0E0C               	movlw	12
  2684   001B7E  EC69  F00C         	call	_EnviaDato
  2685                           
  2686                           ;LibLCDXC8.h: 317: HabilitaLCD();
  2687   001B82  ECDB  F00D         	call	_HabilitaLCD	;wreg free
  2688                           
  2689                           ;LibLCDXC8.h: 318: RetardoLCD(4);
  2690   001B86  0E04               	movlw	4
  2691   001B88  EC44  F00B         	call	_RetardoLCD
  2692   001B8C  0012               	return		;funcret
  2693   001B8E                     __end_of_OcultarCursorLCD:
  2694                           	callstack 0
  2695                           
  2696 ;; *************** function _MostrarCursorLCD *****************
  2697 ;; Defined at:
  2698 ;;		line 320 in file "LibLCDXC8.h"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;		None
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;		None
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      void 
  2705 ;; Registers used:
  2706 ;;		wreg, status,2, status,0, cstack
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2712 ;;      Params:         0       0       0       0       0       0       0       0       0
  2713 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2714 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2715 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2716 ;;Total ram usage:        0 bytes
  2717 ;; Hardware stack levels used: 1
  2718 ;; Hardware stack levels required when called: 6
  2719 ;; This function calls:
  2720 ;;		_EnviaDato
  2721 ;;		_HabilitaLCD
  2722 ;;		_RetardoLCD
  2723 ;; This function is called by:
  2724 ;;		_main
  2725 ;;		_Bienvenida
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           	psect	text11
  2730   001B8E                     __ptext11:
  2731                           	callstack 0
  2732   001B8E                     _MostrarCursorLCD:
  2733                           	callstack 24
  2734                           
  2735                           ;LibLCDXC8.h: 321: LATA3 = 0;
  2736                           
  2737                           ;incstack = 0
  2738   001B8E  9689               	bcf	3977,3,c	;volatile
  2739                           
  2740                           ;LibLCDXC8.h: 322: EnviaDato(0x0E);
  2741   001B90  0E0E               	movlw	14
  2742   001B92  EC69  F00C         	call	_EnviaDato
  2743                           
  2744                           ;LibLCDXC8.h: 324: HabilitaLCD();
  2745   001B96  ECDB  F00D         	call	_HabilitaLCD	;wreg free
  2746                           
  2747                           ;LibLCDXC8.h: 325: RetardoLCD(4);
  2748   001B9A  0E04               	movlw	4
  2749   001B9C  EC44  F00B         	call	_RetardoLCD
  2750   001BA0  0012               	return		;funcret
  2751   001BA2                     __end_of_MostrarCursorLCD:
  2752                           	callstack 0
  2753                           
  2754 ;; *************** function _InicializaLCD *****************
  2755 ;; Defined at:
  2756 ;;		line 75 in file "LibLCDXC8.h"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;		None
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;		None
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  1    wreg      void 
  2763 ;; Registers used:
  2764 ;;		wreg, status,2, status,0, cstack
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2770 ;;      Params:         0       0       0       0       0       0       0       0       0
  2771 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2772 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2773 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2774 ;;Total ram usage:        0 bytes
  2775 ;; Hardware stack levels used: 1
  2776 ;; Hardware stack levels required when called: 7
  2777 ;; This function calls:
  2778 ;;		_BorraLCD
  2779 ;;		_EnviaDato
  2780 ;;		_HabilitaLCD
  2781 ;;		_RetardoLCD
  2782 ;; This function is called by:
  2783 ;;		_main
  2784 ;;		_Bienvenida
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788                           	psect	text12
  2789   0013C2                     __ptext12:
  2790                           	callstack 0
  2791   0013C2                     _InicializaLCD:
  2792                           	callstack 23
  2793                           
  2794                           ;LibLCDXC8.h: 77: LATA3=0;
  2795                           
  2796                           ;incstack = 0
  2797   0013C2  9689               	bcf	3977,3,c	;volatile
  2798                           
  2799                           ;LibLCDXC8.h: 78: if(interfaz==4)
  2800   0013C4  0E04               	movlw	4
  2801   0013C6  183E               	xorwf	_interfaz^0,w,c
  2802   0013C8  A4D8               	btfss	status,2,c
  2803   0013CA  D004               	goto	l3810
  2804                           
  2805                           ;LibLCDXC8.h: 79: LATD=(LATD & 0b00001111) | 0x30;
  2806   0013CC  508C               	movf	140,w,c	;volatile
  2807   0013CE  0B0F               	andlw	15
  2808   0013D0  0930               	iorlw	48
  2809   0013D2  D001               	goto	L1
  2810   0013D4                     l3810:
  2811                           
  2812                           ;LibLCDXC8.h: 80: else;LibLCDXC8.h: 81: LATD=0x3F;
  2813   0013D4  0E3F               	movlw	63
  2814   0013D6                     L1:
  2815   0013D6  6E8C               	movwf	140,c	;volatile
  2816                           
  2817                           ;LibLCDXC8.h: 82: HabilitaLCD();
  2818   0013D8  ECDB  F00D         	call	_HabilitaLCD	;wreg free
  2819                           
  2820                           ;LibLCDXC8.h: 83: RetardoLCD(1);
  2821   0013DC  0E01               	movlw	1
  2822   0013DE  EC44  F00B         	call	_RetardoLCD
  2823                           
  2824                           ;LibLCDXC8.h: 84: if(interfaz==4)
  2825   0013E2  0E04               	movlw	4
  2826   0013E4  183E               	xorwf	_interfaz^0,w,c
  2827   0013E6  A4D8               	btfss	status,2,c
  2828   0013E8  D004               	goto	l3820
  2829                           
  2830                           ;LibLCDXC8.h: 85: LATD=(LATD & 0b00001111) | 0x30;
  2831   0013EA  508C               	movf	140,w,c	;volatile
  2832   0013EC  0B0F               	andlw	15
  2833   0013EE  0930               	iorlw	48
  2834   0013F0  D001               	goto	L2
  2835   0013F2                     l3820:
  2836                           
  2837                           ;LibLCDXC8.h: 86: else;LibLCDXC8.h: 87: LATD=0x3F;
  2838   0013F2  0E3F               	movlw	63
  2839   0013F4                     L2:
  2840   0013F4  6E8C               	movwf	140,c	;volatile
  2841                           
  2842                           ;LibLCDXC8.h: 88: HabilitaLCD();
  2843   0013F6  ECDB  F00D         	call	_HabilitaLCD	;wreg free
  2844                           
  2845                           ;LibLCDXC8.h: 89: RetardoLCD(3);
  2846   0013FA  0E03               	movlw	3
  2847   0013FC  EC44  F00B         	call	_RetardoLCD
  2848                           
  2849                           ;LibLCDXC8.h: 90: if(interfaz==4)
  2850   001400  0E04               	movlw	4
  2851   001402  183E               	xorwf	_interfaz^0,w,c
  2852   001404  A4D8               	btfss	status,2,c
  2853   001406  D004               	goto	l3830
  2854                           
  2855                           ;LibLCDXC8.h: 91: LATD=(LATD & 0b00001111) | 0x30;
  2856   001408  508C               	movf	140,w,c	;volatile
  2857   00140A  0B0F               	andlw	15
  2858   00140C  0930               	iorlw	48
  2859   00140E  D001               	goto	L3
  2860   001410                     l3830:
  2861                           
  2862                           ;LibLCDXC8.h: 92: else;LibLCDXC8.h: 93: LATD=0x3F;
  2863   001410  0E3F               	movlw	63
  2864   001412                     L3:
  2865   001412  6E8C               	movwf	140,c	;volatile
  2866                           
  2867                           ;LibLCDXC8.h: 94: HabilitaLCD();
  2868   001414  ECDB  F00D         	call	_HabilitaLCD	;wreg free
  2869                           
  2870                           ;LibLCDXC8.h: 95: RetardoLCD(4);
  2871   001418  0E04               	movlw	4
  2872   00141A  EC44  F00B         	call	_RetardoLCD
  2873                           
  2874                           ;LibLCDXC8.h: 96: if(interfaz==4){
  2875   00141E  0E04               	movlw	4
  2876   001420  183E               	xorwf	_interfaz^0,w,c
  2877   001422  A4D8               	btfss	status,2,c
  2878   001424  D011               	goto	l3850
  2879                           
  2880                           ;LibLCDXC8.h: 97: LATD=(LATD & 0b00001111) | 0x20;
  2881   001426  508C               	movf	140,w,c	;volatile
  2882   001428  0B0F               	andlw	15
  2883   00142A  0920               	iorlw	32
  2884   00142C  6E8C               	movwf	140,c	;volatile
  2885                           
  2886                           ;LibLCDXC8.h: 98: HabilitaLCD();
  2887   00142E  ECDB  F00D         	call	_HabilitaLCD	;wreg free
  2888                           
  2889                           ;LibLCDXC8.h: 99: RetardoLCD(4);
  2890   001432  0E04               	movlw	4
  2891   001434  EC44  F00B         	call	_RetardoLCD
  2892                           
  2893                           ;LibLCDXC8.h: 100: EnviaDato(0x2F);
  2894   001438  0E2F               	movlw	47
  2895   00143A  EC69  F00C         	call	_EnviaDato
  2896                           
  2897                           ;LibLCDXC8.h: 101: HabilitaLCD();
  2898   00143E  ECDB  F00D         	call	_HabilitaLCD	;wreg free
  2899                           
  2900                           ;LibLCDXC8.h: 102: RetardoLCD(4);
  2901   001442  0E04               	movlw	4
  2902   001444  EC44  F00B         	call	_RetardoLCD
  2903   001448                     l3850:
  2904                           
  2905                           ;LibLCDXC8.h: 103: };LibLCDXC8.h: 104: BorraLCD();
  2906   001448  ECD1  F00D         	call	_BorraLCD	;wreg free
  2907                           
  2908                           ;LibLCDXC8.h: 105: EnviaDato(0xF);
  2909   00144C  0E0F               	movlw	15
  2910   00144E  EC69  F00C         	call	_EnviaDato
  2911                           
  2912                           ;LibLCDXC8.h: 106: HabilitaLCD();
  2913   001452  ECDB  F00D         	call	_HabilitaLCD	;wreg free
  2914                           
  2915                           ;LibLCDXC8.h: 107: RetardoLCD(4);
  2916   001456  0E04               	movlw	4
  2917   001458  EC44  F00B         	call	_RetardoLCD
  2918   00145C  0012               	return		;funcret
  2919   00145E                     __end_of_InicializaLCD:
  2920                           	callstack 0
  2921                           
  2922 ;; *************** function _BorraLCD *****************
  2923 ;; Defined at:
  2924 ;;		line 116 in file "LibLCDXC8.h"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;		None
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;		None
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      void 
  2931 ;; Registers used:
  2932 ;;		wreg, status,2, status,0, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2938 ;;      Params:         0       0       0       0       0       0       0       0       0
  2939 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2940 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2941 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2942 ;;Total ram usage:        0 bytes
  2943 ;; Hardware stack levels used: 1
  2944 ;; Hardware stack levels required when called: 6
  2945 ;; This function calls:
  2946 ;;		_EnviaDato
  2947 ;;		_HabilitaLCD
  2948 ;;		_RetardoLCD
  2949 ;; This function is called by:
  2950 ;;		_InicializaLCD
  2951 ;;		_main
  2952 ;;		_Emergencia
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           	psect	text13
  2957   001BA2                     __ptext13:
  2958                           	callstack 0
  2959   001BA2                     _BorraLCD:
  2960                           	callstack 23
  2961                           
  2962                           ;LibLCDXC8.h: 118: LATA3=0;
  2963                           
  2964                           ;incstack = 0
  2965   001BA2  9689               	bcf	3977,3,c	;volatile
  2966                           
  2967                           ;LibLCDXC8.h: 119: EnviaDato(0x01);
  2968   001BA4  0E01               	movlw	1
  2969   001BA6  EC69  F00C         	call	_EnviaDato
  2970                           
  2971                           ;LibLCDXC8.h: 120: HabilitaLCD();
  2972   001BAA  ECDB  F00D         	call	_HabilitaLCD	;wreg free
  2973                           
  2974                           ;LibLCDXC8.h: 121: RetardoLCD(2);
  2975   001BAE  0E02               	movlw	2
  2976   001BB0  EC44  F00B         	call	_RetardoLCD
  2977   001BB4  0012               	return		;funcret
  2978   001BB6                     __end_of_BorraLCD:
  2979                           	callstack 0
  2980                           
  2981 ;; *************** function _EscribeLCD_c *****************
  2982 ;; Defined at:
  2983 ;;		line 140 in file "LibLCDXC8.h"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  a               1    wreg     unsigned char 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  a               1   36[COMRAM] unsigned char 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  1    wreg      void 
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, status,0, cstack
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2997 ;;      Params:         0       0       0       0       0       0       0       0       0
  2998 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3000 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3001 ;;Total ram usage:        1 bytes
  3002 ;; Hardware stack levels used: 1
  3003 ;; Hardware stack levels required when called: 6
  3004 ;; This function calls:
  3005 ;;		_EnviaDato
  3006 ;;		_HabilitaLCD
  3007 ;;		_RetardoLCD
  3008 ;; This function is called by:
  3009 ;;		_MensajeLCD_Var
  3010 ;;		_Bienvenida
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           	psect	text14
  3015   001B22                     __ptext14:
  3016                           	callstack 0
  3017   001B22                     _EscribeLCD_c:
  3018                           	callstack 23
  3019                           
  3020                           ;incstack = 0
  3021                           ;EscribeLCD_c@a stored from wreg
  3022   001B22  6E25               	movwf	EscribeLCD_c@a^0,c
  3023                           
  3024                           ;LibLCDXC8.h: 144: LATA3=1;
  3025   001B24  8689               	bsf	3977,3,c	;volatile
  3026                           
  3027                           ;LibLCDXC8.h: 145: EnviaDato(a);
  3028   001B26  5025               	movf	EscribeLCD_c@a^0,w,c
  3029   001B28  EC69  F00C         	call	_EnviaDato
  3030                           
  3031                           ;LibLCDXC8.h: 146: HabilitaLCD();
  3032   001B2C  ECDB  F00D         	call	_HabilitaLCD	;wreg free
  3033                           
  3034                           ;LibLCDXC8.h: 147: RetardoLCD(4);
  3035   001B30  0E04               	movlw	4
  3036   001B32  EC44  F00B         	call	_RetardoLCD
  3037   001B36  0012               	return		;funcret
  3038   001B38                     __end_of_EscribeLCD_c:
  3039                           	callstack 0
  3040                           
  3041 ;; *************** function _DireccionaLCD *****************
  3042 ;; Defined at:
  3043 ;;		line 247 in file "LibLCDXC8.h"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;  a               1    wreg     unsigned char 
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;  a               1   36[COMRAM] unsigned char 
  3048 ;; Return value:  Size  Location     Type
  3049 ;;                  1    wreg      void 
  3050 ;; Registers used:
  3051 ;;		wreg, status,2, status,0, cstack
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3057 ;;      Params:         0       0       0       0       0       0       0       0       0
  3058 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3059 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3060 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3061 ;;Total ram usage:        1 bytes
  3062 ;; Hardware stack levels used: 1
  3063 ;; Hardware stack levels required when called: 6
  3064 ;; This function calls:
  3065 ;;		_EnviaDato
  3066 ;;		_HabilitaLCD
  3067 ;;		_RetardoLCD
  3068 ;; This function is called by:
  3069 ;;		_main
  3070 ;;		_Emergencia
  3071 ;;		_Bienvenida
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           	psect	text15
  3076   001B38                     __ptext15:
  3077                           	callstack 0
  3078   001B38                     _DireccionaLCD:
  3079                           	callstack 23
  3080                           
  3081                           ;incstack = 0
  3082                           ;DireccionaLCD@a stored from wreg
  3083   001B38  6E25               	movwf	DireccionaLCD@a^0,c
  3084                           
  3085                           ;LibLCDXC8.h: 250: LATA3=0;
  3086   001B3A  9689               	bcf	3977,3,c	;volatile
  3087                           
  3088                           ;LibLCDXC8.h: 251: EnviaDato(a);
  3089   001B3C  5025               	movf	DireccionaLCD@a^0,w,c
  3090   001B3E  EC69  F00C         	call	_EnviaDato
  3091                           
  3092                           ;LibLCDXC8.h: 252: HabilitaLCD();
  3093   001B42  ECDB  F00D         	call	_HabilitaLCD	;wreg free
  3094                           
  3095                           ;LibLCDXC8.h: 253: RetardoLCD(4);
  3096   001B46  0E04               	movlw	4
  3097   001B48  EC44  F00B         	call	_RetardoLCD
  3098   001B4C  0012               	return		;funcret
  3099   001B4E                     __end_of_DireccionaLCD:
  3100                           	callstack 0
  3101                           
  3102 ;; *************** function _CrearCaracter *****************
  3103 ;; Defined at:
  3104 ;;		line 328 in file "LibLCDXC8.h"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;  pos             1    wreg     unsigned char 
  3107 ;;  data            1   36[COMRAM] PTR const unsigned char 
  3108 ;;		 -> banda2(8), banda1(8), 
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;  pos             1   38[COMRAM] unsigned char 
  3111 ;;  i               1   39[COMRAM] unsigned char 
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3121 ;;      Params:         1       0       0       0       0       0       0       0       0
  3122 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3123 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3124 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3125 ;;Total ram usage:        4 bytes
  3126 ;; Hardware stack levels used: 1
  3127 ;; Hardware stack levels required when called: 6
  3128 ;; This function calls:
  3129 ;;		_EnviaDato
  3130 ;;		_HabilitaLCD
  3131 ;;		_RetardoLCD
  3132 ;; This function is called by:
  3133 ;;		_Bienvenida
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           	psect	text16
  3138   00162E                     __ptext16:
  3139                           	callstack 0
  3140   00162E                     _CrearCaracter:
  3141                           	callstack 23
  3142                           
  3143                           ;incstack = 0
  3144                           ;CrearCaracter@pos stored from wreg
  3145   00162E  6E27               	movwf	CrearCaracter@pos^0,c
  3146                           
  3147                           ;LibLCDXC8.h: 329: unsigned char i;;LibLCDXC8.h: 331: LATA3 = 0;
  3148   001630  9689               	bcf	3977,3,c	;volatile
  3149                           
  3150                           ;LibLCDXC8.h: 332: EnviaDato(0x40 + (pos * 8));
  3151   001632  5027               	movf	CrearCaracter@pos^0,w,c
  3152   001634  0D08               	mullw	8
  3153   001636  50F3               	movf	243,w,c
  3154   001638  0F40               	addlw	64
  3155   00163A  EC69  F00C         	call	_EnviaDato
  3156                           
  3157                           ;LibLCDXC8.h: 333: HabilitaLCD();
  3158   00163E  ECDB  F00D         	call	_HabilitaLCD	;wreg free
  3159                           
  3160                           ;LibLCDXC8.h: 334: RetardoLCD(4);
  3161   001642  0E04               	movlw	4
  3162   001644  EC44  F00B         	call	_RetardoLCD
  3163                           
  3164                           ;LibLCDXC8.h: 337: LATA3 = 1;
  3165   001648  8689               	bsf	3977,3,c	;volatile
  3166                           
  3167                           ;LibLCDXC8.h: 338: for(i = 0; i < 8; i++) {
  3168   00164A  6A28               	clrf	CrearCaracter@i^0,c
  3169   00164C                     l3906:
  3170                           
  3171                           ;LibLCDXC8.h: 339: EnviaDato(data[i]);
  3172   00164C  5025               	movf	CrearCaracter@data^0,w,c
  3173   00164E  2428               	addwf	CrearCaracter@i^0,w,c
  3174   001650  6E26               	movwf	??_CrearCaracter^0,c
  3175   001652  C026  FFF6         	movff	??_CrearCaracter,tblptrl
  3176   001656                     	if	1	;There is more than 1 active tblptr byte
  3177   001656  0E08               	movlw	high __smallconst
  3178   001658  6EF7               	movwf	tblptrh,c
  3179   00165A                     	endif
  3180   00165A                     	if	0	;tblptru may be non-zero
  3181   00165A                     	endif
  3182   00165A                     	if	0	;tblptru may be non-zero
  3183   00165A                     	endif
  3184   00165A  0008               	tblrd		*
  3185   00165C  50F5               	movf	tablat,w,c
  3186   00165E  EC69  F00C         	call	_EnviaDato
  3187                           
  3188                           ;LibLCDXC8.h: 340: HabilitaLCD();
  3189   001662  ECDB  F00D         	call	_HabilitaLCD	;wreg free
  3190                           
  3191                           ;LibLCDXC8.h: 341: RetardoLCD(4);
  3192   001666  0E04               	movlw	4
  3193   001668  EC44  F00B         	call	_RetardoLCD
  3194   00166C  2A28               	incf	CrearCaracter@i^0,f,c
  3195   00166E  0E07               	movlw	7
  3196   001670  6428               	cpfsgt	CrearCaracter@i^0,c
  3197   001672  D7EC               	goto	l3906
  3198                           
  3199                           ;LibLCDXC8.h: 342: };LibLCDXC8.h: 345: LATA3 = 0;
  3200   001674  9689               	bcf	3977,3,c	;volatile
  3201                           
  3202                           ;LibLCDXC8.h: 346: EnviaDato(0x80);
  3203   001676  0E80               	movlw	128
  3204   001678  EC69  F00C         	call	_EnviaDato
  3205                           
  3206                           ;LibLCDXC8.h: 347: HabilitaLCD();
  3207   00167C  ECDB  F00D         	call	_HabilitaLCD	;wreg free
  3208                           
  3209                           ;LibLCDXC8.h: 348: RetardoLCD(4);
  3210   001680  0E04               	movlw	4
  3211   001682  EC44  F00B         	call	_RetardoLCD
  3212   001686  0012               	return		;funcret
  3213   001688                     __end_of_CrearCaracter:
  3214                           	callstack 0
  3215                           
  3216 ;; *************** function _EnviaDato *****************
  3217 ;; Defined at:
  3218 ;;		line 63 in file "LibLCDXC8.h"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;  a               1    wreg     unsigned char 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  a               1   35[COMRAM] unsigned char 
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  1    wreg      void 
  3225 ;; Registers used:
  3226 ;;		wreg, status,2, status,0, cstack
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3232 ;;      Params:         0       0       0       0       0       0       0       0       0
  3233 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3234 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3235 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3236 ;;Total ram usage:        2 bytes
  3237 ;; Hardware stack levels used: 1
  3238 ;; Hardware stack levels required when called: 5
  3239 ;; This function calls:
  3240 ;;		_HabilitaLCD
  3241 ;;		_RetardoLCD
  3242 ;; This function is called by:
  3243 ;;		_InicializaLCD
  3244 ;;		_BorraLCD
  3245 ;;		_EscribeLCD_c
  3246 ;;		_EscribeLCD_n8
  3247 ;;		_DireccionaLCD
  3248 ;;		_OcultarCursorLCD
  3249 ;;		_MostrarCursorLCD
  3250 ;;		_CrearCaracter
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text17
  3255   0018D2                     __ptext17:
  3256                           	callstack 0
  3257   0018D2                     _EnviaDato:
  3258                           	callstack 24
  3259                           
  3260                           ;incstack = 0
  3261                           ;EnviaDato@a stored from wreg
  3262   0018D2  6E24               	movwf	EnviaDato@a^0,c
  3263                           
  3264                           ;LibLCDXC8.h: 64: if(interfaz==4){
  3265   0018D4  0E04               	movlw	4
  3266   0018D6  183E               	xorwf	_interfaz^0,w,c
  3267   0018D8  A4D8               	btfss	status,2,c
  3268   0018DA  D01A               	goto	l3780
  3269                           
  3270                           ;LibLCDXC8.h: 65: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3271   0018DC  C024  F023         	movff	EnviaDato@a,??_EnviaDato
  3272   0018E0  0EF0               	movlw	240
  3273   0018E2  1623               	andwf	??_EnviaDato^0,f,c
  3274   0018E4  508C               	movf	140,w,c	;volatile
  3275   0018E6  0B0F               	andlw	15
  3276   0018E8  1023               	iorwf	??_EnviaDato^0,w,c
  3277   0018EA  6E8C               	movwf	140,c	;volatile
  3278                           
  3279                           ;LibLCDXC8.h: 66: HabilitaLCD();
  3280   0018EC  ECDB  F00D         	call	_HabilitaLCD	;wreg free
  3281                           
  3282                           ;LibLCDXC8.h: 67: RetardoLCD(1);
  3283   0018F0  0E01               	movlw	1
  3284   0018F2  EC44  F00B         	call	_RetardoLCD
  3285                           
  3286                           ;LibLCDXC8.h: 68: LATD=(LATD & 0b00001111) | (a<<4);
  3287   0018F6  C024  F023         	movff	EnviaDato@a,??_EnviaDato
  3288   0018FA  3A23               	swapf	??_EnviaDato^0,f,c
  3289   0018FC  0EF0               	movlw	240
  3290   0018FE  1623               	andwf	??_EnviaDato^0,f,c
  3291   001900  508C               	movf	140,w,c	;volatile
  3292   001902  0B0F               	andlw	15
  3293   001904  1023               	iorwf	??_EnviaDato^0,w,c
  3294   001906  6E8C               	movwf	140,c	;volatile
  3295                           
  3296                           ;LibLCDXC8.h: 70: RetardoLCD(1);
  3297   001908  0E01               	movlw	1
  3298   00190A  EC44  F00B         	call	_RetardoLCD
  3299                           
  3300                           ;LibLCDXC8.h: 71: }else if(interfaz==8){
  3301   00190E  0012               	return	
  3302   001910                     l3780:
  3303   001910  0E08               	movlw	8
  3304   001912  183E               	xorwf	_interfaz^0,w,c
  3305   001914  A4D8               	btfss	status,2,c
  3306   001916  0012               	return	
  3307                           
  3308                           ;LibLCDXC8.h: 72: LATD=a;
  3309   001918  C024  FF8C         	movff	EnviaDato@a,3980	;volatile
  3310   00191C  0012               	return		;funcret
  3311   00191E                     __end_of_EnviaDato:
  3312                           	callstack 0
  3313                           
  3314 ;; *************** function _RetardoLCD *****************
  3315 ;; Defined at:
  3316 ;;		line 287 in file "LibLCDXC8.h"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;  a               1    wreg     unsigned char 
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;  a               1   33[COMRAM] unsigned char 
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  1    wreg      void 
  3323 ;; Registers used:
  3324 ;;		wreg, status,2, status,0
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3330 ;;      Params:         0       0       0       0       0       0       0       0       0
  3331 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3332 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3333 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3334 ;;Total ram usage:        2 bytes
  3335 ;; Hardware stack levels used: 1
  3336 ;; Hardware stack levels required when called: 4
  3337 ;; This function calls:
  3338 ;;		Nothing
  3339 ;; This function is called by:
  3340 ;;		_EnviaDato
  3341 ;;		_InicializaLCD
  3342 ;;		_BorraLCD
  3343 ;;		_EscribeLCD_c
  3344 ;;		_EscribeLCD_n8
  3345 ;;		_DireccionaLCD
  3346 ;;		_OcultarCursorLCD
  3347 ;;		_MostrarCursorLCD
  3348 ;;		_CrearCaracter
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           	psect	text18
  3353   001688                     __ptext18:
  3354                           	callstack 0
  3355   001688                     _RetardoLCD:
  3356                           	callstack 25
  3357                           
  3358                           ;incstack = 0
  3359                           ;RetardoLCD@a stored from wreg
  3360   001688  6E22               	movwf	RetardoLCD@a^0,c
  3361                           
  3362                           ;LibLCDXC8.h: 288: switch(a){
  3363   00168A  D01B               	goto	l3766
  3364   00168C                     l3756:
  3365   00168C  0E05               	movlw	5
  3366   00168E  6E21               	movwf	??_RetardoLCD^0,c
  3367   001690  0EDE               	movlw	222
  3368   001692                     u3767:
  3369   001692  2EE8               	decfsz	wreg,f,c
  3370   001694  D7FE               	bra	u3767
  3371   001696  2E21               	decfsz	??_RetardoLCD^0,f,c
  3372   001698  D7FC               	bra	u3767
  3373                           
  3374                           ;LibLCDXC8.h: 291: break;
  3375   00169A  0012               	return	
  3376   00169C                     l3758:
  3377   00169C  0E53               	movlw	83
  3378   00169E                     u3777:
  3379   00169E  2EE8               	decfsz	wreg,f,c
  3380   0016A0  D7FE               	bra	u3777
  3381   0016A2  0000               	nop	
  3382                           
  3383                           ;LibLCDXC8.h: 293: _delay((unsigned long)((640)*(1000000/4000000.0)));
  3384   0016A4  0E35               	movlw	53
  3385   0016A6                     u3787:
  3386   0016A6  2EE8               	decfsz	wreg,f,c
  3387   0016A8  D7FE               	bra	u3787
  3388   0016AA  0000               	nop	
  3389                           
  3390                           ;LibLCDXC8.h: 295: break;
  3391   0016AC  0012               	return	
  3392   0016AE                     l3760:
  3393   0016AE  0E08               	movlw	8
  3394   0016B0                     u3797:
  3395   0016B0  2EE8               	decfsz	wreg,f,c
  3396   0016B2  D7FE               	bra	u3797
  3397   0016B4  0000               	nop	
  3398                           
  3399                           ;LibLCDXC8.h: 298: break;
  3400   0016B6  0012               	return	
  3401   0016B8                     l3762:
  3402   0016B8  0E03               	movlw	3
  3403   0016BA                     u3807:
  3404   0016BA  2EE8               	decfsz	wreg,f,c
  3405   0016BC  D7FE               	bra	u3807
  3406   0016BE  0000               	nop	
  3407                           
  3408                           ;LibLCDXC8.h: 301: break;
  3409   0016C0  0012               	return	
  3410   0016C2                     l3766:
  3411   0016C2  5022               	movf	RetardoLCD@a^0,w,c
  3412                           
  3413                           ; Switch size 1, requested type "simple"
  3414                           ; Number of cases is 4, Range of values is 1 to 4
  3415                           ; switch strategies available:
  3416                           ; Name         Instructions Cycles
  3417                           ; simple_byte           13     7 (average)
  3418                           ;	Chosen strategy is simple_byte
  3419   0016C4  0A01               	xorlw	1	; case 1
  3420   0016C6  B4D8               	btfsc	status,2,c
  3421   0016C8  D7E1               	goto	l3756
  3422   0016CA  0A03               	xorlw	3	; case 2
  3423   0016CC  B4D8               	btfsc	status,2,c
  3424   0016CE  D7E6               	goto	l3758
  3425   0016D0  0A01               	xorlw	1	; case 3
  3426   0016D2  B4D8               	btfsc	status,2,c
  3427   0016D4  D7EC               	goto	l3760
  3428   0016D6  0A07               	xorlw	7	; case 4
  3429   0016D8  A4D8               	btfss	status,2,c
  3430   0016DA  0012               	return	
  3431   0016DC  D7ED               	goto	l3762
  3432   0016DE                     __end_of_RetardoLCD:
  3433                           	callstack 0
  3434                           
  3435 ;; *************** function _HabilitaLCD *****************
  3436 ;; Defined at:
  3437 ;;		line 109 in file "LibLCDXC8.h"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;		None
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;		None
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1    wreg      void 
  3444 ;; Registers used:
  3445 ;;		wreg
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3451 ;;      Params:         0       0       0       0       0       0       0       0       0
  3452 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3453 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3454 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3455 ;;Total ram usage:        0 bytes
  3456 ;; Hardware stack levels used: 1
  3457 ;; Hardware stack levels required when called: 4
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_EnviaDato
  3462 ;;		_InicializaLCD
  3463 ;;		_BorraLCD
  3464 ;;		_EscribeLCD_c
  3465 ;;		_EscribeLCD_n8
  3466 ;;		_DireccionaLCD
  3467 ;;		_OcultarCursorLCD
  3468 ;;		_MostrarCursorLCD
  3469 ;;		_CrearCaracter
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           	psect	text19
  3474   001BB6                     __ptext19:
  3475                           	callstack 0
  3476   001BB6                     _HabilitaLCD:
  3477                           	callstack 25
  3478                           
  3479                           ;LibLCDXC8.h: 111: LATA5=1;
  3480                           
  3481                           ;incstack = 0
  3482   001BB6  8A89               	bsf	3977,5,c	;volatile
  3483                           
  3484                           ;LibLCDXC8.h: 112: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3485   001BB8  0E03               	movlw	3
  3486   001BBA                     u3817:
  3487   001BBA  2EE8               	decfsz	wreg,f,c
  3488   001BBC  D7FE               	bra	u3817
  3489   001BBE  0000               	nop	
  3490                           
  3491                           ;LibLCDXC8.h: 114: LATA5=0;
  3492   001BC0  9A89               	bcf	3977,5,c	;volatile
  3493   001BC2  0012               	return		;funcret
  3494   001BC4                     __end_of_HabilitaLCD:
  3495                           	callstack 0
  3496                           
  3497 ;; *************** function _ConfiguraLCD *****************
  3498 ;; Defined at:
  3499 ;;		line 59 in file "LibLCDXC8.h"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;  a               1    wreg     unsigned char 
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;  a               1   32[COMRAM] unsigned char 
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  1    wreg      void 
  3506 ;; Registers used:
  3507 ;;		wreg, status,2, status,0
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3513 ;;      Params:         0       0       0       0       0       0       0       0       0
  3514 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3515 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3516 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3517 ;;Total ram usage:        1 bytes
  3518 ;; Hardware stack levels used: 1
  3519 ;; Hardware stack levels required when called: 4
  3520 ;; This function calls:
  3521 ;;		Nothing
  3522 ;; This function is called by:
  3523 ;;		_main
  3524 ;;		_Bienvenida
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           	psect	text20
  3529   001B0A                     __ptext20:
  3530                           	callstack 0
  3531   001B0A                     _ConfiguraLCD:
  3532                           	callstack 26
  3533                           
  3534                           ;incstack = 0
  3535                           ;ConfiguraLCD@a stored from wreg
  3536   001B0A  6E21               	movwf	ConfiguraLCD@a^0,c
  3537                           
  3538                           ;LibLCDXC8.h: 60: if(a==4 | a ==8)
  3539   001B0C  0E04               	movlw	4
  3540   001B0E  1821               	xorwf	ConfiguraLCD@a^0,w,c
  3541   001B10  B4D8               	btfsc	status,2,c
  3542   001B12  D004               	goto	u3180
  3543   001B14  0E08               	movlw	8
  3544   001B16  1821               	xorwf	ConfiguraLCD@a^0,w,c
  3545   001B18  A4D8               	btfss	status,2,c
  3546   001B1A  0012               	return	
  3547   001B1C                     u3180:
  3548                           
  3549                           ;LibLCDXC8.h: 61: interfaz=a;
  3550   001B1C  C021  F03E         	movff	ConfiguraLCD@a,_interfaz
  3551   001B20  0012               	return		;funcret
  3552   001B22                     __end_of_ConfiguraLCD:
  3553                           	callstack 0
  3554                           
  3555 ;; *************** function _ISR *****************
  3556 ;; Defined at:
  3557 ;;		line 323 in file "Lab6.c"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;		None
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;  d               3   25[COMRAM] float 
  3562 ;;  valPWM          2   29[COMRAM] int 
  3563 ;;  dis             1   31[COMRAM] unsigned char 
  3564 ;;  valADC          1   28[COMRAM] unsigned char 
  3565 ;;  numAscii        0   25[COMRAM] unsigned char [0]
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      void 
  3568 ;; Registers used:
  3569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3575 ;;      Params:         0       0       0       0       0       0       0       0       0
  3576 ;;      Locals:         7       0       0       0       0       0       0       0       0
  3577 ;;      Temps:         10       0       0       0       0       0       0       0       0
  3578 ;;      Totals:        17       0       0       0       0       0       0       0       0
  3579 ;;Total ram usage:       17 bytes
  3580 ;; Hardware stack levels used: 1
  3581 ;; Hardware stack levels required when called: 3
  3582 ;; This function calls:
  3583 ;;		_ConversionADC
  3584 ;;		_Transmitir
  3585 ;;		_TransmitirVar
  3586 ;;		___awdiv
  3587 ;;		___awtoft
  3588 ;;		___fttol
  3589 ;;		_numASCII
  3590 ;;		i2_DireccionaLCD
  3591 ;;		i2_EscribeLCD_c
  3592 ;;		i2_EscribeLCD_n8
  3593 ;;		i2_MedirDistancia
  3594 ;;		i2_MostrarNumeros
  3595 ;;		i2___lbdiv
  3596 ;; This function is called by:
  3597 ;;		Interrupt level 2
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           	psect	intcode
  3602   000008                     __pintcode:
  3603                           	callstack 0
  3604   000008                     _ISR:
  3605                           	callstack 22
  3606                           
  3607                           ;incstack = 0
  3608   000008  823F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3609   00000A  ED51  F004         	call	int_func,f	;refresh shadow registers
  3610                           
  3611                           	psect	intcode_body
  3612   0008A2                     __pintcode_body:
  3613                           	callstack 22
  3614   0008A2                     int_func:
  3615                           	callstack 22
  3616   0008A2  0006               	pop		; remove dummy address from shadow register refresh
  3617   0008A4  CFD9 F012          	movff	fsr2l,??_ISR+2
  3618   0008A8  CFDA F013          	movff	fsr2h,??_ISR+3
  3619   0008AC  CFF3 F014          	movff	prodl,??_ISR+4
  3620   0008B0  CFF4 F015          	movff	prodh,??_ISR+5
  3621   0008B4  CFF6 F016          	movff	tblptrl,??_ISR+6
  3622   0008B8  CFF7 F017          	movff	tblptrh,??_ISR+7
  3623   0008BC  CFF8 F018          	movff	tblptru,??_ISR+8
  3624   0008C0  CFF5 F019          	movff	tablat,??_ISR+9
  3625                           
  3626                           ;Lab6.c: 326: if(TMR0IF == 1){
  3627   0008C4  A4F2               	btfss	4082,2,c	;volatile
  3628   0008C6  D096               	goto	i2l339
  3629                           
  3630                           ;Lab6.c: 328: TMR0 = 49911;
  3631   0008C8  0EC2               	movlw	194
  3632   0008CA  6ED7               	movwf	215,c	;volatile
  3633   0008CC  0EF7               	movlw	247
  3634   0008CE  6ED6               	movwf	214,c	;volatile
  3635                           
  3636                           ;Lab6.c: 329: TMR0IF = 0;
  3637   0008D0  94F2               	bcf	4082,2,c	;volatile
  3638                           
  3639                           ;Lab6.c: 330: LATA1 = LATA1^1;
  3640   0008D2  B289               	btfsc	3977,1,c	;volatile
  3641   0008D4  D002               	goto	i2u268_40
  3642   0008D6  8289               	bsf	3977,1,c	;volatile
  3643   0008D8  D001               	goto	i2u269_45
  3644   0008DA                     i2u268_40:
  3645   0008DA  9289               	bcf	3977,1,c	;volatile
  3646   0008DC                     i2u269_45:
  3647                           
  3648                           ;Lab6.c: 336: if(LATA1 == 1){
  3649   0008DC  A289               	btfss	3977,1,c	;volatile
  3650   0008DE  D06F               	goto	i2l3576
  3651                           
  3652                           ;Lab6.c: 337: flagMotor= 0;
  3653   0008E0  6A2A               	clrf	_flagMotor^0,c
  3654                           
  3655                           ;Lab6.c: 339: unsigned char valADC = ConversionADC(0);
  3656   0008E2  0E00               	movlw	0
  3657   0008E4  EC75  F00D         	call	_ConversionADC
  3658   0008E8  6E1D               	movwf	ISR@valADC^0,c
  3659                           
  3660                           ;Lab6.c: 346: int valPWM = (valADC * 100/255);
  3661   0008EA  501D               	movf	ISR@valADC^0,w,c
  3662   0008EC  0D64               	mullw	100
  3663   0008EE  CFF3 F001          	movff	prodl,___awdiv@dividend
  3664   0008F2  CFF4 F002          	movff	prodh,___awdiv@dividend+1
  3665   0008F6  0E00               	movlw	0
  3666   0008F8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3667   0008FA  6803               	setf	___awdiv@divisor^0,c
  3668   0008FC  EC2F  F00A         	call	___awdiv	;wreg free
  3669   000900  C001  F01E         	movff	?___awdiv,ISR@valPWM
  3670   000904  C002  F01F         	movff	?___awdiv+1,ISR@valPWM+1
  3671                           
  3672                           ;Lab6.c: 347: unsigned char numAscii[];;Lab6.c: 348: numASCII(valPWM, numAscii);
  3673   000908  C01E  F009         	movff	ISR@valPWM,numASCII@number
  3674   00090C  C01F  F00A         	movff	ISR@valPWM+1,numASCII@number+1
  3675   000910  0E1A               	movlw	low ISR@numAscii
  3676   000912  6E0B               	movwf	numASCII@ascii_values^0,c
  3677   000914  0E00               	movlw	high ISR@numAscii
  3678   000916  6E0C               	movwf	(numASCII@ascii_values+1)^0,c
  3679   000918  ECB8  F008         	call	_numASCII	;wreg free
  3680                           
  3681                           ;Lab6.c: 351: TransmitirVar("Valor de PWM: ");
  3682   00091C  0E56               	movlw	low STR_7
  3683   00091E  6E02               	movwf	TransmitirVar@buffer^0,c
  3684   000920  5002               	movf	TransmitirVar@buffer^0,w,c
  3685   000922  A4D8               	btfss	status,2,c
  3686   000924  0E08               	movlw	high __smallconst
  3687   000926  6E03               	movwf	(TransmitirVar@buffer+1)^0,c
  3688   000928  EC40  F00C         	call	_TransmitirVar	;wreg free
  3689                           
  3690                           ;Lab6.c: 352: TransmitirVar(numAscii);
  3691   00092C  0E1A               	movlw	low ISR@numAscii
  3692   00092E  6E02               	movwf	TransmitirVar@buffer^0,c
  3693   000930  0E00               	movlw	high ISR@numAscii
  3694   000932  6E03               	movwf	(TransmitirVar@buffer+1)^0,c
  3695   000934  EC40  F00C         	call	_TransmitirVar	;wreg free
  3696                           
  3697                           ;Lab6.c: 353: Transmitir('%');
  3698   000938  0E25               	movlw	37
  3699   00093A  ECE9  F00D         	call	_Transmitir
  3700                           
  3701                           ;Lab6.c: 354: TransmitirVar("\rDistancia objeto: ");
  3702   00093E  0E11               	movlw	low STR_8
  3703   000940  6E02               	movwf	TransmitirVar@buffer^0,c
  3704   000942  5002               	movf	TransmitirVar@buffer^0,w,c
  3705   000944  A4D8               	btfss	status,2,c
  3706   000946  0E08               	movlw	high __smallconst
  3707   000948  6E03               	movwf	(TransmitirVar@buffer+1)^0,c
  3708   00094A  EC40  F00C         	call	_TransmitirVar	;wreg free
  3709                           
  3710                           ;Lab6.c: 355: unsigned char dis = MedirDistancia();
  3711   00094E  ECA8  F00A         	call	i2_MedirDistancia	;wreg free
  3712   000952  6E20               	movwf	ISR@dis^0,c
  3713                           
  3714                           ;Lab6.c: 356: if(dis >= 10){
  3715   000954  0E09               	movlw	9
  3716   000956  6420               	cpfsgt	ISR@dis^0,c
  3717   000958  D002               	goto	i2l3568
  3718                           
  3719                           ;Lab6.c: 357: dis = 9;
  3720   00095A  0E09               	movlw	9
  3721   00095C  6E20               	movwf	ISR@dis^0,c
  3722   00095E                     i2l3568:
  3723                           
  3724                           ;Lab6.c: 358: };Lab6.c: 359: Transmitir(dis+48);
  3725   00095E  5020               	movf	ISR@dis^0,w,c
  3726   000960  0F30               	addlw	48
  3727   000962  ECE9  F00D         	call	_Transmitir
  3728                           
  3729                           ;Lab6.c: 360: Transmitir('\r');
  3730   000966  0E0D               	movlw	13
  3731   000968  ECE9  F00D         	call	_Transmitir
  3732                           
  3733                           ;Lab6.c: 364: float d = 240*valPWM/100;
  3734   00096C  0E00               	movlw	0
  3735   00096E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3736   000970  0E64               	movlw	100
  3737   000972  6E03               	movwf	___awdiv@divisor^0,c
  3738   000974  0EF0               	movlw	240
  3739   000976  021E               	mulwf	ISR@valPWM^0,c
  3740   000978  CFF3 F010          	movff	prodl,??_ISR
  3741   00097C  CFF4 F011          	movff	prodh,??_ISR+1
  3742   000980  021F               	mulwf	(ISR@valPWM+1)^0,c
  3743   000982  50F3               	movf	prodl,w,c
  3744   000984  2611               	addwf	(??_ISR+1)^0,f,c
  3745   000986  C010  F001         	movff	??_ISR,___awdiv@dividend
  3746   00098A  C011  F002         	movff	??_ISR+1,___awdiv@dividend+1
  3747   00098E  EC2F  F00A         	call	___awdiv	;wreg free
  3748   000992  C001  F009         	movff	?___awdiv,___awtoft@c
  3749   000996  C002  F00A         	movff	?___awdiv+1,___awtoft@c+1
  3750   00099A  EC09  F00D         	call	___awtoft	;wreg free
  3751   00099E  C009  F01A         	movff	?___awtoft,ISR@d
  3752   0009A2  C00A  F01B         	movff	?___awtoft+1,ISR@d+1
  3753   0009A6  C00B  F01C         	movff	?___awtoft+2,ISR@d+2
  3754                           
  3755                           ;Lab6.c: 365: CCPR1L=d;
  3756   0009AA  C01A  F001         	movff	ISR@d,___fttol@f1
  3757   0009AE  C01B  F002         	movff	ISR@d+1,___fttol@f1+1
  3758   0009B2  C01C  F003         	movff	ISR@d+2,___fttol@f1+2
  3759   0009B6  EC21  F009         	call	___fttol	;wreg free
  3760   0009BA  5001               	movf	?___fttol^0,w,c
  3761   0009BC  6EBE               	movwf	190,c	;volatile
  3762   0009BE                     i2l3576:
  3763                           
  3764                           ;Lab6.c: 369: };Lab6.c: 372: if (contador == 0 && inactive == 1) {
  3765   0009BE  5032               	movf	_contador^0,w,c
  3766   0009C0  A4D8               	btfss	status,2,c
  3767   0009C2  D005               	goto	i2l3582
  3768   0009C4  0431               	decf	_inactive^0,w,c
  3769   0009C6  A4D8               	btfss	status,2,c
  3770   0009C8  D002               	goto	i2l3582
  3771                           
  3772                           ;Lab6.c: 375: LATA4 =1;
  3773   0009CA  8889               	bsf	3977,4,c	;volatile
  3774                           
  3775                           ;Lab6.c: 376: inactive = 0;
  3776   0009CC  6A31               	clrf	_inactive^0,c
  3777   0009CE                     i2l3582:
  3778                           
  3779                           ;Lab6.c: 377: };Lab6.c: 380: contador++;
  3780   0009CE  2A32               	incf	_contador^0,f,c
  3781                           
  3782                           ;Lab6.c: 381: if(contador < 20) inactive = 0;
  3783   0009D0  0E14               	movlw	20
  3784   0009D2  6032               	cpfslt	_contador^0,c
  3785   0009D4  D001               	goto	i2l3588
  3786   0009D6  6A31               	clrf	_inactive^0,c
  3787   0009D8                     i2l3588:
  3788                           
  3789                           ;Lab6.c: 383: if(contador >= 20 && contador < 40){
  3790   0009D8  0E13               	movlw	19
  3791   0009DA  6432               	cpfsgt	_contador^0,c
  3792   0009DC  D007               	goto	i2l3596
  3793   0009DE  0E28               	movlw	40
  3794   0009E0  6032               	cpfslt	_contador^0,c
  3795   0009E2  D004               	goto	i2l3596
  3796                           
  3797                           ;Lab6.c: 385: LATA4 = 0;
  3798   0009E4  9889               	bcf	3977,4,c	;volatile
  3799                           
  3800                           ;Lab6.c: 386: inactive = 1;
  3801   0009E6  0E01               	movlw	1
  3802   0009E8  6E31               	movwf	_inactive^0,c
  3803                           
  3804                           ;Lab6.c: 387: } else if(contador >= 40){
  3805   0009EA  D004               	goto	i2l339
  3806   0009EC                     i2l3596:
  3807   0009EC  0E27               	movlw	39
  3808   0009EE  6432               	cpfsgt	_contador^0,c
  3809   0009F0  D001               	goto	i2l339
  3810   0009F2  0003               	sleep		;# 
  3811   0009F4                     i2l339:
  3812                           
  3813                           ;Lab6.c: 393: };Lab6.c: 394: };Lab6.c: 397: if(RBIF==1 ){
  3814   0009F4  A0F2               	btfss	4082,0,c	;volatile
  3815   0009F6  D0FC               	goto	i2l397
  3816                           
  3817                           ;Lab6.c: 399: if(PORTB!=0b11110000 && Iniciarpregunta == 1){
  3818   0009F8  0EF0               	movlw	240
  3819   0009FA  1881               	xorwf	129,w,c	;volatile
  3820   0009FC  B4D8               	btfsc	status,2,c
  3821   0009FE  D0DD               	goto	i2l3730
  3822   000A00  0434               	decf	_Iniciarpregunta^0,w,c
  3823   000A02  A4D8               	btfss	status,2,c
  3824   000A04  D0DA               	goto	i2l3730
  3825                           
  3826                           ;Lab6.c: 402: LATB=0b11111110;
  3827   000A06  0EFE               	movlw	254
  3828   000A08  6E8A               	movwf	138,c	;volatile
  3829                           
  3830                           ;Lab6.c: 405: if(RB4==0) {
  3831   000A0A  B881               	btfsc	3969,4,c	;volatile
  3832   000A0C  D008               	goto	i2l349
  3833                           
  3834                           ;Lab6.c: 407: faltantes = objetivo;
  3835   000A0E  C03A  F039         	movff	_objetivo,_faltantes
  3836                           
  3837                           ;Lab6.c: 408: contadas = objetivo - faltantes;
  3838   000A12  5039               	movf	_faltantes^0,w,c
  3839   000A14  5C3A               	subwf	_objetivo^0,w,c
  3840   000A16  6E38               	movwf	_contadas^0,c
  3841   000A18                     i2l3612:
  3842                           
  3843                           ;Lab6.c: 409: MostrarNumeros();
  3844   000A18  ECC4  F00B         	call	i2_MostrarNumeros	;wreg free
  3845                           
  3846                           ;Lab6.c: 410: }
  3847   000A1C  D0CC               	goto	i2l3728
  3848   000A1E                     i2l349:
  3849                           
  3850                           ;Lab6.c: 411: else if(RB5==0){
  3851   000A1E  BA81               	btfsc	3969,5,c	;volatile
  3852   000A20  D00B               	goto	i2l351
  3853                           
  3854                           ;Lab6.c: 412: input++;
  3855   000A22  2A37               	incf	_input^0,f,c
  3856                           
  3857                           ;Lab6.c: 413: if(input <= 2){
  3858   000A24  0E03               	movlw	3
  3859   000A26  6037               	cpfslt	_input^0,c
  3860   000A28  D0C6               	goto	i2l3728
  3861                           
  3862                           ;Lab6.c: 414: Tecla = 0;
  3863   000A2A  6A3B               	clrf	_Tecla^0,c
  3864                           
  3865                           ;Lab6.c: 415: EscribeLCD_n8(Tecla,1);
  3866   000A2C  0E01               	movlw	1
  3867   000A2E  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3868   000A30  503B               	movf	_Tecla^0,w,c
  3869   000A32  EC45  F008         	call	i2_EscribeLCD_n8
  3870                           
  3871                           ;Lab6.c: 416: };Lab6.c: 418: }
  3872   000A36  D0BF               	goto	i2l3728
  3873   000A38                     i2l351:
  3874                           
  3875                           ;Lab6.c: 419: else if(RB6==0){
  3876   000A38  BC81               	btfsc	3969,6,c	;volatile
  3877   000A3A  D004               	goto	i2l354
  3878                           
  3879                           ;Lab6.c: 421: contadas = objetivo;
  3880   000A3C  C03A  F038         	movff	_objetivo,_contadas
  3881                           
  3882                           ;Lab6.c: 422: faltantes = 0;
  3883   000A40  6A39               	clrf	_faltantes^0,c
  3884   000A42  D7EA               	goto	i2l3612
  3885   000A44                     i2l354:
  3886                           
  3887                           ;Lab6.c: 426: else if(RB7==0){
  3888   000A44  BE81               	btfsc	3969,7,c	;volatile
  3889   000A46  D006               	goto	i2l3628
  3890                           
  3891                           ;Lab6.c: 428: LATA4 = LATA4^1;
  3892   000A48  B889               	btfsc	3977,4,c	;volatile
  3893   000A4A  D002               	goto	i2u286_40
  3894   000A4C  8889               	bsf	3977,4,c	;volatile
  3895   000A4E  D0B3               	goto	i2l3728
  3896   000A50                     i2u286_40:
  3897   000A50  9889               	bcf	3977,4,c	;volatile
  3898                           
  3899                           ;Lab6.c: 429: }
  3900   000A52  D0B1               	goto	i2l3728
  3901   000A54                     i2l3628:
  3902                           
  3903                           ;Lab6.c: 430: else{;Lab6.c: 431: LATB=0b11111101;
  3904   000A54  0EFD               	movlw	253
  3905   000A56  6E8A               	movwf	138,c	;volatile
  3906                           
  3907                           ;Lab6.c: 434: if(RB4==0) {
  3908   000A58  B881               	btfsc	3969,4,c	;volatile
  3909   000A5A  D00C               	goto	i2l358
  3910                           
  3911                           ;Lab6.c: 435: input++;
  3912   000A5C  2A37               	incf	_input^0,f,c
  3913                           
  3914                           ;Lab6.c: 436: if(input <= 2){
  3915   000A5E  0E03               	movlw	3
  3916   000A60  6037               	cpfslt	_input^0,c
  3917   000A62  D0A9               	goto	i2l3728
  3918                           
  3919                           ;Lab6.c: 437: Tecla = 7;
  3920   000A64  0E07               	movlw	7
  3921   000A66  6E3B               	movwf	_Tecla^0,c
  3922                           
  3923                           ;Lab6.c: 438: EscribeLCD_n8(Tecla,1);
  3924   000A68  0E01               	movlw	1
  3925   000A6A  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3926   000A6C  503B               	movf	_Tecla^0,w,c
  3927   000A6E  EC45  F008         	call	i2_EscribeLCD_n8
  3928   000A72  D0A1               	goto	i2l3728
  3929   000A74                     i2l358:
  3930                           
  3931                           ;Lab6.c: 441: else if(RB5==0){
  3932   000A74  BA81               	btfsc	3969,5,c	;volatile
  3933   000A76  D00C               	goto	i2l361
  3934                           
  3935                           ;Lab6.c: 442: input++;
  3936   000A78  2A37               	incf	_input^0,f,c
  3937                           
  3938                           ;Lab6.c: 443: if(input <=2){
  3939   000A7A  0E03               	movlw	3
  3940   000A7C  6037               	cpfslt	_input^0,c
  3941   000A7E  D09B               	goto	i2l3728
  3942                           
  3943                           ;Lab6.c: 444: Tecla = 8;
  3944   000A80  0E08               	movlw	8
  3945   000A82  6E3B               	movwf	_Tecla^0,c
  3946                           
  3947                           ;Lab6.c: 445: EscribeLCD_n8(Tecla,1);
  3948   000A84  0E01               	movlw	1
  3949   000A86  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3950   000A88  503B               	movf	_Tecla^0,w,c
  3951   000A8A  EC45  F008         	call	i2_EscribeLCD_n8
  3952   000A8E  D093               	goto	i2l3728
  3953   000A90                     i2l361:
  3954                           
  3955                           ;Lab6.c: 448: else if(RB6==0){
  3956   000A90  BC81               	btfsc	3969,6,c	;volatile
  3957   000A92  D00C               	goto	i2l364
  3958                           
  3959                           ;Lab6.c: 449: input++;
  3960   000A94  2A37               	incf	_input^0,f,c
  3961                           
  3962                           ;Lab6.c: 450: if(input <=2){
  3963   000A96  0E03               	movlw	3
  3964   000A98  6037               	cpfslt	_input^0,c
  3965   000A9A  D08D               	goto	i2l3728
  3966                           
  3967                           ;Lab6.c: 451: Tecla = 9;
  3968   000A9C  0E09               	movlw	9
  3969   000A9E  6E3B               	movwf	_Tecla^0,c
  3970                           
  3971                           ;Lab6.c: 452: EscribeLCD_n8(Tecla,1);
  3972   000AA0  0E01               	movlw	1
  3973   000AA2  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3974   000AA4  503B               	movf	_Tecla^0,w,c
  3975   000AA6  EC45  F008         	call	i2_EscribeLCD_n8
  3976   000AAA  D085               	goto	i2l3728
  3977   000AAC                     i2l364:
  3978                           
  3979                           ;Lab6.c: 455: else if(RB7==0) {
  3980   000AAC  BE81               	btfsc	3969,7,c	;volatile
  3981   000AAE  D024               	goto	i2l3668
  3982                           
  3983                           ;Lab6.c: 459: if(input == 1){
  3984   000AB0  0437               	decf	_input^0,w,c
  3985   000AB2  A4D8               	btfss	status,2,c
  3986   000AB4  D00B               	goto	i2l3662
  3987                           
  3988                           ;Lab6.c: 460: DireccionaLCD(0xC0);
  3989   000AB6  0EC0               	movlw	192
  3990   000AB8  ECB2  F00D         	call	i2_DireccionaLCD
  3991                           
  3992                           ;Lab6.c: 462: EscribeLCD_c(' ');
  3993   000ABC  0E20               	movlw	32
  3994   000ABE  ECA7  F00D         	call	i2_EscribeLCD_c
  3995                           
  3996                           ;Lab6.c: 463: DireccionaLCD(0xC0);
  3997   000AC2  0EC0               	movlw	192
  3998   000AC4  ECB2  F00D         	call	i2_DireccionaLCD
  3999   000AC8                     i2l3660:
  4000                           
  4001                           ;Lab6.c: 464: input --;
  4002   000AC8  0637               	decf	_input^0,f,c
  4003                           
  4004                           ;Lab6.c: 466: } else if (input == 2){
  4005   000ACA  D075               	goto	i2l3728
  4006   000ACC                     i2l3662:
  4007   000ACC  0E02               	movlw	2
  4008   000ACE  1837               	xorwf	_input^0,w,c
  4009   000AD0  A4D8               	btfss	status,2,c
  4010   000AD2  D010               	goto	i2l370
  4011                           
  4012                           ;Lab6.c: 467: DireccionaLCD(0xC1);
  4013   000AD4  0EC1               	movlw	193
  4014   000AD6  ECB2  F00D         	call	i2_DireccionaLCD
  4015                           
  4016                           ;Lab6.c: 469: EscribeLCD_c(' ');
  4017   000ADA  0E20               	movlw	32
  4018   000ADC  ECA7  F00D         	call	i2_EscribeLCD_c
  4019                           
  4020                           ;Lab6.c: 470: DireccionaLCD(0xC1);
  4021   000AE0  0EC1               	movlw	193
  4022   000AE2  ECB2  F00D         	call	i2_DireccionaLCD
  4023                           
  4024                           ;Lab6.c: 471: Tecla = objetivo/10;
  4025   000AE6  0E0A               	movlw	10
  4026   000AE8  6E05               	movwf	i2___lbdiv@divisor^0,c
  4027   000AEA  503A               	movf	_objetivo^0,w,c
  4028   000AEC  ECED  F00C         	call	i2___lbdiv
  4029   000AF0  6E3B               	movwf	_Tecla^0,c
  4030   000AF2  D7EA               	goto	i2l3660
  4031   000AF4                     i2l370:
  4032                           
  4033                           ;Lab6.c: 475: __nop();
  4034   000AF4  0000               	nop	
  4035   000AF6  D05F               	goto	i2l3728
  4036   000AF8                     i2l3668:
  4037                           
  4038                           ;Lab6.c: 480: else{;Lab6.c: 481: LATB=0b11111011;
  4039   000AF8  0EFB               	movlw	251
  4040   000AFA  6E8A               	movwf	138,c	;volatile
  4041                           
  4042                           ;Lab6.c: 484: if(RB4==0){
  4043   000AFC  B881               	btfsc	3969,4,c	;volatile
  4044   000AFE  D00C               	goto	i2l373
  4045                           
  4046                           ;Lab6.c: 485: input++;
  4047   000B00  2A37               	incf	_input^0,f,c
  4048                           
  4049                           ;Lab6.c: 486: if(input <=2){
  4050   000B02  0E03               	movlw	3
  4051   000B04  6037               	cpfslt	_input^0,c
  4052   000B06  D057               	goto	i2l3728
  4053                           
  4054                           ;Lab6.c: 487: Tecla = 4;
  4055   000B08  0E04               	movlw	4
  4056   000B0A  6E3B               	movwf	_Tecla^0,c
  4057                           
  4058                           ;Lab6.c: 488: EscribeLCD_n8(Tecla,1);
  4059   000B0C  0E01               	movlw	1
  4060   000B0E  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  4061   000B10  503B               	movf	_Tecla^0,w,c
  4062   000B12  EC45  F008         	call	i2_EscribeLCD_n8
  4063   000B16  D04F               	goto	i2l3728
  4064   000B18                     i2l373:
  4065                           
  4066                           ;Lab6.c: 491: else if(RB5==0){
  4067   000B18  BA81               	btfsc	3969,5,c	;volatile
  4068   000B1A  D00C               	goto	i2l376
  4069                           
  4070                           ;Lab6.c: 492: input++;
  4071   000B1C  2A37               	incf	_input^0,f,c
  4072                           
  4073                           ;Lab6.c: 493: if(input <=2){
  4074   000B1E  0E03               	movlw	3
  4075   000B20  6037               	cpfslt	_input^0,c
  4076   000B22  D049               	goto	i2l3728
  4077                           
  4078                           ;Lab6.c: 494: Tecla = 5;
  4079   000B24  0E05               	movlw	5
  4080   000B26  6E3B               	movwf	_Tecla^0,c
  4081                           
  4082                           ;Lab6.c: 495: EscribeLCD_n8(Tecla,1);
  4083   000B28  0E01               	movlw	1
  4084   000B2A  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  4085   000B2C  503B               	movf	_Tecla^0,w,c
  4086   000B2E  EC45  F008         	call	i2_EscribeLCD_n8
  4087   000B32  D041               	goto	i2l3728
  4088   000B34                     i2l376:
  4089                           
  4090                           ;Lab6.c: 498: else if(RB6==0){
  4091   000B34  BC81               	btfsc	3969,6,c	;volatile
  4092   000B36  D00C               	goto	i2l379
  4093                           
  4094                           ;Lab6.c: 499: input++;
  4095   000B38  2A37               	incf	_input^0,f,c
  4096                           
  4097                           ;Lab6.c: 500: if(input <=2){
  4098   000B3A  0E03               	movlw	3
  4099   000B3C  6037               	cpfslt	_input^0,c
  4100   000B3E  D03B               	goto	i2l3728
  4101                           
  4102                           ;Lab6.c: 501: Tecla = 6;
  4103   000B40  0E06               	movlw	6
  4104   000B42  6E3B               	movwf	_Tecla^0,c
  4105                           
  4106                           ;Lab6.c: 502: EscribeLCD_n8(Tecla,1);
  4107   000B44  0E01               	movlw	1
  4108   000B46  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  4109   000B48  503B               	movf	_Tecla^0,w,c
  4110   000B4A  EC45  F008         	call	i2_EscribeLCD_n8
  4111   000B4E  D033               	goto	i2l3728
  4112   000B50                     i2l379:
  4113                           
  4114                           ;Lab6.c: 505: else if(RB7==0){
  4115   000B50  BE81               	btfsc	3969,7,c	;volatile
  4116   000B52  D003               	goto	i2l3698
  4117                           
  4118                           ;Lab6.c: 507: emergency = 1;
  4119   000B54  0E01               	movlw	1
  4120   000B56  6E33               	movwf	_emergency^0,c
  4121                           
  4122                           ;Lab6.c: 508: }
  4123   000B58  D02E               	goto	i2l3728
  4124   000B5A                     i2l3698:
  4125                           
  4126                           ;Lab6.c: 509: else{;Lab6.c: 510: LATB=0b11110111;
  4127   000B5A  0EF7               	movlw	247
  4128   000B5C  6E8A               	movwf	138,c	;volatile
  4129                           
  4130                           ;Lab6.c: 513: if(RB4==0){
  4131   000B5E  B881               	btfsc	3969,4,c	;volatile
  4132   000B60  D00C               	goto	i2l384
  4133                           
  4134                           ;Lab6.c: 514: input++;
  4135   000B62  2A37               	incf	_input^0,f,c
  4136                           
  4137                           ;Lab6.c: 515: if(input <=2){
  4138   000B64  0E03               	movlw	3
  4139   000B66  6037               	cpfslt	_input^0,c
  4140   000B68  D026               	goto	i2l3728
  4141                           
  4142                           ;Lab6.c: 516: Tecla = 1;
  4143   000B6A  0E01               	movlw	1
  4144   000B6C  6E3B               	movwf	_Tecla^0,c
  4145                           
  4146                           ;Lab6.c: 517: EscribeLCD_n8(Tecla,1);
  4147   000B6E  0E01               	movlw	1
  4148   000B70  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  4149   000B72  503B               	movf	_Tecla^0,w,c
  4150   000B74  EC45  F008         	call	i2_EscribeLCD_n8
  4151   000B78  D01E               	goto	i2l3728
  4152   000B7A                     i2l384:
  4153                           
  4154                           ;Lab6.c: 520: else if(RB5==0){
  4155   000B7A  BA81               	btfsc	3969,5,c	;volatile
  4156   000B7C  D00C               	goto	i2l387
  4157                           
  4158                           ;Lab6.c: 521: input++;
  4159   000B7E  2A37               	incf	_input^0,f,c
  4160                           
  4161                           ;Lab6.c: 522: if(input <=2){
  4162   000B80  0E03               	movlw	3
  4163   000B82  6037               	cpfslt	_input^0,c
  4164   000B84  D018               	goto	i2l3728
  4165                           
  4166                           ;Lab6.c: 523: Tecla = 2;
  4167   000B86  0E02               	movlw	2
  4168   000B88  6E3B               	movwf	_Tecla^0,c
  4169                           
  4170                           ;Lab6.c: 524: EscribeLCD_n8(Tecla,1);
  4171   000B8A  0E01               	movlw	1
  4172   000B8C  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  4173   000B8E  503B               	movf	_Tecla^0,w,c
  4174   000B90  EC45  F008         	call	i2_EscribeLCD_n8
  4175   000B94  D010               	goto	i2l3728
  4176   000B96                     i2l387:
  4177                           
  4178                           ;Lab6.c: 527: else if(RB6==0){
  4179   000B96  BC81               	btfsc	3969,6,c	;volatile
  4180   000B98  D00C               	goto	i2l390
  4181                           
  4182                           ;Lab6.c: 528: input++;
  4183   000B9A  2A37               	incf	_input^0,f,c
  4184                           
  4185                           ;Lab6.c: 529: if(input <=2){
  4186   000B9C  0E03               	movlw	3
  4187   000B9E  6037               	cpfslt	_input^0,c
  4188   000BA0  D00A               	goto	i2l3728
  4189                           
  4190                           ;Lab6.c: 530: Tecla = 3;
  4191   000BA2  0E03               	movlw	3
  4192   000BA4  6E3B               	movwf	_Tecla^0,c
  4193                           
  4194                           ;Lab6.c: 531: EscribeLCD_n8(Tecla,1);
  4195   000BA6  0E01               	movlw	1
  4196   000BA8  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  4197   000BAA  503B               	movf	_Tecla^0,w,c
  4198   000BAC  EC45  F008         	call	i2_EscribeLCD_n8
  4199   000BB0  D002               	goto	i2l3728
  4200   000BB2                     i2l390:
  4201                           
  4202                           ;Lab6.c: 534: else if(RB7==0){
  4203   000BB2  AE81               	btfss	3969,7,c	;volatile
  4204                           
  4205                           ;Lab6.c: 536: ok++;
  4206   000BB4  2A35               	incf	_ok^0,f,c
  4207   000BB6                     i2l3728:
  4208                           
  4209                           ;Lab6.c: 537: };Lab6.c: 538: };Lab6.c: 539: };Lab6.c: 540: };Lab6.c: 541: LATB=0b1111000
      +                          0;
  4210   000BB6  0EF0               	movlw	240
  4211   000BB8  6E8A               	movwf	138,c	;volatile
  4212   000BBA                     i2l3730:
  4213                           
  4214                           ;Lab6.c: 544: };Lab6.c: 548: if(ok == 0){
  4215   000BBA  5035               	movf	_ok^0,w,c
  4216   000BBC  A4D8               	btfss	status,2,c
  4217   000BBE  D007               	goto	i2l3736
  4218                           
  4219                           ;Lab6.c: 549: if(input == 1){
  4220   000BC0  0437               	decf	_input^0,w,c
  4221   000BC2  A4D8               	btfss	status,2,c
  4222   000BC4  D004               	goto	i2l3736
  4223                           
  4224                           ;Lab6.c: 550: objetivo = Tecla*10;
  4225   000BC6  503B               	movf	_Tecla^0,w,c
  4226   000BC8  0D0A               	mullw	10
  4227   000BCA  CFF3 F03A          	movff	prodl,_objetivo
  4228   000BCE                     i2l3736:
  4229                           
  4230                           ;Lab6.c: 552: };Lab6.c: 553: };Lab6.c: 555: if(input > 2 && block == 0){
  4231   000BCE  0E02               	movlw	2
  4232   000BD0  6437               	cpfsgt	_input^0,c
  4233   000BD2  D005               	goto	i2l3742
  4234   000BD4  5036               	movf	_block^0,w,c
  4235   000BD6  A4D8               	btfss	status,2,c
  4236   000BD8  D002               	goto	i2l3742
  4237                           
  4238                           ;Lab6.c: 557: input =2;
  4239   000BDA  0E02               	movlw	2
  4240   000BDC  6E37               	movwf	_input^0,c
  4241   000BDE                     i2l3742:
  4242                           
  4243                           ;Lab6.c: 558: };Lab6.c: 560: _delay((unsigned long)((250)*(1000000/4000.0)));
  4244   000BDE  0E52               	movlw	82
  4245   000BE0  6E10               	movwf	??_ISR^0,c
  4246   000BE2  0E2A               	movlw	42
  4247   000BE4                     i2u382_47:
  4248   000BE4  2EE8               	decfsz	wreg,f,c
  4249   000BE6  D7FE               	bra	i2u382_47
  4250   000BE8  2E10               	decfsz	??_ISR^0,f,c
  4251   000BEA  D7FC               	bra	i2u382_47
  4252                           
  4253                           ;Lab6.c: 561: contador = 0;
  4254   000BEC  6A32               	clrf	_contador^0,c
  4255                           
  4256                           ;Lab6.c: 563: RBIF=0;
  4257   000BEE  90F2               	bcf	4082,0,c	;volatile
  4258   000BF0                     i2l397:
  4259   000BF0  C019  FFF5         	movff	??_ISR+9,tablat
  4260   000BF4  C018  FFF8         	movff	??_ISR+8,tblptru
  4261   000BF8  C017  FFF7         	movff	??_ISR+7,tblptrh
  4262   000BFC  C016  FFF6         	movff	??_ISR+6,tblptrl
  4263   000C00  C015  FFF4         	movff	??_ISR+5,prodh
  4264   000C04  C014  FFF3         	movff	??_ISR+4,prodl
  4265   000C08  C013  FFDA         	movff	??_ISR+3,fsr2h
  4266   000C0C  C012  FFD9         	movff	??_ISR+2,fsr2l
  4267   000C10  923F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4268   000C12  0011               	retfie		f
  4269   000C14                     __end_of_ISR:
  4270                           	callstack 0
  4271                           
  4272 ;; *************** function i2_MostrarNumeros *****************
  4273 ;; Defined at:
  4274 ;;		line 571 in file "Lab6.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;		None
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;		None
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  1    wreg      void 
  4281 ;; Registers used:
  4282 ;;		wreg, status,2, status,0, cstack
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4288 ;;      Params:         0       0       0       0       0       0       0       0       0
  4289 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4290 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4291 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4292 ;;Total ram usage:        0 bytes
  4293 ;; Hardware stack levels used: 1
  4294 ;; Hardware stack levels required when called: 1
  4295 ;; This function calls:
  4296 ;;		i2___lbmod
  4297 ;; This function is called by:
  4298 ;;		_ISR
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           	psect	text22
  4303   001788                     __ptext22:
  4304                           	callstack 0
  4305   001788                     i2_MostrarNumeros:
  4306                           	callstack 23
  4307                           
  4308                           ;Lab6.c: 574: LATD = contadas % 10;
  4309                           
  4310                           ;incstack = 0
  4311   001788  0E0A               	movlw	10
  4312   00178A  6E01               	movwf	i2___lbmod@divisor^0,c
  4313   00178C  5038               	movf	_contadas^0,w,c
  4314   00178E  EC61  F00D         	call	i2___lbmod
  4315   001792  6E8C               	movwf	140,c	;volatile
  4316                           
  4317                           ;Lab6.c: 577: if(contadas<10){
  4318   001794  0E0A               	movlw	10
  4319   001796  6038               	cpfslt	_contadas^0,c
  4320   001798  D003               	goto	i2l3284
  4321                           
  4322                           ;Lab6.c: 579: LATE = 0b101;
  4323   00179A  0E05               	movlw	5
  4324   00179C  6E8D               	movwf	141,c	;volatile
  4325                           
  4326                           ;Lab6.c: 580: } else if(contadas<20){
  4327   00179E  0012               	return	
  4328   0017A0                     i2l3284:
  4329   0017A0  0E14               	movlw	20
  4330   0017A2  6038               	cpfslt	_contadas^0,c
  4331   0017A4  D003               	goto	i2l3288
  4332                           
  4333                           ;Lab6.c: 582: LATE=0b100;
  4334   0017A6  0E04               	movlw	4
  4335   0017A8  6E8D               	movwf	141,c	;volatile
  4336                           
  4337                           ;Lab6.c: 583: } else if (contadas<30){
  4338   0017AA  0012               	return	
  4339   0017AC                     i2l3288:
  4340   0017AC  0E1E               	movlw	30
  4341   0017AE  6038               	cpfslt	_contadas^0,c
  4342   0017B0  D003               	goto	i2l3292
  4343                           
  4344                           ;Lab6.c: 585: LATE=0b110;
  4345   0017B2  0E06               	movlw	6
  4346   0017B4  6E8D               	movwf	141,c	;volatile
  4347                           
  4348                           ;Lab6.c: 586: } else if (contadas<40){
  4349   0017B6  0012               	return	
  4350   0017B8                     i2l3292:
  4351   0017B8  0E28               	movlw	40
  4352   0017BA  6038               	cpfslt	_contadas^0,c
  4353   0017BC  D003               	goto	i2l3296
  4354                           
  4355                           ;Lab6.c: 588: LATE=0b010;
  4356   0017BE  0E02               	movlw	2
  4357   0017C0  6E8D               	movwf	141,c	;volatile
  4358                           
  4359                           ;Lab6.c: 589: } else if (contadas<50){
  4360   0017C2  0012               	return	
  4361   0017C4                     i2l3296:
  4362   0017C4  0E32               	movlw	50
  4363   0017C6  6038               	cpfslt	_contadas^0,c
  4364   0017C8  D003               	goto	i2l3300
  4365                           
  4366                           ;Lab6.c: 591: LATE = 0b011;
  4367   0017CA  0E03               	movlw	3
  4368   0017CC  6E8D               	movwf	141,c	;volatile
  4369                           
  4370                           ;Lab6.c: 592: } else if (contadas<60){
  4371   0017CE  0012               	return	
  4372   0017D0                     i2l3300:
  4373   0017D0  0E3C               	movlw	60
  4374   0017D2  6038               	cpfslt	_contadas^0,c
  4375   0017D4  0012               	return	
  4376                           
  4377                           ;Lab6.c: 594: LATE = 0b111;
  4378   0017D6  0E07               	movlw	7
  4379   0017D8  6E8D               	movwf	141,c	;volatile
  4380   0017DA  0012               	return	
  4381   0017DC                     __end_ofi2_MostrarNumeros:
  4382                           	callstack 0
  4383                           
  4384 ;; *************** function i2_MedirDistancia *****************
  4385 ;; Defined at:
  4386 ;;		line 701 in file "Lab6.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;		None
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;  aux             1    7[COMRAM] unsigned char 
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  1    wreg      unsigned char 
  4393 ;; Registers used:
  4394 ;;		wreg, status,2, status,0, cstack
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4400 ;;      Params:         0       0       0       0       0       0       0       0       0
  4401 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4403 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4404 ;;Total ram usage:        1 bytes
  4405 ;; Hardware stack levels used: 1
  4406 ;; Hardware stack levels required when called: 1
  4407 ;; This function calls:
  4408 ;;		i2___lwdiv
  4409 ;; This function is called by:
  4410 ;;		_ISR
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           	psect	text23
  4415   001550                     __ptext23:
  4416                           	callstack 0
  4417   001550                     i2_MedirDistancia:
  4418                           	callstack 23
  4419                           
  4420                           ;Lab6.c: 703: CCP2CON=0b00000100;
  4421                           
  4422                           ;incstack = 0
  4423   001550  0E04               	movlw	4
  4424   001552  6EBA               	movwf	186,c	;volatile
  4425                           
  4426                           ;Lab6.c: 704: TMR1=0;
  4427   001554  0E00               	movlw	0
  4428   001556  6ECF               	movwf	207,c	;volatile
  4429   001558  0E00               	movlw	0
  4430   00155A  6ECE               	movwf	206,c	;volatile
  4431                           
  4432                           ;Lab6.c: 705: CCP2IF=0;
  4433   00155C  90A1               	bcf	4001,0,c	;volatile
  4434                           
  4435                           ;Lab6.c: 706: RC0=1;
  4436   00155E  8082               	bsf	3970,0,c	;volatile
  4437                           
  4438                           ;Lab6.c: 707: _delay((unsigned long)((10)*(1000000/4000000.0)));
  4439   001560  D000               	nop2		;2 cycle nop
  4440                           
  4441                           ;Lab6.c: 708: RC0=0;
  4442   001562  9082               	bcf	3970,0,c	;volatile
  4443                           
  4444                           ;Lab6.c: 709: etimeout=1;
  4445   001564  0E01               	movlw	1
  4446   001566  6E30               	movwf	_etimeout^0,c
  4447   001568                     i2l463:
  4448   001568  B282               	btfsc	3970,1,c	;volatile
  4449   00156A  D003               	goto	i2u244_40
  4450   00156C  0430               	decf	_etimeout^0,w,c
  4451   00156E  B4D8               	btfsc	status,2,c
  4452   001570  D7FB               	goto	i2l463
  4453   001572                     i2u244_40:
  4454                           
  4455                           ;Lab6.c: 712: if(etimeout==0){
  4456   001572  5030               	movf	_etimeout^0,w,c
  4457   001574  A4D8               	btfss	status,2,c
  4458   001576  D002               	goto	i2l468
  4459                           
  4460                           ;Lab6.c: 713: return 0;
  4461   001578  0E00               	movlw	0
  4462   00157A  0012               	return	
  4463   00157C                     i2l468:
  4464                           
  4465                           ;Lab6.c: 714: };Lab6.c: 715: TMR1ON=1;
  4466   00157C  80CD               	bsf	4045,0,c	;volatile
  4467   00157E                     i2l470:
  4468   00157E  B0A1               	btfsc	4001,0,c	;volatile
  4469   001580  D002               	goto	i2u247_40
  4470   001582  A09E               	btfss	3998,0,c	;volatile
  4471   001584  D7FC               	goto	i2l470
  4472   001586                     i2u247_40:
  4473                           
  4474                           ;Lab6.c: 717: TMR1ON=0;
  4475   001586  90CD               	bcf	4045,0,c	;volatile
  4476                           
  4477                           ;Lab6.c: 718: if(TMR1IF==1)
  4478   001588  A09E               	btfss	3998,0,c	;volatile
  4479   00158A  D002               	goto	i2l3328
  4480                           
  4481                           ;Lab6.c: 719: aux=255;
  4482   00158C  6808               	setf	i2MedirDistancia@aux^0,c
  4483   00158E  D016               	goto	i2l3334
  4484   001590                     i2l3328:
  4485                           
  4486                           ;Lab6.c: 720: else{;Lab6.c: 721: if(CCPR2>=3556)
  4487   001590  0EE4               	movlw	228
  4488   001592  5CBB               	subwf	187,w,c	;volatile
  4489   001594  0E0D               	movlw	13
  4490   001596  58BC               	subwfb	188,w,c	;volatile
  4491   001598  A0D8               	btfss	status,0,c
  4492   00159A  D004               	goto	i2l3332
  4493                           
  4494                           ;Lab6.c: 722: CCPR2=3556;
  4495   00159C  0E0D               	movlw	13
  4496   00159E  6EBC               	movwf	188,c	;volatile
  4497   0015A0  0EE4               	movlw	228
  4498   0015A2  6EBB               	movwf	187,c	;volatile
  4499   0015A4                     i2l3332:
  4500                           
  4501                           ;Lab6.c: 723: aux=CCPR2/(14) ;
  4502   0015A4  CFBB F001          	movff	4027,i2___lwdiv@dividend	;volatile
  4503   0015A8  CFBC F002          	movff	4028,i2___lwdiv@dividend+1	;volatile
  4504   0015AC  0E00               	movlw	0
  4505   0015AE  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
  4506   0015B0  0E0E               	movlw	14
  4507   0015B2  6E03               	movwf	i2___lwdiv@divisor^0,c
  4508   0015B4  EC17  F00C         	call	i2___lwdiv	;wreg free
  4509   0015B8  5001               	movf	?i2___lwdiv^0,w,c
  4510   0015BA  6E08               	movwf	i2MedirDistancia@aux^0,c
  4511   0015BC                     i2l3334:
  4512                           
  4513                           ;Lab6.c: 724: };Lab6.c: 726: return aux;
  4514   0015BC  5008               	movf	i2MedirDistancia@aux^0,w,c
  4515   0015BE  0012               	return		;funcret
  4516   0015C0                     __end_ofi2_MedirDistancia:
  4517                           	callstack 0
  4518                           
  4519 ;; *************** function i2___lwdiv *****************
  4520 ;; Defined at:
  4521 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lwdiv.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;  dividend        2    0[COMRAM] unsigned int 
  4524 ;;  divisor         2    2[COMRAM] unsigned int 
  4525 ;; Auto vars:     Size  Location     Type
  4526 ;;  quotient        2    4[COMRAM] unsigned int 
  4527 ;;  counter         1    6[COMRAM] unsigned char 
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  2    0[COMRAM] unsigned int 
  4530 ;; Registers used:
  4531 ;;		wreg, status,2, status,0
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4537 ;;      Params:         4       0       0       0       0       0       0       0       0
  4538 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4539 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4540 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4541 ;;Total ram usage:        7 bytes
  4542 ;; Hardware stack levels used: 1
  4543 ;; This function calls:
  4544 ;;		Nothing
  4545 ;; This function is called by:
  4546 ;;		i2_MedirDistancia
  4547 ;; This function uses a non-reentrant model
  4548 ;;
  4549                           
  4550                           	psect	text24
  4551   00182E                     __ptext24:
  4552                           	callstack 0
  4553   00182E                     i2___lwdiv:
  4554                           	callstack 23
  4555                           
  4556                           ;incstack = 0
  4557   00182E  0E00               	movlw	0
  4558   001830  6E06               	movwf	(i2___lwdiv@quotient+1)^0,c
  4559   001832  0E00               	movlw	0
  4560   001834  6E05               	movwf	i2___lwdiv@quotient^0,c
  4561   001836  5003               	movf	i2___lwdiv@divisor^0,w,c
  4562   001838  1004               	iorwf	(i2___lwdiv@divisor+1)^0,w,c
  4563   00183A  B4D8               	btfsc	status,2,c
  4564   00183C  D01C               	goto	i2l978
  4565   00183E  0E01               	movlw	1
  4566   001840  6E07               	movwf	i2___lwdiv@counter^0,c
  4567   001842  D004               	goto	i2l2944
  4568   001844                     i2l2942:
  4569   001844  90D8               	bcf	status,0,c
  4570   001846  3603               	rlcf	i2___lwdiv@divisor^0,f,c
  4571   001848  3604               	rlcf	(i2___lwdiv@divisor+1)^0,f,c
  4572   00184A  2A07               	incf	i2___lwdiv@counter^0,f,c
  4573   00184C                     i2l2944:
  4574   00184C  AE04               	btfss	(i2___lwdiv@divisor+1)^0,7,c
  4575   00184E  D7FA               	goto	i2l2942
  4576   001850                     i2u203_40:
  4577   001850  90D8               	bcf	status,0,c
  4578   001852  3605               	rlcf	i2___lwdiv@quotient^0,f,c
  4579   001854  3606               	rlcf	(i2___lwdiv@quotient+1)^0,f,c
  4580   001856  5003               	movf	i2___lwdiv@divisor^0,w,c
  4581   001858  5C01               	subwf	i2___lwdiv@dividend^0,w,c
  4582   00185A  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
  4583   00185C  5802               	subwfb	(i2___lwdiv@dividend+1)^0,w,c
  4584   00185E  A0D8               	btfss	status,0,c
  4585   001860  D005               	goto	i2l2954
  4586   001862  5003               	movf	i2___lwdiv@divisor^0,w,c
  4587   001864  5E01               	subwf	i2___lwdiv@dividend^0,f,c
  4588   001866  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
  4589   001868  5A02               	subwfb	(i2___lwdiv@dividend+1)^0,f,c
  4590   00186A  8005               	bsf	i2___lwdiv@quotient^0,0,c
  4591   00186C                     i2l2954:
  4592   00186C  90D8               	bcf	status,0,c
  4593   00186E  3204               	rrcf	(i2___lwdiv@divisor+1)^0,f,c
  4594   001870  3203               	rrcf	i2___lwdiv@divisor^0,f,c
  4595   001872  2E07               	decfsz	i2___lwdiv@counter^0,f,c
  4596   001874  D7ED               	goto	i2u203_40
  4597   001876                     i2l978:
  4598   001876  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  4599   00187A  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  4600   00187E  0012               	return		;funcret
  4601   001880                     __end_ofi2___lwdiv:
  4602                           	callstack 0
  4603                           
  4604 ;; *************** function i2_EscribeLCD_n8 *****************
  4605 ;; Defined at:
  4606 ;;		line 149 in file "LibLCDXC8.h"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;  a               1    wreg     unsigned char 
  4609 ;;  b               1    8[COMRAM] unsigned char 
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;  a               1   12[COMRAM] unsigned char 
  4612 ;;  unidad          1   11[COMRAM] unsigned char 
  4613 ;;  decena          1   10[COMRAM] unsigned char 
  4614 ;;  centena         1    9[COMRAM] unsigned char 
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  1    wreg      void 
  4617 ;; Registers used:
  4618 ;;		wreg, status,2, status,0, cstack
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4624 ;;      Params:         1       0       0       0       0       0       0       0       0
  4625 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4626 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4627 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4628 ;;Total ram usage:        5 bytes
  4629 ;; Hardware stack levels used: 1
  4630 ;; Hardware stack levels required when called: 2
  4631 ;; This function calls:
  4632 ;;		i2_EnviaDato
  4633 ;;		i2_HabilitaLCD
  4634 ;;		i2_RetardoLCD
  4635 ;;		i2___lbdiv
  4636 ;;		i2___lbmod
  4637 ;; This function is called by:
  4638 ;;		_ISR
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           	psect	text25
  4643   00108A                     __ptext25:
  4644                           	callstack 0
  4645   00108A                     i2_EscribeLCD_n8:
  4646                           	callstack 22
  4647                           
  4648                           ;incstack = 0
  4649                           ;i2EscribeLCD_n8@a stored from wreg
  4650   00108A  6E0D               	movwf	i2EscribeLCD_n8@a^0,c
  4651                           
  4652                           ;LibLCDXC8.h: 154: unsigned char centena,decena,unidad;;LibLCDXC8.h: 155: LATA3=1;
  4653   00108C  8689               	bsf	3977,3,c	;volatile
  4654                           
  4655                           ;LibLCDXC8.h: 156: switch(b){
  4656   00108E  D065               	goto	i2l3268
  4657   001090                     i2l3236:
  4658   001090  0E0A               	movlw	10
  4659   001092  6E01               	movwf	i2___lbmod@divisor^0,c
  4660   001094  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4661   001096  EC61  F00D         	call	i2___lbmod
  4662   00109A  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  4663                           
  4664                           ;LibLCDXC8.h: 158: EnviaDato(unidad+48);
  4665   00109C  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  4666   00109E  0F30               	addlw	48
  4667   0010A0  EC8F  F00C         	call	i2_EnviaDato
  4668                           
  4669                           ;LibLCDXC8.h: 159: HabilitaLCD();
  4670   0010A4  ECE2  F00D         	call	i2_HabilitaLCD	;wreg free
  4671                           
  4672                           ;LibLCDXC8.h: 160: RetardoLCD(4);
  4673   0010A8  0E04               	movlw	4
  4674   0010AA  EC6F  F00B         	call	i2_RetardoLCD
  4675                           
  4676                           ;LibLCDXC8.h: 161: break;
  4677   0010AE  0012               	return	
  4678   0010B0                     i2l3242:
  4679   0010B0  0E0A               	movlw	10
  4680   0010B2  6E05               	movwf	i2___lbdiv@divisor^0,c
  4681   0010B4  0E64               	movlw	100
  4682   0010B6  6E01               	movwf	i2___lbmod@divisor^0,c
  4683   0010B8  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4684   0010BA  EC61  F00D         	call	i2___lbmod
  4685   0010BE  ECED  F00C         	call	i2___lbdiv
  4686   0010C2  6E0B               	movwf	i2EscribeLCD_n8@decena^0,c
  4687                           
  4688                           ;LibLCDXC8.h: 163: unidad=a%10;
  4689   0010C4  0E0A               	movlw	10
  4690   0010C6  6E01               	movwf	i2___lbmod@divisor^0,c
  4691   0010C8  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4692   0010CA  EC61  F00D         	call	i2___lbmod
  4693   0010CE  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  4694                           
  4695                           ;LibLCDXC8.h: 164: EnviaDato(decena+48);
  4696   0010D0  500B               	movf	i2EscribeLCD_n8@decena^0,w,c
  4697   0010D2  0F30               	addlw	48
  4698   0010D4  EC8F  F00C         	call	i2_EnviaDato
  4699                           
  4700                           ;LibLCDXC8.h: 165: HabilitaLCD();
  4701   0010D8  ECE2  F00D         	call	i2_HabilitaLCD	;wreg free
  4702                           
  4703                           ;LibLCDXC8.h: 166: RetardoLCD(4);
  4704   0010DC  0E04               	movlw	4
  4705   0010DE  EC6F  F00B         	call	i2_RetardoLCD
  4706                           
  4707                           ;LibLCDXC8.h: 167: EnviaDato(unidad+48);
  4708   0010E2  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  4709   0010E4  0F30               	addlw	48
  4710   0010E6  EC8F  F00C         	call	i2_EnviaDato
  4711                           
  4712                           ;LibLCDXC8.h: 168: HabilitaLCD();
  4713   0010EA  ECE2  F00D         	call	i2_HabilitaLCD	;wreg free
  4714                           
  4715                           ;LibLCDXC8.h: 169: RetardoLCD(4);
  4716   0010EE  0E04               	movlw	4
  4717   0010F0  EC6F  F00B         	call	i2_RetardoLCD
  4718                           
  4719                           ;LibLCDXC8.h: 170: break;
  4720   0010F4  0012               	return	
  4721   0010F6                     i2l3252:
  4722   0010F6  0E64               	movlw	100
  4723   0010F8  6E05               	movwf	i2___lbdiv@divisor^0,c
  4724   0010FA  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4725   0010FC  ECED  F00C         	call	i2___lbdiv
  4726   001100  6E0A               	movwf	i2EscribeLCD_n8@centena^0,c
  4727                           
  4728                           ;LibLCDXC8.h: 172: decena=(a%100)/10;
  4729   001102  0E0A               	movlw	10
  4730   001104  6E05               	movwf	i2___lbdiv@divisor^0,c
  4731   001106  0E64               	movlw	100
  4732   001108  6E01               	movwf	i2___lbmod@divisor^0,c
  4733   00110A  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4734   00110C  EC61  F00D         	call	i2___lbmod
  4735   001110  ECED  F00C         	call	i2___lbdiv
  4736   001114  6E0B               	movwf	i2EscribeLCD_n8@decena^0,c
  4737                           
  4738                           ;LibLCDXC8.h: 173: unidad=a%10;
  4739   001116  0E0A               	movlw	10
  4740   001118  6E01               	movwf	i2___lbmod@divisor^0,c
  4741   00111A  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  4742   00111C  EC61  F00D         	call	i2___lbmod
  4743   001120  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  4744                           
  4745                           ;LibLCDXC8.h: 174: EnviaDato(centena+48);
  4746   001122  500A               	movf	i2EscribeLCD_n8@centena^0,w,c
  4747   001124  0F30               	addlw	48
  4748   001126  EC8F  F00C         	call	i2_EnviaDato
  4749                           
  4750                           ;LibLCDXC8.h: 175: HabilitaLCD();
  4751   00112A  ECE2  F00D         	call	i2_HabilitaLCD	;wreg free
  4752                           
  4753                           ;LibLCDXC8.h: 176: RetardoLCD(4);
  4754   00112E  0E04               	movlw	4
  4755   001130  EC6F  F00B         	call	i2_RetardoLCD
  4756                           
  4757                           ;LibLCDXC8.h: 177: EnviaDato(decena+48);
  4758   001134  500B               	movf	i2EscribeLCD_n8@decena^0,w,c
  4759   001136  0F30               	addlw	48
  4760   001138  EC8F  F00C         	call	i2_EnviaDato
  4761                           
  4762                           ;LibLCDXC8.h: 178: HabilitaLCD();
  4763   00113C  ECE2  F00D         	call	i2_HabilitaLCD	;wreg free
  4764                           
  4765                           ;LibLCDXC8.h: 179: RetardoLCD(4);
  4766   001140  0E04               	movlw	4
  4767   001142  EC6F  F00B         	call	i2_RetardoLCD
  4768                           
  4769                           ;LibLCDXC8.h: 180: EnviaDato(unidad+48);
  4770   001146  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  4771   001148  0F30               	addlw	48
  4772   00114A  EC8F  F00C         	call	i2_EnviaDato
  4773                           
  4774                           ;LibLCDXC8.h: 181: HabilitaLCD();
  4775   00114E  ECE2  F00D         	call	i2_HabilitaLCD	;wreg free
  4776                           
  4777                           ;LibLCDXC8.h: 182: RetardoLCD(4);
  4778   001152  0E04               	movlw	4
  4779   001154  EC6F  F00B         	call	i2_RetardoLCD
  4780                           
  4781                           ;LibLCDXC8.h: 183: break;
  4782   001158  0012               	return	
  4783   00115A                     i2l3268:
  4784   00115A  5009               	movf	i2EscribeLCD_n8@b^0,w,c
  4785                           
  4786                           ; Switch size 1, requested type "simple"
  4787                           ; Number of cases is 3, Range of values is 1 to 3
  4788                           ; switch strategies available:
  4789                           ; Name         Instructions Cycles
  4790                           ; simple_byte           10     6 (average)
  4791                           ;	Chosen strategy is simple_byte
  4792   00115C  0A01               	xorlw	1	; case 1
  4793   00115E  B4D8               	btfsc	status,2,c
  4794   001160  D797               	goto	i2l3236
  4795   001162  0A03               	xorlw	3	; case 2
  4796   001164  B4D8               	btfsc	status,2,c
  4797   001166  D7A4               	goto	i2l3242
  4798   001168  0A01               	xorlw	1	; case 3
  4799   00116A  A4D8               	btfss	status,2,c
  4800   00116C  0012               	return	
  4801   00116E  D7C3               	goto	i2l3252
  4802   001170                     __end_ofi2_EscribeLCD_n8:
  4803                           	callstack 0
  4804                           
  4805 ;; *************** function i2___lbmod *****************
  4806 ;; Defined at:
  4807 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbmod.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;  dividend        1    wreg     unsigned char 
  4810 ;;  divisor         1    0[COMRAM] unsigned char 
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;  dividend        1    1[COMRAM] unsigned char 
  4813 ;;  rem             1    3[COMRAM] unsigned char 
  4814 ;;  counter         1    2[COMRAM] unsigned char 
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  1    wreg      unsigned char 
  4817 ;; Registers used:
  4818 ;;		wreg, status,2, status,0
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4824 ;;      Params:         1       0       0       0       0       0       0       0       0
  4825 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4827 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4828 ;;Total ram usage:        4 bytes
  4829 ;; Hardware stack levels used: 1
  4830 ;; This function calls:
  4831 ;;		Nothing
  4832 ;; This function is called by:
  4833 ;;		i2_EscribeLCD_n8
  4834 ;;		i2_MostrarNumeros
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text26
  4839   001AC2                     __ptext26:
  4840                           	callstack 0
  4841   001AC2                     i2___lbmod:
  4842                           	callstack 23
  4843                           
  4844                           ;incstack = 0
  4845                           ;i2___lbmod@dividend stored from wreg
  4846   001AC2  6E02               	movwf	i2___lbmod@dividend^0,c
  4847   001AC4  0E08               	movlw	8
  4848   001AC6  6E03               	movwf	i2___lbmod@counter^0,c
  4849   001AC8  6A04               	clrf	i2___lbmod@rem^0,c
  4850   001ACA                     i2l2922:
  4851   001ACA  90D8               	bcf	status,0,c
  4852   001ACC  3402               	rlcf	i2___lbmod@dividend^0,w,c
  4853   001ACE  3404               	rlcf	i2___lbmod@rem^0,w,c
  4854   001AD0  6E04               	movwf	i2___lbmod@rem^0,c
  4855   001AD2  90D8               	bcf	status,0,c
  4856   001AD4  3602               	rlcf	i2___lbmod@dividend^0,f,c
  4857   001AD6  5001               	movf	i2___lbmod@divisor^0,w,c
  4858   001AD8  5C04               	subwf	i2___lbmod@rem^0,w,c
  4859   001ADA  A0D8               	btfss	status,0,c
  4860   001ADC  D002               	goto	i2l2930
  4861   001ADE  5001               	movf	i2___lbmod@divisor^0,w,c
  4862   001AE0  5E04               	subwf	i2___lbmod@rem^0,f,c
  4863   001AE2                     i2l2930:
  4864   001AE2  2E03               	decfsz	i2___lbmod@counter^0,f,c
  4865   001AE4  D7F2               	goto	i2l2922
  4866   001AE6  5004               	movf	i2___lbmod@rem^0,w,c
  4867   001AE8  0012               	return		;funcret
  4868   001AEA                     __end_ofi2___lbmod:
  4869                           	callstack 0
  4870                           
  4871 ;; *************** function i2___lbdiv *****************
  4872 ;; Defined at:
  4873 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbdiv.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;  dividend        1    wreg     unsigned char 
  4876 ;;  divisor         1    4[COMRAM] unsigned char 
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;  dividend        1    5[COMRAM] unsigned char 
  4879 ;;  quotient        1    7[COMRAM] unsigned char 
  4880 ;;  counter         1    6[COMRAM] unsigned char 
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  1    wreg      unsigned char 
  4883 ;; Registers used:
  4884 ;;		wreg, status,2, status,0
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4890 ;;      Params:         1       0       0       0       0       0       0       0       0
  4891 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4892 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4893 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4894 ;;Total ram usage:        4 bytes
  4895 ;; Hardware stack levels used: 1
  4896 ;; This function calls:
  4897 ;;		Nothing
  4898 ;; This function is called by:
  4899 ;;		_ISR
  4900 ;;		i2_EscribeLCD_n8
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text27
  4905   0019DA                     __ptext27:
  4906                           	callstack 0
  4907   0019DA                     i2___lbdiv:
  4908                           	callstack 24
  4909                           
  4910                           ;incstack = 0
  4911                           ;i2___lbdiv@dividend stored from wreg
  4912   0019DA  6E06               	movwf	i2___lbdiv@dividend^0,c
  4913   0019DC  6A08               	clrf	i2___lbdiv@quotient^0,c
  4914   0019DE  5005               	movf	i2___lbdiv@divisor^0,w,c
  4915   0019E0  B4D8               	btfsc	status,2,c
  4916   0019E2  D015               	goto	i2l2914
  4917   0019E4  0E01               	movlw	1
  4918   0019E6  6E07               	movwf	i2___lbdiv@counter^0,c
  4919   0019E8  D003               	goto	i2l2902
  4920   0019EA                     i2l2898:
  4921   0019EA  90D8               	bcf	status,0,c
  4922   0019EC  3605               	rlcf	i2___lbdiv@divisor^0,f,c
  4923   0019EE  2A07               	incf	i2___lbdiv@counter^0,f,c
  4924   0019F0                     i2l2902:
  4925   0019F0  AE05               	btfss	i2___lbdiv@divisor^0,7,c
  4926   0019F2  D7FB               	goto	i2l2898
  4927   0019F4                     i2u199_40:
  4928   0019F4  90D8               	bcf	status,0,c
  4929   0019F6  3608               	rlcf	i2___lbdiv@quotient^0,f,c
  4930   0019F8  5005               	movf	i2___lbdiv@divisor^0,w,c
  4931   0019FA  5C06               	subwf	i2___lbdiv@dividend^0,w,c
  4932   0019FC  A0D8               	btfss	status,0,c
  4933   0019FE  D003               	goto	i2l2910
  4934   001A00  5005               	movf	i2___lbdiv@divisor^0,w,c
  4935   001A02  5E06               	subwf	i2___lbdiv@dividend^0,f,c
  4936   001A04  8008               	bsf	i2___lbdiv@quotient^0,0,c
  4937   001A06                     i2l2910:
  4938   001A06  90D8               	bcf	status,0,c
  4939   001A08  3205               	rrcf	i2___lbdiv@divisor^0,f,c
  4940   001A0A  2E07               	decfsz	i2___lbdiv@counter^0,f,c
  4941   001A0C  D7F3               	goto	i2u199_40
  4942   001A0E                     i2l2914:
  4943   001A0E  5008               	movf	i2___lbdiv@quotient^0,w,c
  4944   001A10  0012               	return		;funcret
  4945   001A12                     __end_ofi2___lbdiv:
  4946                           	callstack 0
  4947                           
  4948 ;; *************** function i2_EscribeLCD_c *****************
  4949 ;; Defined at:
  4950 ;;		line 140 in file "LibLCDXC8.h"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;  a               1    wreg     unsigned char 
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;  a               1    4[COMRAM] unsigned char 
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  1    wreg      void 
  4957 ;; Registers used:
  4958 ;;		wreg, status,2, status,0, cstack
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4964 ;;      Params:         0       0       0       0       0       0       0       0       0
  4965 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4966 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4967 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4968 ;;Total ram usage:        1 bytes
  4969 ;; Hardware stack levels used: 1
  4970 ;; Hardware stack levels required when called: 2
  4971 ;; This function calls:
  4972 ;;		i2_EnviaDato
  4973 ;;		i2_HabilitaLCD
  4974 ;;		i2_RetardoLCD
  4975 ;; This function is called by:
  4976 ;;		_ISR
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           	psect	text28
  4981   001B4E                     __ptext28:
  4982                           	callstack 0
  4983   001B4E                     i2_EscribeLCD_c:
  4984                           	callstack 22
  4985                           
  4986                           ;incstack = 0
  4987                           ;i2EscribeLCD_c@a stored from wreg
  4988   001B4E  6E05               	movwf	i2EscribeLCD_c@a^0,c
  4989                           
  4990                           ;LibLCDXC8.h: 144: LATA3=1;
  4991   001B50  8689               	bsf	3977,3,c	;volatile
  4992                           
  4993                           ;LibLCDXC8.h: 145: EnviaDato(a);
  4994   001B52  5005               	movf	i2EscribeLCD_c@a^0,w,c
  4995   001B54  EC8F  F00C         	call	i2_EnviaDato
  4996                           
  4997                           ;LibLCDXC8.h: 146: HabilitaLCD();
  4998   001B58  ECE2  F00D         	call	i2_HabilitaLCD	;wreg free
  4999                           
  5000                           ;LibLCDXC8.h: 147: RetardoLCD(4);
  5001   001B5C  0E04               	movlw	4
  5002   001B5E  EC6F  F00B         	call	i2_RetardoLCD
  5003   001B62  0012               	return		;funcret
  5004   001B64                     __end_ofi2_EscribeLCD_c:
  5005                           	callstack 0
  5006                           
  5007 ;; *************** function i2_DireccionaLCD *****************
  5008 ;; Defined at:
  5009 ;;		line 247 in file "LibLCDXC8.h"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;  a               1    wreg     unsigned char 
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  a               1    4[COMRAM] unsigned char 
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  1    wreg      void 
  5016 ;; Registers used:
  5017 ;;		wreg, status,2, status,0, cstack
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5023 ;;      Params:         0       0       0       0       0       0       0       0       0
  5024 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5025 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5026 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5027 ;;Total ram usage:        1 bytes
  5028 ;; Hardware stack levels used: 1
  5029 ;; Hardware stack levels required when called: 2
  5030 ;; This function calls:
  5031 ;;		i2_EnviaDato
  5032 ;;		i2_HabilitaLCD
  5033 ;;		i2_RetardoLCD
  5034 ;; This function is called by:
  5035 ;;		_ISR
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           	psect	text29
  5040   001B64                     __ptext29:
  5041                           	callstack 0
  5042   001B64                     i2_DireccionaLCD:
  5043                           	callstack 22
  5044                           
  5045                           ;incstack = 0
  5046                           ;i2DireccionaLCD@a stored from wreg
  5047   001B64  6E05               	movwf	i2DireccionaLCD@a^0,c
  5048                           
  5049                           ;LibLCDXC8.h: 250: LATA3=0;
  5050   001B66  9689               	bcf	3977,3,c	;volatile
  5051                           
  5052                           ;LibLCDXC8.h: 251: EnviaDato(a);
  5053   001B68  5005               	movf	i2DireccionaLCD@a^0,w,c
  5054   001B6A  EC8F  F00C         	call	i2_EnviaDato
  5055                           
  5056                           ;LibLCDXC8.h: 252: HabilitaLCD();
  5057   001B6E  ECE2  F00D         	call	i2_HabilitaLCD	;wreg free
  5058                           
  5059                           ;LibLCDXC8.h: 253: RetardoLCD(4);
  5060   001B72  0E04               	movlw	4
  5061   001B74  EC6F  F00B         	call	i2_RetardoLCD
  5062   001B78  0012               	return		;funcret
  5063   001B7A                     __end_ofi2_DireccionaLCD:
  5064                           	callstack 0
  5065                           
  5066 ;; *************** function i2_EnviaDato *****************
  5067 ;; Defined at:
  5068 ;;		line 63 in file "LibLCDXC8.h"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;  a               1    wreg     unsigned char 
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;  a               1    3[COMRAM] unsigned char 
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  1    wreg      void 
  5075 ;; Registers used:
  5076 ;;		wreg, status,2, status,0, cstack
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5082 ;;      Params:         0       0       0       0       0       0       0       0       0
  5083 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5084 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5085 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5086 ;;Total ram usage:        2 bytes
  5087 ;; Hardware stack levels used: 1
  5088 ;; Hardware stack levels required when called: 1
  5089 ;; This function calls:
  5090 ;;		i2_HabilitaLCD
  5091 ;;		i2_RetardoLCD
  5092 ;; This function is called by:
  5093 ;;		i2_EscribeLCD_c
  5094 ;;		i2_EscribeLCD_n8
  5095 ;;		i2_DireccionaLCD
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text30
  5100   00191E                     __ptext30:
  5101                           	callstack 0
  5102   00191E                     i2_EnviaDato:
  5103                           	callstack 22
  5104                           
  5105                           ;incstack = 0
  5106                           ;i2EnviaDato@a stored from wreg
  5107   00191E  6E04               	movwf	i2EnviaDato@a^0,c
  5108                           
  5109                           ;LibLCDXC8.h: 64: if(interfaz==4){
  5110   001920  0E04               	movlw	4
  5111   001922  183E               	xorwf	_interfaz^0,w,c
  5112   001924  A4D8               	btfss	status,2,c
  5113   001926  D01A               	goto	i2l2888
  5114                           
  5115                           ;LibLCDXC8.h: 65: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  5116   001928  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  5117   00192C  0EF0               	movlw	240
  5118   00192E  1603               	andwf	??i2_EnviaDato^0,f,c
  5119   001930  508C               	movf	140,w,c	;volatile
  5120   001932  0B0F               	andlw	15
  5121   001934  1003               	iorwf	??i2_EnviaDato^0,w,c
  5122   001936  6E8C               	movwf	140,c	;volatile
  5123                           
  5124                           ;LibLCDXC8.h: 66: HabilitaLCD();
  5125   001938  ECE2  F00D         	call	i2_HabilitaLCD	;wreg free
  5126                           
  5127                           ;LibLCDXC8.h: 67: RetardoLCD(1);
  5128   00193C  0E01               	movlw	1
  5129   00193E  EC6F  F00B         	call	i2_RetardoLCD
  5130                           
  5131                           ;LibLCDXC8.h: 68: LATD=(LATD & 0b00001111) | (a<<4);
  5132   001942  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  5133   001946  3A03               	swapf	??i2_EnviaDato^0,f,c
  5134   001948  0EF0               	movlw	240
  5135   00194A  1603               	andwf	??i2_EnviaDato^0,f,c
  5136   00194C  508C               	movf	140,w,c	;volatile
  5137   00194E  0B0F               	andlw	15
  5138   001950  1003               	iorwf	??i2_EnviaDato^0,w,c
  5139   001952  6E8C               	movwf	140,c	;volatile
  5140                           
  5141                           ;LibLCDXC8.h: 70: RetardoLCD(1);
  5142   001954  0E01               	movlw	1
  5143   001956  EC6F  F00B         	call	i2_RetardoLCD
  5144                           
  5145                           ;LibLCDXC8.h: 71: }else if(interfaz==8){
  5146   00195A  0012               	return	
  5147   00195C                     i2l2888:
  5148   00195C  0E08               	movlw	8
  5149   00195E  183E               	xorwf	_interfaz^0,w,c
  5150   001960  A4D8               	btfss	status,2,c
  5151   001962  0012               	return	
  5152                           
  5153                           ;LibLCDXC8.h: 72: LATD=a;
  5154   001964  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  5155   001968  0012               	return		;funcret
  5156   00196A                     __end_ofi2_EnviaDato:
  5157                           	callstack 0
  5158                           
  5159 ;; *************** function i2_RetardoLCD *****************
  5160 ;; Defined at:
  5161 ;;		line 287 in file "LibLCDXC8.h"
  5162 ;; Parameters:    Size  Location     Type
  5163 ;;  a               1    wreg     unsigned char 
  5164 ;; Auto vars:     Size  Location     Type
  5165 ;;  a               1    1[COMRAM] unsigned char 
  5166 ;; Return value:  Size  Location     Type
  5167 ;;                  1    wreg      void 
  5168 ;; Registers used:
  5169 ;;		wreg, status,2, status,0
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/0
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5175 ;;      Params:         0       0       0       0       0       0       0       0       0
  5176 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5177 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5178 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5179 ;;Total ram usage:        2 bytes
  5180 ;; Hardware stack levels used: 1
  5181 ;; This function calls:
  5182 ;;		Nothing
  5183 ;; This function is called by:
  5184 ;;		i2_EnviaDato
  5185 ;;		i2_EscribeLCD_c
  5186 ;;		i2_EscribeLCD_n8
  5187 ;;		i2_DireccionaLCD
  5188 ;; This function uses a non-reentrant model
  5189 ;;
  5190                           
  5191                           	psect	text31
  5192   0016DE                     __ptext31:
  5193                           	callstack 0
  5194   0016DE                     i2_RetardoLCD:
  5195                           	callstack 23
  5196                           
  5197                           ;incstack = 0
  5198                           ;i2RetardoLCD@a stored from wreg
  5199   0016DE  6E02               	movwf	i2RetardoLCD@a^0,c
  5200                           
  5201                           ;LibLCDXC8.h: 288: switch(a){
  5202   0016E0  D01B               	goto	i2l2566
  5203   0016E2                     i2l2556:
  5204   0016E2  0E05               	movlw	5
  5205   0016E4  6E01               	movwf	??i2_RetardoLCD^0,c
  5206   0016E6  0EDE               	movlw	222
  5207   0016E8                     i2u383_47:
  5208   0016E8  2EE8               	decfsz	wreg,f,c
  5209   0016EA  D7FE               	bra	i2u383_47
  5210   0016EC  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  5211   0016EE  D7FC               	bra	i2u383_47
  5212                           
  5213                           ;LibLCDXC8.h: 291: break;
  5214   0016F0  0012               	return	
  5215   0016F2                     i2l2558:
  5216   0016F2  0E53               	movlw	83
  5217   0016F4                     i2u384_47:
  5218   0016F4  2EE8               	decfsz	wreg,f,c
  5219   0016F6  D7FE               	bra	i2u384_47
  5220   0016F8  0000               	nop	
  5221                           
  5222                           ;LibLCDXC8.h: 293: _delay((unsigned long)((640)*(1000000/4000000.0)));
  5223   0016FA  0E35               	movlw	53
  5224   0016FC                     i2u385_47:
  5225   0016FC  2EE8               	decfsz	wreg,f,c
  5226   0016FE  D7FE               	bra	i2u385_47
  5227   001700  0000               	nop	
  5228                           
  5229                           ;LibLCDXC8.h: 295: break;
  5230   001702  0012               	return	
  5231   001704                     i2l2560:
  5232   001704  0E08               	movlw	8
  5233   001706                     i2u386_47:
  5234   001706  2EE8               	decfsz	wreg,f,c
  5235   001708  D7FE               	bra	i2u386_47
  5236   00170A  0000               	nop	
  5237                           
  5238                           ;LibLCDXC8.h: 298: break;
  5239   00170C  0012               	return	
  5240   00170E                     i2l2562:
  5241   00170E  0E03               	movlw	3
  5242   001710                     i2u387_47:
  5243   001710  2EE8               	decfsz	wreg,f,c
  5244   001712  D7FE               	bra	i2u387_47
  5245   001714  0000               	nop	
  5246                           
  5247                           ;LibLCDXC8.h: 301: break;
  5248   001716  0012               	return	
  5249   001718                     i2l2566:
  5250   001718  5002               	movf	i2RetardoLCD@a^0,w,c
  5251                           
  5252                           ; Switch size 1, requested type "simple"
  5253                           ; Number of cases is 4, Range of values is 1 to 4
  5254                           ; switch strategies available:
  5255                           ; Name         Instructions Cycles
  5256                           ; simple_byte           13     7 (average)
  5257                           ;	Chosen strategy is simple_byte
  5258   00171A  0A01               	xorlw	1	; case 1
  5259   00171C  B4D8               	btfsc	status,2,c
  5260   00171E  D7E1               	goto	i2l2556
  5261   001720  0A03               	xorlw	3	; case 2
  5262   001722  B4D8               	btfsc	status,2,c
  5263   001724  D7E6               	goto	i2l2558
  5264   001726  0A01               	xorlw	1	; case 3
  5265   001728  B4D8               	btfsc	status,2,c
  5266   00172A  D7EC               	goto	i2l2560
  5267   00172C  0A07               	xorlw	7	; case 4
  5268   00172E  A4D8               	btfss	status,2,c
  5269   001730  0012               	return	
  5270   001732  D7ED               	goto	i2l2562
  5271   001734                     __end_ofi2_RetardoLCD:
  5272                           	callstack 0
  5273                           
  5274 ;; *************** function i2_HabilitaLCD *****************
  5275 ;; Defined at:
  5276 ;;		line 109 in file "LibLCDXC8.h"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;		None
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;		None
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  1    wreg      void 
  5283 ;; Registers used:
  5284 ;;		wreg
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5290 ;;      Params:         0       0       0       0       0       0       0       0       0
  5291 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5292 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5293 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5294 ;;Total ram usage:        0 bytes
  5295 ;; Hardware stack levels used: 1
  5296 ;; This function calls:
  5297 ;;		Nothing
  5298 ;; This function is called by:
  5299 ;;		i2_EnviaDato
  5300 ;;		i2_EscribeLCD_c
  5301 ;;		i2_EscribeLCD_n8
  5302 ;;		i2_DireccionaLCD
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           	psect	text32
  5307   001BC4                     __ptext32:
  5308                           	callstack 0
  5309   001BC4                     i2_HabilitaLCD:
  5310                           	callstack 23
  5311                           
  5312                           ;LibLCDXC8.h: 111: LATA5=1;
  5313                           
  5314                           ;incstack = 0
  5315   001BC4  8A89               	bsf	3977,5,c	;volatile
  5316                           
  5317                           ;LibLCDXC8.h: 112: _delay((unsigned long)((40)*(1000000/4000000.0)));
  5318   001BC6  0E03               	movlw	3
  5319   001BC8                     i2u388_47:
  5320   001BC8  2EE8               	decfsz	wreg,f,c
  5321   001BCA  D7FE               	bra	i2u388_47
  5322   001BCC  0000               	nop	
  5323                           
  5324                           ;LibLCDXC8.h: 114: LATA5=0;
  5325   001BCE  9A89               	bcf	3977,5,c	;volatile
  5326   001BD0  0012               	return		;funcret
  5327   001BD2                     __end_ofi2_HabilitaLCD:
  5328                           	callstack 0
  5329                           
  5330 ;; *************** function _numASCII *****************
  5331 ;; Defined at:
  5332 ;;		line 685 in file "Lab6.c"
  5333 ;; Parameters:    Size  Location     Type
  5334 ;;  number          2    8[COMRAM] int 
  5335 ;;  ascii_values    2   10[COMRAM] PTR unsigned char 
  5336 ;;		 -> ISR@numAscii(0), 
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;		None
  5339 ;; Return value:  Size  Location     Type
  5340 ;;                  1    wreg      void 
  5341 ;; Registers used:
  5342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5348 ;;      Params:         4       0       0       0       0       0       0       0       0
  5349 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5350 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5351 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5352 ;;Total ram usage:        4 bytes
  5353 ;; Hardware stack levels used: 1
  5354 ;; Hardware stack levels required when called: 1
  5355 ;; This function calls:
  5356 ;;		___awdiv
  5357 ;;		___awmod
  5358 ;; This function is called by:
  5359 ;;		_ISR
  5360 ;; This function uses a non-reentrant model
  5361 ;;
  5362                           
  5363                           	psect	text33
  5364   001170                     __ptext33:
  5365                           	callstack 0
  5366   001170                     _numASCII:
  5367                           	callstack 23
  5368                           
  5369                           ;Lab6.c: 686: if (number < 10) {
  5370                           
  5371                           ;incstack = 0
  5372   001170  BE0A               	btfsc	(numASCII@number+1)^0,7,c
  5373   001172  D006               	goto	i2u223_40
  5374   001174  500A               	movf	(numASCII@number+1)^0,w,c
  5375   001176  E113               	bnz	i2l3146
  5376   001178  0E0A               	movlw	10
  5377   00117A  5C09               	subwf	numASCII@number^0,w,c
  5378   00117C  B0D8               	btfsc	status,0,c
  5379   00117E  D00F               	goto	i2l3146
  5380   001180                     i2u223_40:
  5381                           
  5382                           ;Lab6.c: 687: ascii_values[0] = '0' + number;
  5383   001180  5009               	movf	numASCII@number^0,w,c
  5384   001182  0F30               	addlw	48
  5385   001184  C00B  FFD9         	movff	numASCII@ascii_values,fsr2l
  5386   001188  C00C  FFDA         	movff	numASCII@ascii_values+1,fsr2h
  5387   00118C  6EDF               	movwf	indf2,c
  5388                           
  5389                           ;Lab6.c: 688: ascii_values[1] = '\0';
  5390   00118E  EE20 F001          	lfsr	2,1
  5391   001192  500B               	movf	numASCII@ascii_values^0,w,c
  5392   001194  26D9               	addwf	fsr2l,f,c
  5393   001196  500C               	movf	(numASCII@ascii_values+1)^0,w,c
  5394   001198  22DA               	addwfc	fsr2h,f,c
  5395   00119A  6ADF               	clrf	indf2,c
  5396                           
  5397                           ;Lab6.c: 689: } else if (number < 100) {
  5398   00119C  0012               	return	
  5399   00119E                     i2l3146:
  5400   00119E  BE0A               	btfsc	(numASCII@number+1)^0,7,c
  5401   0011A0  D006               	goto	i2u224_40
  5402   0011A2  500A               	movf	(numASCII@number+1)^0,w,c
  5403   0011A4  E130               	bnz	i2l3152
  5404   0011A6  0E64               	movlw	100
  5405   0011A8  5C09               	subwf	numASCII@number^0,w,c
  5406   0011AA  B0D8               	btfsc	status,0,c
  5407   0011AC  D02C               	goto	i2l3152
  5408   0011AE                     i2u224_40:
  5409                           
  5410                           ;Lab6.c: 690: ascii_values[0] = '0' + number / 10;
  5411   0011AE  C009  F001         	movff	numASCII@number,___awdiv@dividend
  5412   0011B2  C00A  F002         	movff	numASCII@number+1,___awdiv@dividend+1
  5413   0011B6  0E00               	movlw	0
  5414   0011B8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5415   0011BA  0E0A               	movlw	10
  5416   0011BC  6E03               	movwf	___awdiv@divisor^0,c
  5417   0011BE  EC2F  F00A         	call	___awdiv	;wreg free
  5418   0011C2  5001               	movf	?___awdiv^0,w,c
  5419   0011C4  0F30               	addlw	48
  5420   0011C6  C00B  FFD9         	movff	numASCII@ascii_values,fsr2l
  5421   0011CA  C00C  FFDA         	movff	numASCII@ascii_values+1,fsr2h
  5422   0011CE  6EDF               	movwf	indf2,c
  5423                           
  5424                           ;Lab6.c: 691: ascii_values[1] = '0' + number % 10;
  5425   0011D0  EE20 F001          	lfsr	2,1
  5426   0011D4  500B               	movf	numASCII@ascii_values^0,w,c
  5427   0011D6  26D9               	addwf	fsr2l,f,c
  5428   0011D8  500C               	movf	(numASCII@ascii_values+1)^0,w,c
  5429   0011DA  22DA               	addwfc	fsr2h,f,c
  5430   0011DC  C009  F001         	movff	numASCII@number,___awmod@dividend
  5431   0011E0  C00A  F002         	movff	numASCII@number+1,___awmod@dividend+1
  5432   0011E4  0E00               	movlw	0
  5433   0011E6  6E04               	movwf	(___awmod@divisor+1)^0,c
  5434   0011E8  0E0A               	movlw	10
  5435   0011EA  6E03               	movwf	___awmod@divisor^0,c
  5436   0011EC  ECE0  F00A         	call	___awmod	;wreg free
  5437   0011F0  5001               	movf	?___awmod^0,w,c
  5438   0011F2  0F30               	addlw	48
  5439   0011F4  6EDF               	movwf	indf2,c
  5440                           
  5441                           ;Lab6.c: 692: ascii_values[2] = '\0';
  5442   0011F6  EE20 F002          	lfsr	2,2
  5443   0011FA  500B               	movf	numASCII@ascii_values^0,w,c
  5444   0011FC  26D9               	addwf	fsr2l,f,c
  5445   0011FE  500C               	movf	(numASCII@ascii_values+1)^0,w,c
  5446   001200  22DA               	addwfc	fsr2h,f,c
  5447   001202  6ADF               	clrf	indf2,c
  5448                           
  5449                           ;Lab6.c: 693: } else {
  5450   001204  0012               	return	
  5451   001206                     i2l3152:
  5452                           
  5453                           ;Lab6.c: 694: ascii_values[0] = '1';
  5454   001206  C00B  FFD9         	movff	numASCII@ascii_values,fsr2l
  5455   00120A  C00C  FFDA         	movff	numASCII@ascii_values+1,fsr2h
  5456   00120E  0E31               	movlw	49
  5457   001210  6EDF               	movwf	indf2,c
  5458                           
  5459                           ;Lab6.c: 695: ascii_values[1] = '0';
  5460   001212  EE20 F001          	lfsr	2,1
  5461   001216  500B               	movf	numASCII@ascii_values^0,w,c
  5462   001218  26D9               	addwf	fsr2l,f,c
  5463   00121A  500C               	movf	(numASCII@ascii_values+1)^0,w,c
  5464   00121C  22DA               	addwfc	fsr2h,f,c
  5465   00121E  0E30               	movlw	48
  5466   001220  6EDF               	movwf	indf2,c
  5467                           
  5468                           ;Lab6.c: 696: ascii_values[2] = '0';
  5469   001222  EE20 F002          	lfsr	2,2
  5470   001226  500B               	movf	numASCII@ascii_values^0,w,c
  5471   001228  26D9               	addwf	fsr2l,f,c
  5472   00122A  500C               	movf	(numASCII@ascii_values+1)^0,w,c
  5473   00122C  22DA               	addwfc	fsr2h,f,c
  5474   00122E  0E30               	movlw	48
  5475   001230  6EDF               	movwf	indf2,c
  5476                           
  5477                           ;Lab6.c: 697: ascii_values[3] = '\0';
  5478   001232  EE20 F003          	lfsr	2,3
  5479   001236  500B               	movf	numASCII@ascii_values^0,w,c
  5480   001238  26D9               	addwf	fsr2l,f,c
  5481   00123A  500C               	movf	(numASCII@ascii_values+1)^0,w,c
  5482   00123C  22DA               	addwfc	fsr2h,f,c
  5483   00123E  6ADF               	clrf	indf2,c
  5484   001240  0012               	return		;funcret
  5485   001242                     __end_of_numASCII:
  5486                           	callstack 0
  5487                           
  5488 ;; *************** function ___awmod *****************
  5489 ;; Defined at:
  5490 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;  dividend        2    0[COMRAM] int 
  5493 ;;  divisor         2    2[COMRAM] int 
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;  sign            1    5[COMRAM] unsigned char 
  5496 ;;  counter         1    4[COMRAM] unsigned char 
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  2    0[COMRAM] int 
  5499 ;; Registers used:
  5500 ;;		wreg, status,2, status,0
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5506 ;;      Params:         4       0       0       0       0       0       0       0       0
  5507 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5508 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5509 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5510 ;;Total ram usage:        6 bytes
  5511 ;; Hardware stack levels used: 1
  5512 ;; This function calls:
  5513 ;;		Nothing
  5514 ;; This function is called by:
  5515 ;;		_numASCII
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           	psect	text34
  5520   0015C0                     __ptext34:
  5521                           	callstack 0
  5522   0015C0                     ___awmod:
  5523                           	callstack 23
  5524                           
  5525                           ;incstack = 0
  5526   0015C0  6A06               	clrf	___awmod@sign^0,c
  5527   0015C2  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  5528   0015C4  D006               	goto	i2l2782
  5529   0015C6  6C01               	negf	___awmod@dividend^0,c
  5530   0015C8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5531   0015CA  B0D8               	btfsc	status,0,c
  5532   0015CC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5533   0015CE  0E01               	movlw	1
  5534   0015D0  6E06               	movwf	___awmod@sign^0,c
  5535   0015D2                     i2l2782:
  5536   0015D2  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5537   0015D4  D004               	goto	i2l2786
  5538   0015D6  6C03               	negf	___awmod@divisor^0,c
  5539   0015D8  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5540   0015DA  B0D8               	btfsc	status,0,c
  5541   0015DC  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5542   0015DE                     i2l2786:
  5543   0015DE  5003               	movf	___awmod@divisor^0,w,c
  5544   0015E0  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5545   0015E2  B4D8               	btfsc	status,2,c
  5546   0015E4  D018               	goto	i2l2802
  5547   0015E6  0E01               	movlw	1
  5548   0015E8  6E05               	movwf	___awmod@counter^0,c
  5549   0015EA  D004               	goto	i2l2792
  5550   0015EC                     i2l2790:
  5551   0015EC  90D8               	bcf	status,0,c
  5552   0015EE  3603               	rlcf	___awmod@divisor^0,f,c
  5553   0015F0  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5554   0015F2  2A05               	incf	___awmod@counter^0,f,c
  5555   0015F4                     i2l2792:
  5556   0015F4  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5557   0015F6  D7FA               	goto	i2l2790
  5558   0015F8                     i2u186_40:
  5559   0015F8  5003               	movf	___awmod@divisor^0,w,c
  5560   0015FA  5C01               	subwf	___awmod@dividend^0,w,c
  5561   0015FC  5004               	movf	(___awmod@divisor+1)^0,w,c
  5562   0015FE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5563   001600  A0D8               	btfss	status,0,c
  5564   001602  D004               	goto	i2l2798
  5565   001604  5003               	movf	___awmod@divisor^0,w,c
  5566   001606  5E01               	subwf	___awmod@dividend^0,f,c
  5567   001608  5004               	movf	(___awmod@divisor+1)^0,w,c
  5568   00160A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5569   00160C                     i2l2798:
  5570   00160C  90D8               	bcf	status,0,c
  5571   00160E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5572   001610  3203               	rrcf	___awmod@divisor^0,f,c
  5573   001612  2E05               	decfsz	___awmod@counter^0,f,c
  5574   001614  D7F1               	goto	i2u186_40
  5575   001616                     i2l2802:
  5576   001616  5006               	movf	___awmod@sign^0,w,c
  5577   001618  B4D8               	btfsc	status,2,c
  5578   00161A  D004               	goto	i2l2806
  5579   00161C  6C01               	negf	___awmod@dividend^0,c
  5580   00161E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5581   001620  B0D8               	btfsc	status,0,c
  5582   001622  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5583   001624                     i2l2806:
  5584   001624  C001  F001         	movff	___awmod@dividend,?___awmod
  5585   001628  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5586   00162C  0012               	return		;funcret
  5587   00162E                     __end_of___awmod:
  5588                           	callstack 0
  5589                           
  5590 ;; *************** function ___awdiv *****************
  5591 ;; Defined at:
  5592 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c"
  5593 ;; Parameters:    Size  Location     Type
  5594 ;;  dividend        2    0[COMRAM] int 
  5595 ;;  divisor         2    2[COMRAM] int 
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;  quotient        2    6[COMRAM] int 
  5598 ;;  sign            1    5[COMRAM] unsigned char 
  5599 ;;  counter         1    4[COMRAM] unsigned char 
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  2    0[COMRAM] int 
  5602 ;; Registers used:
  5603 ;;		wreg, status,2, status,0
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5609 ;;      Params:         4       0       0       0       0       0       0       0       0
  5610 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5611 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5612 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5613 ;;Total ram usage:        8 bytes
  5614 ;; Hardware stack levels used: 1
  5615 ;; This function calls:
  5616 ;;		Nothing
  5617 ;; This function is called by:
  5618 ;;		_ISR
  5619 ;;		_numASCII
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           	psect	text35
  5624   00145E                     __ptext35:
  5625                           	callstack 0
  5626   00145E                     ___awdiv:
  5627                           	callstack 23
  5628                           
  5629                           ;incstack = 0
  5630   00145E  6A06               	clrf	___awdiv@sign^0,c
  5631   001460  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5632   001462  D006               	goto	i2l2738
  5633   001464  6C03               	negf	___awdiv@divisor^0,c
  5634   001466  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5635   001468  B0D8               	btfsc	status,0,c
  5636   00146A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5637   00146C  0E01               	movlw	1
  5638   00146E  6E06               	movwf	___awdiv@sign^0,c
  5639   001470                     i2l2738:
  5640   001470  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
  5641   001472  D006               	goto	i2l2744
  5642   001474  6C01               	negf	___awdiv@dividend^0,c
  5643   001476  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5644   001478  B0D8               	btfsc	status,0,c
  5645   00147A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5646   00147C  0E01               	movlw	1
  5647   00147E  1A06               	xorwf	___awdiv@sign^0,f,c
  5648   001480                     i2l2744:
  5649   001480  0E00               	movlw	0
  5650   001482  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5651   001484  0E00               	movlw	0
  5652   001486  6E07               	movwf	___awdiv@quotient^0,c
  5653   001488  5003               	movf	___awdiv@divisor^0,w,c
  5654   00148A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5655   00148C  B4D8               	btfsc	status,2,c
  5656   00148E  D01C               	goto	i2l2766
  5657   001490  0E01               	movlw	1
  5658   001492  6E05               	movwf	___awdiv@counter^0,c
  5659   001494  D004               	goto	i2l2752
  5660   001496                     i2l2750:
  5661   001496  90D8               	bcf	status,0,c
  5662   001498  3603               	rlcf	___awdiv@divisor^0,f,c
  5663   00149A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5664   00149C  2A05               	incf	___awdiv@counter^0,f,c
  5665   00149E                     i2l2752:
  5666   00149E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5667   0014A0  D7FA               	goto	i2l2750
  5668   0014A2                     i2u180_40:
  5669   0014A2  90D8               	bcf	status,0,c
  5670   0014A4  3607               	rlcf	___awdiv@quotient^0,f,c
  5671   0014A6  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5672   0014A8  5003               	movf	___awdiv@divisor^0,w,c
  5673   0014AA  5C01               	subwf	___awdiv@dividend^0,w,c
  5674   0014AC  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5675   0014AE  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5676   0014B0  A0D8               	btfss	status,0,c
  5677   0014B2  D005               	goto	i2l2762
  5678   0014B4  5003               	movf	___awdiv@divisor^0,w,c
  5679   0014B6  5E01               	subwf	___awdiv@dividend^0,f,c
  5680   0014B8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5681   0014BA  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5682   0014BC  8007               	bsf	___awdiv@quotient^0,0,c
  5683   0014BE                     i2l2762:
  5684   0014BE  90D8               	bcf	status,0,c
  5685   0014C0  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5686   0014C2  3203               	rrcf	___awdiv@divisor^0,f,c
  5687   0014C4  2E05               	decfsz	___awdiv@counter^0,f,c
  5688   0014C6  D7ED               	goto	i2u180_40
  5689   0014C8                     i2l2766:
  5690   0014C8  5006               	movf	___awdiv@sign^0,w,c
  5691   0014CA  B4D8               	btfsc	status,2,c
  5692   0014CC  D004               	goto	i2l2770
  5693   0014CE  6C07               	negf	___awdiv@quotient^0,c
  5694   0014D0  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5695   0014D2  B0D8               	btfsc	status,0,c
  5696   0014D4  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5697   0014D6                     i2l2770:
  5698   0014D6  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5699   0014DA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5700   0014DE  0012               	return		;funcret
  5701   0014E0                     __end_of___awdiv:
  5702                           	callstack 0
  5703                           
  5704 ;; *************** function ___fttol *****************
  5705 ;; Defined at:
  5706 ;;		line 44 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\fttol.c"
  5707 ;; Parameters:    Size  Location     Type
  5708 ;;  f1              3    0[COMRAM] float 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;  lval            4   10[COMRAM] unsigned long 
  5711 ;;  exp1            1   14[COMRAM] unsigned char 
  5712 ;;  sign1           1    9[COMRAM] unsigned char 
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  4    0[COMRAM] long 
  5715 ;; Registers used:
  5716 ;;		wreg, status,2, status,0
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5722 ;;      Params:         4       0       0       0       0       0       0       0       0
  5723 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5724 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5725 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5726 ;;Total ram usage:       15 bytes
  5727 ;; Hardware stack levels used: 1
  5728 ;; This function calls:
  5729 ;;		Nothing
  5730 ;; This function is called by:
  5731 ;;		_ISR
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           	psect	text36
  5736   001242                     __ptext36:
  5737                           	callstack 0
  5738   001242                     ___fttol:
  5739                           	callstack 24
  5740                           
  5741                           ;incstack = 0
  5742   001242  C003  F005         	movff	___fttol@f1+2,??___fttol
  5743   001246  6A06               	clrf	(??___fttol+1)^0,c
  5744   001248  6A07               	clrf	(??___fttol+2)^0,c
  5745   00124A  3402               	rlcf	(___fttol@f1+1)^0,w,c
  5746   00124C  3605               	rlcf	??___fttol^0,f,c
  5747   00124E  E301               	bnc	u229_41
  5748   001250  8006               	bsf	(??___fttol+1)^0,0,c
  5749   001252                     u229_41:
  5750   001252  5005               	movf	??___fttol^0,w,c
  5751   001254  6E0F               	movwf	___fttol@exp1^0,c
  5752   001256  500F               	movf	___fttol@exp1^0,w,c
  5753   001258  A4D8               	btfss	status,2,c
  5754   00125A  D009               	goto	i2l3186
  5755   00125C                     i2u230_40:
  5756   00125C  0E00               	movlw	0
  5757   00125E  6E01               	movwf	?___fttol^0,c
  5758   001260  0E00               	movlw	0
  5759   001262  6E02               	movwf	(?___fttol+1)^0,c
  5760   001264  0E00               	movlw	0
  5761   001266  6E03               	movwf	(?___fttol+2)^0,c
  5762   001268  0E00               	movlw	0
  5763   00126A  6E04               	movwf	(?___fttol+3)^0,c
  5764   00126C  0012               	return	
  5765   00126E                     i2l3186:
  5766   00126E  0E17               	movlw	23
  5767   001270  6E05               	movwf	??___fttol^0,c
  5768   001272  C001  F006         	movff	___fttol@f1,??___fttol+1
  5769   001276  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  5770   00127A  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  5771   00127E  2805               	incf	??___fttol^0,w,c
  5772   001280  6E09               	movwf	(??___fttol+4)^0,c
  5773   001282  D004               	goto	i2u231_40
  5774   001284                     i2u231_45:
  5775   001284  90D8               	bcf	status,0,c
  5776   001286  3208               	rrcf	(??___fttol+3)^0,f,c
  5777   001288  3207               	rrcf	(??___fttol+2)^0,f,c
  5778   00128A  3206               	rrcf	(??___fttol+1)^0,f,c
  5779   00128C                     i2u231_40:
  5780   00128C  2E09               	decfsz	(??___fttol+4)^0,f,c
  5781   00128E  D7FA               	goto	i2u231_45
  5782   001290  5006               	movf	(??___fttol+1)^0,w,c
  5783   001292  6E0A               	movwf	___fttol@sign1^0,c
  5784   001294  8E02               	bsf	(___fttol@f1+1)^0,7,c
  5785   001296  0EFF               	movlw	255
  5786   001298  1601               	andwf	___fttol@f1^0,f,c
  5787   00129A  0EFF               	movlw	255
  5788   00129C  1602               	andwf	(___fttol@f1+1)^0,f,c
  5789   00129E  0E00               	movlw	0
  5790   0012A0  1603               	andwf	(___fttol@f1+2)^0,f,c
  5791   0012A2  5001               	movf	___fttol@f1^0,w,c
  5792   0012A4  6E0B               	movwf	___fttol@lval^0,c
  5793   0012A6  5002               	movf	(___fttol@f1+1)^0,w,c
  5794   0012A8  6E0C               	movwf	(___fttol@lval+1)^0,c
  5795   0012AA  5003               	movf	(___fttol@f1+2)^0,w,c
  5796   0012AC  6E0D               	movwf	(___fttol@lval+2)^0,c
  5797   0012AE  6A0E               	clrf	(___fttol@lval+3)^0,c
  5798   0012B0  0E8E               	movlw	142
  5799   0012B2  5E0F               	subwf	___fttol@exp1^0,f,c
  5800   0012B4  AE0F               	btfss	___fttol@exp1^0,7,c
  5801   0012B6  D00D               	goto	i2l3208
  5802   0012B8  500F               	movf	___fttol@exp1^0,w,c
  5803   0012BA  0A80               	xorlw	128
  5804   0012BC  0F8F               	addlw	143
  5805   0012BE  A0D8               	btfss	status,0,c
  5806   0012C0  D7CD               	goto	i2u230_40
  5807   0012C2                     i2l3204:
  5808   0012C2  90D8               	bcf	status,0,c
  5809   0012C4  320E               	rrcf	(___fttol@lval+3)^0,f,c
  5810   0012C6  320D               	rrcf	(___fttol@lval+2)^0,f,c
  5811   0012C8  320C               	rrcf	(___fttol@lval+1)^0,f,c
  5812   0012CA  320B               	rrcf	___fttol@lval^0,f,c
  5813   0012CC  3E0F               	incfsz	___fttol@exp1^0,f,c
  5814   0012CE  D7F9               	goto	i2l3204
  5815   0012D0  D00D               	goto	i2u235_40
  5816   0012D2                     i2l3208:
  5817   0012D2  0E17               	movlw	23
  5818   0012D4  640F               	cpfsgt	___fttol@exp1^0,c
  5819   0012D6  D007               	goto	i2l3216
  5820   0012D8  D7C1               	goto	i2u230_40
  5821   0012DA                     i2l3214:
  5822   0012DA  90D8               	bcf	status,0,c
  5823   0012DC  360B               	rlcf	___fttol@lval^0,f,c
  5824   0012DE  360C               	rlcf	(___fttol@lval+1)^0,f,c
  5825   0012E0  360D               	rlcf	(___fttol@lval+2)^0,f,c
  5826   0012E2  360E               	rlcf	(___fttol@lval+3)^0,f,c
  5827   0012E4  060F               	decf	___fttol@exp1^0,f,c
  5828   0012E6                     i2l3216:
  5829   0012E6  500F               	movf	___fttol@exp1^0,w,c
  5830   0012E8  A4D8               	btfss	status,2,c
  5831   0012EA  D7F7               	goto	i2l3214
  5832   0012EC                     i2u235_40:
  5833   0012EC  500A               	movf	___fttol@sign1^0,w,c
  5834   0012EE  B4D8               	btfsc	status,2,c
  5835   0012F0  D008               	goto	i2l3222
  5836   0012F2  1E0E               	comf	(___fttol@lval+3)^0,f,c
  5837   0012F4  1E0D               	comf	(___fttol@lval+2)^0,f,c
  5838   0012F6  1E0C               	comf	(___fttol@lval+1)^0,f,c
  5839   0012F8  6C0B               	negf	___fttol@lval^0,c
  5840   0012FA  0E00               	movlw	0
  5841   0012FC  220C               	addwfc	(___fttol@lval+1)^0,f,c
  5842   0012FE  220D               	addwfc	(___fttol@lval+2)^0,f,c
  5843   001300  220E               	addwfc	(___fttol@lval+3)^0,f,c
  5844   001302                     i2l3222:
  5845   001302  C00B  F001         	movff	___fttol@lval,?___fttol
  5846   001306  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  5847   00130A  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  5848   00130E  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  5849   001312  0012               	return		;funcret
  5850   001314                     __end_of___fttol:
  5851                           	callstack 0
  5852                           
  5853 ;; *************** function ___awtoft *****************
  5854 ;; Defined at:
  5855 ;;		line 32 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awtoft.c"
  5856 ;; Parameters:    Size  Location     Type
  5857 ;;  c               2    8[COMRAM] int 
  5858 ;; Auto vars:     Size  Location     Type
  5859 ;;  sign            1   11[COMRAM] unsigned char 
  5860 ;; Return value:  Size  Location     Type
  5861 ;;                  3    8[COMRAM] float 
  5862 ;; Registers used:
  5863 ;;		wreg, status,2, status,0, cstack
  5864 ;; Tracked objects:
  5865 ;;		On entry : 0/0
  5866 ;;		On exit  : 0/0
  5867 ;;		Unchanged: 0/0
  5868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5869 ;;      Params:         3       0       0       0       0       0       0       0       0
  5870 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5871 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5872 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5873 ;;Total ram usage:        4 bytes
  5874 ;; Hardware stack levels used: 1
  5875 ;; Hardware stack levels required when called: 1
  5876 ;; This function calls:
  5877 ;;		___ftpack
  5878 ;; This function is called by:
  5879 ;;		_ISR
  5880 ;; This function uses a non-reentrant model
  5881 ;;
  5882                           
  5883                           	psect	text37
  5884   001A12                     __ptext37:
  5885                           	callstack 0
  5886   001A12                     ___awtoft:
  5887                           	callstack 23
  5888                           
  5889                           ;incstack = 0
  5890   001A12  6A0C               	clrf	___awtoft@sign^0,c
  5891   001A14  AE0A               	btfss	(___awtoft@c+1)^0,7,c
  5892   001A16  D006               	goto	i2l3176
  5893   001A18  6C09               	negf	___awtoft@c^0,c
  5894   001A1A  1E0A               	comf	(___awtoft@c+1)^0,f,c
  5895   001A1C  B0D8               	btfsc	status,0,c
  5896   001A1E  2A0A               	incf	(___awtoft@c+1)^0,f,c
  5897   001A20  0E01               	movlw	1
  5898   001A22  6E0C               	movwf	___awtoft@sign^0,c
  5899   001A24                     i2l3176:
  5900   001A24  C009  F001         	movff	___awtoft@c,___ftpack@arg
  5901   001A28  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5902   001A2C  6A03               	clrf	(___ftpack@arg+2)^0,c
  5903   001A2E  0E8E               	movlw	142
  5904   001A30  6E04               	movwf	___ftpack@exp^0,c
  5905   001A32  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  5906   001A36  EC8A  F009         	call	___ftpack	;wreg free
  5907   001A3A  C001  F009         	movff	?___ftpack,?___awtoft
  5908   001A3E  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  5909   001A42  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  5910   001A46  0012               	return		;funcret
  5911   001A48                     __end_of___awtoft:
  5912                           	callstack 0
  5913                           
  5914 ;; *************** function ___ftpack *****************
  5915 ;; Defined at:
  5916 ;;		line 62 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\float.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;  arg             3    0[COMRAM] unsigned um
  5919 ;;  exp             1    3[COMRAM] unsigned char 
  5920 ;;  sign            1    4[COMRAM] unsigned char 
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;		None
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  3    0[COMRAM] float 
  5925 ;; Registers used:
  5926 ;;		wreg, status,2, status,0
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5932 ;;      Params:         5       0       0       0       0       0       0       0       0
  5933 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5934 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5935 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5936 ;;Total ram usage:        8 bytes
  5937 ;; Hardware stack levels used: 1
  5938 ;; This function calls:
  5939 ;;		Nothing
  5940 ;; This function is called by:
  5941 ;;		___awtoft
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           	psect	text38
  5946   001314                     __ptext38:
  5947                           	callstack 0
  5948   001314                     ___ftpack:
  5949                           	callstack 23
  5950                           
  5951                           ;incstack = 0
  5952   001314  5004               	movf	___ftpack@exp^0,w,c
  5953   001316  B4D8               	btfsc	status,2,c
  5954   001318  D005               	goto	i2u170_40
  5955   00131A  5001               	movf	___ftpack@arg^0,w,c
  5956   00131C  1002               	iorwf	(___ftpack@arg+1)^0,w,c
  5957   00131E  1003               	iorwf	(___ftpack@arg+2)^0,w,c
  5958   001320  A4D8               	btfss	status,2,c
  5959   001322  D00C               	goto	i2l2704
  5960   001324                     i2u170_40:
  5961   001324  0E00               	movlw	0
  5962   001326  6E01               	movwf	?___ftpack^0,c
  5963   001328  0E00               	movlw	0
  5964   00132A  6E02               	movwf	(?___ftpack+1)^0,c
  5965   00132C  0E00               	movlw	0
  5966   00132E  6E03               	movwf	(?___ftpack+2)^0,c
  5967   001330  0012               	return	
  5968   001332                     i2l2702:
  5969   001332  2A04               	incf	___ftpack@exp^0,f,c
  5970   001334  90D8               	bcf	status,0,c
  5971   001336  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  5972   001338  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  5973   00133A  3201               	rrcf	___ftpack@arg^0,f,c
  5974   00133C                     i2l2704:
  5975   00133C  0E00               	movlw	0
  5976   00133E  1401               	andwf	___ftpack@arg^0,w,c
  5977   001340  6E06               	movwf	??___ftpack^0,c
  5978   001342  0E00               	movlw	0
  5979   001344  1402               	andwf	(___ftpack@arg+1)^0,w,c
  5980   001346  6E07               	movwf	(??___ftpack+1)^0,c
  5981   001348  0EFE               	movlw	254
  5982   00134A  1403               	andwf	(___ftpack@arg+2)^0,w,c
  5983   00134C  6E08               	movwf	(??___ftpack+2)^0,c
  5984   00134E  5006               	movf	??___ftpack^0,w,c
  5985   001350  1007               	iorwf	(??___ftpack+1)^0,w,c
  5986   001352  1008               	iorwf	(??___ftpack+2)^0,w,c
  5987   001354  B4D8               	btfsc	status,2,c
  5988   001356  D00C               	goto	i2l2710
  5989   001358  D7EC               	goto	i2l2702
  5990   00135A                     i2l2706:
  5991   00135A  2A04               	incf	___ftpack@exp^0,f,c
  5992   00135C  0E01               	movlw	1
  5993   00135E  2601               	addwf	___ftpack@arg^0,f,c
  5994   001360  0E00               	movlw	0
  5995   001362  2202               	addwfc	(___ftpack@arg+1)^0,f,c
  5996   001364  0E00               	movlw	0
  5997   001366  2203               	addwfc	(___ftpack@arg+2)^0,f,c
  5998   001368  90D8               	bcf	status,0,c
  5999   00136A  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  6000   00136C  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  6001   00136E  3201               	rrcf	___ftpack@arg^0,f,c
  6002   001370                     i2l2710:
  6003   001370  0E00               	movlw	0
  6004   001372  1401               	andwf	___ftpack@arg^0,w,c
  6005   001374  6E06               	movwf	??___ftpack^0,c
  6006   001376  0E00               	movlw	0
  6007   001378  1402               	andwf	(___ftpack@arg+1)^0,w,c
  6008   00137A  6E07               	movwf	(??___ftpack+1)^0,c
  6009   00137C  0EFF               	movlw	255
  6010   00137E  1403               	andwf	(___ftpack@arg+2)^0,w,c
  6011   001380  6E08               	movwf	(??___ftpack+2)^0,c
  6012   001382  5006               	movf	??___ftpack^0,w,c
  6013   001384  1007               	iorwf	(??___ftpack+1)^0,w,c
  6014   001386  1008               	iorwf	(??___ftpack+2)^0,w,c
  6015   001388  B4D8               	btfsc	status,2,c
  6016   00138A  D006               	goto	i2l2714
  6017   00138C  D7E6               	goto	i2l2706
  6018   00138E                     i2l2712:
  6019   00138E  0604               	decf	___ftpack@exp^0,f,c
  6020   001390  90D8               	bcf	status,0,c
  6021   001392  3601               	rlcf	___ftpack@arg^0,f,c
  6022   001394  3602               	rlcf	(___ftpack@arg+1)^0,f,c
  6023   001396  3603               	rlcf	(___ftpack@arg+2)^0,f,c
  6024   001398                     i2l2714:
  6025   001398  BE02               	btfsc	(___ftpack@arg+1)^0,7,c
  6026   00139A  D003               	goto	i2u174_40
  6027   00139C  0E02               	movlw	2
  6028   00139E  6004               	cpfslt	___ftpack@exp^0,c
  6029   0013A0  D7F6               	goto	i2l2712
  6030   0013A2                     i2u174_40:
  6031   0013A2  A004               	btfss	___ftpack@exp^0,0,c
  6032   0013A4  9E02               	bcf	(___ftpack@arg+1)^0,7,c
  6033   0013A6  90D8               	bcf	status,0,c
  6034   0013A8  3204               	rrcf	___ftpack@exp^0,f,c
  6035   0013AA  5004               	movf	___ftpack@exp^0,w,c
  6036   0013AC  1203               	iorwf	(___ftpack@arg+2)^0,f,c
  6037   0013AE  5005               	movf	___ftpack@sign^0,w,c
  6038   0013B0  A4D8               	btfss	status,2,c
  6039   0013B2  8E03               	bsf	(___ftpack@arg+2)^0,7,c
  6040   0013B4  C001  F001         	movff	___ftpack@arg,?___ftpack
  6041   0013B8  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  6042   0013BC  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  6043   0013C0  0012               	return		;funcret
  6044   0013C2                     __end_of___ftpack:
  6045                           	callstack 0
  6046                           
  6047 ;; *************** function _TransmitirVar *****************
  6048 ;; Defined at:
  6049 ;;		line 667 in file "Lab6.c"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;  buffer          2    1[COMRAM] PTR unsigned char 
  6052 ;;		 -> STR_8(20), STR_7(15), ISR@numAscii(0), 
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;		None
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  1    wreg      void 
  6057 ;; Registers used:
  6058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6064 ;;      Params:         2       0       0       0       0       0       0       0       0
  6065 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6067 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6068 ;;Total ram usage:        2 bytes
  6069 ;; Hardware stack levels used: 1
  6070 ;; Hardware stack levels required when called: 1
  6071 ;; This function calls:
  6072 ;;		_Transmitir
  6073 ;; This function is called by:
  6074 ;;		_ISR
  6075 ;; This function uses a non-reentrant model
  6076 ;;
  6077                           
  6078                           	psect	text39
  6079   001880                     __ptext39:
  6080                           	callstack 0
  6081   001880                     _TransmitirVar:
  6082                           	callstack 23
  6083                           
  6084                           ;Lab6.c: 668: while (*buffer) {
  6085                           
  6086                           ;incstack = 0
  6087   001880  D014               	goto	i2l3166
  6088   001882                     i2l3162:
  6089                           
  6090                           ;Lab6.c: 669: Transmitir(*buffer);
  6091   001882  C002  FFF6         	movff	TransmitirVar@buffer,tblptrl
  6092   001886  C003  FFF7         	movff	TransmitirVar@buffer+1,tblptrh
  6093   00188A  6AF8               	clrf	tblptru,c
  6094   00188C  0E07               	movlw	(high __ramtop+-1)
  6095   00188E  64F7               	cpfsgt	tblptrh,c
  6096   001890  D003               	bra	i2u225_47
  6097   001892  0008               	tblrd		*
  6098   001894  50F5               	movf	tablat,w,c
  6099   001896  D005               	bra	i2u225_40
  6100   001898                     i2u225_47:
  6101   001898  CFF6 FFD9          	movff	tblptrl,fsr2l
  6102   00189C  CFF7 FFDA          	movff	tblptrh,fsr2h
  6103   0018A0  50DF               	movf	indf2,w,c
  6104   0018A2                     i2u225_40:
  6105   0018A2  ECE9  F00D         	call	_Transmitir
  6106                           
  6107                           ;Lab6.c: 670: buffer++;
  6108   0018A6  4A02               	infsnz	TransmitirVar@buffer^0,f,c
  6109   0018A8  2A03               	incf	(TransmitirVar@buffer+1)^0,f,c
  6110   0018AA                     i2l3166:
  6111   0018AA  C002  FFF6         	movff	TransmitirVar@buffer,tblptrl
  6112   0018AE  C003  FFF7         	movff	TransmitirVar@buffer+1,tblptrh
  6113   0018B2  6AF8               	clrf	tblptru,c
  6114   0018B4  0E07               	movlw	(high __ramtop+-1)
  6115   0018B6  64F7               	cpfsgt	tblptrh,c
  6116   0018B8  D003               	bra	i2u226_47
  6117   0018BA  0008               	tblrd		*
  6118   0018BC  50F5               	movf	tablat,w,c
  6119   0018BE  D005               	bra	i2u226_40
  6120   0018C0                     i2u226_47:
  6121   0018C0  CFF6 FFD9          	movff	tblptrl,fsr2l
  6122   0018C4  CFF7 FFDA          	movff	tblptrh,fsr2h
  6123   0018C8  50DF               	movf	indf2,w,c
  6124   0018CA                     i2u226_40:
  6125   0018CA  0900               	iorlw	0
  6126   0018CC  B4D8               	btfsc	status,2,c
  6127   0018CE  0012               	return	
  6128   0018D0  D7D8               	goto	i2l3162
  6129   0018D2                     __end_of_TransmitirVar:
  6130                           	callstack 0
  6131                           
  6132 ;; *************** function _Transmitir *****************
  6133 ;; Defined at:
  6134 ;;		line 662 in file "Lab6.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;  BufferT         1    wreg     unsigned char 
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;  BufferT         1    0[COMRAM] unsigned char 
  6139 ;; Return value:  Size  Location     Type
  6140 ;;                  1    wreg      void 
  6141 ;; Registers used:
  6142 ;;		wreg
  6143 ;; Tracked objects:
  6144 ;;		On entry : 0/0
  6145 ;;		On exit  : 0/0
  6146 ;;		Unchanged: 0/0
  6147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6148 ;;      Params:         0       0       0       0       0       0       0       0       0
  6149 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6150 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6151 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6152 ;;Total ram usage:        1 bytes
  6153 ;; Hardware stack levels used: 1
  6154 ;; This function calls:
  6155 ;;		Nothing
  6156 ;; This function is called by:
  6157 ;;		_ISR
  6158 ;;		_TransmitirVar
  6159 ;; This function uses a non-reentrant model
  6160 ;;
  6161                           
  6162                           	psect	text40
  6163   001BD2                     __ptext40:
  6164                           	callstack 0
  6165   001BD2                     _Transmitir:
  6166                           	callstack 23
  6167                           
  6168                           ;incstack = 0
  6169                           ;Transmitir@BufferT stored from wreg
  6170   001BD2  6E01               	movwf	Transmitir@BufferT^0,c
  6171   001BD4                     
  6172                           ;Lab6.c: 663: while(TRMT == 0);
  6173   001BD4  A2AC               	btfss	4012,1,c	;volatile
  6174   001BD6  D7FE               	goto	i2l2690
  6175                           
  6176                           ;Lab6.c: 664: TXREG = BufferT;
  6177   001BD8  C001  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  6178   001BDC  0012               	return		;funcret
  6179   001BDE                     __end_of_Transmitir:
  6180                           	callstack 0
  6181                           
  6182 ;; *************** function _ConversionADC *****************
  6183 ;; Defined at:
  6184 ;;		line 674 in file "Lab6.c"
  6185 ;; Parameters:    Size  Location     Type
  6186 ;;  canal           1    wreg     unsigned char 
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;  canal           1    0[COMRAM] unsigned char 
  6189 ;; Return value:  Size  Location     Type
  6190 ;;                  1    wreg      unsigned char 
  6191 ;; Registers used:
  6192 ;;		wreg, status,2, status,0
  6193 ;; Tracked objects:
  6194 ;;		On entry : 0/0
  6195 ;;		On exit  : 0/0
  6196 ;;		Unchanged: 0/0
  6197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6198 ;;      Params:         0       0       0       0       0       0       0       0       0
  6199 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6201 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6202 ;;Total ram usage:        1 bytes
  6203 ;; Hardware stack levels used: 1
  6204 ;; This function calls:
  6205 ;;		Nothing
  6206 ;; This function is called by:
  6207 ;;		_ISR
  6208 ;; This function uses a non-reentrant model
  6209 ;;
  6210                           
  6211                           	psect	text41
  6212   001AEA                     __ptext41:
  6213                           	callstack 0
  6214   001AEA                     _ConversionADC:
  6215                           	callstack 24
  6216                           
  6217                           ;incstack = 0
  6218                           ;ConversionADC@canal stored from wreg
  6219   001AEA  6E01               	movwf	ConversionADC@canal^0,c
  6220                           
  6221                           ;Lab6.c: 675: if(canal > 12)
  6222   001AEC  0E0C               	movlw	12
  6223   001AEE  6401               	cpfsgt	ConversionADC@canal^0,c
  6224   001AF0  D002               	goto	i2l3134
  6225                           
  6226                           ;Lab6.c: 676: return 0;
  6227   001AF2  0E00               	movlw	0
  6228   001AF4  0012               	return	
  6229   001AF6                     i2l3134:
  6230                           
  6231                           ;Lab6.c: 678: ADCON0=(canal<<2)|0b00000001;
  6232   001AF6  4401               	rlncf	ConversionADC@canal^0,w,c
  6233   001AF8  46E8               	rlncf	wreg,f,c
  6234   001AFA  0BFC               	andlw	252
  6235   001AFC  0901               	iorlw	1
  6236   001AFE  6EC2               	movwf	194,c	;volatile
  6237                           
  6238                           ;Lab6.c: 679: GO=1;
  6239   001B00  82C2               	bsf	4034,1,c	;volatile
  6240   001B02                     i2l451:
  6241   001B02  B2C2               	btfsc	4034,1,c	;volatile
  6242   001B04  D7FE               	goto	i2l451
  6243                           
  6244                           ;Lab6.c: 681: return ADRESH;
  6245   001B06  50C4               	movf	196,w,c	;volatile
  6246   001B08  0012               	return		;funcret
  6247   001B0A                     __end_of_ConversionADC:
  6248                           	callstack 0
  6249                           
  6250                           	psect	rparam
  6251   000001                     ___rparam_used  equ	1
  6252   000000                     ___param_bank   equ	0
  6253   000000                     __Lparam        equ	__Lrparam
  6254   000000                     __Hparam        equ	__Hrparam
  6255                           
  6256                           	psect	temp
  6257   00003F                     btemp:
  6258                           	callstack 0
  6259   00003F                     	ds	1
  6260   00003F                     int$flags       set	btemp
  6261   000040                     wtemp8          set	btemp+1
  6262   000040                     ttemp5          set	btemp+1
  6263   000043                     ttemp6          set	btemp+4
  6264   000047                     ttemp7          set	btemp+8
  6265                           
  6266                           	psect	idloc
  6267                           
  6268                           ;Config register IDLOC0 @ 0x200000
  6269                           ;	unspecified, using default values
  6270   200000                     	org	2097152
  6271   200000  FF                 	db	255
  6272                           
  6273                           ;Config register IDLOC1 @ 0x200001
  6274                           ;	unspecified, using default values
  6275   200001                     	org	2097153
  6276   200001  FF                 	db	255
  6277                           
  6278                           ;Config register IDLOC2 @ 0x200002
  6279                           ;	unspecified, using default values
  6280   200002                     	org	2097154
  6281   200002  FF                 	db	255
  6282                           
  6283                           ;Config register IDLOC3 @ 0x200003
  6284                           ;	unspecified, using default values
  6285   200003                     	org	2097155
  6286   200003  FF                 	db	255
  6287                           
  6288                           ;Config register IDLOC4 @ 0x200004
  6289                           ;	unspecified, using default values
  6290   200004                     	org	2097156
  6291   200004  FF                 	db	255
  6292                           
  6293                           ;Config register IDLOC5 @ 0x200005
  6294                           ;	unspecified, using default values
  6295   200005                     	org	2097157
  6296   200005  FF                 	db	255
  6297                           
  6298                           ;Config register IDLOC6 @ 0x200006
  6299                           ;	unspecified, using default values
  6300   200006                     	org	2097158
  6301   200006  FF                 	db	255
  6302                           
  6303                           ;Config register IDLOC7 @ 0x200007
  6304                           ;	unspecified, using default values
  6305   200007                     	org	2097159
  6306   200007  FF                 	db	255
  6307                           
  6308                           	psect	config
  6309                           
  6310                           ;Config register CONFIG1L @ 0x300000
  6311                           ;	unspecified, using default values
  6312                           ;	PLL Prescaler Selection bits
  6313                           ;	PLLDIV = 0x0, unprogrammed default
  6314                           ;	System Clock Postscaler Selection bits
  6315                           ;	CPUDIV = 0x0, unprogrammed default
  6316                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  6317                           ;	USBDIV = 0x0, unprogrammed default
  6318   300000                     	org	3145728
  6319   300000  00                 	db	0
  6320                           
  6321                           ;Config register CONFIG1H @ 0x300001
  6322                           ;	Oscillator Selection bits
  6323                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  6324                           ;	Fail-Safe Clock Monitor Enable bit
  6325                           ;	FCMEN = 0x0, unprogrammed default
  6326                           ;	Internal/External Oscillator Switchover bit
  6327                           ;	IESO = 0x0, unprogrammed default
  6328   300001                     	org	3145729
  6329   300001  09                 	db	9
  6330                           
  6331                           ;Config register CONFIG2L @ 0x300002
  6332                           ;	unspecified, using default values
  6333                           ;	Power-up Timer Enable bit
  6334                           ;	PWRT = 0x1, unprogrammed default
  6335                           ;	Brown-out Reset Enable bits
  6336                           ;	BOR = 0x3, unprogrammed default
  6337                           ;	Brown-out Reset Voltage bits
  6338                           ;	BORV = 0x3, unprogrammed default
  6339                           ;	USB Voltage Regulator Enable bit
  6340                           ;	VREGEN = 0x0, unprogrammed default
  6341   300002                     	org	3145730
  6342   300002  1F                 	db	31
  6343                           
  6344                           ;Config register CONFIG2H @ 0x300003
  6345                           ;	Watchdog Timer Enable bit
  6346                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6347                           ;	Watchdog Timer Postscale Select bits
  6348                           ;	WDTPS = 0xF, unprogrammed default
  6349   300003                     	org	3145731
  6350   300003  1E                 	db	30
  6351                           
  6352                           ; Padding undefined space
  6353   300004                     	org	3145732
  6354   300004  FF                 	db	255
  6355                           
  6356                           ;Config register CONFIG3H @ 0x300005
  6357                           ;	CCP2 MUX bit
  6358                           ;	CCP2MX = 0x1, unprogrammed default
  6359                           ;	PORTB A/D Enable bit
  6360                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  6361                           ;	Low-Power Timer 1 Oscillator Enable bit
  6362                           ;	LPT1OSC = 0x0, unprogrammed default
  6363                           ;	MCLR Pin Enable bit
  6364                           ;	MCLRE = 0x1, unprogrammed default
  6365   300005                     	org	3145733
  6366   300005  81                 	db	129
  6367                           
  6368                           ;Config register CONFIG4L @ 0x300006
  6369                           ;	Stack Full/Underflow Reset Enable bit
  6370                           ;	STVREN = 0x1, unprogrammed default
  6371                           ;	Single-Supply ICSP Enable bit
  6372                           ;	LVP = OFF, Single-Supply ICSP disabled
  6373                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  6374                           ;	ICPRT = 0x0, unprogrammed default
  6375                           ;	Extended Instruction Set Enable bit
  6376                           ;	XINST = 0x0, unprogrammed default
  6377                           ;	Background Debugger Enable bit
  6378                           ;	DEBUG = 0x1, unprogrammed default
  6379   300006                     	org	3145734
  6380   300006  81                 	db	129
  6381                           
  6382                           ; Padding undefined space
  6383   300007                     	org	3145735
  6384   300007  FF                 	db	255
  6385                           
  6386                           ;Config register CONFIG5L @ 0x300008
  6387                           ;	unspecified, using default values
  6388                           ;	Code Protection bit
  6389                           ;	CP0 = 0x1, unprogrammed default
  6390                           ;	Code Protection bit
  6391                           ;	CP1 = 0x1, unprogrammed default
  6392                           ;	Code Protection bit
  6393                           ;	CP2 = 0x1, unprogrammed default
  6394                           ;	Code Protection bit
  6395                           ;	CP3 = 0x1, unprogrammed default
  6396   300008                     	org	3145736
  6397   300008  0F                 	db	15
  6398                           
  6399                           ;Config register CONFIG5H @ 0x300009
  6400                           ;	unspecified, using default values
  6401                           ;	Boot Block Code Protection bit
  6402                           ;	CPB = 0x1, unprogrammed default
  6403                           ;	Data EEPROM Code Protection bit
  6404                           ;	CPD = 0x1, unprogrammed default
  6405   300009                     	org	3145737
  6406   300009  C0                 	db	192
  6407                           
  6408                           ;Config register CONFIG6L @ 0x30000A
  6409                           ;	unspecified, using default values
  6410                           ;	Write Protection bit
  6411                           ;	WRT0 = 0x1, unprogrammed default
  6412                           ;	Write Protection bit
  6413                           ;	WRT1 = 0x1, unprogrammed default
  6414                           ;	Write Protection bit
  6415                           ;	WRT2 = 0x1, unprogrammed default
  6416                           ;	Write Protection bit
  6417                           ;	WRT3 = 0x1, unprogrammed default
  6418   30000A                     	org	3145738
  6419   30000A  0F                 	db	15
  6420                           
  6421                           ;Config register CONFIG6H @ 0x30000B
  6422                           ;	unspecified, using default values
  6423                           ;	Configuration Register Write Protection bit
  6424                           ;	WRTC = 0x1, unprogrammed default
  6425                           ;	Boot Block Write Protection bit
  6426                           ;	WRTB = 0x1, unprogrammed default
  6427                           ;	Data EEPROM Write Protection bit
  6428                           ;	WRTD = 0x1, unprogrammed default
  6429   30000B                     	org	3145739
  6430   30000B  E0                 	db	224
  6431                           
  6432                           ;Config register CONFIG7L @ 0x30000C
  6433                           ;	unspecified, using default values
  6434                           ;	Table Read Protection bit
  6435                           ;	EBTR0 = 0x1, unprogrammed default
  6436                           ;	Table Read Protection bit
  6437                           ;	EBTR1 = 0x1, unprogrammed default
  6438                           ;	Table Read Protection bit
  6439                           ;	EBTR2 = 0x1, unprogrammed default
  6440                           ;	Table Read Protection bit
  6441                           ;	EBTR3 = 0x1, unprogrammed default
  6442   30000C                     	org	3145740
  6443   30000C  0F                 	db	15
  6444                           
  6445                           ;Config register CONFIG7H @ 0x30000D
  6446                           ;	unspecified, using default values
  6447                           ;	Boot Block Table Read Protection bit
  6448                           ;	EBTRB = 0x1, unprogrammed default
  6449   30000D                     	org	3145741
  6450   30000D  40                 	db	64
  6451                           tosu	equ	0xFFF
  6452                           tosh	equ	0xFFE
  6453                           tosl	equ	0xFFD
  6454                           stkptr	equ	0xFFC
  6455                           pclatu	equ	0xFFB
  6456                           pclath	equ	0xFFA
  6457                           pcl	equ	0xFF9
  6458                           tblptru	equ	0xFF8
  6459                           tblptrh	equ	0xFF7
  6460                           tblptrl	equ	0xFF6
  6461                           tablat	equ	0xFF5
  6462                           prodh	equ	0xFF4
  6463                           prodl	equ	0xFF3
  6464                           indf0	equ	0xFEF
  6465                           postinc0	equ	0xFEE
  6466                           postdec0	equ	0xFED
  6467                           preinc0	equ	0xFEC
  6468                           plusw0	equ	0xFEB
  6469                           fsr0h	equ	0xFEA
  6470                           fsr0l	equ	0xFE9
  6471                           wreg	equ	0xFE8
  6472                           indf1	equ	0xFE7
  6473                           postinc1	equ	0xFE6
  6474                           postdec1	equ	0xFE5
  6475                           preinc1	equ	0xFE4
  6476                           plusw1	equ	0xFE3
  6477                           fsr1h	equ	0xFE2
  6478                           fsr1l	equ	0xFE1
  6479                           bsr	equ	0xFE0
  6480                           indf2	equ	0xFDF
  6481                           postinc2	equ	0xFDE
  6482                           postdec2	equ	0xFDD
  6483                           preinc2	equ	0xFDC
  6484                           plusw2	equ	0xFDB
  6485                           fsr2h	equ	0xFDA
  6486                           fsr2l	equ	0xFD9
  6487                           status	equ	0xFD8

Data Sizes:
    Strings     143
    Constant    16
    Data        3
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     41      62
    BANK0           160      7       7
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    aux	PTR unsigned char [1] size(1) Largest target is 17
		 -> STR_1(CODE[17]), 

    CrearCaracter@data	PTR const unsigned char  size(1) Largest target is 8
		 -> banda1(CODE[8]), banda2(CODE[8]), 

    FIN	PTR unsigned char [1] size(1) Largest target is 16
		 -> STR_2(CODE[16]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_10(CODE[11]), STR_2(CODE[16]), STR_3(CODE[11]), 
		 -> STR_4(CODE[16]), STR_5(CODE[12]), STR_6(CODE[11]), STR_9(CODE[14]), 

    numASCII@ascii_values	PTR unsigned char  size(2) Largest target is 0
		 -> ISR@numAscii(COMRAM[0]), 

    TransmitirVar@buffer	PTR unsigned char  size(2) Largest target is 20
		 -> ISR@numAscii(COMRAM[0]), STR_7(CODE[15]), STR_8(CODE[20]), 


Critical Paths under _main in COMRAM

    _main->_Bienvenida
    _main->_EscribeLCD_n8
    _MostrarNumeros->___lbmod
    _MedirDistancia->___lwdiv
    _EscribeLCD_n8->___lbdiv
    ___lbdiv->___lbmod
    _Emergencia->_MensajeLCD_Var
    _MensajeLCD_Var->_EscribeLCD_c
    _Bienvenida->_CrearCaracter
    _OcultarCursorLCD->_EnviaDato
    _MostrarCursorLCD->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _CrearCaracter->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->___fttol
    i2_MostrarNumeros->i2___lbmod
    i2_MedirDistancia->i2___lwdiv
    i2_EscribeLCD_n8->i2___lbdiv
    i2___lbdiv->i2___lbmod
    i2_EscribeLCD_c->i2_EnviaDato
    i2_DireccionaLCD->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD
    _numASCII->___awdiv
    ___awtoft->___awdiv
    ___awtoft->___ftpack
    _TransmitirVar->_Transmitir

Critical Paths under _main in BANK0

    _main->_EscribeLCD_n8

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7792
                                              4 BANK0      3     3      0
                         _Bienvenida
                           _BorraLCD
                       _ConfiguraLCD
                      _DireccionaLCD
                         _Emergencia
                      _EscribeLCD_n8
                      _InicializaLCD
                     _MedirDistancia
                     _MensajeLCD_Var
                   _MostrarCursorLCD
                     _MostrarNumeros
                   _OcultarCursorLCD
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (1) _MostrarNumeros                                       0     0      0     272
                            ___lbmod
 ---------------------------------------------------------------------------------
 (1) _MedirDistancia                                       1     1      0     287
                                             39 COMRAM     1     1      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     247
                                             32 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _EscribeLCD_n8                                        5     4      1    1305
                                             40 COMRAM     1     0      1
                                              0 BANK0      4     4      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1     272
                                             32 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     272
                                             36 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Emergencia                                           0     0      0     888
                           _BorraLCD
                      _DireccionaLCD
                     _MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       1     0      1     371
                                             37 COMRAM     1     0      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (1) _Bienvenida                                           3     3      0    2490
                                             40 COMRAM     1     1      0
                                              0 BANK0      2     2      0
                       _ConfiguraLCD
                      _CrearCaracter
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                   _MostrarCursorLCD
                   _OcultarCursorLCD
 ---------------------------------------------------------------------------------
 (1) _OcultarCursorLCD                                     0     0      0     235
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _MostrarCursorLCD                                     0     0      0     235
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     470
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     235
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0     282
                                             36 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     282
                                             36 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _CrearCaracter                                        4     3      1     418
                                             36 COMRAM     4     3      1
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _EnviaDato                                            2     2      0     188
                                             34 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _RetardoLCD                                           2     2      0      47
                                             32 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0     141
                                             32 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                 17    17      0    3884
                                             15 COMRAM    17    17      0
                      _ConversionADC
                         _Transmitir
                      _TransmitirVar
                            ___awdiv
                           ___awtoft
                            ___fttol
                           _numASCII
                    i2_DireccionaLCD
                     i2_EscribeLCD_c
                    i2_EscribeLCD_n8
                   i2_MedirDistancia
                   i2_MostrarNumeros
                          i2___lbdiv
 ---------------------------------------------------------------------------------
 (7) i2_MostrarNumeros                                     0     0      0     173
                          i2___lbmod
 ---------------------------------------------------------------------------------
 (7) i2_MedirDistancia                                     1     1      0     189
                                              7 COMRAM     1     1      0
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (8) i2___lwdiv                                            7     3      4     164
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) i2_EscribeLCD_n8                                      5     4      1     836
                                              8 COMRAM     5     4      1
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
                          i2___lbdiv
                          i2___lbmod
 ---------------------------------------------------------------------------------
 (8) i2___lbmod                                            4     3      1     173
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (7) i2___lbdiv                                            4     3      1     174
                                              4 COMRAM     4     3      1
                          i2___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (7) i2_EscribeLCD_c                                       1     1      0     174
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) i2_DireccionaLCD                                      1     1      0     174
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_EnviaDato                                          2     2      0     116
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_RetardoLCD                                         2     2      0      29
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _numASCII                                             4     0      4     914
                                              8 COMRAM     4     0      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     306
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) ___fttol                                             15    11      4     253
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (7) ___awtoft                                             4     1      3     326
                                              8 COMRAM     4     1      3
                            ___awdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (8) ___ftpack                                             8     3      5     234
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (7) _TransmitirVar                                        2     0      2      77
                                              1 COMRAM     2     0      2
                         _Transmitir
 ---------------------------------------------------------------------------------
 (8) _Transmitir                                           1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ConversionADC                                        1     1      0      58
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Bienvenida
     _ConfiguraLCD
     _CrearCaracter
       _EnviaDato
         _HabilitaLCD
         _RetardoLCD
       _HabilitaLCD
       _RetardoLCD
     _DireccionaLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _EscribeLCD_c
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _InicializaLCD
       _BorraLCD
         _EnviaDato
         _HabilitaLCD
         _RetardoLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _MostrarCursorLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _OcultarCursorLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
   _BorraLCD
   _ConfiguraLCD
   _DireccionaLCD
   _Emergencia
     _BorraLCD
     _DireccionaLCD
     _MensajeLCD_Var
       _EscribeLCD_c
   _EscribeLCD_n8
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
     ___lbdiv
       ___lbmod (ARG)
     ___lbmod
   _InicializaLCD
   _MedirDistancia
     ___lwdiv
   _MensajeLCD_Var
   _MostrarCursorLCD
   _MostrarNumeros
     ___lbmod
   _OcultarCursorLCD
   ___lbdiv
   ___lbmod

 _ISR (ROOT)
   _ConversionADC
   _Transmitir
   _TransmitirVar
     _Transmitir
   ___awdiv
   ___awtoft
     ___awdiv (ARG)
     ___ftpack (ARG)
   ___fttol
   _numASCII
     ___awdiv
     ___awmod
   i2_DireccionaLCD
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_EscribeLCD_c
     i2_EnviaDato
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_EscribeLCD_n8
     i2_EnviaDato
     i2_HabilitaLCD
     i2_RetardoLCD
     i2___lbdiv
       i2___lbmod (ARG)
     i2___lbmod
   i2_MedirDistancia
     i2___lwdiv
   i2_MostrarNumeros
     i2___lbmod
   i2___lbdiv

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      7       7      4.4%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     41      62     66.0%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
BITBIGSFRll         33      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      69      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Mar 07 11:30:29 2025

       Transmitir@BufferT 0001                        _GO 7E11          i2DireccionaLCD@a 0005  
                      _RI 7E84          i2EscribeLCD_n8@a 000D          i2EscribeLCD_n8@b 0009  
            ___awdiv@sign 0006                EnviaDato@a 0024                        _ok 0035  
      i2___lwdiv@dividend 0001             _InicializaLCD 13C2                       l320 0DBA  
                     l470 150E                       l463 14F8                       l468 150C  
                     l978 1824                       _GIE 7F97                       _FIN 003C  
                     _RC0 7C10                       _RC1 7C11                       _RB4 7C0C  
                     _RB5 7C0D                       _RB6 7C0E                       _RB7 7C0F  
                     _PR2 0FCB                       _ISR 0008                       _aux 003D  
            ___awmod@sign 0006                       wreg 0FE8                      ?_ISR 0001  
                    ISR@d 001A          ??i2_EscribeLCD_c 0005                      l4006 1004  
                    l4022 1074                      l4040 0EAE                      l4122 1520  
                    l4060 0F1E                      l4300 0DBC                      l4046 0ED0  
                    l4126 1534                      l4150 1770                      l4142 1758  
                    l4222 0CC8                      l4048 0EDC                      l4128 154C  
                    l4216 0CBE                      l4066 0F38                      l4154 177C  
                    l4146 1764                      l4138 174C                      l4242 0CEE  
                    l4084 0F84                      l4324 0E16                      l4326 0E1A  
                    l4254 0D10                      l4246 0CF6                      l4096 1A6E  
                    l4264 0D42                      l3810 13D4                      l4346 0E66  
                    l3820 13F2                      l3830 1410                      l4286 0D88  
                    l3760 16AE                      l3762 16B8                      l3906 164C  
                    l3850 1448                      l3756 168C                      l3780 1910  
                    l3860 1A9C                      l3940 19CE                      l3932 19B8  
                    l3758 169C                      l3766 16C2                      l3864 1AAE  
                    l3928 19B2                      l3944 19D6                      l3960 1A92  
                    l3952 1A7A                      l3972 17F2                      l3990 0F92  
                    l3974 17FA                      l3984 181A                      l3996 0FB6  
                    STR_1 0825                      STR_2 0836                      STR_3 0895  
                    STR_4 0846                      STR_5 0873                      STR_6 087F  
                    STR_7 0856                      STR_8 0811                      STR_9 0865  
                    _LATA 0F89                      _LATB 0F8A                      _LATC 0F8B  
                    _LATD 0F8C                      _LATE 0F8D                      u3300 17FE  
                    u3180 1B1C                      u3260 19BC                      u3360 1502  
                    u3390 1516                      u3707 0E54                      u3717 0EC2  
                    u3807 16BA                      u3727 0EF0                      _RBIE 7F93  
                    _RBIF 7F90                      u3817 1BBA                      u3737 0F10  
                    u3657 0CB0                      u3747 0F54                      u3667 0D32  
                    u3757 0F74                      u3677 0D9E                      u3767 1692  
                    u3687 0DDC                      u3777 169E                      u3697 0E0C  
                    u3787 16A6                      u3797 16B0                      _RBPU 7F8F  
                    _TMR0 0FD6                      _TMR1 0FCE                      _TMR2 0FCC  
                    _TRMT 7D61            ??_EscribeLCD_c 0025                      _main 0C14  
            ___ftpack@arg 0001              ___ftpack@exp 0004        i2___lwdiv@quotient 0005  
                    fsr2h 0FDA                      indf2 0FDF                      fsr2l 0FD9  
                    btemp 003F                _Bienvenida 0E80                      prodh 0FF4  
                    prodl 0FF3                      start 000E            CrearCaracter@i 0028  
            ___param_bank 0000                     ??_ISR 0010              ___fttol@exp1 000F  
            ___fttol@lval 000B           i2_DireccionaLCD 1B64         ??i2_EscribeLCD_n8 000A  
          ?_InicializaLCD 0001                     ?_main 0001           __end_of___awdiv 14E0  
         __end_of___lbdiv 19DA                     STR_10 088A                     _CCPR2 0FBB  
         __end_of___awmod 162E             EscribeLCD_c@a 0025           __end_of___lbmod 1A9A  
                   _T0CON 0FD5           ___awdiv@divisor 0003                     _T1CON 0FCD  
         __end_of___fttol 1314                     _T2CON 0FCA                     _LATA1 7C49  
                   _LATA2 7C4A                     _LATA3 7C4B                     _LATA4 7C4C  
                   _LATA5 7C4D           __end_of___lwdiv 182E                     i2l351 0A38  
                   i2l361 0A90                     i2l370 0AF4                     i2l354 0A44  
                   i2l451 1B02                     i2l339 09F4                     i2l364 0AAC  
                   i2l373 0B18                     i2l349 0A1E                     i2l470 157E  
                   i2l390 0BB2                     i2l358 0A74                     i2l463 1568  
                   i2l384 0B7A                     i2l376 0B34                     i2l387 0B96  
                   i2l379 0B50                     i2l468 157C                     i2l397 0BF0  
         ___awdiv@counter 0005                     i2l978 1876                     _RCSTA 0FAB  
    numASCII@ascii_values 000B                     _SPBRG 0FAF                     _PORTB 0F81  
                   _TRISA 0F92                     _TRISB 0F93                     _TRISD 0F95  
                   _TRISE 0F96                     _TXREG 0FAD                     _TXSTA 0FAC  
              _Emergencia 1A48           ??_EscribeLCD_n8 002A                     _Tecla 003B  
           ___awtoft@sign 000C                     _block 0036                     _input 0037  
         ??_ConversionADC 0001             ___ftpack@sign 0005                     tablat 0FF5  
             _HabilitaLCD 1BB6                     ttemp5 0040                     ttemp6 0043  
                   ttemp7 0047           ??_TransmitirVar 0004                     status 0FD8  
                   wtemp8 0040             i2___lbmod@rem 0004           ___lbdiv@divisor 0025  
         ___lbdiv@counter 0027          __end_of_BorraLCD 1BB6           __initialization 196A  
         _Iniciarpregunta 0034              __end_of_main 0E80                    ??_main 0064  
    __end_of_ConfiguraLCD 1B22             ___fttol@sign1 000A             __activetblptr 0002  
   __end_of_CrearCaracter 1688                    ISR@dis 0020                    _ADCON0 0FC2  
                  _ADCON1 0FC1                    _ADCON2 0FC0                    _CCP2IF 7D08  
                  _ADRESH 0FC4            DireccionaLCD@a 0025                    _CCPR1L 0FBE  
          EscribeLCD_n8@a 0063            EscribeLCD_n8@b 0029          ___awdiv@dividend 0001  
        __end_of___awtoft 1A48          __end_of___ftpack 13C2                    i2l3204 12C2  
                  i2l3300 17D0                    i2l3134 1AF6                    i2l3222 1302  
                  i2l3214 12DA                    i2l3216 12E6                    i2l3208 12D2  
                  i2l3152 1206                    i2l3162 1882                    i2l3146 119E  
                  i2l3242 10B0                    i2l3252 10F6                    i2l3236 1090  
                  i2l3332 15A4                    i2l3166 18AA                    i2l2710 1370  
                  i2l2702 1332                    i2l3334 15BC                    i2l2712 138E  
                  i2l2704 133C                    i2l3176 1A24                    i2l2560 1704  
                  i2l3328 1590                    i2l2714 1398                    i2l2706 135A  
                  i2l3186 126E                    i2l2802 1616                    i2l2562 170E  
                  i2l2556 16E2                    i2l3268 115A                    i2l3292 17B8  
                  i2l3284 17A0                    i2l3612 0A18                    i2l2750 1496  
                  i2l2806 1624                    i2l2558 16F2                    i2l2566 1718  
                  i2l2910 1A06                    i2l2902 19F0                    i2l2752 149E  
                  i2l2744 1480                    i2l3296 17C4                    i2l3288 17AC  
                  i2l2690 1BD4                    i2l2770 14D6                    i2l2762 14BE  
                  i2l2738 1470                    i2l2914 1A0E                    i2l2930 1AE2  
                  i2l2922 1ACA                    i2l3730 0BBA                    i2l3660 0AC8  
                  i2l3628 0A54                    i2l2766 14C8                    i2l2790 15EC  
                  i2l2782 15D2                    i2l2942 1844                    i2l3742 0BDE  
                  i2l3662 0ACC                    i2l3582 09CE                    i2l2792 15F4  
                  i2l2944 184C                    i2l3736 0BCE                    i2l3728 0BB6  
                  i2l3568 095E                    i2l3576 09BE                    i2l2786 15DE  
                  i2l2954 186C                    i2l3668 0AF8                    i2l3596 09EC  
                  i2l3588 09D8                    i2l2798 160C                    i2l2888 195C  
                  i2l2898 19EA                    i2l3698 0B5A                    u229_41 1252  
                  _TMR0IE 7F95                    _TMR0IF 7F92                    _TMR1IF 7CF0  
                  _TMR0ON 7EAF                    _TMR1ON 7E68                    _TMR2ON 7E52  
        i2_MostrarNumeros 1788                    _TRISC0 7CA0                    _TRISC2 7CA2  
   __end_of_DireccionaLCD 1B4E                _RetardoLCD 1688               ?_Bienvenida 0001  
 __end_ofi2_DireccionaLCD 1B7A         Bienvenida@max_pos 0060             Bienvenida@pos 0061  
    EscribeLCD_n8@centena 0060                    _banda1 0809                    _banda2 0801  
               ??___awdiv 0005                 ??___lbdiv 0026                 ??___awmod 0005  
               ??___lbmod 0022                 ??___fttol 0005                 ??___lwdiv 0025  
         ??_InicializaLCD 0025         ?i2_MedirDistancia 0001                    _objeto 002E  
        __end_of_numASCII 1242                    clear_0 198E          ___awdiv@quotient 0007  
         ___awmod@divisor 0003                    isa$std 0001  __end_of_OcultarCursorLCD 1B8E  
         ___awmod@counter 0005      __end_of_EscribeLCD_c 1B38        ??i2_MedirDistancia 0008  
            ?i2_EnviaDato 0001              __pdataCOMRAM 003C         __end_ofi2___lbdiv 1A12  
       __end_ofi2___lbmod 1AEA               ?_Emergencia 0001         __end_ofi2___lwdiv 1880  
            __mediumconst 0000                    tblptrh 0FF7                    tblptrl 0FF6  
                  tblptru 0FF8                _Transmitir 1BD2         MedirDistancia@aux 0028  
        ___lbdiv@dividend 0026          ??_MedirDistancia 0028           ___lbmod@divisor 0021  
   __end_ofi2_HabilitaLCD 1BD2                __accesstop 0060   __end_of__initialization 1994  
         ___lbmod@counter 0023             ___rparam_used 0001                ___awtoft@c 0009  
              ___fttol@f1 0001            __pcstackCOMRAM 0001          CrearCaracter@pos 0027  
       __end_of_EnviaDato 191E          ___lbdiv@quotient 0028               ISR@numAscii 001A  
               ?_BorraLCD 0001            _MensajeLCD_Var 1A9A       TransmitirVar@buffer 0002  
         MensajeLCD_Var@a 0026               ?_RetardoLCD 0001                 ISR@valADC 001D  
             RetardoLCD@a 0022                 ISR@valPWM 001E           i2_EscribeLCD_n8 108A  
        ?i2_DireccionaLCD 0001                   _CCP1CON 0FBD                   _CCP2CON 0FBA  
                 _BAUDCON 0FB8            _MostrarNumeros 1734                 ?___awtoft 0009  
               ?___ftpack 0001          _MostrarCursorLCD 1B8E    __end_of_MensajeLCD_Var 1AC2  
              ??_BorraLCD 0025               ?_Transmitir 0001              ?_HabilitaLCD 0001  
               ?_numASCII 0009              _ConfiguraLCD 1B0A                   __Hparam 0000  
   i2EscribeLCD_n8@decena 000B                   __Lparam 0000    __end_of_MostrarNumeros 1788  
                 ___awdiv 145E                   ___lbdiv 19A2                   ___awmod 15C0  
                 ___lbmod 1A72                   ___fttol 1242     i2EscribeLCD_n8@unidad 000C  
                 ___lwdiv 17DC              __psmallconst 0800                   __pcinit 196A  
              ??___awtoft 000C                ??___ftpack 0006                   __ramtop 0800  
                 __ptext0 0C14                   __ptext1 1734                   __ptext2 14E0  
                 __ptext3 17DC                   __ptext4 0F8A                   __ptext5 1A72  
                 __ptext6 19A2                   __ptext7 1A48                   __ptext8 1A9A  
                 __ptext9 0E80  __end_ofi2_MostrarNumeros 17DC             _Actual_sensor 002B  
        ___awmod@dividend 0001           ?_MensajeLCD_Var 0026     __end_of_EscribeLCD_n8 108A  
          __pintcode_body 08A2      end_of_initialization 1994   __end_ofi2_EscribeLCD_n8 1170  
   __end_of_ConversionADC 1B0A             __Lmediumconst 0000                   int_func 08A2  
              ??_numASCII 000D              _EscribeLCD_c 1B22              ??_Bienvenida 0029  
      ConversionADC@canal 0001     __end_of_TransmitirVar 18D2                   postinc0 0FEE  
         ?_MostrarNumeros 0001         ?_OcultarCursorLCD 0001              ??_Emergencia 0027  
      ??_OcultarCursorLCD 0025          ___lbmod@dividend 0022        __end_of_Bienvenida 0F8A  
         i2EscribeLCD_c@a 0005                 i2___lbdiv 19DA                 i2___lbmod 1AC2  
       i2___lwdiv@divisor 0003                 i2___lwdiv 182E         i2___lwdiv@counter 0007  
             ___lbmod@rem 0024             ?i2_RetardoLCD 0001        __end_of_Emergencia 1A72  
       CrearCaracter@data 0025            __end_of_banda1 0811            __end_of_banda2 0809  
           __pidataCOMRAM 1BDE     __end_of_InicializaLCD 145E                 _EnviaDato 18D2  
     start_initialization 196A               __end_of_ISR 0C14                ?i2___lbdiv 0005  
              ?i2___lbmod 0001                ?i2___lwdiv 0001          ?i2_EscribeLCD_n8 0009  
          ??i2_RetardoLCD 0001              ??_RetardoLCD 0021  __end_of_MostrarCursorLCD 1BA2  
      i2___lbdiv@dividend 0006       EscribeLCD_n8@decena 0061       EscribeLCD_n8@unidad 0062  
              ?_EnviaDato 0001               __pbssCOMRAM 002A        __end_of_RetardoLCD 16DE  
           __pcstackBANK0 0060             _CrearCaracter 162E        i2___lbdiv@quotient 0008  
            ??_Transmitir 0001             _DireccionaLCD 1B38            i2_EscribeLCD_c 1B4E  
        ___lwdiv@dividend 0021                 __pintcode 0008                 _flagMotor 002A  
               _faltantes 0039                  ?___awdiv 0001                  ?___lbdiv 0025  
                ?___awmod 0001                  ?___lbmod 0021                  ?___fttol 0001  
                ?___lwdiv 0021        __end_of_Transmitir 1BDE                 _emergency 0033  
        ??_MensajeLCD_Var 0027         ?i2_MostrarNumeros 0001               __smallconst 0800  
          ?_CrearCaracter 0025        ??i2_MostrarNumeros 0005          ___lwdiv@quotient 0026  
             ??i2___lbdiv 0006               ??i2___lbmod 0002          i2_MedirDistancia 1550  
             ??i2___lwdiv 0005             i2_HabilitaLCD 1BC4            ?_DireccionaLCD 0001  
  __end_ofi2_EscribeLCD_c 1B64          ??_MostrarNumeros 0025                  i2u203_40 1850  
                i2u230_40 125C                  i2u231_40 128C                  i2u223_40 1180  
                i2u231_45 1284                  i2u224_40 11AE                  i2u225_40 18A2  
                i2u225_47 1898                  i2u226_40 18CA                  i2u170_40 1324  
                i2u226_47 18C0                  i2u235_40 12EC                  i2u180_40 14A2  
                i2u244_40 1572                  i2u174_40 13A2                  i2u247_40 1586  
                i2u186_40 15F8                  i2u268_40 08DA                  i2u269_45 08DC  
                i2u286_40 0A50                  i2u382_47 0BE4                  i2u199_40 19F4  
                i2u383_47 16E8                  i2u384_47 16F4                  i2u385_47 16FC  
                i2u386_47 1706                  i2u387_47 1710                  i2u388_47 1BC8  
           ??i2_EnviaDato 0003      __end_ofi2_RetardoLCD 1734               ??_EnviaDato 0023  
                _BorraLCD 1BA2            ?i2_HabilitaLCD 0001           ?i2_EscribeLCD_c 0001  
                __Hrparam 0000         i2___lbdiv@divisor 0005    i2EscribeLCD_n8@centena 000A  
       i2___lbdiv@counter 0007                  __Lrparam 0000              i2EnviaDato@a 0004  
                ___awtoft 1A12                  ___ftpack 1314           ??_CrearCaracter 0026  
           ConfiguraLCD@a 0021         ??i2_DireccionaLCD 0005           ___lwdiv@divisor 0023  
         ___lwdiv@counter 0025                  __ptext10 1B7A                  __ptext11 1B8E  
                __ptext20 1B0A                  __ptext12 13C2                  __ptext13 1BA2  
                __ptext30 191E                  __ptext22 1788                  __ptext14 1B22  
                __ptext31 16DE                  __ptext23 1550                  __ptext15 1B38  
                __ptext40 1BD2                  __ptext32 1BC4                  __ptext24 182E  
                __ptext16 162E                  __ptext41 1AEA                  __ptext33 1170  
                __ptext25 108A                  __ptext17 18D2                  __ptext34 15C0  
                __ptext26 1AC2                  __ptext18 1688                  __ptext35 145E  
                __ptext27 19DA                  __ptext19 1BB6                  __ptext36 1242  
                __ptext28 1B4E                  __ptext37 1A12                  __ptext29 1B64  
                __ptext38 1314                  __ptext39 1880            numASCII@number 0009  
     __end_ofi2_EnviaDato 196A                  _contadas 0038                  _contador 0032  
      i2___lbmod@dividend 0002                  _ctimeout 002F                  _inactive 0031  
         ??_DireccionaLCD 0025                  _etimeout 0030                  _objetivo 003A  
                _numASCII 1170                  _interfaz 003E         ?_MostrarCursorLCD 0001  
      ??_MostrarCursorLCD 0025                  isa$xinst 0000            _MedirDistancia 14E0  
                int$flags 003F              _motorAntiguo 002C             _EscribeLCD_n8 0F8A  
         ??i2_HabilitaLCD 0001                  intlevel2 0000             ??_HabilitaLCD 0021  
           _ConversionADC 1AEA             ?_ConfiguraLCD 0001         i2___lbmod@divisor 0001  
       i2___lbmod@counter 0003             i2RetardoLCD@a 0002    __end_of_MedirDistancia 1550  
           _TransmitirVar 1880               _motorActual 002D       i2MedirDistancia@aux 0008  
__end_ofi2_MedirDistancia 15C0               i2_EnviaDato 191E        main@Antiguo_sensor 0066  
          ?_EscribeLCD_n8 0029            ?_ConversionADC 0001            ??_ConfiguraLCD 0021  
        _OcultarCursorLCD 1B7A             ?_EscribeLCD_c 0001              i2_RetardoLCD 16DE  
          ?_TransmitirVar 0002           ?_MedirDistancia 0001       __end_of_HabilitaLCD 1BC4  
