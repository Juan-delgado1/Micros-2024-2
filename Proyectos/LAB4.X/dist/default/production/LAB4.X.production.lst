

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Mar 07 01:20:40 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46   000000                     
    47                           ; Generated 25/07/2024 GMT
    48                           ; 
    49                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F4550 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81   000FE0                     bsr             equ	4064
    82   000FE9                     fsr0            equ	4073
    83   000FEA                     fsr0h           equ	4074
    84   000FE9                     fsr0l           equ	4073
    85   000FE1                     fsr1            equ	4065
    86   000FE2                     fsr1h           equ	4066
    87   000FE1                     fsr1l           equ	4065
    88   000FD9                     fsr2            equ	4057
    89   000FDA                     fsr2h           equ	4058
    90   000FD9                     fsr2l           equ	4057
    91   000FEF                     indf0           equ	4079
    92   000FE7                     indf1           equ	4071
    93   000FDF                     indf2           equ	4063
    94   000FF2                     intcon          equ	4082
    95   000000                     nvmcon          equ	0
    96   000FF9                     pcl             equ	4089
    97   000FFA                     pclath          equ	4090
    98   000FFB                     pclatu          equ	4091
    99   000FEB                     plusw0          equ	4075
   100   000FE3                     plusw1          equ	4067
   101   000FDB                     plusw2          equ	4059
   102   000FED                     postdec0        equ	4077
   103   000FE5                     postdec1        equ	4069
   104   000FDD                     postdec2        equ	4061
   105   000FEE                     postinc0        equ	4078
   106   000FE6                     postinc1        equ	4070
   107   000FDE                     postinc2        equ	4062
   108   000FEC                     preinc0         equ	4076
   109   000FE4                     preinc1         equ	4068
   110   000FDC                     preinc2         equ	4060
   111   000FF3                     prod            equ	4083
   112   000FF4                     prodh           equ	4084
   113   000FF3                     prodl           equ	4083
   114   000FD8                     status          equ	4056
   115   000FF5                     tablat          equ	4085
   116   000FF6                     tblptr          equ	4086
   117   000FF7                     tblptrh         equ	4087
   118   000FF6                     tblptrl         equ	4086
   119   000FF8                     tblptru         equ	4088
   120   000FFD                     tosl            equ	4093
   121   000FE8                     wreg            equ	4072
   122   000F62                     SPPDATA         equ	3938	;# 
   123   000F63                     SPPCFG          equ	3939	;# 
   124   000F64                     SPPEPS          equ	3940	;# 
   125   000F65                     SPPCON          equ	3941	;# 
   126   000F66                     UFRM            equ	3942	;# 
   127   000F66                     UFRML           equ	3942	;# 
   128   000F67                     UFRMH           equ	3943	;# 
   129   000F68                     UIR             equ	3944	;# 
   130   000F69                     UIE             equ	3945	;# 
   131   000F6A                     UEIR            equ	3946	;# 
   132   000F6B                     UEIE            equ	3947	;# 
   133   000F6C                     USTAT           equ	3948	;# 
   134   000F6D                     UCON            equ	3949	;# 
   135   000F6E                     UADDR           equ	3950	;# 
   136   000F6F                     UCFG            equ	3951	;# 
   137   000F70                     UEP0            equ	3952	;# 
   138   000F71                     UEP1            equ	3953	;# 
   139   000F72                     UEP2            equ	3954	;# 
   140   000F73                     UEP3            equ	3955	;# 
   141   000F74                     UEP4            equ	3956	;# 
   142   000F75                     UEP5            equ	3957	;# 
   143   000F76                     UEP6            equ	3958	;# 
   144   000F77                     UEP7            equ	3959	;# 
   145   000F78                     UEP8            equ	3960	;# 
   146   000F79                     UEP9            equ	3961	;# 
   147   000F7A                     UEP10           equ	3962	;# 
   148   000F7B                     UEP11           equ	3963	;# 
   149   000F7C                     UEP12           equ	3964	;# 
   150   000F7D                     UEP13           equ	3965	;# 
   151   000F7E                     UEP14           equ	3966	;# 
   152   000F7F                     UEP15           equ	3967	;# 
   153   000F80                     PORTA           equ	3968	;# 
   154   000F81                     PORTB           equ	3969	;# 
   155   000F82                     PORTC           equ	3970	;# 
   156   000F83                     PORTD           equ	3971	;# 
   157   000F84                     PORTE           equ	3972	;# 
   158   000F89                     LATA            equ	3977	;# 
   159   000F8A                     LATB            equ	3978	;# 
   160   000F8B                     LATC            equ	3979	;# 
   161   000F8C                     LATD            equ	3980	;# 
   162   000F8D                     LATE            equ	3981	;# 
   163   000F92                     TRISA           equ	3986	;# 
   164   000F92                     DDRA            equ	3986	;# 
   165   000F93                     TRISB           equ	3987	;# 
   166   000F93                     DDRB            equ	3987	;# 
   167   000F94                     TRISC           equ	3988	;# 
   168   000F94                     DDRC            equ	3988	;# 
   169   000F95                     TRISD           equ	3989	;# 
   170   000F95                     DDRD            equ	3989	;# 
   171   000F96                     TRISE           equ	3990	;# 
   172   000F96                     DDRE            equ	3990	;# 
   173   000F9B                     OSCTUNE         equ	3995	;# 
   174   000F9D                     PIE1            equ	3997	;# 
   175   000F9E                     PIR1            equ	3998	;# 
   176   000F9F                     IPR1            equ	3999	;# 
   177   000FA0                     PIE2            equ	4000	;# 
   178   000FA1                     PIR2            equ	4001	;# 
   179   000FA2                     IPR2            equ	4002	;# 
   180   000FA6                     EECON1          equ	4006	;# 
   181   000FA7                     EECON2          equ	4007	;# 
   182   000FA8                     EEDATA          equ	4008	;# 
   183   000FA9                     EEADR           equ	4009	;# 
   184   000FAB                     RCSTA           equ	4011	;# 
   185   000FAB                     RCSTA1          equ	4011	;# 
   186   000FAC                     TXSTA           equ	4012	;# 
   187   000FAC                     TXSTA1          equ	4012	;# 
   188   000FAD                     TXREG           equ	4013	;# 
   189   000FAD                     TXREG1          equ	4013	;# 
   190   000FAE                     RCREG           equ	4014	;# 
   191   000FAE                     RCREG1          equ	4014	;# 
   192   000FAF                     SPBRG           equ	4015	;# 
   193   000FAF                     SPBRG1          equ	4015	;# 
   194   000FB0                     SPBRGH          equ	4016	;# 
   195   000FB1                     T3CON           equ	4017	;# 
   196   000FB2                     TMR3            equ	4018	;# 
   197   000FB2                     TMR3L           equ	4018	;# 
   198   000FB3                     TMR3H           equ	4019	;# 
   199   000FB4                     CMCON           equ	4020	;# 
   200   000FB5                     CVRCON          equ	4021	;# 
   201   000FB6                     ECCP1AS         equ	4022	;# 
   202   000FB6                     CCP1AS          equ	4022	;# 
   203   000FB7                     ECCP1DEL        equ	4023	;# 
   204   000FB7                     CCP1DEL         equ	4023	;# 
   205   000FB8                     BAUDCON         equ	4024	;# 
   206   000FB8                     BAUDCTL         equ	4024	;# 
   207   000FBA                     CCP2CON         equ	4026	;# 
   208   000FBB                     CCPR2           equ	4027	;# 
   209   000FBB                     CCPR2L          equ	4027	;# 
   210   000FBC                     CCPR2H          equ	4028	;# 
   211   000FBD                     CCP1CON         equ	4029	;# 
   212   000FBD                     ECCP1CON        equ	4029	;# 
   213   000FBE                     CCPR1           equ	4030	;# 
   214   000FBE                     CCPR1L          equ	4030	;# 
   215   000FBF                     CCPR1H          equ	4031	;# 
   216   000FC0                     ADCON2          equ	4032	;# 
   217   000FC1                     ADCON1          equ	4033	;# 
   218   000FC2                     ADCON0          equ	4034	;# 
   219   000FC3                     ADRES           equ	4035	;# 
   220   000FC3                     ADRESL          equ	4035	;# 
   221   000FC4                     ADRESH          equ	4036	;# 
   222   000FC5                     SSPCON2         equ	4037	;# 
   223   000FC6                     SSPCON1         equ	4038	;# 
   224   000FC7                     SSPSTAT         equ	4039	;# 
   225   000FC8                     SSPADD          equ	4040	;# 
   226   000FC9                     SSPBUF          equ	4041	;# 
   227   000FCA                     T2CON           equ	4042	;# 
   228   000FCB                     PR2             equ	4043	;# 
   229   000FCB                     MEMCON          equ	4043	;# 
   230   000FCC                     TMR2            equ	4044	;# 
   231   000FCD                     T1CON           equ	4045	;# 
   232   000FCE                     TMR1            equ	4046	;# 
   233   000FCE                     TMR1L           equ	4046	;# 
   234   000FCF                     TMR1H           equ	4047	;# 
   235   000FD0                     RCON            equ	4048	;# 
   236   000FD1                     WDTCON          equ	4049	;# 
   237   000FD2                     HLVDCON         equ	4050	;# 
   238   000FD2                     LVDCON          equ	4050	;# 
   239   000FD3                     OSCCON          equ	4051	;# 
   240   000FD5                     T0CON           equ	4053	;# 
   241   000FD6                     TMR0            equ	4054	;# 
   242   000FD6                     TMR0L           equ	4054	;# 
   243   000FD7                     TMR0H           equ	4055	;# 
   244   000FD8                     STATUS          equ	4056	;# 
   245   000FD9                     FSR2            equ	4057	;# 
   246   000FD9                     FSR2L           equ	4057	;# 
   247   000FDA                     FSR2H           equ	4058	;# 
   248   000FDB                     PLUSW2          equ	4059	;# 
   249   000FDC                     PREINC2         equ	4060	;# 
   250   000FDD                     POSTDEC2        equ	4061	;# 
   251   000FDE                     POSTINC2        equ	4062	;# 
   252   000FDF                     INDF2           equ	4063	;# 
   253   000FE0                     BSR             equ	4064	;# 
   254   000FE1                     FSR1            equ	4065	;# 
   255   000FE1                     FSR1L           equ	4065	;# 
   256   000FE2                     FSR1H           equ	4066	;# 
   257   000FE3                     PLUSW1          equ	4067	;# 
   258   000FE4                     PREINC1         equ	4068	;# 
   259   000FE5                     POSTDEC1        equ	4069	;# 
   260   000FE6                     POSTINC1        equ	4070	;# 
   261   000FE7                     INDF1           equ	4071	;# 
   262   000FE8                     WREG            equ	4072	;# 
   263   000FE9                     FSR0            equ	4073	;# 
   264   000FE9                     FSR0L           equ	4073	;# 
   265   000FEA                     FSR0H           equ	4074	;# 
   266   000FEB                     PLUSW0          equ	4075	;# 
   267   000FEC                     PREINC0         equ	4076	;# 
   268   000FED                     POSTDEC0        equ	4077	;# 
   269   000FEE                     POSTINC0        equ	4078	;# 
   270   000FEF                     INDF0           equ	4079	;# 
   271   000FF0                     INTCON3         equ	4080	;# 
   272   000FF1                     INTCON2         equ	4081	;# 
   273   000FF2                     INTCON          equ	4082	;# 
   274   000FF3                     PROD            equ	4083	;# 
   275   000FF3                     PRODL           equ	4083	;# 
   276   000FF4                     PRODH           equ	4084	;# 
   277   000FF5                     TABLAT          equ	4085	;# 
   278   000FF6                     TBLPTR          equ	4086	;# 
   279   000FF6                     TBLPTRL         equ	4086	;# 
   280   000FF7                     TBLPTRH         equ	4087	;# 
   281   000FF8                     TBLPTRU         equ	4088	;# 
   282   000FF9                     PCLAT           equ	4089	;# 
   283   000FF9                     PC              equ	4089	;# 
   284   000FF9                     PCL             equ	4089	;# 
   285   000FFA                     PCLATH          equ	4090	;# 
   286   000FFB                     PCLATU          equ	4091	;# 
   287   000FFC                     STKPTR          equ	4092	;# 
   288   000FFD                     TOS             equ	4093	;# 
   289   000FFD                     TOSL            equ	4093	;# 
   290   000FFE                     TOSH            equ	4094	;# 
   291   000FFF                     TOSU            equ	4095	;# 
   292                           
   293                           	psect	idataCOMRAM
   294   001496                     __pidataCOMRAM:
   295                           	callstack 0
   296                           
   297                           ;initializer for _FIN
   298   001496  22                 	db	low STR_2
   299                           
   300                           ;initializer for _aux
   301   001497  11                 	db	low STR_1
   302                           
   303                           ;initializer for _interfaz
   304   001498  08                 	db	8
   305                           
   306                           	psect	smallconst
   307   000800                     __psmallconst:
   308                           	callstack 0
   309   000800  00                 	db	0
   310   000801                     _banda2:
   311                           	callstack 0
   312   000801  00                 	db	0
   313   000802  00                 	db	0
   314   000803  00                 	db	0
   315   000804  00                 	db	0
   316   000805  00                 	db	0
   317   000806  1F                 	db	31
   318   000807  15                 	db	21
   319   000808  1F                 	db	31
   320   000809                     __end_of_banda2:
   321                           	callstack 0
   322   000809                     _banda1:
   323                           	callstack 0
   324   000809  00                 	db	0
   325   00080A  0E                 	db	14
   326   00080B  0A                 	db	10
   327   00080C  0E                 	db	14
   328   00080D  00                 	db	0
   329   00080E  1F                 	db	31
   330   00080F  15                 	db	21
   331   000810  1F                 	db	31
   332   000811                     __end_of_banda1:
   333                           	callstack 0
   334   007C0F                     _RB7            set	31759
   335   007C0E                     _RB6            set	31758
   336   007C0D                     _RB5            set	31757
   337   007C0C                     _RB4            set	31756
   338   007C4C                     _LATA4          set	31820
   339   007C49                     _LATA1          set	31817
   340   007C4A                     _LATA2          set	31818
   341   007C12                     _RC2            set	31762
   342   007E84                     _RI             set	32388
   343   007EAF                     _TMR0ON         set	32431
   344   007F97                     _GIE            set	32663
   345   007F95                     _TMR0IE         set	32661
   346   007F92                     _TMR0IF         set	32658
   347   007F93                     _RBIE           set	32659
   348   007F90                     _RBIF           set	32656
   349   007F8F                     _RBPU           set	32655
   350   007C4D                     _LATA5          set	31821
   351   007C4B                     _LATA3          set	31819
   352   000FD6                     _TMR0           set	4054
   353   000F81                     _PORTB          set	3969
   354   000FD5                     _T0CON          set	4053
   355   000F8D                     _LATE           set	3981
   356   000F8B                     _LATC           set	3979
   357   000F8A                     _LATB           set	3978
   358   000F89                     _LATA           set	3977
   359   000F96                     _TRISE          set	3990
   360   000F94                     _TRISC          set	3988
   361   000F95                     _TRISD          set	3989
   362   000F93                     _TRISB          set	3987
   363   000F92                     _TRISA          set	3986
   364   000FC1                     _ADCON1         set	4033
   365   000F8C                     _LATD           set	3980
   366   000811                     STR_1:
   367   000811  50                 	db	80	;'P'
   368   000812  69                 	db	105	;'i'
   369   000813  65                 	db	101	;'e'
   370   000814  7A                 	db	122	;'z'
   371   000815  61                 	db	97	;'a'
   372   000816  73                 	db	115	;'s'
   373   000817  20                 	db	32
   374   000818  61                 	db	97	;'a'
   375   000819  20                 	db	32
   376   00081A  63                 	db	99	;'c'
   377   00081B  6F                 	db	111	;'o'
   378   00081C  6E                 	db	110	;'n'
   379   00081D  74                 	db	116	;'t'
   380   00081E  61                 	db	97	;'a'
   381   00081F  72                 	db	114	;'r'
   382   000820  3A                 	db	58	;':'
   383   000821  00                 	db	0
   384   000822                     STR_2:
   385   000822  20                 	db	32
   386   000823  20                 	db	32
   387   000824  43                 	db	67	;'C'
   388   000825  4F                 	db	79	;'O'
   389   000826  4D                 	db	77	;'M'
   390   000827  50                 	db	80	;'P'
   391   000828  4C                 	db	76	;'L'
   392   000829  45                 	db	69	;'E'
   393   00082A  54                 	db	84	;'T'
   394   00082B  41                 	db	65	;'A'
   395   00082C  53                 	db	83	;'S'
   396   00082D  21                 	db	33
   397   00082E  21                 	db	33
   398   00082F  21                 	db	33
   399   000830  20                 	db	32
   400   000831  00                 	db	0
   401   000832                     STR_4:
   402   000832  56                 	db	86	;'V'
   403   000833  61                 	db	97	;'a'
   404   000834  6C                 	db	108	;'l'
   405   000835  6F                 	db	111	;'o'
   406   000836  72                 	db	114	;'r'
   407   000837  20                 	db	32
   408   000838  6E                 	db	110	;'n'
   409   000839  6F                 	db	111	;'o'
   410   00083A  20                 	db	32
   411   00083B  76                 	db	118	;'v'
   412   00083C  61                 	db	97	;'a'
   413   00083D  6C                 	db	108	;'l'
   414   00083E  69                 	db	105	;'i'
   415   00083F  64                 	db	100	;'d'
   416   000840  6F                 	db	111	;'o'
   417   000841  00                 	db	0
   418   000842                     STR_7:
   419   000842  20                 	db	32
   420   000843  20                 	db	32
   421   000844  20                 	db	32
   422   000845  20                 	db	32
   423   000846  45                 	db	69	;'E'
   424   000847  4D                 	db	77	;'M'
   425   000848  45                 	db	69	;'E'
   426   000849  52                 	db	82	;'R'
   427   00084A  47                 	db	71	;'G'
   428   00084B  45                 	db	69	;'E'
   429   00084C  4E                 	db	78	;'N'
   430   00084D  43                 	db	67	;'C'
   431   00084E  59                 	db	89	;'Y'
   432   00084F  00                 	db	0
   433   000850                     STR_5:
   434   000850  46                 	db	70	;'F'
   435   000851  61                 	db	97	;'a'
   436   000852  6C                 	db	108	;'l'
   437   000853  74                 	db	116	;'t'
   438   000854  61                 	db	97	;'a'
   439   000855  6E                 	db	110	;'n'
   440   000856  74                 	db	116	;'t'
   441   000857  65                 	db	101	;'e'
   442   000858  73                 	db	115	;'s'
   443   000859  20                 	db	32
   444   00085A  3A                 	db	58	;':'
   445   00085B  00                 	db	0
   446   00085C                     STR_6:
   447   00085C  4F                 	db	79	;'O'
   448   00085D  62                 	db	98	;'b'
   449   00085E  6A                 	db	106	;'j'
   450   00085F  65                 	db	101	;'e'
   451   000860  74                 	db	116	;'t'
   452   000861  69                 	db	105	;'i'
   453   000862  76                 	db	118	;'v'
   454   000863  6F                 	db	111	;'o'
   455   000864  20                 	db	32
   456   000865  3A                 	db	58	;':'
   457   000866  00                 	db	0
   458   000867                     STR_8:
   459   000867  20                 	db	32
   460   000868  20                 	db	32
   461   000869  20                 	db	32
   462   00086A  20                 	db	32
   463   00086B  20                 	db	32
   464   00086C  20                 	db	32
   465   00086D  53                 	db	83	;'S'
   466   00086E  54                 	db	84	;'T'
   467   00086F  4F                 	db	79	;'O'
   468   000870  50                 	db	80	;'P'
   469   000871  00                 	db	0
   470   000872                     STR_3:
   471   000872  42                 	db	66	;'B'
   472   000873  69                 	db	105	;'i'
   473   000874  65                 	db	101	;'e'
   474   000875  6E                 	db	110	;'n'
   475   000876  76                 	db	118	;'v'
   476   000877  65                 	db	101	;'e'
   477   000878  6E                 	db	110	;'n'
   478   000879  69                 	db	105	;'i'
   479   00087A  64                 	db	100	;'d'
   480   00087B  61                 	db	97	;'a'
   481   00087C  00                 	db	0
   482   00087D  00                 	db	0	; dummy byte at the end
   483   000002                     __activetblptr  equ	2
   484                           
   485                           ; #config settings
   486                           
   487                           	psect	cinit
   488   001288                     __pcinit:
   489                           	callstack 0
   490   001288                     start_initialization:
   491                           	callstack 0
   492   001288                     __initialization:
   493                           	callstack 0
   494                           
   495                           ; Initialize objects allocated to COMRAM (3 bytes)
   496                           ; load TBLPTR registers with __pidataCOMRAM
   497   001288  0E96               	movlw	low __pidataCOMRAM
   498   00128A  6EF6               	movwf	tblptrl,c
   499   00128C  0E14               	movlw	high __pidataCOMRAM
   500   00128E  6EF7               	movwf	tblptrh,c
   501   001290  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   502   001292  6EF8               	movwf	tblptru,c
   503   001294  0009               	tblrd		*+	;fetch initializer
   504   001296  CFF5 F02D          	movff	tablat,__pdataCOMRAM
   505   00129A  0009               	tblrd		*+	;fetch initializer
   506   00129C  CFF5 F02E          	movff	tablat,__pdataCOMRAM+1
   507   0012A0  0009               	tblrd		*+	;fetch initializer
   508   0012A2  CFF5 F02F          	movff	tablat,__pdataCOMRAM+2
   509                           
   510                           ; Clear objects allocated to COMRAM (11 bytes)
   511   0012A6  EE00  F022         	lfsr	0,__pbssCOMRAM
   512   0012AA  0E0B               	movlw	11
   513   0012AC                     clear_0:
   514   0012AC  6AEE               	clrf	postinc0,c
   515   0012AE  06E8               	decf	wreg,f,c
   516   0012B0  E1FD               	bnz	clear_0
   517   0012B2                     end_of_initialization:
   518                           	callstack 0
   519   0012B2                     __end_of__initialization:
   520                           	callstack 0
   521   0012B2  9030               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   522   0012B4  9230               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   523   0012B6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   524   0012B8  6EF8               	movwf	tblptru,c
   525   0012BA  0100               	movlb	0
   526   0012BC  EF6F  F005         	goto	_main	;jump to C main() function
   527                           
   528                           	psect	bssCOMRAM
   529   000022                     __pbssCOMRAM:
   530                           	callstack 0
   531   000022                     _inactive:
   532                           	callstack 0
   533   000022                     	ds	1
   534   000023                     _contador:
   535                           	callstack 0
   536   000023                     	ds	1
   537   000024                     _emergency:
   538                           	callstack 0
   539   000024                     	ds	1
   540   000025                     _Iniciarpregunta:
   541                           	callstack 0
   542   000025                     	ds	1
   543   000026                     _ok:
   544                           	callstack 0
   545   000026                     	ds	1
   546   000027                     _block:
   547                           	callstack 0
   548   000027                     	ds	1
   549   000028                     _input:
   550                           	callstack 0
   551   000028                     	ds	1
   552   000029                     _contadas:
   553                           	callstack 0
   554   000029                     	ds	1
   555   00002A                     _faltantes:
   556                           	callstack 0
   557   00002A                     	ds	1
   558   00002B                     _objetivo:
   559                           	callstack 0
   560   00002B                     	ds	1
   561   00002C                     _Tecla:
   562                           	callstack 0
   563   00002C                     	ds	1
   564                           
   565                           	psect	dataCOMRAM
   566   00002D                     __pdataCOMRAM:
   567                           	callstack 0
   568   00002D                     _FIN:
   569                           	callstack 0
   570   00002D                     	ds	1
   571   00002E                     _aux:
   572                           	callstack 0
   573   00002E                     	ds	1
   574   00002F                     _interfaz:
   575                           	callstack 0
   576   00002F                     	ds	1
   577                           
   578                           	psect	cstackCOMRAM
   579   000001                     __pcstackCOMRAM:
   580                           	callstack 0
   581   000001                     i2___lbmod@divisor:
   582                           	callstack 0
   583   000001                     ??i2_RetardoLCD:
   584                           
   585                           ; 1 bytes @ 0x0
   586   000001                     	ds	1
   587   000002                     i2RetardoLCD@a:
   588                           	callstack 0
   589   000002                     i2___lbmod@dividend:
   590                           	callstack 0
   591   000002                     
   592                           ; 1 bytes @ 0x1
   593   000002                     	ds	1
   594   000003                     i2___lbmod@counter:
   595                           	callstack 0
   596   000003                     ??i2_EnviaDato:
   597                           
   598                           ; 1 bytes @ 0x2
   599   000003                     	ds	1
   600   000004                     i2EnviaDato@a:
   601                           	callstack 0
   602   000004                     i2___lbmod@rem:
   603                           	callstack 0
   604                           
   605                           ; 1 bytes @ 0x3
   606   000004                     	ds	1
   607   000005                     i2EscribeLCD_c@a:
   608                           	callstack 0
   609   000005                     i2DireccionaLCD@a:
   610                           	callstack 0
   611   000005                     i2___lbdiv@divisor:
   612                           	callstack 0
   613   000005                     
   614                           ; 1 bytes @ 0x4
   615   000005                     	ds	1
   616   000006                     i2___lbdiv@dividend:
   617                           	callstack 0
   618   000006                     
   619                           ; 1 bytes @ 0x5
   620   000006                     	ds	1
   621   000007                     i2___lbdiv@counter:
   622                           	callstack 0
   623                           
   624                           ; 1 bytes @ 0x6
   625   000007                     	ds	1
   626   000008                     i2___lbdiv@quotient:
   627                           	callstack 0
   628                           
   629                           ; 1 bytes @ 0x7
   630   000008                     	ds	1
   631   000009                     i2EscribeLCD_n8@b:
   632                           	callstack 0
   633                           
   634                           ; 1 bytes @ 0x8
   635   000009                     	ds	1
   636   00000A                     i2EscribeLCD_n8@centena:
   637                           	callstack 0
   638   00000A                     
   639                           ; 1 bytes @ 0x9
   640   00000A                     	ds	1
   641   00000B                     i2EscribeLCD_n8@decena:
   642                           	callstack 0
   643                           
   644                           ; 1 bytes @ 0xA
   645   00000B                     	ds	1
   646   00000C                     i2EscribeLCD_n8@unidad:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0xB
   650   00000C                     	ds	1
   651   00000D                     i2EscribeLCD_n8@a:
   652                           	callstack 0
   653                           
   654                           ; 1 bytes @ 0xC
   655   00000D                     	ds	1
   656   00000E                     ??_ISR:
   657                           
   658                           ; 1 bytes @ 0xD
   659   00000E                     	ds	3
   660   000011                     ConfiguraLCD@a:
   661                           	callstack 0
   662   000011                     ___lbmod@divisor:
   663                           	callstack 0
   664   000011                     ??_RetardoLCD:
   665   000011                     
   666                           ; 1 bytes @ 0x10
   667   000011                     	ds	1
   668   000012                     RetardoLCD@a:
   669                           	callstack 0
   670   000012                     ___lbmod@dividend:
   671                           	callstack 0
   672   000012                     
   673                           ; 1 bytes @ 0x11
   674   000012                     	ds	1
   675   000013                     ___lbmod@counter:
   676                           	callstack 0
   677   000013                     ??_EnviaDato:
   678                           
   679                           ; 1 bytes @ 0x12
   680   000013                     	ds	1
   681   000014                     EnviaDato@a:
   682                           	callstack 0
   683   000014                     ___lbmod@rem:
   684                           	callstack 0
   685                           
   686                           ; 1 bytes @ 0x13
   687   000014                     	ds	1
   688   000015                     EscribeLCD_c@a:
   689                           	callstack 0
   690   000015                     DireccionaLCD@a:
   691                           	callstack 0
   692   000015                     CrearCaracter@data:
   693                           	callstack 0
   694   000015                     ___lbdiv@divisor:
   695                           	callstack 0
   696   000015                     
   697                           ; 1 bytes @ 0x14
   698   000015                     	ds	1
   699   000016                     MensajeLCD_Var@a:
   700                           	callstack 0
   701   000016                     ___lbdiv@dividend:
   702                           	callstack 0
   703   000016                     ??_CrearCaracter:
   704   000016                     
   705                           ; 1 bytes @ 0x15
   706   000016                     	ds	1
   707   000017                     CrearCaracter@pos:
   708                           	callstack 0
   709   000017                     ___lbdiv@counter:
   710                           	callstack 0
   711   000017                     
   712                           ; 1 bytes @ 0x16
   713   000017                     	ds	1
   714   000018                     CrearCaracter@i:
   715                           	callstack 0
   716   000018                     ___lbdiv@quotient:
   717                           	callstack 0
   718                           
   719                           ; 1 bytes @ 0x17
   720   000018                     	ds	1
   721   000019                     EscribeLCD_n8@b:
   722                           	callstack 0
   723   000019                     ??_Bienvenida:
   724                           
   725                           ; 1 bytes @ 0x18
   726   000019                     	ds	1
   727   00001A                     EscribeLCD_n8@centena:
   728                           	callstack 0
   729   00001A                     Bienvenida@max_pos:
   730                           	callstack 0
   731   00001A                     
   732                           ; 1 bytes @ 0x19
   733   00001A                     	ds	1
   734   00001B                     EscribeLCD_n8@decena:
   735                           	callstack 0
   736   00001B                     Bienvenida@pos:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0x1A
   740   00001B                     	ds	1
   741   00001C                     EscribeLCD_n8@unidad:
   742                           	callstack 0
   743                           
   744                           ; 1 bytes @ 0x1B
   745   00001C                     	ds	1
   746   00001D                     EscribeLCD_n8@a:
   747                           	callstack 0
   748                           
   749                           ; 1 bytes @ 0x1C
   750   00001D                     	ds	1
   751   00001E                     ??_main:
   752                           
   753                           ; 1 bytes @ 0x1D
   754   00001E                     	ds	2
   755   000020                     main@Antiguo_RA0:
   756                           	callstack 0
   757                           
   758                           ; 1 bytes @ 0x1F
   759   000020                     	ds	1
   760   000021                     main@Actual_RA0:
   761                           	callstack 0
   762                           
   763                           ; 1 bytes @ 0x20
   764   000021                     	ds	1
   765                           
   766 ;;
   767 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   768 ;;
   769 ;; *************** function _main *****************
   770 ;; Defined at:
   771 ;;		line 52 in file "LAB4.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;  Actual_RA0      1   32[COMRAM] unsigned char 
   776 ;;  Antiguo_RA0     1   31[COMRAM] unsigned char 
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   786 ;;      Params:         0       0       0       0       0       0       0       0       0
   787 ;;      Locals:         2       0       0       0       0       0       0       0       0
   788 ;;      Temps:          2       0       0       0       0       0       0       0       0
   789 ;;      Totals:         4       0       0       0       0       0       0       0       0
   790 ;;Total ram usage:        4 bytes
   791 ;; Hardware stack levels required when called: 9
   792 ;; This function calls:
   793 ;;		_Bienvenida
   794 ;;		_BorraLCD
   795 ;;		_ConfiguraLCD
   796 ;;		_DireccionaLCD
   797 ;;		_Emergencia
   798 ;;		_EscribeLCD_n8
   799 ;;		_InicializaLCD
   800 ;;		_MensajeLCD_Var
   801 ;;		_MostrarCursorLCD
   802 ;;		_MostrarNumeros
   803 ;;		_OcultarCursorLCD
   804 ;;		___lbdiv
   805 ;;		___lbmod
   806 ;; This function is called by:
   807 ;;		Startup code after reset
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           	psect	text0
   812   000ADE                     __ptext0:
   813                           	callstack 0
   814   000ADE                     _main:
   815                           	callstack 22
   816                           
   817                           ;LAB4.c: 55: ADCON1 = 15;
   818                           
   819                           ;incstack = 0
   820   000ADE  0E0F               	movlw	15
   821   000AE0  6EC1               	movwf	193,c	;volatile
   822                           
   823                           ;LAB4.c: 56: TRISA = 0x01;
   824   000AE2  0E01               	movlw	1
   825   000AE4  6E92               	movwf	146,c	;volatile
   826                           
   827                           ;LAB4.c: 58: TRISB = 0b11110000;
   828   000AE6  0EF0               	movlw	240
   829   000AE8  6E93               	movwf	147,c	;volatile
   830                           
   831                           ;LAB4.c: 59: TRISD = 0x00;
   832   000AEA  6A95               	clrf	149,c	;volatile
   833                           
   834                           ;LAB4.c: 60: TRISC = 0xFF;
   835   000AEC  6894               	setf	148,c	;volatile
   836                           
   837                           ;LAB4.c: 61: TRISE = 0x00;
   838   000AEE  6A96               	clrf	150,c	;volatile
   839                           
   840                           ;LAB4.c: 64: LATA = 0b010000;
   841   000AF0  0E10               	movlw	16
   842   000AF2  6E89               	movwf	137,c	;volatile
   843                           
   844                           ;LAB4.c: 65: LATB = 0x00;
   845   000AF4  6A8A               	clrf	138,c	;volatile
   846                           
   847                           ;LAB4.c: 66: LATC = 0x00;
   848   000AF6  6A8B               	clrf	139,c	;volatile
   849                           
   850                           ;LAB4.c: 67: LATD = 0x00;
   851   000AF8  6A8C               	clrf	140,c	;volatile
   852                           
   853                           ;LAB4.c: 68: LATE = 0x00;
   854   000AFA  6A8D               	clrf	141,c	;volatile
   855                           
   856                           ;LAB4.c: 69: RBPU=0;
   857   000AFC  9EF1               	bcf	4081,7,c	;volatile
   858                           
   859                           ;LAB4.c: 75: RBIF=0;
   860   000AFE  90F2               	bcf	4082,0,c	;volatile
   861                           
   862                           ;LAB4.c: 76: RBIE=1;
   863   000B00  86F2               	bsf	4082,3,c	;volatile
   864                           
   865                           ;LAB4.c: 79: T0CON = 0b00000010;
   866   000B02  0E02               	movlw	2
   867   000B04  6ED5               	movwf	213,c	;volatile
   868                           
   869                           ;LAB4.c: 81: TMR0 = 49911;
   870   000B06  0EC2               	movlw	194
   871   000B08  6ED7               	movwf	215,c	;volatile
   872   000B0A  0EF7               	movlw	247
   873   000B0C  6ED6               	movwf	214,c	;volatile
   874                           
   875                           ;LAB4.c: 84: TMR0IF = 0;
   876   000B0E  94F2               	bcf	4082,2,c	;volatile
   877                           
   878                           ;LAB4.c: 85: TMR0IE = 1;
   879   000B10  8AF2               	bsf	4082,5,c	;volatile
   880                           
   881                           ;LAB4.c: 87: GIE=1;
   882   000B12  8EF2               	bsf	4082,7,c	;volatile
   883                           
   884                           ;LAB4.c: 88: TMR0ON = 1;
   885   000B14  8ED5               	bsf	4053,7,c	;volatile
   886                           
   887                           ;LAB4.c: 92: ConfiguraLCD(4);
   888   000B16  0E04               	movlw	4
   889   000B18  ECE7  F009         	call	_ConfiguraLCD
   890                           
   891                           ;LAB4.c: 93: InicializaLCD();
   892   000B1C  ECD3  F007         	call	_InicializaLCD	;wreg free
   893                           
   894                           ;LAB4.c: 94: OcultarCursorLCD();
   895   000B20  EC1F  F00A         	call	_OcultarCursorLCD	;wreg free
   896                           
   897                           ;LAB4.c: 98: if(RI == 1){
   898   000B24  A8D0               	btfss	4048,4,c	;volatile
   899   000B26  D016               	goto	l2524
   900                           
   901                           ;LAB4.c: 102: BorraLCD();
   902   000B28  EC33  F00A         	call	_BorraLCD	;wreg free
   903                           
   904                           ;LAB4.c: 103: Bienvenida();
   905   000B2C  EC70  F006         	call	_Bienvenida	;wreg free
   906                           
   907                           ;LAB4.c: 104: contador = 0;
   908   000B30  6A23               	clrf	_contador^0,c
   909                           
   910                           ;LAB4.c: 105: BorraLCD();
   911   000B32  EC33  F00A         	call	_BorraLCD	;wreg free
   912                           
   913                           ;LAB4.c: 106: MensajeLCD_Var("Bienvenida");
   914   000B36  0E72               	movlw	low STR_3
   915   000B38  6E16               	movwf	MensajeLCD_Var@a^0,c
   916   000B3A  ECAC  F009         	call	_MensajeLCD_Var	;wreg free
   917                           
   918                           ;LAB4.c: 108: _delay((unsigned long)((1000)*(1000000/4000.0)));
   919   000B3E  0E02               	movlw	2
   920   000B40  6E1F               	movwf	(??_main+1)^0,c
   921   000B42  0E45               	movlw	69
   922   000B44  6E1E               	movwf	??_main^0,c
   923   000B46  0EAA               	movlw	170
   924   000B48                     u1937:
   925   000B48  2EE8               	decfsz	wreg,f,c
   926   000B4A  D7FE               	bra	u1937
   927   000B4C  2E1E               	decfsz	??_main^0,f,c
   928   000B4E  D7FC               	bra	u1937
   929   000B50  2E1F               	decfsz	(??_main+1)^0,f,c
   930   000B52  D7FA               	bra	u1937
   931   000B54                     l2524:
   932                           
   933                           ;LAB4.c: 109: };LAB4.c: 112: if(RI == 0){
   934   000B54  B8D0               	btfsc	4048,4,c	;volatile
   935   000B56  D003               	goto	l2530
   936                           
   937                           ;LAB4.c: 114: LATE = 0b101;
   938   000B58  0E05               	movlw	5
   939   000B5A  6E8D               	movwf	141,c	;volatile
   940                           
   941                           ;LAB4.c: 115: RI = 1;
   942   000B5C  88D0               	bsf	4048,4,c	;volatile
   943   000B5E                     l2530:
   944                           
   945                           ;LAB4.c: 125: input = 0;
   946   000B5E  6A28               	clrf	_input^0,c
   947                           
   948                           ;LAB4.c: 126: objetivo = 0;
   949   000B60  6A2B               	clrf	_objetivo^0,c
   950                           
   951                           ;LAB4.c: 127: ok = 0;
   952   000B62  6A26               	clrf	_ok^0,c
   953                           
   954                           ;LAB4.c: 128: contador = 0;
   955   000B64  6A23               	clrf	_contador^0,c
   956                           
   957                           ;LAB4.c: 134: BorraLCD();
   958   000B66  EC33  F00A         	call	_BorraLCD	;wreg free
   959                           
   960                           ;LAB4.c: 135: MostrarCursorLCD();
   961   000B6A  EC29  F00A         	call	_MostrarCursorLCD	;wreg free
   962                           
   963                           ;LAB4.c: 136: MensajeLCD_Var(*aux);
   964   000B6E  C02E  F016         	movff	_aux,MensajeLCD_Var@a
   965   000B72  ECAC  F009         	call	_MensajeLCD_Var	;wreg free
   966                           
   967                           ;LAB4.c: 138: DireccionaLCD(0xC0);
   968   000B76  0EC0               	movlw	192
   969   000B78  ECFE  F009         	call	_DireccionaLCD
   970                           
   971                           ;LAB4.c: 139: Iniciarpregunta=1;
   972   000B7C  0E01               	movlw	1
   973   000B7E  6E25               	movwf	_Iniciarpregunta^0,c
   974                           
   975                           ;LAB4.c: 140: block = 0;
   976   000B80  6A27               	clrf	_block^0,c
   977                           
   978                           ;LAB4.c: 145: while(ok == 0){
   979   000B82  D004               	goto	l2554
   980   000B84                     l2550:
   981                           
   982                           ;LAB4.c: 146: if(emergency == 1) Emergencia();
   983   000B84  0424               	decf	_emergency^0,w,c
   984   000B86  B4D8               	btfsc	status,2,c
   985   000B88  ECD4  F009         	call	_Emergencia	;wreg free
   986   000B8C                     l2554:
   987   000B8C  5026               	movf	_ok^0,w,c
   988   000B8E  B4D8               	btfsc	status,2,c
   989   000B90  D7F9               	goto	l2550
   990                           
   991                           ;LAB4.c: 149: };LAB4.c: 154: if(input < 2){
   992   000B92  0E02               	movlw	2
   993   000B94  6028               	cpfslt	_input^0,c
   994   000B96  D007               	goto	l2562
   995                           
   996                           ;LAB4.c: 156: Tecla = 0;
   997   000B98  6A2C               	clrf	_Tecla^0,c
   998                           
   999                           ;LAB4.c: 157: objetivo = objetivo/10;
  1000   000B9A  0E0A               	movlw	10
  1001   000B9C  6E15               	movwf	___lbdiv@divisor^0,c
  1002   000B9E  502B               	movf	_objetivo^0,w,c
  1003   000BA0  EC60  F009         	call	___lbdiv
  1004   000BA4  6E2B               	movwf	_objetivo^0,c
  1005   000BA6                     l2562:
  1006                           
  1007                           ;LAB4.c: 158: };LAB4.c: 159: input = 3;
  1008   000BA6  0E03               	movlw	3
  1009   000BA8  6E28               	movwf	_input^0,c
  1010                           
  1011                           ;LAB4.c: 162: if(objetivo > 59){
  1012   000BAA  0E3B               	movlw	59
  1013   000BAC  642B               	cpfsgt	_objetivo^0,c
  1014   000BAE  D012               	goto	l2572
  1015                           
  1016                           ;LAB4.c: 163: BorraLCD();
  1017   000BB0  EC33  F00A         	call	_BorraLCD	;wreg free
  1018                           
  1019                           ;LAB4.c: 164: MensajeLCD_Var("Valor no valido");
  1020   000BB4  0E32               	movlw	low STR_4
  1021   000BB6  6E16               	movwf	MensajeLCD_Var@a^0,c
  1022   000BB8  ECAC  F009         	call	_MensajeLCD_Var	;wreg free
  1023                           
  1024                           ;LAB4.c: 165: _delay((unsigned long)((2000)*(1000000/4000.0)));
  1025   000BBC  0E03               	movlw	3
  1026   000BBE  6E1F               	movwf	(??_main+1)^0,c
  1027   000BC0  0E8A               	movlw	138
  1028   000BC2  6E1E               	movwf	??_main^0,c
  1029   000BC4  0E56               	movlw	86
  1030   000BC6                     u1947:
  1031   000BC6  2EE8               	decfsz	wreg,f,c
  1032   000BC8  D7FE               	bra	u1947
  1033   000BCA  2E1E               	decfsz	??_main^0,f,c
  1034   000BCC  D7FC               	bra	u1947
  1035   000BCE  2E1F               	decfsz	(??_main+1)^0,f,c
  1036   000BD0  D7FA               	bra	u1947
  1037   000BD2  00FF               	reset		;# 
  1038   000BD4                     l2572:
  1039                           
  1040                           ;LAB4.c: 167: };LAB4.c: 170: objetivo = objetivo + Tecla;
  1041   000BD4  502B               	movf	_objetivo^0,w,c
  1042   000BD6  242C               	addwf	_Tecla^0,w,c
  1043   000BD8  6E2B               	movwf	_objetivo^0,c
  1044                           
  1045                           ;LAB4.c: 171: faltantes = objetivo;
  1046   000BDA  C02B  F02A         	movff	_objetivo,_faltantes
  1047                           
  1048                           ;LAB4.c: 172: contadas = objetivo - faltantes;
  1049   000BDE  502A               	movf	_faltantes^0,w,c
  1050   000BE0  5C2B               	subwf	_objetivo^0,w,c
  1051   000BE2  6E29               	movwf	_contadas^0,c
  1052                           
  1053                           ;LAB4.c: 177: block = 1;
  1054   000BE4  0E01               	movlw	1
  1055   000BE6  6E27               	movwf	_block^0,c
  1056                           
  1057                           ;LAB4.c: 178: BorraLCD();
  1058   000BE8  EC33  F00A         	call	_BorraLCD	;wreg free
  1059                           
  1060                           ;LAB4.c: 179: MensajeLCD_Var("Faltantes :");
  1061   000BEC  0E50               	movlw	low STR_5
  1062   000BEE  6E16               	movwf	MensajeLCD_Var@a^0,c
  1063   000BF0  ECAC  F009         	call	_MensajeLCD_Var	;wreg free
  1064                           
  1065                           ;LAB4.c: 180: EscribeLCD_n8(faltantes,2);
  1066   000BF4  0E02               	movlw	2
  1067   000BF6  6E19               	movwf	EscribeLCD_n8@b^0,c
  1068   000BF8  502A               	movf	_faltantes^0,w,c
  1069   000BFA  ECED  F006         	call	_EscribeLCD_n8
  1070                           
  1071                           ;LAB4.c: 181: DireccionaLCD(0xC0);
  1072   000BFE  0EC0               	movlw	192
  1073   000C00  ECFE  F009         	call	_DireccionaLCD
  1074                           
  1075                           ;LAB4.c: 182: MensajeLCD_Var("Objetivo :");
  1076   000C04  0E5C               	movlw	low STR_6
  1077   000C06  6E16               	movwf	MensajeLCD_Var@a^0,c
  1078   000C08  ECAC  F009         	call	_MensajeLCD_Var	;wreg free
  1079                           
  1080                           ;LAB4.c: 183: EscribeLCD_n8(objetivo,2);
  1081   000C0C  0E02               	movlw	2
  1082   000C0E  6E19               	movwf	EscribeLCD_n8@b^0,c
  1083   000C10  502B               	movf	_objetivo^0,w,c
  1084   000C12  ECED  F006         	call	_EscribeLCD_n8
  1085                           
  1086                           ;LAB4.c: 185: unsigned char Antiguo_RA0 = 0;
  1087   000C16  6A20               	clrf	main@Antiguo_RA0^0,c
  1088   000C18                     l2594:
  1089                           
  1090                           ;LAB4.c: 189: if(emergency == 1){
  1091   000C18  0424               	decf	_emergency^0,w,c
  1092   000C1A  B4D8               	btfsc	status,2,c
  1093                           
  1094                           ;LAB4.c: 190: Emergencia();
  1095   000C1C  ECD4  F009         	call	_Emergencia	;wreg free
  1096                           
  1097                           ;LAB4.c: 191: };LAB4.c: 193: unsigned char Actual_RA0 = RC2;
  1098   000C20  0E00               	movlw	0
  1099   000C22  B482               	btfsc	3970,2,c	;volatile
  1100   000C24  0E01               	movlw	1
  1101   000C26  6E21               	movwf	main@Actual_RA0^0,c
  1102                           
  1103                           ;LAB4.c: 196: if(Antiguo_RA0 == 0 && Actual_RA0 == 1 && contadas < objetivo){
  1104   000C28  5020               	movf	main@Antiguo_RA0^0,w,c
  1105   000C2A  A4D8               	btfss	status,2,c
  1106   000C2C  D028               	goto	l2624
  1107   000C2E  0421               	decf	main@Actual_RA0^0,w,c
  1108   000C30  A4D8               	btfss	status,2,c
  1109   000C32  D025               	goto	l2624
  1110   000C34  502B               	movf	_objetivo^0,w,c
  1111   000C36  5C29               	subwf	_contadas^0,w,c
  1112   000C38  B0D8               	btfsc	status,0,c
  1113   000C3A  D021               	goto	l2624
  1114                           
  1115                           ;LAB4.c: 201: contador = 0;
  1116   000C3C  6A23               	clrf	_contador^0,c
  1117                           
  1118                           ;LAB4.c: 203: _delay((unsigned long)((100)*(1000000/4000.0)));
  1119   000C3E  0E21               	movlw	33
  1120   000C40  6E1E               	movwf	??_main^0,c
  1121   000C42  0E76               	movlw	118
  1122   000C44                     u1957:
  1123   000C44  2EE8               	decfsz	wreg,f,c
  1124   000C46  D7FE               	bra	u1957
  1125   000C48  2E1E               	decfsz	??_main^0,f,c
  1126   000C4A  D7FC               	bra	u1957
  1127   000C4C  D000               	nop2	
  1128                           
  1129                           ;LAB4.c: 205: contadas++;
  1130   000C4E  2A29               	incf	_contadas^0,f,c
  1131                           
  1132                           ;LAB4.c: 206: faltantes--;
  1133   000C50  062A               	decf	_faltantes^0,f,c
  1134                           
  1135                           ;LAB4.c: 208: if(contadas%10 == 0 && contadas != objetivo){
  1136   000C52  0E0A               	movlw	10
  1137   000C54  6E11               	movwf	___lbmod@divisor^0,c
  1138   000C56  5029               	movf	_contadas^0,w,c
  1139   000C58  EC98  F009         	call	___lbmod
  1140   000C5C  0900               	iorlw	0
  1141   000C5E  A4D8               	btfss	status,2,c
  1142   000C60  D00E               	goto	l2624
  1143   000C62  502B               	movf	_objetivo^0,w,c
  1144   000C64  1829               	xorwf	_contadas^0,w,c
  1145   000C66  B4D8               	btfsc	status,2,c
  1146   000C68  D00A               	goto	l2624
  1147                           
  1148                           ;LAB4.c: 211: LATA2 = 1;
  1149   000C6A  8489               	bsf	3977,2,c	;volatile
  1150                           
  1151                           ;LAB4.c: 212: _delay((unsigned long)((500)*(1000000/4000.0)));
  1152   000C6C  0EA3               	movlw	163
  1153   000C6E  6E1E               	movwf	??_main^0,c
  1154   000C70  0E55               	movlw	85
  1155   000C72                     u1967:
  1156   000C72  2EE8               	decfsz	wreg,f,c
  1157   000C74  D7FE               	bra	u1967
  1158   000C76  2E1E               	decfsz	??_main^0,f,c
  1159   000C78  D7FC               	bra	u1967
  1160   000C7A  0000               	nop	
  1161                           
  1162                           ;LAB4.c: 213: LATA2 = 0;
  1163   000C7C  9489               	bcf	3977,2,c	;volatile
  1164   000C7E                     l2624:
  1165                           
  1166                           ;LAB4.c: 214: };LAB4.c: 216: };LAB4.c: 219: Antiguo_RA0 = Actual_RA0;
  1167   000C7E  C021  F020         	movff	main@Actual_RA0,main@Antiguo_RA0
  1168                           
  1169                           ;LAB4.c: 221: MostrarNumeros();
  1170   000C82  ECA4  F008         	call	_MostrarNumeros	;wreg free
  1171                           
  1172                           ;LAB4.c: 224: OcultarCursorLCD();
  1173   000C86  EC1F  F00A         	call	_OcultarCursorLCD	;wreg free
  1174                           
  1175                           ;LAB4.c: 225: DireccionaLCD(0x8B);
  1176   000C8A  0E8B               	movlw	139
  1177   000C8C  ECFE  F009         	call	_DireccionaLCD
  1178                           
  1179                           ;LAB4.c: 228: EscribeLCD_n8(faltantes,2);
  1180   000C90  0E02               	movlw	2
  1181   000C92  6E19               	movwf	EscribeLCD_n8@b^0,c
  1182   000C94  502A               	movf	_faltantes^0,w,c
  1183   000C96  ECED  F006         	call	_EscribeLCD_n8
  1184                           
  1185                           ;LAB4.c: 233: if (contadas == objetivo) {
  1186   000C9A  502B               	movf	_objetivo^0,w,c
  1187   000C9C  1829               	xorwf	_contadas^0,w,c
  1188   000C9E  A4D8               	btfss	status,2,c
  1189   000CA0  D7BB               	goto	l2594
  1190                           
  1191                           ;LAB4.c: 234: LATA2 = 1;
  1192   000CA2  8489               	bsf	3977,2,c	;volatile
  1193                           
  1194                           ;LAB4.c: 235: BorraLCD();
  1195   000CA4  EC33  F00A         	call	_BorraLCD	;wreg free
  1196                           
  1197                           ;LAB4.c: 236: MensajeLCD_Var(*FIN);
  1198   000CA8  C02D  F016         	movff	_FIN,MensajeLCD_Var@a
  1199   000CAC  ECAC  F009         	call	_MensajeLCD_Var	;wreg free
  1200                           
  1201                           ;LAB4.c: 237: _delay((unsigned long)((1000)*(1000000/4000.0)));
  1202   000CB0  0E02               	movlw	2
  1203   000CB2  6E1F               	movwf	(??_main+1)^0,c
  1204   000CB4  0E45               	movlw	69
  1205   000CB6  6E1E               	movwf	??_main^0,c
  1206   000CB8  0EAA               	movlw	170
  1207   000CBA                     u1977:
  1208   000CBA  2EE8               	decfsz	wreg,f,c
  1209   000CBC  D7FE               	bra	u1977
  1210   000CBE  2E1E               	decfsz	??_main^0,f,c
  1211   000CC0  D7FC               	bra	u1977
  1212   000CC2  2E1F               	decfsz	(??_main+1)^0,f,c
  1213   000CC4  D7FA               	bra	u1977
  1214                           
  1215                           ;LAB4.c: 238: LATA2 = 0;
  1216   000CC6  9489               	bcf	3977,2,c	;volatile
  1217                           
  1218                           ;LAB4.c: 240: };LAB4.c: 241: };LAB4.c: 248: ok = 0;
  1219                           
  1220                           ;LAB4.c: 239: break;
  1221   000CC8  6A26               	clrf	_ok^0,c
  1222   000CCA                     l2646:
  1223                           
  1224                           ;LAB4.c: 252: if(emergency == 1){
  1225   000CCA  0424               	decf	_emergency^0,w,c
  1226   000CCC  B4D8               	btfsc	status,2,c
  1227                           
  1228                           ;LAB4.c: 253: Emergencia();
  1229   000CCE  ECD4  F009         	call	_Emergencia	;wreg free
  1230                           
  1231                           ;LAB4.c: 254: };LAB4.c: 256: if(ok > 0){
  1232   000CD2  5026               	movf	_ok^0,w,c
  1233   000CD4  B4D8               	btfsc	status,2,c
  1234   000CD6  D7F9               	goto	l2646
  1235                           
  1236                           ;LAB4.c: 257: ok = 0;
  1237   000CD8  6A26               	clrf	_ok^0,c
  1238                           
  1239                           ;LAB4.c: 258: objetivo = 0;
  1240   000CDA  6A2B               	clrf	_objetivo^0,c
  1241                           
  1242                           ;LAB4.c: 259: input =0;
  1243   000CDC  6A28               	clrf	_input^0,c
  1244                           
  1245                           ;LAB4.c: 260: break;
  1246   000CDE  D73F               	goto	l2530
  1247   000CE0                     __end_of_main:
  1248                           	callstack 0
  1249                           
  1250 ;; *************** function _MostrarNumeros *****************
  1251 ;; Defined at:
  1252 ;;		line 484 in file "LAB4.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1266 ;;      Params:         0       0       0       0       0       0       0       0       0
  1267 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1269 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1270 ;;Total ram usage:        0 bytes
  1271 ;; Hardware stack levels used: 1
  1272 ;; Hardware stack levels required when called: 5
  1273 ;; This function calls:
  1274 ;;		___lbmod
  1275 ;; This function is called by:
  1276 ;;		_main
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text1
  1281   001148                     __ptext1:
  1282                           	callstack 0
  1283   001148                     _MostrarNumeros:
  1284                           	callstack 25
  1285                           
  1286                           ;LAB4.c: 487: LATD = contadas % 10;
  1287                           
  1288                           ;incstack = 0
  1289   001148  0E0A               	movlw	10
  1290   00114A  6E11               	movwf	___lbmod@divisor^0,c
  1291   00114C  5029               	movf	_contadas^0,w,c
  1292   00114E  EC98  F009         	call	___lbmod
  1293   001152  6E8C               	movwf	140,c	;volatile
  1294                           
  1295                           ;LAB4.c: 490: if(contadas<10){
  1296   001154  0E0A               	movlw	10
  1297   001156  6029               	cpfslt	_contadas^0,c
  1298   001158  D003               	goto	l2376
  1299                           
  1300                           ;LAB4.c: 492: LATE = 0b101;
  1301   00115A  0E05               	movlw	5
  1302   00115C  6E8D               	movwf	141,c	;volatile
  1303                           
  1304                           ;LAB4.c: 493: } else if(contadas<20){
  1305   00115E  0012               	return	
  1306   001160                     l2376:
  1307   001160  0E14               	movlw	20
  1308   001162  6029               	cpfslt	_contadas^0,c
  1309   001164  D003               	goto	l2380
  1310                           
  1311                           ;LAB4.c: 495: LATE=0b100;
  1312   001166  0E04               	movlw	4
  1313   001168  6E8D               	movwf	141,c	;volatile
  1314                           
  1315                           ;LAB4.c: 496: } else if (contadas<30){
  1316   00116A  0012               	return	
  1317   00116C                     l2380:
  1318   00116C  0E1E               	movlw	30
  1319   00116E  6029               	cpfslt	_contadas^0,c
  1320   001170  D003               	goto	l2384
  1321                           
  1322                           ;LAB4.c: 498: LATE=0b110;
  1323   001172  0E06               	movlw	6
  1324   001174  6E8D               	movwf	141,c	;volatile
  1325                           
  1326                           ;LAB4.c: 499: } else if (contadas<40){
  1327   001176  0012               	return	
  1328   001178                     l2384:
  1329   001178  0E28               	movlw	40
  1330   00117A  6029               	cpfslt	_contadas^0,c
  1331   00117C  D003               	goto	l2388
  1332                           
  1333                           ;LAB4.c: 501: LATE=0b010;
  1334   00117E  0E02               	movlw	2
  1335   001180  6E8D               	movwf	141,c	;volatile
  1336                           
  1337                           ;LAB4.c: 502: } else if (contadas<50){
  1338   001182  0012               	return	
  1339   001184                     l2388:
  1340   001184  0E32               	movlw	50
  1341   001186  6029               	cpfslt	_contadas^0,c
  1342   001188  D003               	goto	l2392
  1343                           
  1344                           ;LAB4.c: 504: LATE = 0b011;
  1345   00118A  0E03               	movlw	3
  1346   00118C  6E8D               	movwf	141,c	;volatile
  1347                           
  1348                           ;LAB4.c: 505: } else if (contadas<60){
  1349   00118E  0012               	return	
  1350   001190                     l2392:
  1351   001190  0E3C               	movlw	60
  1352   001192  6029               	cpfslt	_contadas^0,c
  1353   001194  0012               	return	
  1354                           
  1355                           ;LAB4.c: 507: LATE = 0b111;
  1356   001196  0E07               	movlw	7
  1357   001198  6E8D               	movwf	141,c	;volatile
  1358   00119A  0012               	return	
  1359   00119C                     __end_of_MostrarNumeros:
  1360                           	callstack 0
  1361                           
  1362 ;; *************** function _EscribeLCD_n8 *****************
  1363 ;; Defined at:
  1364 ;;		line 149 in file "LibLCDXC8.h"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;  a               1    wreg     unsigned char 
  1367 ;;  b               1   24[COMRAM] unsigned char 
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;  a               1   28[COMRAM] unsigned char 
  1370 ;;  unidad          1   27[COMRAM] unsigned char 
  1371 ;;  decena          1   26[COMRAM] unsigned char 
  1372 ;;  centena         1   25[COMRAM] unsigned char 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, status,2, status,0, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1382 ;;      Params:         1       0       0       0       0       0       0       0       0
  1383 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1384 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1385 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1386 ;;Total ram usage:        5 bytes
  1387 ;; Hardware stack levels used: 1
  1388 ;; Hardware stack levels required when called: 6
  1389 ;; This function calls:
  1390 ;;		_EnviaDato
  1391 ;;		_HabilitaLCD
  1392 ;;		_RetardoLCD
  1393 ;;		___lbdiv
  1394 ;;		___lbmod
  1395 ;; This function is called by:
  1396 ;;		_main
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text2
  1401   000DDA                     __ptext2:
  1402                           	callstack 0
  1403   000DDA                     _EscribeLCD_n8:
  1404                           	callstack 24
  1405                           
  1406                           ;incstack = 0
  1407                           ;EscribeLCD_n8@a stored from wreg
  1408   000DDA  6E1D               	movwf	EscribeLCD_n8@a^0,c
  1409                           
  1410                           ;LibLCDXC8.h: 154: unsigned char centena,decena,unidad;;LibLCDXC8.h: 155: LATA3=1;
  1411   000DDC  8689               	bsf	3977,3,c	;volatile
  1412                           
  1413                           ;LibLCDXC8.h: 156: switch(b){
  1414   000DDE  D065               	goto	l2294
  1415   000DE0                     l2262:
  1416   000DE0  0E0A               	movlw	10
  1417   000DE2  6E11               	movwf	___lbmod@divisor^0,c
  1418   000DE4  501D               	movf	EscribeLCD_n8@a^0,w,c
  1419   000DE6  EC98  F009         	call	___lbmod
  1420   000DEA  6E1C               	movwf	EscribeLCD_n8@unidad^0,c
  1421                           
  1422                           ;LibLCDXC8.h: 158: EnviaDato(unidad+48);
  1423   000DEC  501C               	movf	EscribeLCD_n8@unidad^0,w,c
  1424   000DEE  0F30               	addlw	48
  1425   000DF0  ECF8  F008         	call	_EnviaDato
  1426                           
  1427                           ;LibLCDXC8.h: 159: HabilitaLCD();
  1428   000DF4  EC3D  F00A         	call	_HabilitaLCD	;wreg free
  1429                           
  1430                           ;LibLCDXC8.h: 160: RetardoLCD(4);
  1431   000DF8  0E04               	movlw	4
  1432   000DFA  EC4E  F008         	call	_RetardoLCD
  1433                           
  1434                           ;LibLCDXC8.h: 161: break;
  1435   000DFE  0012               	return	
  1436   000E00                     l2268:
  1437   000E00  0E0A               	movlw	10
  1438   000E02  6E15               	movwf	___lbdiv@divisor^0,c
  1439   000E04  0E64               	movlw	100
  1440   000E06  6E11               	movwf	___lbmod@divisor^0,c
  1441   000E08  501D               	movf	EscribeLCD_n8@a^0,w,c
  1442   000E0A  EC98  F009         	call	___lbmod
  1443   000E0E  EC60  F009         	call	___lbdiv
  1444   000E12  6E1B               	movwf	EscribeLCD_n8@decena^0,c
  1445                           
  1446                           ;LibLCDXC8.h: 163: unidad=a%10;
  1447   000E14  0E0A               	movlw	10
  1448   000E16  6E11               	movwf	___lbmod@divisor^0,c
  1449   000E18  501D               	movf	EscribeLCD_n8@a^0,w,c
  1450   000E1A  EC98  F009         	call	___lbmod
  1451   000E1E  6E1C               	movwf	EscribeLCD_n8@unidad^0,c
  1452                           
  1453                           ;LibLCDXC8.h: 164: EnviaDato(decena+48);
  1454   000E20  501B               	movf	EscribeLCD_n8@decena^0,w,c
  1455   000E22  0F30               	addlw	48
  1456   000E24  ECF8  F008         	call	_EnviaDato
  1457                           
  1458                           ;LibLCDXC8.h: 165: HabilitaLCD();
  1459   000E28  EC3D  F00A         	call	_HabilitaLCD	;wreg free
  1460                           
  1461                           ;LibLCDXC8.h: 166: RetardoLCD(4);
  1462   000E2C  0E04               	movlw	4
  1463   000E2E  EC4E  F008         	call	_RetardoLCD
  1464                           
  1465                           ;LibLCDXC8.h: 167: EnviaDato(unidad+48);
  1466   000E32  501C               	movf	EscribeLCD_n8@unidad^0,w,c
  1467   000E34  0F30               	addlw	48
  1468   000E36  ECF8  F008         	call	_EnviaDato
  1469                           
  1470                           ;LibLCDXC8.h: 168: HabilitaLCD();
  1471   000E3A  EC3D  F00A         	call	_HabilitaLCD	;wreg free
  1472                           
  1473                           ;LibLCDXC8.h: 169: RetardoLCD(4);
  1474   000E3E  0E04               	movlw	4
  1475   000E40  EC4E  F008         	call	_RetardoLCD
  1476                           
  1477                           ;LibLCDXC8.h: 170: break;
  1478   000E44  0012               	return	
  1479   000E46                     l2278:
  1480   000E46  0E64               	movlw	100
  1481   000E48  6E15               	movwf	___lbdiv@divisor^0,c
  1482   000E4A  501D               	movf	EscribeLCD_n8@a^0,w,c
  1483   000E4C  EC60  F009         	call	___lbdiv
  1484   000E50  6E1A               	movwf	EscribeLCD_n8@centena^0,c
  1485                           
  1486                           ;LibLCDXC8.h: 172: decena=(a%100)/10;
  1487   000E52  0E0A               	movlw	10
  1488   000E54  6E15               	movwf	___lbdiv@divisor^0,c
  1489   000E56  0E64               	movlw	100
  1490   000E58  6E11               	movwf	___lbmod@divisor^0,c
  1491   000E5A  501D               	movf	EscribeLCD_n8@a^0,w,c
  1492   000E5C  EC98  F009         	call	___lbmod
  1493   000E60  EC60  F009         	call	___lbdiv
  1494   000E64  6E1B               	movwf	EscribeLCD_n8@decena^0,c
  1495                           
  1496                           ;LibLCDXC8.h: 173: unidad=a%10;
  1497   000E66  0E0A               	movlw	10
  1498   000E68  6E11               	movwf	___lbmod@divisor^0,c
  1499   000E6A  501D               	movf	EscribeLCD_n8@a^0,w,c
  1500   000E6C  EC98  F009         	call	___lbmod
  1501   000E70  6E1C               	movwf	EscribeLCD_n8@unidad^0,c
  1502                           
  1503                           ;LibLCDXC8.h: 174: EnviaDato(centena+48);
  1504   000E72  501A               	movf	EscribeLCD_n8@centena^0,w,c
  1505   000E74  0F30               	addlw	48
  1506   000E76  ECF8  F008         	call	_EnviaDato
  1507                           
  1508                           ;LibLCDXC8.h: 175: HabilitaLCD();
  1509   000E7A  EC3D  F00A         	call	_HabilitaLCD	;wreg free
  1510                           
  1511                           ;LibLCDXC8.h: 176: RetardoLCD(4);
  1512   000E7E  0E04               	movlw	4
  1513   000E80  EC4E  F008         	call	_RetardoLCD
  1514                           
  1515                           ;LibLCDXC8.h: 177: EnviaDato(decena+48);
  1516   000E84  501B               	movf	EscribeLCD_n8@decena^0,w,c
  1517   000E86  0F30               	addlw	48
  1518   000E88  ECF8  F008         	call	_EnviaDato
  1519                           
  1520                           ;LibLCDXC8.h: 178: HabilitaLCD();
  1521   000E8C  EC3D  F00A         	call	_HabilitaLCD	;wreg free
  1522                           
  1523                           ;LibLCDXC8.h: 179: RetardoLCD(4);
  1524   000E90  0E04               	movlw	4
  1525   000E92  EC4E  F008         	call	_RetardoLCD
  1526                           
  1527                           ;LibLCDXC8.h: 180: EnviaDato(unidad+48);
  1528   000E96  501C               	movf	EscribeLCD_n8@unidad^0,w,c
  1529   000E98  0F30               	addlw	48
  1530   000E9A  ECF8  F008         	call	_EnviaDato
  1531                           
  1532                           ;LibLCDXC8.h: 181: HabilitaLCD();
  1533   000E9E  EC3D  F00A         	call	_HabilitaLCD	;wreg free
  1534                           
  1535                           ;LibLCDXC8.h: 182: RetardoLCD(4);
  1536   000EA2  0E04               	movlw	4
  1537   000EA4  EC4E  F008         	call	_RetardoLCD
  1538                           
  1539                           ;LibLCDXC8.h: 183: break;
  1540   000EA8  0012               	return	
  1541   000EAA                     l2294:
  1542   000EAA  5019               	movf	EscribeLCD_n8@b^0,w,c
  1543                           
  1544                           ; Switch size 1, requested type "simple"
  1545                           ; Number of cases is 3, Range of values is 1 to 3
  1546                           ; switch strategies available:
  1547                           ; Name         Instructions Cycles
  1548                           ; simple_byte           10     6 (average)
  1549                           ;	Chosen strategy is simple_byte
  1550   000EAC  0A01               	xorlw	1	; case 1
  1551   000EAE  B4D8               	btfsc	status,2,c
  1552   000EB0  D797               	goto	l2262
  1553   000EB2  0A03               	xorlw	3	; case 2
  1554   000EB4  B4D8               	btfsc	status,2,c
  1555   000EB6  D7A4               	goto	l2268
  1556   000EB8  0A01               	xorlw	1	; case 3
  1557   000EBA  A4D8               	btfss	status,2,c
  1558   000EBC  0012               	return	
  1559   000EBE  D7C3               	goto	l2278
  1560   000EC0                     __end_of_EscribeLCD_n8:
  1561                           	callstack 0
  1562                           
  1563 ;; *************** function ___lbmod *****************
  1564 ;; Defined at:
  1565 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbmod.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;  dividend        1    wreg     unsigned char 
  1568 ;;  divisor         1   16[COMRAM] unsigned char 
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;  dividend        1   17[COMRAM] unsigned char 
  1571 ;;  rem             1   19[COMRAM] unsigned char 
  1572 ;;  counter         1   18[COMRAM] unsigned char 
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      unsigned char 
  1575 ;; Registers used:
  1576 ;;		wreg, status,2, status,0
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1582 ;;      Params:         1       0       0       0       0       0       0       0       0
  1583 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1584 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1585 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1586 ;;Total ram usage:        4 bytes
  1587 ;; Hardware stack levels used: 1
  1588 ;; Hardware stack levels required when called: 4
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_EscribeLCD_n8
  1593 ;;		_main
  1594 ;;		_MostrarNumeros
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text3
  1599   001330                     __ptext3:
  1600                           	callstack 0
  1601   001330                     ___lbmod:
  1602                           	callstack 26
  1603                           
  1604                           ;incstack = 0
  1605                           ;___lbmod@dividend stored from wreg
  1606   001330  6E12               	movwf	___lbmod@dividend^0,c
  1607   001332  0E08               	movlw	8
  1608   001334  6E13               	movwf	___lbmod@counter^0,c
  1609   001336  6A14               	clrf	___lbmod@rem^0,c
  1610   001338                     l2186:
  1611   001338  90D8               	bcf	status,0,c
  1612   00133A  3412               	rlcf	___lbmod@dividend^0,w,c
  1613   00133C  3414               	rlcf	___lbmod@rem^0,w,c
  1614   00133E  6E14               	movwf	___lbmod@rem^0,c
  1615   001340  90D8               	bcf	status,0,c
  1616   001342  3612               	rlcf	___lbmod@dividend^0,f,c
  1617   001344  5011               	movf	___lbmod@divisor^0,w,c
  1618   001346  5C14               	subwf	___lbmod@rem^0,w,c
  1619   001348  A0D8               	btfss	status,0,c
  1620   00134A  D002               	goto	l2194
  1621   00134C  5011               	movf	___lbmod@divisor^0,w,c
  1622   00134E  5E14               	subwf	___lbmod@rem^0,f,c
  1623   001350                     l2194:
  1624   001350  2E13               	decfsz	___lbmod@counter^0,f,c
  1625   001352  D7F2               	goto	l2186
  1626   001354  5014               	movf	___lbmod@rem^0,w,c
  1627   001356  0012               	return		;funcret
  1628   001358                     __end_of___lbmod:
  1629                           	callstack 0
  1630                           
  1631 ;; *************** function ___lbdiv *****************
  1632 ;; Defined at:
  1633 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbdiv.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;  dividend        1    wreg     unsigned char 
  1636 ;;  divisor         1   20[COMRAM] unsigned char 
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;  dividend        1   21[COMRAM] unsigned char 
  1639 ;;  quotient        1   23[COMRAM] unsigned char 
  1640 ;;  counter         1   22[COMRAM] unsigned char 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      unsigned char 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1650 ;;      Params:         1       0       0       0       0       0       0       0       0
  1651 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1652 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1653 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1654 ;;Total ram usage:        4 bytes
  1655 ;; Hardware stack levels used: 1
  1656 ;; Hardware stack levels required when called: 4
  1657 ;; This function calls:
  1658 ;;		Nothing
  1659 ;; This function is called by:
  1660 ;;		_EscribeLCD_n8
  1661 ;;		_main
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text4
  1666   0012C0                     __ptext4:
  1667                           	callstack 0
  1668   0012C0                     ___lbdiv:
  1669                           	callstack 26
  1670                           
  1671                           ;incstack = 0
  1672                           ;___lbdiv@dividend stored from wreg
  1673   0012C0  6E16               	movwf	___lbdiv@dividend^0,c
  1674   0012C2  6A18               	clrf	___lbdiv@quotient^0,c
  1675   0012C4  5015               	movf	___lbdiv@divisor^0,w,c
  1676   0012C6  B4D8               	btfsc	status,2,c
  1677   0012C8  D015               	goto	l2178
  1678   0012CA  0E01               	movlw	1
  1679   0012CC  6E17               	movwf	___lbdiv@counter^0,c
  1680   0012CE  D003               	goto	l2166
  1681   0012D0                     l2162:
  1682   0012D0  90D8               	bcf	status,0,c
  1683   0012D2  3615               	rlcf	___lbdiv@divisor^0,f,c
  1684   0012D4  2A17               	incf	___lbdiv@counter^0,f,c
  1685   0012D6                     l2166:
  1686   0012D6  AE15               	btfss	___lbdiv@divisor^0,7,c
  1687   0012D8  D7FB               	goto	l2162
  1688   0012DA                     u1080:
  1689   0012DA  90D8               	bcf	status,0,c
  1690   0012DC  3618               	rlcf	___lbdiv@quotient^0,f,c
  1691   0012DE  5015               	movf	___lbdiv@divisor^0,w,c
  1692   0012E0  5C16               	subwf	___lbdiv@dividend^0,w,c
  1693   0012E2  A0D8               	btfss	status,0,c
  1694   0012E4  D003               	goto	l2174
  1695   0012E6  5015               	movf	___lbdiv@divisor^0,w,c
  1696   0012E8  5E16               	subwf	___lbdiv@dividend^0,f,c
  1697   0012EA  8018               	bsf	___lbdiv@quotient^0,0,c
  1698   0012EC                     l2174:
  1699   0012EC  90D8               	bcf	status,0,c
  1700   0012EE  3215               	rrcf	___lbdiv@divisor^0,f,c
  1701   0012F0  2E17               	decfsz	___lbdiv@counter^0,f,c
  1702   0012F2  D7F3               	goto	u1080
  1703   0012F4                     l2178:
  1704   0012F4  5018               	movf	___lbdiv@quotient^0,w,c
  1705   0012F6  0012               	return		;funcret
  1706   0012F8                     __end_of___lbdiv:
  1707                           	callstack 0
  1708                           
  1709 ;; *************** function _Emergencia *****************
  1710 ;; Defined at:
  1711 ;;		line 513 in file "LAB4.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1725 ;;      Params:         0       0       0       0       0       0       0       0       0
  1726 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1727 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1728 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1729 ;;Total ram usage:        0 bytes
  1730 ;; Hardware stack levels used: 1
  1731 ;; Hardware stack levels required when called: 8
  1732 ;; This function calls:
  1733 ;;		_BorraLCD
  1734 ;;		_DireccionaLCD
  1735 ;;		_MensajeLCD_Var
  1736 ;; This function is called by:
  1737 ;;		_main
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text5
  1742   0013A8                     __ptext5:
  1743                           	callstack 0
  1744   0013A8                     _Emergencia:
  1745                           	callstack 22
  1746                           
  1747                           ;LAB4.c: 514: LATE = 0b001;
  1748                           
  1749                           ;incstack = 0
  1750   0013A8  0E01               	movlw	1
  1751   0013AA  6E8D               	movwf	141,c	;volatile
  1752                           
  1753                           ;LAB4.c: 515: LATD = 8;
  1754   0013AC  0E08               	movlw	8
  1755   0013AE  6E8C               	movwf	140,c	;volatile
  1756                           
  1757                           ;LAB4.c: 516: BorraLCD();
  1758   0013B0  EC33  F00A         	call	_BorraLCD	;wreg free
  1759                           
  1760                           ;LAB4.c: 517: MensajeLCD_Var("    EMERGENCY");
  1761   0013B4  0E42               	movlw	low STR_7
  1762   0013B6  6E16               	movwf	MensajeLCD_Var@a^0,c
  1763   0013B8  ECAC  F009         	call	_MensajeLCD_Var	;wreg free
  1764                           
  1765                           ;LAB4.c: 518: DireccionaLCD(0xC0);
  1766   0013BC  0EC0               	movlw	192
  1767   0013BE  ECFE  F009         	call	_DireccionaLCD
  1768                           
  1769                           ;LAB4.c: 519: MensajeLCD_Var("      STOP");
  1770   0013C2  0E67               	movlw	low STR_8
  1771   0013C4  6E16               	movwf	MensajeLCD_Var@a^0,c
  1772   0013C6  ECAC  F009         	call	_MensajeLCD_Var	;wreg free
  1773   0013CA                     l2368:
  1774                           
  1775                           ;LAB4.c: 522: GIE = 0;
  1776   0013CA  9EF2               	bcf	4082,7,c	;volatile
  1777   0013CC  D7FE               	goto	l2368
  1778   0013CE                     __end_of_Emergencia:
  1779                           	callstack 0
  1780                           
  1781 ;; *************** function _MensajeLCD_Var *****************
  1782 ;; Defined at:
  1783 ;;		line 236 in file "LibLCDXC8.h"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;  a               1   21[COMRAM] PTR unsigned char 
  1786 ;;		 -> STR_8(11), STR_7(14), STR_6(11), STR_5(12), 
  1787 ;;		 -> STR_4(16), STR_3(11), STR_2(16), STR_1(17), 
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;		None
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1799 ;;      Params:         1       0       0       0       0       0       0       0       0
  1800 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1801 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1802 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1803 ;;Total ram usage:        1 bytes
  1804 ;; Hardware stack levels used: 1
  1805 ;; Hardware stack levels required when called: 7
  1806 ;; This function calls:
  1807 ;;		_EscribeLCD_c
  1808 ;; This function is called by:
  1809 ;;		_main
  1810 ;;		_Emergencia
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           	psect	text6
  1815   001358                     __ptext6:
  1816                           	callstack 0
  1817   001358                     _MensajeLCD_Var:
  1818                           	callstack 23
  1819                           
  1820                           ;LibLCDXC8.h: 240: while (*a) {
  1821                           
  1822                           ;incstack = 0
  1823   001358  D009               	goto	l2098
  1824   00135A                     l2094:
  1825                           
  1826                           ;LibLCDXC8.h: 241: EscribeLCD_c(*a);
  1827   00135A  C016  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  1828   00135E                     	if	1	;There is more than 1 active tblptr byte
  1829   00135E  0E08               	movlw	high __smallconst
  1830   001360  6EF7               	movwf	tblptrh,c
  1831   001362                     	endif
  1832   001362                     	if	0	;tblptru may be non-zero
  1833   001362                     	endif
  1834   001362                     	if	0	;tblptru may be non-zero
  1835   001362                     	endif
  1836   001362  0008               	tblrd		*
  1837   001364  50F5               	movf	tablat,w,c
  1838   001366  ECF3  F009         	call	_EscribeLCD_c
  1839                           
  1840                           ;LibLCDXC8.h: 242: a++;
  1841   00136A  2A16               	incf	MensajeLCD_Var@a^0,f,c
  1842   00136C                     l2098:
  1843   00136C  C016  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  1844   001370                     	if	1	;There is more than 1 active tblptr byte
  1845   001370  0E08               	movlw	high __smallconst
  1846   001372  6EF7               	movwf	tblptrh,c
  1847   001374                     	endif
  1848   001374                     	if	0	;tblptru may be non-zero
  1849   001374                     	endif
  1850   001374                     	if	0	;tblptru may be non-zero
  1851   001374                     	endif
  1852   001374  0008               	tblrd		*
  1853   001376  50F5               	movf	tablat,w,c
  1854   001378  0900               	iorlw	0
  1855   00137A  B4D8               	btfsc	status,2,c
  1856   00137C  0012               	return	
  1857   00137E  D7ED               	goto	l2094
  1858   001380                     __end_of_MensajeLCD_Var:
  1859                           	callstack 0
  1860                           
  1861 ;; *************** function _Bienvenida *****************
  1862 ;; Defined at:
  1863 ;;		line 528 in file "LAB4.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;		None
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;  pos             1   26[COMRAM] unsigned char 
  1868 ;;  max_pos         1   25[COMRAM] unsigned char 
  1869 ;; Return value:  Size  Location     Type
  1870 ;;                  1    wreg      void 
  1871 ;; Registers used:
  1872 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1878 ;;      Params:         0       0       0       0       0       0       0       0       0
  1879 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1880 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1881 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1882 ;;Total ram usage:        3 bytes
  1883 ;; Hardware stack levels used: 1
  1884 ;; Hardware stack levels required when called: 8
  1885 ;; This function calls:
  1886 ;;		_ConfiguraLCD
  1887 ;;		_CrearCaracter
  1888 ;;		_DireccionaLCD
  1889 ;;		_EscribeLCD_c
  1890 ;;		_InicializaLCD
  1891 ;;		_MostrarCursorLCD
  1892 ;;		_OcultarCursorLCD
  1893 ;; This function is called by:
  1894 ;;		_main
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           	psect	text7
  1899   000CE0                     __ptext7:
  1900                           	callstack 0
  1901   000CE0                     _Bienvenida:
  1902                           	callstack 22
  1903                           
  1904                           ;LAB4.c: 530: unsigned char max_pos = 15;
  1905                           
  1906                           ;incstack = 0
  1907   000CE0  0E0F               	movlw	15
  1908   000CE2  6E1A               	movwf	Bienvenida@max_pos^0,c
  1909                           
  1910                           ;LAB4.c: 531: ConfiguraLCD(4);
  1911   000CE4  0E04               	movlw	4
  1912   000CE6  ECE7  F009         	call	_ConfiguraLCD
  1913                           
  1914                           ;LAB4.c: 532: InicializaLCD();
  1915   000CEA  ECD3  F007         	call	_InicializaLCD	;wreg free
  1916                           
  1917                           ;LAB4.c: 533: OcultarCursorLCD();
  1918   000CEE  EC1F  F00A         	call	_OcultarCursorLCD	;wreg free
  1919                           
  1920                           ;LAB4.c: 534: CrearCaracter(0, banda1);
  1921   000CF2  0E09               	movlw	low _banda1
  1922   000CF4  6E15               	movwf	CrearCaracter@data^0,c
  1923   000CF6  0E00               	movlw	0
  1924   000CF8  EC21  F008         	call	_CrearCaracter
  1925                           
  1926                           ;LAB4.c: 535: CrearCaracter(1, banda2);
  1927   000CFC  0E01               	movlw	low _banda2
  1928   000CFE  6E15               	movwf	CrearCaracter@data^0,c
  1929   000D00  0E01               	movlw	1
  1930   000D02  EC21  F008         	call	_CrearCaracter
  1931                           
  1932                           ;LAB4.c: 536: for (pos = 0; pos <= max_pos; pos++) {
  1933   000D06  6A1B               	clrf	Bienvenida@pos^0,c
  1934   000D08  D010               	goto	l2318
  1935   000D0A                     l2312:
  1936                           
  1937                           ;LAB4.c: 538: DireccionaLCD(0x80 + pos);
  1938   000D0A  501B               	movf	Bienvenida@pos^0,w,c
  1939   000D0C  0F80               	addlw	128
  1940   000D0E  ECFE  F009         	call	_DireccionaLCD
  1941                           
  1942                           ;LAB4.c: 539: EscribeLCD_c(1);
  1943   000D12  0E01               	movlw	1
  1944   000D14  ECF3  F009         	call	_EscribeLCD_c
  1945                           
  1946                           ;LAB4.c: 540: _delay((unsigned long)((50)*(1000000/4000.0)));
  1947   000D18  0E11               	movlw	17
  1948   000D1A  6E19               	movwf	??_Bienvenida^0,c
  1949   000D1C  0E3A               	movlw	58
  1950   000D1E                     u1987:
  1951   000D1E  2EE8               	decfsz	wreg,f,c
  1952   000D20  D7FE               	bra	u1987
  1953   000D22  2E19               	decfsz	??_Bienvenida^0,f,c
  1954   000D24  D7FC               	bra	u1987
  1955   000D26  D000               	nop2	
  1956   000D28  2A1B               	incf	Bienvenida@pos^0,f,c
  1957   000D2A                     l2318:
  1958   000D2A  501B               	movf	Bienvenida@pos^0,w,c
  1959   000D2C  5C1A               	subwf	Bienvenida@max_pos^0,w,c
  1960   000D2E  B0D8               	btfsc	status,0,c
  1961   000D30  D7EC               	goto	l2312
  1962                           
  1963                           ;LAB4.c: 541: };LAB4.c: 543: for (pos = 0; pos < max_pos; pos++) {
  1964   000D32  6A1B               	clrf	Bienvenida@pos^0,c
  1965   000D34  D01F               	goto	l2332
  1966   000D36                     l2320:
  1967                           
  1968                           ;LAB4.c: 545: DireccionaLCD(0x80 + pos);
  1969   000D36  501B               	movf	Bienvenida@pos^0,w,c
  1970   000D38  0F80               	addlw	128
  1971   000D3A  ECFE  F009         	call	_DireccionaLCD
  1972                           
  1973                           ;LAB4.c: 546: EscribeLCD_c(0);
  1974   000D3E  0E00               	movlw	0
  1975   000D40  ECF3  F009         	call	_EscribeLCD_c
  1976                           
  1977                           ;LAB4.c: 547: _delay((unsigned long)((50)*(1000000/4000.0)));
  1978   000D44  0E11               	movlw	17
  1979   000D46  6E19               	movwf	??_Bienvenida^0,c
  1980   000D48  0E3A               	movlw	58
  1981   000D4A                     u1997:
  1982   000D4A  2EE8               	decfsz	wreg,f,c
  1983   000D4C  D7FE               	bra	u1997
  1984   000D4E  2E19               	decfsz	??_Bienvenida^0,f,c
  1985   000D50  D7FC               	bra	u1997
  1986   000D52  D000               	nop2	
  1987                           
  1988                           ;LAB4.c: 548: DireccionaLCD(0x80 + pos);
  1989   000D54  501B               	movf	Bienvenida@pos^0,w,c
  1990   000D56  0F80               	addlw	128
  1991   000D58  ECFE  F009         	call	_DireccionaLCD
  1992                           
  1993                           ;LAB4.c: 549: EscribeLCD_c(1);
  1994   000D5C  0E01               	movlw	1
  1995   000D5E  ECF3  F009         	call	_EscribeLCD_c
  1996                           
  1997                           ;LAB4.c: 550: _delay((unsigned long)((50)*(1000000/4000.0)));
  1998   000D62  0E11               	movlw	17
  1999   000D64  6E19               	movwf	??_Bienvenida^0,c
  2000   000D66  0E3A               	movlw	58
  2001   000D68                     u2007:
  2002   000D68  2EE8               	decfsz	wreg,f,c
  2003   000D6A  D7FE               	bra	u2007
  2004   000D6C  2E19               	decfsz	??_Bienvenida^0,f,c
  2005   000D6E  D7FC               	bra	u2007
  2006   000D70  D000               	nop2	
  2007   000D72  2A1B               	incf	Bienvenida@pos^0,f,c
  2008   000D74                     l2332:
  2009   000D74  501A               	movf	Bienvenida@max_pos^0,w,c
  2010   000D76  5C1B               	subwf	Bienvenida@pos^0,w,c
  2011   000D78  A0D8               	btfss	status,0,c
  2012   000D7A  D7DD               	goto	l2320
  2013                           
  2014                           ;LAB4.c: 551: };LAB4.c: 553: DireccionaLCD(0x80 + max_pos);
  2015   000D7C  501A               	movf	Bienvenida@max_pos^0,w,c
  2016   000D7E  0F80               	addlw	128
  2017   000D80  ECFE  F009         	call	_DireccionaLCD
  2018                           
  2019                           ;LAB4.c: 554: EscribeLCD_c(0);
  2020   000D84  0E00               	movlw	0
  2021   000D86  ECF3  F009         	call	_EscribeLCD_c
  2022                           
  2023                           ;LAB4.c: 555: for (pos = max_pos; pos > 0; pos--) {
  2024   000D8A  C01A  F01B         	movff	Bienvenida@max_pos,Bienvenida@pos
  2025   000D8E                     l2338:
  2026   000D8E  501B               	movf	Bienvenida@pos^0,w,c
  2027   000D90  B4D8               	btfsc	status,2,c
  2028   000D92  D020               	goto	l2356
  2029                           
  2030                           ;LAB4.c: 557: DireccionaLCD(0x80 + pos);
  2031   000D94  501B               	movf	Bienvenida@pos^0,w,c
  2032   000D96  0F80               	addlw	128
  2033   000D98  ECFE  F009         	call	_DireccionaLCD
  2034                           
  2035                           ;LAB4.c: 558: EscribeLCD_c(0);
  2036   000D9C  0E00               	movlw	0
  2037   000D9E  ECF3  F009         	call	_EscribeLCD_c
  2038                           
  2039                           ;LAB4.c: 559: _delay((unsigned long)((50)*(1000000/4000.0)));
  2040   000DA2  0E11               	movlw	17
  2041   000DA4  6E19               	movwf	??_Bienvenida^0,c
  2042   000DA6  0E3A               	movlw	58
  2043   000DA8                     u2017:
  2044   000DA8  2EE8               	decfsz	wreg,f,c
  2045   000DAA  D7FE               	bra	u2017
  2046   000DAC  2E19               	decfsz	??_Bienvenida^0,f,c
  2047   000DAE  D7FC               	bra	u2017
  2048   000DB0  D000               	nop2	
  2049                           
  2050                           ;LAB4.c: 560: DireccionaLCD(0x80 + pos);
  2051   000DB2  501B               	movf	Bienvenida@pos^0,w,c
  2052   000DB4  0F80               	addlw	128
  2053   000DB6  ECFE  F009         	call	_DireccionaLCD
  2054                           
  2055                           ;LAB4.c: 561: EscribeLCD_c(1);
  2056   000DBA  0E01               	movlw	1
  2057   000DBC  ECF3  F009         	call	_EscribeLCD_c
  2058                           
  2059                           ;LAB4.c: 562: _delay((unsigned long)((50)*(1000000/4000.0)));
  2060   000DC0  0E11               	movlw	17
  2061   000DC2  6E19               	movwf	??_Bienvenida^0,c
  2062   000DC4  0E3A               	movlw	58
  2063   000DC6                     u2027:
  2064   000DC6  2EE8               	decfsz	wreg,f,c
  2065   000DC8  D7FE               	bra	u2027
  2066   000DCA  2E19               	decfsz	??_Bienvenida^0,f,c
  2067   000DCC  D7FC               	bra	u2027
  2068   000DCE  D000               	nop2	
  2069   000DD0  061B               	decf	Bienvenida@pos^0,f,c
  2070   000DD2  D7DD               	goto	l2338
  2071   000DD4                     l2356:
  2072                           
  2073                           ;LAB4.c: 566: MostrarCursorLCD();
  2074   000DD4  EC29  F00A         	call	_MostrarCursorLCD	;wreg free
  2075   000DD8  0012               	return		;funcret
  2076   000DDA                     __end_of_Bienvenida:
  2077                           	callstack 0
  2078                           
  2079 ;; *************** function _OcultarCursorLCD *****************
  2080 ;; Defined at:
  2081 ;;		line 314 in file "LibLCDXC8.h"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;		None
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;		None
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      void 
  2088 ;; Registers used:
  2089 ;;		wreg, status,2, status,0, cstack
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2095 ;;      Params:         0       0       0       0       0       0       0       0       0
  2096 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2097 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2098 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2099 ;;Total ram usage:        0 bytes
  2100 ;; Hardware stack levels used: 1
  2101 ;; Hardware stack levels required when called: 6
  2102 ;; This function calls:
  2103 ;;		_EnviaDato
  2104 ;;		_HabilitaLCD
  2105 ;;		_RetardoLCD
  2106 ;; This function is called by:
  2107 ;;		_main
  2108 ;;		_Bienvenida
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           	psect	text8
  2113   00143E                     __ptext8:
  2114                           	callstack 0
  2115   00143E                     _OcultarCursorLCD:
  2116                           	callstack 24
  2117                           
  2118                           ;LibLCDXC8.h: 315: LATA3 = 0;
  2119                           
  2120                           ;incstack = 0
  2121   00143E  9689               	bcf	3977,3,c	;volatile
  2122                           
  2123                           ;LibLCDXC8.h: 316: EnviaDato(0x0C);
  2124   001440  0E0C               	movlw	12
  2125   001442  ECF8  F008         	call	_EnviaDato
  2126                           
  2127                           ;LibLCDXC8.h: 317: HabilitaLCD();
  2128   001446  EC3D  F00A         	call	_HabilitaLCD	;wreg free
  2129                           
  2130                           ;LibLCDXC8.h: 318: RetardoLCD(4);
  2131   00144A  0E04               	movlw	4
  2132   00144C  EC4E  F008         	call	_RetardoLCD
  2133   001450  0012               	return		;funcret
  2134   001452                     __end_of_OcultarCursorLCD:
  2135                           	callstack 0
  2136                           
  2137 ;; *************** function _MostrarCursorLCD *****************
  2138 ;; Defined at:
  2139 ;;		line 320 in file "LibLCDXC8.h"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;		None
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;		None
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  1    wreg      void 
  2146 ;; Registers used:
  2147 ;;		wreg, status,2, status,0, cstack
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2153 ;;      Params:         0       0       0       0       0       0       0       0       0
  2154 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2156 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2157 ;;Total ram usage:        0 bytes
  2158 ;; Hardware stack levels used: 1
  2159 ;; Hardware stack levels required when called: 6
  2160 ;; This function calls:
  2161 ;;		_EnviaDato
  2162 ;;		_HabilitaLCD
  2163 ;;		_RetardoLCD
  2164 ;; This function is called by:
  2165 ;;		_main
  2166 ;;		_Bienvenida
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text9
  2171   001452                     __ptext9:
  2172                           	callstack 0
  2173   001452                     _MostrarCursorLCD:
  2174                           	callstack 24
  2175                           
  2176                           ;LibLCDXC8.h: 321: LATA3 = 0;
  2177                           
  2178                           ;incstack = 0
  2179   001452  9689               	bcf	3977,3,c	;volatile
  2180                           
  2181                           ;LibLCDXC8.h: 322: EnviaDato(0x0E);
  2182   001454  0E0E               	movlw	14
  2183   001456  ECF8  F008         	call	_EnviaDato
  2184                           
  2185                           ;LibLCDXC8.h: 324: HabilitaLCD();
  2186   00145A  EC3D  F00A         	call	_HabilitaLCD	;wreg free
  2187                           
  2188                           ;LibLCDXC8.h: 325: RetardoLCD(4);
  2189   00145E  0E04               	movlw	4
  2190   001460  EC4E  F008         	call	_RetardoLCD
  2191   001464  0012               	return		;funcret
  2192   001466                     __end_of_MostrarCursorLCD:
  2193                           	callstack 0
  2194                           
  2195 ;; *************** function _InicializaLCD *****************
  2196 ;; Defined at:
  2197 ;;		line 75 in file "LibLCDXC8.h"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;		None
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;		None
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      void 
  2204 ;; Registers used:
  2205 ;;		wreg, status,2, status,0, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2211 ;;      Params:         0       0       0       0       0       0       0       0       0
  2212 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2213 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2214 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2215 ;;Total ram usage:        0 bytes
  2216 ;; Hardware stack levels used: 1
  2217 ;; Hardware stack levels required when called: 7
  2218 ;; This function calls:
  2219 ;;		_BorraLCD
  2220 ;;		_EnviaDato
  2221 ;;		_HabilitaLCD
  2222 ;;		_RetardoLCD
  2223 ;; This function is called by:
  2224 ;;		_main
  2225 ;;		_Bienvenida
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text10
  2230   000FA6                     __ptext10:
  2231                           	callstack 0
  2232   000FA6                     _InicializaLCD:
  2233                           	callstack 23
  2234                           
  2235                           ;LibLCDXC8.h: 77: LATA3=0;
  2236                           
  2237                           ;incstack = 0
  2238   000FA6  9689               	bcf	3977,3,c	;volatile
  2239                           
  2240                           ;LibLCDXC8.h: 78: if(interfaz==4)
  2241   000FA8  0E04               	movlw	4
  2242   000FAA  182F               	xorwf	_interfaz^0,w,c
  2243   000FAC  A4D8               	btfss	status,2,c
  2244   000FAE  D004               	goto	l2044
  2245                           
  2246                           ;LibLCDXC8.h: 79: LATD=(LATD & 0b00001111) | 0x30;
  2247   000FB0  508C               	movf	140,w,c	;volatile
  2248   000FB2  0B0F               	andlw	15
  2249   000FB4  0930               	iorlw	48
  2250   000FB6  D001               	goto	L1
  2251   000FB8                     l2044:
  2252                           
  2253                           ;LibLCDXC8.h: 80: else;LibLCDXC8.h: 81: LATD=0x3F;
  2254   000FB8  0E3F               	movlw	63
  2255   000FBA                     L1:
  2256   000FBA  6E8C               	movwf	140,c	;volatile
  2257                           
  2258                           ;LibLCDXC8.h: 82: HabilitaLCD();
  2259   000FBC  EC3D  F00A         	call	_HabilitaLCD	;wreg free
  2260                           
  2261                           ;LibLCDXC8.h: 83: RetardoLCD(1);
  2262   000FC0  0E01               	movlw	1
  2263   000FC2  EC4E  F008         	call	_RetardoLCD
  2264                           
  2265                           ;LibLCDXC8.h: 84: if(interfaz==4)
  2266   000FC6  0E04               	movlw	4
  2267   000FC8  182F               	xorwf	_interfaz^0,w,c
  2268   000FCA  A4D8               	btfss	status,2,c
  2269   000FCC  D004               	goto	l2054
  2270                           
  2271                           ;LibLCDXC8.h: 85: LATD=(LATD & 0b00001111) | 0x30;
  2272   000FCE  508C               	movf	140,w,c	;volatile
  2273   000FD0  0B0F               	andlw	15
  2274   000FD2  0930               	iorlw	48
  2275   000FD4  D001               	goto	L2
  2276   000FD6                     l2054:
  2277                           
  2278                           ;LibLCDXC8.h: 86: else;LibLCDXC8.h: 87: LATD=0x3F;
  2279   000FD6  0E3F               	movlw	63
  2280   000FD8                     L2:
  2281   000FD8  6E8C               	movwf	140,c	;volatile
  2282                           
  2283                           ;LibLCDXC8.h: 88: HabilitaLCD();
  2284   000FDA  EC3D  F00A         	call	_HabilitaLCD	;wreg free
  2285                           
  2286                           ;LibLCDXC8.h: 89: RetardoLCD(3);
  2287   000FDE  0E03               	movlw	3
  2288   000FE0  EC4E  F008         	call	_RetardoLCD
  2289                           
  2290                           ;LibLCDXC8.h: 90: if(interfaz==4)
  2291   000FE4  0E04               	movlw	4
  2292   000FE6  182F               	xorwf	_interfaz^0,w,c
  2293   000FE8  A4D8               	btfss	status,2,c
  2294   000FEA  D004               	goto	l2064
  2295                           
  2296                           ;LibLCDXC8.h: 91: LATD=(LATD & 0b00001111) | 0x30;
  2297   000FEC  508C               	movf	140,w,c	;volatile
  2298   000FEE  0B0F               	andlw	15
  2299   000FF0  0930               	iorlw	48
  2300   000FF2  D001               	goto	L3
  2301   000FF4                     l2064:
  2302                           
  2303                           ;LibLCDXC8.h: 92: else;LibLCDXC8.h: 93: LATD=0x3F;
  2304   000FF4  0E3F               	movlw	63
  2305   000FF6                     L3:
  2306   000FF6  6E8C               	movwf	140,c	;volatile
  2307                           
  2308                           ;LibLCDXC8.h: 94: HabilitaLCD();
  2309   000FF8  EC3D  F00A         	call	_HabilitaLCD	;wreg free
  2310                           
  2311                           ;LibLCDXC8.h: 95: RetardoLCD(4);
  2312   000FFC  0E04               	movlw	4
  2313   000FFE  EC4E  F008         	call	_RetardoLCD
  2314                           
  2315                           ;LibLCDXC8.h: 96: if(interfaz==4){
  2316   001002  0E04               	movlw	4
  2317   001004  182F               	xorwf	_interfaz^0,w,c
  2318   001006  A4D8               	btfss	status,2,c
  2319   001008  D011               	goto	l2084
  2320                           
  2321                           ;LibLCDXC8.h: 97: LATD=(LATD & 0b00001111) | 0x20;
  2322   00100A  508C               	movf	140,w,c	;volatile
  2323   00100C  0B0F               	andlw	15
  2324   00100E  0920               	iorlw	32
  2325   001010  6E8C               	movwf	140,c	;volatile
  2326                           
  2327                           ;LibLCDXC8.h: 98: HabilitaLCD();
  2328   001012  EC3D  F00A         	call	_HabilitaLCD	;wreg free
  2329                           
  2330                           ;LibLCDXC8.h: 99: RetardoLCD(4);
  2331   001016  0E04               	movlw	4
  2332   001018  EC4E  F008         	call	_RetardoLCD
  2333                           
  2334                           ;LibLCDXC8.h: 100: EnviaDato(0x2F);
  2335   00101C  0E2F               	movlw	47
  2336   00101E  ECF8  F008         	call	_EnviaDato
  2337                           
  2338                           ;LibLCDXC8.h: 101: HabilitaLCD();
  2339   001022  EC3D  F00A         	call	_HabilitaLCD	;wreg free
  2340                           
  2341                           ;LibLCDXC8.h: 102: RetardoLCD(4);
  2342   001026  0E04               	movlw	4
  2343   001028  EC4E  F008         	call	_RetardoLCD
  2344   00102C                     l2084:
  2345                           
  2346                           ;LibLCDXC8.h: 103: };LibLCDXC8.h: 104: BorraLCD();
  2347   00102C  EC33  F00A         	call	_BorraLCD	;wreg free
  2348                           
  2349                           ;LibLCDXC8.h: 105: EnviaDato(0xF);
  2350   001030  0E0F               	movlw	15
  2351   001032  ECF8  F008         	call	_EnviaDato
  2352                           
  2353                           ;LibLCDXC8.h: 106: HabilitaLCD();
  2354   001036  EC3D  F00A         	call	_HabilitaLCD	;wreg free
  2355                           
  2356                           ;LibLCDXC8.h: 107: RetardoLCD(4);
  2357   00103A  0E04               	movlw	4
  2358   00103C  EC4E  F008         	call	_RetardoLCD
  2359   001040  0012               	return		;funcret
  2360   001042                     __end_of_InicializaLCD:
  2361                           	callstack 0
  2362                           
  2363 ;; *************** function _BorraLCD *****************
  2364 ;; Defined at:
  2365 ;;		line 116 in file "LibLCDXC8.h"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;		None
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;		None
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  1    wreg      void 
  2372 ;; Registers used:
  2373 ;;		wreg, status,2, status,0, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2379 ;;      Params:         0       0       0       0       0       0       0       0       0
  2380 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2381 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2382 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2383 ;;Total ram usage:        0 bytes
  2384 ;; Hardware stack levels used: 1
  2385 ;; Hardware stack levels required when called: 6
  2386 ;; This function calls:
  2387 ;;		_EnviaDato
  2388 ;;		_HabilitaLCD
  2389 ;;		_RetardoLCD
  2390 ;; This function is called by:
  2391 ;;		_InicializaLCD
  2392 ;;		_main
  2393 ;;		_Emergencia
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text11
  2398   001466                     __ptext11:
  2399                           	callstack 0
  2400   001466                     _BorraLCD:
  2401                           	callstack 23
  2402                           
  2403                           ;LibLCDXC8.h: 118: LATA3=0;
  2404                           
  2405                           ;incstack = 0
  2406   001466  9689               	bcf	3977,3,c	;volatile
  2407                           
  2408                           ;LibLCDXC8.h: 119: EnviaDato(0x01);
  2409   001468  0E01               	movlw	1
  2410   00146A  ECF8  F008         	call	_EnviaDato
  2411                           
  2412                           ;LibLCDXC8.h: 120: HabilitaLCD();
  2413   00146E  EC3D  F00A         	call	_HabilitaLCD	;wreg free
  2414                           
  2415                           ;LibLCDXC8.h: 121: RetardoLCD(2);
  2416   001472  0E02               	movlw	2
  2417   001474  EC4E  F008         	call	_RetardoLCD
  2418   001478  0012               	return		;funcret
  2419   00147A                     __end_of_BorraLCD:
  2420                           	callstack 0
  2421                           
  2422 ;; *************** function _EscribeLCD_c *****************
  2423 ;; Defined at:
  2424 ;;		line 140 in file "LibLCDXC8.h"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  a               1    wreg     unsigned char 
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;  a               1   20[COMRAM] unsigned char 
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		wreg, status,2, status,0, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2438 ;;      Params:         0       0       0       0       0       0       0       0       0
  2439 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2440 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2441 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2442 ;;Total ram usage:        1 bytes
  2443 ;; Hardware stack levels used: 1
  2444 ;; Hardware stack levels required when called: 6
  2445 ;; This function calls:
  2446 ;;		_EnviaDato
  2447 ;;		_HabilitaLCD
  2448 ;;		_RetardoLCD
  2449 ;; This function is called by:
  2450 ;;		_MensajeLCD_Var
  2451 ;;		_Bienvenida
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           	psect	text12
  2456   0013E6                     __ptext12:
  2457                           	callstack 0
  2458   0013E6                     _EscribeLCD_c:
  2459                           	callstack 23
  2460                           
  2461                           ;incstack = 0
  2462                           ;EscribeLCD_c@a stored from wreg
  2463   0013E6  6E15               	movwf	EscribeLCD_c@a^0,c
  2464                           
  2465                           ;LibLCDXC8.h: 144: LATA3=1;
  2466   0013E8  8689               	bsf	3977,3,c	;volatile
  2467                           
  2468                           ;LibLCDXC8.h: 145: EnviaDato(a);
  2469   0013EA  5015               	movf	EscribeLCD_c@a^0,w,c
  2470   0013EC  ECF8  F008         	call	_EnviaDato
  2471                           
  2472                           ;LibLCDXC8.h: 146: HabilitaLCD();
  2473   0013F0  EC3D  F00A         	call	_HabilitaLCD	;wreg free
  2474                           
  2475                           ;LibLCDXC8.h: 147: RetardoLCD(4);
  2476   0013F4  0E04               	movlw	4
  2477   0013F6  EC4E  F008         	call	_RetardoLCD
  2478   0013FA  0012               	return		;funcret
  2479   0013FC                     __end_of_EscribeLCD_c:
  2480                           	callstack 0
  2481                           
  2482 ;; *************** function _DireccionaLCD *****************
  2483 ;; Defined at:
  2484 ;;		line 247 in file "LibLCDXC8.h"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  a               1    wreg     unsigned char 
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;  a               1   20[COMRAM] unsigned char 
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      void 
  2491 ;; Registers used:
  2492 ;;		wreg, status,2, status,0, cstack
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2498 ;;      Params:         0       0       0       0       0       0       0       0       0
  2499 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2500 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2501 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2502 ;;Total ram usage:        1 bytes
  2503 ;; Hardware stack levels used: 1
  2504 ;; Hardware stack levels required when called: 6
  2505 ;; This function calls:
  2506 ;;		_EnviaDato
  2507 ;;		_HabilitaLCD
  2508 ;;		_RetardoLCD
  2509 ;; This function is called by:
  2510 ;;		_main
  2511 ;;		_Emergencia
  2512 ;;		_Bienvenida
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text13
  2517   0013FC                     __ptext13:
  2518                           	callstack 0
  2519   0013FC                     _DireccionaLCD:
  2520                           	callstack 23
  2521                           
  2522                           ;incstack = 0
  2523                           ;DireccionaLCD@a stored from wreg
  2524   0013FC  6E15               	movwf	DireccionaLCD@a^0,c
  2525                           
  2526                           ;LibLCDXC8.h: 250: LATA3=0;
  2527   0013FE  9689               	bcf	3977,3,c	;volatile
  2528                           
  2529                           ;LibLCDXC8.h: 251: EnviaDato(a);
  2530   001400  5015               	movf	DireccionaLCD@a^0,w,c
  2531   001402  ECF8  F008         	call	_EnviaDato
  2532                           
  2533                           ;LibLCDXC8.h: 252: HabilitaLCD();
  2534   001406  EC3D  F00A         	call	_HabilitaLCD	;wreg free
  2535                           
  2536                           ;LibLCDXC8.h: 253: RetardoLCD(4);
  2537   00140A  0E04               	movlw	4
  2538   00140C  EC4E  F008         	call	_RetardoLCD
  2539   001410  0012               	return		;funcret
  2540   001412                     __end_of_DireccionaLCD:
  2541                           	callstack 0
  2542                           
  2543 ;; *************** function _CrearCaracter *****************
  2544 ;; Defined at:
  2545 ;;		line 328 in file "LibLCDXC8.h"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  pos             1    wreg     unsigned char 
  2548 ;;  data            1   20[COMRAM] PTR const unsigned char 
  2549 ;;		 -> banda2(8), banda1(8), 
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;  pos             1   22[COMRAM] unsigned char 
  2552 ;;  i               1   23[COMRAM] unsigned char 
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      void 
  2555 ;; Registers used:
  2556 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2562 ;;      Params:         1       0       0       0       0       0       0       0       0
  2563 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2564 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2565 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2566 ;;Total ram usage:        4 bytes
  2567 ;; Hardware stack levels used: 1
  2568 ;; Hardware stack levels required when called: 6
  2569 ;; This function calls:
  2570 ;;		_EnviaDato
  2571 ;;		_HabilitaLCD
  2572 ;;		_RetardoLCD
  2573 ;; This function is called by:
  2574 ;;		_Bienvenida
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           	psect	text14
  2579   001042                     __ptext14:
  2580                           	callstack 0
  2581   001042                     _CrearCaracter:
  2582                           	callstack 23
  2583                           
  2584                           ;incstack = 0
  2585                           ;CrearCaracter@pos stored from wreg
  2586   001042  6E17               	movwf	CrearCaracter@pos^0,c
  2587                           
  2588                           ;LibLCDXC8.h: 329: unsigned char i;;LibLCDXC8.h: 331: LATA3 = 0;
  2589   001044  9689               	bcf	3977,3,c	;volatile
  2590                           
  2591                           ;LibLCDXC8.h: 332: EnviaDato(0x40 + (pos * 8));
  2592   001046  5017               	movf	CrearCaracter@pos^0,w,c
  2593   001048  0D08               	mullw	8
  2594   00104A  50F3               	movf	243,w,c
  2595   00104C  0F40               	addlw	64
  2596   00104E  ECF8  F008         	call	_EnviaDato
  2597                           
  2598                           ;LibLCDXC8.h: 333: HabilitaLCD();
  2599   001052  EC3D  F00A         	call	_HabilitaLCD	;wreg free
  2600                           
  2601                           ;LibLCDXC8.h: 334: RetardoLCD(4);
  2602   001056  0E04               	movlw	4
  2603   001058  EC4E  F008         	call	_RetardoLCD
  2604                           
  2605                           ;LibLCDXC8.h: 337: LATA3 = 1;
  2606   00105C  8689               	bsf	3977,3,c	;volatile
  2607                           
  2608                           ;LibLCDXC8.h: 338: for(i = 0; i < 8; i++) {
  2609   00105E  6A18               	clrf	CrearCaracter@i^0,c
  2610   001060                     l2140:
  2611                           
  2612                           ;LibLCDXC8.h: 339: EnviaDato(data[i]);
  2613   001060  5015               	movf	CrearCaracter@data^0,w,c
  2614   001062  2418               	addwf	CrearCaracter@i^0,w,c
  2615   001064  6E16               	movwf	??_CrearCaracter^0,c
  2616   001066  C016  FFF6         	movff	??_CrearCaracter,tblptrl
  2617   00106A                     	if	1	;There is more than 1 active tblptr byte
  2618   00106A  0E08               	movlw	high __smallconst
  2619   00106C  6EF7               	movwf	tblptrh,c
  2620   00106E                     	endif
  2621   00106E                     	if	0	;tblptru may be non-zero
  2622   00106E                     	endif
  2623   00106E                     	if	0	;tblptru may be non-zero
  2624   00106E                     	endif
  2625   00106E  0008               	tblrd		*
  2626   001070  50F5               	movf	tablat,w,c
  2627   001072  ECF8  F008         	call	_EnviaDato
  2628                           
  2629                           ;LibLCDXC8.h: 340: HabilitaLCD();
  2630   001076  EC3D  F00A         	call	_HabilitaLCD	;wreg free
  2631                           
  2632                           ;LibLCDXC8.h: 341: RetardoLCD(4);
  2633   00107A  0E04               	movlw	4
  2634   00107C  EC4E  F008         	call	_RetardoLCD
  2635   001080  2A18               	incf	CrearCaracter@i^0,f,c
  2636   001082  0E07               	movlw	7
  2637   001084  6418               	cpfsgt	CrearCaracter@i^0,c
  2638   001086  D7EC               	goto	l2140
  2639                           
  2640                           ;LibLCDXC8.h: 342: };LibLCDXC8.h: 345: LATA3 = 0;
  2641   001088  9689               	bcf	3977,3,c	;volatile
  2642                           
  2643                           ;LibLCDXC8.h: 346: EnviaDato(0x80);
  2644   00108A  0E80               	movlw	128
  2645   00108C  ECF8  F008         	call	_EnviaDato
  2646                           
  2647                           ;LibLCDXC8.h: 347: HabilitaLCD();
  2648   001090  EC3D  F00A         	call	_HabilitaLCD	;wreg free
  2649                           
  2650                           ;LibLCDXC8.h: 348: RetardoLCD(4);
  2651   001094  0E04               	movlw	4
  2652   001096  EC4E  F008         	call	_RetardoLCD
  2653   00109A  0012               	return		;funcret
  2654   00109C                     __end_of_CrearCaracter:
  2655                           	callstack 0
  2656                           
  2657 ;; *************** function _EnviaDato *****************
  2658 ;; Defined at:
  2659 ;;		line 63 in file "LibLCDXC8.h"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;  a               1    wreg     unsigned char 
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;  a               1   19[COMRAM] unsigned char 
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  1    wreg      void 
  2666 ;; Registers used:
  2667 ;;		wreg, status,2, status,0, cstack
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2673 ;;      Params:         0       0       0       0       0       0       0       0       0
  2674 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2675 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2676 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2677 ;;Total ram usage:        2 bytes
  2678 ;; Hardware stack levels used: 1
  2679 ;; Hardware stack levels required when called: 5
  2680 ;; This function calls:
  2681 ;;		_HabilitaLCD
  2682 ;;		_RetardoLCD
  2683 ;; This function is called by:
  2684 ;;		_InicializaLCD
  2685 ;;		_BorraLCD
  2686 ;;		_EscribeLCD_c
  2687 ;;		_EscribeLCD_n8
  2688 ;;		_DireccionaLCD
  2689 ;;		_OcultarCursorLCD
  2690 ;;		_MostrarCursorLCD
  2691 ;;		_CrearCaracter
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text15
  2696   0011F0                     __ptext15:
  2697                           	callstack 0
  2698   0011F0                     _EnviaDato:
  2699                           	callstack 24
  2700                           
  2701                           ;incstack = 0
  2702                           ;EnviaDato@a stored from wreg
  2703   0011F0  6E14               	movwf	EnviaDato@a^0,c
  2704                           
  2705                           ;LibLCDXC8.h: 64: if(interfaz==4){
  2706   0011F2  0E04               	movlw	4
  2707   0011F4  182F               	xorwf	_interfaz^0,w,c
  2708   0011F6  A4D8               	btfss	status,2,c
  2709   0011F8  D01A               	goto	l1994
  2710                           
  2711                           ;LibLCDXC8.h: 65: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  2712   0011FA  C014  F013         	movff	EnviaDato@a,??_EnviaDato
  2713   0011FE  0EF0               	movlw	240
  2714   001200  1613               	andwf	??_EnviaDato^0,f,c
  2715   001202  508C               	movf	140,w,c	;volatile
  2716   001204  0B0F               	andlw	15
  2717   001206  1013               	iorwf	??_EnviaDato^0,w,c
  2718   001208  6E8C               	movwf	140,c	;volatile
  2719                           
  2720                           ;LibLCDXC8.h: 66: HabilitaLCD();
  2721   00120A  EC3D  F00A         	call	_HabilitaLCD	;wreg free
  2722                           
  2723                           ;LibLCDXC8.h: 67: RetardoLCD(1);
  2724   00120E  0E01               	movlw	1
  2725   001210  EC4E  F008         	call	_RetardoLCD
  2726                           
  2727                           ;LibLCDXC8.h: 68: LATD=(LATD & 0b00001111) | (a<<4);
  2728   001214  C014  F013         	movff	EnviaDato@a,??_EnviaDato
  2729   001218  3A13               	swapf	??_EnviaDato^0,f,c
  2730   00121A  0EF0               	movlw	240
  2731   00121C  1613               	andwf	??_EnviaDato^0,f,c
  2732   00121E  508C               	movf	140,w,c	;volatile
  2733   001220  0B0F               	andlw	15
  2734   001222  1013               	iorwf	??_EnviaDato^0,w,c
  2735   001224  6E8C               	movwf	140,c	;volatile
  2736                           
  2737                           ;LibLCDXC8.h: 70: RetardoLCD(1);
  2738   001226  0E01               	movlw	1
  2739   001228  EC4E  F008         	call	_RetardoLCD
  2740                           
  2741                           ;LibLCDXC8.h: 71: }else if(interfaz==8){
  2742   00122C  0012               	return	
  2743   00122E                     l1994:
  2744   00122E  0E08               	movlw	8
  2745   001230  182F               	xorwf	_interfaz^0,w,c
  2746   001232  A4D8               	btfss	status,2,c
  2747   001234  0012               	return	
  2748                           
  2749                           ;LibLCDXC8.h: 72: LATD=a;
  2750   001236  C014  FF8C         	movff	EnviaDato@a,3980	;volatile
  2751   00123A  0012               	return		;funcret
  2752   00123C                     __end_of_EnviaDato:
  2753                           	callstack 0
  2754                           
  2755 ;; *************** function _RetardoLCD *****************
  2756 ;; Defined at:
  2757 ;;		line 287 in file "LibLCDXC8.h"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;  a               1    wreg     unsigned char 
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;  a               1   17[COMRAM] unsigned char 
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  1    wreg      void 
  2764 ;; Registers used:
  2765 ;;		wreg, status,2, status,0
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2771 ;;      Params:         0       0       0       0       0       0       0       0       0
  2772 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2773 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2774 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2775 ;;Total ram usage:        2 bytes
  2776 ;; Hardware stack levels used: 1
  2777 ;; Hardware stack levels required when called: 4
  2778 ;; This function calls:
  2779 ;;		Nothing
  2780 ;; This function is called by:
  2781 ;;		_EnviaDato
  2782 ;;		_InicializaLCD
  2783 ;;		_BorraLCD
  2784 ;;		_EscribeLCD_c
  2785 ;;		_EscribeLCD_n8
  2786 ;;		_DireccionaLCD
  2787 ;;		_OcultarCursorLCD
  2788 ;;		_MostrarCursorLCD
  2789 ;;		_CrearCaracter
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text16
  2794   00109C                     __ptext16:
  2795                           	callstack 0
  2796   00109C                     _RetardoLCD:
  2797                           	callstack 25
  2798                           
  2799                           ;incstack = 0
  2800                           ;RetardoLCD@a stored from wreg
  2801   00109C  6E12               	movwf	RetardoLCD@a^0,c
  2802                           
  2803                           ;LibLCDXC8.h: 288: switch(a){
  2804   00109E  D01B               	goto	l1980
  2805   0010A0                     l1970:
  2806   0010A0  0E05               	movlw	5
  2807   0010A2  6E11               	movwf	??_RetardoLCD^0,c
  2808   0010A4  0EDE               	movlw	222
  2809   0010A6                     u2037:
  2810   0010A6  2EE8               	decfsz	wreg,f,c
  2811   0010A8  D7FE               	bra	u2037
  2812   0010AA  2E11               	decfsz	??_RetardoLCD^0,f,c
  2813   0010AC  D7FC               	bra	u2037
  2814                           
  2815                           ;LibLCDXC8.h: 291: break;
  2816   0010AE  0012               	return	
  2817   0010B0                     l1972:
  2818   0010B0  0E53               	movlw	83
  2819   0010B2                     u2047:
  2820   0010B2  2EE8               	decfsz	wreg,f,c
  2821   0010B4  D7FE               	bra	u2047
  2822   0010B6  0000               	nop	
  2823                           
  2824                           ;LibLCDXC8.h: 293: _delay((unsigned long)((640)*(1000000/4000000.0)));
  2825   0010B8  0E35               	movlw	53
  2826   0010BA                     u2057:
  2827   0010BA  2EE8               	decfsz	wreg,f,c
  2828   0010BC  D7FE               	bra	u2057
  2829   0010BE  0000               	nop	
  2830                           
  2831                           ;LibLCDXC8.h: 295: break;
  2832   0010C0  0012               	return	
  2833   0010C2                     l1974:
  2834   0010C2  0E08               	movlw	8
  2835   0010C4                     u2067:
  2836   0010C4  2EE8               	decfsz	wreg,f,c
  2837   0010C6  D7FE               	bra	u2067
  2838   0010C8  0000               	nop	
  2839                           
  2840                           ;LibLCDXC8.h: 298: break;
  2841   0010CA  0012               	return	
  2842   0010CC                     l1976:
  2843   0010CC  0E03               	movlw	3
  2844   0010CE                     u2077:
  2845   0010CE  2EE8               	decfsz	wreg,f,c
  2846   0010D0  D7FE               	bra	u2077
  2847   0010D2  0000               	nop	
  2848                           
  2849                           ;LibLCDXC8.h: 301: break;
  2850   0010D4  0012               	return	
  2851   0010D6                     l1980:
  2852   0010D6  5012               	movf	RetardoLCD@a^0,w,c
  2853                           
  2854                           ; Switch size 1, requested type "simple"
  2855                           ; Number of cases is 4, Range of values is 1 to 4
  2856                           ; switch strategies available:
  2857                           ; Name         Instructions Cycles
  2858                           ; simple_byte           13     7 (average)
  2859                           ;	Chosen strategy is simple_byte
  2860   0010D8  0A01               	xorlw	1	; case 1
  2861   0010DA  B4D8               	btfsc	status,2,c
  2862   0010DC  D7E1               	goto	l1970
  2863   0010DE  0A03               	xorlw	3	; case 2
  2864   0010E0  B4D8               	btfsc	status,2,c
  2865   0010E2  D7E6               	goto	l1972
  2866   0010E4  0A01               	xorlw	1	; case 3
  2867   0010E6  B4D8               	btfsc	status,2,c
  2868   0010E8  D7EC               	goto	l1974
  2869   0010EA  0A07               	xorlw	7	; case 4
  2870   0010EC  A4D8               	btfss	status,2,c
  2871   0010EE  0012               	return	
  2872   0010F0  D7ED               	goto	l1976
  2873   0010F2                     __end_of_RetardoLCD:
  2874                           	callstack 0
  2875                           
  2876 ;; *************** function _HabilitaLCD *****************
  2877 ;; Defined at:
  2878 ;;		line 109 in file "LibLCDXC8.h"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;		None
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;		None
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  1    wreg      void 
  2885 ;; Registers used:
  2886 ;;		wreg
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2892 ;;      Params:         0       0       0       0       0       0       0       0       0
  2893 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2894 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2895 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2896 ;;Total ram usage:        0 bytes
  2897 ;; Hardware stack levels used: 1
  2898 ;; Hardware stack levels required when called: 4
  2899 ;; This function calls:
  2900 ;;		Nothing
  2901 ;; This function is called by:
  2902 ;;		_EnviaDato
  2903 ;;		_InicializaLCD
  2904 ;;		_BorraLCD
  2905 ;;		_EscribeLCD_c
  2906 ;;		_EscribeLCD_n8
  2907 ;;		_DireccionaLCD
  2908 ;;		_OcultarCursorLCD
  2909 ;;		_MostrarCursorLCD
  2910 ;;		_CrearCaracter
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           	psect	text17
  2915   00147A                     __ptext17:
  2916                           	callstack 0
  2917   00147A                     _HabilitaLCD:
  2918                           	callstack 25
  2919                           
  2920                           ;LibLCDXC8.h: 111: LATA5=1;
  2921                           
  2922                           ;incstack = 0
  2923   00147A  8A89               	bsf	3977,5,c	;volatile
  2924                           
  2925                           ;LibLCDXC8.h: 112: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2926   00147C  0E03               	movlw	3
  2927   00147E                     u2087:
  2928   00147E  2EE8               	decfsz	wreg,f,c
  2929   001480  D7FE               	bra	u2087
  2930   001482  0000               	nop	
  2931                           
  2932                           ;LibLCDXC8.h: 114: LATA5=0;
  2933   001484  9A89               	bcf	3977,5,c	;volatile
  2934   001486  0012               	return		;funcret
  2935   001488                     __end_of_HabilitaLCD:
  2936                           	callstack 0
  2937                           
  2938 ;; *************** function _ConfiguraLCD *****************
  2939 ;; Defined at:
  2940 ;;		line 59 in file "LibLCDXC8.h"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  a               1    wreg     unsigned char 
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  a               1   16[COMRAM] unsigned char 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  1    wreg      void 
  2947 ;; Registers used:
  2948 ;;		wreg, status,2, status,0
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2954 ;;      Params:         0       0       0       0       0       0       0       0       0
  2955 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2956 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2957 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2958 ;;Total ram usage:        1 bytes
  2959 ;; Hardware stack levels used: 1
  2960 ;; Hardware stack levels required when called: 4
  2961 ;; This function calls:
  2962 ;;		Nothing
  2963 ;; This function is called by:
  2964 ;;		_main
  2965 ;;		_Bienvenida
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           	psect	text18
  2970   0013CE                     __ptext18:
  2971                           	callstack 0
  2972   0013CE                     _ConfiguraLCD:
  2973                           	callstack 26
  2974                           
  2975                           ;incstack = 0
  2976                           ;ConfiguraLCD@a stored from wreg
  2977   0013CE  6E11               	movwf	ConfiguraLCD@a^0,c
  2978                           
  2979                           ;LibLCDXC8.h: 60: if(a==4 | a ==8)
  2980   0013D0  0E04               	movlw	4
  2981   0013D2  1811               	xorwf	ConfiguraLCD@a^0,w,c
  2982   0013D4  B4D8               	btfsc	status,2,c
  2983   0013D6  D004               	goto	u1000
  2984   0013D8  0E08               	movlw	8
  2985   0013DA  1811               	xorwf	ConfiguraLCD@a^0,w,c
  2986   0013DC  A4D8               	btfss	status,2,c
  2987   0013DE  0012               	return	
  2988   0013E0                     u1000:
  2989                           
  2990                           ;LibLCDXC8.h: 61: interfaz=a;
  2991   0013E0  C011  F02F         	movff	ConfiguraLCD@a,_interfaz
  2992   0013E4  0012               	return		;funcret
  2993   0013E6                     __end_of_ConfiguraLCD:
  2994                           	callstack 0
  2995                           
  2996 ;; *************** function _ISR *****************
  2997 ;; Defined at:
  2998 ;;		line 273 in file "LAB4.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;		None
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;		None
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  1    wreg      void 
  3005 ;; Registers used:
  3006 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3012 ;;      Params:         0       0       0       0       0       0       0       0       0
  3013 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3014 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3015 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3016 ;;Total ram usage:        3 bytes
  3017 ;; Hardware stack levels used: 1
  3018 ;; Hardware stack levels required when called: 3
  3019 ;; This function calls:
  3020 ;;		i2_DireccionaLCD
  3021 ;;		i2_EscribeLCD_c
  3022 ;;		i2_EscribeLCD_n8
  3023 ;;		i2_MostrarNumeros
  3024 ;;		i2___lbdiv
  3025 ;; This function is called by:
  3026 ;;		Interrupt level 2
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	intcode
  3031   000008                     __pintcode:
  3032                           	callstack 0
  3033   000008                     _ISR:
  3034                           	callstack 22
  3035                           
  3036                           ;incstack = 0
  3037   000008  8230               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3038   00000A  ED3F  F004         	call	int_func,f	;refresh shadow registers
  3039                           
  3040                           	psect	intcode_body
  3041   00087E                     __pintcode_body:
  3042                           	callstack 22
  3043   00087E                     int_func:
  3044                           	callstack 22
  3045   00087E  0006               	pop		; remove dummy address from shadow register refresh
  3046   000880  CFF3 F00F          	movff	prodl,??_ISR+1
  3047   000884  CFF4 F010          	movff	prodh,??_ISR+2
  3048                           
  3049                           ;LAB4.c: 276: if(TMR0IF == 1){
  3050   000888  A4F2               	btfss	4082,2,c	;volatile
  3051   00088A  D025               	goto	i2l259
  3052                           
  3053                           ;LAB4.c: 278: TMR0 = 49911;
  3054   00088C  0EC2               	movlw	194
  3055   00088E  6ED7               	movwf	215,c	;volatile
  3056   000890  0EF7               	movlw	247
  3057   000892  6ED6               	movwf	214,c	;volatile
  3058                           
  3059                           ;LAB4.c: 279: TMR0IF = 0;
  3060   000894  94F2               	bcf	4082,2,c	;volatile
  3061                           
  3062                           ;LAB4.c: 280: LATA1 = LATA1^1;
  3063   000896  B289               	btfsc	3977,1,c	;volatile
  3064   000898  D002               	goto	i2u148_40
  3065   00089A  8289               	bsf	3977,1,c	;volatile
  3066   00089C  D001               	goto	i2u149_45
  3067   00089E                     i2u148_40:
  3068   00089E  9289               	bcf	3977,1,c	;volatile
  3069   0008A0                     i2u149_45:
  3070                           
  3071                           ;LAB4.c: 286: if (contador == 0 && inactive == 1) {
  3072   0008A0  5023               	movf	_contador^0,w,c
  3073   0008A2  A4D8               	btfss	status,2,c
  3074   0008A4  D005               	goto	i2l2666
  3075   0008A6  0422               	decf	_inactive^0,w,c
  3076   0008A8  A4D8               	btfss	status,2,c
  3077   0008AA  D002               	goto	i2l2666
  3078                           
  3079                           ;LAB4.c: 289: LATA4 =1;
  3080   0008AC  8889               	bsf	3977,4,c	;volatile
  3081                           
  3082                           ;LAB4.c: 290: inactive = 0;
  3083   0008AE  6A22               	clrf	_inactive^0,c
  3084   0008B0                     i2l2666:
  3085                           
  3086                           ;LAB4.c: 291: };LAB4.c: 294: contador++;
  3087   0008B0  2A23               	incf	_contador^0,f,c
  3088                           
  3089                           ;LAB4.c: 295: if(contador < 20) inactive = 0;
  3090   0008B2  0E14               	movlw	20
  3091   0008B4  6023               	cpfslt	_contador^0,c
  3092   0008B6  D001               	goto	i2l2672
  3093   0008B8  6A22               	clrf	_inactive^0,c
  3094   0008BA                     i2l2672:
  3095                           
  3096                           ;LAB4.c: 297: if(contador >= 20 && contador < 40){
  3097   0008BA  0E13               	movlw	19
  3098   0008BC  6423               	cpfsgt	_contador^0,c
  3099   0008BE  D007               	goto	i2l2680
  3100   0008C0  0E28               	movlw	40
  3101   0008C2  6023               	cpfslt	_contador^0,c
  3102   0008C4  D004               	goto	i2l2680
  3103                           
  3104                           ;LAB4.c: 299: LATA4 = 0;
  3105   0008C6  9889               	bcf	3977,4,c	;volatile
  3106                           
  3107                           ;LAB4.c: 300: inactive = 1;
  3108   0008C8  0E01               	movlw	1
  3109   0008CA  6E22               	movwf	_inactive^0,c
  3110                           
  3111                           ;LAB4.c: 301: } else if(contador >= 40){
  3112   0008CC  D004               	goto	i2l259
  3113   0008CE                     i2l2680:
  3114   0008CE  0E27               	movlw	39
  3115   0008D0  6423               	cpfsgt	_contador^0,c
  3116   0008D2  D001               	goto	i2l259
  3117   0008D4  0003               	sleep		;# 
  3118   0008D6                     i2l259:
  3119                           
  3120                           ;LAB4.c: 307: };LAB4.c: 308: };LAB4.c: 311: if(RBIF==1 ){
  3121   0008D6  A0F2               	btfss	4082,0,c	;volatile
  3122   0008D8  D0FC               	goto	i2l315
  3123                           
  3124                           ;LAB4.c: 313: if(PORTB!=0b11110000 && Iniciarpregunta == 1){
  3125   0008DA  0EF0               	movlw	240
  3126   0008DC  1881               	xorwf	129,w,c	;volatile
  3127   0008DE  B4D8               	btfsc	status,2,c
  3128   0008E0  D0DD               	goto	i2l2812
  3129   0008E2  0425               	decf	_Iniciarpregunta^0,w,c
  3130   0008E4  A4D8               	btfss	status,2,c
  3131   0008E6  D0DA               	goto	i2l2812
  3132                           
  3133                           ;LAB4.c: 316: LATB=0b11111110;
  3134   0008E8  0EFE               	movlw	254
  3135   0008EA  6E8A               	movwf	138,c	;volatile
  3136                           
  3137                           ;LAB4.c: 319: if(RB4==0) {
  3138   0008EC  B881               	btfsc	3969,4,c	;volatile
  3139   0008EE  D006               	goto	i2l267
  3140                           
  3141                           ;LAB4.c: 321: faltantes = objetivo;
  3142   0008F0  C02B  F02A         	movff	_objetivo,_faltantes
  3143                           
  3144                           ;LAB4.c: 322: contadas = objetivo - faltantes;
  3145   0008F4  502A               	movf	_faltantes^0,w,c
  3146   0008F6  5C2B               	subwf	_objetivo^0,w,c
  3147   0008F8  6E29               	movwf	_contadas^0,c
  3148                           
  3149                           ;LAB4.c: 323: }
  3150   0008FA  D0CE               	goto	i2l2810
  3151   0008FC                     i2l267:
  3152                           
  3153                           ;LAB4.c: 324: else if(RB5==0){
  3154   0008FC  BA81               	btfsc	3969,5,c	;volatile
  3155   0008FE  D00B               	goto	i2l269
  3156                           
  3157                           ;LAB4.c: 325: input++;
  3158   000900  2A28               	incf	_input^0,f,c
  3159                           
  3160                           ;LAB4.c: 326: if(input <= 2){
  3161   000902  0E03               	movlw	3
  3162   000904  6028               	cpfslt	_input^0,c
  3163   000906  D0C8               	goto	i2l2810
  3164                           
  3165                           ;LAB4.c: 327: Tecla = 0;
  3166   000908  6A2C               	clrf	_Tecla^0,c
  3167                           
  3168                           ;LAB4.c: 328: EscribeLCD_n8(Tecla,1);
  3169   00090A  0E01               	movlw	1
  3170   00090C  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3171   00090E  502C               	movf	_Tecla^0,w,c
  3172   000910  EC60  F007         	call	i2_EscribeLCD_n8
  3173                           
  3174                           ;LAB4.c: 329: };LAB4.c: 331: }
  3175   000914  D0C1               	goto	i2l2810
  3176   000916                     i2l269:
  3177                           
  3178                           ;LAB4.c: 332: else if(RB6==0){
  3179   000916  BC81               	btfsc	3969,6,c	;volatile
  3180   000918  D006               	goto	i2l272
  3181                           
  3182                           ;LAB4.c: 334: contadas = objetivo;
  3183   00091A  C02B  F029         	movff	_objetivo,_contadas
  3184                           
  3185                           ;LAB4.c: 335: faltantes = 0;
  3186   00091E  6A2A               	clrf	_faltantes^0,c
  3187                           
  3188                           ;LAB4.c: 336: MostrarNumeros();
  3189   000920  ECCE  F008         	call	i2_MostrarNumeros	;wreg free
  3190                           
  3191                           ;LAB4.c: 338: }
  3192   000924  D0B9               	goto	i2l2810
  3193   000926                     i2l272:
  3194                           
  3195                           ;LAB4.c: 339: else if(RB7==0){
  3196   000926  BE81               	btfsc	3969,7,c	;volatile
  3197   000928  D006               	goto	i2l2710
  3198                           
  3199                           ;LAB4.c: 341: LATA4 = LATA4^1;
  3200   00092A  B889               	btfsc	3977,4,c	;volatile
  3201   00092C  D002               	goto	i2u164_40
  3202   00092E  8889               	bsf	3977,4,c	;volatile
  3203   000930  D0B3               	goto	i2l2810
  3204   000932                     i2u164_40:
  3205   000932  9889               	bcf	3977,4,c	;volatile
  3206                           
  3207                           ;LAB4.c: 342: }
  3208   000934  D0B1               	goto	i2l2810
  3209   000936                     i2l2710:
  3210                           
  3211                           ;LAB4.c: 343: else{;LAB4.c: 344: LATB=0b11111101;
  3212   000936  0EFD               	movlw	253
  3213   000938  6E8A               	movwf	138,c	;volatile
  3214                           
  3215                           ;LAB4.c: 347: if(RB4==0) {
  3216   00093A  B881               	btfsc	3969,4,c	;volatile
  3217   00093C  D00C               	goto	i2l276
  3218                           
  3219                           ;LAB4.c: 348: input++;
  3220   00093E  2A28               	incf	_input^0,f,c
  3221                           
  3222                           ;LAB4.c: 349: if(input <= 2){
  3223   000940  0E03               	movlw	3
  3224   000942  6028               	cpfslt	_input^0,c
  3225   000944  D0A9               	goto	i2l2810
  3226                           
  3227                           ;LAB4.c: 350: Tecla = 7;
  3228   000946  0E07               	movlw	7
  3229   000948  6E2C               	movwf	_Tecla^0,c
  3230                           
  3231                           ;LAB4.c: 351: EscribeLCD_n8(Tecla,1);
  3232   00094A  0E01               	movlw	1
  3233   00094C  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3234   00094E  502C               	movf	_Tecla^0,w,c
  3235   000950  EC60  F007         	call	i2_EscribeLCD_n8
  3236   000954  D0A1               	goto	i2l2810
  3237   000956                     i2l276:
  3238                           
  3239                           ;LAB4.c: 354: else if(RB5==0){
  3240   000956  BA81               	btfsc	3969,5,c	;volatile
  3241   000958  D00C               	goto	i2l279
  3242                           
  3243                           ;LAB4.c: 355: input++;
  3244   00095A  2A28               	incf	_input^0,f,c
  3245                           
  3246                           ;LAB4.c: 356: if(input <=2){
  3247   00095C  0E03               	movlw	3
  3248   00095E  6028               	cpfslt	_input^0,c
  3249   000960  D09B               	goto	i2l2810
  3250                           
  3251                           ;LAB4.c: 357: Tecla = 8;
  3252   000962  0E08               	movlw	8
  3253   000964  6E2C               	movwf	_Tecla^0,c
  3254                           
  3255                           ;LAB4.c: 358: EscribeLCD_n8(Tecla,1);
  3256   000966  0E01               	movlw	1
  3257   000968  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3258   00096A  502C               	movf	_Tecla^0,w,c
  3259   00096C  EC60  F007         	call	i2_EscribeLCD_n8
  3260   000970  D093               	goto	i2l2810
  3261   000972                     i2l279:
  3262                           
  3263                           ;LAB4.c: 361: else if(RB6==0){
  3264   000972  BC81               	btfsc	3969,6,c	;volatile
  3265   000974  D00C               	goto	i2l282
  3266                           
  3267                           ;LAB4.c: 362: input++;
  3268   000976  2A28               	incf	_input^0,f,c
  3269                           
  3270                           ;LAB4.c: 363: if(input <=2){
  3271   000978  0E03               	movlw	3
  3272   00097A  6028               	cpfslt	_input^0,c
  3273   00097C  D08D               	goto	i2l2810
  3274                           
  3275                           ;LAB4.c: 364: Tecla = 9;
  3276   00097E  0E09               	movlw	9
  3277   000980  6E2C               	movwf	_Tecla^0,c
  3278                           
  3279                           ;LAB4.c: 365: EscribeLCD_n8(Tecla,1);
  3280   000982  0E01               	movlw	1
  3281   000984  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3282   000986  502C               	movf	_Tecla^0,w,c
  3283   000988  EC60  F007         	call	i2_EscribeLCD_n8
  3284   00098C  D085               	goto	i2l2810
  3285   00098E                     i2l282:
  3286                           
  3287                           ;LAB4.c: 368: else if(RB7==0) {
  3288   00098E  BE81               	btfsc	3969,7,c	;volatile
  3289   000990  D024               	goto	i2l2750
  3290                           
  3291                           ;LAB4.c: 372: if(input == 1){
  3292   000992  0428               	decf	_input^0,w,c
  3293   000994  A4D8               	btfss	status,2,c
  3294   000996  D00B               	goto	i2l2744
  3295                           
  3296                           ;LAB4.c: 373: DireccionaLCD(0xC0);
  3297   000998  0EC0               	movlw	192
  3298   00099A  EC14  F00A         	call	i2_DireccionaLCD
  3299                           
  3300                           ;LAB4.c: 375: EscribeLCD_c(' ');
  3301   00099E  0E20               	movlw	32
  3302   0009A0  EC09  F00A         	call	i2_EscribeLCD_c
  3303                           
  3304                           ;LAB4.c: 376: DireccionaLCD(0xC0);
  3305   0009A4  0EC0               	movlw	192
  3306   0009A6  EC14  F00A         	call	i2_DireccionaLCD
  3307   0009AA                     i2l2742:
  3308                           
  3309                           ;LAB4.c: 377: input --;
  3310   0009AA  0628               	decf	_input^0,f,c
  3311                           
  3312                           ;LAB4.c: 379: } else if (input == 2){
  3313   0009AC  D075               	goto	i2l2810
  3314   0009AE                     i2l2744:
  3315   0009AE  0E02               	movlw	2
  3316   0009B0  1828               	xorwf	_input^0,w,c
  3317   0009B2  A4D8               	btfss	status,2,c
  3318   0009B4  D010               	goto	i2l288
  3319                           
  3320                           ;LAB4.c: 380: DireccionaLCD(0xC1);
  3321   0009B6  0EC1               	movlw	193
  3322   0009B8  EC14  F00A         	call	i2_DireccionaLCD
  3323                           
  3324                           ;LAB4.c: 382: EscribeLCD_c(' ');
  3325   0009BC  0E20               	movlw	32
  3326   0009BE  EC09  F00A         	call	i2_EscribeLCD_c
  3327                           
  3328                           ;LAB4.c: 383: DireccionaLCD(0xC1);
  3329   0009C2  0EC1               	movlw	193
  3330   0009C4  EC14  F00A         	call	i2_DireccionaLCD
  3331                           
  3332                           ;LAB4.c: 384: Tecla = objetivo/10;
  3333   0009C8  0E0A               	movlw	10
  3334   0009CA  6E05               	movwf	i2___lbdiv@divisor^0,c
  3335   0009CC  502B               	movf	_objetivo^0,w,c
  3336   0009CE  EC7C  F009         	call	i2___lbdiv
  3337   0009D2  6E2C               	movwf	_Tecla^0,c
  3338   0009D4  D7EA               	goto	i2l2742
  3339   0009D6                     i2l288:
  3340                           
  3341                           ;LAB4.c: 388: __nop();
  3342   0009D6  0000               	nop	
  3343   0009D8  D05F               	goto	i2l2810
  3344   0009DA                     i2l2750:
  3345                           
  3346                           ;LAB4.c: 393: else{;LAB4.c: 394: LATB=0b11111011;
  3347   0009DA  0EFB               	movlw	251
  3348   0009DC  6E8A               	movwf	138,c	;volatile
  3349                           
  3350                           ;LAB4.c: 397: if(RB4==0){
  3351   0009DE  B881               	btfsc	3969,4,c	;volatile
  3352   0009E0  D00C               	goto	i2l291
  3353                           
  3354                           ;LAB4.c: 398: input++;
  3355   0009E2  2A28               	incf	_input^0,f,c
  3356                           
  3357                           ;LAB4.c: 399: if(input <=2){
  3358   0009E4  0E03               	movlw	3
  3359   0009E6  6028               	cpfslt	_input^0,c
  3360   0009E8  D057               	goto	i2l2810
  3361                           
  3362                           ;LAB4.c: 400: Tecla = 4;
  3363   0009EA  0E04               	movlw	4
  3364   0009EC  6E2C               	movwf	_Tecla^0,c
  3365                           
  3366                           ;LAB4.c: 401: EscribeLCD_n8(Tecla,1);
  3367   0009EE  0E01               	movlw	1
  3368   0009F0  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3369   0009F2  502C               	movf	_Tecla^0,w,c
  3370   0009F4  EC60  F007         	call	i2_EscribeLCD_n8
  3371   0009F8  D04F               	goto	i2l2810
  3372   0009FA                     i2l291:
  3373                           
  3374                           ;LAB4.c: 404: else if(RB5==0){
  3375   0009FA  BA81               	btfsc	3969,5,c	;volatile
  3376   0009FC  D00C               	goto	i2l294
  3377                           
  3378                           ;LAB4.c: 405: input++;
  3379   0009FE  2A28               	incf	_input^0,f,c
  3380                           
  3381                           ;LAB4.c: 406: if(input <=2){
  3382   000A00  0E03               	movlw	3
  3383   000A02  6028               	cpfslt	_input^0,c
  3384   000A04  D049               	goto	i2l2810
  3385                           
  3386                           ;LAB4.c: 407: Tecla = 5;
  3387   000A06  0E05               	movlw	5
  3388   000A08  6E2C               	movwf	_Tecla^0,c
  3389                           
  3390                           ;LAB4.c: 408: EscribeLCD_n8(Tecla,1);
  3391   000A0A  0E01               	movlw	1
  3392   000A0C  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3393   000A0E  502C               	movf	_Tecla^0,w,c
  3394   000A10  EC60  F007         	call	i2_EscribeLCD_n8
  3395   000A14  D041               	goto	i2l2810
  3396   000A16                     i2l294:
  3397                           
  3398                           ;LAB4.c: 411: else if(RB6==0){
  3399   000A16  BC81               	btfsc	3969,6,c	;volatile
  3400   000A18  D00C               	goto	i2l297
  3401                           
  3402                           ;LAB4.c: 412: input++;
  3403   000A1A  2A28               	incf	_input^0,f,c
  3404                           
  3405                           ;LAB4.c: 413: if(input <=2){
  3406   000A1C  0E03               	movlw	3
  3407   000A1E  6028               	cpfslt	_input^0,c
  3408   000A20  D03B               	goto	i2l2810
  3409                           
  3410                           ;LAB4.c: 414: Tecla = 6;
  3411   000A22  0E06               	movlw	6
  3412   000A24  6E2C               	movwf	_Tecla^0,c
  3413                           
  3414                           ;LAB4.c: 415: EscribeLCD_n8(Tecla,1);
  3415   000A26  0E01               	movlw	1
  3416   000A28  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3417   000A2A  502C               	movf	_Tecla^0,w,c
  3418   000A2C  EC60  F007         	call	i2_EscribeLCD_n8
  3419   000A30  D033               	goto	i2l2810
  3420   000A32                     i2l297:
  3421                           
  3422                           ;LAB4.c: 418: else if(RB7==0){
  3423   000A32  BE81               	btfsc	3969,7,c	;volatile
  3424   000A34  D003               	goto	i2l2780
  3425                           
  3426                           ;LAB4.c: 420: emergency = 1;
  3427   000A36  0E01               	movlw	1
  3428   000A38  6E24               	movwf	_emergency^0,c
  3429                           
  3430                           ;LAB4.c: 421: }
  3431   000A3A  D02E               	goto	i2l2810
  3432   000A3C                     i2l2780:
  3433                           
  3434                           ;LAB4.c: 422: else{;LAB4.c: 423: LATB=0b11110111;
  3435   000A3C  0EF7               	movlw	247
  3436   000A3E  6E8A               	movwf	138,c	;volatile
  3437                           
  3438                           ;LAB4.c: 426: if(RB4==0){
  3439   000A40  B881               	btfsc	3969,4,c	;volatile
  3440   000A42  D00C               	goto	i2l302
  3441                           
  3442                           ;LAB4.c: 427: input++;
  3443   000A44  2A28               	incf	_input^0,f,c
  3444                           
  3445                           ;LAB4.c: 428: if(input <=2){
  3446   000A46  0E03               	movlw	3
  3447   000A48  6028               	cpfslt	_input^0,c
  3448   000A4A  D026               	goto	i2l2810
  3449                           
  3450                           ;LAB4.c: 429: Tecla = 1;
  3451   000A4C  0E01               	movlw	1
  3452   000A4E  6E2C               	movwf	_Tecla^0,c
  3453                           
  3454                           ;LAB4.c: 430: EscribeLCD_n8(Tecla,1);
  3455   000A50  0E01               	movlw	1
  3456   000A52  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3457   000A54  502C               	movf	_Tecla^0,w,c
  3458   000A56  EC60  F007         	call	i2_EscribeLCD_n8
  3459   000A5A  D01E               	goto	i2l2810
  3460   000A5C                     i2l302:
  3461                           
  3462                           ;LAB4.c: 433: else if(RB5==0){
  3463   000A5C  BA81               	btfsc	3969,5,c	;volatile
  3464   000A5E  D00C               	goto	i2l305
  3465                           
  3466                           ;LAB4.c: 434: input++;
  3467   000A60  2A28               	incf	_input^0,f,c
  3468                           
  3469                           ;LAB4.c: 435: if(input <=2){
  3470   000A62  0E03               	movlw	3
  3471   000A64  6028               	cpfslt	_input^0,c
  3472   000A66  D018               	goto	i2l2810
  3473                           
  3474                           ;LAB4.c: 436: Tecla = 2;
  3475   000A68  0E02               	movlw	2
  3476   000A6A  6E2C               	movwf	_Tecla^0,c
  3477                           
  3478                           ;LAB4.c: 437: EscribeLCD_n8(Tecla,1);
  3479   000A6C  0E01               	movlw	1
  3480   000A6E  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3481   000A70  502C               	movf	_Tecla^0,w,c
  3482   000A72  EC60  F007         	call	i2_EscribeLCD_n8
  3483   000A76  D010               	goto	i2l2810
  3484   000A78                     i2l305:
  3485                           
  3486                           ;LAB4.c: 440: else if(RB6==0){
  3487   000A78  BC81               	btfsc	3969,6,c	;volatile
  3488   000A7A  D00C               	goto	i2l308
  3489                           
  3490                           ;LAB4.c: 441: input++;
  3491   000A7C  2A28               	incf	_input^0,f,c
  3492                           
  3493                           ;LAB4.c: 442: if(input <=2){
  3494   000A7E  0E03               	movlw	3
  3495   000A80  6028               	cpfslt	_input^0,c
  3496   000A82  D00A               	goto	i2l2810
  3497                           
  3498                           ;LAB4.c: 443: Tecla = 3;
  3499   000A84  0E03               	movlw	3
  3500   000A86  6E2C               	movwf	_Tecla^0,c
  3501                           
  3502                           ;LAB4.c: 444: EscribeLCD_n8(Tecla,1);
  3503   000A88  0E01               	movlw	1
  3504   000A8A  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3505   000A8C  502C               	movf	_Tecla^0,w,c
  3506   000A8E  EC60  F007         	call	i2_EscribeLCD_n8
  3507   000A92  D002               	goto	i2l2810
  3508   000A94                     i2l308:
  3509                           
  3510                           ;LAB4.c: 447: else if(RB7==0){
  3511   000A94  AE81               	btfss	3969,7,c	;volatile
  3512                           
  3513                           ;LAB4.c: 449: ok++;
  3514   000A96  2A26               	incf	_ok^0,f,c
  3515   000A98                     i2l2810:
  3516                           
  3517                           ;LAB4.c: 450: };LAB4.c: 451: };LAB4.c: 452: };LAB4.c: 453: };LAB4.c: 454: LATB=0b1111000
      +                          0;
  3518   000A98  0EF0               	movlw	240
  3519   000A9A  6E8A               	movwf	138,c	;volatile
  3520   000A9C                     i2l2812:
  3521                           
  3522                           ;LAB4.c: 457: };LAB4.c: 461: if(ok == 0){
  3523   000A9C  5026               	movf	_ok^0,w,c
  3524   000A9E  A4D8               	btfss	status,2,c
  3525   000AA0  D007               	goto	i2l2818
  3526                           
  3527                           ;LAB4.c: 462: if(input == 1){
  3528   000AA2  0428               	decf	_input^0,w,c
  3529   000AA4  A4D8               	btfss	status,2,c
  3530   000AA6  D004               	goto	i2l2818
  3531                           
  3532                           ;LAB4.c: 463: objetivo = Tecla*10;
  3533   000AA8  502C               	movf	_Tecla^0,w,c
  3534   000AAA  0D0A               	mullw	10
  3535   000AAC  CFF3 F02B          	movff	prodl,_objetivo
  3536   000AB0                     i2l2818:
  3537                           
  3538                           ;LAB4.c: 465: };LAB4.c: 466: };LAB4.c: 468: if(input > 2 && block == 0){
  3539   000AB0  0E02               	movlw	2
  3540   000AB2  6428               	cpfsgt	_input^0,c
  3541   000AB4  D005               	goto	i2l2824
  3542   000AB6  5027               	movf	_block^0,w,c
  3543   000AB8  A4D8               	btfss	status,2,c
  3544   000ABA  D002               	goto	i2l2824
  3545                           
  3546                           ;LAB4.c: 470: input =2;
  3547   000ABC  0E02               	movlw	2
  3548   000ABE  6E28               	movwf	_input^0,c
  3549   000AC0                     i2l2824:
  3550                           
  3551                           ;LAB4.c: 471: };LAB4.c: 473: _delay((unsigned long)((250)*(1000000/4000.0)));
  3552   000AC0  0E52               	movlw	82
  3553   000AC2  6E0E               	movwf	??_ISR^0,c
  3554   000AC4  0E2A               	movlw	42
  3555   000AC6                     i2u209_47:
  3556   000AC6  2EE8               	decfsz	wreg,f,c
  3557   000AC8  D7FE               	bra	i2u209_47
  3558   000ACA  2E0E               	decfsz	??_ISR^0,f,c
  3559   000ACC  D7FC               	bra	i2u209_47
  3560                           
  3561                           ;LAB4.c: 474: contador = 0;
  3562   000ACE  6A23               	clrf	_contador^0,c
  3563                           
  3564                           ;LAB4.c: 476: RBIF=0;
  3565   000AD0  90F2               	bcf	4082,0,c	;volatile
  3566   000AD2                     i2l315:
  3567   000AD2  C010  FFF4         	movff	??_ISR+2,prodh
  3568   000AD6  C00F  FFF3         	movff	??_ISR+1,prodl
  3569   000ADA  9230               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3570   000ADC  0011               	retfie		f
  3571   000ADE                     __end_of_ISR:
  3572                           	callstack 0
  3573                           
  3574 ;; *************** function i2_MostrarNumeros *****************
  3575 ;; Defined at:
  3576 ;;		line 484 in file "LAB4.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;		None
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;		None
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      void 
  3583 ;; Registers used:
  3584 ;;		wreg, status,2, status,0, cstack
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3590 ;;      Params:         0       0       0       0       0       0       0       0       0
  3591 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3592 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3593 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3594 ;;Total ram usage:        0 bytes
  3595 ;; Hardware stack levels used: 1
  3596 ;; Hardware stack levels required when called: 1
  3597 ;; This function calls:
  3598 ;;		i2___lbmod
  3599 ;; This function is called by:
  3600 ;;		_ISR
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           	psect	text20
  3605   00119C                     __ptext20:
  3606                           	callstack 0
  3607   00119C                     i2_MostrarNumeros:
  3608                           	callstack 23
  3609                           
  3610                           ;LAB4.c: 487: LATD = contadas % 10;
  3611                           
  3612                           ;incstack = 0
  3613   00119C  0E0A               	movlw	10
  3614   00119E  6E01               	movwf	i2___lbmod@divisor^0,c
  3615   0011A0  5029               	movf	_contadas^0,w,c
  3616   0011A2  ECC0  F009         	call	i2___lbmod
  3617   0011A6  6E8C               	movwf	140,c	;volatile
  3618                           
  3619                           ;LAB4.c: 490: if(contadas<10){
  3620   0011A8  0E0A               	movlw	10
  3621   0011AA  6029               	cpfslt	_contadas^0,c
  3622   0011AC  D003               	goto	i2l2454
  3623                           
  3624                           ;LAB4.c: 492: LATE = 0b101;
  3625   0011AE  0E05               	movlw	5
  3626   0011B0  6E8D               	movwf	141,c	;volatile
  3627                           
  3628                           ;LAB4.c: 493: } else if(contadas<20){
  3629   0011B2  0012               	return	
  3630   0011B4                     i2l2454:
  3631   0011B4  0E14               	movlw	20
  3632   0011B6  6029               	cpfslt	_contadas^0,c
  3633   0011B8  D003               	goto	i2l2458
  3634                           
  3635                           ;LAB4.c: 495: LATE=0b100;
  3636   0011BA  0E04               	movlw	4
  3637   0011BC  6E8D               	movwf	141,c	;volatile
  3638                           
  3639                           ;LAB4.c: 496: } else if (contadas<30){
  3640   0011BE  0012               	return	
  3641   0011C0                     i2l2458:
  3642   0011C0  0E1E               	movlw	30
  3643   0011C2  6029               	cpfslt	_contadas^0,c
  3644   0011C4  D003               	goto	i2l2462
  3645                           
  3646                           ;LAB4.c: 498: LATE=0b110;
  3647   0011C6  0E06               	movlw	6
  3648   0011C8  6E8D               	movwf	141,c	;volatile
  3649                           
  3650                           ;LAB4.c: 499: } else if (contadas<40){
  3651   0011CA  0012               	return	
  3652   0011CC                     i2l2462:
  3653   0011CC  0E28               	movlw	40
  3654   0011CE  6029               	cpfslt	_contadas^0,c
  3655   0011D0  D003               	goto	i2l2466
  3656                           
  3657                           ;LAB4.c: 501: LATE=0b010;
  3658   0011D2  0E02               	movlw	2
  3659   0011D4  6E8D               	movwf	141,c	;volatile
  3660                           
  3661                           ;LAB4.c: 502: } else if (contadas<50){
  3662   0011D6  0012               	return	
  3663   0011D8                     i2l2466:
  3664   0011D8  0E32               	movlw	50
  3665   0011DA  6029               	cpfslt	_contadas^0,c
  3666   0011DC  D003               	goto	i2l2470
  3667                           
  3668                           ;LAB4.c: 504: LATE = 0b011;
  3669   0011DE  0E03               	movlw	3
  3670   0011E0  6E8D               	movwf	141,c	;volatile
  3671                           
  3672                           ;LAB4.c: 505: } else if (contadas<60){
  3673   0011E2  0012               	return	
  3674   0011E4                     i2l2470:
  3675   0011E4  0E3C               	movlw	60
  3676   0011E6  6029               	cpfslt	_contadas^0,c
  3677   0011E8  0012               	return	
  3678                           
  3679                           ;LAB4.c: 507: LATE = 0b111;
  3680   0011EA  0E07               	movlw	7
  3681   0011EC  6E8D               	movwf	141,c	;volatile
  3682   0011EE  0012               	return	
  3683   0011F0                     __end_ofi2_MostrarNumeros:
  3684                           	callstack 0
  3685                           
  3686 ;; *************** function i2_EscribeLCD_n8 *****************
  3687 ;; Defined at:
  3688 ;;		line 149 in file "LibLCDXC8.h"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;  a               1    wreg     unsigned char 
  3691 ;;  b               1    8[COMRAM] unsigned char 
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;  a               1   12[COMRAM] unsigned char 
  3694 ;;  unidad          1   11[COMRAM] unsigned char 
  3695 ;;  decena          1   10[COMRAM] unsigned char 
  3696 ;;  centena         1    9[COMRAM] unsigned char 
  3697 ;; Return value:  Size  Location     Type
  3698 ;;                  1    wreg      void 
  3699 ;; Registers used:
  3700 ;;		wreg, status,2, status,0, cstack
  3701 ;; Tracked objects:
  3702 ;;		On entry : 0/0
  3703 ;;		On exit  : 0/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3706 ;;      Params:         1       0       0       0       0       0       0       0       0
  3707 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3708 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3709 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3710 ;;Total ram usage:        5 bytes
  3711 ;; Hardware stack levels used: 1
  3712 ;; Hardware stack levels required when called: 2
  3713 ;; This function calls:
  3714 ;;		i2_EnviaDato
  3715 ;;		i2_HabilitaLCD
  3716 ;;		i2_RetardoLCD
  3717 ;;		i2___lbdiv
  3718 ;;		i2___lbmod
  3719 ;; This function is called by:
  3720 ;;		_ISR
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           	psect	text21
  3725   000EC0                     __ptext21:
  3726                           	callstack 0
  3727   000EC0                     i2_EscribeLCD_n8:
  3728                           	callstack 22
  3729                           
  3730                           ;incstack = 0
  3731                           ;i2EscribeLCD_n8@a stored from wreg
  3732   000EC0  6E0D               	movwf	i2EscribeLCD_n8@a^0,c
  3733                           
  3734                           ;LibLCDXC8.h: 154: unsigned char centena,decena,unidad;;LibLCDXC8.h: 155: LATA3=1;
  3735   000EC2  8689               	bsf	3977,3,c	;volatile
  3736                           
  3737                           ;LibLCDXC8.h: 156: switch(b){
  3738   000EC4  D065               	goto	i2l2438
  3739   000EC6                     i2l2406:
  3740   000EC6  0E0A               	movlw	10
  3741   000EC8  6E01               	movwf	i2___lbmod@divisor^0,c
  3742   000ECA  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  3743   000ECC  ECC0  F009         	call	i2___lbmod
  3744   000ED0  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  3745                           
  3746                           ;LibLCDXC8.h: 158: EnviaDato(unidad+48);
  3747   000ED2  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  3748   000ED4  0F30               	addlw	48
  3749   000ED6  EC1E  F009         	call	i2_EnviaDato
  3750                           
  3751                           ;LibLCDXC8.h: 159: HabilitaLCD();
  3752   000EDA  EC44  F00A         	call	i2_HabilitaLCD	;wreg free
  3753                           
  3754                           ;LibLCDXC8.h: 160: RetardoLCD(4);
  3755   000EDE  0E04               	movlw	4
  3756   000EE0  EC79  F008         	call	i2_RetardoLCD
  3757                           
  3758                           ;LibLCDXC8.h: 161: break;
  3759   000EE4  0012               	return	
  3760   000EE6                     i2l2412:
  3761   000EE6  0E0A               	movlw	10
  3762   000EE8  6E05               	movwf	i2___lbdiv@divisor^0,c
  3763   000EEA  0E64               	movlw	100
  3764   000EEC  6E01               	movwf	i2___lbmod@divisor^0,c
  3765   000EEE  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  3766   000EF0  ECC0  F009         	call	i2___lbmod
  3767   000EF4  EC7C  F009         	call	i2___lbdiv
  3768   000EF8  6E0B               	movwf	i2EscribeLCD_n8@decena^0,c
  3769                           
  3770                           ;LibLCDXC8.h: 163: unidad=a%10;
  3771   000EFA  0E0A               	movlw	10
  3772   000EFC  6E01               	movwf	i2___lbmod@divisor^0,c
  3773   000EFE  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  3774   000F00  ECC0  F009         	call	i2___lbmod
  3775   000F04  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  3776                           
  3777                           ;LibLCDXC8.h: 164: EnviaDato(decena+48);
  3778   000F06  500B               	movf	i2EscribeLCD_n8@decena^0,w,c
  3779   000F08  0F30               	addlw	48
  3780   000F0A  EC1E  F009         	call	i2_EnviaDato
  3781                           
  3782                           ;LibLCDXC8.h: 165: HabilitaLCD();
  3783   000F0E  EC44  F00A         	call	i2_HabilitaLCD	;wreg free
  3784                           
  3785                           ;LibLCDXC8.h: 166: RetardoLCD(4);
  3786   000F12  0E04               	movlw	4
  3787   000F14  EC79  F008         	call	i2_RetardoLCD
  3788                           
  3789                           ;LibLCDXC8.h: 167: EnviaDato(unidad+48);
  3790   000F18  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  3791   000F1A  0F30               	addlw	48
  3792   000F1C  EC1E  F009         	call	i2_EnviaDato
  3793                           
  3794                           ;LibLCDXC8.h: 168: HabilitaLCD();
  3795   000F20  EC44  F00A         	call	i2_HabilitaLCD	;wreg free
  3796                           
  3797                           ;LibLCDXC8.h: 169: RetardoLCD(4);
  3798   000F24  0E04               	movlw	4
  3799   000F26  EC79  F008         	call	i2_RetardoLCD
  3800                           
  3801                           ;LibLCDXC8.h: 170: break;
  3802   000F2A  0012               	return	
  3803   000F2C                     i2l2422:
  3804   000F2C  0E64               	movlw	100
  3805   000F2E  6E05               	movwf	i2___lbdiv@divisor^0,c
  3806   000F30  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  3807   000F32  EC7C  F009         	call	i2___lbdiv
  3808   000F36  6E0A               	movwf	i2EscribeLCD_n8@centena^0,c
  3809                           
  3810                           ;LibLCDXC8.h: 172: decena=(a%100)/10;
  3811   000F38  0E0A               	movlw	10
  3812   000F3A  6E05               	movwf	i2___lbdiv@divisor^0,c
  3813   000F3C  0E64               	movlw	100
  3814   000F3E  6E01               	movwf	i2___lbmod@divisor^0,c
  3815   000F40  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  3816   000F42  ECC0  F009         	call	i2___lbmod
  3817   000F46  EC7C  F009         	call	i2___lbdiv
  3818   000F4A  6E0B               	movwf	i2EscribeLCD_n8@decena^0,c
  3819                           
  3820                           ;LibLCDXC8.h: 173: unidad=a%10;
  3821   000F4C  0E0A               	movlw	10
  3822   000F4E  6E01               	movwf	i2___lbmod@divisor^0,c
  3823   000F50  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  3824   000F52  ECC0  F009         	call	i2___lbmod
  3825   000F56  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  3826                           
  3827                           ;LibLCDXC8.h: 174: EnviaDato(centena+48);
  3828   000F58  500A               	movf	i2EscribeLCD_n8@centena^0,w,c
  3829   000F5A  0F30               	addlw	48
  3830   000F5C  EC1E  F009         	call	i2_EnviaDato
  3831                           
  3832                           ;LibLCDXC8.h: 175: HabilitaLCD();
  3833   000F60  EC44  F00A         	call	i2_HabilitaLCD	;wreg free
  3834                           
  3835                           ;LibLCDXC8.h: 176: RetardoLCD(4);
  3836   000F64  0E04               	movlw	4
  3837   000F66  EC79  F008         	call	i2_RetardoLCD
  3838                           
  3839                           ;LibLCDXC8.h: 177: EnviaDato(decena+48);
  3840   000F6A  500B               	movf	i2EscribeLCD_n8@decena^0,w,c
  3841   000F6C  0F30               	addlw	48
  3842   000F6E  EC1E  F009         	call	i2_EnviaDato
  3843                           
  3844                           ;LibLCDXC8.h: 178: HabilitaLCD();
  3845   000F72  EC44  F00A         	call	i2_HabilitaLCD	;wreg free
  3846                           
  3847                           ;LibLCDXC8.h: 179: RetardoLCD(4);
  3848   000F76  0E04               	movlw	4
  3849   000F78  EC79  F008         	call	i2_RetardoLCD
  3850                           
  3851                           ;LibLCDXC8.h: 180: EnviaDato(unidad+48);
  3852   000F7C  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  3853   000F7E  0F30               	addlw	48
  3854   000F80  EC1E  F009         	call	i2_EnviaDato
  3855                           
  3856                           ;LibLCDXC8.h: 181: HabilitaLCD();
  3857   000F84  EC44  F00A         	call	i2_HabilitaLCD	;wreg free
  3858                           
  3859                           ;LibLCDXC8.h: 182: RetardoLCD(4);
  3860   000F88  0E04               	movlw	4
  3861   000F8A  EC79  F008         	call	i2_RetardoLCD
  3862                           
  3863                           ;LibLCDXC8.h: 183: break;
  3864   000F8E  0012               	return	
  3865   000F90                     i2l2438:
  3866   000F90  5009               	movf	i2EscribeLCD_n8@b^0,w,c
  3867                           
  3868                           ; Switch size 1, requested type "simple"
  3869                           ; Number of cases is 3, Range of values is 1 to 3
  3870                           ; switch strategies available:
  3871                           ; Name         Instructions Cycles
  3872                           ; simple_byte           10     6 (average)
  3873                           ;	Chosen strategy is simple_byte
  3874   000F92  0A01               	xorlw	1	; case 1
  3875   000F94  B4D8               	btfsc	status,2,c
  3876   000F96  D797               	goto	i2l2406
  3877   000F98  0A03               	xorlw	3	; case 2
  3878   000F9A  B4D8               	btfsc	status,2,c
  3879   000F9C  D7A4               	goto	i2l2412
  3880   000F9E  0A01               	xorlw	1	; case 3
  3881   000FA0  A4D8               	btfss	status,2,c
  3882   000FA2  0012               	return	
  3883   000FA4  D7C3               	goto	i2l2422
  3884   000FA6                     __end_ofi2_EscribeLCD_n8:
  3885                           	callstack 0
  3886                           
  3887 ;; *************** function i2___lbmod *****************
  3888 ;; Defined at:
  3889 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbmod.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  dividend        1    wreg     unsigned char 
  3892 ;;  divisor         1    0[COMRAM] unsigned char 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;  dividend        1    1[COMRAM] unsigned char 
  3895 ;;  rem             1    3[COMRAM] unsigned char 
  3896 ;;  counter         1    2[COMRAM] unsigned char 
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  1    wreg      unsigned char 
  3899 ;; Registers used:
  3900 ;;		wreg, status,2, status,0
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3906 ;;      Params:         1       0       0       0       0       0       0       0       0
  3907 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3908 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3909 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3910 ;;Total ram usage:        4 bytes
  3911 ;; Hardware stack levels used: 1
  3912 ;; This function calls:
  3913 ;;		Nothing
  3914 ;; This function is called by:
  3915 ;;		i2_EscribeLCD_n8
  3916 ;;		i2_MostrarNumeros
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text22
  3921   001380                     __ptext22:
  3922                           	callstack 0
  3923   001380                     i2___lbmod:
  3924                           	callstack 23
  3925                           
  3926                           ;incstack = 0
  3927                           ;i2___lbmod@dividend stored from wreg
  3928   001380  6E02               	movwf	i2___lbmod@dividend^0,c
  3929   001382  0E08               	movlw	8
  3930   001384  6E03               	movwf	i2___lbmod@counter^0,c
  3931   001386  6A04               	clrf	i2___lbmod@rem^0,c
  3932   001388                     i2l2246:
  3933   001388  90D8               	bcf	status,0,c
  3934   00138A  3402               	rlcf	i2___lbmod@dividend^0,w,c
  3935   00138C  3404               	rlcf	i2___lbmod@rem^0,w,c
  3936   00138E  6E04               	movwf	i2___lbmod@rem^0,c
  3937   001390  90D8               	bcf	status,0,c
  3938   001392  3602               	rlcf	i2___lbmod@dividend^0,f,c
  3939   001394  5001               	movf	i2___lbmod@divisor^0,w,c
  3940   001396  5C04               	subwf	i2___lbmod@rem^0,w,c
  3941   001398  A0D8               	btfss	status,0,c
  3942   00139A  D002               	goto	i2l2254
  3943   00139C  5001               	movf	i2___lbmod@divisor^0,w,c
  3944   00139E  5E04               	subwf	i2___lbmod@rem^0,f,c
  3945   0013A0                     i2l2254:
  3946   0013A0  2E03               	decfsz	i2___lbmod@counter^0,f,c
  3947   0013A2  D7F2               	goto	i2l2246
  3948   0013A4  5004               	movf	i2___lbmod@rem^0,w,c
  3949   0013A6  0012               	return		;funcret
  3950   0013A8                     __end_ofi2___lbmod:
  3951                           	callstack 0
  3952                           
  3953 ;; *************** function i2___lbdiv *****************
  3954 ;; Defined at:
  3955 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbdiv.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;  dividend        1    wreg     unsigned char 
  3958 ;;  divisor         1    4[COMRAM] unsigned char 
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;  dividend        1    5[COMRAM] unsigned char 
  3961 ;;  quotient        1    7[COMRAM] unsigned char 
  3962 ;;  counter         1    6[COMRAM] unsigned char 
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      unsigned char 
  3965 ;; Registers used:
  3966 ;;		wreg, status,2, status,0
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3972 ;;      Params:         1       0       0       0       0       0       0       0       0
  3973 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3974 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3975 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3976 ;;Total ram usage:        4 bytes
  3977 ;; Hardware stack levels used: 1
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_ISR
  3982 ;;		i2_EscribeLCD_n8
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           	psect	text23
  3987   0012F8                     __ptext23:
  3988                           	callstack 0
  3989   0012F8                     i2___lbdiv:
  3990                           	callstack 24
  3991                           
  3992                           ;incstack = 0
  3993                           ;i2___lbdiv@dividend stored from wreg
  3994   0012F8  6E06               	movwf	i2___lbdiv@dividend^0,c
  3995   0012FA  6A08               	clrf	i2___lbdiv@quotient^0,c
  3996   0012FC  5005               	movf	i2___lbdiv@divisor^0,w,c
  3997   0012FE  B4D8               	btfsc	status,2,c
  3998   001300  D015               	goto	i2l2238
  3999   001302  0E01               	movlw	1
  4000   001304  6E07               	movwf	i2___lbdiv@counter^0,c
  4001   001306  D003               	goto	i2l2226
  4002   001308                     i2l2222:
  4003   001308  90D8               	bcf	status,0,c
  4004   00130A  3605               	rlcf	i2___lbdiv@divisor^0,f,c
  4005   00130C  2A07               	incf	i2___lbdiv@counter^0,f,c
  4006   00130E                     i2l2226:
  4007   00130E  AE05               	btfss	i2___lbdiv@divisor^0,7,c
  4008   001310  D7FB               	goto	i2l2222
  4009   001312                     i2u114_40:
  4010   001312  90D8               	bcf	status,0,c
  4011   001314  3608               	rlcf	i2___lbdiv@quotient^0,f,c
  4012   001316  5005               	movf	i2___lbdiv@divisor^0,w,c
  4013   001318  5C06               	subwf	i2___lbdiv@dividend^0,w,c
  4014   00131A  A0D8               	btfss	status,0,c
  4015   00131C  D003               	goto	i2l2234
  4016   00131E  5005               	movf	i2___lbdiv@divisor^0,w,c
  4017   001320  5E06               	subwf	i2___lbdiv@dividend^0,f,c
  4018   001322  8008               	bsf	i2___lbdiv@quotient^0,0,c
  4019   001324                     i2l2234:
  4020   001324  90D8               	bcf	status,0,c
  4021   001326  3205               	rrcf	i2___lbdiv@divisor^0,f,c
  4022   001328  2E07               	decfsz	i2___lbdiv@counter^0,f,c
  4023   00132A  D7F3               	goto	i2u114_40
  4024   00132C                     i2l2238:
  4025   00132C  5008               	movf	i2___lbdiv@quotient^0,w,c
  4026   00132E  0012               	return		;funcret
  4027   001330                     __end_ofi2___lbdiv:
  4028                           	callstack 0
  4029                           
  4030 ;; *************** function i2_EscribeLCD_c *****************
  4031 ;; Defined at:
  4032 ;;		line 140 in file "LibLCDXC8.h"
  4033 ;; Parameters:    Size  Location     Type
  4034 ;;  a               1    wreg     unsigned char 
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  a               1    4[COMRAM] unsigned char 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  1    wreg      void 
  4039 ;; Registers used:
  4040 ;;		wreg, status,2, status,0, cstack
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4046 ;;      Params:         0       0       0       0       0       0       0       0       0
  4047 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4048 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4049 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4050 ;;Total ram usage:        1 bytes
  4051 ;; Hardware stack levels used: 1
  4052 ;; Hardware stack levels required when called: 2
  4053 ;; This function calls:
  4054 ;;		i2_EnviaDato
  4055 ;;		i2_HabilitaLCD
  4056 ;;		i2_RetardoLCD
  4057 ;; This function is called by:
  4058 ;;		_ISR
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           
  4062                           	psect	text24
  4063   001412                     __ptext24:
  4064                           	callstack 0
  4065   001412                     i2_EscribeLCD_c:
  4066                           	callstack 22
  4067                           
  4068                           ;incstack = 0
  4069                           ;i2EscribeLCD_c@a stored from wreg
  4070   001412  6E05               	movwf	i2EscribeLCD_c@a^0,c
  4071                           
  4072                           ;LibLCDXC8.h: 144: LATA3=1;
  4073   001414  8689               	bsf	3977,3,c	;volatile
  4074                           
  4075                           ;LibLCDXC8.h: 145: EnviaDato(a);
  4076   001416  5005               	movf	i2EscribeLCD_c@a^0,w,c
  4077   001418  EC1E  F009         	call	i2_EnviaDato
  4078                           
  4079                           ;LibLCDXC8.h: 146: HabilitaLCD();
  4080   00141C  EC44  F00A         	call	i2_HabilitaLCD	;wreg free
  4081                           
  4082                           ;LibLCDXC8.h: 147: RetardoLCD(4);
  4083   001420  0E04               	movlw	4
  4084   001422  EC79  F008         	call	i2_RetardoLCD
  4085   001426  0012               	return		;funcret
  4086   001428                     __end_ofi2_EscribeLCD_c:
  4087                           	callstack 0
  4088                           
  4089 ;; *************** function i2_DireccionaLCD *****************
  4090 ;; Defined at:
  4091 ;;		line 247 in file "LibLCDXC8.h"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;  a               1    wreg     unsigned char 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  a               1    4[COMRAM] unsigned char 
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  1    wreg      void 
  4098 ;; Registers used:
  4099 ;;		wreg, status,2, status,0, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4105 ;;      Params:         0       0       0       0       0       0       0       0       0
  4106 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4107 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4108 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4109 ;;Total ram usage:        1 bytes
  4110 ;; Hardware stack levels used: 1
  4111 ;; Hardware stack levels required when called: 2
  4112 ;; This function calls:
  4113 ;;		i2_EnviaDato
  4114 ;;		i2_HabilitaLCD
  4115 ;;		i2_RetardoLCD
  4116 ;; This function is called by:
  4117 ;;		_ISR
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           	psect	text25
  4122   001428                     __ptext25:
  4123                           	callstack 0
  4124   001428                     i2_DireccionaLCD:
  4125                           	callstack 22
  4126                           
  4127                           ;incstack = 0
  4128                           ;i2DireccionaLCD@a stored from wreg
  4129   001428  6E05               	movwf	i2DireccionaLCD@a^0,c
  4130                           
  4131                           ;LibLCDXC8.h: 250: LATA3=0;
  4132   00142A  9689               	bcf	3977,3,c	;volatile
  4133                           
  4134                           ;LibLCDXC8.h: 251: EnviaDato(a);
  4135   00142C  5005               	movf	i2DireccionaLCD@a^0,w,c
  4136   00142E  EC1E  F009         	call	i2_EnviaDato
  4137                           
  4138                           ;LibLCDXC8.h: 252: HabilitaLCD();
  4139   001432  EC44  F00A         	call	i2_HabilitaLCD	;wreg free
  4140                           
  4141                           ;LibLCDXC8.h: 253: RetardoLCD(4);
  4142   001436  0E04               	movlw	4
  4143   001438  EC79  F008         	call	i2_RetardoLCD
  4144   00143C  0012               	return		;funcret
  4145   00143E                     __end_ofi2_DireccionaLCD:
  4146                           	callstack 0
  4147                           
  4148 ;; *************** function i2_EnviaDato *****************
  4149 ;; Defined at:
  4150 ;;		line 63 in file "LibLCDXC8.h"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;  a               1    wreg     unsigned char 
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;  a               1    3[COMRAM] unsigned char 
  4155 ;; Return value:  Size  Location     Type
  4156 ;;                  1    wreg      void 
  4157 ;; Registers used:
  4158 ;;		wreg, status,2, status,0, cstack
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4164 ;;      Params:         0       0       0       0       0       0       0       0       0
  4165 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4166 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4167 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4168 ;;Total ram usage:        2 bytes
  4169 ;; Hardware stack levels used: 1
  4170 ;; Hardware stack levels required when called: 1
  4171 ;; This function calls:
  4172 ;;		i2_HabilitaLCD
  4173 ;;		i2_RetardoLCD
  4174 ;; This function is called by:
  4175 ;;		i2_EscribeLCD_c
  4176 ;;		i2_EscribeLCD_n8
  4177 ;;		i2_DireccionaLCD
  4178 ;; This function uses a non-reentrant model
  4179 ;;
  4180                           
  4181                           	psect	text26
  4182   00123C                     __ptext26:
  4183                           	callstack 0
  4184   00123C                     i2_EnviaDato:
  4185                           	callstack 22
  4186                           
  4187                           ;incstack = 0
  4188                           ;i2EnviaDato@a stored from wreg
  4189   00123C  6E04               	movwf	i2EnviaDato@a^0,c
  4190                           
  4191                           ;LibLCDXC8.h: 64: if(interfaz==4){
  4192   00123E  0E04               	movlw	4
  4193   001240  182F               	xorwf	_interfaz^0,w,c
  4194   001242  A4D8               	btfss	status,2,c
  4195   001244  D01A               	goto	i2l2212
  4196                           
  4197                           ;LibLCDXC8.h: 65: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  4198   001246  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  4199   00124A  0EF0               	movlw	240
  4200   00124C  1603               	andwf	??i2_EnviaDato^0,f,c
  4201   00124E  508C               	movf	140,w,c	;volatile
  4202   001250  0B0F               	andlw	15
  4203   001252  1003               	iorwf	??i2_EnviaDato^0,w,c
  4204   001254  6E8C               	movwf	140,c	;volatile
  4205                           
  4206                           ;LibLCDXC8.h: 66: HabilitaLCD();
  4207   001256  EC44  F00A         	call	i2_HabilitaLCD	;wreg free
  4208                           
  4209                           ;LibLCDXC8.h: 67: RetardoLCD(1);
  4210   00125A  0E01               	movlw	1
  4211   00125C  EC79  F008         	call	i2_RetardoLCD
  4212                           
  4213                           ;LibLCDXC8.h: 68: LATD=(LATD & 0b00001111) | (a<<4);
  4214   001260  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  4215   001264  3A03               	swapf	??i2_EnviaDato^0,f,c
  4216   001266  0EF0               	movlw	240
  4217   001268  1603               	andwf	??i2_EnviaDato^0,f,c
  4218   00126A  508C               	movf	140,w,c	;volatile
  4219   00126C  0B0F               	andlw	15
  4220   00126E  1003               	iorwf	??i2_EnviaDato^0,w,c
  4221   001270  6E8C               	movwf	140,c	;volatile
  4222                           
  4223                           ;LibLCDXC8.h: 70: RetardoLCD(1);
  4224   001272  0E01               	movlw	1
  4225   001274  EC79  F008         	call	i2_RetardoLCD
  4226                           
  4227                           ;LibLCDXC8.h: 71: }else if(interfaz==8){
  4228   001278  0012               	return	
  4229   00127A                     i2l2212:
  4230   00127A  0E08               	movlw	8
  4231   00127C  182F               	xorwf	_interfaz^0,w,c
  4232   00127E  A4D8               	btfss	status,2,c
  4233   001280  0012               	return	
  4234                           
  4235                           ;LibLCDXC8.h: 72: LATD=a;
  4236   001282  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  4237   001286  0012               	return		;funcret
  4238   001288                     __end_ofi2_EnviaDato:
  4239                           	callstack 0
  4240                           
  4241 ;; *************** function i2_RetardoLCD *****************
  4242 ;; Defined at:
  4243 ;;		line 287 in file "LibLCDXC8.h"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;  a               1    wreg     unsigned char 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  a               1    1[COMRAM] unsigned char 
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		wreg, status,2, status,0
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4257 ;;      Params:         0       0       0       0       0       0       0       0       0
  4258 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4259 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4260 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4261 ;;Total ram usage:        2 bytes
  4262 ;; Hardware stack levels used: 1
  4263 ;; This function calls:
  4264 ;;		Nothing
  4265 ;; This function is called by:
  4266 ;;		i2_EnviaDato
  4267 ;;		i2_EscribeLCD_c
  4268 ;;		i2_EscribeLCD_n8
  4269 ;;		i2_DireccionaLCD
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           	psect	text27
  4274   0010F2                     __ptext27:
  4275                           	callstack 0
  4276   0010F2                     i2_RetardoLCD:
  4277                           	callstack 23
  4278                           
  4279                           ;incstack = 0
  4280                           ;i2RetardoLCD@a stored from wreg
  4281   0010F2  6E02               	movwf	i2RetardoLCD@a^0,c
  4282                           
  4283                           ;LibLCDXC8.h: 288: switch(a){
  4284   0010F4  D01B               	goto	i2l2032
  4285   0010F6                     i2l2022:
  4286   0010F6  0E05               	movlw	5
  4287   0010F8  6E01               	movwf	??i2_RetardoLCD^0,c
  4288   0010FA  0EDE               	movlw	222
  4289   0010FC                     i2u210_47:
  4290   0010FC  2EE8               	decfsz	wreg,f,c
  4291   0010FE  D7FE               	bra	i2u210_47
  4292   001100  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  4293   001102  D7FC               	bra	i2u210_47
  4294                           
  4295                           ;LibLCDXC8.h: 291: break;
  4296   001104  0012               	return	
  4297   001106                     i2l2024:
  4298   001106  0E53               	movlw	83
  4299   001108                     i2u211_47:
  4300   001108  2EE8               	decfsz	wreg,f,c
  4301   00110A  D7FE               	bra	i2u211_47
  4302   00110C  0000               	nop	
  4303                           
  4304                           ;LibLCDXC8.h: 293: _delay((unsigned long)((640)*(1000000/4000000.0)));
  4305   00110E  0E35               	movlw	53
  4306   001110                     i2u212_47:
  4307   001110  2EE8               	decfsz	wreg,f,c
  4308   001112  D7FE               	bra	i2u212_47
  4309   001114  0000               	nop	
  4310                           
  4311                           ;LibLCDXC8.h: 295: break;
  4312   001116  0012               	return	
  4313   001118                     i2l2026:
  4314   001118  0E08               	movlw	8
  4315   00111A                     i2u213_47:
  4316   00111A  2EE8               	decfsz	wreg,f,c
  4317   00111C  D7FE               	bra	i2u213_47
  4318   00111E  0000               	nop	
  4319                           
  4320                           ;LibLCDXC8.h: 298: break;
  4321   001120  0012               	return	
  4322   001122                     i2l2028:
  4323   001122  0E03               	movlw	3
  4324   001124                     i2u214_47:
  4325   001124  2EE8               	decfsz	wreg,f,c
  4326   001126  D7FE               	bra	i2u214_47
  4327   001128  0000               	nop	
  4328                           
  4329                           ;LibLCDXC8.h: 301: break;
  4330   00112A  0012               	return	
  4331   00112C                     i2l2032:
  4332   00112C  5002               	movf	i2RetardoLCD@a^0,w,c
  4333                           
  4334                           ; Switch size 1, requested type "simple"
  4335                           ; Number of cases is 4, Range of values is 1 to 4
  4336                           ; switch strategies available:
  4337                           ; Name         Instructions Cycles
  4338                           ; simple_byte           13     7 (average)
  4339                           ;	Chosen strategy is simple_byte
  4340   00112E  0A01               	xorlw	1	; case 1
  4341   001130  B4D8               	btfsc	status,2,c
  4342   001132  D7E1               	goto	i2l2022
  4343   001134  0A03               	xorlw	3	; case 2
  4344   001136  B4D8               	btfsc	status,2,c
  4345   001138  D7E6               	goto	i2l2024
  4346   00113A  0A01               	xorlw	1	; case 3
  4347   00113C  B4D8               	btfsc	status,2,c
  4348   00113E  D7EC               	goto	i2l2026
  4349   001140  0A07               	xorlw	7	; case 4
  4350   001142  A4D8               	btfss	status,2,c
  4351   001144  0012               	return	
  4352   001146  D7ED               	goto	i2l2028
  4353   001148                     __end_ofi2_RetardoLCD:
  4354                           	callstack 0
  4355                           
  4356 ;; *************** function i2_HabilitaLCD *****************
  4357 ;; Defined at:
  4358 ;;		line 109 in file "LibLCDXC8.h"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;		None
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;		None
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  1    wreg      void 
  4365 ;; Registers used:
  4366 ;;		wreg
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4372 ;;      Params:         0       0       0       0       0       0       0       0       0
  4373 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4375 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4376 ;;Total ram usage:        0 bytes
  4377 ;; Hardware stack levels used: 1
  4378 ;; This function calls:
  4379 ;;		Nothing
  4380 ;; This function is called by:
  4381 ;;		i2_EnviaDato
  4382 ;;		i2_EscribeLCD_c
  4383 ;;		i2_EscribeLCD_n8
  4384 ;;		i2_DireccionaLCD
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387                           
  4388                           	psect	text28
  4389   001488                     __ptext28:
  4390                           	callstack 0
  4391   001488                     i2_HabilitaLCD:
  4392                           	callstack 23
  4393                           
  4394                           ;LibLCDXC8.h: 111: LATA5=1;
  4395                           
  4396                           ;incstack = 0
  4397   001488  8A89               	bsf	3977,5,c	;volatile
  4398                           
  4399                           ;LibLCDXC8.h: 112: _delay((unsigned long)((40)*(1000000/4000000.0)));
  4400   00148A  0E03               	movlw	3
  4401   00148C                     i2u215_47:
  4402   00148C  2EE8               	decfsz	wreg,f,c
  4403   00148E  D7FE               	bra	i2u215_47
  4404   001490  0000               	nop	
  4405                           
  4406                           ;LibLCDXC8.h: 114: LATA5=0;
  4407   001492  9A89               	bcf	3977,5,c	;volatile
  4408   001494  0012               	return		;funcret
  4409   001496                     __end_ofi2_HabilitaLCD:
  4410                           	callstack 0
  4411                           
  4412                           	psect	rparam
  4413   000001                     ___rparam_used  equ	1
  4414   000000                     ___param_bank   equ	0
  4415   000000                     __Lparam        equ	__Lrparam
  4416   000000                     __Hparam        equ	__Hrparam
  4417                           
  4418                           	psect	temp
  4419   000030                     btemp:
  4420                           	callstack 0
  4421   000030                     	ds	1
  4422   000030                     int$flags       set	btemp
  4423   000031                     wtemp8          set	btemp+1
  4424   000031                     ttemp5          set	btemp+1
  4425   000034                     ttemp6          set	btemp+4
  4426   000038                     ttemp7          set	btemp+8
  4427                           
  4428                           	psect	idloc
  4429                           
  4430                           ;Config register IDLOC0 @ 0x200000
  4431                           ;	unspecified, using default values
  4432   200000                     	org	2097152
  4433   200000  FF                 	db	255
  4434                           
  4435                           ;Config register IDLOC1 @ 0x200001
  4436                           ;	unspecified, using default values
  4437   200001                     	org	2097153
  4438   200001  FF                 	db	255
  4439                           
  4440                           ;Config register IDLOC2 @ 0x200002
  4441                           ;	unspecified, using default values
  4442   200002                     	org	2097154
  4443   200002  FF                 	db	255
  4444                           
  4445                           ;Config register IDLOC3 @ 0x200003
  4446                           ;	unspecified, using default values
  4447   200003                     	org	2097155
  4448   200003  FF                 	db	255
  4449                           
  4450                           ;Config register IDLOC4 @ 0x200004
  4451                           ;	unspecified, using default values
  4452   200004                     	org	2097156
  4453   200004  FF                 	db	255
  4454                           
  4455                           ;Config register IDLOC5 @ 0x200005
  4456                           ;	unspecified, using default values
  4457   200005                     	org	2097157
  4458   200005  FF                 	db	255
  4459                           
  4460                           ;Config register IDLOC6 @ 0x200006
  4461                           ;	unspecified, using default values
  4462   200006                     	org	2097158
  4463   200006  FF                 	db	255
  4464                           
  4465                           ;Config register IDLOC7 @ 0x200007
  4466                           ;	unspecified, using default values
  4467   200007                     	org	2097159
  4468   200007  FF                 	db	255
  4469                           
  4470                           	psect	config
  4471                           
  4472                           ;Config register CONFIG1L @ 0x300000
  4473                           ;	unspecified, using default values
  4474                           ;	PLL Prescaler Selection bits
  4475                           ;	PLLDIV = 0x0, unprogrammed default
  4476                           ;	System Clock Postscaler Selection bits
  4477                           ;	CPUDIV = 0x0, unprogrammed default
  4478                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4479                           ;	USBDIV = 0x0, unprogrammed default
  4480   300000                     	org	3145728
  4481   300000  00                 	db	0
  4482                           
  4483                           ;Config register CONFIG1H @ 0x300001
  4484                           ;	Oscillator Selection bits
  4485                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4486                           ;	Fail-Safe Clock Monitor Enable bit
  4487                           ;	FCMEN = 0x0, unprogrammed default
  4488                           ;	Internal/External Oscillator Switchover bit
  4489                           ;	IESO = 0x0, unprogrammed default
  4490   300001                     	org	3145729
  4491   300001  09                 	db	9
  4492                           
  4493                           ;Config register CONFIG2L @ 0x300002
  4494                           ;	unspecified, using default values
  4495                           ;	Power-up Timer Enable bit
  4496                           ;	PWRT = 0x1, unprogrammed default
  4497                           ;	Brown-out Reset Enable bits
  4498                           ;	BOR = 0x3, unprogrammed default
  4499                           ;	Brown-out Reset Voltage bits
  4500                           ;	BORV = 0x3, unprogrammed default
  4501                           ;	USB Voltage Regulator Enable bit
  4502                           ;	VREGEN = 0x0, unprogrammed default
  4503   300002                     	org	3145730
  4504   300002  1F                 	db	31
  4505                           
  4506                           ;Config register CONFIG2H @ 0x300003
  4507                           ;	Watchdog Timer Enable bit
  4508                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4509                           ;	Watchdog Timer Postscale Select bits
  4510                           ;	WDTPS = 0xF, unprogrammed default
  4511   300003                     	org	3145731
  4512   300003  1E                 	db	30
  4513                           
  4514                           ; Padding undefined space
  4515   300004                     	org	3145732
  4516   300004  FF                 	db	255
  4517                           
  4518                           ;Config register CONFIG3H @ 0x300005
  4519                           ;	CCP2 MUX bit
  4520                           ;	CCP2MX = 0x1, unprogrammed default
  4521                           ;	PORTB A/D Enable bit
  4522                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4523                           ;	Low-Power Timer 1 Oscillator Enable bit
  4524                           ;	LPT1OSC = 0x0, unprogrammed default
  4525                           ;	MCLR Pin Enable bit
  4526                           ;	MCLRE = 0x1, unprogrammed default
  4527   300005                     	org	3145733
  4528   300005  81                 	db	129
  4529                           
  4530                           ;Config register CONFIG4L @ 0x300006
  4531                           ;	Stack Full/Underflow Reset Enable bit
  4532                           ;	STVREN = 0x1, unprogrammed default
  4533                           ;	Single-Supply ICSP Enable bit
  4534                           ;	LVP = OFF, Single-Supply ICSP disabled
  4535                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4536                           ;	ICPRT = 0x0, unprogrammed default
  4537                           ;	Extended Instruction Set Enable bit
  4538                           ;	XINST = 0x0, unprogrammed default
  4539                           ;	Background Debugger Enable bit
  4540                           ;	DEBUG = 0x1, unprogrammed default
  4541   300006                     	org	3145734
  4542   300006  81                 	db	129
  4543                           
  4544                           ; Padding undefined space
  4545   300007                     	org	3145735
  4546   300007  FF                 	db	255
  4547                           
  4548                           ;Config register CONFIG5L @ 0x300008
  4549                           ;	unspecified, using default values
  4550                           ;	Code Protection bit
  4551                           ;	CP0 = 0x1, unprogrammed default
  4552                           ;	Code Protection bit
  4553                           ;	CP1 = 0x1, unprogrammed default
  4554                           ;	Code Protection bit
  4555                           ;	CP2 = 0x1, unprogrammed default
  4556                           ;	Code Protection bit
  4557                           ;	CP3 = 0x1, unprogrammed default
  4558   300008                     	org	3145736
  4559   300008  0F                 	db	15
  4560                           
  4561                           ;Config register CONFIG5H @ 0x300009
  4562                           ;	unspecified, using default values
  4563                           ;	Boot Block Code Protection bit
  4564                           ;	CPB = 0x1, unprogrammed default
  4565                           ;	Data EEPROM Code Protection bit
  4566                           ;	CPD = 0x1, unprogrammed default
  4567   300009                     	org	3145737
  4568   300009  C0                 	db	192
  4569                           
  4570                           ;Config register CONFIG6L @ 0x30000A
  4571                           ;	unspecified, using default values
  4572                           ;	Write Protection bit
  4573                           ;	WRT0 = 0x1, unprogrammed default
  4574                           ;	Write Protection bit
  4575                           ;	WRT1 = 0x1, unprogrammed default
  4576                           ;	Write Protection bit
  4577                           ;	WRT2 = 0x1, unprogrammed default
  4578                           ;	Write Protection bit
  4579                           ;	WRT3 = 0x1, unprogrammed default
  4580   30000A                     	org	3145738
  4581   30000A  0F                 	db	15
  4582                           
  4583                           ;Config register CONFIG6H @ 0x30000B
  4584                           ;	unspecified, using default values
  4585                           ;	Configuration Register Write Protection bit
  4586                           ;	WRTC = 0x1, unprogrammed default
  4587                           ;	Boot Block Write Protection bit
  4588                           ;	WRTB = 0x1, unprogrammed default
  4589                           ;	Data EEPROM Write Protection bit
  4590                           ;	WRTD = 0x1, unprogrammed default
  4591   30000B                     	org	3145739
  4592   30000B  E0                 	db	224
  4593                           
  4594                           ;Config register CONFIG7L @ 0x30000C
  4595                           ;	unspecified, using default values
  4596                           ;	Table Read Protection bit
  4597                           ;	EBTR0 = 0x1, unprogrammed default
  4598                           ;	Table Read Protection bit
  4599                           ;	EBTR1 = 0x1, unprogrammed default
  4600                           ;	Table Read Protection bit
  4601                           ;	EBTR2 = 0x1, unprogrammed default
  4602                           ;	Table Read Protection bit
  4603                           ;	EBTR3 = 0x1, unprogrammed default
  4604   30000C                     	org	3145740
  4605   30000C  0F                 	db	15
  4606                           
  4607                           ;Config register CONFIG7H @ 0x30000D
  4608                           ;	unspecified, using default values
  4609                           ;	Boot Block Table Read Protection bit
  4610                           ;	EBTRB = 0x1, unprogrammed default
  4611   30000D                     	org	3145741
  4612   30000D  40                 	db	64
  4613                           tosu	equ	0xFFF
  4614                           tosh	equ	0xFFE
  4615                           tosl	equ	0xFFD
  4616                           stkptr	equ	0xFFC
  4617                           pclatu	equ	0xFFB
  4618                           pclath	equ	0xFFA
  4619                           pcl	equ	0xFF9
  4620                           tblptru	equ	0xFF8
  4621                           tblptrh	equ	0xFF7
  4622                           tblptrl	equ	0xFF6
  4623                           tablat	equ	0xFF5
  4624                           prodh	equ	0xFF4
  4625                           prodl	equ	0xFF3
  4626                           indf0	equ	0xFEF
  4627                           postinc0	equ	0xFEE
  4628                           postdec0	equ	0xFED
  4629                           preinc0	equ	0xFEC
  4630                           plusw0	equ	0xFEB
  4631                           fsr0h	equ	0xFEA
  4632                           fsr0l	equ	0xFE9
  4633                           wreg	equ	0xFE8
  4634                           indf1	equ	0xFE7
  4635                           postinc1	equ	0xFE6
  4636                           postdec1	equ	0xFE5
  4637                           preinc1	equ	0xFE4
  4638                           plusw1	equ	0xFE3
  4639                           fsr1h	equ	0xFE2
  4640                           fsr1l	equ	0xFE1
  4641                           bsr	equ	0xFE0
  4642                           indf2	equ	0xFDF
  4643                           postinc2	equ	0xFDE
  4644                           postdec2	equ	0xFDD
  4645                           preinc2	equ	0xFDC
  4646                           plusw2	equ	0xFDB
  4647                           fsr2h	equ	0xFDA
  4648                           fsr2l	equ	0xFD9
  4649                           status	equ	0xFD8

Data Sizes:
    Strings     108
    Constant    16
    Data        3
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      47
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    aux	PTR unsigned char [1] size(1) Largest target is 17
		 -> STR_1(CODE[17]), 

    CrearCaracter@data	PTR const unsigned char  size(1) Largest target is 8
		 -> banda1(CODE[8]), banda2(CODE[8]), 

    FIN	PTR unsigned char [1] size(1) Largest target is 16
		 -> STR_2(CODE[16]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[16]), STR_3(CODE[11]), STR_4(CODE[16]), 
		 -> STR_5(CODE[12]), STR_6(CODE[11]), STR_7(CODE[14]), STR_8(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_EscribeLCD_n8
    _MostrarNumeros->___lbmod
    _EscribeLCD_n8->___lbdiv
    ___lbdiv->___lbmod
    _Emergencia->_MensajeLCD_Var
    _MensajeLCD_Var->_EscribeLCD_c
    _Bienvenida->_CrearCaracter
    _OcultarCursorLCD->_EnviaDato
    _MostrarCursorLCD->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _CrearCaracter->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_EscribeLCD_n8
    i2_MostrarNumeros->i2___lbmod
    i2_EscribeLCD_n8->i2___lbdiv
    i2___lbdiv->i2___lbmod
    i2_EscribeLCD_c->i2_EnviaDato
    i2_DireccionaLCD->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    4755
                                             29 COMRAM     4     4      0
                         _Bienvenida
                           _BorraLCD
                       _ConfiguraLCD
                      _DireccionaLCD
                         _Emergencia
                      _EscribeLCD_n8
                      _InicializaLCD
                     _MensajeLCD_Var
                   _MostrarCursorLCD
                     _MostrarNumeros
                   _OcultarCursorLCD
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (1) _MostrarNumeros                                       0     0      0     174
                            ___lbmod
 ---------------------------------------------------------------------------------
 (1) _EscribeLCD_n8                                        5     4      1     830
                                             24 COMRAM     5     4      1
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1     174
                                             16 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     174
                                             20 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Emergencia                                           0     0      0     546
                           _BorraLCD
                      _DireccionaLCD
                     _MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       1     0      1     227
                                             21 COMRAM     1     0      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (1) _Bienvenida                                           3     3      0    1575
                                             24 COMRAM     3     3      0
                       _ConfiguraLCD
                      _CrearCaracter
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                   _MostrarCursorLCD
                   _OcultarCursorLCD
 ---------------------------------------------------------------------------------
 (1) _OcultarCursorLCD                                     0     0      0     145
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _MostrarCursorLCD                                     0     0      0     145
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     290
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     145
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0     174
                                             20 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     174
                                             20 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _CrearCaracter                                        4     3      1     266
                                             20 COMRAM     4     3      1
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _EnviaDato                                            2     2      0     116
                                             18 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _RetardoLCD                                           2     2      0      29
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      87
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  3     3      0    1531
                                             13 COMRAM     3     3      0
                    i2_DireccionaLCD
                     i2_EscribeLCD_c
                    i2_EscribeLCD_n8
                   i2_MostrarNumeros
                          i2___lbdiv
 ---------------------------------------------------------------------------------
 (7) i2_MostrarNumeros                                     0     0      0     173
                          i2___lbmod
 ---------------------------------------------------------------------------------
 (7) i2_EscribeLCD_n8                                      5     4      1     836
                                              8 COMRAM     5     4      1
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
                          i2___lbdiv
                          i2___lbmod
 ---------------------------------------------------------------------------------
 (8) i2___lbmod                                            4     3      1     173
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (7) i2___lbdiv                                            4     3      1     174
                                              4 COMRAM     4     3      1
                          i2___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (7) i2_EscribeLCD_c                                       1     1      0     174
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) i2_DireccionaLCD                                      1     1      0     174
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_EnviaDato                                          2     2      0     116
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_RetardoLCD                                         2     2      0      29
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Bienvenida
     _ConfiguraLCD
     _CrearCaracter
       _EnviaDato
         _HabilitaLCD
         _RetardoLCD
       _HabilitaLCD
       _RetardoLCD
     _DireccionaLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _EscribeLCD_c
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _InicializaLCD
       _BorraLCD
         _EnviaDato
         _HabilitaLCD
         _RetardoLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _MostrarCursorLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _OcultarCursorLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
   _BorraLCD
   _ConfiguraLCD
   _DireccionaLCD
   _Emergencia
     _BorraLCD
     _DireccionaLCD
     _MensajeLCD_Var
       _EscribeLCD_c
   _EscribeLCD_n8
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
     ___lbdiv
       ___lbmod (ARG)
     ___lbmod
   _InicializaLCD
   _MensajeLCD_Var
   _MostrarCursorLCD
   _MostrarNumeros
     ___lbmod
   _OcultarCursorLCD
   ___lbdiv
   ___lbmod

 _ISR (ROOT)
   i2_DireccionaLCD
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_EscribeLCD_c
     i2_EnviaDato
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_EscribeLCD_n8
     i2_EnviaDato
     i2_HabilitaLCD
     i2_RetardoLCD
     i2___lbdiv
       i2___lbmod (ARG)
     i2___lbmod
   i2_MostrarNumeros
     i2___lbmod
   i2___lbdiv

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITBIGSFRlh        111      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     33      47     50.0%
BITBIGSFRll         33      0       0      0.0%
BITBIGSFRh          14      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      47      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Mar 07 01:20:40 2025

        i2DireccionaLCD@a 0005                        _RI 7E84          i2EscribeLCD_n8@a 000D  
        i2EscribeLCD_n8@b 0009                EnviaDato@a 0014                        _ok 0026  
          main@Actual_RA0 0021             _InicializaLCD 0FA6                       _GIE 7F97  
                     _FIN 002D                       _RC2 7C12                       _RB4 7C0C  
                     _RB5 7C0D                       _RB6 7C0E                       _RB7 7C0F  
                     _ISR 0008                       _aux 002E                       wreg 0FE8  
                    ?_ISR 0001          ??i2_EscribeLCD_c 0005                      l2140 1060  
                    l2044 0FB8                      l2054 0FD6                      l2064 0FF4  
                    l2320 0D36                      l2312 0D0A                      l2162 12D0  
                    l2084 102C                      l2332 0D74                      l2318 0D2A  
                    l2094 135A                      l2174 12EC                      l2166 12D6  
                    l2262 0DE0                      l2338 0D8E                      l2098 136C  
                    l2178 12F4                      l2194 1350                      l2186 1338  
                    l2530 0B5E                      l2356 0DD4                      l2268 0E00  
                    l2380 116C                      l2524 0B54                      l2278 0E46  
                    l2294 0EAA                      l2550 0B84                      l2368 13CA  
                    l2392 1190                      l2384 1178                      l2376 1160  
                    l2624 0C7E                      l2562 0BA6                      l2554 0B8C  
                    l2388 1184                      l2572 0BD4                      l2646 0CCA  
                    l1970 10A0                      l2594 0C18                      l1972 10B0  
                    l1980 10D6                      l1974 10C2                      l1976 10CC  
                    l1994 122E                      STR_1 0811                      STR_2 0822  
                    STR_3 0872                      STR_4 0832                      STR_5 0850  
                    STR_6 085C                      STR_7 0842                      STR_8 0867  
                    u1000 13E0                      u2007 0D68                      u1080 12DA  
                    u2017 0DA8                      u2027 0DC6                      u2037 10A6  
                    _LATA 0F89                      _LATB 0F8A                      u2047 10B2  
                    _LATC 0F8B                      _LATD 0F8C                      u2057 10BA  
                    _LATE 0F8D                      u2067 10C4                      u2077 10CE  
                    u2087 147E                      u1937 0B48                      u1947 0BC6  
                    u1957 0C44                      u1967 0C72                      _RBIE 7F93  
                    _RBIF 7F90                      u1977 0CBA                      u1987 0D1E  
                    u1997 0D4A                      _RBPU 7F8F                      _TMR0 0FD6  
          ??_EscribeLCD_c 0015                      _main 0ADE                      btemp 0030  
              _Bienvenida 0CE0                      prodh 0FF4                      prodl 0FF3  
                    start 000E            CrearCaracter@i 0018              ___param_bank 0000  
                   ??_ISR 000E           i2_DireccionaLCD 1428         ??i2_EscribeLCD_n8 000A  
          ?_InicializaLCD 0001                     ?_main 0001           __end_of___lbdiv 12F8  
           EscribeLCD_c@a 0015           __end_of___lbmod 1358                     _T0CON 0FD5  
                   _LATA1 7C49                     _LATA2 7C4A                     _LATA3 7C4B  
                   _LATA4 7C4C                     _LATA5 7C4D                     i2l302 0A5C  
                   i2l305 0A78                     i2l315 0AD2                     i2l308 0A94  
                   i2l272 0926                     i2l282 098E                     i2l291 09FA  
                   i2l267 08FC                     i2l259 08D6                     i2l276 0956  
                   i2l269 0916                     i2l294 0A16                     i2l279 0972  
                   i2l288 09D6                     i2l297 0A32                     _PORTB 0F81  
                   _TRISA 0F92                     _TRISB 0F93                     _TRISC 0F94  
                   _TRISD 0F95                     _TRISE 0F96                _Emergencia 13A8  
         ??_EscribeLCD_n8 001A                     _Tecla 002C                     _block 0027  
                   _input 0028                     tablat 0FF5           main@Antiguo_RA0 0020  
             _HabilitaLCD 147A                     ttemp5 0031                     ttemp6 0034  
                   ttemp7 0038                     status 0FD8                     wtemp8 0031  
           i2___lbmod@rem 0004           ___lbdiv@divisor 0015           ___lbdiv@counter 0017  
        __end_of_BorraLCD 147A           __initialization 1288           _Iniciarpregunta 0025  
            __end_of_main 0CE0                    ??_main 001E      __end_of_ConfiguraLCD 13E6  
           __activetblptr 0002     __end_of_CrearCaracter 109C                    _ADCON1 0FC1  
          DireccionaLCD@a 0015            EscribeLCD_n8@a 001D            EscribeLCD_n8@b 0019  
                  i2l2022 10F6                    i2l2024 1106                    i2l2032 112C  
                  i2l2026 1118                    i2l2028 1122                    i2l2212 127A  
                  i2l2222 1308                    i2l2234 1324                    i2l2226 130E  
                  i2l2412 0EE6                    i2l2238 132C                    i2l2254 13A0  
                  i2l2246 1388                    i2l2422 0F2C                    i2l2406 0EC6  
                  i2l2438 0F90                    i2l2470 11E4                    i2l2462 11CC  
                  i2l2454 11B4                    i2l2710 0936                    i2l2466 11D8  
                  i2l2458 11C0                    i2l2810 0A98                    i2l2812 0A9C  
                  i2l2742 09AA                    i2l2750 09DA                    i2l2824 0AC0  
                  i2l2744 09AE                    i2l2680 08CE                    i2l2672 08BA  
                  i2l2818 0AB0                    i2l2666 08B0                    i2l2780 0A3C  
                  _TMR0IE 7F95                    _TMR0IF 7F92                    _TMR0ON 7EAF  
        i2_MostrarNumeros 119C     __end_of_DireccionaLCD 1412                _RetardoLCD 109C  
             ?_Bienvenida 0001   __end_ofi2_DireccionaLCD 143E         Bienvenida@max_pos 001A  
           Bienvenida@pos 001B      EscribeLCD_n8@centena 001A                    _banda1 0809  
                  _banda2 0801                 ??___lbdiv 0016                 ??___lbmod 0012  
         ??_InicializaLCD 0015                    clear_0 12AC                    isa$std 0001  
__end_of_OcultarCursorLCD 1452      __end_of_EscribeLCD_c 13FC              ?i2_EnviaDato 0001  
            __pdataCOMRAM 002D         __end_ofi2___lbdiv 1330         __end_ofi2___lbmod 13A8  
             ?_Emergencia 0001              __mediumconst 0000                    tblptrh 0FF7  
                  tblptrl 0FF6                    tblptru 0FF8          ___lbdiv@dividend 0016  
         ___lbmod@divisor 0011     __end_ofi2_HabilitaLCD 1496                __accesstop 0060  
 __end_of__initialization 12B2           ___lbmod@counter 0013             ___rparam_used 0001  
          __pcstackCOMRAM 0001          CrearCaracter@pos 0017         __end_of_EnviaDato 123C  
        ___lbdiv@quotient 0018                 ?_BorraLCD 0001            _MensajeLCD_Var 1358  
         MensajeLCD_Var@a 0016               ?_RetardoLCD 0001               RetardoLCD@a 0012  
         i2_EscribeLCD_n8 0EC0          ?i2_DireccionaLCD 0001            _MostrarNumeros 1148  
        _MostrarCursorLCD 1452    __end_of_MensajeLCD_Var 1380                ??_BorraLCD 0015  
            ?_HabilitaLCD 0001              _ConfiguraLCD 13CE                   __Hparam 0000  
   i2EscribeLCD_n8@decena 000B                   __Lparam 0000    __end_of_MostrarNumeros 119C  
                 ___lbdiv 12C0                   ___lbmod 1330     i2EscribeLCD_n8@unidad 000C  
            __psmallconst 0800                   __pcinit 1288                   __ramtop 0800  
                 __ptext0 0ADE                   __ptext1 1148                   __ptext2 0DDA  
                 __ptext3 1330                   __ptext4 12C0                   __ptext5 13A8  
                 __ptext6 1358                   __ptext7 0CE0                   __ptext8 143E  
                 __ptext9 1452  __end_ofi2_MostrarNumeros 11F0           ?_MensajeLCD_Var 0016  
   __end_of_EscribeLCD_n8 0EC0            __pintcode_body 087E      end_of_initialization 12B2  
 __end_ofi2_EscribeLCD_n8 0FA6             __Lmediumconst 0000                   int_func 087E  
            _EscribeLCD_c 13E6              ??_Bienvenida 0019                   postinc0 0FEE  
         ?_MostrarNumeros 0001         ?_OcultarCursorLCD 0001              ??_Emergencia 0017  
      ??_OcultarCursorLCD 0015          ___lbmod@dividend 0012        __end_of_Bienvenida 0DDA  
         i2EscribeLCD_c@a 0005                 i2___lbdiv 12F8                 i2___lbmod 1380  
             ___lbmod@rem 0014             ?i2_RetardoLCD 0001        __end_of_Emergencia 13CE  
       CrearCaracter@data 0015            __end_of_banda1 0811            __end_of_banda2 0809  
           __pidataCOMRAM 1496     __end_of_InicializaLCD 1042                 _EnviaDato 11F0  
     start_initialization 1288               __end_of_ISR 0ADE                ?i2___lbdiv 0005  
              ?i2___lbmod 0001          ?i2_EscribeLCD_n8 0009            ??i2_RetardoLCD 0001  
            ??_RetardoLCD 0011  __end_of_MostrarCursorLCD 1466        i2___lbdiv@dividend 0006  
     EscribeLCD_n8@decena 001B       EscribeLCD_n8@unidad 001C                ?_EnviaDato 0001  
             __pbssCOMRAM 0022        __end_of_RetardoLCD 10F2             _CrearCaracter 1042  
      i2___lbdiv@quotient 0008             _DireccionaLCD 13FC            i2_EscribeLCD_c 1412  
               __pintcode 0008                 _faltantes 002A                  ?___lbdiv 0015  
                ?___lbmod 0011                 _emergency 0024          ??_MensajeLCD_Var 0017  
       ?i2_MostrarNumeros 0001               __smallconst 0800            ?_CrearCaracter 0015  
      ??i2_MostrarNumeros 0005               ??i2___lbdiv 0006               ??i2___lbmod 0002  
           i2_HabilitaLCD 1488            ?_DireccionaLCD 0001    __end_ofi2_EscribeLCD_c 1428  
        ??_MostrarNumeros 0015                  i2u114_40 1312                  i2u210_47 10FC  
                i2u211_47 1108                  i2u212_47 1110                  i2u213_47 111A  
                i2u214_47 1124                  i2u215_47 148C                  i2u209_47 0AC6  
                i2u164_40 0932                  i2u148_40 089E                  i2u149_45 08A0  
           ??i2_EnviaDato 0003      __end_ofi2_RetardoLCD 1148               ??_EnviaDato 0013  
                _BorraLCD 1466            ?i2_HabilitaLCD 0001           ?i2_EscribeLCD_c 0001  
                __Hrparam 0000         i2___lbdiv@divisor 0005    i2EscribeLCD_n8@centena 000A  
       i2___lbdiv@counter 0007                  __Lrparam 0000              i2EnviaDato@a 0004  
         ??_CrearCaracter 0016             ConfiguraLCD@a 0011         ??i2_DireccionaLCD 0005  
                __ptext10 0FA6                  __ptext11 1466                  __ptext20 119C  
                __ptext12 13E6                  __ptext21 0EC0                  __ptext13 13FC  
                __ptext22 1380                  __ptext14 1042                  __ptext23 12F8  
                __ptext15 11F0                  __ptext24 1412                  __ptext16 109C  
                __ptext25 1428                  __ptext17 147A                  __ptext26 123C  
                __ptext18 13CE                  __ptext27 10F2                  __ptext28 1488  
     __end_ofi2_EnviaDato 1288                  _contadas 0029                  _contador 0023  
      i2___lbmod@dividend 0002                  _inactive 0022           ??_DireccionaLCD 0015  
                _objetivo 002B                  _interfaz 002F         ?_MostrarCursorLCD 0001  
      ??_MostrarCursorLCD 0015                  isa$xinst 0000                  int$flags 0030  
           _EscribeLCD_n8 0DDA           ??i2_HabilitaLCD 0001                  intlevel2 0000  
           ??_HabilitaLCD 0011             ?_ConfiguraLCD 0001         i2___lbmod@divisor 0001  
       i2___lbmod@counter 0003             i2RetardoLCD@a 0002               i2_EnviaDato 123C  
          ?_EscribeLCD_n8 0019            ??_ConfiguraLCD 0011          _OcultarCursorLCD 143E  
           ?_EscribeLCD_c 0001              i2_RetardoLCD 10F2       __end_of_HabilitaLCD 1488  
