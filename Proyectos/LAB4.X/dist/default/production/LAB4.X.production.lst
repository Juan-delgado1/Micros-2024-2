

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Feb 24 12:42:40 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39   000000                     
    40                           ; Generated 25/07/2024 GMT
    41                           ; 
    42                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4550 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74   000FE0                     bsr             equ	4064
    75   000FE9                     fsr0            equ	4073
    76   000FEA                     fsr0h           equ	4074
    77   000FE9                     fsr0l           equ	4073
    78   000FE1                     fsr1            equ	4065
    79   000FE2                     fsr1h           equ	4066
    80   000FE1                     fsr1l           equ	4065
    81   000FD9                     fsr2            equ	4057
    82   000FDA                     fsr2h           equ	4058
    83   000FD9                     fsr2l           equ	4057
    84   000FEF                     indf0           equ	4079
    85   000FE7                     indf1           equ	4071
    86   000FDF                     indf2           equ	4063
    87   000FF2                     intcon          equ	4082
    88   000000                     nvmcon          equ	0
    89   000FF9                     pcl             equ	4089
    90   000FFA                     pclath          equ	4090
    91   000FFB                     pclatu          equ	4091
    92   000FEB                     plusw0          equ	4075
    93   000FE3                     plusw1          equ	4067
    94   000FDB                     plusw2          equ	4059
    95   000FED                     postdec0        equ	4077
    96   000FE5                     postdec1        equ	4069
    97   000FDD                     postdec2        equ	4061
    98   000FEE                     postinc0        equ	4078
    99   000FE6                     postinc1        equ	4070
   100   000FDE                     postinc2        equ	4062
   101   000FEC                     preinc0         equ	4076
   102   000FE4                     preinc1         equ	4068
   103   000FDC                     preinc2         equ	4060
   104   000FF3                     prod            equ	4083
   105   000FF4                     prodh           equ	4084
   106   000FF3                     prodl           equ	4083
   107   000FD8                     status          equ	4056
   108   000FF5                     tablat          equ	4085
   109   000FF6                     tblptr          equ	4086
   110   000FF7                     tblptrh         equ	4087
   111   000FF6                     tblptrl         equ	4086
   112   000FF8                     tblptru         equ	4088
   113   000FFD                     tosl            equ	4093
   114   000FE8                     wreg            equ	4072
   115   000F62                     SPPDATA         equ	3938	;# 
   116   000F63                     SPPCFG          equ	3939	;# 
   117   000F64                     SPPEPS          equ	3940	;# 
   118   000F65                     SPPCON          equ	3941	;# 
   119   000F66                     UFRM            equ	3942	;# 
   120   000F66                     UFRML           equ	3942	;# 
   121   000F67                     UFRMH           equ	3943	;# 
   122   000F68                     UIR             equ	3944	;# 
   123   000F69                     UIE             equ	3945	;# 
   124   000F6A                     UEIR            equ	3946	;# 
   125   000F6B                     UEIE            equ	3947	;# 
   126   000F6C                     USTAT           equ	3948	;# 
   127   000F6D                     UCON            equ	3949	;# 
   128   000F6E                     UADDR           equ	3950	;# 
   129   000F6F                     UCFG            equ	3951	;# 
   130   000F70                     UEP0            equ	3952	;# 
   131   000F71                     UEP1            equ	3953	;# 
   132   000F72                     UEP2            equ	3954	;# 
   133   000F73                     UEP3            equ	3955	;# 
   134   000F74                     UEP4            equ	3956	;# 
   135   000F75                     UEP5            equ	3957	;# 
   136   000F76                     UEP6            equ	3958	;# 
   137   000F77                     UEP7            equ	3959	;# 
   138   000F78                     UEP8            equ	3960	;# 
   139   000F79                     UEP9            equ	3961	;# 
   140   000F7A                     UEP10           equ	3962	;# 
   141   000F7B                     UEP11           equ	3963	;# 
   142   000F7C                     UEP12           equ	3964	;# 
   143   000F7D                     UEP13           equ	3965	;# 
   144   000F7E                     UEP14           equ	3966	;# 
   145   000F7F                     UEP15           equ	3967	;# 
   146   000F80                     PORTA           equ	3968	;# 
   147   000F81                     PORTB           equ	3969	;# 
   148   000F82                     PORTC           equ	3970	;# 
   149   000F83                     PORTD           equ	3971	;# 
   150   000F84                     PORTE           equ	3972	;# 
   151   000F89                     LATA            equ	3977	;# 
   152   000F8A                     LATB            equ	3978	;# 
   153   000F8B                     LATC            equ	3979	;# 
   154   000F8C                     LATD            equ	3980	;# 
   155   000F8D                     LATE            equ	3981	;# 
   156   000F92                     TRISA           equ	3986	;# 
   157   000F92                     DDRA            equ	3986	;# 
   158   000F93                     TRISB           equ	3987	;# 
   159   000F93                     DDRB            equ	3987	;# 
   160   000F94                     TRISC           equ	3988	;# 
   161   000F94                     DDRC            equ	3988	;# 
   162   000F95                     TRISD           equ	3989	;# 
   163   000F95                     DDRD            equ	3989	;# 
   164   000F96                     TRISE           equ	3990	;# 
   165   000F96                     DDRE            equ	3990	;# 
   166   000F9B                     OSCTUNE         equ	3995	;# 
   167   000F9D                     PIE1            equ	3997	;# 
   168   000F9E                     PIR1            equ	3998	;# 
   169   000F9F                     IPR1            equ	3999	;# 
   170   000FA0                     PIE2            equ	4000	;# 
   171   000FA1                     PIR2            equ	4001	;# 
   172   000FA2                     IPR2            equ	4002	;# 
   173   000FA6                     EECON1          equ	4006	;# 
   174   000FA7                     EECON2          equ	4007	;# 
   175   000FA8                     EEDATA          equ	4008	;# 
   176   000FA9                     EEADR           equ	4009	;# 
   177   000FAB                     RCSTA           equ	4011	;# 
   178   000FAB                     RCSTA1          equ	4011	;# 
   179   000FAC                     TXSTA           equ	4012	;# 
   180   000FAC                     TXSTA1          equ	4012	;# 
   181   000FAD                     TXREG           equ	4013	;# 
   182   000FAD                     TXREG1          equ	4013	;# 
   183   000FAE                     RCREG           equ	4014	;# 
   184   000FAE                     RCREG1          equ	4014	;# 
   185   000FAF                     SPBRG           equ	4015	;# 
   186   000FAF                     SPBRG1          equ	4015	;# 
   187   000FB0                     SPBRGH          equ	4016	;# 
   188   000FB1                     T3CON           equ	4017	;# 
   189   000FB2                     TMR3            equ	4018	;# 
   190   000FB2                     TMR3L           equ	4018	;# 
   191   000FB3                     TMR3H           equ	4019	;# 
   192   000FB4                     CMCON           equ	4020	;# 
   193   000FB5                     CVRCON          equ	4021	;# 
   194   000FB6                     ECCP1AS         equ	4022	;# 
   195   000FB6                     CCP1AS          equ	4022	;# 
   196   000FB7                     ECCP1DEL        equ	4023	;# 
   197   000FB7                     CCP1DEL         equ	4023	;# 
   198   000FB8                     BAUDCON         equ	4024	;# 
   199   000FB8                     BAUDCTL         equ	4024	;# 
   200   000FBA                     CCP2CON         equ	4026	;# 
   201   000FBB                     CCPR2           equ	4027	;# 
   202   000FBB                     CCPR2L          equ	4027	;# 
   203   000FBC                     CCPR2H          equ	4028	;# 
   204   000FBD                     CCP1CON         equ	4029	;# 
   205   000FBD                     ECCP1CON        equ	4029	;# 
   206   000FBE                     CCPR1           equ	4030	;# 
   207   000FBE                     CCPR1L          equ	4030	;# 
   208   000FBF                     CCPR1H          equ	4031	;# 
   209   000FC0                     ADCON2          equ	4032	;# 
   210   000FC1                     ADCON1          equ	4033	;# 
   211   000FC2                     ADCON0          equ	4034	;# 
   212   000FC3                     ADRES           equ	4035	;# 
   213   000FC3                     ADRESL          equ	4035	;# 
   214   000FC4                     ADRESH          equ	4036	;# 
   215   000FC5                     SSPCON2         equ	4037	;# 
   216   000FC6                     SSPCON1         equ	4038	;# 
   217   000FC7                     SSPSTAT         equ	4039	;# 
   218   000FC8                     SSPADD          equ	4040	;# 
   219   000FC9                     SSPBUF          equ	4041	;# 
   220   000FCA                     T2CON           equ	4042	;# 
   221   000FCB                     PR2             equ	4043	;# 
   222   000FCB                     MEMCON          equ	4043	;# 
   223   000FCC                     TMR2            equ	4044	;# 
   224   000FCD                     T1CON           equ	4045	;# 
   225   000FCE                     TMR1            equ	4046	;# 
   226   000FCE                     TMR1L           equ	4046	;# 
   227   000FCF                     TMR1H           equ	4047	;# 
   228   000FD0                     RCON            equ	4048	;# 
   229   000FD1                     WDTCON          equ	4049	;# 
   230   000FD2                     HLVDCON         equ	4050	;# 
   231   000FD2                     LVDCON          equ	4050	;# 
   232   000FD3                     OSCCON          equ	4051	;# 
   233   000FD5                     T0CON           equ	4053	;# 
   234   000FD6                     TMR0            equ	4054	;# 
   235   000FD6                     TMR0L           equ	4054	;# 
   236   000FD7                     TMR0H           equ	4055	;# 
   237   000FD8                     STATUS          equ	4056	;# 
   238   000FD9                     FSR2            equ	4057	;# 
   239   000FD9                     FSR2L           equ	4057	;# 
   240   000FDA                     FSR2H           equ	4058	;# 
   241   000FDB                     PLUSW2          equ	4059	;# 
   242   000FDC                     PREINC2         equ	4060	;# 
   243   000FDD                     POSTDEC2        equ	4061	;# 
   244   000FDE                     POSTINC2        equ	4062	;# 
   245   000FDF                     INDF2           equ	4063	;# 
   246   000FE0                     BSR             equ	4064	;# 
   247   000FE1                     FSR1            equ	4065	;# 
   248   000FE1                     FSR1L           equ	4065	;# 
   249   000FE2                     FSR1H           equ	4066	;# 
   250   000FE3                     PLUSW1          equ	4067	;# 
   251   000FE4                     PREINC1         equ	4068	;# 
   252   000FE5                     POSTDEC1        equ	4069	;# 
   253   000FE6                     POSTINC1        equ	4070	;# 
   254   000FE7                     INDF1           equ	4071	;# 
   255   000FE8                     WREG            equ	4072	;# 
   256   000FE9                     FSR0            equ	4073	;# 
   257   000FE9                     FSR0L           equ	4073	;# 
   258   000FEA                     FSR0H           equ	4074	;# 
   259   000FEB                     PLUSW0          equ	4075	;# 
   260   000FEC                     PREINC0         equ	4076	;# 
   261   000FED                     POSTDEC0        equ	4077	;# 
   262   000FEE                     POSTINC0        equ	4078	;# 
   263   000FEF                     INDF0           equ	4079	;# 
   264   000FF0                     INTCON3         equ	4080	;# 
   265   000FF1                     INTCON2         equ	4081	;# 
   266   000FF2                     INTCON          equ	4082	;# 
   267   000FF3                     PROD            equ	4083	;# 
   268   000FF3                     PRODL           equ	4083	;# 
   269   000FF4                     PRODH           equ	4084	;# 
   270   000FF5                     TABLAT          equ	4085	;# 
   271   000FF6                     TBLPTR          equ	4086	;# 
   272   000FF6                     TBLPTRL         equ	4086	;# 
   273   000FF7                     TBLPTRH         equ	4087	;# 
   274   000FF8                     TBLPTRU         equ	4088	;# 
   275   000FF9                     PCLAT           equ	4089	;# 
   276   000FF9                     PC              equ	4089	;# 
   277   000FF9                     PCL             equ	4089	;# 
   278   000FFA                     PCLATH          equ	4090	;# 
   279   000FFB                     PCLATU          equ	4091	;# 
   280   000FFC                     STKPTR          equ	4092	;# 
   281   000FFD                     TOS             equ	4093	;# 
   282   000FFD                     TOSL            equ	4093	;# 
   283   000FFE                     TOSH            equ	4094	;# 
   284   000FFF                     TOSU            equ	4095	;# 
   285                           
   286                           	psect	idataCOMRAM
   287   0010C2                     __pidataCOMRAM:
   288                           	callstack 0
   289                           
   290                           ;initializer for _FIN
   291   0010C2  3E                 	db	low STR_5
   292                           
   293                           ;initializer for _SUPR
   294   0010C3  39                 	db	low STR_4
   295                           
   296                           ;initializer for _PARO
   297   0010C4  34                 	db	low STR_3
   298                           
   299                           ;initializer for _OK
   300   0010C5  42                 	db	low STR_2
   301                           
   302                           ;initializer for _aux
   303   0010C6  01                 	db	low STR_1
   304                           
   305                           ;initializer for _interfaz
   306   0010C7  08                 	db	8
   307   007C4C                     _LATA4          set	31820
   308   007C0F                     _RB7            set	31759
   309   007C0E                     _RB6            set	31758
   310   007C0D                     _RB5            set	31757
   311   007C0C                     _RB4            set	31756
   312   007C49                     _LATA1          set	31817
   313   007C10                     _RC0            set	31760
   314   007EAF                     _TMR0ON         set	32431
   315   007F97                     _GIE            set	32663
   316   007F95                     _TMR0IE         set	32661
   317   007F92                     _TMR0IF         set	32658
   318   007F93                     _RBIE           set	32659
   319   007F90                     _RBIF           set	32656
   320   007F8F                     _RBPU           set	32655
   321   007C4D                     _LATA5          set	31821
   322   007C4B                     _LATA3          set	31819
   323   000FD6                     _TMR0           set	4054
   324   000F81                     _PORTB          set	3969
   325   000FD5                     _T0CON          set	4053
   326   000F8D                     _LATE           set	3981
   327   000F8A                     _LATB           set	3978
   328   000F89                     _LATA           set	3977
   329   000F96                     _TRISE          set	3990
   330   000F95                     _TRISD          set	3989
   331   000F94                     _TRISC          set	3988
   332   000F93                     _TRISB          set	3987
   333   000F92                     _TRISA          set	3986
   334   000FC1                     _ADCON1         set	4033
   335   000F8C                     _LATD           set	3980
   336                           
   337                           	psect	smallconst
   338   000800                     __psmallconst:
   339                           	callstack 0
   340   000800  00                 	db	0
   341   000801                     STR_1:
   342   000801  50                 	db	80	;'P'
   343   000802  69                 	db	105	;'i'
   344   000803  65                 	db	101	;'e'
   345   000804  7A                 	db	122	;'z'
   346   000805  61                 	db	97	;'a'
   347   000806  73                 	db	115	;'s'
   348   000807  20                 	db	32
   349   000808  61                 	db	97	;'a'
   350   000809  20                 	db	32
   351   00080A  63                 	db	99	;'c'
   352   00080B  6F                 	db	111	;'o'
   353   00080C  6E                 	db	110	;'n'
   354   00080D  74                 	db	116	;'t'
   355   00080E  61                 	db	97	;'a'
   356   00080F  72                 	db	114	;'r'
   357   000810  3A                 	db	58	;':'
   358   000811  00                 	db	0
   359   000812                     STR_7:
   360   000812  46                 	db	70	;'F'
   361   000813  61                 	db	97	;'a'
   362   000814  6C                 	db	108	;'l'
   363   000815  74                 	db	116	;'t'
   364   000816  61                 	db	97	;'a'
   365   000817  6E                 	db	110	;'n'
   366   000818  74                 	db	116	;'t'
   367   000819  65                 	db	101	;'e'
   368   00081A  73                 	db	115	;'s'
   369   00081B  20                 	db	32
   370   00081C  3A                 	db	58	;':'
   371   00081D  00                 	db	0
   372   00081E                     STR_8:
   373   00081E  4F                 	db	79	;'O'
   374   00081F  62                 	db	98	;'b'
   375   000820  6A                 	db	106	;'j'
   376   000821  65                 	db	101	;'e'
   377   000822  74                 	db	116	;'t'
   378   000823  69                 	db	105	;'i'
   379   000824  76                 	db	118	;'v'
   380   000825  6F                 	db	111	;'o'
   381   000826  20                 	db	32
   382   000827  3A                 	db	58	;':'
   383   000828  00                 	db	0
   384   000829                     STR_6:
   385   000829  42                 	db	66	;'B'
   386   00082A  69                 	db	105	;'i'
   387   00082B  65                 	db	101	;'e'
   388   00082C  6E                 	db	110	;'n'
   389   00082D  76                 	db	118	;'v'
   390   00082E  65                 	db	101	;'e'
   391   00082F  6E                 	db	110	;'n'
   392   000830  69                 	db	105	;'i'
   393   000831  64                 	db	100	;'d'
   394   000832  61                 	db	97	;'a'
   395   000833  00                 	db	0
   396   000834                     STR_3:
   397   000834  50                 	db	80	;'P'
   398   000835  41                 	db	65	;'A'
   399   000836  52                 	db	82	;'R'
   400   000837  4F                 	db	79	;'O'
   401   000838  00                 	db	0
   402   000839                     STR_4:
   403   000839  53                 	db	83	;'S'
   404   00083A  55                 	db	85	;'U'
   405   00083B  50                 	db	80	;'P'
   406   00083C  52                 	db	82	;'R'
   407   00083D  00                 	db	0
   408   00083E                     STR_5:
   409   00083E  46                 	db	70	;'F'
   410   00083F  49                 	db	73	;'I'
   411   000840  4E                 	db	78	;'N'
   412   000841  00                 	db	0
   413   000842                     STR_2:
   414   000842  4F                 	db	79	;'O'
   415   000843  4B                 	db	75	;'K'
   416   000844  00                 	db	0
   417   000812                     STR_9           equ	STR_7
   418   00081E                     STR_10          equ	STR_8
   419   000845  00                 	db	0	; dummy byte at the end
   420   000002                     __activetblptr  equ	2
   421                           
   422                           ; #config settings
   423                           
   424                           	psect	cinit
   425   000EEE                     __pcinit:
   426                           	callstack 0
   427   000EEE                     start_initialization:
   428                           	callstack 0
   429   000EEE                     __initialization:
   430                           	callstack 0
   431                           
   432                           ; Initialize objects allocated to COMRAM (6 bytes)
   433                           ; load TBLPTR registers with __pidataCOMRAM
   434   000EEE  0EC2               	movlw	low __pidataCOMRAM
   435   000EF0  6EF6               	movwf	tblptrl,c
   436   000EF2  0E10               	movlw	high __pidataCOMRAM
   437   000EF4  6EF7               	movwf	tblptrh,c
   438   000EF6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   439   000EF8  6EF8               	movwf	tblptru,c
   440   000EFA  EE00  F02A         	lfsr	0,__pdataCOMRAM
   441   000EFE  EE10 F006          	lfsr	1,6
   442   000F02                     copy_data0:
   443   000F02  0009               	tblrd		*+
   444   000F04  CFF5 FFEE          	movff	tablat,postinc0
   445   000F08  50E5               	movf	postdec1,w,c
   446   000F0A  50E1               	movf	fsr1l,w,c
   447   000F0C  E1FA               	bnz	copy_data0
   448                           
   449                           ; Clear objects allocated to COMRAM (6 bytes)
   450   000F0E  6A29               	clrf	(__pbssCOMRAM+5)& (0+255),c
   451   000F10  6A28               	clrf	(__pbssCOMRAM+4)& (0+255),c
   452   000F12  6A27               	clrf	(__pbssCOMRAM+3)& (0+255),c
   453   000F14  6A26               	clrf	(__pbssCOMRAM+2)& (0+255),c
   454   000F16  6A25               	clrf	(__pbssCOMRAM+1)& (0+255),c
   455   000F18  6A24               	clrf	__pbssCOMRAM& (0+255),c
   456   000F1A                     end_of_initialization:
   457                           	callstack 0
   458   000F1A                     __end_of__initialization:
   459                           	callstack 0
   460   000F1A  9030               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   461   000F1C  9230               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   462   000F1E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   463   000F20  6EF8               	movwf	tblptru,c
   464   000F22  0100               	movlb	0
   465   000F24  EF1A  F005         	goto	_main	;jump to C main() function
   466                           
   467                           	psect	bssCOMRAM
   468   000024                     __pbssCOMRAM:
   469                           	callstack 0
   470   000024                     _ok:
   471                           	callstack 0
   472   000024                     	ds	1
   473   000025                     _input:
   474                           	callstack 0
   475   000025                     	ds	1
   476   000026                     _contadas:
   477                           	callstack 0
   478   000026                     	ds	1
   479   000027                     _faltantes:
   480                           	callstack 0
   481   000027                     	ds	1
   482   000028                     _objetivo:
   483                           	callstack 0
   484   000028                     	ds	1
   485   000029                     _Tecla:
   486                           	callstack 0
   487   000029                     	ds	1
   488                           
   489                           	psect	dataCOMRAM
   490   00002A                     __pdataCOMRAM:
   491                           	callstack 0
   492   00002A                     _FIN:
   493                           	callstack 0
   494   00002A                     	ds	1
   495   00002B                     _SUPR:
   496                           	callstack 0
   497   00002B                     	ds	1
   498   00002C                     _PARO:
   499                           	callstack 0
   500   00002C                     	ds	1
   501   00002D                     _OK:
   502                           	callstack 0
   503   00002D                     	ds	1
   504   00002E                     _aux:
   505                           	callstack 0
   506   00002E                     	ds	1
   507   00002F                     _interfaz:
   508                           	callstack 0
   509   00002F                     	ds	1
   510                           
   511                           	psect	cstackCOMRAM
   512   000001                     __pcstackCOMRAM:
   513                           	callstack 0
   514   000001                     i2___lbmod@divisor:
   515                           	callstack 0
   516   000001                     ??i2_RetardoLCD:
   517                           
   518                           ; 1 bytes @ 0x0
   519   000001                     	ds	1
   520   000002                     i2RetardoLCD@a:
   521                           	callstack 0
   522   000002                     i2___lbmod@dividend:
   523                           	callstack 0
   524   000002                     
   525                           ; 1 bytes @ 0x1
   526   000002                     	ds	1
   527   000003                     i2___lbmod@counter:
   528                           	callstack 0
   529   000003                     ??i2_EnviaDato:
   530                           
   531                           ; 1 bytes @ 0x2
   532   000003                     	ds	1
   533   000004                     i2EnviaDato@a:
   534                           	callstack 0
   535   000004                     i2___lbmod@rem:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x3
   539   000004                     	ds	1
   540   000005                     i2EscribeLCD_c@a:
   541                           	callstack 0
   542   000005                     i2___lbdiv@divisor:
   543                           	callstack 0
   544   000005                     
   545                           ; 1 bytes @ 0x4
   546   000005                     	ds	1
   547   000006                     i2MensajeLCD_Var@a:
   548                           	callstack 0
   549   000006                     i2___lbdiv@dividend:
   550                           	callstack 0
   551   000006                     
   552                           ; 1 bytes @ 0x5
   553   000006                     	ds	1
   554   000007                     i2___lbdiv@counter:
   555                           	callstack 0
   556   000007                     
   557                           ; 1 bytes @ 0x6
   558   000007                     	ds	1
   559   000008                     i2___lbdiv@quotient:
   560                           	callstack 0
   561                           
   562                           ; 1 bytes @ 0x7
   563   000008                     	ds	1
   564   000009                     i2EscribeLCD_n8@b:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0x8
   568   000009                     	ds	1
   569   00000A                     i2EscribeLCD_n8@centena:
   570                           	callstack 0
   571   00000A                     
   572                           ; 1 bytes @ 0x9
   573   00000A                     	ds	1
   574   00000B                     i2EscribeLCD_n8@decena:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0xA
   578   00000B                     	ds	1
   579   00000C                     i2EscribeLCD_n8@unidad:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0xB
   583   00000C                     	ds	1
   584   00000D                     i2EscribeLCD_n8@a:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0xC
   588   00000D                     	ds	1
   589   00000E                     ??_ISR:
   590                           
   591                           ; 1 bytes @ 0xD
   592   00000E                     	ds	7
   593   000015                     ConfiguraLCD@a:
   594                           	callstack 0
   595   000015                     ___lbmod@divisor:
   596                           	callstack 0
   597   000015                     ??_RetardoLCD:
   598   000015                     
   599                           ; 1 bytes @ 0x14
   600   000015                     	ds	1
   601   000016                     RetardoLCD@a:
   602                           	callstack 0
   603   000016                     ___lbmod@dividend:
   604                           	callstack 0
   605   000016                     
   606                           ; 1 bytes @ 0x15
   607   000016                     	ds	1
   608   000017                     ___lbmod@counter:
   609                           	callstack 0
   610   000017                     ??_EnviaDato:
   611                           
   612                           ; 1 bytes @ 0x16
   613   000017                     	ds	1
   614   000018                     EnviaDato@a:
   615                           	callstack 0
   616   000018                     ___lbmod@rem:
   617                           	callstack 0
   618                           
   619                           ; 1 bytes @ 0x17
   620   000018                     	ds	1
   621   000019                     EscribeLCD_c@a:
   622                           	callstack 0
   623   000019                     DireccionaLCD@a:
   624                           	callstack 0
   625   000019                     ___lbdiv@divisor:
   626                           	callstack 0
   627   000019                     
   628                           ; 1 bytes @ 0x18
   629   000019                     	ds	1
   630   00001A                     MensajeLCD_Var@a:
   631                           	callstack 0
   632   00001A                     ___lbdiv@dividend:
   633                           	callstack 0
   634   00001A                     
   635                           ; 1 bytes @ 0x19
   636   00001A                     	ds	1
   637   00001B                     ___lbdiv@counter:
   638                           	callstack 0
   639   00001B                     
   640                           ; 1 bytes @ 0x1A
   641   00001B                     	ds	1
   642   00001C                     ___lbdiv@quotient:
   643                           	callstack 0
   644                           
   645                           ; 1 bytes @ 0x1B
   646   00001C                     	ds	1
   647   00001D                     EscribeLCD_n8@b:
   648                           	callstack 0
   649                           
   650                           ; 1 bytes @ 0x1C
   651   00001D                     	ds	1
   652   00001E                     EscribeLCD_n8@centena:
   653                           	callstack 0
   654   00001E                     
   655                           ; 1 bytes @ 0x1D
   656   00001E                     	ds	1
   657   00001F                     EscribeLCD_n8@decena:
   658                           	callstack 0
   659                           
   660                           ; 1 bytes @ 0x1E
   661   00001F                     	ds	1
   662   000020                     EscribeLCD_n8@unidad:
   663                           	callstack 0
   664                           
   665                           ; 1 bytes @ 0x1F
   666   000020                     	ds	1
   667   000021                     EscribeLCD_n8@a:
   668                           	callstack 0
   669                           
   670                           ; 1 bytes @ 0x20
   671   000021                     	ds	1
   672   000022                     ??_main:
   673                           
   674                           ; 1 bytes @ 0x21
   675   000022                     	ds	2
   676                           
   677 ;;
   678 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   679 ;;
   680 ;; *************** function _main *****************
   681 ;; Defined at:
   682 ;;		line 22 in file "LAB4.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;		None
   685 ;; Auto vars:     Size  Location     Type
   686 ;;		None
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   696 ;;      Params:         0       0       0       0       0       0       0       0       0
   697 ;;      Locals:         0       0       0       0       0       0       0       0       0
   698 ;;      Temps:          2       0       0       0       0       0       0       0       0
   699 ;;      Totals:         2       0       0       0       0       0       0       0       0
   700 ;;Total ram usage:        2 bytes
   701 ;; Hardware stack levels required when called: 9
   702 ;; This function calls:
   703 ;;		_BorraLCD
   704 ;;		_ConfiguraLCD
   705 ;;		_DireccionaLCD
   706 ;;		_EscribeLCD_n8
   707 ;;		_InicializaLCD
   708 ;;		_MensajeLCD_Var
   709 ;; This function is called by:
   710 ;;		Startup code after reset
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	text0
   715   000A34                     __ptext0:
   716                           	callstack 0
   717   000A34                     _main:
   718                           	callstack 22
   719                           
   720                           ;LAB4.c: 25: ADCON1 = 15;
   721                           
   722                           ;incstack = 0
   723   000A34  0E0F               	movlw	15
   724   000A36  6EC1               	movwf	193,c	;volatile
   725                           
   726                           ;LAB4.c: 26: TRISA = 0x00;
   727   000A38  6A92               	clrf	146,c	;volatile
   728                           
   729                           ;LAB4.c: 27: TRISB = 0b11110000;
   730   000A3A  0EF0               	movlw	240
   731   000A3C  6E93               	movwf	147,c	;volatile
   732                           
   733                           ;LAB4.c: 28: TRISC = 0xFF;
   734   000A3E  6894               	setf	148,c	;volatile
   735                           
   736                           ;LAB4.c: 29: TRISD = 0x00;
   737   000A40  6A95               	clrf	149,c	;volatile
   738                           
   739                           ;LAB4.c: 30: TRISE = 0x00;
   740   000A42  6A96               	clrf	150,c	;volatile
   741                           
   742                           ;LAB4.c: 33: LATA = 0b010000;
   743   000A44  0E10               	movlw	16
   744   000A46  6E89               	movwf	137,c	;volatile
   745                           
   746                           ;LAB4.c: 34: LATB = 0x00;
   747   000A48  6A8A               	clrf	138,c	;volatile
   748                           
   749                           ;LAB4.c: 35: LATD = 0x00;
   750   000A4A  6A8C               	clrf	140,c	;volatile
   751                           
   752                           ;LAB4.c: 36: LATE = 0x00;
   753   000A4C  6A8D               	clrf	141,c	;volatile
   754                           
   755                           ;LAB4.c: 37: RBPU=0;
   756   000A4E  9EF1               	bcf	4081,7,c	;volatile
   757                           
   758                           ;LAB4.c: 42: RBIF=0;
   759   000A50  90F2               	bcf	4082,0,c	;volatile
   760                           
   761                           ;LAB4.c: 43: RBIE=1;
   762   000A52  86F2               	bsf	4082,3,c	;volatile
   763                           
   764                           ;LAB4.c: 47: T0CON = 0b00000010;
   765   000A54  0E02               	movlw	2
   766   000A56  6ED5               	movwf	213,c	;volatile
   767                           
   768                           ;LAB4.c: 48: TMR0 = 49911;
   769   000A58  0EC2               	movlw	194
   770   000A5A  6ED7               	movwf	215,c	;volatile
   771   000A5C  0EF7               	movlw	247
   772   000A5E  6ED6               	movwf	214,c	;volatile
   773                           
   774                           ;LAB4.c: 51: TMR0IF = 0;
   775   000A60  94F2               	bcf	4082,2,c	;volatile
   776                           
   777                           ;LAB4.c: 52: TMR0IE = 1;
   778   000A62  8AF2               	bsf	4082,5,c	;volatile
   779                           
   780                           ;LAB4.c: 55: GIE=1;
   781   000A64  8EF2               	bsf	4082,7,c	;volatile
   782                           
   783                           ;LAB4.c: 56: TMR0ON = 1;
   784   000A66  8ED5               	bsf	4053,7,c	;volatile
   785                           
   786                           ;LAB4.c: 60: input = 0;
   787   000A68  6A25               	clrf	_input^0,c
   788                           
   789                           ;LAB4.c: 61: objetivo = 0;
   790   000A6A  6A28               	clrf	_objetivo^0,c
   791                           
   792                           ;LAB4.c: 62: ok = 0;
   793   000A6C  6A24               	clrf	_ok^0,c
   794                           
   795                           ;LAB4.c: 63: ConfiguraLCD(4);
   796   000A6E  0E04               	movlw	4
   797   000A70  EC1C  F008         	call	_ConfiguraLCD
   798                           
   799                           ;LAB4.c: 64: InicializaLCD();
   800   000A74  EC87  F006         	call	_InicializaLCD	;wreg free
   801                           
   802                           ;LAB4.c: 67: BorraLCD();
   803   000A78  EC49  F008         	call	_BorraLCD	;wreg free
   804                           
   805                           ;LAB4.c: 68: MensajeLCD_Var("Bienvenida");
   806   000A7C  0E29               	movlw	low STR_6
   807   000A7E  6E1A               	movwf	MensajeLCD_Var@a^0,c
   808   000A80  ECCC  F007         	call	_MensajeLCD_Var	;wreg free
   809                           
   810                           ;LAB4.c: 69: _delay((unsigned long)((1000)*(1000000/4000.0)));
   811   000A84  0E02               	movlw	2
   812   000A86  6E23               	movwf	(??_main+1)^0,c
   813   000A88  0E45               	movlw	69
   814   000A8A  6E22               	movwf	??_main^0,c
   815   000A8C  0EAA               	movlw	170
   816   000A8E                     u1157:
   817   000A8E  2EE8               	decfsz	wreg,f,c
   818   000A90  D7FE               	bra	u1157
   819   000A92  2E22               	decfsz	??_main^0,f,c
   820   000A94  D7FC               	bra	u1157
   821   000A96  2E23               	decfsz	(??_main+1)^0,f,c
   822   000A98  D7FA               	bra	u1157
   823                           
   824                           ;LAB4.c: 72: BorraLCD();
   825   000A9A  EC49  F008         	call	_BorraLCD	;wreg free
   826                           
   827                           ;LAB4.c: 73: MensajeLCD_Var(*aux);
   828   000A9E  C02E  F01A         	movff	_aux,MensajeLCD_Var@a
   829   000AA2  ECCC  F007         	call	_MensajeLCD_Var	;wreg free
   830                           
   831                           ;LAB4.c: 74: DireccionaLCD(0xC0);
   832   000AA6  0EC0               	movlw	192
   833   000AA8  EC33  F008         	call	_DireccionaLCD
   834                           
   835                           ;LAB4.c: 75: _delay((unsigned long)((1000)*(1000000/4000.0)));
   836   000AAC  0E02               	movlw	2
   837   000AAE  6E23               	movwf	(??_main+1)^0,c
   838   000AB0  0E45               	movlw	69
   839   000AB2  6E22               	movwf	??_main^0,c
   840   000AB4  0EAA               	movlw	170
   841   000AB6                     u1167:
   842   000AB6  2EE8               	decfsz	wreg,f,c
   843   000AB8  D7FE               	bra	u1167
   844   000ABA  2E22               	decfsz	??_main^0,f,c
   845   000ABC  D7FC               	bra	u1167
   846   000ABE  2E23               	decfsz	(??_main+1)^0,f,c
   847   000AC0  D7FA               	bra	u1167
   848   000AC2                     l1956:
   849   000AC2  5024               	movf	_ok^0,w,c
   850   000AC4  B4D8               	btfsc	status,2,c
   851   000AC6  D7FD               	goto	l1956
   852                           
   853                           ;LAB4.c: 80: };LAB4.c: 83: objetivo = objetivo + Tecla;
   854   000AC8  5028               	movf	_objetivo^0,w,c
   855   000ACA  2429               	addwf	_Tecla^0,w,c
   856   000ACC  6E28               	movwf	_objetivo^0,c
   857                           
   858                           ;LAB4.c: 84: faltantes = objetivo;
   859   000ACE  C028  F027         	movff	_objetivo,_faltantes
   860                           
   861                           ;LAB4.c: 85: contadas = objetivo - faltantes;
   862   000AD2  5027               	movf	_faltantes^0,w,c
   863   000AD4  5C28               	subwf	_objetivo^0,w,c
   864   000AD6  6E26               	movwf	_contadas^0,c
   865                           
   866                           ;LAB4.c: 88: BorraLCD();
   867   000AD8  EC49  F008         	call	_BorraLCD	;wreg free
   868                           
   869                           ;LAB4.c: 89: MensajeLCD_Var("Faltantes :");
   870   000ADC  0E12               	movlw	low STR_7
   871   000ADE  6E1A               	movwf	MensajeLCD_Var@a^0,c
   872   000AE0  ECCC  F007         	call	_MensajeLCD_Var	;wreg free
   873                           
   874                           ;LAB4.c: 90: EscribeLCD_n8(faltantes,2);
   875   000AE4  0E02               	movlw	2
   876   000AE6  6E1D               	movwf	EscribeLCD_n8@b^0,c
   877   000AE8  5027               	movf	_faltantes^0,w,c
   878   000AEA  ECA1  F005         	call	_EscribeLCD_n8
   879                           
   880                           ;LAB4.c: 91: DireccionaLCD(0xC0);
   881   000AEE  0EC0               	movlw	192
   882   000AF0  EC33  F008         	call	_DireccionaLCD
   883                           
   884                           ;LAB4.c: 92: MensajeLCD_Var("Objetivo :");
   885   000AF4  0E1E               	movlw	low STR_8
   886   000AF6  6E1A               	movwf	MensajeLCD_Var@a^0,c
   887   000AF8  ECCC  F007         	call	_MensajeLCD_Var	;wreg free
   888                           
   889                           ;LAB4.c: 93: EscribeLCD_n8(objetivo,2);
   890   000AFC  0E02               	movlw	2
   891   000AFE  6E1D               	movwf	EscribeLCD_n8@b^0,c
   892   000B00  5028               	movf	_objetivo^0,w,c
   893   000B02  ECA1  F005         	call	_EscribeLCD_n8
   894   000B06                     l1974:
   895                           
   896                           ;LAB4.c: 96: if(RC0 == 1){
   897   000B06  A082               	btfss	3970,0,c	;volatile
   898   000B08  D7FE               	goto	l1974
   899                           
   900                           ;LAB4.c: 97: contadas++;
   901   000B0A  2A26               	incf	_contadas^0,f,c
   902                           
   903                           ;LAB4.c: 98: faltantes--;
   904   000B0C  0627               	decf	_faltantes^0,f,c
   905                           
   906                           ;LAB4.c: 99: LATD = contadas;
   907   000B0E  C026  FF8C         	movff	_contadas,3980	;volatile
   908                           
   909                           ;LAB4.c: 101: BorraLCD();
   910   000B12  EC49  F008         	call	_BorraLCD	;wreg free
   911                           
   912                           ;LAB4.c: 102: MensajeLCD_Var("Faltantes :");
   913   000B16  0E12               	movlw	low STR_7
   914   000B18  6E1A               	movwf	MensajeLCD_Var@a^0,c
   915   000B1A  ECCC  F007         	call	_MensajeLCD_Var	;wreg free
   916                           
   917                           ;LAB4.c: 103: EscribeLCD_n8(faltantes,2);
   918   000B1E  0E02               	movlw	2
   919   000B20  6E1D               	movwf	EscribeLCD_n8@b^0,c
   920   000B22  5027               	movf	_faltantes^0,w,c
   921   000B24  ECA1  F005         	call	_EscribeLCD_n8
   922                           
   923                           ;LAB4.c: 104: DireccionaLCD(0xC0);
   924   000B28  0EC0               	movlw	192
   925   000B2A  EC33  F008         	call	_DireccionaLCD
   926                           
   927                           ;LAB4.c: 105: MensajeLCD_Var("Objetivo :");
   928   000B2E  0E1E               	movlw	low STR_8
   929   000B30  6E1A               	movwf	MensajeLCD_Var@a^0,c
   930   000B32  ECCC  F007         	call	_MensajeLCD_Var	;wreg free
   931                           
   932                           ;LAB4.c: 106: EscribeLCD_n8(objetivo,2);
   933   000B36  0E02               	movlw	2
   934   000B38  6E1D               	movwf	EscribeLCD_n8@b^0,c
   935   000B3A  5028               	movf	_objetivo^0,w,c
   936   000B3C  ECA1  F005         	call	_EscribeLCD_n8
   937   000B40  D7E2               	goto	l1974
   938   000B42                     __end_of_main:
   939                           	callstack 0
   940                           
   941 ;; *************** function _MensajeLCD_Var *****************
   942 ;; Defined at:
   943 ;;		line 233 in file "LibLCDXC8.h"
   944 ;; Parameters:    Size  Location     Type
   945 ;;  a               1   25[COMRAM] PTR unsigned char 
   946 ;;		 -> STR_10(11), STR_9(12), STR_8(11), STR_7(12), 
   947 ;;		 -> STR_6(11), STR_5(4), STR_4(5), STR_3(5), 
   948 ;;		 -> STR_1(17), 
   949 ;; Auto vars:     Size  Location     Type
   950 ;;		None
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   960 ;;      Params:         1       0       0       0       0       0       0       0       0
   961 ;;      Locals:         0       0       0       0       0       0       0       0       0
   962 ;;      Temps:          0       0       0       0       0       0       0       0       0
   963 ;;      Totals:         1       0       0       0       0       0       0       0       0
   964 ;;Total ram usage:        1 bytes
   965 ;; Hardware stack levels used: 1
   966 ;; Hardware stack levels required when called: 8
   967 ;; This function calls:
   968 ;;		_EscribeLCD_c
   969 ;; This function is called by:
   970 ;;		_main
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text1
   975   000F98                     __ptext1:
   976                           	callstack 0
   977   000F98                     _MensajeLCD_Var:
   978                           	callstack 22
   979                           
   980                           ;LibLCDXC8.h: 237: while (*a) {
   981                           
   982                           ;incstack = 0
   983   000F98  D009               	goto	l1848
   984   000F9A                     l1844:
   985                           
   986                           ;LibLCDXC8.h: 238: EscribeLCD_c(*a);
   987   000F9A  C01A  FFF6         	movff	MensajeLCD_Var@a,tblptrl
   988   000F9E                     	if	1	;There is more than 1 active tblptr byte
   989   000F9E  0E08               	movlw	high __smallconst
   990   000FA0  6EF7               	movwf	tblptrh,c
   991   000FA2                     	endif
   992   000FA2                     	if	0	;tblptru may be non-zero
   993   000FA2                     	endif
   994   000FA2                     	if	0	;tblptru may be non-zero
   995   000FA2                     	endif
   996   000FA2  0008               	tblrd		*
   997   000FA4  50F5               	movf	tablat,w,c
   998   000FA6  EC28  F008         	call	_EscribeLCD_c
   999                           
  1000                           ;LibLCDXC8.h: 239: a++;
  1001   000FAA  2A1A               	incf	MensajeLCD_Var@a^0,f,c
  1002   000FAC                     l1848:
  1003   000FAC  C01A  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  1004   000FB0                     	if	1	;There is more than 1 active tblptr byte
  1005   000FB0  0E08               	movlw	high __smallconst
  1006   000FB2  6EF7               	movwf	tblptrh,c
  1007   000FB4                     	endif
  1008   000FB4                     	if	0	;tblptru may be non-zero
  1009   000FB4                     	endif
  1010   000FB4                     	if	0	;tblptru may be non-zero
  1011   000FB4                     	endif
  1012   000FB4  0008               	tblrd		*
  1013   000FB6  50F5               	movf	tablat,w,c
  1014   000FB8  0900               	iorlw	0
  1015   000FBA  B4D8               	btfsc	status,2,c
  1016   000FBC  0012               	return	
  1017   000FBE  D7ED               	goto	l1844
  1018   000FC0                     __end_of_MensajeLCD_Var:
  1019                           	callstack 0
  1020                           
  1021 ;; *************** function _EscribeLCD_c *****************
  1022 ;; Defined at:
  1023 ;;		line 137 in file "LibLCDXC8.h"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;  a               1    wreg     unsigned char 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  a               1   24[COMRAM] unsigned char 
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, status,2, status,0, cstack
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1037 ;;      Params:         0       0       0       0       0       0       0       0       0
  1038 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1039 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1040 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1041 ;;Total ram usage:        1 bytes
  1042 ;; Hardware stack levels used: 1
  1043 ;; Hardware stack levels required when called: 7
  1044 ;; This function calls:
  1045 ;;		_EnviaDato
  1046 ;;		_HabilitaLCD
  1047 ;;		_RetardoLCD
  1048 ;; This function is called by:
  1049 ;;		_MensajeLCD_Var
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           	psect	text2
  1054   001050                     __ptext2:
  1055                           	callstack 0
  1056   001050                     _EscribeLCD_c:
  1057                           	callstack 22
  1058                           
  1059                           ;incstack = 0
  1060                           ;EscribeLCD_c@a stored from wreg
  1061   001050  6E19               	movwf	EscribeLCD_c@a^0,c
  1062                           
  1063                           ;LibLCDXC8.h: 141: LATA3=1;
  1064   001052  8689               	bsf	3977,3,c	;volatile
  1065                           
  1066                           ;LibLCDXC8.h: 142: EnviaDato(a);
  1067   001054  5019               	movf	EscribeLCD_c@a^0,w,c
  1068   001056  EC2B  F007         	call	_EnviaDato
  1069                           
  1070                           ;LibLCDXC8.h: 143: HabilitaLCD();
  1071   00105A  EC53  F008         	call	_HabilitaLCD	;wreg free
  1072                           
  1073                           ;LibLCDXC8.h: 144: RetardoLCD(4);
  1074   00105E  0E04               	movlw	4
  1075   001060  ECD5  F006         	call	_RetardoLCD
  1076   001064  0012               	return		;funcret
  1077   001066                     __end_of_EscribeLCD_c:
  1078                           	callstack 0
  1079                           
  1080 ;; *************** function _InicializaLCD *****************
  1081 ;; Defined at:
  1082 ;;		line 72 in file "LibLCDXC8.h"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;		None
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;		None
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2, status,0, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1096 ;;      Params:         0       0       0       0       0       0       0       0       0
  1097 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1098 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1099 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1100 ;;Total ram usage:        0 bytes
  1101 ;; Hardware stack levels used: 1
  1102 ;; Hardware stack levels required when called: 8
  1103 ;; This function calls:
  1104 ;;		_BorraLCD
  1105 ;;		_EnviaDato
  1106 ;;		_HabilitaLCD
  1107 ;;		_RetardoLCD
  1108 ;; This function is called by:
  1109 ;;		_main
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text3
  1114   000D0E                     __ptext3:
  1115                           	callstack 0
  1116   000D0E                     _InicializaLCD:
  1117                           	callstack 22
  1118                           
  1119                           ;LibLCDXC8.h: 74: LATA3=0;
  1120                           
  1121                           ;incstack = 0
  1122   000D0E  9689               	bcf	3977,3,c	;volatile
  1123                           
  1124                           ;LibLCDXC8.h: 75: if(interfaz==4)
  1125   000D10  0E04               	movlw	4
  1126   000D12  182F               	xorwf	_interfaz^0,w,c
  1127   000D14  A4D8               	btfss	status,2,c
  1128   000D16  D004               	goto	l1758
  1129                           
  1130                           ;LibLCDXC8.h: 76: LATD=(LATD & 0b00001111) | 0x30;
  1131   000D18  508C               	movf	140,w,c	;volatile
  1132   000D1A  0B0F               	andlw	15
  1133   000D1C  0930               	iorlw	48
  1134   000D1E  D001               	goto	L1
  1135   000D20                     l1758:
  1136                           
  1137                           ;LibLCDXC8.h: 77: else;LibLCDXC8.h: 78: LATD=0x3F;
  1138   000D20  0E3F               	movlw	63
  1139   000D22                     L1:
  1140   000D22  6E8C               	movwf	140,c	;volatile
  1141                           
  1142                           ;LibLCDXC8.h: 79: HabilitaLCD();
  1143   000D24  EC53  F008         	call	_HabilitaLCD	;wreg free
  1144                           
  1145                           ;LibLCDXC8.h: 80: RetardoLCD(1);
  1146   000D28  0E01               	movlw	1
  1147   000D2A  ECD5  F006         	call	_RetardoLCD
  1148                           
  1149                           ;LibLCDXC8.h: 81: if(interfaz==4)
  1150   000D2E  0E04               	movlw	4
  1151   000D30  182F               	xorwf	_interfaz^0,w,c
  1152   000D32  A4D8               	btfss	status,2,c
  1153   000D34  D004               	goto	l1768
  1154                           
  1155                           ;LibLCDXC8.h: 82: LATD=(LATD & 0b00001111) | 0x30;
  1156   000D36  508C               	movf	140,w,c	;volatile
  1157   000D38  0B0F               	andlw	15
  1158   000D3A  0930               	iorlw	48
  1159   000D3C  D001               	goto	L2
  1160   000D3E                     l1768:
  1161                           
  1162                           ;LibLCDXC8.h: 83: else;LibLCDXC8.h: 84: LATD=0x3F;
  1163   000D3E  0E3F               	movlw	63
  1164   000D40                     L2:
  1165   000D40  6E8C               	movwf	140,c	;volatile
  1166                           
  1167                           ;LibLCDXC8.h: 85: HabilitaLCD();
  1168   000D42  EC53  F008         	call	_HabilitaLCD	;wreg free
  1169                           
  1170                           ;LibLCDXC8.h: 86: RetardoLCD(3);
  1171   000D46  0E03               	movlw	3
  1172   000D48  ECD5  F006         	call	_RetardoLCD
  1173                           
  1174                           ;LibLCDXC8.h: 87: if(interfaz==4)
  1175   000D4C  0E04               	movlw	4
  1176   000D4E  182F               	xorwf	_interfaz^0,w,c
  1177   000D50  A4D8               	btfss	status,2,c
  1178   000D52  D004               	goto	l1778
  1179                           
  1180                           ;LibLCDXC8.h: 88: LATD=(LATD & 0b00001111) | 0x30;
  1181   000D54  508C               	movf	140,w,c	;volatile
  1182   000D56  0B0F               	andlw	15
  1183   000D58  0930               	iorlw	48
  1184   000D5A  D001               	goto	L3
  1185   000D5C                     l1778:
  1186                           
  1187                           ;LibLCDXC8.h: 89: else;LibLCDXC8.h: 90: LATD=0x3F;
  1188   000D5C  0E3F               	movlw	63
  1189   000D5E                     L3:
  1190   000D5E  6E8C               	movwf	140,c	;volatile
  1191                           
  1192                           ;LibLCDXC8.h: 91: HabilitaLCD();
  1193   000D60  EC53  F008         	call	_HabilitaLCD	;wreg free
  1194                           
  1195                           ;LibLCDXC8.h: 92: RetardoLCD(4);
  1196   000D64  0E04               	movlw	4
  1197   000D66  ECD5  F006         	call	_RetardoLCD
  1198                           
  1199                           ;LibLCDXC8.h: 93: if(interfaz==4){
  1200   000D6A  0E04               	movlw	4
  1201   000D6C  182F               	xorwf	_interfaz^0,w,c
  1202   000D6E  A4D8               	btfss	status,2,c
  1203   000D70  D011               	goto	l1798
  1204                           
  1205                           ;LibLCDXC8.h: 94: LATD=(LATD & 0b00001111) | 0x20;
  1206   000D72  508C               	movf	140,w,c	;volatile
  1207   000D74  0B0F               	andlw	15
  1208   000D76  0920               	iorlw	32
  1209   000D78  6E8C               	movwf	140,c	;volatile
  1210                           
  1211                           ;LibLCDXC8.h: 95: HabilitaLCD();
  1212   000D7A  EC53  F008         	call	_HabilitaLCD	;wreg free
  1213                           
  1214                           ;LibLCDXC8.h: 96: RetardoLCD(4);
  1215   000D7E  0E04               	movlw	4
  1216   000D80  ECD5  F006         	call	_RetardoLCD
  1217                           
  1218                           ;LibLCDXC8.h: 97: EnviaDato(0x2F);
  1219   000D84  0E2F               	movlw	47
  1220   000D86  EC2B  F007         	call	_EnviaDato
  1221                           
  1222                           ;LibLCDXC8.h: 98: HabilitaLCD();
  1223   000D8A  EC53  F008         	call	_HabilitaLCD	;wreg free
  1224                           
  1225                           ;LibLCDXC8.h: 99: RetardoLCD(4);
  1226   000D8E  0E04               	movlw	4
  1227   000D90  ECD5  F006         	call	_RetardoLCD
  1228   000D94                     l1798:
  1229                           
  1230                           ;LibLCDXC8.h: 100: };LibLCDXC8.h: 101: BorraLCD();
  1231   000D94  EC49  F008         	call	_BorraLCD	;wreg free
  1232                           
  1233                           ;LibLCDXC8.h: 102: EnviaDato(0xF);
  1234   000D98  0E0F               	movlw	15
  1235   000D9A  EC2B  F007         	call	_EnviaDato
  1236                           
  1237                           ;LibLCDXC8.h: 103: HabilitaLCD();
  1238   000D9E  EC53  F008         	call	_HabilitaLCD	;wreg free
  1239                           
  1240                           ;LibLCDXC8.h: 104: RetardoLCD(4);
  1241   000DA2  0E04               	movlw	4
  1242   000DA4  ECD5  F006         	call	_RetardoLCD
  1243   000DA8  0012               	return		;funcret
  1244   000DAA                     __end_of_InicializaLCD:
  1245                           	callstack 0
  1246                           
  1247 ;; *************** function _BorraLCD *****************
  1248 ;; Defined at:
  1249 ;;		line 113 in file "LibLCDXC8.h"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;		None
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;		None
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		wreg, status,2, status,0, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1263 ;;      Params:         0       0       0       0       0       0       0       0       0
  1264 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1265 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1266 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1267 ;;Total ram usage:        0 bytes
  1268 ;; Hardware stack levels used: 1
  1269 ;; Hardware stack levels required when called: 7
  1270 ;; This function calls:
  1271 ;;		_EnviaDato
  1272 ;;		_HabilitaLCD
  1273 ;;		_RetardoLCD
  1274 ;; This function is called by:
  1275 ;;		_InicializaLCD
  1276 ;;		_main
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text4
  1281   001092                     __ptext4:
  1282                           	callstack 0
  1283   001092                     _BorraLCD:
  1284                           	callstack 22
  1285                           
  1286                           ;LibLCDXC8.h: 115: LATA3=0;
  1287                           
  1288                           ;incstack = 0
  1289   001092  9689               	bcf	3977,3,c	;volatile
  1290                           
  1291                           ;LibLCDXC8.h: 116: EnviaDato(0x01);
  1292   001094  0E01               	movlw	1
  1293   001096  EC2B  F007         	call	_EnviaDato
  1294                           
  1295                           ;LibLCDXC8.h: 117: HabilitaLCD();
  1296   00109A  EC53  F008         	call	_HabilitaLCD	;wreg free
  1297                           
  1298                           ;LibLCDXC8.h: 118: RetardoLCD(2);
  1299   00109E  0E02               	movlw	2
  1300   0010A0  ECD5  F006         	call	_RetardoLCD
  1301   0010A4  0012               	return		;funcret
  1302   0010A6                     __end_of_BorraLCD:
  1303                           	callstack 0
  1304                           
  1305 ;; *************** function _EscribeLCD_n8 *****************
  1306 ;; Defined at:
  1307 ;;		line 146 in file "LibLCDXC8.h"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  a               1    wreg     unsigned char 
  1310 ;;  b               1   28[COMRAM] unsigned char 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  a               1   32[COMRAM] unsigned char 
  1313 ;;  unidad          1   31[COMRAM] unsigned char 
  1314 ;;  decena          1   30[COMRAM] unsigned char 
  1315 ;;  centena         1   29[COMRAM] unsigned char 
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1    wreg      void 
  1318 ;; Registers used:
  1319 ;;		wreg, status,2, status,0, cstack
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1325 ;;      Params:         1       0       0       0       0       0       0       0       0
  1326 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1327 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1328 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1329 ;;Total ram usage:        5 bytes
  1330 ;; Hardware stack levels used: 1
  1331 ;; Hardware stack levels required when called: 7
  1332 ;; This function calls:
  1333 ;;		_EnviaDato
  1334 ;;		_HabilitaLCD
  1335 ;;		_RetardoLCD
  1336 ;;		___lbdiv
  1337 ;;		___lbmod
  1338 ;; This function is called by:
  1339 ;;		_main
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           	psect	text5
  1344   000B42                     __ptext5:
  1345                           	callstack 0
  1346   000B42                     _EscribeLCD_n8:
  1347                           	callstack 23
  1348                           
  1349                           ;incstack = 0
  1350                           ;EscribeLCD_n8@a stored from wreg
  1351   000B42  6E21               	movwf	EscribeLCD_n8@a^0,c
  1352                           
  1353                           ;LibLCDXC8.h: 151: unsigned char centena,decena,unidad;;LibLCDXC8.h: 152: LATA3=1;
  1354   000B44  8689               	bsf	3977,3,c	;volatile
  1355                           
  1356                           ;LibLCDXC8.h: 153: switch(b){
  1357   000B46  D065               	goto	l1840
  1358   000B48                     l1808:
  1359   000B48  0E0A               	movlw	10
  1360   000B4A  6E15               	movwf	___lbmod@divisor^0,c
  1361   000B4C  5021               	movf	EscribeLCD_n8@a^0,w,c
  1362   000B4E  ECE0  F007         	call	___lbmod
  1363   000B52  6E20               	movwf	EscribeLCD_n8@unidad^0,c
  1364                           
  1365                           ;LibLCDXC8.h: 155: EnviaDato(unidad+48);
  1366   000B54  5020               	movf	EscribeLCD_n8@unidad^0,w,c
  1367   000B56  0F30               	addlw	48
  1368   000B58  EC2B  F007         	call	_EnviaDato
  1369                           
  1370                           ;LibLCDXC8.h: 156: HabilitaLCD();
  1371   000B5C  EC53  F008         	call	_HabilitaLCD	;wreg free
  1372                           
  1373                           ;LibLCDXC8.h: 157: RetardoLCD(4);
  1374   000B60  0E04               	movlw	4
  1375   000B62  ECD5  F006         	call	_RetardoLCD
  1376                           
  1377                           ;LibLCDXC8.h: 158: break;
  1378   000B66  0012               	return	
  1379   000B68                     l1814:
  1380   000B68  0E0A               	movlw	10
  1381   000B6A  6E19               	movwf	___lbdiv@divisor^0,c
  1382   000B6C  0E64               	movlw	100
  1383   000B6E  6E15               	movwf	___lbmod@divisor^0,c
  1384   000B70  5021               	movf	EscribeLCD_n8@a^0,w,c
  1385   000B72  ECE0  F007         	call	___lbmod
  1386   000B76  EC94  F007         	call	___lbdiv
  1387   000B7A  6E1F               	movwf	EscribeLCD_n8@decena^0,c
  1388                           
  1389                           ;LibLCDXC8.h: 160: unidad=a%10;
  1390   000B7C  0E0A               	movlw	10
  1391   000B7E  6E15               	movwf	___lbmod@divisor^0,c
  1392   000B80  5021               	movf	EscribeLCD_n8@a^0,w,c
  1393   000B82  ECE0  F007         	call	___lbmod
  1394   000B86  6E20               	movwf	EscribeLCD_n8@unidad^0,c
  1395                           
  1396                           ;LibLCDXC8.h: 161: EnviaDato(decena+48);
  1397   000B88  501F               	movf	EscribeLCD_n8@decena^0,w,c
  1398   000B8A  0F30               	addlw	48
  1399   000B8C  EC2B  F007         	call	_EnviaDato
  1400                           
  1401                           ;LibLCDXC8.h: 162: HabilitaLCD();
  1402   000B90  EC53  F008         	call	_HabilitaLCD	;wreg free
  1403                           
  1404                           ;LibLCDXC8.h: 163: RetardoLCD(4);
  1405   000B94  0E04               	movlw	4
  1406   000B96  ECD5  F006         	call	_RetardoLCD
  1407                           
  1408                           ;LibLCDXC8.h: 164: EnviaDato(unidad+48);
  1409   000B9A  5020               	movf	EscribeLCD_n8@unidad^0,w,c
  1410   000B9C  0F30               	addlw	48
  1411   000B9E  EC2B  F007         	call	_EnviaDato
  1412                           
  1413                           ;LibLCDXC8.h: 165: HabilitaLCD();
  1414   000BA2  EC53  F008         	call	_HabilitaLCD	;wreg free
  1415                           
  1416                           ;LibLCDXC8.h: 166: RetardoLCD(4);
  1417   000BA6  0E04               	movlw	4
  1418   000BA8  ECD5  F006         	call	_RetardoLCD
  1419                           
  1420                           ;LibLCDXC8.h: 167: break;
  1421   000BAC  0012               	return	
  1422   000BAE                     l1824:
  1423   000BAE  0E64               	movlw	100
  1424   000BB0  6E19               	movwf	___lbdiv@divisor^0,c
  1425   000BB2  5021               	movf	EscribeLCD_n8@a^0,w,c
  1426   000BB4  EC94  F007         	call	___lbdiv
  1427   000BB8  6E1E               	movwf	EscribeLCD_n8@centena^0,c
  1428                           
  1429                           ;LibLCDXC8.h: 169: decena=(a%100)/10;
  1430   000BBA  0E0A               	movlw	10
  1431   000BBC  6E19               	movwf	___lbdiv@divisor^0,c
  1432   000BBE  0E64               	movlw	100
  1433   000BC0  6E15               	movwf	___lbmod@divisor^0,c
  1434   000BC2  5021               	movf	EscribeLCD_n8@a^0,w,c
  1435   000BC4  ECE0  F007         	call	___lbmod
  1436   000BC8  EC94  F007         	call	___lbdiv
  1437   000BCC  6E1F               	movwf	EscribeLCD_n8@decena^0,c
  1438                           
  1439                           ;LibLCDXC8.h: 170: unidad=a%10;
  1440   000BCE  0E0A               	movlw	10
  1441   000BD0  6E15               	movwf	___lbmod@divisor^0,c
  1442   000BD2  5021               	movf	EscribeLCD_n8@a^0,w,c
  1443   000BD4  ECE0  F007         	call	___lbmod
  1444   000BD8  6E20               	movwf	EscribeLCD_n8@unidad^0,c
  1445                           
  1446                           ;LibLCDXC8.h: 171: EnviaDato(centena+48);
  1447   000BDA  501E               	movf	EscribeLCD_n8@centena^0,w,c
  1448   000BDC  0F30               	addlw	48
  1449   000BDE  EC2B  F007         	call	_EnviaDato
  1450                           
  1451                           ;LibLCDXC8.h: 172: HabilitaLCD();
  1452   000BE2  EC53  F008         	call	_HabilitaLCD	;wreg free
  1453                           
  1454                           ;LibLCDXC8.h: 173: RetardoLCD(4);
  1455   000BE6  0E04               	movlw	4
  1456   000BE8  ECD5  F006         	call	_RetardoLCD
  1457                           
  1458                           ;LibLCDXC8.h: 174: EnviaDato(decena+48);
  1459   000BEC  501F               	movf	EscribeLCD_n8@decena^0,w,c
  1460   000BEE  0F30               	addlw	48
  1461   000BF0  EC2B  F007         	call	_EnviaDato
  1462                           
  1463                           ;LibLCDXC8.h: 175: HabilitaLCD();
  1464   000BF4  EC53  F008         	call	_HabilitaLCD	;wreg free
  1465                           
  1466                           ;LibLCDXC8.h: 176: RetardoLCD(4);
  1467   000BF8  0E04               	movlw	4
  1468   000BFA  ECD5  F006         	call	_RetardoLCD
  1469                           
  1470                           ;LibLCDXC8.h: 177: EnviaDato(unidad+48);
  1471   000BFE  5020               	movf	EscribeLCD_n8@unidad^0,w,c
  1472   000C00  0F30               	addlw	48
  1473   000C02  EC2B  F007         	call	_EnviaDato
  1474                           
  1475                           ;LibLCDXC8.h: 178: HabilitaLCD();
  1476   000C06  EC53  F008         	call	_HabilitaLCD	;wreg free
  1477                           
  1478                           ;LibLCDXC8.h: 179: RetardoLCD(4);
  1479   000C0A  0E04               	movlw	4
  1480   000C0C  ECD5  F006         	call	_RetardoLCD
  1481                           
  1482                           ;LibLCDXC8.h: 180: break;
  1483   000C10  0012               	return	
  1484   000C12                     l1840:
  1485   000C12  501D               	movf	EscribeLCD_n8@b^0,w,c
  1486                           
  1487                           ; Switch size 1, requested type "simple"
  1488                           ; Number of cases is 3, Range of values is 1 to 3
  1489                           ; switch strategies available:
  1490                           ; Name         Instructions Cycles
  1491                           ; simple_byte           10     6 (average)
  1492                           ;	Chosen strategy is simple_byte
  1493   000C14  0A01               	xorlw	1	; case 1
  1494   000C16  B4D8               	btfsc	status,2,c
  1495   000C18  D797               	goto	l1808
  1496   000C1A  0A03               	xorlw	3	; case 2
  1497   000C1C  B4D8               	btfsc	status,2,c
  1498   000C1E  D7A4               	goto	l1814
  1499   000C20  0A01               	xorlw	1	; case 3
  1500   000C22  A4D8               	btfss	status,2,c
  1501   000C24  0012               	return	
  1502   000C26  D7C3               	goto	l1824
  1503   000C28                     __end_of_EscribeLCD_n8:
  1504                           	callstack 0
  1505                           
  1506 ;; *************** function ___lbmod *****************
  1507 ;; Defined at:
  1508 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbmod.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  dividend        1    wreg     unsigned char 
  1511 ;;  divisor         1   20[COMRAM] unsigned char 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  dividend        1   21[COMRAM] unsigned char 
  1514 ;;  rem             1   23[COMRAM] unsigned char 
  1515 ;;  counter         1   22[COMRAM] unsigned char 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      unsigned char 
  1518 ;; Registers used:
  1519 ;;		wreg, status,2, status,0
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1525 ;;      Params:         1       0       0       0       0       0       0       0       0
  1526 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1527 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1528 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1529 ;;Total ram usage:        4 bytes
  1530 ;; Hardware stack levels used: 1
  1531 ;; Hardware stack levels required when called: 5
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_EscribeLCD_n8
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text6
  1540   000FC0                     __ptext6:
  1541                           	callstack 0
  1542   000FC0                     ___lbmod:
  1543                           	callstack 24
  1544                           
  1545                           ;incstack = 0
  1546                           ;___lbmod@dividend stored from wreg
  1547   000FC0  6E16               	movwf	___lbmod@dividend^0,c
  1548   000FC2  0E08               	movlw	8
  1549   000FC4  6E17               	movwf	___lbmod@counter^0,c
  1550   000FC6  6A18               	clrf	___lbmod@rem^0,c
  1551   000FC8                     l1682:
  1552   000FC8  90D8               	bcf	status,0,c
  1553   000FCA  3416               	rlcf	___lbmod@dividend^0,w,c
  1554   000FCC  3418               	rlcf	___lbmod@rem^0,w,c
  1555   000FCE  6E18               	movwf	___lbmod@rem^0,c
  1556   000FD0  90D8               	bcf	status,0,c
  1557   000FD2  3616               	rlcf	___lbmod@dividend^0,f,c
  1558   000FD4  5015               	movf	___lbmod@divisor^0,w,c
  1559   000FD6  5C18               	subwf	___lbmod@rem^0,w,c
  1560   000FD8  A0D8               	btfss	status,0,c
  1561   000FDA  D002               	goto	l1690
  1562   000FDC  5015               	movf	___lbmod@divisor^0,w,c
  1563   000FDE  5E18               	subwf	___lbmod@rem^0,f,c
  1564   000FE0                     l1690:
  1565   000FE0  2E17               	decfsz	___lbmod@counter^0,f,c
  1566   000FE2  D7F2               	goto	l1682
  1567   000FE4  5018               	movf	___lbmod@rem^0,w,c
  1568   000FE6  0012               	return		;funcret
  1569   000FE8                     __end_of___lbmod:
  1570                           	callstack 0
  1571                           
  1572 ;; *************** function ___lbdiv *****************
  1573 ;; Defined at:
  1574 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbdiv.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  dividend        1    wreg     unsigned char 
  1577 ;;  divisor         1   24[COMRAM] unsigned char 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  dividend        1   25[COMRAM] unsigned char 
  1580 ;;  quotient        1   27[COMRAM] unsigned char 
  1581 ;;  counter         1   26[COMRAM] unsigned char 
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  1    wreg      unsigned char 
  1584 ;; Registers used:
  1585 ;;		wreg, status,2, status,0
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1591 ;;      Params:         1       0       0       0       0       0       0       0       0
  1592 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1593 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1594 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1595 ;;Total ram usage:        4 bytes
  1596 ;; Hardware stack levels used: 1
  1597 ;; Hardware stack levels required when called: 5
  1598 ;; This function calls:
  1599 ;;		Nothing
  1600 ;; This function is called by:
  1601 ;;		_EscribeLCD_n8
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           	psect	text7
  1606   000F28                     __ptext7:
  1607                           	callstack 0
  1608   000F28                     ___lbdiv:
  1609                           	callstack 24
  1610                           
  1611                           ;incstack = 0
  1612                           ;___lbdiv@dividend stored from wreg
  1613   000F28  6E1A               	movwf	___lbdiv@dividend^0,c
  1614   000F2A  6A1C               	clrf	___lbdiv@quotient^0,c
  1615   000F2C  5019               	movf	___lbdiv@divisor^0,w,c
  1616   000F2E  B4D8               	btfsc	status,2,c
  1617   000F30  D015               	goto	l1674
  1618   000F32  0E01               	movlw	1
  1619   000F34  6E1B               	movwf	___lbdiv@counter^0,c
  1620   000F36  D003               	goto	l1662
  1621   000F38                     l1658:
  1622   000F38  90D8               	bcf	status,0,c
  1623   000F3A  3619               	rlcf	___lbdiv@divisor^0,f,c
  1624   000F3C  2A1B               	incf	___lbdiv@counter^0,f,c
  1625   000F3E                     l1662:
  1626   000F3E  AE19               	btfss	___lbdiv@divisor^0,7,c
  1627   000F40  D7FB               	goto	l1658
  1628   000F42                     u630:
  1629   000F42  90D8               	bcf	status,0,c
  1630   000F44  361C               	rlcf	___lbdiv@quotient^0,f,c
  1631   000F46  5019               	movf	___lbdiv@divisor^0,w,c
  1632   000F48  5C1A               	subwf	___lbdiv@dividend^0,w,c
  1633   000F4A  A0D8               	btfss	status,0,c
  1634   000F4C  D003               	goto	l1670
  1635   000F4E  5019               	movf	___lbdiv@divisor^0,w,c
  1636   000F50  5E1A               	subwf	___lbdiv@dividend^0,f,c
  1637   000F52  801C               	bsf	___lbdiv@quotient^0,0,c
  1638   000F54                     l1670:
  1639   000F54  90D8               	bcf	status,0,c
  1640   000F56  3219               	rrcf	___lbdiv@divisor^0,f,c
  1641   000F58  2E1B               	decfsz	___lbdiv@counter^0,f,c
  1642   000F5A  D7F3               	goto	u630
  1643   000F5C                     l1674:
  1644   000F5C  501C               	movf	___lbdiv@quotient^0,w,c
  1645   000F5E  0012               	return		;funcret
  1646   000F60                     __end_of___lbdiv:
  1647                           	callstack 0
  1648                           
  1649 ;; *************** function _DireccionaLCD *****************
  1650 ;; Defined at:
  1651 ;;		line 244 in file "LibLCDXC8.h"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;  a               1    wreg     unsigned char 
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;  a               1   24[COMRAM] unsigned char 
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      void 
  1658 ;; Registers used:
  1659 ;;		wreg, status,2, status,0, cstack
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1665 ;;      Params:         0       0       0       0       0       0       0       0       0
  1666 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1667 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1668 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1669 ;;Total ram usage:        1 bytes
  1670 ;; Hardware stack levels used: 1
  1671 ;; Hardware stack levels required when called: 7
  1672 ;; This function calls:
  1673 ;;		_EnviaDato
  1674 ;;		_HabilitaLCD
  1675 ;;		_RetardoLCD
  1676 ;; This function is called by:
  1677 ;;		_main
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           	psect	text8
  1682   001066                     __ptext8:
  1683                           	callstack 0
  1684   001066                     _DireccionaLCD:
  1685                           	callstack 23
  1686                           
  1687                           ;incstack = 0
  1688                           ;DireccionaLCD@a stored from wreg
  1689   001066  6E19               	movwf	DireccionaLCD@a^0,c
  1690                           
  1691                           ;LibLCDXC8.h: 247: LATA3=0;
  1692   001068  9689               	bcf	3977,3,c	;volatile
  1693                           
  1694                           ;LibLCDXC8.h: 248: EnviaDato(a);
  1695   00106A  5019               	movf	DireccionaLCD@a^0,w,c
  1696   00106C  EC2B  F007         	call	_EnviaDato
  1697                           
  1698                           ;LibLCDXC8.h: 249: HabilitaLCD();
  1699   001070  EC53  F008         	call	_HabilitaLCD	;wreg free
  1700                           
  1701                           ;LibLCDXC8.h: 250: RetardoLCD(4);
  1702   001074  0E04               	movlw	4
  1703   001076  ECD5  F006         	call	_RetardoLCD
  1704   00107A  0012               	return		;funcret
  1705   00107C                     __end_of_DireccionaLCD:
  1706                           	callstack 0
  1707                           
  1708 ;; *************** function _EnviaDato *****************
  1709 ;; Defined at:
  1710 ;;		line 60 in file "LibLCDXC8.h"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;  a               1    wreg     unsigned char 
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;  a               1   23[COMRAM] unsigned char 
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  1    wreg      void 
  1717 ;; Registers used:
  1718 ;;		wreg, status,2, status,0, cstack
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1724 ;;      Params:         0       0       0       0       0       0       0       0       0
  1725 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1726 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1727 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1728 ;;Total ram usage:        2 bytes
  1729 ;; Hardware stack levels used: 1
  1730 ;; Hardware stack levels required when called: 6
  1731 ;; This function calls:
  1732 ;;		_HabilitaLCD
  1733 ;;		_RetardoLCD
  1734 ;; This function is called by:
  1735 ;;		_InicializaLCD
  1736 ;;		_BorraLCD
  1737 ;;		_EscribeLCD_c
  1738 ;;		_EscribeLCD_n8
  1739 ;;		_DireccionaLCD
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	text9
  1744   000E56                     __ptext9:
  1745                           	callstack 0
  1746   000E56                     _EnviaDato:
  1747                           	callstack 22
  1748                           
  1749                           ;incstack = 0
  1750                           ;EnviaDato@a stored from wreg
  1751   000E56  6E18               	movwf	EnviaDato@a^0,c
  1752                           
  1753                           ;LibLCDXC8.h: 61: if(interfaz==4){
  1754   000E58  0E04               	movlw	4
  1755   000E5A  182F               	xorwf	_interfaz^0,w,c
  1756   000E5C  A4D8               	btfss	status,2,c
  1757   000E5E  D01A               	goto	l1616
  1758                           
  1759                           ;LibLCDXC8.h: 62: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  1760   000E60  C018  F017         	movff	EnviaDato@a,??_EnviaDato
  1761   000E64  0EF0               	movlw	240
  1762   000E66  1617               	andwf	??_EnviaDato^0,f,c
  1763   000E68  508C               	movf	140,w,c	;volatile
  1764   000E6A  0B0F               	andlw	15
  1765   000E6C  1017               	iorwf	??_EnviaDato^0,w,c
  1766   000E6E  6E8C               	movwf	140,c	;volatile
  1767                           
  1768                           ;LibLCDXC8.h: 63: HabilitaLCD();
  1769   000E70  EC53  F008         	call	_HabilitaLCD	;wreg free
  1770                           
  1771                           ;LibLCDXC8.h: 64: RetardoLCD(1);
  1772   000E74  0E01               	movlw	1
  1773   000E76  ECD5  F006         	call	_RetardoLCD
  1774                           
  1775                           ;LibLCDXC8.h: 65: LATD=(LATD & 0b00001111) | (a<<4);
  1776   000E7A  C018  F017         	movff	EnviaDato@a,??_EnviaDato
  1777   000E7E  3A17               	swapf	??_EnviaDato^0,f,c
  1778   000E80  0EF0               	movlw	240
  1779   000E82  1617               	andwf	??_EnviaDato^0,f,c
  1780   000E84  508C               	movf	140,w,c	;volatile
  1781   000E86  0B0F               	andlw	15
  1782   000E88  1017               	iorwf	??_EnviaDato^0,w,c
  1783   000E8A  6E8C               	movwf	140,c	;volatile
  1784                           
  1785                           ;LibLCDXC8.h: 67: RetardoLCD(1);
  1786   000E8C  0E01               	movlw	1
  1787   000E8E  ECD5  F006         	call	_RetardoLCD
  1788                           
  1789                           ;LibLCDXC8.h: 68: }else if(interfaz==8){
  1790   000E92  0012               	return	
  1791   000E94                     l1616:
  1792   000E94  0E08               	movlw	8
  1793   000E96  182F               	xorwf	_interfaz^0,w,c
  1794   000E98  A4D8               	btfss	status,2,c
  1795   000E9A  0012               	return	
  1796                           
  1797                           ;LibLCDXC8.h: 69: LATD=a;
  1798   000E9C  C018  FF8C         	movff	EnviaDato@a,3980	;volatile
  1799   000EA0  0012               	return		;funcret
  1800   000EA2                     __end_of_EnviaDato:
  1801                           	callstack 0
  1802                           
  1803 ;; *************** function _RetardoLCD *****************
  1804 ;; Defined at:
  1805 ;;		line 284 in file "LibLCDXC8.h"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;  a               1    wreg     unsigned char 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;  a               1   21[COMRAM] unsigned char 
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg, status,2, status,0
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1819 ;;      Params:         0       0       0       0       0       0       0       0       0
  1820 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1821 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1822 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1823 ;;Total ram usage:        2 bytes
  1824 ;; Hardware stack levels used: 1
  1825 ;; Hardware stack levels required when called: 5
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_EnviaDato
  1830 ;;		_InicializaLCD
  1831 ;;		_BorraLCD
  1832 ;;		_EscribeLCD_c
  1833 ;;		_EscribeLCD_n8
  1834 ;;		_DireccionaLCD
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text10
  1839   000DAA                     __ptext10:
  1840                           	callstack 0
  1841   000DAA                     _RetardoLCD:
  1842                           	callstack 23
  1843                           
  1844                           ;incstack = 0
  1845                           ;RetardoLCD@a stored from wreg
  1846   000DAA  6E16               	movwf	RetardoLCD@a^0,c
  1847                           
  1848                           ;LibLCDXC8.h: 285: switch(a){
  1849   000DAC  D01B               	goto	l1582
  1850   000DAE                     l1572:
  1851   000DAE  0E05               	movlw	5
  1852   000DB0  6E15               	movwf	??_RetardoLCD^0,c
  1853   000DB2  0EDE               	movlw	222
  1854   000DB4                     u1177:
  1855   000DB4  2EE8               	decfsz	wreg,f,c
  1856   000DB6  D7FE               	bra	u1177
  1857   000DB8  2E15               	decfsz	??_RetardoLCD^0,f,c
  1858   000DBA  D7FC               	bra	u1177
  1859                           
  1860                           ;LibLCDXC8.h: 288: break;
  1861   000DBC  0012               	return	
  1862   000DBE                     l1574:
  1863   000DBE  0E53               	movlw	83
  1864   000DC0                     u1187:
  1865   000DC0  2EE8               	decfsz	wreg,f,c
  1866   000DC2  D7FE               	bra	u1187
  1867   000DC4  0000               	nop	
  1868                           
  1869                           ;LibLCDXC8.h: 290: _delay((unsigned long)((640)*(1000000/4000000.0)));
  1870   000DC6  0E35               	movlw	53
  1871   000DC8                     u1197:
  1872   000DC8  2EE8               	decfsz	wreg,f,c
  1873   000DCA  D7FE               	bra	u1197
  1874   000DCC  0000               	nop	
  1875                           
  1876                           ;LibLCDXC8.h: 292: break;
  1877   000DCE  0012               	return	
  1878   000DD0                     l1576:
  1879   000DD0  0E08               	movlw	8
  1880   000DD2                     u1207:
  1881   000DD2  2EE8               	decfsz	wreg,f,c
  1882   000DD4  D7FE               	bra	u1207
  1883   000DD6  0000               	nop	
  1884                           
  1885                           ;LibLCDXC8.h: 295: break;
  1886   000DD8  0012               	return	
  1887   000DDA                     l1578:
  1888   000DDA  0E03               	movlw	3
  1889   000DDC                     u1217:
  1890   000DDC  2EE8               	decfsz	wreg,f,c
  1891   000DDE  D7FE               	bra	u1217
  1892   000DE0  0000               	nop	
  1893                           
  1894                           ;LibLCDXC8.h: 298: break;
  1895   000DE2  0012               	return	
  1896   000DE4                     l1582:
  1897   000DE4  5016               	movf	RetardoLCD@a^0,w,c
  1898                           
  1899                           ; Switch size 1, requested type "simple"
  1900                           ; Number of cases is 4, Range of values is 1 to 4
  1901                           ; switch strategies available:
  1902                           ; Name         Instructions Cycles
  1903                           ; simple_byte           13     7 (average)
  1904                           ;	Chosen strategy is simple_byte
  1905   000DE6  0A01               	xorlw	1	; case 1
  1906   000DE8  B4D8               	btfsc	status,2,c
  1907   000DEA  D7E1               	goto	l1572
  1908   000DEC  0A03               	xorlw	3	; case 2
  1909   000DEE  B4D8               	btfsc	status,2,c
  1910   000DF0  D7E6               	goto	l1574
  1911   000DF2  0A01               	xorlw	1	; case 3
  1912   000DF4  B4D8               	btfsc	status,2,c
  1913   000DF6  D7EC               	goto	l1576
  1914   000DF8  0A07               	xorlw	7	; case 4
  1915   000DFA  A4D8               	btfss	status,2,c
  1916   000DFC  0012               	return	
  1917   000DFE  D7ED               	goto	l1578
  1918   000E00                     __end_of_RetardoLCD:
  1919                           	callstack 0
  1920                           
  1921 ;; *************** function _HabilitaLCD *****************
  1922 ;; Defined at:
  1923 ;;		line 106 in file "LibLCDXC8.h"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;		None
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;		None
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		wreg
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1937 ;;      Params:         0       0       0       0       0       0       0       0       0
  1938 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1939 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1940 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1941 ;;Total ram usage:        0 bytes
  1942 ;; Hardware stack levels used: 1
  1943 ;; Hardware stack levels required when called: 5
  1944 ;; This function calls:
  1945 ;;		Nothing
  1946 ;; This function is called by:
  1947 ;;		_EnviaDato
  1948 ;;		_InicializaLCD
  1949 ;;		_BorraLCD
  1950 ;;		_EscribeLCD_c
  1951 ;;		_EscribeLCD_n8
  1952 ;;		_DireccionaLCD
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           	psect	text11
  1957   0010A6                     __ptext11:
  1958                           	callstack 0
  1959   0010A6                     _HabilitaLCD:
  1960                           	callstack 23
  1961                           
  1962                           ;LibLCDXC8.h: 108: LATA5=1;
  1963                           
  1964                           ;incstack = 0
  1965   0010A6  8A89               	bsf	3977,5,c	;volatile
  1966                           
  1967                           ;LibLCDXC8.h: 109: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1968   0010A8  0E03               	movlw	3
  1969   0010AA                     u1227:
  1970   0010AA  2EE8               	decfsz	wreg,f,c
  1971   0010AC  D7FE               	bra	u1227
  1972   0010AE  0000               	nop	
  1973                           
  1974                           ;LibLCDXC8.h: 111: LATA5=0;
  1975   0010B0  9A89               	bcf	3977,5,c	;volatile
  1976   0010B2  0012               	return		;funcret
  1977   0010B4                     __end_of_HabilitaLCD:
  1978                           	callstack 0
  1979                           
  1980 ;; *************** function _ConfiguraLCD *****************
  1981 ;; Defined at:
  1982 ;;		line 56 in file "LibLCDXC8.h"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;  a               1    wreg     unsigned char 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  a               1   20[COMRAM] unsigned char 
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      void 
  1989 ;; Registers used:
  1990 ;;		wreg, status,2, status,0
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1996 ;;      Params:         0       0       0       0       0       0       0       0       0
  1997 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1998 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1999 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2000 ;;Total ram usage:        1 bytes
  2001 ;; Hardware stack levels used: 1
  2002 ;; Hardware stack levels required when called: 5
  2003 ;; This function calls:
  2004 ;;		Nothing
  2005 ;; This function is called by:
  2006 ;;		_main
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           	psect	text12
  2011   001038                     __ptext12:
  2012                           	callstack 0
  2013   001038                     _ConfiguraLCD:
  2014                           	callstack 25
  2015                           
  2016                           ;incstack = 0
  2017                           ;ConfiguraLCD@a stored from wreg
  2018   001038  6E15               	movwf	ConfiguraLCD@a^0,c
  2019                           
  2020                           ;LibLCDXC8.h: 57: if(a==4 | a ==8)
  2021   00103A  0E04               	movlw	4
  2022   00103C  1815               	xorwf	ConfiguraLCD@a^0,w,c
  2023   00103E  B4D8               	btfsc	status,2,c
  2024   001040  D004               	goto	u710
  2025   001042  0E08               	movlw	8
  2026   001044  1815               	xorwf	ConfiguraLCD@a^0,w,c
  2027   001046  A4D8               	btfss	status,2,c
  2028   001048  0012               	return	
  2029   00104A                     u710:
  2030                           
  2031                           ;LibLCDXC8.h: 58: interfaz=a;
  2032   00104A  C015  F02F         	movff	ConfiguraLCD@a,_interfaz
  2033   00104E  0012               	return		;funcret
  2034   001050                     __end_of_ConfiguraLCD:
  2035                           	callstack 0
  2036                           
  2037 ;; *************** function _ISR *****************
  2038 ;; Defined at:
  2039 ;;		line 116 in file "LAB4.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;		None
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;		None
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  1    wreg      void 
  2046 ;; Registers used:
  2047 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2053 ;;      Params:         0       0       0       0       0       0       0       0       0
  2054 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2055 ;;      Temps:          7       0       0       0       0       0       0       0       0
  2056 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2057 ;;Total ram usage:        7 bytes
  2058 ;; Hardware stack levels used: 1
  2059 ;; Hardware stack levels required when called: 4
  2060 ;; This function calls:
  2061 ;;		i2_EscribeLCD_n8
  2062 ;;		i2_MensajeLCD_Var
  2063 ;; This function is called by:
  2064 ;;		Interrupt level 2
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	intcode
  2069   000008                     __pintcode:
  2070                           	callstack 0
  2071   000008                     _ISR:
  2072                           	callstack 22
  2073                           
  2074                           ;incstack = 0
  2075   000008  8230               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2076   00000A  ED23  F004         	call	int_func,f	;refresh shadow registers
  2077                           
  2078                           	psect	intcode_body
  2079   000846                     __pintcode_body:
  2080                           	callstack 22
  2081   000846                     int_func:
  2082                           	callstack 22
  2083   000846  0006               	pop		; remove dummy address from shadow register refresh
  2084   000848  CFF3 F00F          	movff	prodl,??_ISR+1
  2085   00084C  CFF4 F010          	movff	prodh,??_ISR+2
  2086   000850  CFF6 F011          	movff	tblptrl,??_ISR+3
  2087   000854  CFF7 F012          	movff	tblptrh,??_ISR+4
  2088   000858  CFF8 F013          	movff	tblptru,??_ISR+5
  2089   00085C  CFF5 F014          	movff	tablat,??_ISR+6
  2090                           
  2091                           ;LAB4.c: 119: if(TMR0IF == 1){
  2092   000860  A4F2               	btfss	4082,2,c	;volatile
  2093   000862  D00A               	goto	i2u82_45
  2094                           
  2095                           ;LAB4.c: 121: TMR0 = 49911;
  2096   000864  0EC2               	movlw	194
  2097   000866  6ED7               	movwf	215,c	;volatile
  2098   000868  0EF7               	movlw	247
  2099   00086A  6ED6               	movwf	214,c	;volatile
  2100                           
  2101                           ;LAB4.c: 122: TMR0IF = 0;
  2102   00086C  94F2               	bcf	4082,2,c	;volatile
  2103                           
  2104                           ;LAB4.c: 123: LATA1 = LATA1^1;
  2105   00086E  B289               	btfsc	3977,1,c	;volatile
  2106   000870  D002               	goto	i2u81_40
  2107   000872  8289               	bsf	3977,1,c	;volatile
  2108   000874  D001               	goto	i2u82_45
  2109   000876                     i2u81_40:
  2110   000876  9289               	bcf	3977,1,c	;volatile
  2111   000878                     i2u82_45:
  2112                           
  2113                           ;LAB4.c: 126: };LAB4.c: 129: if(RBIF==1){
  2114   000878  A0F2               	btfss	4082,0,c	;volatile
  2115   00087A  D0CE               	goto	i2l256
  2116                           
  2117                           ;LAB4.c: 131: if(PORTB!=0b11110000){
  2118   00087C  0EF0               	movlw	240
  2119   00087E  1881               	xorwf	129,w,c	;volatile
  2120   000880  B4D8               	btfsc	status,2,c
  2121   000882  D0B8               	goto	i2l2114
  2122                           
  2123                           ;LAB4.c: 133: LATB=0b11111110;
  2124   000884  0EFE               	movlw	254
  2125   000886  6E8A               	movwf	138,c	;volatile
  2126                           
  2127                           ;LAB4.c: 134: if(RB4==0){
  2128   000888  B881               	btfsc	3969,4,c	;volatile
  2129   00088A  D002               	goto	i2l213
  2130   00088C  00FF               	reset		;# 
  2131                           
  2132                           ;LAB4.c: 136: }
  2133   00088E  D0B0               	goto	i2l2112
  2134   000890                     i2l213:
  2135                           
  2136                           ;LAB4.c: 137: else if(RB5==0){
  2137   000890  BA81               	btfsc	3969,5,c	;volatile
  2138   000892  D00B               	goto	i2l215
  2139                           
  2140                           ;LAB4.c: 138: input++;
  2141   000894  2A25               	incf	_input^0,f,c
  2142                           
  2143                           ;LAB4.c: 139: if(input <= 2){
  2144   000896  0E03               	movlw	3
  2145   000898  6025               	cpfslt	_input^0,c
  2146   00089A  D0AA               	goto	i2l2112
  2147                           
  2148                           ;LAB4.c: 140: Tecla = 0;
  2149   00089C  6A29               	clrf	_Tecla^0,c
  2150                           
  2151                           ;LAB4.c: 141: EscribeLCD_n8(Tecla,1);
  2152   00089E  0E01               	movlw	1
  2153   0008A0  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  2154   0008A2  5029               	movf	_Tecla^0,w,c
  2155   0008A4  EC14  F006         	call	i2_EscribeLCD_n8
  2156                           
  2157                           ;LAB4.c: 142: };LAB4.c: 145: }
  2158   0008A8  D0A3               	goto	i2l2112
  2159   0008AA                     i2l215:
  2160                           
  2161                           ;LAB4.c: 146: else if(RB6==0){
  2162   0008AA  BC81               	btfsc	3969,6,c	;volatile
  2163   0008AC  D005               	goto	i2l218
  2164                           
  2165                           ;LAB4.c: 147: MensajeLCD_Var(*FIN);
  2166   0008AE  C02A  F006         	movff	_FIN,i2MensajeLCD_Var@a
  2167   0008B2  ECF4  F007         	call	i2_MensajeLCD_Var	;wreg free
  2168                           
  2169                           ;LAB4.c: 148: }
  2170   0008B6  D09C               	goto	i2l2112
  2171   0008B8                     i2l218:
  2172                           
  2173                           ;LAB4.c: 149: else if(RB7==0){
  2174   0008B8  BE81               	btfsc	3969,7,c	;volatile
  2175   0008BA  D006               	goto	i2l2022
  2176                           
  2177                           ;LAB4.c: 151: LATA4 = LATA4^1;
  2178   0008BC  B889               	btfsc	3977,4,c	;volatile
  2179   0008BE  D002               	goto	i2u90_40
  2180   0008C0  8889               	bsf	3977,4,c	;volatile
  2181   0008C2  D096               	goto	i2l2112
  2182   0008C4                     i2u90_40:
  2183   0008C4  9889               	bcf	3977,4,c	;volatile
  2184                           
  2185                           ;LAB4.c: 152: }
  2186   0008C6  D094               	goto	i2l2112
  2187   0008C8                     i2l2022:
  2188                           
  2189                           ;LAB4.c: 153: else{;LAB4.c: 154: LATB=0b11111101;
  2190   0008C8  0EFD               	movlw	253
  2191   0008CA  6E8A               	movwf	138,c	;volatile
  2192                           
  2193                           ;LAB4.c: 155: if(RB4==0) {
  2194   0008CC  B881               	btfsc	3969,4,c	;volatile
  2195   0008CE  D00C               	goto	i2l222
  2196                           
  2197                           ;LAB4.c: 156: input++;
  2198   0008D0  2A25               	incf	_input^0,f,c
  2199                           
  2200                           ;LAB4.c: 157: if(input <= 2){
  2201   0008D2  0E03               	movlw	3
  2202   0008D4  6025               	cpfslt	_input^0,c
  2203   0008D6  D08C               	goto	i2l2112
  2204                           
  2205                           ;LAB4.c: 158: Tecla = 7;
  2206   0008D8  0E07               	movlw	7
  2207   0008DA  6E29               	movwf	_Tecla^0,c
  2208                           
  2209                           ;LAB4.c: 159: EscribeLCD_n8(Tecla,1);
  2210   0008DC  0E01               	movlw	1
  2211   0008DE  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  2212   0008E0  5029               	movf	_Tecla^0,w,c
  2213   0008E2  EC14  F006         	call	i2_EscribeLCD_n8
  2214   0008E6  D084               	goto	i2l2112
  2215   0008E8                     i2l222:
  2216                           
  2217                           ;LAB4.c: 163: else if(RB5==0){
  2218   0008E8  BA81               	btfsc	3969,5,c	;volatile
  2219   0008EA  D00C               	goto	i2l225
  2220                           
  2221                           ;LAB4.c: 164: input++;
  2222   0008EC  2A25               	incf	_input^0,f,c
  2223                           
  2224                           ;LAB4.c: 165: if(input <=2){
  2225   0008EE  0E03               	movlw	3
  2226   0008F0  6025               	cpfslt	_input^0,c
  2227   0008F2  D07E               	goto	i2l2112
  2228                           
  2229                           ;LAB4.c: 166: Tecla = 8;
  2230   0008F4  0E08               	movlw	8
  2231   0008F6  6E29               	movwf	_Tecla^0,c
  2232                           
  2233                           ;LAB4.c: 167: EscribeLCD_n8(Tecla,1);
  2234   0008F8  0E01               	movlw	1
  2235   0008FA  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  2236   0008FC  5029               	movf	_Tecla^0,w,c
  2237   0008FE  EC14  F006         	call	i2_EscribeLCD_n8
  2238   000902  D076               	goto	i2l2112
  2239   000904                     i2l225:
  2240                           
  2241                           ;LAB4.c: 171: else if(RB6==0){
  2242   000904  BC81               	btfsc	3969,6,c	;volatile
  2243   000906  D00C               	goto	i2l228
  2244                           
  2245                           ;LAB4.c: 172: input++;
  2246   000908  2A25               	incf	_input^0,f,c
  2247                           
  2248                           ;LAB4.c: 173: if(input <=2){
  2249   00090A  0E03               	movlw	3
  2250   00090C  6025               	cpfslt	_input^0,c
  2251   00090E  D070               	goto	i2l2112
  2252                           
  2253                           ;LAB4.c: 174: Tecla = 9;
  2254   000910  0E09               	movlw	9
  2255   000912  6E29               	movwf	_Tecla^0,c
  2256                           
  2257                           ;LAB4.c: 175: EscribeLCD_n8(Tecla,1);
  2258   000914  0E01               	movlw	1
  2259   000916  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  2260   000918  5029               	movf	_Tecla^0,w,c
  2261   00091A  EC14  F006         	call	i2_EscribeLCD_n8
  2262   00091E  D068               	goto	i2l2112
  2263   000920                     i2l228:
  2264                           
  2265                           ;LAB4.c: 178: else if(RB7==0) {
  2266   000920  BE81               	btfsc	3969,7,c	;volatile
  2267   000922  D005               	goto	i2l2052
  2268                           
  2269                           ;LAB4.c: 181: MensajeLCD_Var(*SUPR);
  2270   000924  C02B  F006         	movff	_SUPR,i2MensajeLCD_Var@a
  2271   000928  ECF4  F007         	call	i2_MensajeLCD_Var	;wreg free
  2272                           
  2273                           ;LAB4.c: 182: }
  2274   00092C  D061               	goto	i2l2112
  2275   00092E                     i2l2052:
  2276                           
  2277                           ;LAB4.c: 183: else{;LAB4.c: 184: LATB=0b11111011;
  2278   00092E  0EFB               	movlw	251
  2279   000930  6E8A               	movwf	138,c	;volatile
  2280                           
  2281                           ;LAB4.c: 185: if(RB4==0){
  2282   000932  B881               	btfsc	3969,4,c	;volatile
  2283   000934  D00C               	goto	i2l233
  2284                           
  2285                           ;LAB4.c: 186: input++;
  2286   000936  2A25               	incf	_input^0,f,c
  2287                           
  2288                           ;LAB4.c: 187: if(input <=2){
  2289   000938  0E03               	movlw	3
  2290   00093A  6025               	cpfslt	_input^0,c
  2291   00093C  D059               	goto	i2l2112
  2292                           
  2293                           ;LAB4.c: 188: Tecla = 4;
  2294   00093E  0E04               	movlw	4
  2295   000940  6E29               	movwf	_Tecla^0,c
  2296                           
  2297                           ;LAB4.c: 189: EscribeLCD_n8(Tecla,1);
  2298   000942  0E01               	movlw	1
  2299   000944  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  2300   000946  5029               	movf	_Tecla^0,w,c
  2301   000948  EC14  F006         	call	i2_EscribeLCD_n8
  2302   00094C  D051               	goto	i2l2112
  2303   00094E                     i2l233:
  2304                           
  2305                           ;LAB4.c: 192: else if(RB5==0){
  2306   00094E  BA81               	btfsc	3969,5,c	;volatile
  2307   000950  D00C               	goto	i2l236
  2308                           
  2309                           ;LAB4.c: 193: input++;
  2310   000952  2A25               	incf	_input^0,f,c
  2311                           
  2312                           ;LAB4.c: 194: if(input <=2){
  2313   000954  0E03               	movlw	3
  2314   000956  6025               	cpfslt	_input^0,c
  2315   000958  D04B               	goto	i2l2112
  2316                           
  2317                           ;LAB4.c: 195: Tecla = 5;
  2318   00095A  0E05               	movlw	5
  2319   00095C  6E29               	movwf	_Tecla^0,c
  2320                           
  2321                           ;LAB4.c: 196: EscribeLCD_n8(Tecla,1);
  2322   00095E  0E01               	movlw	1
  2323   000960  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  2324   000962  5029               	movf	_Tecla^0,w,c
  2325   000964  EC14  F006         	call	i2_EscribeLCD_n8
  2326   000968  D043               	goto	i2l2112
  2327   00096A                     i2l236:
  2328                           
  2329                           ;LAB4.c: 199: else if(RB6==0){
  2330   00096A  BC81               	btfsc	3969,6,c	;volatile
  2331   00096C  D00C               	goto	i2l239
  2332                           
  2333                           ;LAB4.c: 200: input++;
  2334   00096E  2A25               	incf	_input^0,f,c
  2335                           
  2336                           ;LAB4.c: 201: if(input <=2){
  2337   000970  0E03               	movlw	3
  2338   000972  6025               	cpfslt	_input^0,c
  2339   000974  D03D               	goto	i2l2112
  2340                           
  2341                           ;LAB4.c: 202: Tecla = 6;
  2342   000976  0E06               	movlw	6
  2343   000978  6E29               	movwf	_Tecla^0,c
  2344                           
  2345                           ;LAB4.c: 203: EscribeLCD_n8(Tecla,1);
  2346   00097A  0E01               	movlw	1
  2347   00097C  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  2348   00097E  5029               	movf	_Tecla^0,w,c
  2349   000980  EC14  F006         	call	i2_EscribeLCD_n8
  2350   000984  D035               	goto	i2l2112
  2351   000986                     i2l239:
  2352                           
  2353                           ;LAB4.c: 206: else if(RB7==0){
  2354   000986  BE81               	btfsc	3969,7,c	;volatile
  2355   000988  D005               	goto	i2l2082
  2356                           
  2357                           ;LAB4.c: 207: MensajeLCD_Var(*PARO);
  2358   00098A  C02C  F006         	movff	_PARO,i2MensajeLCD_Var@a
  2359   00098E  ECF4  F007         	call	i2_MensajeLCD_Var	;wreg free
  2360                           
  2361                           ;LAB4.c: 208: }
  2362   000992  D02E               	goto	i2l2112
  2363   000994                     i2l2082:
  2364                           
  2365                           ;LAB4.c: 209: else{;LAB4.c: 210: LATB=0b11110111;
  2366   000994  0EF7               	movlw	247
  2367   000996  6E8A               	movwf	138,c	;volatile
  2368                           
  2369                           ;LAB4.c: 211: if(RB4==0){
  2370   000998  B881               	btfsc	3969,4,c	;volatile
  2371   00099A  D00C               	goto	i2l244
  2372                           
  2373                           ;LAB4.c: 212: input++;
  2374   00099C  2A25               	incf	_input^0,f,c
  2375                           
  2376                           ;LAB4.c: 213: if(input <=2){
  2377   00099E  0E03               	movlw	3
  2378   0009A0  6025               	cpfslt	_input^0,c
  2379   0009A2  D026               	goto	i2l2112
  2380                           
  2381                           ;LAB4.c: 214: Tecla = 1;
  2382   0009A4  0E01               	movlw	1
  2383   0009A6  6E29               	movwf	_Tecla^0,c
  2384                           
  2385                           ;LAB4.c: 215: EscribeLCD_n8(Tecla,1);
  2386   0009A8  0E01               	movlw	1
  2387   0009AA  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  2388   0009AC  5029               	movf	_Tecla^0,w,c
  2389   0009AE  EC14  F006         	call	i2_EscribeLCD_n8
  2390   0009B2  D01E               	goto	i2l2112
  2391   0009B4                     i2l244:
  2392                           
  2393                           ;LAB4.c: 218: else if(RB5==0){
  2394   0009B4  BA81               	btfsc	3969,5,c	;volatile
  2395   0009B6  D00C               	goto	i2l247
  2396                           
  2397                           ;LAB4.c: 219: input++;
  2398   0009B8  2A25               	incf	_input^0,f,c
  2399                           
  2400                           ;LAB4.c: 220: if(input <=2){
  2401   0009BA  0E03               	movlw	3
  2402   0009BC  6025               	cpfslt	_input^0,c
  2403   0009BE  D018               	goto	i2l2112
  2404                           
  2405                           ;LAB4.c: 221: Tecla = 2;
  2406   0009C0  0E02               	movlw	2
  2407   0009C2  6E29               	movwf	_Tecla^0,c
  2408                           
  2409                           ;LAB4.c: 222: EscribeLCD_n8(Tecla,1);
  2410   0009C4  0E01               	movlw	1
  2411   0009C6  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  2412   0009C8  5029               	movf	_Tecla^0,w,c
  2413   0009CA  EC14  F006         	call	i2_EscribeLCD_n8
  2414   0009CE  D010               	goto	i2l2112
  2415   0009D0                     i2l247:
  2416                           
  2417                           ;LAB4.c: 225: else if(RB6==0){
  2418   0009D0  BC81               	btfsc	3969,6,c	;volatile
  2419   0009D2  D00C               	goto	i2l250
  2420                           
  2421                           ;LAB4.c: 226: input++;
  2422   0009D4  2A25               	incf	_input^0,f,c
  2423                           
  2424                           ;LAB4.c: 227: if(input <=2){
  2425   0009D6  0E03               	movlw	3
  2426   0009D8  6025               	cpfslt	_input^0,c
  2427   0009DA  D00A               	goto	i2l2112
  2428                           
  2429                           ;LAB4.c: 228: Tecla = 3;
  2430   0009DC  0E03               	movlw	3
  2431   0009DE  6E29               	movwf	_Tecla^0,c
  2432                           
  2433                           ;LAB4.c: 229: EscribeLCD_n8(Tecla,1);
  2434   0009E0  0E01               	movlw	1
  2435   0009E2  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  2436   0009E4  5029               	movf	_Tecla^0,w,c
  2437   0009E6  EC14  F006         	call	i2_EscribeLCD_n8
  2438   0009EA  D002               	goto	i2l2112
  2439   0009EC                     i2l250:
  2440                           
  2441                           ;LAB4.c: 232: else if(RB7==0){
  2442   0009EC  AE81               	btfss	3969,7,c	;volatile
  2443                           
  2444                           ;LAB4.c: 234: ok++;
  2445   0009EE  2A24               	incf	_ok^0,f,c
  2446   0009F0                     i2l2112:
  2447                           
  2448                           ;LAB4.c: 235: };LAB4.c: 236: };LAB4.c: 237: };LAB4.c: 238: };LAB4.c: 239: LATB=0b1111000
      +                          0;
  2449   0009F0  0EF0               	movlw	240
  2450   0009F2  6E8A               	movwf	138,c	;volatile
  2451   0009F4                     i2l2114:
  2452                           
  2453                           ;LAB4.c: 241: };LAB4.c: 243: if(ok == 0){
  2454   0009F4  5024               	movf	_ok^0,w,c
  2455   0009F6  A4D8               	btfss	status,2,c
  2456   0009F8  D007               	goto	i2l2120
  2457                           
  2458                           ;LAB4.c: 244: if(input == 1){
  2459   0009FA  0425               	decf	_input^0,w,c
  2460   0009FC  A4D8               	btfss	status,2,c
  2461   0009FE  D004               	goto	i2l2120
  2462                           
  2463                           ;LAB4.c: 246: objetivo = Tecla*10;
  2464   000A00  5029               	movf	_Tecla^0,w,c
  2465   000A02  0D0A               	mullw	10
  2466   000A04  CFF3 F028          	movff	prodl,_objetivo
  2467   000A08                     i2l2120:
  2468                           
  2469                           ;LAB4.c: 248: };LAB4.c: 249: };LAB4.c: 250: _delay((unsigned long)((250)*(1000000/4000.0
      +                          )));
  2470   000A08  0E52               	movlw	82
  2471   000A0A  6E0E               	movwf	??_ISR^0,c
  2472   000A0C  0E2A               	movlw	42
  2473   000A0E                     i2u123_47:
  2474   000A0E  2EE8               	decfsz	wreg,f,c
  2475   000A10  D7FE               	bra	i2u123_47
  2476   000A12  2E0E               	decfsz	??_ISR^0,f,c
  2477   000A14  D7FC               	bra	i2u123_47
  2478                           
  2479                           ;LAB4.c: 251: RBIF=0;
  2480   000A16  90F2               	bcf	4082,0,c	;volatile
  2481   000A18                     i2l256:
  2482   000A18  C014  FFF5         	movff	??_ISR+6,tablat
  2483   000A1C  C013  FFF8         	movff	??_ISR+5,tblptru
  2484   000A20  C012  FFF7         	movff	??_ISR+4,tblptrh
  2485   000A24  C011  FFF6         	movff	??_ISR+3,tblptrl
  2486   000A28  C010  FFF4         	movff	??_ISR+2,prodh
  2487   000A2C  C00F  FFF3         	movff	??_ISR+1,prodl
  2488   000A30  9230               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2489   000A32  0011               	retfie		f
  2490   000A34                     __end_of_ISR:
  2491                           	callstack 0
  2492                           
  2493 ;; *************** function i2_MensajeLCD_Var *****************
  2494 ;; Defined at:
  2495 ;;		line 233 in file "LibLCDXC8.h"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  a               1    5[COMRAM] PTR unsigned char 
  2498 ;;		 -> STR_10(11), STR_9(12), STR_8(11), STR_7(12), 
  2499 ;;		 -> STR_6(11), STR_5(4), STR_4(5), STR_3(5), 
  2500 ;;		 -> STR_1(17), 
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;		None
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      void 
  2505 ;; Registers used:
  2506 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2512 ;;      Params:         1       0       0       0       0       0       0       0       0
  2513 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2514 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2515 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2516 ;;Total ram usage:        1 bytes
  2517 ;; Hardware stack levels used: 1
  2518 ;; Hardware stack levels required when called: 3
  2519 ;; This function calls:
  2520 ;;		i2_EscribeLCD_c
  2521 ;; This function is called by:
  2522 ;;		_ISR
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           	psect	text14
  2527   000FE8                     __ptext14:
  2528                           	callstack 0
  2529   000FE8                     i2_MensajeLCD_Var:
  2530                           	callstack 22
  2531                           
  2532                           ;LibLCDXC8.h: 237: while (*a) {
  2533                           
  2534                           ;incstack = 0
  2535   000FE8  D009               	goto	i2l1900
  2536   000FEA                     i2l1896:
  2537                           
  2538                           ;LibLCDXC8.h: 238: EscribeLCD_c(*a);
  2539   000FEA  C006  FFF6         	movff	i2MensajeLCD_Var@a,tblptrl
  2540   000FEE                     	if	1	;There is more than 1 active tblptr byte
  2541   000FEE  0E08               	movlw	high __smallconst
  2542   000FF0  6EF7               	movwf	tblptrh,c
  2543   000FF2                     	endif
  2544   000FF2                     	if	0	;tblptru may be non-zero
  2545   000FF2                     	endif
  2546   000FF2                     	if	0	;tblptru may be non-zero
  2547   000FF2                     	endif
  2548   000FF2  0008               	tblrd		*
  2549   000FF4  50F5               	movf	tablat,w,c
  2550   000FF6  EC3E  F008         	call	i2_EscribeLCD_c
  2551                           
  2552                           ;LibLCDXC8.h: 239: a++;
  2553   000FFA  2A06               	incf	i2MensajeLCD_Var@a^0,f,c
  2554   000FFC                     i2l1900:
  2555   000FFC  C006  FFF6         	movff	i2MensajeLCD_Var@a,tblptrl
  2556   001000                     	if	1	;There is more than 1 active tblptr byte
  2557   001000  0E08               	movlw	high __smallconst
  2558   001002  6EF7               	movwf	tblptrh,c
  2559   001004                     	endif
  2560   001004                     	if	0	;tblptru may be non-zero
  2561   001004                     	endif
  2562   001004                     	if	0	;tblptru may be non-zero
  2563   001004                     	endif
  2564   001004  0008               	tblrd		*
  2565   001006  50F5               	movf	tablat,w,c
  2566   001008  0900               	iorlw	0
  2567   00100A  B4D8               	btfsc	status,2,c
  2568   00100C  0012               	return	
  2569   00100E  D7ED               	goto	i2l1896
  2570   001010                     __end_ofi2_MensajeLCD_Var:
  2571                           	callstack 0
  2572                           
  2573 ;; *************** function i2_EscribeLCD_c *****************
  2574 ;; Defined at:
  2575 ;;		line 137 in file "LibLCDXC8.h"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  a               1    wreg     unsigned char 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  a               1    4[COMRAM] unsigned char 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      void 
  2582 ;; Registers used:
  2583 ;;		wreg, status,2, status,0, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2589 ;;      Params:         0       0       0       0       0       0       0       0       0
  2590 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2591 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2592 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2593 ;;Total ram usage:        1 bytes
  2594 ;; Hardware stack levels used: 1
  2595 ;; Hardware stack levels required when called: 2
  2596 ;; This function calls:
  2597 ;;		i2_EnviaDato
  2598 ;;		i2_HabilitaLCD
  2599 ;;		i2_RetardoLCD
  2600 ;; This function is called by:
  2601 ;;		i2_MensajeLCD_Var
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text15
  2606   00107C                     __ptext15:
  2607                           	callstack 0
  2608   00107C                     i2_EscribeLCD_c:
  2609                           	callstack 22
  2610                           
  2611                           ;incstack = 0
  2612                           ;i2EscribeLCD_c@a stored from wreg
  2613   00107C  6E05               	movwf	i2EscribeLCD_c@a^0,c
  2614                           
  2615                           ;LibLCDXC8.h: 141: LATA3=1;
  2616   00107E  8689               	bsf	3977,3,c	;volatile
  2617                           
  2618                           ;LibLCDXC8.h: 142: EnviaDato(a);
  2619   001080  5005               	movf	i2EscribeLCD_c@a^0,w,c
  2620   001082  EC51  F007         	call	i2_EnviaDato
  2621                           
  2622                           ;LibLCDXC8.h: 143: HabilitaLCD();
  2623   001086  EC5A  F008         	call	i2_HabilitaLCD	;wreg free
  2624                           
  2625                           ;LibLCDXC8.h: 144: RetardoLCD(4);
  2626   00108A  0E04               	movlw	4
  2627   00108C  EC00  F007         	call	i2_RetardoLCD
  2628   001090  0012               	return		;funcret
  2629   001092                     __end_ofi2_EscribeLCD_c:
  2630                           	callstack 0
  2631                           
  2632 ;; *************** function i2_EscribeLCD_n8 *****************
  2633 ;; Defined at:
  2634 ;;		line 146 in file "LibLCDXC8.h"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;  a               1    wreg     unsigned char 
  2637 ;;  b               1    8[COMRAM] unsigned char 
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;  a               1   12[COMRAM] unsigned char 
  2640 ;;  unidad          1   11[COMRAM] unsigned char 
  2641 ;;  decena          1   10[COMRAM] unsigned char 
  2642 ;;  centena         1    9[COMRAM] unsigned char 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      void 
  2645 ;; Registers used:
  2646 ;;		wreg, status,2, status,0, cstack
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2652 ;;      Params:         1       0       0       0       0       0       0       0       0
  2653 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2654 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2655 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2656 ;;Total ram usage:        5 bytes
  2657 ;; Hardware stack levels used: 1
  2658 ;; Hardware stack levels required when called: 2
  2659 ;; This function calls:
  2660 ;;		i2_EnviaDato
  2661 ;;		i2_HabilitaLCD
  2662 ;;		i2_RetardoLCD
  2663 ;;		i2___lbdiv
  2664 ;;		i2___lbmod
  2665 ;; This function is called by:
  2666 ;;		_ISR
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           	psect	text16
  2671   000C28                     __ptext16:
  2672                           	callstack 0
  2673   000C28                     i2_EscribeLCD_n8:
  2674                           	callstack 23
  2675                           
  2676                           ;incstack = 0
  2677                           ;i2EscribeLCD_n8@a stored from wreg
  2678   000C28  6E0D               	movwf	i2EscribeLCD_n8@a^0,c
  2679                           
  2680                           ;LibLCDXC8.h: 151: unsigned char centena,decena,unidad;;LibLCDXC8.h: 152: LATA3=1;
  2681   000C2A  8689               	bsf	3977,3,c	;volatile
  2682                           
  2683                           ;LibLCDXC8.h: 153: switch(b){
  2684   000C2C  D065               	goto	i2l1892
  2685   000C2E                     i2l1860:
  2686   000C2E  0E0A               	movlw	10
  2687   000C30  6E01               	movwf	i2___lbmod@divisor^0,c
  2688   000C32  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  2689   000C34  EC08  F008         	call	i2___lbmod
  2690   000C38  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  2691                           
  2692                           ;LibLCDXC8.h: 155: EnviaDato(unidad+48);
  2693   000C3A  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  2694   000C3C  0F30               	addlw	48
  2695   000C3E  EC51  F007         	call	i2_EnviaDato
  2696                           
  2697                           ;LibLCDXC8.h: 156: HabilitaLCD();
  2698   000C42  EC5A  F008         	call	i2_HabilitaLCD	;wreg free
  2699                           
  2700                           ;LibLCDXC8.h: 157: RetardoLCD(4);
  2701   000C46  0E04               	movlw	4
  2702   000C48  EC00  F007         	call	i2_RetardoLCD
  2703                           
  2704                           ;LibLCDXC8.h: 158: break;
  2705   000C4C  0012               	return	
  2706   000C4E                     i2l1866:
  2707   000C4E  0E0A               	movlw	10
  2708   000C50  6E05               	movwf	i2___lbdiv@divisor^0,c
  2709   000C52  0E64               	movlw	100
  2710   000C54  6E01               	movwf	i2___lbmod@divisor^0,c
  2711   000C56  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  2712   000C58  EC08  F008         	call	i2___lbmod
  2713   000C5C  ECB0  F007         	call	i2___lbdiv
  2714   000C60  6E0B               	movwf	i2EscribeLCD_n8@decena^0,c
  2715                           
  2716                           ;LibLCDXC8.h: 160: unidad=a%10;
  2717   000C62  0E0A               	movlw	10
  2718   000C64  6E01               	movwf	i2___lbmod@divisor^0,c
  2719   000C66  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  2720   000C68  EC08  F008         	call	i2___lbmod
  2721   000C6C  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  2722                           
  2723                           ;LibLCDXC8.h: 161: EnviaDato(decena+48);
  2724   000C6E  500B               	movf	i2EscribeLCD_n8@decena^0,w,c
  2725   000C70  0F30               	addlw	48
  2726   000C72  EC51  F007         	call	i2_EnviaDato
  2727                           
  2728                           ;LibLCDXC8.h: 162: HabilitaLCD();
  2729   000C76  EC5A  F008         	call	i2_HabilitaLCD	;wreg free
  2730                           
  2731                           ;LibLCDXC8.h: 163: RetardoLCD(4);
  2732   000C7A  0E04               	movlw	4
  2733   000C7C  EC00  F007         	call	i2_RetardoLCD
  2734                           
  2735                           ;LibLCDXC8.h: 164: EnviaDato(unidad+48);
  2736   000C80  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  2737   000C82  0F30               	addlw	48
  2738   000C84  EC51  F007         	call	i2_EnviaDato
  2739                           
  2740                           ;LibLCDXC8.h: 165: HabilitaLCD();
  2741   000C88  EC5A  F008         	call	i2_HabilitaLCD	;wreg free
  2742                           
  2743                           ;LibLCDXC8.h: 166: RetardoLCD(4);
  2744   000C8C  0E04               	movlw	4
  2745   000C8E  EC00  F007         	call	i2_RetardoLCD
  2746                           
  2747                           ;LibLCDXC8.h: 167: break;
  2748   000C92  0012               	return	
  2749   000C94                     i2l1876:
  2750   000C94  0E64               	movlw	100
  2751   000C96  6E05               	movwf	i2___lbdiv@divisor^0,c
  2752   000C98  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  2753   000C9A  ECB0  F007         	call	i2___lbdiv
  2754   000C9E  6E0A               	movwf	i2EscribeLCD_n8@centena^0,c
  2755                           
  2756                           ;LibLCDXC8.h: 169: decena=(a%100)/10;
  2757   000CA0  0E0A               	movlw	10
  2758   000CA2  6E05               	movwf	i2___lbdiv@divisor^0,c
  2759   000CA4  0E64               	movlw	100
  2760   000CA6  6E01               	movwf	i2___lbmod@divisor^0,c
  2761   000CA8  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  2762   000CAA  EC08  F008         	call	i2___lbmod
  2763   000CAE  ECB0  F007         	call	i2___lbdiv
  2764   000CB2  6E0B               	movwf	i2EscribeLCD_n8@decena^0,c
  2765                           
  2766                           ;LibLCDXC8.h: 170: unidad=a%10;
  2767   000CB4  0E0A               	movlw	10
  2768   000CB6  6E01               	movwf	i2___lbmod@divisor^0,c
  2769   000CB8  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  2770   000CBA  EC08  F008         	call	i2___lbmod
  2771   000CBE  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  2772                           
  2773                           ;LibLCDXC8.h: 171: EnviaDato(centena+48);
  2774   000CC0  500A               	movf	i2EscribeLCD_n8@centena^0,w,c
  2775   000CC2  0F30               	addlw	48
  2776   000CC4  EC51  F007         	call	i2_EnviaDato
  2777                           
  2778                           ;LibLCDXC8.h: 172: HabilitaLCD();
  2779   000CC8  EC5A  F008         	call	i2_HabilitaLCD	;wreg free
  2780                           
  2781                           ;LibLCDXC8.h: 173: RetardoLCD(4);
  2782   000CCC  0E04               	movlw	4
  2783   000CCE  EC00  F007         	call	i2_RetardoLCD
  2784                           
  2785                           ;LibLCDXC8.h: 174: EnviaDato(decena+48);
  2786   000CD2  500B               	movf	i2EscribeLCD_n8@decena^0,w,c
  2787   000CD4  0F30               	addlw	48
  2788   000CD6  EC51  F007         	call	i2_EnviaDato
  2789                           
  2790                           ;LibLCDXC8.h: 175: HabilitaLCD();
  2791   000CDA  EC5A  F008         	call	i2_HabilitaLCD	;wreg free
  2792                           
  2793                           ;LibLCDXC8.h: 176: RetardoLCD(4);
  2794   000CDE  0E04               	movlw	4
  2795   000CE0  EC00  F007         	call	i2_RetardoLCD
  2796                           
  2797                           ;LibLCDXC8.h: 177: EnviaDato(unidad+48);
  2798   000CE4  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  2799   000CE6  0F30               	addlw	48
  2800   000CE8  EC51  F007         	call	i2_EnviaDato
  2801                           
  2802                           ;LibLCDXC8.h: 178: HabilitaLCD();
  2803   000CEC  EC5A  F008         	call	i2_HabilitaLCD	;wreg free
  2804                           
  2805                           ;LibLCDXC8.h: 179: RetardoLCD(4);
  2806   000CF0  0E04               	movlw	4
  2807   000CF2  EC00  F007         	call	i2_RetardoLCD
  2808                           
  2809                           ;LibLCDXC8.h: 180: break;
  2810   000CF6  0012               	return	
  2811   000CF8                     i2l1892:
  2812   000CF8  5009               	movf	i2EscribeLCD_n8@b^0,w,c
  2813                           
  2814                           ; Switch size 1, requested type "simple"
  2815                           ; Number of cases is 3, Range of values is 1 to 3
  2816                           ; switch strategies available:
  2817                           ; Name         Instructions Cycles
  2818                           ; simple_byte           10     6 (average)
  2819                           ;	Chosen strategy is simple_byte
  2820   000CFA  0A01               	xorlw	1	; case 1
  2821   000CFC  B4D8               	btfsc	status,2,c
  2822   000CFE  D797               	goto	i2l1860
  2823   000D00  0A03               	xorlw	3	; case 2
  2824   000D02  B4D8               	btfsc	status,2,c
  2825   000D04  D7A4               	goto	i2l1866
  2826   000D06  0A01               	xorlw	1	; case 3
  2827   000D08  A4D8               	btfss	status,2,c
  2828   000D0A  0012               	return	
  2829   000D0C  D7C3               	goto	i2l1876
  2830   000D0E                     __end_ofi2_EscribeLCD_n8:
  2831                           	callstack 0
  2832                           
  2833 ;; *************** function i2___lbmod *****************
  2834 ;; Defined at:
  2835 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbmod.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;  dividend        1    wreg     unsigned char 
  2838 ;;  divisor         1    0[COMRAM] unsigned char 
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;  dividend        1    1[COMRAM] unsigned char 
  2841 ;;  rem             1    3[COMRAM] unsigned char 
  2842 ;;  counter         1    2[COMRAM] unsigned char 
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  1    wreg      unsigned char 
  2845 ;; Registers used:
  2846 ;;		wreg, status,2, status,0
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2852 ;;      Params:         1       0       0       0       0       0       0       0       0
  2853 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2854 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2855 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2856 ;;Total ram usage:        4 bytes
  2857 ;; Hardware stack levels used: 1
  2858 ;; This function calls:
  2859 ;;		Nothing
  2860 ;; This function is called by:
  2861 ;;		i2_EscribeLCD_n8
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text17
  2866   001010                     __ptext17:
  2867                           	callstack 0
  2868   001010                     i2___lbmod:
  2869                           	callstack 24
  2870                           
  2871                           ;incstack = 0
  2872                           ;i2___lbmod@dividend stored from wreg
  2873   001010  6E02               	movwf	i2___lbmod@dividend^0,c
  2874   001012  0E08               	movlw	8
  2875   001014  6E03               	movwf	i2___lbmod@counter^0,c
  2876   001016  6A04               	clrf	i2___lbmod@rem^0,c
  2877   001018                     i2l1734:
  2878   001018  90D8               	bcf	status,0,c
  2879   00101A  3402               	rlcf	i2___lbmod@dividend^0,w,c
  2880   00101C  3404               	rlcf	i2___lbmod@rem^0,w,c
  2881   00101E  6E04               	movwf	i2___lbmod@rem^0,c
  2882   001020  90D8               	bcf	status,0,c
  2883   001022  3602               	rlcf	i2___lbmod@dividend^0,f,c
  2884   001024  5001               	movf	i2___lbmod@divisor^0,w,c
  2885   001026  5C04               	subwf	i2___lbmod@rem^0,w,c
  2886   001028  A0D8               	btfss	status,0,c
  2887   00102A  D002               	goto	i2l1742
  2888   00102C  5001               	movf	i2___lbmod@divisor^0,w,c
  2889   00102E  5E04               	subwf	i2___lbmod@rem^0,f,c
  2890   001030                     i2l1742:
  2891   001030  2E03               	decfsz	i2___lbmod@counter^0,f,c
  2892   001032  D7F2               	goto	i2l1734
  2893   001034  5004               	movf	i2___lbmod@rem^0,w,c
  2894   001036  0012               	return		;funcret
  2895   001038                     __end_ofi2___lbmod:
  2896                           	callstack 0
  2897                           
  2898 ;; *************** function i2___lbdiv *****************
  2899 ;; Defined at:
  2900 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbdiv.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  dividend        1    wreg     unsigned char 
  2903 ;;  divisor         1    4[COMRAM] unsigned char 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  dividend        1    5[COMRAM] unsigned char 
  2906 ;;  quotient        1    7[COMRAM] unsigned char 
  2907 ;;  counter         1    6[COMRAM] unsigned char 
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  1    wreg      unsigned char 
  2910 ;; Registers used:
  2911 ;;		wreg, status,2, status,0
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2917 ;;      Params:         1       0       0       0       0       0       0       0       0
  2918 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2919 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2920 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2921 ;;Total ram usage:        4 bytes
  2922 ;; Hardware stack levels used: 1
  2923 ;; This function calls:
  2924 ;;		Nothing
  2925 ;; This function is called by:
  2926 ;;		i2_EscribeLCD_n8
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           	psect	text18
  2931   000F60                     __ptext18:
  2932                           	callstack 0
  2933   000F60                     i2___lbdiv:
  2934                           	callstack 24
  2935                           
  2936                           ;incstack = 0
  2937                           ;i2___lbdiv@dividend stored from wreg
  2938   000F60  6E06               	movwf	i2___lbdiv@dividend^0,c
  2939   000F62  6A08               	clrf	i2___lbdiv@quotient^0,c
  2940   000F64  5005               	movf	i2___lbdiv@divisor^0,w,c
  2941   000F66  B4D8               	btfsc	status,2,c
  2942   000F68  D015               	goto	i2l1726
  2943   000F6A  0E01               	movlw	1
  2944   000F6C  6E07               	movwf	i2___lbdiv@counter^0,c
  2945   000F6E  D003               	goto	i2l1714
  2946   000F70                     i2l1710:
  2947   000F70  90D8               	bcf	status,0,c
  2948   000F72  3605               	rlcf	i2___lbdiv@divisor^0,f,c
  2949   000F74  2A07               	incf	i2___lbdiv@counter^0,f,c
  2950   000F76                     i2l1714:
  2951   000F76  AE05               	btfss	i2___lbdiv@divisor^0,7,c
  2952   000F78  D7FB               	goto	i2l1710
  2953   000F7A                     i2u67_40:
  2954   000F7A  90D8               	bcf	status,0,c
  2955   000F7C  3608               	rlcf	i2___lbdiv@quotient^0,f,c
  2956   000F7E  5005               	movf	i2___lbdiv@divisor^0,w,c
  2957   000F80  5C06               	subwf	i2___lbdiv@dividend^0,w,c
  2958   000F82  A0D8               	btfss	status,0,c
  2959   000F84  D003               	goto	i2l1722
  2960   000F86  5005               	movf	i2___lbdiv@divisor^0,w,c
  2961   000F88  5E06               	subwf	i2___lbdiv@dividend^0,f,c
  2962   000F8A  8008               	bsf	i2___lbdiv@quotient^0,0,c
  2963   000F8C                     i2l1722:
  2964   000F8C  90D8               	bcf	status,0,c
  2965   000F8E  3205               	rrcf	i2___lbdiv@divisor^0,f,c
  2966   000F90  2E07               	decfsz	i2___lbdiv@counter^0,f,c
  2967   000F92  D7F3               	goto	i2u67_40
  2968   000F94                     i2l1726:
  2969   000F94  5008               	movf	i2___lbdiv@quotient^0,w,c
  2970   000F96  0012               	return		;funcret
  2971   000F98                     __end_ofi2___lbdiv:
  2972                           	callstack 0
  2973                           
  2974 ;; *************** function i2_EnviaDato *****************
  2975 ;; Defined at:
  2976 ;;		line 60 in file "LibLCDXC8.h"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;  a               1    wreg     unsigned char 
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;  a               1    3[COMRAM] unsigned char 
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  1    wreg      void 
  2983 ;; Registers used:
  2984 ;;		wreg, status,2, status,0, cstack
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2990 ;;      Params:         0       0       0       0       0       0       0       0       0
  2991 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2992 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2993 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2994 ;;Total ram usage:        2 bytes
  2995 ;; Hardware stack levels used: 1
  2996 ;; Hardware stack levels required when called: 1
  2997 ;; This function calls:
  2998 ;;		i2_HabilitaLCD
  2999 ;;		i2_RetardoLCD
  3000 ;; This function is called by:
  3001 ;;		i2_EscribeLCD_c
  3002 ;;		i2_EscribeLCD_n8
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           	psect	text19
  3007   000EA2                     __ptext19:
  3008                           	callstack 0
  3009   000EA2                     i2_EnviaDato:
  3010                           	callstack 22
  3011                           
  3012                           ;incstack = 0
  3013                           ;i2EnviaDato@a stored from wreg
  3014   000EA2  6E04               	movwf	i2EnviaDato@a^0,c
  3015                           
  3016                           ;LibLCDXC8.h: 61: if(interfaz==4){
  3017   000EA4  0E04               	movlw	4
  3018   000EA6  182F               	xorwf	_interfaz^0,w,c
  3019   000EA8  A4D8               	btfss	status,2,c
  3020   000EAA  D01A               	goto	i2l1632
  3021                           
  3022                           ;LibLCDXC8.h: 62: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3023   000EAC  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3024   000EB0  0EF0               	movlw	240
  3025   000EB2  1603               	andwf	??i2_EnviaDato^0,f,c
  3026   000EB4  508C               	movf	140,w,c	;volatile
  3027   000EB6  0B0F               	andlw	15
  3028   000EB8  1003               	iorwf	??i2_EnviaDato^0,w,c
  3029   000EBA  6E8C               	movwf	140,c	;volatile
  3030                           
  3031                           ;LibLCDXC8.h: 63: HabilitaLCD();
  3032   000EBC  EC5A  F008         	call	i2_HabilitaLCD	;wreg free
  3033                           
  3034                           ;LibLCDXC8.h: 64: RetardoLCD(1);
  3035   000EC0  0E01               	movlw	1
  3036   000EC2  EC00  F007         	call	i2_RetardoLCD
  3037                           
  3038                           ;LibLCDXC8.h: 65: LATD=(LATD & 0b00001111) | (a<<4);
  3039   000EC6  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3040   000ECA  3A03               	swapf	??i2_EnviaDato^0,f,c
  3041   000ECC  0EF0               	movlw	240
  3042   000ECE  1603               	andwf	??i2_EnviaDato^0,f,c
  3043   000ED0  508C               	movf	140,w,c	;volatile
  3044   000ED2  0B0F               	andlw	15
  3045   000ED4  1003               	iorwf	??i2_EnviaDato^0,w,c
  3046   000ED6  6E8C               	movwf	140,c	;volatile
  3047                           
  3048                           ;LibLCDXC8.h: 67: RetardoLCD(1);
  3049   000ED8  0E01               	movlw	1
  3050   000EDA  EC00  F007         	call	i2_RetardoLCD
  3051                           
  3052                           ;LibLCDXC8.h: 68: }else if(interfaz==8){
  3053   000EDE  0012               	return	
  3054   000EE0                     i2l1632:
  3055   000EE0  0E08               	movlw	8
  3056   000EE2  182F               	xorwf	_interfaz^0,w,c
  3057   000EE4  A4D8               	btfss	status,2,c
  3058   000EE6  0012               	return	
  3059                           
  3060                           ;LibLCDXC8.h: 69: LATD=a;
  3061   000EE8  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  3062   000EEC  0012               	return		;funcret
  3063   000EEE                     __end_ofi2_EnviaDato:
  3064                           	callstack 0
  3065                           
  3066 ;; *************** function i2_RetardoLCD *****************
  3067 ;; Defined at:
  3068 ;;		line 284 in file "LibLCDXC8.h"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  a               1    wreg     unsigned char 
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;  a               1    1[COMRAM] unsigned char 
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg, status,2, status,0
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3082 ;;      Params:         0       0       0       0       0       0       0       0       0
  3083 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3084 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3085 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3086 ;;Total ram usage:        2 bytes
  3087 ;; Hardware stack levels used: 1
  3088 ;; This function calls:
  3089 ;;		Nothing
  3090 ;; This function is called by:
  3091 ;;		i2_EnviaDato
  3092 ;;		i2_EscribeLCD_c
  3093 ;;		i2_EscribeLCD_n8
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text20
  3098   000E00                     __ptext20:
  3099                           	callstack 0
  3100   000E00                     i2_RetardoLCD:
  3101                           	callstack 23
  3102                           
  3103                           ;incstack = 0
  3104                           ;i2RetardoLCD@a stored from wreg
  3105   000E00  6E02               	movwf	i2RetardoLCD@a^0,c
  3106                           
  3107                           ;LibLCDXC8.h: 285: switch(a){
  3108   000E02  D01B               	goto	i2l1602
  3109   000E04                     i2l1592:
  3110   000E04  0E05               	movlw	5
  3111   000E06  6E01               	movwf	??i2_RetardoLCD^0,c
  3112   000E08  0EDE               	movlw	222
  3113   000E0A                     i2u124_47:
  3114   000E0A  2EE8               	decfsz	wreg,f,c
  3115   000E0C  D7FE               	bra	i2u124_47
  3116   000E0E  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  3117   000E10  D7FC               	bra	i2u124_47
  3118                           
  3119                           ;LibLCDXC8.h: 288: break;
  3120   000E12  0012               	return	
  3121   000E14                     i2l1594:
  3122   000E14  0E53               	movlw	83
  3123   000E16                     i2u125_47:
  3124   000E16  2EE8               	decfsz	wreg,f,c
  3125   000E18  D7FE               	bra	i2u125_47
  3126   000E1A  0000               	nop	
  3127                           
  3128                           ;LibLCDXC8.h: 290: _delay((unsigned long)((640)*(1000000/4000000.0)));
  3129   000E1C  0E35               	movlw	53
  3130   000E1E                     i2u126_47:
  3131   000E1E  2EE8               	decfsz	wreg,f,c
  3132   000E20  D7FE               	bra	i2u126_47
  3133   000E22  0000               	nop	
  3134                           
  3135                           ;LibLCDXC8.h: 292: break;
  3136   000E24  0012               	return	
  3137   000E26                     i2l1596:
  3138   000E26  0E08               	movlw	8
  3139   000E28                     i2u127_47:
  3140   000E28  2EE8               	decfsz	wreg,f,c
  3141   000E2A  D7FE               	bra	i2u127_47
  3142   000E2C  0000               	nop	
  3143                           
  3144                           ;LibLCDXC8.h: 295: break;
  3145   000E2E  0012               	return	
  3146   000E30                     i2l1598:
  3147   000E30  0E03               	movlw	3
  3148   000E32                     i2u128_47:
  3149   000E32  2EE8               	decfsz	wreg,f,c
  3150   000E34  D7FE               	bra	i2u128_47
  3151   000E36  0000               	nop	
  3152                           
  3153                           ;LibLCDXC8.h: 298: break;
  3154   000E38  0012               	return	
  3155   000E3A                     i2l1602:
  3156   000E3A  5002               	movf	i2RetardoLCD@a^0,w,c
  3157                           
  3158                           ; Switch size 1, requested type "simple"
  3159                           ; Number of cases is 4, Range of values is 1 to 4
  3160                           ; switch strategies available:
  3161                           ; Name         Instructions Cycles
  3162                           ; simple_byte           13     7 (average)
  3163                           ;	Chosen strategy is simple_byte
  3164   000E3C  0A01               	xorlw	1	; case 1
  3165   000E3E  B4D8               	btfsc	status,2,c
  3166   000E40  D7E1               	goto	i2l1592
  3167   000E42  0A03               	xorlw	3	; case 2
  3168   000E44  B4D8               	btfsc	status,2,c
  3169   000E46  D7E6               	goto	i2l1594
  3170   000E48  0A01               	xorlw	1	; case 3
  3171   000E4A  B4D8               	btfsc	status,2,c
  3172   000E4C  D7EC               	goto	i2l1596
  3173   000E4E  0A07               	xorlw	7	; case 4
  3174   000E50  A4D8               	btfss	status,2,c
  3175   000E52  0012               	return	
  3176   000E54  D7ED               	goto	i2l1598
  3177   000E56                     __end_ofi2_RetardoLCD:
  3178                           	callstack 0
  3179                           
  3180 ;; *************** function i2_HabilitaLCD *****************
  3181 ;; Defined at:
  3182 ;;		line 106 in file "LibLCDXC8.h"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;		None
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;		None
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  1    wreg      void 
  3189 ;; Registers used:
  3190 ;;		wreg
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3196 ;;      Params:         0       0       0       0       0       0       0       0       0
  3197 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3198 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3199 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3200 ;;Total ram usage:        0 bytes
  3201 ;; Hardware stack levels used: 1
  3202 ;; This function calls:
  3203 ;;		Nothing
  3204 ;; This function is called by:
  3205 ;;		i2_EnviaDato
  3206 ;;		i2_EscribeLCD_c
  3207 ;;		i2_EscribeLCD_n8
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text21
  3212   0010B4                     __ptext21:
  3213                           	callstack 0
  3214   0010B4                     i2_HabilitaLCD:
  3215                           	callstack 23
  3216                           
  3217                           ;LibLCDXC8.h: 108: LATA5=1;
  3218                           
  3219                           ;incstack = 0
  3220   0010B4  8A89               	bsf	3977,5,c	;volatile
  3221                           
  3222                           ;LibLCDXC8.h: 109: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3223   0010B6  0E03               	movlw	3
  3224   0010B8                     i2u129_47:
  3225   0010B8  2EE8               	decfsz	wreg,f,c
  3226   0010BA  D7FE               	bra	i2u129_47
  3227   0010BC  0000               	nop	
  3228                           
  3229                           ;LibLCDXC8.h: 111: LATA5=0;
  3230   0010BE  9A89               	bcf	3977,5,c	;volatile
  3231   0010C0  0012               	return		;funcret
  3232   0010C2                     __end_ofi2_HabilitaLCD:
  3233                           	callstack 0
  3234                           
  3235                           	psect	rparam
  3236   000001                     ___rparam_used  equ	1
  3237   000000                     ___param_bank   equ	0
  3238   000000                     __Lparam        equ	__Lrparam
  3239   000000                     __Hparam        equ	__Hrparam
  3240                           
  3241                           	psect	temp
  3242   000030                     btemp:
  3243                           	callstack 0
  3244   000030                     	ds	1
  3245   000030                     int$flags       set	btemp
  3246   000031                     wtemp8          set	btemp+1
  3247   000031                     ttemp5          set	btemp+1
  3248   000034                     ttemp6          set	btemp+4
  3249   000038                     ttemp7          set	btemp+8
  3250                           
  3251                           	psect	idloc
  3252                           
  3253                           ;Config register IDLOC0 @ 0x200000
  3254                           ;	unspecified, using default values
  3255   200000                     	org	2097152
  3256   200000  FF                 	db	255
  3257                           
  3258                           ;Config register IDLOC1 @ 0x200001
  3259                           ;	unspecified, using default values
  3260   200001                     	org	2097153
  3261   200001  FF                 	db	255
  3262                           
  3263                           ;Config register IDLOC2 @ 0x200002
  3264                           ;	unspecified, using default values
  3265   200002                     	org	2097154
  3266   200002  FF                 	db	255
  3267                           
  3268                           ;Config register IDLOC3 @ 0x200003
  3269                           ;	unspecified, using default values
  3270   200003                     	org	2097155
  3271   200003  FF                 	db	255
  3272                           
  3273                           ;Config register IDLOC4 @ 0x200004
  3274                           ;	unspecified, using default values
  3275   200004                     	org	2097156
  3276   200004  FF                 	db	255
  3277                           
  3278                           ;Config register IDLOC5 @ 0x200005
  3279                           ;	unspecified, using default values
  3280   200005                     	org	2097157
  3281   200005  FF                 	db	255
  3282                           
  3283                           ;Config register IDLOC6 @ 0x200006
  3284                           ;	unspecified, using default values
  3285   200006                     	org	2097158
  3286   200006  FF                 	db	255
  3287                           
  3288                           ;Config register IDLOC7 @ 0x200007
  3289                           ;	unspecified, using default values
  3290   200007                     	org	2097159
  3291   200007  FF                 	db	255
  3292                           
  3293                           	psect	config
  3294                           
  3295                           ;Config register CONFIG1L @ 0x300000
  3296                           ;	unspecified, using default values
  3297                           ;	PLL Prescaler Selection bits
  3298                           ;	PLLDIV = 0x0, unprogrammed default
  3299                           ;	System Clock Postscaler Selection bits
  3300                           ;	CPUDIV = 0x0, unprogrammed default
  3301                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3302                           ;	USBDIV = 0x0, unprogrammed default
  3303   300000                     	org	3145728
  3304   300000  00                 	db	0
  3305                           
  3306                           ;Config register CONFIG1H @ 0x300001
  3307                           ;	Oscillator Selection bits
  3308                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3309                           ;	Fail-Safe Clock Monitor Enable bit
  3310                           ;	FCMEN = 0x0, unprogrammed default
  3311                           ;	Internal/External Oscillator Switchover bit
  3312                           ;	IESO = 0x0, unprogrammed default
  3313   300001                     	org	3145729
  3314   300001  09                 	db	9
  3315                           
  3316                           ;Config register CONFIG2L @ 0x300002
  3317                           ;	unspecified, using default values
  3318                           ;	Power-up Timer Enable bit
  3319                           ;	PWRT = 0x1, unprogrammed default
  3320                           ;	Brown-out Reset Enable bits
  3321                           ;	BOR = 0x3, unprogrammed default
  3322                           ;	Brown-out Reset Voltage bits
  3323                           ;	BORV = 0x3, unprogrammed default
  3324                           ;	USB Voltage Regulator Enable bit
  3325                           ;	VREGEN = 0x0, unprogrammed default
  3326   300002                     	org	3145730
  3327   300002  1F                 	db	31
  3328                           
  3329                           ;Config register CONFIG2H @ 0x300003
  3330                           ;	Watchdog Timer Enable bit
  3331                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3332                           ;	Watchdog Timer Postscale Select bits
  3333                           ;	WDTPS = 0xF, unprogrammed default
  3334   300003                     	org	3145731
  3335   300003  1E                 	db	30
  3336                           
  3337                           ; Padding undefined space
  3338   300004                     	org	3145732
  3339   300004  FF                 	db	255
  3340                           
  3341                           ;Config register CONFIG3H @ 0x300005
  3342                           ;	CCP2 MUX bit
  3343                           ;	CCP2MX = 0x1, unprogrammed default
  3344                           ;	PORTB A/D Enable bit
  3345                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3346                           ;	Low-Power Timer 1 Oscillator Enable bit
  3347                           ;	LPT1OSC = 0x0, unprogrammed default
  3348                           ;	MCLR Pin Enable bit
  3349                           ;	MCLRE = 0x1, unprogrammed default
  3350   300005                     	org	3145733
  3351   300005  81                 	db	129
  3352                           
  3353                           ;Config register CONFIG4L @ 0x300006
  3354                           ;	Stack Full/Underflow Reset Enable bit
  3355                           ;	STVREN = 0x1, unprogrammed default
  3356                           ;	Single-Supply ICSP Enable bit
  3357                           ;	LVP = OFF, Single-Supply ICSP disabled
  3358                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3359                           ;	ICPRT = 0x0, unprogrammed default
  3360                           ;	Extended Instruction Set Enable bit
  3361                           ;	XINST = 0x0, unprogrammed default
  3362                           ;	Background Debugger Enable bit
  3363                           ;	DEBUG = 0x1, unprogrammed default
  3364   300006                     	org	3145734
  3365   300006  81                 	db	129
  3366                           
  3367                           ; Padding undefined space
  3368   300007                     	org	3145735
  3369   300007  FF                 	db	255
  3370                           
  3371                           ;Config register CONFIG5L @ 0x300008
  3372                           ;	unspecified, using default values
  3373                           ;	Code Protection bit
  3374                           ;	CP0 = 0x1, unprogrammed default
  3375                           ;	Code Protection bit
  3376                           ;	CP1 = 0x1, unprogrammed default
  3377                           ;	Code Protection bit
  3378                           ;	CP2 = 0x1, unprogrammed default
  3379                           ;	Code Protection bit
  3380                           ;	CP3 = 0x1, unprogrammed default
  3381   300008                     	org	3145736
  3382   300008  0F                 	db	15
  3383                           
  3384                           ;Config register CONFIG5H @ 0x300009
  3385                           ;	unspecified, using default values
  3386                           ;	Boot Block Code Protection bit
  3387                           ;	CPB = 0x1, unprogrammed default
  3388                           ;	Data EEPROM Code Protection bit
  3389                           ;	CPD = 0x1, unprogrammed default
  3390   300009                     	org	3145737
  3391   300009  C0                 	db	192
  3392                           
  3393                           ;Config register CONFIG6L @ 0x30000A
  3394                           ;	unspecified, using default values
  3395                           ;	Write Protection bit
  3396                           ;	WRT0 = 0x1, unprogrammed default
  3397                           ;	Write Protection bit
  3398                           ;	WRT1 = 0x1, unprogrammed default
  3399                           ;	Write Protection bit
  3400                           ;	WRT2 = 0x1, unprogrammed default
  3401                           ;	Write Protection bit
  3402                           ;	WRT3 = 0x1, unprogrammed default
  3403   30000A                     	org	3145738
  3404   30000A  0F                 	db	15
  3405                           
  3406                           ;Config register CONFIG6H @ 0x30000B
  3407                           ;	unspecified, using default values
  3408                           ;	Configuration Register Write Protection bit
  3409                           ;	WRTC = 0x1, unprogrammed default
  3410                           ;	Boot Block Write Protection bit
  3411                           ;	WRTB = 0x1, unprogrammed default
  3412                           ;	Data EEPROM Write Protection bit
  3413                           ;	WRTD = 0x1, unprogrammed default
  3414   30000B                     	org	3145739
  3415   30000B  E0                 	db	224
  3416                           
  3417                           ;Config register CONFIG7L @ 0x30000C
  3418                           ;	unspecified, using default values
  3419                           ;	Table Read Protection bit
  3420                           ;	EBTR0 = 0x1, unprogrammed default
  3421                           ;	Table Read Protection bit
  3422                           ;	EBTR1 = 0x1, unprogrammed default
  3423                           ;	Table Read Protection bit
  3424                           ;	EBTR2 = 0x1, unprogrammed default
  3425                           ;	Table Read Protection bit
  3426                           ;	EBTR3 = 0x1, unprogrammed default
  3427   30000C                     	org	3145740
  3428   30000C  0F                 	db	15
  3429                           
  3430                           ;Config register CONFIG7H @ 0x30000D
  3431                           ;	unspecified, using default values
  3432                           ;	Boot Block Table Read Protection bit
  3433                           ;	EBTRB = 0x1, unprogrammed default
  3434   30000D                     	org	3145741
  3435   30000D  40                 	db	64
  3436                           tosu	equ	0xFFF
  3437                           tosh	equ	0xFFE
  3438                           tosl	equ	0xFFD
  3439                           stkptr	equ	0xFFC
  3440                           pclatu	equ	0xFFB
  3441                           pclath	equ	0xFFA
  3442                           pcl	equ	0xFF9
  3443                           tblptru	equ	0xFF8
  3444                           tblptrh	equ	0xFF7
  3445                           tblptrl	equ	0xFF6
  3446                           tablat	equ	0xFF5
  3447                           prodh	equ	0xFF4
  3448                           prodl	equ	0xFF3
  3449                           indf0	equ	0xFEF
  3450                           postinc0	equ	0xFEE
  3451                           postdec0	equ	0xFED
  3452                           preinc0	equ	0xFEC
  3453                           plusw0	equ	0xFEB
  3454                           fsr0h	equ	0xFEA
  3455                           fsr0l	equ	0xFE9
  3456                           wreg	equ	0xFE8
  3457                           indf1	equ	0xFE7
  3458                           postinc1	equ	0xFE6
  3459                           postdec1	equ	0xFE5
  3460                           preinc1	equ	0xFE4
  3461                           plusw1	equ	0xFE3
  3462                           fsr1h	equ	0xFE2
  3463                           fsr1l	equ	0xFE1
  3464                           bsr	equ	0xFE0
  3465                           indf2	equ	0xFDF
  3466                           postinc2	equ	0xFDE
  3467                           postdec2	equ	0xFDD
  3468                           preinc2	equ	0xFDC
  3469                           plusw2	equ	0xFDB
  3470                           fsr2h	equ	0xFDA
  3471                           fsr2l	equ	0xFD9
  3472                           status	equ	0xFD8

Data Sizes:
    Strings     68
    Constant    0
    Data        6
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      47
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    aux	PTR unsigned char [1] size(1) Largest target is 17
		 -> STR_1(CODE[17]), 

    FIN	PTR unsigned char [1] size(1) Largest target is 4
		 -> STR_5(CODE[4]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_10(CODE[11]), STR_3(CODE[5]), STR_4(CODE[5]), 
		 -> STR_5(CODE[4]), STR_6(CODE[11]), STR_7(CODE[12]), STR_8(CODE[11]), 
		 -> STR_9(CODE[12]), 

    OK	PTR unsigned char [1] size(1) Largest target is 3
		 -> STR_2(CODE[3]), 

    PARO	PTR unsigned char [1] size(1) Largest target is 5
		 -> STR_3(CODE[5]), 

    SUPR	PTR unsigned char [1] size(1) Largest target is 5
		 -> STR_4(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_EscribeLCD_n8
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EscribeLCD_n8->___lbdiv
    ___lbdiv->___lbmod
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_EscribeLCD_n8
    i2_MensajeLCD_Var->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_EscribeLCD_n8->i2___lbdiv
    i2___lbdiv->i2___lbmod
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1749
                                             33 COMRAM     2     2      0
                           _BorraLCD
                       _ConfiguraLCD
                      _DireccionaLCD
                      _EscribeLCD_n8
                      _InicializaLCD
                     _MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       1     0      1     225
                                             25 COMRAM     1     0      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0     174
                                             24 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     290
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     145
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _EscribeLCD_n8                                        5     4      1     828
                                             28 COMRAM     5     4      1
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              4     3      1     172
                                             20 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     173
                                             24 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0     174
                                             24 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0     116
                                             22 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      29
                                             20 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      87
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  7     7      0    1056
                                             13 COMRAM     7     7      0
                    i2_EscribeLCD_n8
                   i2_MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (6) i2_MensajeLCD_Var                                     1     0      1     222
                                              5 COMRAM     1     0      1
                     i2_EscribeLCD_c
 ---------------------------------------------------------------------------------
 (7) i2_EscribeLCD_c                                       1     1      0     174
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (6) i2_EscribeLCD_n8                                      5     4      1     834
                                              8 COMRAM     5     4      1
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
                          i2___lbdiv
                          i2___lbmod
 ---------------------------------------------------------------------------------
 (7) i2___lbmod                                            4     3      1     172
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (7) i2___lbdiv                                            4     3      1     173
                                              4 COMRAM     4     3      1
                          i2___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (8) i2_EnviaDato                                          2     2      0     116
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_RetardoLCD                                         2     2      0      29
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_n8
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
     ___lbdiv
       ___lbmod (ARG)
     ___lbmod
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _MensajeLCD_Var
     _EscribeLCD_c
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD

 _ISR (ROOT)
   i2_EscribeLCD_n8
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD
     i2___lbdiv
       i2___lbmod (ARG)
     i2___lbmod
   i2_MensajeLCD_Var
     i2_EscribeLCD_c
       i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITBIGSFRlh        111      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     35      47     50.0%
BITBIGSFRll         33      0       0      0.0%
BITBIGSFRh          14      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      47      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Feb 24 12:42:40 2025

                      _OK 002D          i2EscribeLCD_n8@a 000D          i2EscribeLCD_n8@b 0009  
              EnviaDato@a 0018                        _ok 0024             _InicializaLCD 0D0E  
                     _GIE 7F97                       _FIN 002A                       _RC0 7C10  
                     _RB4 7C0C                       _RB5 7C0D                       _RB6 7C0E  
                     _RB7 7C0F                       _ISR 0008                       u710 104A  
                     u630 0F42                       _aux 002E                       wreg 0FE8  
                    ?_ISR 0001          ??i2_EscribeLCD_c 0005                      l1616 0E94  
                    l1572 0DAE                      l1574 0DBE                      l1582 0DE4  
                    l1670 0F54                      l1662 0F3E                      l1814 0B68  
                    l1576 0DD0                      l1824 0BAE                      l1808 0B48  
                    l1840 0C12                      l1578 0DDA                      l1658 0F38  
                    l1674 0F5C                      l1690 0FE0                      l1682 0FC8  
                    l1844 0F9A                      l1758 0D20                      l1768 0D3E  
                    l1848 0FAC                      l1778 0D5C                      l1956 0AC2  
                    l1798 0D94                      l1974 0B06                      STR_1 0801  
                    STR_2 0842                      STR_3 0834                      STR_4 0839  
                    STR_5 083E                      STR_6 0829                      STR_7 0812  
                    STR_8 081E                      STR_9 0812                      u1207 0DD2  
                    u1217 0DDC                      u1227 10AA                      u1157 0A8E  
                    _LATA 0F89                      _LATB 0F8A                      u1167 0AB6  
                    _LATD 0F8C                      u1177 0DB4                      _LATE 0F8D  
                    u1187 0DC0                      u1197 0DC8                      _RBIE 7F93  
                    _RBIF 7F90                      _PARO 002C                      _RBPU 7F8F  
                    _TMR0 0FD6                      _SUPR 002B            ??_EscribeLCD_c 0019  
                    _main 0A34                      fsr1l 0FE1                      btemp 0030  
                    prodh 0FF4                      prodl 0FF3                      start 000E  
            ___param_bank 0000                     ??_ISR 000E         ??i2_EscribeLCD_n8 000A  
          ?_InicializaLCD 0001                     ?_main 0001           __end_of___lbdiv 0F60  
                   STR_10 081E             EscribeLCD_c@a 0019           __end_of___lbmod 0FE8  
                   _T0CON 0FD5                     _LATA1 7C49                     _LATA3 7C4B  
                   _LATA4 7C4C                     _LATA5 7C4D                     i2l213 0890  
                   i2l222 08E8                     i2l215 08AA                     i2l233 094E  
                   i2l225 0904                     i2l250 09EC                     i2l218 08B8  
                   i2l244 09B4                     i2l236 096A                     i2l228 0920  
                   i2l247 09D0                     i2l239 0986                     i2l256 0A18  
                   _PORTB 0F81                     _TRISA 0F92                     _TRISB 0F93  
                   _TRISC 0F94                     _TRISD 0F95                     _TRISE 0F96  
         ??_EscribeLCD_n8 001E                     _Tecla 0029                     _input 0025  
                   tablat 0FF5               _HabilitaLCD 10A6                     ttemp5 0031  
                   ttemp6 0034                     ttemp7 0038                     status 0FD8  
                   wtemp8 0031             i2___lbmod@rem 0004           ___lbdiv@divisor 0019  
         ___lbdiv@counter 001B          __end_of_BorraLCD 10A6           __initialization 0EEE  
            __end_of_main 0B42          i2_MensajeLCD_Var 0FE8                    ??_main 0022  
    __end_of_ConfiguraLCD 1050             __activetblptr 0002                    _ADCON1 0FC1  
          DireccionaLCD@a 0019            EscribeLCD_n8@a 0021            EscribeLCD_n8@b 001D  
                  i2l2022 08C8                    i2l2120 0A08                    i2l2112 09F0  
                  i2l2114 09F4                    i2l2052 092E                    i2l1602 0E3A  
                  i2l2082 0994                    i2l1710 0F70                    i2l1632 0EE0  
                  i2l1722 0F8C                    i2l1714 0F76                    i2l1900 0FFC  
                  i2l1726 0F94                    i2l1742 1030                    i2l1734 1018  
                  i2l1592 0E04                    i2l1594 0E14                    i2l1596 0E26  
                  i2l1860 0C2E                    i2l1598 0E30                    i2l1866 0C4E  
                  i2l1876 0C94                    i2l1892 0CF8                    i2l1896 0FEA  
                  _TMR0IE 7F95                    _TMR0IF 7F92                    _TMR0ON 7EAF  
   __end_of_DireccionaLCD 107C                _RetardoLCD 0DAA      EscribeLCD_n8@centena 001E  
               ??___lbdiv 001A                 ??___lbmod 0016           ??_InicializaLCD 0019  
                  isa$std 0001      __end_of_EscribeLCD_c 1066              ?i2_EnviaDato 0001  
            __pdataCOMRAM 002A         __end_ofi2___lbdiv 0F98         __end_ofi2___lbmod 1038  
            __mediumconst 0000                    tblptrh 0FF7                    tblptrl 0FF6  
                  tblptru 0FF8          ___lbdiv@dividend 001A           ___lbmod@divisor 0015  
   __end_ofi2_HabilitaLCD 10C2                __accesstop 0060   __end_of__initialization 0F1A  
         ___lbmod@counter 0017             ___rparam_used 0001            __pcstackCOMRAM 0001  
       __end_of_EnviaDato 0EA2          ___lbdiv@quotient 001C                 ?_BorraLCD 0001  
          _MensajeLCD_Var 0F98           MensajeLCD_Var@a 001A               ?_RetardoLCD 0001  
             RetardoLCD@a 0016           i2_EscribeLCD_n8 0C28    __end_of_MensajeLCD_Var 0FC0  
                 i2u81_40 0876                   i2u90_40 08C4                   i2u82_45 0878  
                 i2u67_40 0F7A                ??_BorraLCD 0019  __end_ofi2_MensajeLCD_Var 1010  
            ?_HabilitaLCD 0001              _ConfiguraLCD 1038                   __Hparam 0000  
   i2EscribeLCD_n8@decena 000B                   __Lparam 0000                   ___lbdiv 0F28  
                 ___lbmod 0FC0     i2EscribeLCD_n8@unidad 000C              __psmallconst 0800  
                 __pcinit 0EEE                   __ramtop 0800                   __ptext0 0A34  
                 __ptext1 0F98                   __ptext2 1050                   __ptext3 0D0E  
                 __ptext4 1092                   __ptext5 0B42                   __ptext6 0FC0  
                 __ptext7 0F28                   __ptext8 1066                   __ptext9 0E56  
         ?_MensajeLCD_Var 001A     __end_of_EscribeLCD_n8 0C28            __pintcode_body 0846  
    end_of_initialization 0F1A   __end_ofi2_EscribeLCD_n8 0D0E             __Lmediumconst 0000  
                 int_func 0846              _EscribeLCD_c 1050                   postdec1 0FE5  
                 postinc0 0FEE          ___lbmod@dividend 0016           i2EscribeLCD_c@a 0005  
               i2___lbdiv 0F60                 i2___lbmod 1010               ___lbmod@rem 0018  
           ?i2_RetardoLCD 0001             __pidataCOMRAM 10C2     __end_of_InicializaLCD 0DAA  
               _EnviaDato 0E56       start_initialization 0EEE               __end_of_ISR 0A34  
              ?i2___lbdiv 0005                ?i2___lbmod 0001          ?i2_EscribeLCD_n8 0009  
          ??i2_RetardoLCD 0001              ??_RetardoLCD 0015        i2___lbdiv@dividend 0006  
     EscribeLCD_n8@decena 001F       EscribeLCD_n8@unidad 0020                ?_EnviaDato 0001  
             __pbssCOMRAM 0024        __end_of_RetardoLCD 0E00        i2___lbdiv@quotient 0008  
       ?i2_MensajeLCD_Var 0006        ??i2_MensajeLCD_Var 0007             _DireccionaLCD 1066  
          i2_EscribeLCD_c 107C                 __pintcode 0008                 _faltantes 0027  
                ?___lbdiv 0019                  ?___lbmod 0015          ??_MensajeLCD_Var 001B  
             __smallconst 0800               ??i2___lbdiv 0006               ??i2___lbmod 0002  
           i2_HabilitaLCD 10B4            ?_DireccionaLCD 0001    __end_ofi2_EscribeLCD_c 1092  
                i2u123_47 0A0E                  i2u124_47 0E0A                  i2u125_47 0E16  
                i2u126_47 0E1E                  i2u127_47 0E28                  i2u128_47 0E32  
                i2u129_47 10B8             ??i2_EnviaDato 0003      __end_ofi2_RetardoLCD 0E56  
             ??_EnviaDato 0017                  _BorraLCD 1092                 copy_data0 0F02  
          ?i2_HabilitaLCD 0001           ?i2_EscribeLCD_c 0001                  __Hrparam 0000  
       i2___lbdiv@divisor 0005    i2EscribeLCD_n8@centena 000A         i2___lbdiv@counter 0007  
                __Lrparam 0000              i2EnviaDato@a 0004             ConfiguraLCD@a 0015  
                __ptext10 0DAA                  __ptext11 10A6                  __ptext20 0E00  
                __ptext12 1038                  __ptext21 10B4                  __ptext14 0FE8  
                __ptext15 107C                  __ptext16 0C28                  __ptext17 1010  
                __ptext18 0F60                  __ptext19 0EA2       __end_ofi2_EnviaDato 0EEE  
                _contadas 0026        i2___lbmod@dividend 0002           ??_DireccionaLCD 0019  
                _objetivo 0028                  _interfaz 002F                  isa$xinst 0000  
                int$flags 0030             _EscribeLCD_n8 0B42           ??i2_HabilitaLCD 0001  
                intlevel2 0000             ??_HabilitaLCD 0015             ?_ConfiguraLCD 0001  
       i2___lbmod@divisor 0001         i2___lbmod@counter 0003             i2RetardoLCD@a 0002  
             i2_EnviaDato 0EA2            ?_EscribeLCD_n8 001D            ??_ConfiguraLCD 0015  
           ?_EscribeLCD_c 0001         i2MensajeLCD_Var@a 0006              i2_RetardoLCD 0E00  
     __end_of_HabilitaLCD 10B4  
