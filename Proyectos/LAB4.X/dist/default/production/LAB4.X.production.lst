

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Feb 27 02:18:49 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44   000000                     
    45                           ; Generated 25/07/2024 GMT
    46                           ; 
    47                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4550 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79   000FE0                     bsr             equ	4064
    80   000FE9                     fsr0            equ	4073
    81   000FEA                     fsr0h           equ	4074
    82   000FE9                     fsr0l           equ	4073
    83   000FE1                     fsr1            equ	4065
    84   000FE2                     fsr1h           equ	4066
    85   000FE1                     fsr1l           equ	4065
    86   000FD9                     fsr2            equ	4057
    87   000FDA                     fsr2h           equ	4058
    88   000FD9                     fsr2l           equ	4057
    89   000FEF                     indf0           equ	4079
    90   000FE7                     indf1           equ	4071
    91   000FDF                     indf2           equ	4063
    92   000FF2                     intcon          equ	4082
    93   000000                     nvmcon          equ	0
    94   000FF9                     pcl             equ	4089
    95   000FFA                     pclath          equ	4090
    96   000FFB                     pclatu          equ	4091
    97   000FEB                     plusw0          equ	4075
    98   000FE3                     plusw1          equ	4067
    99   000FDB                     plusw2          equ	4059
   100   000FED                     postdec0        equ	4077
   101   000FE5                     postdec1        equ	4069
   102   000FDD                     postdec2        equ	4061
   103   000FEE                     postinc0        equ	4078
   104   000FE6                     postinc1        equ	4070
   105   000FDE                     postinc2        equ	4062
   106   000FEC                     preinc0         equ	4076
   107   000FE4                     preinc1         equ	4068
   108   000FDC                     preinc2         equ	4060
   109   000FF3                     prod            equ	4083
   110   000FF4                     prodh           equ	4084
   111   000FF3                     prodl           equ	4083
   112   000FD8                     status          equ	4056
   113   000FF5                     tablat          equ	4085
   114   000FF6                     tblptr          equ	4086
   115   000FF7                     tblptrh         equ	4087
   116   000FF6                     tblptrl         equ	4086
   117   000FF8                     tblptru         equ	4088
   118   000FFD                     tosl            equ	4093
   119   000FE8                     wreg            equ	4072
   120   000F62                     SPPDATA         equ	3938	;# 
   121   000F63                     SPPCFG          equ	3939	;# 
   122   000F64                     SPPEPS          equ	3940	;# 
   123   000F65                     SPPCON          equ	3941	;# 
   124   000F66                     UFRM            equ	3942	;# 
   125   000F66                     UFRML           equ	3942	;# 
   126   000F67                     UFRMH           equ	3943	;# 
   127   000F68                     UIR             equ	3944	;# 
   128   000F69                     UIE             equ	3945	;# 
   129   000F6A                     UEIR            equ	3946	;# 
   130   000F6B                     UEIE            equ	3947	;# 
   131   000F6C                     USTAT           equ	3948	;# 
   132   000F6D                     UCON            equ	3949	;# 
   133   000F6E                     UADDR           equ	3950	;# 
   134   000F6F                     UCFG            equ	3951	;# 
   135   000F70                     UEP0            equ	3952	;# 
   136   000F71                     UEP1            equ	3953	;# 
   137   000F72                     UEP2            equ	3954	;# 
   138   000F73                     UEP3            equ	3955	;# 
   139   000F74                     UEP4            equ	3956	;# 
   140   000F75                     UEP5            equ	3957	;# 
   141   000F76                     UEP6            equ	3958	;# 
   142   000F77                     UEP7            equ	3959	;# 
   143   000F78                     UEP8            equ	3960	;# 
   144   000F79                     UEP9            equ	3961	;# 
   145   000F7A                     UEP10           equ	3962	;# 
   146   000F7B                     UEP11           equ	3963	;# 
   147   000F7C                     UEP12           equ	3964	;# 
   148   000F7D                     UEP13           equ	3965	;# 
   149   000F7E                     UEP14           equ	3966	;# 
   150   000F7F                     UEP15           equ	3967	;# 
   151   000F80                     PORTA           equ	3968	;# 
   152   000F81                     PORTB           equ	3969	;# 
   153   000F82                     PORTC           equ	3970	;# 
   154   000F83                     PORTD           equ	3971	;# 
   155   000F84                     PORTE           equ	3972	;# 
   156   000F89                     LATA            equ	3977	;# 
   157   000F8A                     LATB            equ	3978	;# 
   158   000F8B                     LATC            equ	3979	;# 
   159   000F8C                     LATD            equ	3980	;# 
   160   000F8D                     LATE            equ	3981	;# 
   161   000F92                     TRISA           equ	3986	;# 
   162   000F92                     DDRA            equ	3986	;# 
   163   000F93                     TRISB           equ	3987	;# 
   164   000F93                     DDRB            equ	3987	;# 
   165   000F94                     TRISC           equ	3988	;# 
   166   000F94                     DDRC            equ	3988	;# 
   167   000F95                     TRISD           equ	3989	;# 
   168   000F95                     DDRD            equ	3989	;# 
   169   000F96                     TRISE           equ	3990	;# 
   170   000F96                     DDRE            equ	3990	;# 
   171   000F9B                     OSCTUNE         equ	3995	;# 
   172   000F9D                     PIE1            equ	3997	;# 
   173   000F9E                     PIR1            equ	3998	;# 
   174   000F9F                     IPR1            equ	3999	;# 
   175   000FA0                     PIE2            equ	4000	;# 
   176   000FA1                     PIR2            equ	4001	;# 
   177   000FA2                     IPR2            equ	4002	;# 
   178   000FA6                     EECON1          equ	4006	;# 
   179   000FA7                     EECON2          equ	4007	;# 
   180   000FA8                     EEDATA          equ	4008	;# 
   181   000FA9                     EEADR           equ	4009	;# 
   182   000FAB                     RCSTA           equ	4011	;# 
   183   000FAB                     RCSTA1          equ	4011	;# 
   184   000FAC                     TXSTA           equ	4012	;# 
   185   000FAC                     TXSTA1          equ	4012	;# 
   186   000FAD                     TXREG           equ	4013	;# 
   187   000FAD                     TXREG1          equ	4013	;# 
   188   000FAE                     RCREG           equ	4014	;# 
   189   000FAE                     RCREG1          equ	4014	;# 
   190   000FAF                     SPBRG           equ	4015	;# 
   191   000FAF                     SPBRG1          equ	4015	;# 
   192   000FB0                     SPBRGH          equ	4016	;# 
   193   000FB1                     T3CON           equ	4017	;# 
   194   000FB2                     TMR3            equ	4018	;# 
   195   000FB2                     TMR3L           equ	4018	;# 
   196   000FB3                     TMR3H           equ	4019	;# 
   197   000FB4                     CMCON           equ	4020	;# 
   198   000FB5                     CVRCON          equ	4021	;# 
   199   000FB6                     ECCP1AS         equ	4022	;# 
   200   000FB6                     CCP1AS          equ	4022	;# 
   201   000FB7                     ECCP1DEL        equ	4023	;# 
   202   000FB7                     CCP1DEL         equ	4023	;# 
   203   000FB8                     BAUDCON         equ	4024	;# 
   204   000FB8                     BAUDCTL         equ	4024	;# 
   205   000FBA                     CCP2CON         equ	4026	;# 
   206   000FBB                     CCPR2           equ	4027	;# 
   207   000FBB                     CCPR2L          equ	4027	;# 
   208   000FBC                     CCPR2H          equ	4028	;# 
   209   000FBD                     CCP1CON         equ	4029	;# 
   210   000FBD                     ECCP1CON        equ	4029	;# 
   211   000FBE                     CCPR1           equ	4030	;# 
   212   000FBE                     CCPR1L          equ	4030	;# 
   213   000FBF                     CCPR1H          equ	4031	;# 
   214   000FC0                     ADCON2          equ	4032	;# 
   215   000FC1                     ADCON1          equ	4033	;# 
   216   000FC2                     ADCON0          equ	4034	;# 
   217   000FC3                     ADRES           equ	4035	;# 
   218   000FC3                     ADRESL          equ	4035	;# 
   219   000FC4                     ADRESH          equ	4036	;# 
   220   000FC5                     SSPCON2         equ	4037	;# 
   221   000FC6                     SSPCON1         equ	4038	;# 
   222   000FC7                     SSPSTAT         equ	4039	;# 
   223   000FC8                     SSPADD          equ	4040	;# 
   224   000FC9                     SSPBUF          equ	4041	;# 
   225   000FCA                     T2CON           equ	4042	;# 
   226   000FCB                     PR2             equ	4043	;# 
   227   000FCB                     MEMCON          equ	4043	;# 
   228   000FCC                     TMR2            equ	4044	;# 
   229   000FCD                     T1CON           equ	4045	;# 
   230   000FCE                     TMR1            equ	4046	;# 
   231   000FCE                     TMR1L           equ	4046	;# 
   232   000FCF                     TMR1H           equ	4047	;# 
   233   000FD0                     RCON            equ	4048	;# 
   234   000FD1                     WDTCON          equ	4049	;# 
   235   000FD2                     HLVDCON         equ	4050	;# 
   236   000FD2                     LVDCON          equ	4050	;# 
   237   000FD3                     OSCCON          equ	4051	;# 
   238   000FD5                     T0CON           equ	4053	;# 
   239   000FD6                     TMR0            equ	4054	;# 
   240   000FD6                     TMR0L           equ	4054	;# 
   241   000FD7                     TMR0H           equ	4055	;# 
   242   000FD8                     STATUS          equ	4056	;# 
   243   000FD9                     FSR2            equ	4057	;# 
   244   000FD9                     FSR2L           equ	4057	;# 
   245   000FDA                     FSR2H           equ	4058	;# 
   246   000FDB                     PLUSW2          equ	4059	;# 
   247   000FDC                     PREINC2         equ	4060	;# 
   248   000FDD                     POSTDEC2        equ	4061	;# 
   249   000FDE                     POSTINC2        equ	4062	;# 
   250   000FDF                     INDF2           equ	4063	;# 
   251   000FE0                     BSR             equ	4064	;# 
   252   000FE1                     FSR1            equ	4065	;# 
   253   000FE1                     FSR1L           equ	4065	;# 
   254   000FE2                     FSR1H           equ	4066	;# 
   255   000FE3                     PLUSW1          equ	4067	;# 
   256   000FE4                     PREINC1         equ	4068	;# 
   257   000FE5                     POSTDEC1        equ	4069	;# 
   258   000FE6                     POSTINC1        equ	4070	;# 
   259   000FE7                     INDF1           equ	4071	;# 
   260   000FE8                     WREG            equ	4072	;# 
   261   000FE9                     FSR0            equ	4073	;# 
   262   000FE9                     FSR0L           equ	4073	;# 
   263   000FEA                     FSR0H           equ	4074	;# 
   264   000FEB                     PLUSW0          equ	4075	;# 
   265   000FEC                     PREINC0         equ	4076	;# 
   266   000FED                     POSTDEC0        equ	4077	;# 
   267   000FEE                     POSTINC0        equ	4078	;# 
   268   000FEF                     INDF0           equ	4079	;# 
   269   000FF0                     INTCON3         equ	4080	;# 
   270   000FF1                     INTCON2         equ	4081	;# 
   271   000FF2                     INTCON          equ	4082	;# 
   272   000FF3                     PROD            equ	4083	;# 
   273   000FF3                     PRODL           equ	4083	;# 
   274   000FF4                     PRODH           equ	4084	;# 
   275   000FF5                     TABLAT          equ	4085	;# 
   276   000FF6                     TBLPTR          equ	4086	;# 
   277   000FF6                     TBLPTRL         equ	4086	;# 
   278   000FF7                     TBLPTRH         equ	4087	;# 
   279   000FF8                     TBLPTRU         equ	4088	;# 
   280   000FF9                     PCLAT           equ	4089	;# 
   281   000FF9                     PC              equ	4089	;# 
   282   000FF9                     PCL             equ	4089	;# 
   283   000FFA                     PCLATH          equ	4090	;# 
   284   000FFB                     PCLATU          equ	4091	;# 
   285   000FFC                     STKPTR          equ	4092	;# 
   286   000FFD                     TOS             equ	4093	;# 
   287   000FFD                     TOSL            equ	4093	;# 
   288   000FFE                     TOSH            equ	4094	;# 
   289   000FFF                     TOSU            equ	4095	;# 
   290                           
   291                           	psect	idataCOMRAM
   292   0012FC                     __pidataCOMRAM:
   293                           	callstack 0
   294                           
   295                           ;initializer for _FIN
   296   0012FC  12                 	db	low STR_2
   297                           
   298                           ;initializer for _aux
   299   0012FD  01                 	db	low STR_1
   300                           
   301                           ;initializer for _interfaz
   302   0012FE  08                 	db	8
   303   007C0F                     _RB7            set	31759
   304   007C0E                     _RB6            set	31758
   305   007C0D                     _RB5            set	31757
   306   007C0C                     _RB4            set	31756
   307   007C4C                     _LATA4          set	31820
   308   007C49                     _LATA1          set	31817
   309   007C4A                     _LATA2          set	31818
   310   007C00                     _RA0            set	31744
   311   007E84                     _RI             set	32388
   312   007EAF                     _TMR0ON         set	32431
   313   007F97                     _GIE            set	32663
   314   007F95                     _TMR0IE         set	32661
   315   007F92                     _TMR0IF         set	32658
   316   007F93                     _RBIE           set	32659
   317   007F90                     _RBIF           set	32656
   318   007F8F                     _RBPU           set	32655
   319   007C4D                     _LATA5          set	31821
   320   007C4B                     _LATA3          set	31819
   321   000FD6                     _TMR0           set	4054
   322   000F81                     _PORTB          set	3969
   323   000FD5                     _T0CON          set	4053
   324   000F8D                     _LATE           set	3981
   325   000F8A                     _LATB           set	3978
   326   000F89                     _LATA           set	3977
   327   000F96                     _TRISE          set	3990
   328   000F95                     _TRISD          set	3989
   329   000F93                     _TRISB          set	3987
   330   000F92                     _TRISA          set	3986
   331   000FC1                     _ADCON1         set	4033
   332   000F8C                     _LATD           set	3980
   333                           
   334                           	psect	smallconst
   335   000800                     __psmallconst:
   336                           	callstack 0
   337   000800  00                 	db	0
   338   000801                     STR_1:
   339   000801  50                 	db	80	;'P'
   340   000802  69                 	db	105	;'i'
   341   000803  65                 	db	101	;'e'
   342   000804  7A                 	db	122	;'z'
   343   000805  61                 	db	97	;'a'
   344   000806  73                 	db	115	;'s'
   345   000807  20                 	db	32
   346   000808  61                 	db	97	;'a'
   347   000809  20                 	db	32
   348   00080A  63                 	db	99	;'c'
   349   00080B  6F                 	db	111	;'o'
   350   00080C  6E                 	db	110	;'n'
   351   00080D  74                 	db	116	;'t'
   352   00080E  61                 	db	97	;'a'
   353   00080F  72                 	db	114	;'r'
   354   000810  3A                 	db	58	;':'
   355   000811  00                 	db	0
   356   000812                     STR_2:
   357   000812  20                 	db	32
   358   000813  20                 	db	32
   359   000814  43                 	db	67	;'C'
   360   000815  4F                 	db	79	;'O'
   361   000816  4D                 	db	77	;'M'
   362   000817  50                 	db	80	;'P'
   363   000818  4C                 	db	76	;'L'
   364   000819  45                 	db	69	;'E'
   365   00081A  54                 	db	84	;'T'
   366   00081B  41                 	db	65	;'A'
   367   00081C  53                 	db	83	;'S'
   368   00081D  21                 	db	33
   369   00081E  21                 	db	33
   370   00081F  21                 	db	33
   371   000820  20                 	db	32
   372   000821  00                 	db	0
   373   000822                     STR_4:
   374   000822  56                 	db	86	;'V'
   375   000823  61                 	db	97	;'a'
   376   000824  6C                 	db	108	;'l'
   377   000825  6F                 	db	111	;'o'
   378   000826  72                 	db	114	;'r'
   379   000827  20                 	db	32
   380   000828  6E                 	db	110	;'n'
   381   000829  6F                 	db	111	;'o'
   382   00082A  20                 	db	32
   383   00082B  76                 	db	118	;'v'
   384   00082C  61                 	db	97	;'a'
   385   00082D  6C                 	db	108	;'l'
   386   00082E  69                 	db	105	;'i'
   387   00082F  64                 	db	100	;'d'
   388   000830  6F                 	db	111	;'o'
   389   000831  00                 	db	0
   390   000832                     STR_7:
   391   000832  20                 	db	32
   392   000833  20                 	db	32
   393   000834  20                 	db	32
   394   000835  20                 	db	32
   395   000836  45                 	db	69	;'E'
   396   000837  4D                 	db	77	;'M'
   397   000838  45                 	db	69	;'E'
   398   000839  52                 	db	82	;'R'
   399   00083A  47                 	db	71	;'G'
   400   00083B  45                 	db	69	;'E'
   401   00083C  4E                 	db	78	;'N'
   402   00083D  43                 	db	67	;'C'
   403   00083E  59                 	db	89	;'Y'
   404   00083F  00                 	db	0
   405   000840                     STR_5:
   406   000840  46                 	db	70	;'F'
   407   000841  61                 	db	97	;'a'
   408   000842  6C                 	db	108	;'l'
   409   000843  74                 	db	116	;'t'
   410   000844  61                 	db	97	;'a'
   411   000845  6E                 	db	110	;'n'
   412   000846  74                 	db	116	;'t'
   413   000847  65                 	db	101	;'e'
   414   000848  73                 	db	115	;'s'
   415   000849  20                 	db	32
   416   00084A  3A                 	db	58	;':'
   417   00084B  00                 	db	0
   418   00084C                     STR_6:
   419   00084C  4F                 	db	79	;'O'
   420   00084D  62                 	db	98	;'b'
   421   00084E  6A                 	db	106	;'j'
   422   00084F  65                 	db	101	;'e'
   423   000850  74                 	db	116	;'t'
   424   000851  69                 	db	105	;'i'
   425   000852  76                 	db	118	;'v'
   426   000853  6F                 	db	111	;'o'
   427   000854  20                 	db	32
   428   000855  3A                 	db	58	;':'
   429   000856  00                 	db	0
   430   000857                     STR_8:
   431   000857  20                 	db	32
   432   000858  20                 	db	32
   433   000859  20                 	db	32
   434   00085A  20                 	db	32
   435   00085B  20                 	db	32
   436   00085C  20                 	db	32
   437   00085D  53                 	db	83	;'S'
   438   00085E  54                 	db	84	;'T'
   439   00085F  4F                 	db	79	;'O'
   440   000860  50                 	db	80	;'P'
   441   000861  00                 	db	0
   442   000862                     STR_3:
   443   000862  42                 	db	66	;'B'
   444   000863  69                 	db	105	;'i'
   445   000864  65                 	db	101	;'e'
   446   000865  6E                 	db	110	;'n'
   447   000866  76                 	db	118	;'v'
   448   000867  65                 	db	101	;'e'
   449   000868  6E                 	db	110	;'n'
   450   000869  69                 	db	105	;'i'
   451   00086A  64                 	db	100	;'d'
   452   00086B  61                 	db	97	;'a'
   453   00086C  00                 	db	0
   454   00086D  00                 	db	0	; dummy byte at the end
   455   000002                     __activetblptr  equ	2
   456                           
   457                           ; #config settings
   458                           
   459                           	psect	cinit
   460   0010EE                     __pcinit:
   461                           	callstack 0
   462   0010EE                     start_initialization:
   463                           	callstack 0
   464   0010EE                     __initialization:
   465                           	callstack 0
   466                           
   467                           ; Initialize objects allocated to COMRAM (3 bytes)
   468                           ; load TBLPTR registers with __pidataCOMRAM
   469   0010EE  0EFC               	movlw	low __pidataCOMRAM
   470   0010F0  6EF6               	movwf	tblptrl,c
   471   0010F2  0E12               	movlw	high __pidataCOMRAM
   472   0010F4  6EF7               	movwf	tblptrh,c
   473   0010F6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   474   0010F8  6EF8               	movwf	tblptru,c
   475   0010FA  0009               	tblrd		*+	;fetch initializer
   476   0010FC  CFF5 F02C          	movff	tablat,__pdataCOMRAM
   477   001100  0009               	tblrd		*+	;fetch initializer
   478   001102  CFF5 F02D          	movff	tablat,__pdataCOMRAM+1
   479   001106  0009               	tblrd		*+	;fetch initializer
   480   001108  CFF5 F02E          	movff	tablat,__pdataCOMRAM+2
   481                           
   482                           ; Clear objects allocated to COMRAM (10 bytes)
   483   00110C  EE00  F022         	lfsr	0,__pbssCOMRAM
   484   001110  0E0A               	movlw	10
   485   001112                     clear_0:
   486   001112  6AEE               	clrf	postinc0,c
   487   001114  06E8               	decf	wreg,f,c
   488   001116  E1FD               	bnz	clear_0
   489   001118                     end_of_initialization:
   490                           	callstack 0
   491   001118                     __end_of__initialization:
   492                           	callstack 0
   493   001118  902F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   494   00111A  922F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   495   00111C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   496   00111E  6EF8               	movwf	tblptru,c
   497   001120  0100               	movlb	0
   498   001122  EF56  F005         	goto	_main	;jump to C main() function
   499                           
   500                           	psect	bssCOMRAM
   501   000022                     __pbssCOMRAM:
   502                           	callstack 0
   503   000022                     _contador:
   504                           	callstack 0
   505   000022                     	ds	1
   506   000023                     _emergency:
   507                           	callstack 0
   508   000023                     	ds	1
   509   000024                     _Iniciarpregunta:
   510                           	callstack 0
   511   000024                     	ds	1
   512   000025                     _ok:
   513                           	callstack 0
   514   000025                     	ds	1
   515   000026                     _block:
   516                           	callstack 0
   517   000026                     	ds	1
   518   000027                     _input:
   519                           	callstack 0
   520   000027                     	ds	1
   521   000028                     _contadas:
   522                           	callstack 0
   523   000028                     	ds	1
   524   000029                     _faltantes:
   525                           	callstack 0
   526   000029                     	ds	1
   527   00002A                     _objetivo:
   528                           	callstack 0
   529   00002A                     	ds	1
   530   00002B                     _Tecla:
   531                           	callstack 0
   532   00002B                     	ds	1
   533                           
   534                           	psect	dataCOMRAM
   535   00002C                     __pdataCOMRAM:
   536                           	callstack 0
   537   00002C                     _FIN:
   538                           	callstack 0
   539   00002C                     	ds	1
   540   00002D                     _aux:
   541                           	callstack 0
   542   00002D                     	ds	1
   543   00002E                     _interfaz:
   544                           	callstack 0
   545   00002E                     	ds	1
   546                           
   547                           	psect	cstackCOMRAM
   548   000001                     __pcstackCOMRAM:
   549                           	callstack 0
   550   000001                     i2___lbmod@divisor:
   551                           	callstack 0
   552   000001                     ??i2_RetardoLCD:
   553                           
   554                           ; 1 bytes @ 0x0
   555   000001                     	ds	1
   556   000002                     i2RetardoLCD@a:
   557                           	callstack 0
   558   000002                     i2___lbmod@dividend:
   559                           	callstack 0
   560   000002                     
   561                           ; 1 bytes @ 0x1
   562   000002                     	ds	1
   563   000003                     i2___lbmod@counter:
   564                           	callstack 0
   565   000003                     ??i2_EnviaDato:
   566                           
   567                           ; 1 bytes @ 0x2
   568   000003                     	ds	1
   569   000004                     i2EnviaDato@a:
   570                           	callstack 0
   571   000004                     i2___lbmod@rem:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0x3
   575   000004                     	ds	1
   576   000005                     i2EscribeLCD_c@a:
   577                           	callstack 0
   578   000005                     i2DireccionaLCD@a:
   579                           	callstack 0
   580   000005                     i2___lbdiv@divisor:
   581                           	callstack 0
   582   000005                     
   583                           ; 1 bytes @ 0x4
   584   000005                     	ds	1
   585   000006                     i2___lbdiv@dividend:
   586                           	callstack 0
   587   000006                     
   588                           ; 1 bytes @ 0x5
   589   000006                     	ds	1
   590   000007                     i2___lbdiv@counter:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0x6
   594   000007                     	ds	1
   595   000008                     i2___lbdiv@quotient:
   596                           	callstack 0
   597                           
   598                           ; 1 bytes @ 0x7
   599   000008                     	ds	1
   600   000009                     i2EscribeLCD_n8@b:
   601                           	callstack 0
   602                           
   603                           ; 1 bytes @ 0x8
   604   000009                     	ds	1
   605   00000A                     i2EscribeLCD_n8@centena:
   606                           	callstack 0
   607   00000A                     
   608                           ; 1 bytes @ 0x9
   609   00000A                     	ds	1
   610   00000B                     i2EscribeLCD_n8@decena:
   611                           	callstack 0
   612                           
   613                           ; 1 bytes @ 0xA
   614   00000B                     	ds	1
   615   00000C                     i2EscribeLCD_n8@unidad:
   616                           	callstack 0
   617                           
   618                           ; 1 bytes @ 0xB
   619   00000C                     	ds	1
   620   00000D                     i2EscribeLCD_n8@a:
   621                           	callstack 0
   622                           
   623                           ; 1 bytes @ 0xC
   624   00000D                     	ds	1
   625   00000E                     ??_ISR:
   626                           
   627                           ; 1 bytes @ 0xD
   628   00000E                     	ds	3
   629   000011                     ConfiguraLCD@a:
   630                           	callstack 0
   631   000011                     ___lbmod@divisor:
   632                           	callstack 0
   633   000011                     ??_RetardoLCD:
   634   000011                     
   635                           ; 1 bytes @ 0x10
   636   000011                     	ds	1
   637   000012                     RetardoLCD@a:
   638                           	callstack 0
   639   000012                     ___lbmod@dividend:
   640                           	callstack 0
   641   000012                     
   642                           ; 1 bytes @ 0x11
   643   000012                     	ds	1
   644   000013                     ___lbmod@counter:
   645                           	callstack 0
   646   000013                     ??_EnviaDato:
   647                           
   648                           ; 1 bytes @ 0x12
   649   000013                     	ds	1
   650   000014                     EnviaDato@a:
   651                           	callstack 0
   652   000014                     ___lbmod@rem:
   653                           	callstack 0
   654                           
   655                           ; 1 bytes @ 0x13
   656   000014                     	ds	1
   657   000015                     EscribeLCD_c@a:
   658                           	callstack 0
   659   000015                     DireccionaLCD@a:
   660                           	callstack 0
   661   000015                     ___lbdiv@divisor:
   662                           	callstack 0
   663   000015                     
   664                           ; 1 bytes @ 0x14
   665   000015                     	ds	1
   666   000016                     MensajeLCD_Var@a:
   667                           	callstack 0
   668   000016                     ___lbdiv@dividend:
   669                           	callstack 0
   670   000016                     
   671                           ; 1 bytes @ 0x15
   672   000016                     	ds	1
   673   000017                     ___lbdiv@counter:
   674                           	callstack 0
   675   000017                     
   676                           ; 1 bytes @ 0x16
   677   000017                     	ds	1
   678   000018                     ___lbdiv@quotient:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0x17
   682   000018                     	ds	1
   683   000019                     EscribeLCD_n8@b:
   684                           	callstack 0
   685                           
   686                           ; 1 bytes @ 0x18
   687   000019                     	ds	1
   688   00001A                     EscribeLCD_n8@centena:
   689                           	callstack 0
   690   00001A                     
   691                           ; 1 bytes @ 0x19
   692   00001A                     	ds	1
   693   00001B                     EscribeLCD_n8@decena:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0x1A
   697   00001B                     	ds	1
   698   00001C                     EscribeLCD_n8@unidad:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0x1B
   702   00001C                     	ds	1
   703   00001D                     EscribeLCD_n8@a:
   704                           	callstack 0
   705                           
   706                           ; 1 bytes @ 0x1C
   707   00001D                     	ds	1
   708   00001E                     ??_main:
   709                           
   710                           ; 1 bytes @ 0x1D
   711   00001E                     	ds	2
   712   000020                     main@Antiguo_RA0:
   713                           	callstack 0
   714                           
   715                           ; 1 bytes @ 0x1F
   716   000020                     	ds	1
   717   000021                     main@Actual_RA0:
   718                           	callstack 0
   719                           
   720                           ; 1 bytes @ 0x20
   721   000021                     	ds	1
   722                           
   723 ;;
   724 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   725 ;;
   726 ;; *************** function _main *****************
   727 ;; Defined at:
   728 ;;		line 27 in file "LAB4.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;		None
   731 ;; Auto vars:     Size  Location     Type
   732 ;;  Actual_RA0      1   32[COMRAM] unsigned char 
   733 ;;  Antiguo_RA0     1   31[COMRAM] unsigned char 
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   743 ;;      Params:         0       0       0       0       0       0       0       0       0
   744 ;;      Locals:         2       0       0       0       0       0       0       0       0
   745 ;;      Temps:          2       0       0       0       0       0       0       0       0
   746 ;;      Totals:         4       0       0       0       0       0       0       0       0
   747 ;;Total ram usage:        4 bytes
   748 ;; Hardware stack levels required when called: 9
   749 ;; This function calls:
   750 ;;		_BorraLCD
   751 ;;		_ConfiguraLCD
   752 ;;		_DireccionaLCD
   753 ;;		_Emergencia
   754 ;;		_EscribeLCD_n8
   755 ;;		_InicializaLCD
   756 ;;		_MensajeLCD_Var
   757 ;;		_MostrarCursorLCD
   758 ;;		_MostrarNumeros
   759 ;;		_OcultarCursorLCD
   760 ;;		___lbdiv
   761 ;;		___lbmod
   762 ;; This function is called by:
   763 ;;		Startup code after reset
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767                           	psect	text0
   768   000AAC                     __ptext0:
   769                           	callstack 0
   770   000AAC                     _main:
   771                           	callstack 22
   772                           
   773                           ;LAB4.c: 30: ADCON1 = 15;
   774                           
   775                           ;incstack = 0
   776   000AAC  0E0F               	movlw	15
   777   000AAE  6EC1               	movwf	193,c	;volatile
   778                           
   779                           ;LAB4.c: 31: TRISA = 0x01;
   780   000AB0  0E01               	movlw	1
   781   000AB2  6E92               	movwf	146,c	;volatile
   782                           
   783                           ;LAB4.c: 33: TRISB = 0b11110000;
   784   000AB4  0EF0               	movlw	240
   785   000AB6  6E93               	movwf	147,c	;volatile
   786                           
   787                           ;LAB4.c: 34: TRISD = 0x00;
   788   000AB8  6A95               	clrf	149,c	;volatile
   789                           
   790                           ;LAB4.c: 35: TRISE = 0x00;
   791   000ABA  6A96               	clrf	150,c	;volatile
   792                           
   793                           ;LAB4.c: 38: LATA = 0b010000;
   794   000ABC  0E10               	movlw	16
   795   000ABE  6E89               	movwf	137,c	;volatile
   796                           
   797                           ;LAB4.c: 39: LATB = 0x00;
   798   000AC0  6A8A               	clrf	138,c	;volatile
   799                           
   800                           ;LAB4.c: 40: LATD = 0x00;
   801   000AC2  6A8C               	clrf	140,c	;volatile
   802                           
   803                           ;LAB4.c: 41: LATE = 0x00;
   804   000AC4  6A8D               	clrf	141,c	;volatile
   805                           
   806                           ;LAB4.c: 42: RBPU=0;
   807   000AC6  9EF1               	bcf	4081,7,c	;volatile
   808                           
   809                           ;LAB4.c: 48: RBIF=0;
   810   000AC8  90F2               	bcf	4082,0,c	;volatile
   811                           
   812                           ;LAB4.c: 49: RBIE=1;
   813   000ACA  86F2               	bsf	4082,3,c	;volatile
   814                           
   815                           ;LAB4.c: 52: T0CON = 0b00000010;
   816   000ACC  0E02               	movlw	2
   817   000ACE  6ED5               	movwf	213,c	;volatile
   818                           
   819                           ;LAB4.c: 54: TMR0 = 49911;
   820   000AD0  0EC2               	movlw	194
   821   000AD2  6ED7               	movwf	215,c	;volatile
   822   000AD4  0EF7               	movlw	247
   823   000AD6  6ED6               	movwf	214,c	;volatile
   824                           
   825                           ;LAB4.c: 57: TMR0IF = 0;
   826   000AD8  94F2               	bcf	4082,2,c	;volatile
   827                           
   828                           ;LAB4.c: 58: TMR0IE = 1;
   829   000ADA  8AF2               	bsf	4082,5,c	;volatile
   830                           
   831                           ;LAB4.c: 60: GIE=1;
   832   000ADC  8EF2               	bsf	4082,7,c	;volatile
   833                           
   834                           ;LAB4.c: 61: TMR0ON = 1;
   835   000ADE  8ED5               	bsf	4053,7,c	;volatile
   836                           
   837                           ;LAB4.c: 65: ConfiguraLCD(4);
   838   000AE0  0E04               	movlw	4
   839   000AE2  EC1A  F009         	call	_ConfiguraLCD
   840                           
   841                           ;LAB4.c: 66: InicializaLCD();
   842   000AE6  EC33  F007         	call	_InicializaLCD	;wreg free
   843                           
   844                           ;LAB4.c: 67: OcultarCursorLCD();
   845   000AEA  EC52  F009         	call	_OcultarCursorLCD	;wreg free
   846                           
   847                           ;LAB4.c: 71: if(RI == 1){
   848   000AEE  A8D0               	btfss	4048,4,c	;volatile
   849   000AF0  D00E               	goto	l2279
   850                           
   851                           ;LAB4.c: 75: BorraLCD();
   852   000AF2  EC66  F009         	call	_BorraLCD	;wreg free
   853                           
   854                           ;LAB4.c: 76: MensajeLCD_Var("Bienvenida");
   855   000AF6  0E62               	movlw	low STR_3
   856   000AF8  6E16               	movwf	MensajeLCD_Var@a^0,c
   857   000AFA  ECDF  F008         	call	_MensajeLCD_Var	;wreg free
   858                           
   859                           ;LAB4.c: 77: _delay((unsigned long)((500)*(1000000/4000.0)));
   860   000AFE  0EA3               	movlw	163
   861   000B00  6E1E               	movwf	??_main^0,c
   862   000B02  0E55               	movlw	85
   863   000B04                     u1817:
   864   000B04  2EE8               	decfsz	wreg,f,c
   865   000B06  D7FE               	bra	u1817
   866   000B08  2E1E               	decfsz	??_main^0,f,c
   867   000B0A  D7FC               	bra	u1817
   868   000B0C  0000               	nop	
   869   000B0E                     l2279:
   870                           
   871                           ;LAB4.c: 78: };LAB4.c: 81: if(RI == 0){
   872   000B0E  B8D0               	btfsc	4048,4,c	;volatile
   873   000B10  D003               	goto	l2285
   874                           
   875                           ;LAB4.c: 83: LATE = 0b101;
   876   000B12  0E05               	movlw	5
   877   000B14  6E8D               	movwf	141,c	;volatile
   878                           
   879                           ;LAB4.c: 84: RI = 1;
   880   000B16  88D0               	bsf	4048,4,c	;volatile
   881   000B18                     l2285:
   882                           
   883                           ;LAB4.c: 94: input = 0;
   884   000B18  6A27               	clrf	_input^0,c
   885                           
   886                           ;LAB4.c: 95: objetivo = 0;
   887   000B1A  6A2A               	clrf	_objetivo^0,c
   888                           
   889                           ;LAB4.c: 96: ok = 0;
   890   000B1C  6A25               	clrf	_ok^0,c
   891                           
   892                           ;LAB4.c: 97: contador = 0;
   893   000B1E  6A22               	clrf	_contador^0,c
   894                           
   895                           ;LAB4.c: 103: BorraLCD();
   896   000B20  EC66  F009         	call	_BorraLCD	;wreg free
   897                           
   898                           ;LAB4.c: 104: MostrarCursorLCD();
   899   000B24  EC5C  F009         	call	_MostrarCursorLCD	;wreg free
   900                           
   901                           ;LAB4.c: 105: MensajeLCD_Var(*aux);
   902   000B28  C02D  F016         	movff	_aux,MensajeLCD_Var@a
   903   000B2C  ECDF  F008         	call	_MensajeLCD_Var	;wreg free
   904                           
   905                           ;LAB4.c: 107: DireccionaLCD(0xC0);
   906   000B30  0EC0               	movlw	192
   907   000B32  EC31  F009         	call	_DireccionaLCD
   908                           
   909                           ;LAB4.c: 108: Iniciarpregunta=1;
   910   000B36  0E01               	movlw	1
   911   000B38  6E24               	movwf	_Iniciarpregunta^0,c
   912                           
   913                           ;LAB4.c: 109: block = 0;
   914   000B3A  6A26               	clrf	_block^0,c
   915                           
   916                           ;LAB4.c: 114: while(ok == 0){
   917   000B3C  D004               	goto	l2309
   918   000B3E                     l2305:
   919                           
   920                           ;LAB4.c: 115: if(emergency == 1) Emergencia();
   921   000B3E  0423               	decf	_emergency^0,w,c
   922   000B40  B4D8               	btfsc	status,2,c
   923   000B42  EC07  F009         	call	_Emergencia	;wreg free
   924   000B46                     l2309:
   925   000B46  5025               	movf	_ok^0,w,c
   926   000B48  B4D8               	btfsc	status,2,c
   927   000B4A  D7F9               	goto	l2305
   928                           
   929                           ;LAB4.c: 118: };LAB4.c: 123: if(input < 2){
   930   000B4C  0E02               	movlw	2
   931   000B4E  6027               	cpfslt	_input^0,c
   932   000B50  D007               	goto	l2317
   933                           
   934                           ;LAB4.c: 125: Tecla = 0;
   935   000B52  6A2B               	clrf	_Tecla^0,c
   936                           
   937                           ;LAB4.c: 126: objetivo = objetivo/10;
   938   000B54  0E0A               	movlw	10
   939   000B56  6E15               	movwf	___lbdiv@divisor^0,c
   940   000B58  502A               	movf	_objetivo^0,w,c
   941   000B5A  EC93  F008         	call	___lbdiv
   942   000B5E  6E2A               	movwf	_objetivo^0,c
   943   000B60                     l2317:
   944                           
   945                           ;LAB4.c: 127: };LAB4.c: 128: input = 3;
   946   000B60  0E03               	movlw	3
   947   000B62  6E27               	movwf	_input^0,c
   948                           
   949                           ;LAB4.c: 131: if(objetivo > 59){
   950   000B64  0E3B               	movlw	59
   951   000B66  642A               	cpfsgt	_objetivo^0,c
   952   000B68  D012               	goto	l2327
   953                           
   954                           ;LAB4.c: 132: BorraLCD();
   955   000B6A  EC66  F009         	call	_BorraLCD	;wreg free
   956                           
   957                           ;LAB4.c: 133: MensajeLCD_Var("Valor no valido");
   958   000B6E  0E22               	movlw	low STR_4
   959   000B70  6E16               	movwf	MensajeLCD_Var@a^0,c
   960   000B72  ECDF  F008         	call	_MensajeLCD_Var	;wreg free
   961                           
   962                           ;LAB4.c: 134: _delay((unsigned long)((2000)*(1000000/4000.0)));
   963   000B76  0E03               	movlw	3
   964   000B78  6E1F               	movwf	(??_main+1)^0,c
   965   000B7A  0E8A               	movlw	138
   966   000B7C  6E1E               	movwf	??_main^0,c
   967   000B7E  0E56               	movlw	86
   968   000B80                     u1827:
   969   000B80  2EE8               	decfsz	wreg,f,c
   970   000B82  D7FE               	bra	u1827
   971   000B84  2E1E               	decfsz	??_main^0,f,c
   972   000B86  D7FC               	bra	u1827
   973   000B88  2E1F               	decfsz	(??_main+1)^0,f,c
   974   000B8A  D7FA               	bra	u1827
   975   000B8C  00FF               	reset		;# 
   976   000B8E                     l2327:
   977                           
   978                           ;LAB4.c: 136: };LAB4.c: 139: objetivo = objetivo + Tecla;
   979   000B8E  502A               	movf	_objetivo^0,w,c
   980   000B90  242B               	addwf	_Tecla^0,w,c
   981   000B92  6E2A               	movwf	_objetivo^0,c
   982                           
   983                           ;LAB4.c: 140: faltantes = objetivo;
   984   000B94  C02A  F029         	movff	_objetivo,_faltantes
   985                           
   986                           ;LAB4.c: 141: contadas = objetivo - faltantes;
   987   000B98  5029               	movf	_faltantes^0,w,c
   988   000B9A  5C2A               	subwf	_objetivo^0,w,c
   989   000B9C  6E28               	movwf	_contadas^0,c
   990                           
   991                           ;LAB4.c: 146: block = 1;
   992   000B9E  0E01               	movlw	1
   993   000BA0  6E26               	movwf	_block^0,c
   994                           
   995                           ;LAB4.c: 147: BorraLCD();
   996   000BA2  EC66  F009         	call	_BorraLCD	;wreg free
   997                           
   998                           ;LAB4.c: 148: MensajeLCD_Var("Faltantes :");
   999   000BA6  0E40               	movlw	low STR_5
  1000   000BA8  6E16               	movwf	MensajeLCD_Var@a^0,c
  1001   000BAA  ECDF  F008         	call	_MensajeLCD_Var	;wreg free
  1002                           
  1003                           ;LAB4.c: 149: EscribeLCD_n8(faltantes,2);
  1004   000BAE  0E02               	movlw	2
  1005   000BB0  6E19               	movwf	EscribeLCD_n8@b^0,c
  1006   000BB2  5029               	movf	_faltantes^0,w,c
  1007   000BB4  EC4D  F006         	call	_EscribeLCD_n8
  1008                           
  1009                           ;LAB4.c: 150: DireccionaLCD(0xC0);
  1010   000BB8  0EC0               	movlw	192
  1011   000BBA  EC31  F009         	call	_DireccionaLCD
  1012                           
  1013                           ;LAB4.c: 151: MensajeLCD_Var("Objetivo :");
  1014   000BBE  0E4C               	movlw	low STR_6
  1015   000BC0  6E16               	movwf	MensajeLCD_Var@a^0,c
  1016   000BC2  ECDF  F008         	call	_MensajeLCD_Var	;wreg free
  1017                           
  1018                           ;LAB4.c: 152: EscribeLCD_n8(objetivo,2);
  1019   000BC6  0E02               	movlw	2
  1020   000BC8  6E19               	movwf	EscribeLCD_n8@b^0,c
  1021   000BCA  502A               	movf	_objetivo^0,w,c
  1022   000BCC  EC4D  F006         	call	_EscribeLCD_n8
  1023                           
  1024                           ;LAB4.c: 154: unsigned char Antiguo_RA0 = 0;
  1025   000BD0  6A20               	clrf	main@Antiguo_RA0^0,c
  1026   000BD2                     l2349:
  1027                           
  1028                           ;LAB4.c: 158: if(emergency == 1){
  1029   000BD2  0423               	decf	_emergency^0,w,c
  1030   000BD4  B4D8               	btfsc	status,2,c
  1031                           
  1032                           ;LAB4.c: 159: Emergencia();
  1033   000BD6  EC07  F009         	call	_Emergencia	;wreg free
  1034                           
  1035                           ;LAB4.c: 160: };LAB4.c: 162: unsigned char Actual_RA0 = RA0;
  1036   000BDA  0E00               	movlw	0
  1037   000BDC  B080               	btfsc	3968,0,c	;volatile
  1038   000BDE  0E01               	movlw	1
  1039   000BE0  6E21               	movwf	main@Actual_RA0^0,c
  1040                           
  1041                           ;LAB4.c: 165: if(Antiguo_RA0 == 0 && Actual_RA0 == 1 && contadas < objetivo){
  1042   000BE2  5020               	movf	main@Antiguo_RA0^0,w,c
  1043   000BE4  A4D8               	btfss	status,2,c
  1044   000BE6  D028               	goto	l2379
  1045   000BE8  0421               	decf	main@Actual_RA0^0,w,c
  1046   000BEA  A4D8               	btfss	status,2,c
  1047   000BEC  D025               	goto	l2379
  1048   000BEE  502A               	movf	_objetivo^0,w,c
  1049   000BF0  5C28               	subwf	_contadas^0,w,c
  1050   000BF2  B0D8               	btfsc	status,0,c
  1051   000BF4  D021               	goto	l2379
  1052                           
  1053                           ;LAB4.c: 170: contador = 0;
  1054   000BF6  6A22               	clrf	_contador^0,c
  1055                           
  1056                           ;LAB4.c: 172: _delay((unsigned long)((100)*(1000000/4000.0)));
  1057   000BF8  0E21               	movlw	33
  1058   000BFA  6E1E               	movwf	??_main^0,c
  1059   000BFC  0E76               	movlw	118
  1060   000BFE                     u1837:
  1061   000BFE  2EE8               	decfsz	wreg,f,c
  1062   000C00  D7FE               	bra	u1837
  1063   000C02  2E1E               	decfsz	??_main^0,f,c
  1064   000C04  D7FC               	bra	u1837
  1065   000C06  D000               	nop2	
  1066                           
  1067                           ;LAB4.c: 174: contadas++;
  1068   000C08  2A28               	incf	_contadas^0,f,c
  1069                           
  1070                           ;LAB4.c: 175: faltantes--;
  1071   000C0A  0629               	decf	_faltantes^0,f,c
  1072                           
  1073                           ;LAB4.c: 177: if(contadas%10 == 0 && contadas != objetivo){
  1074   000C0C  0E0A               	movlw	10
  1075   000C0E  6E11               	movwf	___lbmod@divisor^0,c
  1076   000C10  5028               	movf	_contadas^0,w,c
  1077   000C12  ECCB  F008         	call	___lbmod
  1078   000C16  0900               	iorlw	0
  1079   000C18  A4D8               	btfss	status,2,c
  1080   000C1A  D00E               	goto	l2379
  1081   000C1C  502A               	movf	_objetivo^0,w,c
  1082   000C1E  1828               	xorwf	_contadas^0,w,c
  1083   000C20  B4D8               	btfsc	status,2,c
  1084   000C22  D00A               	goto	l2379
  1085                           
  1086                           ;LAB4.c: 180: LATA2 = 1;
  1087   000C24  8489               	bsf	3977,2,c	;volatile
  1088                           
  1089                           ;LAB4.c: 181: _delay((unsigned long)((500)*(1000000/4000.0)));
  1090   000C26  0EA3               	movlw	163
  1091   000C28  6E1E               	movwf	??_main^0,c
  1092   000C2A  0E55               	movlw	85
  1093   000C2C                     u1847:
  1094   000C2C  2EE8               	decfsz	wreg,f,c
  1095   000C2E  D7FE               	bra	u1847
  1096   000C30  2E1E               	decfsz	??_main^0,f,c
  1097   000C32  D7FC               	bra	u1847
  1098   000C34  0000               	nop	
  1099                           
  1100                           ;LAB4.c: 182: LATA2 = 0;
  1101   000C36  9489               	bcf	3977,2,c	;volatile
  1102   000C38                     l2379:
  1103                           
  1104                           ;LAB4.c: 183: };LAB4.c: 185: };LAB4.c: 188: Antiguo_RA0 = Actual_RA0;
  1105   000C38  C021  F020         	movff	main@Actual_RA0,main@Antiguo_RA0
  1106                           
  1107                           ;LAB4.c: 190: MostrarNumeros();
  1108   000C3C  ECD7  F007         	call	_MostrarNumeros	;wreg free
  1109                           
  1110                           ;LAB4.c: 193: OcultarCursorLCD();
  1111   000C40  EC52  F009         	call	_OcultarCursorLCD	;wreg free
  1112                           
  1113                           ;LAB4.c: 194: DireccionaLCD(0x8B);
  1114   000C44  0E8B               	movlw	139
  1115   000C46  EC31  F009         	call	_DireccionaLCD
  1116                           
  1117                           ;LAB4.c: 197: EscribeLCD_n8(faltantes,2);
  1118   000C4A  0E02               	movlw	2
  1119   000C4C  6E19               	movwf	EscribeLCD_n8@b^0,c
  1120   000C4E  5029               	movf	_faltantes^0,w,c
  1121   000C50  EC4D  F006         	call	_EscribeLCD_n8
  1122                           
  1123                           ;LAB4.c: 202: if (contadas == objetivo) {
  1124   000C54  502A               	movf	_objetivo^0,w,c
  1125   000C56  1828               	xorwf	_contadas^0,w,c
  1126   000C58  A4D8               	btfss	status,2,c
  1127   000C5A  D7BB               	goto	l2349
  1128                           
  1129                           ;LAB4.c: 203: LATA2 = 1;
  1130   000C5C  8489               	bsf	3977,2,c	;volatile
  1131                           
  1132                           ;LAB4.c: 204: BorraLCD();
  1133   000C5E  EC66  F009         	call	_BorraLCD	;wreg free
  1134                           
  1135                           ;LAB4.c: 205: MensajeLCD_Var(*FIN);
  1136   000C62  C02C  F016         	movff	_FIN,MensajeLCD_Var@a
  1137   000C66  ECDF  F008         	call	_MensajeLCD_Var	;wreg free
  1138                           
  1139                           ;LAB4.c: 206: _delay((unsigned long)((1000)*(1000000/4000.0)));
  1140   000C6A  0E02               	movlw	2
  1141   000C6C  6E1F               	movwf	(??_main+1)^0,c
  1142   000C6E  0E45               	movlw	69
  1143   000C70  6E1E               	movwf	??_main^0,c
  1144   000C72  0EAA               	movlw	170
  1145   000C74                     u1857:
  1146   000C74  2EE8               	decfsz	wreg,f,c
  1147   000C76  D7FE               	bra	u1857
  1148   000C78  2E1E               	decfsz	??_main^0,f,c
  1149   000C7A  D7FC               	bra	u1857
  1150   000C7C  2E1F               	decfsz	(??_main+1)^0,f,c
  1151   000C7E  D7FA               	bra	u1857
  1152                           
  1153                           ;LAB4.c: 207: LATA2 = 0;
  1154   000C80  9489               	bcf	3977,2,c	;volatile
  1155                           
  1156                           ;LAB4.c: 209: };LAB4.c: 210: };LAB4.c: 217: ok = 0;
  1157                           
  1158                           ;LAB4.c: 208: break;
  1159   000C82  6A25               	clrf	_ok^0,c
  1160   000C84                     l2401:
  1161                           
  1162                           ;LAB4.c: 221: if(emergency == 1){
  1163   000C84  0423               	decf	_emergency^0,w,c
  1164   000C86  B4D8               	btfsc	status,2,c
  1165                           
  1166                           ;LAB4.c: 222: Emergencia();
  1167   000C88  EC07  F009         	call	_Emergencia	;wreg free
  1168                           
  1169                           ;LAB4.c: 223: };LAB4.c: 225: if(ok > 0){
  1170   000C8C  5025               	movf	_ok^0,w,c
  1171   000C8E  B4D8               	btfsc	status,2,c
  1172   000C90  D7F9               	goto	l2401
  1173                           
  1174                           ;LAB4.c: 226: ok = 0;
  1175   000C92  6A25               	clrf	_ok^0,c
  1176                           
  1177                           ;LAB4.c: 227: objetivo = 0;
  1178   000C94  6A2A               	clrf	_objetivo^0,c
  1179                           
  1180                           ;LAB4.c: 228: input =0;
  1181   000C96  6A27               	clrf	_input^0,c
  1182                           
  1183                           ;LAB4.c: 229: break;
  1184   000C98  D73F               	goto	l2285
  1185   000C9A                     __end_of_main:
  1186                           	callstack 0
  1187                           
  1188 ;; *************** function _OcultarCursorLCD *****************
  1189 ;; Defined at:
  1190 ;;		line 313 in file "LibLCDXC8.h"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;		None
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;		None
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, status,2, status,0, cstack
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1204 ;;      Params:         0       0       0       0       0       0       0       0       0
  1205 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1206 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1207 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1208 ;;Total ram usage:        0 bytes
  1209 ;; Hardware stack levels used: 1
  1210 ;; Hardware stack levels required when called: 6
  1211 ;; This function calls:
  1212 ;;		_EnviaDato
  1213 ;;		_HabilitaLCD
  1214 ;;		_RetardoLCD
  1215 ;; This function is called by:
  1216 ;;		_main
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text1
  1221   0012A4                     __ptext1:
  1222                           	callstack 0
  1223   0012A4                     _OcultarCursorLCD:
  1224                           	callstack 24
  1225                           
  1226                           ;LibLCDXC8.h: 314: LATA3 = 0;
  1227                           
  1228                           ;incstack = 0
  1229   0012A4  9689               	bcf	3977,3,c	;volatile
  1230                           
  1231                           ;LibLCDXC8.h: 315: EnviaDato(0x0C);
  1232   0012A6  0E0C               	movlw	12
  1233   0012A8  EC2B  F008         	call	_EnviaDato
  1234                           
  1235                           ;LibLCDXC8.h: 316: HabilitaLCD();
  1236   0012AC  EC70  F009         	call	_HabilitaLCD	;wreg free
  1237                           
  1238                           ;LibLCDXC8.h: 317: RetardoLCD(4);
  1239   0012B0  0E04               	movlw	4
  1240   0012B2  EC81  F007         	call	_RetardoLCD
  1241   0012B6  0012               	return		;funcret
  1242   0012B8                     __end_of_OcultarCursorLCD:
  1243                           	callstack 0
  1244                           
  1245 ;; *************** function _MostrarNumeros *****************
  1246 ;; Defined at:
  1247 ;;		line 445 in file "LAB4.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;		None
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, status,2, status,0, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1261 ;;      Params:         0       0       0       0       0       0       0       0       0
  1262 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1263 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1264 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1265 ;;Total ram usage:        0 bytes
  1266 ;; Hardware stack levels used: 1
  1267 ;; Hardware stack levels required when called: 5
  1268 ;; This function calls:
  1269 ;;		___lbmod
  1270 ;; This function is called by:
  1271 ;;		_main
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           	psect	text2
  1276   000FAE                     __ptext2:
  1277                           	callstack 0
  1278   000FAE                     _MostrarNumeros:
  1279                           	callstack 25
  1280                           
  1281                           ;LAB4.c: 448: LATD = contadas % 10;
  1282                           
  1283                           ;incstack = 0
  1284   000FAE  0E0A               	movlw	10
  1285   000FB0  6E11               	movwf	___lbmod@divisor^0,c
  1286   000FB2  5028               	movf	_contadas^0,w,c
  1287   000FB4  ECCB  F008         	call	___lbmod
  1288   000FB8  6E8C               	movwf	140,c	;volatile
  1289                           
  1290                           ;LAB4.c: 451: if(contadas<10){
  1291   000FBA  0E0A               	movlw	10
  1292   000FBC  6028               	cpfslt	_contadas^0,c
  1293   000FBE  D003               	goto	l2141
  1294                           
  1295                           ;LAB4.c: 453: LATE = 0b101;
  1296   000FC0  0E05               	movlw	5
  1297   000FC2  6E8D               	movwf	141,c	;volatile
  1298                           
  1299                           ;LAB4.c: 454: } else if(contadas<20){
  1300   000FC4  0012               	return	
  1301   000FC6                     l2141:
  1302   000FC6  0E14               	movlw	20
  1303   000FC8  6028               	cpfslt	_contadas^0,c
  1304   000FCA  D003               	goto	l2145
  1305                           
  1306                           ;LAB4.c: 456: LATE=0b100;
  1307   000FCC  0E04               	movlw	4
  1308   000FCE  6E8D               	movwf	141,c	;volatile
  1309                           
  1310                           ;LAB4.c: 457: } else if (contadas<30){
  1311   000FD0  0012               	return	
  1312   000FD2                     l2145:
  1313   000FD2  0E1E               	movlw	30
  1314   000FD4  6028               	cpfslt	_contadas^0,c
  1315   000FD6  D003               	goto	l2149
  1316                           
  1317                           ;LAB4.c: 459: LATE=0b110;
  1318   000FD8  0E06               	movlw	6
  1319   000FDA  6E8D               	movwf	141,c	;volatile
  1320                           
  1321                           ;LAB4.c: 460: } else if (contadas<40){
  1322   000FDC  0012               	return	
  1323   000FDE                     l2149:
  1324   000FDE  0E28               	movlw	40
  1325   000FE0  6028               	cpfslt	_contadas^0,c
  1326   000FE2  D003               	goto	l2153
  1327                           
  1328                           ;LAB4.c: 462: LATE=0b010;
  1329   000FE4  0E02               	movlw	2
  1330   000FE6  6E8D               	movwf	141,c	;volatile
  1331                           
  1332                           ;LAB4.c: 463: } else if (contadas<50){
  1333   000FE8  0012               	return	
  1334   000FEA                     l2153:
  1335   000FEA  0E32               	movlw	50
  1336   000FEC  6028               	cpfslt	_contadas^0,c
  1337   000FEE  D003               	goto	l2157
  1338                           
  1339                           ;LAB4.c: 465: LATE = 0b011;
  1340   000FF0  0E03               	movlw	3
  1341   000FF2  6E8D               	movwf	141,c	;volatile
  1342                           
  1343                           ;LAB4.c: 466: } else if (contadas<60){
  1344   000FF4  0012               	return	
  1345   000FF6                     l2157:
  1346   000FF6  0E3C               	movlw	60
  1347   000FF8  6028               	cpfslt	_contadas^0,c
  1348   000FFA  0012               	return	
  1349                           
  1350                           ;LAB4.c: 468: LATE = 0b111;
  1351   000FFC  0E07               	movlw	7
  1352   000FFE  6E8D               	movwf	141,c	;volatile
  1353   001000  0012               	return	
  1354   001002                     __end_of_MostrarNumeros:
  1355                           	callstack 0
  1356                           
  1357 ;; *************** function _MostrarCursorLCD *****************
  1358 ;; Defined at:
  1359 ;;		line 319 in file "LibLCDXC8.h"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;		None
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;		None
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  1    wreg      void 
  1366 ;; Registers used:
  1367 ;;		wreg, status,2, status,0, cstack
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1373 ;;      Params:         0       0       0       0       0       0       0       0       0
  1374 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1375 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1376 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1377 ;;Total ram usage:        0 bytes
  1378 ;; Hardware stack levels used: 1
  1379 ;; Hardware stack levels required when called: 6
  1380 ;; This function calls:
  1381 ;;		_EnviaDato
  1382 ;;		_HabilitaLCD
  1383 ;;		_RetardoLCD
  1384 ;; This function is called by:
  1385 ;;		_main
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           	psect	text3
  1390   0012B8                     __ptext3:
  1391                           	callstack 0
  1392   0012B8                     _MostrarCursorLCD:
  1393                           	callstack 24
  1394                           
  1395                           ;LibLCDXC8.h: 320: LATA3 = 0;
  1396                           
  1397                           ;incstack = 0
  1398   0012B8  9689               	bcf	3977,3,c	;volatile
  1399                           
  1400                           ;LibLCDXC8.h: 321: EnviaDato(0x0E);
  1401   0012BA  0E0E               	movlw	14
  1402   0012BC  EC2B  F008         	call	_EnviaDato
  1403                           
  1404                           ;LibLCDXC8.h: 322: HabilitaLCD();
  1405   0012C0  EC70  F009         	call	_HabilitaLCD	;wreg free
  1406                           
  1407                           ;LibLCDXC8.h: 323: RetardoLCD(4);
  1408   0012C4  0E04               	movlw	4
  1409   0012C6  EC81  F007         	call	_RetardoLCD
  1410   0012CA  0012               	return		;funcret
  1411   0012CC                     __end_of_MostrarCursorLCD:
  1412                           	callstack 0
  1413                           
  1414 ;; *************** function _InicializaLCD *****************
  1415 ;; Defined at:
  1416 ;;		line 74 in file "LibLCDXC8.h"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;		None
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;		None
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      void 
  1423 ;; Registers used:
  1424 ;;		wreg, status,2, status,0, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1430 ;;      Params:         0       0       0       0       0       0       0       0       0
  1431 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1432 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1433 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1434 ;;Total ram usage:        0 bytes
  1435 ;; Hardware stack levels used: 1
  1436 ;; Hardware stack levels required when called: 7
  1437 ;; This function calls:
  1438 ;;		_BorraLCD
  1439 ;;		_EnviaDato
  1440 ;;		_HabilitaLCD
  1441 ;;		_RetardoLCD
  1442 ;; This function is called by:
  1443 ;;		_main
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           	psect	text4
  1448   000E66                     __ptext4:
  1449                           	callstack 0
  1450   000E66                     _InicializaLCD:
  1451                           	callstack 23
  1452                           
  1453                           ;LibLCDXC8.h: 76: LATA3=0;
  1454                           
  1455                           ;incstack = 0
  1456   000E66  9689               	bcf	3977,3,c	;volatile
  1457                           
  1458                           ;LibLCDXC8.h: 77: if(interfaz==4)
  1459   000E68  0E04               	movlw	4
  1460   000E6A  182E               	xorwf	_interfaz^0,w,c
  1461   000E6C  A4D8               	btfss	status,2,c
  1462   000E6E  D004               	goto	l2023
  1463                           
  1464                           ;LibLCDXC8.h: 78: LATD=(LATD & 0b00001111) | 0x30;
  1465   000E70  508C               	movf	140,w,c	;volatile
  1466   000E72  0B0F               	andlw	15
  1467   000E74  0930               	iorlw	48
  1468   000E76  D001               	goto	L1
  1469   000E78                     l2023:
  1470                           
  1471                           ;LibLCDXC8.h: 79: else;LibLCDXC8.h: 80: LATD=0x3F;
  1472   000E78  0E3F               	movlw	63
  1473   000E7A                     L1:
  1474   000E7A  6E8C               	movwf	140,c	;volatile
  1475                           
  1476                           ;LibLCDXC8.h: 81: HabilitaLCD();
  1477   000E7C  EC70  F009         	call	_HabilitaLCD	;wreg free
  1478                           
  1479                           ;LibLCDXC8.h: 82: RetardoLCD(1);
  1480   000E80  0E01               	movlw	1
  1481   000E82  EC81  F007         	call	_RetardoLCD
  1482                           
  1483                           ;LibLCDXC8.h: 83: if(interfaz==4)
  1484   000E86  0E04               	movlw	4
  1485   000E88  182E               	xorwf	_interfaz^0,w,c
  1486   000E8A  A4D8               	btfss	status,2,c
  1487   000E8C  D004               	goto	l2033
  1488                           
  1489                           ;LibLCDXC8.h: 84: LATD=(LATD & 0b00001111) | 0x30;
  1490   000E8E  508C               	movf	140,w,c	;volatile
  1491   000E90  0B0F               	andlw	15
  1492   000E92  0930               	iorlw	48
  1493   000E94  D001               	goto	L2
  1494   000E96                     l2033:
  1495                           
  1496                           ;LibLCDXC8.h: 85: else;LibLCDXC8.h: 86: LATD=0x3F;
  1497   000E96  0E3F               	movlw	63
  1498   000E98                     L2:
  1499   000E98  6E8C               	movwf	140,c	;volatile
  1500                           
  1501                           ;LibLCDXC8.h: 87: HabilitaLCD();
  1502   000E9A  EC70  F009         	call	_HabilitaLCD	;wreg free
  1503                           
  1504                           ;LibLCDXC8.h: 88: RetardoLCD(3);
  1505   000E9E  0E03               	movlw	3
  1506   000EA0  EC81  F007         	call	_RetardoLCD
  1507                           
  1508                           ;LibLCDXC8.h: 89: if(interfaz==4)
  1509   000EA4  0E04               	movlw	4
  1510   000EA6  182E               	xorwf	_interfaz^0,w,c
  1511   000EA8  A4D8               	btfss	status,2,c
  1512   000EAA  D004               	goto	l2043
  1513                           
  1514                           ;LibLCDXC8.h: 90: LATD=(LATD & 0b00001111) | 0x30;
  1515   000EAC  508C               	movf	140,w,c	;volatile
  1516   000EAE  0B0F               	andlw	15
  1517   000EB0  0930               	iorlw	48
  1518   000EB2  D001               	goto	L3
  1519   000EB4                     l2043:
  1520                           
  1521                           ;LibLCDXC8.h: 91: else;LibLCDXC8.h: 92: LATD=0x3F;
  1522   000EB4  0E3F               	movlw	63
  1523   000EB6                     L3:
  1524   000EB6  6E8C               	movwf	140,c	;volatile
  1525                           
  1526                           ;LibLCDXC8.h: 93: HabilitaLCD();
  1527   000EB8  EC70  F009         	call	_HabilitaLCD	;wreg free
  1528                           
  1529                           ;LibLCDXC8.h: 94: RetardoLCD(4);
  1530   000EBC  0E04               	movlw	4
  1531   000EBE  EC81  F007         	call	_RetardoLCD
  1532                           
  1533                           ;LibLCDXC8.h: 95: if(interfaz==4){
  1534   000EC2  0E04               	movlw	4
  1535   000EC4  182E               	xorwf	_interfaz^0,w,c
  1536   000EC6  A4D8               	btfss	status,2,c
  1537   000EC8  D011               	goto	l2063
  1538                           
  1539                           ;LibLCDXC8.h: 96: LATD=(LATD & 0b00001111) | 0x20;
  1540   000ECA  508C               	movf	140,w,c	;volatile
  1541   000ECC  0B0F               	andlw	15
  1542   000ECE  0920               	iorlw	32
  1543   000ED0  6E8C               	movwf	140,c	;volatile
  1544                           
  1545                           ;LibLCDXC8.h: 97: HabilitaLCD();
  1546   000ED2  EC70  F009         	call	_HabilitaLCD	;wreg free
  1547                           
  1548                           ;LibLCDXC8.h: 98: RetardoLCD(4);
  1549   000ED6  0E04               	movlw	4
  1550   000ED8  EC81  F007         	call	_RetardoLCD
  1551                           
  1552                           ;LibLCDXC8.h: 99: EnviaDato(0x2F);
  1553   000EDC  0E2F               	movlw	47
  1554   000EDE  EC2B  F008         	call	_EnviaDato
  1555                           
  1556                           ;LibLCDXC8.h: 100: HabilitaLCD();
  1557   000EE2  EC70  F009         	call	_HabilitaLCD	;wreg free
  1558                           
  1559                           ;LibLCDXC8.h: 101: RetardoLCD(4);
  1560   000EE6  0E04               	movlw	4
  1561   000EE8  EC81  F007         	call	_RetardoLCD
  1562   000EEC                     l2063:
  1563                           
  1564                           ;LibLCDXC8.h: 102: };LibLCDXC8.h: 103: BorraLCD();
  1565   000EEC  EC66  F009         	call	_BorraLCD	;wreg free
  1566                           
  1567                           ;LibLCDXC8.h: 104: EnviaDato(0xF);
  1568   000EF0  0E0F               	movlw	15
  1569   000EF2  EC2B  F008         	call	_EnviaDato
  1570                           
  1571                           ;LibLCDXC8.h: 105: HabilitaLCD();
  1572   000EF6  EC70  F009         	call	_HabilitaLCD	;wreg free
  1573                           
  1574                           ;LibLCDXC8.h: 106: RetardoLCD(4);
  1575   000EFA  0E04               	movlw	4
  1576   000EFC  EC81  F007         	call	_RetardoLCD
  1577   000F00  0012               	return		;funcret
  1578   000F02                     __end_of_InicializaLCD:
  1579                           	callstack 0
  1580                           
  1581 ;; *************** function _EscribeLCD_n8 *****************
  1582 ;; Defined at:
  1583 ;;		line 148 in file "LibLCDXC8.h"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;  a               1    wreg     unsigned char 
  1586 ;;  b               1   24[COMRAM] unsigned char 
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;  a               1   28[COMRAM] unsigned char 
  1589 ;;  unidad          1   27[COMRAM] unsigned char 
  1590 ;;  decena          1   26[COMRAM] unsigned char 
  1591 ;;  centena         1   25[COMRAM] unsigned char 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg, status,2, status,0, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1601 ;;      Params:         1       0       0       0       0       0       0       0       0
  1602 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1603 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1604 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1605 ;;Total ram usage:        5 bytes
  1606 ;; Hardware stack levels used: 1
  1607 ;; Hardware stack levels required when called: 6
  1608 ;; This function calls:
  1609 ;;		_EnviaDato
  1610 ;;		_HabilitaLCD
  1611 ;;		_RetardoLCD
  1612 ;;		___lbdiv
  1613 ;;		___lbmod
  1614 ;; This function is called by:
  1615 ;;		_main
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           	psect	text5
  1620   000C9A                     __ptext5:
  1621                           	callstack 0
  1622   000C9A                     _EscribeLCD_n8:
  1623                           	callstack 24
  1624                           
  1625                           ;incstack = 0
  1626                           ;EscribeLCD_n8@a stored from wreg
  1627   000C9A  6E1D               	movwf	EscribeLCD_n8@a^0,c
  1628                           
  1629                           ;LibLCDXC8.h: 153: unsigned char centena,decena,unidad;;LibLCDXC8.h: 154: LATA3=1;
  1630   000C9C  8689               	bsf	3977,3,c	;volatile
  1631                           
  1632                           ;LibLCDXC8.h: 155: switch(b){
  1633   000C9E  D065               	goto	l2105
  1634   000CA0                     l2073:
  1635   000CA0  0E0A               	movlw	10
  1636   000CA2  6E11               	movwf	___lbmod@divisor^0,c
  1637   000CA4  501D               	movf	EscribeLCD_n8@a^0,w,c
  1638   000CA6  ECCB  F008         	call	___lbmod
  1639   000CAA  6E1C               	movwf	EscribeLCD_n8@unidad^0,c
  1640                           
  1641                           ;LibLCDXC8.h: 157: EnviaDato(unidad+48);
  1642   000CAC  501C               	movf	EscribeLCD_n8@unidad^0,w,c
  1643   000CAE  0F30               	addlw	48
  1644   000CB0  EC2B  F008         	call	_EnviaDato
  1645                           
  1646                           ;LibLCDXC8.h: 158: HabilitaLCD();
  1647   000CB4  EC70  F009         	call	_HabilitaLCD	;wreg free
  1648                           
  1649                           ;LibLCDXC8.h: 159: RetardoLCD(4);
  1650   000CB8  0E04               	movlw	4
  1651   000CBA  EC81  F007         	call	_RetardoLCD
  1652                           
  1653                           ;LibLCDXC8.h: 160: break;
  1654   000CBE  0012               	return	
  1655   000CC0                     l2079:
  1656   000CC0  0E0A               	movlw	10
  1657   000CC2  6E15               	movwf	___lbdiv@divisor^0,c
  1658   000CC4  0E64               	movlw	100
  1659   000CC6  6E11               	movwf	___lbmod@divisor^0,c
  1660   000CC8  501D               	movf	EscribeLCD_n8@a^0,w,c
  1661   000CCA  ECCB  F008         	call	___lbmod
  1662   000CCE  EC93  F008         	call	___lbdiv
  1663   000CD2  6E1B               	movwf	EscribeLCD_n8@decena^0,c
  1664                           
  1665                           ;LibLCDXC8.h: 162: unidad=a%10;
  1666   000CD4  0E0A               	movlw	10
  1667   000CD6  6E11               	movwf	___lbmod@divisor^0,c
  1668   000CD8  501D               	movf	EscribeLCD_n8@a^0,w,c
  1669   000CDA  ECCB  F008         	call	___lbmod
  1670   000CDE  6E1C               	movwf	EscribeLCD_n8@unidad^0,c
  1671                           
  1672                           ;LibLCDXC8.h: 163: EnviaDato(decena+48);
  1673   000CE0  501B               	movf	EscribeLCD_n8@decena^0,w,c
  1674   000CE2  0F30               	addlw	48
  1675   000CE4  EC2B  F008         	call	_EnviaDato
  1676                           
  1677                           ;LibLCDXC8.h: 164: HabilitaLCD();
  1678   000CE8  EC70  F009         	call	_HabilitaLCD	;wreg free
  1679                           
  1680                           ;LibLCDXC8.h: 165: RetardoLCD(4);
  1681   000CEC  0E04               	movlw	4
  1682   000CEE  EC81  F007         	call	_RetardoLCD
  1683                           
  1684                           ;LibLCDXC8.h: 166: EnviaDato(unidad+48);
  1685   000CF2  501C               	movf	EscribeLCD_n8@unidad^0,w,c
  1686   000CF4  0F30               	addlw	48
  1687   000CF6  EC2B  F008         	call	_EnviaDato
  1688                           
  1689                           ;LibLCDXC8.h: 167: HabilitaLCD();
  1690   000CFA  EC70  F009         	call	_HabilitaLCD	;wreg free
  1691                           
  1692                           ;LibLCDXC8.h: 168: RetardoLCD(4);
  1693   000CFE  0E04               	movlw	4
  1694   000D00  EC81  F007         	call	_RetardoLCD
  1695                           
  1696                           ;LibLCDXC8.h: 169: break;
  1697   000D04  0012               	return	
  1698   000D06                     l2089:
  1699   000D06  0E64               	movlw	100
  1700   000D08  6E15               	movwf	___lbdiv@divisor^0,c
  1701   000D0A  501D               	movf	EscribeLCD_n8@a^0,w,c
  1702   000D0C  EC93  F008         	call	___lbdiv
  1703   000D10  6E1A               	movwf	EscribeLCD_n8@centena^0,c
  1704                           
  1705                           ;LibLCDXC8.h: 171: decena=(a%100)/10;
  1706   000D12  0E0A               	movlw	10
  1707   000D14  6E15               	movwf	___lbdiv@divisor^0,c
  1708   000D16  0E64               	movlw	100
  1709   000D18  6E11               	movwf	___lbmod@divisor^0,c
  1710   000D1A  501D               	movf	EscribeLCD_n8@a^0,w,c
  1711   000D1C  ECCB  F008         	call	___lbmod
  1712   000D20  EC93  F008         	call	___lbdiv
  1713   000D24  6E1B               	movwf	EscribeLCD_n8@decena^0,c
  1714                           
  1715                           ;LibLCDXC8.h: 172: unidad=a%10;
  1716   000D26  0E0A               	movlw	10
  1717   000D28  6E11               	movwf	___lbmod@divisor^0,c
  1718   000D2A  501D               	movf	EscribeLCD_n8@a^0,w,c
  1719   000D2C  ECCB  F008         	call	___lbmod
  1720   000D30  6E1C               	movwf	EscribeLCD_n8@unidad^0,c
  1721                           
  1722                           ;LibLCDXC8.h: 173: EnviaDato(centena+48);
  1723   000D32  501A               	movf	EscribeLCD_n8@centena^0,w,c
  1724   000D34  0F30               	addlw	48
  1725   000D36  EC2B  F008         	call	_EnviaDato
  1726                           
  1727                           ;LibLCDXC8.h: 174: HabilitaLCD();
  1728   000D3A  EC70  F009         	call	_HabilitaLCD	;wreg free
  1729                           
  1730                           ;LibLCDXC8.h: 175: RetardoLCD(4);
  1731   000D3E  0E04               	movlw	4
  1732   000D40  EC81  F007         	call	_RetardoLCD
  1733                           
  1734                           ;LibLCDXC8.h: 176: EnviaDato(decena+48);
  1735   000D44  501B               	movf	EscribeLCD_n8@decena^0,w,c
  1736   000D46  0F30               	addlw	48
  1737   000D48  EC2B  F008         	call	_EnviaDato
  1738                           
  1739                           ;LibLCDXC8.h: 177: HabilitaLCD();
  1740   000D4C  EC70  F009         	call	_HabilitaLCD	;wreg free
  1741                           
  1742                           ;LibLCDXC8.h: 178: RetardoLCD(4);
  1743   000D50  0E04               	movlw	4
  1744   000D52  EC81  F007         	call	_RetardoLCD
  1745                           
  1746                           ;LibLCDXC8.h: 179: EnviaDato(unidad+48);
  1747   000D56  501C               	movf	EscribeLCD_n8@unidad^0,w,c
  1748   000D58  0F30               	addlw	48
  1749   000D5A  EC2B  F008         	call	_EnviaDato
  1750                           
  1751                           ;LibLCDXC8.h: 180: HabilitaLCD();
  1752   000D5E  EC70  F009         	call	_HabilitaLCD	;wreg free
  1753                           
  1754                           ;LibLCDXC8.h: 181: RetardoLCD(4);
  1755   000D62  0E04               	movlw	4
  1756   000D64  EC81  F007         	call	_RetardoLCD
  1757                           
  1758                           ;LibLCDXC8.h: 182: break;
  1759   000D68  0012               	return	
  1760   000D6A                     l2105:
  1761   000D6A  5019               	movf	EscribeLCD_n8@b^0,w,c
  1762                           
  1763                           ; Switch size 1, requested type "simple"
  1764                           ; Number of cases is 3, Range of values is 1 to 3
  1765                           ; switch strategies available:
  1766                           ; Name         Instructions Cycles
  1767                           ; simple_byte           10     6 (average)
  1768                           ;	Chosen strategy is simple_byte
  1769   000D6C  0A01               	xorlw	1	; case 1
  1770   000D6E  B4D8               	btfsc	status,2,c
  1771   000D70  D797               	goto	l2073
  1772   000D72  0A03               	xorlw	3	; case 2
  1773   000D74  B4D8               	btfsc	status,2,c
  1774   000D76  D7A4               	goto	l2079
  1775   000D78  0A01               	xorlw	1	; case 3
  1776   000D7A  A4D8               	btfss	status,2,c
  1777   000D7C  0012               	return	
  1778   000D7E  D7C3               	goto	l2089
  1779   000D80                     __end_of_EscribeLCD_n8:
  1780                           	callstack 0
  1781                           
  1782 ;; *************** function ___lbmod *****************
  1783 ;; Defined at:
  1784 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbmod.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;  dividend        1    wreg     unsigned char 
  1787 ;;  divisor         1   16[COMRAM] unsigned char 
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;  dividend        1   17[COMRAM] unsigned char 
  1790 ;;  rem             1   19[COMRAM] unsigned char 
  1791 ;;  counter         1   18[COMRAM] unsigned char 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      unsigned char 
  1794 ;; Registers used:
  1795 ;;		wreg, status,2, status,0
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1801 ;;      Params:         1       0       0       0       0       0       0       0       0
  1802 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1803 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1804 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1805 ;;Total ram usage:        4 bytes
  1806 ;; Hardware stack levels used: 1
  1807 ;; Hardware stack levels required when called: 4
  1808 ;; This function calls:
  1809 ;;		Nothing
  1810 ;; This function is called by:
  1811 ;;		_EscribeLCD_n8
  1812 ;;		_main
  1813 ;;		_MostrarNumeros
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text6
  1818   001196                     __ptext6:
  1819                           	callstack 0
  1820   001196                     ___lbmod:
  1821                           	callstack 26
  1822                           
  1823                           ;incstack = 0
  1824                           ;___lbmod@dividend stored from wreg
  1825   001196  6E12               	movwf	___lbmod@dividend^0,c
  1826   001198  0E08               	movlw	8
  1827   00119A  6E13               	movwf	___lbmod@counter^0,c
  1828   00119C  6A14               	clrf	___lbmod@rem^0,c
  1829   00119E                     l1939:
  1830   00119E  90D8               	bcf	status,0,c
  1831   0011A0  3412               	rlcf	___lbmod@dividend^0,w,c
  1832   0011A2  3414               	rlcf	___lbmod@rem^0,w,c
  1833   0011A4  6E14               	movwf	___lbmod@rem^0,c
  1834   0011A6  90D8               	bcf	status,0,c
  1835   0011A8  3612               	rlcf	___lbmod@dividend^0,f,c
  1836   0011AA  5011               	movf	___lbmod@divisor^0,w,c
  1837   0011AC  5C14               	subwf	___lbmod@rem^0,w,c
  1838   0011AE  A0D8               	btfss	status,0,c
  1839   0011B0  D002               	goto	l1947
  1840   0011B2  5011               	movf	___lbmod@divisor^0,w,c
  1841   0011B4  5E14               	subwf	___lbmod@rem^0,f,c
  1842   0011B6                     l1947:
  1843   0011B6  2E13               	decfsz	___lbmod@counter^0,f,c
  1844   0011B8  D7F2               	goto	l1939
  1845   0011BA  5014               	movf	___lbmod@rem^0,w,c
  1846   0011BC  0012               	return		;funcret
  1847   0011BE                     __end_of___lbmod:
  1848                           	callstack 0
  1849                           
  1850 ;; *************** function ___lbdiv *****************
  1851 ;; Defined at:
  1852 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbdiv.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  dividend        1    wreg     unsigned char 
  1855 ;;  divisor         1   20[COMRAM] unsigned char 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  dividend        1   21[COMRAM] unsigned char 
  1858 ;;  quotient        1   23[COMRAM] unsigned char 
  1859 ;;  counter         1   22[COMRAM] unsigned char 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      unsigned char 
  1862 ;; Registers used:
  1863 ;;		wreg, status,2, status,0
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1869 ;;      Params:         1       0       0       0       0       0       0       0       0
  1870 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1871 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1872 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1873 ;;Total ram usage:        4 bytes
  1874 ;; Hardware stack levels used: 1
  1875 ;; Hardware stack levels required when called: 4
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_EscribeLCD_n8
  1880 ;;		_main
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           	psect	text7
  1885   001126                     __ptext7:
  1886                           	callstack 0
  1887   001126                     ___lbdiv:
  1888                           	callstack 26
  1889                           
  1890                           ;incstack = 0
  1891                           ;___lbdiv@dividend stored from wreg
  1892   001126  6E16               	movwf	___lbdiv@dividend^0,c
  1893   001128  6A18               	clrf	___lbdiv@quotient^0,c
  1894   00112A  5015               	movf	___lbdiv@divisor^0,w,c
  1895   00112C  B4D8               	btfsc	status,2,c
  1896   00112E  D015               	goto	l1931
  1897   001130  0E01               	movlw	1
  1898   001132  6E17               	movwf	___lbdiv@counter^0,c
  1899   001134  D003               	goto	l1919
  1900   001136                     l1915:
  1901   001136  90D8               	bcf	status,0,c
  1902   001138  3615               	rlcf	___lbdiv@divisor^0,f,c
  1903   00113A  2A17               	incf	___lbdiv@counter^0,f,c
  1904   00113C                     l1919:
  1905   00113C  AE15               	btfss	___lbdiv@divisor^0,7,c
  1906   00113E  D7FB               	goto	l1915
  1907   001140                     u950:
  1908   001140  90D8               	bcf	status,0,c
  1909   001142  3618               	rlcf	___lbdiv@quotient^0,f,c
  1910   001144  5015               	movf	___lbdiv@divisor^0,w,c
  1911   001146  5C16               	subwf	___lbdiv@dividend^0,w,c
  1912   001148  A0D8               	btfss	status,0,c
  1913   00114A  D003               	goto	l1927
  1914   00114C  5015               	movf	___lbdiv@divisor^0,w,c
  1915   00114E  5E16               	subwf	___lbdiv@dividend^0,f,c
  1916   001150  8018               	bsf	___lbdiv@quotient^0,0,c
  1917   001152                     l1927:
  1918   001152  90D8               	bcf	status,0,c
  1919   001154  3215               	rrcf	___lbdiv@divisor^0,f,c
  1920   001156  2E17               	decfsz	___lbdiv@counter^0,f,c
  1921   001158  D7F3               	goto	u950
  1922   00115A                     l1931:
  1923   00115A  5018               	movf	___lbdiv@quotient^0,w,c
  1924   00115C  0012               	return		;funcret
  1925   00115E                     __end_of___lbdiv:
  1926                           	callstack 0
  1927                           
  1928 ;; *************** function _Emergencia *****************
  1929 ;; Defined at:
  1930 ;;		line 474 in file "LAB4.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;		None
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;		None
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1944 ;;      Params:         0       0       0       0       0       0       0       0       0
  1945 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1946 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1947 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1948 ;;Total ram usage:        0 bytes
  1949 ;; Hardware stack levels used: 1
  1950 ;; Hardware stack levels required when called: 8
  1951 ;; This function calls:
  1952 ;;		_BorraLCD
  1953 ;;		_DireccionaLCD
  1954 ;;		_MensajeLCD_Var
  1955 ;; This function is called by:
  1956 ;;		_main
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           	psect	text8
  1961   00120E                     __ptext8:
  1962                           	callstack 0
  1963   00120E                     _Emergencia:
  1964                           	callstack 22
  1965                           
  1966                           ;LAB4.c: 475: LATE = 0b001;
  1967                           
  1968                           ;incstack = 0
  1969   00120E  0E01               	movlw	1
  1970   001210  6E8D               	movwf	141,c	;volatile
  1971                           
  1972                           ;LAB4.c: 476: LATD = 8;
  1973   001212  0E08               	movlw	8
  1974   001214  6E8C               	movwf	140,c	;volatile
  1975                           
  1976                           ;LAB4.c: 477: BorraLCD();
  1977   001216  EC66  F009         	call	_BorraLCD	;wreg free
  1978                           
  1979                           ;LAB4.c: 478: MensajeLCD_Var("    EMERGENCY");
  1980   00121A  0E32               	movlw	low STR_7
  1981   00121C  6E16               	movwf	MensajeLCD_Var@a^0,c
  1982   00121E  ECDF  F008         	call	_MensajeLCD_Var	;wreg free
  1983                           
  1984                           ;LAB4.c: 479: DireccionaLCD(0xC0);
  1985   001222  0EC0               	movlw	192
  1986   001224  EC31  F009         	call	_DireccionaLCD
  1987                           
  1988                           ;LAB4.c: 480: MensajeLCD_Var("      STOP");
  1989   001228  0E57               	movlw	low STR_8
  1990   00122A  6E16               	movwf	MensajeLCD_Var@a^0,c
  1991   00122C  ECDF  F008         	call	_MensajeLCD_Var	;wreg free
  1992   001230                     l2133:
  1993                           
  1994                           ;LAB4.c: 483: GIE = 0;
  1995   001230  9EF2               	bcf	4082,7,c	;volatile
  1996   001232  D7FE               	goto	l2133
  1997   001234                     __end_of_Emergencia:
  1998                           	callstack 0
  1999                           
  2000 ;; *************** function _MensajeLCD_Var *****************
  2001 ;; Defined at:
  2002 ;;		line 235 in file "LibLCDXC8.h"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;  a               1   21[COMRAM] PTR unsigned char 
  2005 ;;		 -> STR_8(11), STR_7(14), STR_6(11), STR_5(12), 
  2006 ;;		 -> STR_4(16), STR_3(11), STR_2(16), STR_1(17), 
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;		None
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      void 
  2011 ;; Registers used:
  2012 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2018 ;;      Params:         1       0       0       0       0       0       0       0       0
  2019 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2020 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2021 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2022 ;;Total ram usage:        1 bytes
  2023 ;; Hardware stack levels used: 1
  2024 ;; Hardware stack levels required when called: 7
  2025 ;; This function calls:
  2026 ;;		_EscribeLCD_c
  2027 ;; This function is called by:
  2028 ;;		_main
  2029 ;;		_Emergencia
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           	psect	text9
  2034   0011BE                     __ptext9:
  2035                           	callstack 0
  2036   0011BE                     _MensajeLCD_Var:
  2037                           	callstack 23
  2038                           
  2039                           ;LibLCDXC8.h: 239: while (*a) {
  2040                           
  2041                           ;incstack = 0
  2042   0011BE  D009               	goto	l1899
  2043   0011C0                     l1895:
  2044                           
  2045                           ;LibLCDXC8.h: 240: EscribeLCD_c(*a);
  2046   0011C0  C016  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  2047   0011C4                     	if	1	;There is more than 1 active tblptr byte
  2048   0011C4  0E08               	movlw	high __smallconst
  2049   0011C6  6EF7               	movwf	tblptrh,c
  2050   0011C8                     	endif
  2051   0011C8                     	if	0	;tblptru may be non-zero
  2052   0011C8                     	endif
  2053   0011C8                     	if	0	;tblptru may be non-zero
  2054   0011C8                     	endif
  2055   0011C8  0008               	tblrd		*
  2056   0011CA  50F5               	movf	tablat,w,c
  2057   0011CC  EC26  F009         	call	_EscribeLCD_c
  2058                           
  2059                           ;LibLCDXC8.h: 241: a++;
  2060   0011D0  2A16               	incf	MensajeLCD_Var@a^0,f,c
  2061   0011D2                     l1899:
  2062   0011D2  C016  FFF6         	movff	MensajeLCD_Var@a,tblptrl
  2063   0011D6                     	if	1	;There is more than 1 active tblptr byte
  2064   0011D6  0E08               	movlw	high __smallconst
  2065   0011D8  6EF7               	movwf	tblptrh,c
  2066   0011DA                     	endif
  2067   0011DA                     	if	0	;tblptru may be non-zero
  2068   0011DA                     	endif
  2069   0011DA                     	if	0	;tblptru may be non-zero
  2070   0011DA                     	endif
  2071   0011DA  0008               	tblrd		*
  2072   0011DC  50F5               	movf	tablat,w,c
  2073   0011DE  0900               	iorlw	0
  2074   0011E0  B4D8               	btfsc	status,2,c
  2075   0011E2  0012               	return	
  2076   0011E4  D7ED               	goto	l1895
  2077   0011E6                     __end_of_MensajeLCD_Var:
  2078                           	callstack 0
  2079                           
  2080 ;; *************** function _EscribeLCD_c *****************
  2081 ;; Defined at:
  2082 ;;		line 139 in file "LibLCDXC8.h"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  a               1    wreg     unsigned char 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  a               1   20[COMRAM] unsigned char 
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  1    wreg      void 
  2089 ;; Registers used:
  2090 ;;		wreg, status,2, status,0, cstack
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2096 ;;      Params:         0       0       0       0       0       0       0       0       0
  2097 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2098 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2099 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2100 ;;Total ram usage:        1 bytes
  2101 ;; Hardware stack levels used: 1
  2102 ;; Hardware stack levels required when called: 6
  2103 ;; This function calls:
  2104 ;;		_EnviaDato
  2105 ;;		_HabilitaLCD
  2106 ;;		_RetardoLCD
  2107 ;; This function is called by:
  2108 ;;		_MensajeLCD_Var
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           	psect	text10
  2113   00124C                     __ptext10:
  2114                           	callstack 0
  2115   00124C                     _EscribeLCD_c:
  2116                           	callstack 23
  2117                           
  2118                           ;incstack = 0
  2119                           ;EscribeLCD_c@a stored from wreg
  2120   00124C  6E15               	movwf	EscribeLCD_c@a^0,c
  2121                           
  2122                           ;LibLCDXC8.h: 143: LATA3=1;
  2123   00124E  8689               	bsf	3977,3,c	;volatile
  2124                           
  2125                           ;LibLCDXC8.h: 144: EnviaDato(a);
  2126   001250  5015               	movf	EscribeLCD_c@a^0,w,c
  2127   001252  EC2B  F008         	call	_EnviaDato
  2128                           
  2129                           ;LibLCDXC8.h: 145: HabilitaLCD();
  2130   001256  EC70  F009         	call	_HabilitaLCD	;wreg free
  2131                           
  2132                           ;LibLCDXC8.h: 146: RetardoLCD(4);
  2133   00125A  0E04               	movlw	4
  2134   00125C  EC81  F007         	call	_RetardoLCD
  2135   001260  0012               	return		;funcret
  2136   001262                     __end_of_EscribeLCD_c:
  2137                           	callstack 0
  2138                           
  2139 ;; *************** function _DireccionaLCD *****************
  2140 ;; Defined at:
  2141 ;;		line 246 in file "LibLCDXC8.h"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  a               1    wreg     unsigned char 
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;  a               1   20[COMRAM] unsigned char 
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  1    wreg      void 
  2148 ;; Registers used:
  2149 ;;		wreg, status,2, status,0, cstack
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2155 ;;      Params:         0       0       0       0       0       0       0       0       0
  2156 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2157 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2158 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2159 ;;Total ram usage:        1 bytes
  2160 ;; Hardware stack levels used: 1
  2161 ;; Hardware stack levels required when called: 6
  2162 ;; This function calls:
  2163 ;;		_EnviaDato
  2164 ;;		_HabilitaLCD
  2165 ;;		_RetardoLCD
  2166 ;; This function is called by:
  2167 ;;		_main
  2168 ;;		_Emergencia
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text11
  2173   001262                     __ptext11:
  2174                           	callstack 0
  2175   001262                     _DireccionaLCD:
  2176                           	callstack 23
  2177                           
  2178                           ;incstack = 0
  2179                           ;DireccionaLCD@a stored from wreg
  2180   001262  6E15               	movwf	DireccionaLCD@a^0,c
  2181                           
  2182                           ;LibLCDXC8.h: 249: LATA3=0;
  2183   001264  9689               	bcf	3977,3,c	;volatile
  2184                           
  2185                           ;LibLCDXC8.h: 250: EnviaDato(a);
  2186   001266  5015               	movf	DireccionaLCD@a^0,w,c
  2187   001268  EC2B  F008         	call	_EnviaDato
  2188                           
  2189                           ;LibLCDXC8.h: 251: HabilitaLCD();
  2190   00126C  EC70  F009         	call	_HabilitaLCD	;wreg free
  2191                           
  2192                           ;LibLCDXC8.h: 252: RetardoLCD(4);
  2193   001270  0E04               	movlw	4
  2194   001272  EC81  F007         	call	_RetardoLCD
  2195   001276  0012               	return		;funcret
  2196   001278                     __end_of_DireccionaLCD:
  2197                           	callstack 0
  2198                           
  2199 ;; *************** function _BorraLCD *****************
  2200 ;; Defined at:
  2201 ;;		line 115 in file "LibLCDXC8.h"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;		None
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;		None
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		wreg, status,2, status,0, cstack
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2215 ;;      Params:         0       0       0       0       0       0       0       0       0
  2216 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2217 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2218 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2219 ;;Total ram usage:        0 bytes
  2220 ;; Hardware stack levels used: 1
  2221 ;; Hardware stack levels required when called: 6
  2222 ;; This function calls:
  2223 ;;		_EnviaDato
  2224 ;;		_HabilitaLCD
  2225 ;;		_RetardoLCD
  2226 ;; This function is called by:
  2227 ;;		_InicializaLCD
  2228 ;;		_main
  2229 ;;		_Emergencia
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           	psect	text12
  2234   0012CC                     __ptext12:
  2235                           	callstack 0
  2236   0012CC                     _BorraLCD:
  2237                           	callstack 23
  2238                           
  2239                           ;LibLCDXC8.h: 117: LATA3=0;
  2240                           
  2241                           ;incstack = 0
  2242   0012CC  9689               	bcf	3977,3,c	;volatile
  2243                           
  2244                           ;LibLCDXC8.h: 118: EnviaDato(0x01);
  2245   0012CE  0E01               	movlw	1
  2246   0012D0  EC2B  F008         	call	_EnviaDato
  2247                           
  2248                           ;LibLCDXC8.h: 119: HabilitaLCD();
  2249   0012D4  EC70  F009         	call	_HabilitaLCD	;wreg free
  2250                           
  2251                           ;LibLCDXC8.h: 120: RetardoLCD(2);
  2252   0012D8  0E02               	movlw	2
  2253   0012DA  EC81  F007         	call	_RetardoLCD
  2254   0012DE  0012               	return		;funcret
  2255   0012E0                     __end_of_BorraLCD:
  2256                           	callstack 0
  2257                           
  2258 ;; *************** function _EnviaDato *****************
  2259 ;; Defined at:
  2260 ;;		line 62 in file "LibLCDXC8.h"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  a               1    wreg     unsigned char 
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;  a               1   19[COMRAM] unsigned char 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2, status,0, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2274 ;;      Params:         0       0       0       0       0       0       0       0       0
  2275 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2276 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2277 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2278 ;;Total ram usage:        2 bytes
  2279 ;; Hardware stack levels used: 1
  2280 ;; Hardware stack levels required when called: 5
  2281 ;; This function calls:
  2282 ;;		_HabilitaLCD
  2283 ;;		_RetardoLCD
  2284 ;; This function is called by:
  2285 ;;		_InicializaLCD
  2286 ;;		_BorraLCD
  2287 ;;		_EscribeLCD_c
  2288 ;;		_EscribeLCD_n8
  2289 ;;		_DireccionaLCD
  2290 ;;		_OcultarCursorLCD
  2291 ;;		_MostrarCursorLCD
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text13
  2296   001056                     __ptext13:
  2297                           	callstack 0
  2298   001056                     _EnviaDato:
  2299                           	callstack 24
  2300                           
  2301                           ;incstack = 0
  2302                           ;EnviaDato@a stored from wreg
  2303   001056  6E14               	movwf	EnviaDato@a^0,c
  2304                           
  2305                           ;LibLCDXC8.h: 63: if(interfaz==4){
  2306   001058  0E04               	movlw	4
  2307   00105A  182E               	xorwf	_interfaz^0,w,c
  2308   00105C  A4D8               	btfss	status,2,c
  2309   00105E  D01A               	goto	l1853
  2310                           
  2311                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  2312   001060  C014  F013         	movff	EnviaDato@a,??_EnviaDato
  2313   001064  0EF0               	movlw	240
  2314   001066  1613               	andwf	??_EnviaDato^0,f,c
  2315   001068  508C               	movf	140,w,c	;volatile
  2316   00106A  0B0F               	andlw	15
  2317   00106C  1013               	iorwf	??_EnviaDato^0,w,c
  2318   00106E  6E8C               	movwf	140,c	;volatile
  2319                           
  2320                           ;LibLCDXC8.h: 65: HabilitaLCD();
  2321   001070  EC70  F009         	call	_HabilitaLCD	;wreg free
  2322                           
  2323                           ;LibLCDXC8.h: 66: RetardoLCD(1);
  2324   001074  0E01               	movlw	1
  2325   001076  EC81  F007         	call	_RetardoLCD
  2326                           
  2327                           ;LibLCDXC8.h: 67: LATD=(LATD & 0b00001111) | (a<<4);
  2328   00107A  C014  F013         	movff	EnviaDato@a,??_EnviaDato
  2329   00107E  3A13               	swapf	??_EnviaDato^0,f,c
  2330   001080  0EF0               	movlw	240
  2331   001082  1613               	andwf	??_EnviaDato^0,f,c
  2332   001084  508C               	movf	140,w,c	;volatile
  2333   001086  0B0F               	andlw	15
  2334   001088  1013               	iorwf	??_EnviaDato^0,w,c
  2335   00108A  6E8C               	movwf	140,c	;volatile
  2336                           
  2337                           ;LibLCDXC8.h: 69: RetardoLCD(1);
  2338   00108C  0E01               	movlw	1
  2339   00108E  EC81  F007         	call	_RetardoLCD
  2340                           
  2341                           ;LibLCDXC8.h: 70: }else if(interfaz==8){
  2342   001092  0012               	return	
  2343   001094                     l1853:
  2344   001094  0E08               	movlw	8
  2345   001096  182E               	xorwf	_interfaz^0,w,c
  2346   001098  A4D8               	btfss	status,2,c
  2347   00109A  0012               	return	
  2348                           
  2349                           ;LibLCDXC8.h: 71: LATD=a;
  2350   00109C  C014  FF8C         	movff	EnviaDato@a,3980	;volatile
  2351   0010A0  0012               	return		;funcret
  2352   0010A2                     __end_of_EnviaDato:
  2353                           	callstack 0
  2354                           
  2355 ;; *************** function _RetardoLCD *****************
  2356 ;; Defined at:
  2357 ;;		line 286 in file "LibLCDXC8.h"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  a               1    wreg     unsigned char 
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;  a               1   17[COMRAM] unsigned char 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      void 
  2364 ;; Registers used:
  2365 ;;		wreg, status,2, status,0
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2371 ;;      Params:         0       0       0       0       0       0       0       0       0
  2372 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2373 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2374 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2375 ;;Total ram usage:        2 bytes
  2376 ;; Hardware stack levels used: 1
  2377 ;; Hardware stack levels required when called: 4
  2378 ;; This function calls:
  2379 ;;		Nothing
  2380 ;; This function is called by:
  2381 ;;		_EnviaDato
  2382 ;;		_InicializaLCD
  2383 ;;		_BorraLCD
  2384 ;;		_EscribeLCD_c
  2385 ;;		_EscribeLCD_n8
  2386 ;;		_DireccionaLCD
  2387 ;;		_OcultarCursorLCD
  2388 ;;		_MostrarCursorLCD
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           	psect	text14
  2393   000F02                     __ptext14:
  2394                           	callstack 0
  2395   000F02                     _RetardoLCD:
  2396                           	callstack 25
  2397                           
  2398                           ;incstack = 0
  2399                           ;RetardoLCD@a stored from wreg
  2400   000F02  6E12               	movwf	RetardoLCD@a^0,c
  2401                           
  2402                           ;LibLCDXC8.h: 287: switch(a){
  2403   000F04  D01B               	goto	l1839
  2404   000F06                     l1829:
  2405   000F06  0E05               	movlw	5
  2406   000F08  6E11               	movwf	??_RetardoLCD^0,c
  2407   000F0A  0EDE               	movlw	222
  2408   000F0C                     u1867:
  2409   000F0C  2EE8               	decfsz	wreg,f,c
  2410   000F0E  D7FE               	bra	u1867
  2411   000F10  2E11               	decfsz	??_RetardoLCD^0,f,c
  2412   000F12  D7FC               	bra	u1867
  2413                           
  2414                           ;LibLCDXC8.h: 290: break;
  2415   000F14  0012               	return	
  2416   000F16                     l1831:
  2417   000F16  0E53               	movlw	83
  2418   000F18                     u1877:
  2419   000F18  2EE8               	decfsz	wreg,f,c
  2420   000F1A  D7FE               	bra	u1877
  2421   000F1C  0000               	nop	
  2422                           
  2423                           ;LibLCDXC8.h: 292: _delay((unsigned long)((640)*(1000000/4000000.0)));
  2424   000F1E  0E35               	movlw	53
  2425   000F20                     u1887:
  2426   000F20  2EE8               	decfsz	wreg,f,c
  2427   000F22  D7FE               	bra	u1887
  2428   000F24  0000               	nop	
  2429                           
  2430                           ;LibLCDXC8.h: 294: break;
  2431   000F26  0012               	return	
  2432   000F28                     l1833:
  2433   000F28  0E08               	movlw	8
  2434   000F2A                     u1897:
  2435   000F2A  2EE8               	decfsz	wreg,f,c
  2436   000F2C  D7FE               	bra	u1897
  2437   000F2E  0000               	nop	
  2438                           
  2439                           ;LibLCDXC8.h: 297: break;
  2440   000F30  0012               	return	
  2441   000F32                     l1835:
  2442   000F32  0E03               	movlw	3
  2443   000F34                     u1907:
  2444   000F34  2EE8               	decfsz	wreg,f,c
  2445   000F36  D7FE               	bra	u1907
  2446   000F38  0000               	nop	
  2447                           
  2448                           ;LibLCDXC8.h: 300: break;
  2449   000F3A  0012               	return	
  2450   000F3C                     l1839:
  2451   000F3C  5012               	movf	RetardoLCD@a^0,w,c
  2452                           
  2453                           ; Switch size 1, requested type "simple"
  2454                           ; Number of cases is 4, Range of values is 1 to 4
  2455                           ; switch strategies available:
  2456                           ; Name         Instructions Cycles
  2457                           ; simple_byte           13     7 (average)
  2458                           ;	Chosen strategy is simple_byte
  2459   000F3E  0A01               	xorlw	1	; case 1
  2460   000F40  B4D8               	btfsc	status,2,c
  2461   000F42  D7E1               	goto	l1829
  2462   000F44  0A03               	xorlw	3	; case 2
  2463   000F46  B4D8               	btfsc	status,2,c
  2464   000F48  D7E6               	goto	l1831
  2465   000F4A  0A01               	xorlw	1	; case 3
  2466   000F4C  B4D8               	btfsc	status,2,c
  2467   000F4E  D7EC               	goto	l1833
  2468   000F50  0A07               	xorlw	7	; case 4
  2469   000F52  A4D8               	btfss	status,2,c
  2470   000F54  0012               	return	
  2471   000F56  D7ED               	goto	l1835
  2472   000F58                     __end_of_RetardoLCD:
  2473                           	callstack 0
  2474                           
  2475 ;; *************** function _HabilitaLCD *****************
  2476 ;; Defined at:
  2477 ;;		line 108 in file "LibLCDXC8.h"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;		None
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;		None
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		wreg
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2491 ;;      Params:         0       0       0       0       0       0       0       0       0
  2492 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2493 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2494 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2495 ;;Total ram usage:        0 bytes
  2496 ;; Hardware stack levels used: 1
  2497 ;; Hardware stack levels required when called: 4
  2498 ;; This function calls:
  2499 ;;		Nothing
  2500 ;; This function is called by:
  2501 ;;		_EnviaDato
  2502 ;;		_InicializaLCD
  2503 ;;		_BorraLCD
  2504 ;;		_EscribeLCD_c
  2505 ;;		_EscribeLCD_n8
  2506 ;;		_DireccionaLCD
  2507 ;;		_OcultarCursorLCD
  2508 ;;		_MostrarCursorLCD
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	text15
  2513   0012E0                     __ptext15:
  2514                           	callstack 0
  2515   0012E0                     _HabilitaLCD:
  2516                           	callstack 25
  2517                           
  2518                           ;LibLCDXC8.h: 110: LATA5=1;
  2519                           
  2520                           ;incstack = 0
  2521   0012E0  8A89               	bsf	3977,5,c	;volatile
  2522                           
  2523                           ;LibLCDXC8.h: 111: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2524   0012E2  0E03               	movlw	3
  2525   0012E4                     u1917:
  2526   0012E4  2EE8               	decfsz	wreg,f,c
  2527   0012E6  D7FE               	bra	u1917
  2528   0012E8  0000               	nop	
  2529                           
  2530                           ;LibLCDXC8.h: 113: LATA5=0;
  2531   0012EA  9A89               	bcf	3977,5,c	;volatile
  2532   0012EC  0012               	return		;funcret
  2533   0012EE                     __end_of_HabilitaLCD:
  2534                           	callstack 0
  2535                           
  2536 ;; *************** function _ConfiguraLCD *****************
  2537 ;; Defined at:
  2538 ;;		line 58 in file "LibLCDXC8.h"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;  a               1    wreg     unsigned char 
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;  a               1   16[COMRAM] unsigned char 
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      void 
  2545 ;; Registers used:
  2546 ;;		wreg, status,2, status,0
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2552 ;;      Params:         0       0       0       0       0       0       0       0       0
  2553 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2554 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2555 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2556 ;;Total ram usage:        1 bytes
  2557 ;; Hardware stack levels used: 1
  2558 ;; Hardware stack levels required when called: 4
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_main
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text16
  2567   001234                     __ptext16:
  2568                           	callstack 0
  2569   001234                     _ConfiguraLCD:
  2570                           	callstack 26
  2571                           
  2572                           ;incstack = 0
  2573                           ;ConfiguraLCD@a stored from wreg
  2574   001234  6E11               	movwf	ConfiguraLCD@a^0,c
  2575                           
  2576                           ;LibLCDXC8.h: 59: if(a==4 | a ==8)
  2577   001236  0E04               	movlw	4
  2578   001238  1811               	xorwf	ConfiguraLCD@a^0,w,c
  2579   00123A  B4D8               	btfsc	status,2,c
  2580   00123C  D004               	goto	u1050
  2581   00123E  0E08               	movlw	8
  2582   001240  1811               	xorwf	ConfiguraLCD@a^0,w,c
  2583   001242  A4D8               	btfss	status,2,c
  2584   001244  0012               	return	
  2585   001246                     u1050:
  2586                           
  2587                           ;LibLCDXC8.h: 60: interfaz=a;
  2588   001246  C011  F02E         	movff	ConfiguraLCD@a,_interfaz
  2589   00124A  0012               	return		;funcret
  2590   00124C                     __end_of_ConfiguraLCD:
  2591                           	callstack 0
  2592                           
  2593 ;; *************** function _ISR *****************
  2594 ;; Defined at:
  2595 ;;		line 242 in file "LAB4.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;		None
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;		None
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  1    wreg      void 
  2602 ;; Registers used:
  2603 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2609 ;;      Params:         0       0       0       0       0       0       0       0       0
  2610 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2611 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2612 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2613 ;;Total ram usage:        3 bytes
  2614 ;; Hardware stack levels used: 1
  2615 ;; Hardware stack levels required when called: 3
  2616 ;; This function calls:
  2617 ;;		i2_DireccionaLCD
  2618 ;;		i2_EscribeLCD_c
  2619 ;;		i2_EscribeLCD_n8
  2620 ;;		i2_MostrarNumeros
  2621 ;; This function is called by:
  2622 ;;		Interrupt level 2
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           	psect	intcode
  2627   000008                     __pintcode:
  2628                           	callstack 0
  2629   000008                     _ISR:
  2630                           	callstack 22
  2631                           
  2632                           ;incstack = 0
  2633   000008  822F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2634   00000A  ED37  F004         	call	int_func,f	;refresh shadow registers
  2635                           
  2636                           	psect	intcode_body
  2637   00086E                     __pintcode_body:
  2638                           	callstack 22
  2639   00086E                     int_func:
  2640                           	callstack 22
  2641   00086E  0006               	pop		; remove dummy address from shadow register refresh
  2642   000870  CFF3 F00F          	movff	prodl,??_ISR+1
  2643   000874  CFF4 F010          	movff	prodh,??_ISR+2
  2644                           
  2645                           ;LAB4.c: 245: if(TMR0IF == 1){
  2646   000878  A4F2               	btfss	4082,2,c	;volatile
  2647   00087A  D01A               	goto	i2l242
  2648                           
  2649                           ;LAB4.c: 247: TMR0 = 49911;
  2650   00087C  0EC2               	movlw	194
  2651   00087E  6ED7               	movwf	215,c	;volatile
  2652   000880  0EF7               	movlw	247
  2653   000882  6ED6               	movwf	214,c	;volatile
  2654                           
  2655                           ;LAB4.c: 248: TMR0IF = 0;
  2656   000884  94F2               	bcf	4082,2,c	;volatile
  2657                           
  2658                           ;LAB4.c: 249: LATA1 = LATA1^1;
  2659   000886  B289               	btfsc	3977,1,c	;volatile
  2660   000888  D002               	goto	i2u138_40
  2661   00088A  8289               	bsf	3977,1,c	;volatile
  2662   00088C  D001               	goto	i2u139_45
  2663   00088E                     i2u138_40:
  2664   00088E  9289               	bcf	3977,1,c	;volatile
  2665   000890                     i2u139_45:
  2666                           
  2667                           ;LAB4.c: 253: if(contador == 0){
  2668   000890  5022               	movf	_contador^0,w,c
  2669   000892  B4D8               	btfsc	status,2,c
  2670                           
  2671                           ;LAB4.c: 255: LATA4 = 1;
  2672   000894  8889               	bsf	3977,4,c	;volatile
  2673                           
  2674                           ;LAB4.c: 256: };LAB4.c: 258: contador++;
  2675   000896  2A22               	incf	_contador^0,f,c
  2676                           
  2677                           ;LAB4.c: 260: if(contador >= 20 && contador < 40){
  2678   000898  0E13               	movlw	19
  2679   00089A  6422               	cpfsgt	_contador^0,c
  2680   00089C  D005               	goto	i2l2427
  2681   00089E  0E28               	movlw	40
  2682   0008A0  6022               	cpfslt	_contador^0,c
  2683   0008A2  D002               	goto	i2l2427
  2684                           
  2685                           ;LAB4.c: 262: LATA4 = 0;
  2686   0008A4  9889               	bcf	3977,4,c	;volatile
  2687                           
  2688                           ;LAB4.c: 263: } else if(contador >= 40){
  2689   0008A6  D004               	goto	i2l242
  2690   0008A8                     i2l2427:
  2691   0008A8  0E27               	movlw	39
  2692   0008AA  6422               	cpfsgt	_contador^0,c
  2693   0008AC  D001               	goto	i2l242
  2694   0008AE  0003               	sleep		;# 
  2695   0008B0                     i2l242:
  2696                           
  2697                           ;LAB4.c: 269: };LAB4.c: 270: };LAB4.c: 273: if(RBIF==1 ){
  2698   0008B0  A0F2               	btfss	4082,0,c	;volatile
  2699   0008B2  D0F6               	goto	i2l297
  2700                           
  2701                           ;LAB4.c: 275: if(PORTB!=0b11110000 && Iniciarpregunta == 1){
  2702   0008B4  0EF0               	movlw	240
  2703   0008B6  1881               	xorwf	129,w,c	;volatile
  2704   0008B8  B4D8               	btfsc	status,2,c
  2705   0008BA  D0D7               	goto	i2l2559
  2706   0008BC  0424               	decf	_Iniciarpregunta^0,w,c
  2707   0008BE  A4D8               	btfss	status,2,c
  2708   0008C0  D0D4               	goto	i2l2559
  2709                           
  2710                           ;LAB4.c: 278: LATB=0b11111110;
  2711   0008C2  0EFE               	movlw	254
  2712   0008C4  6E8A               	movwf	138,c	;volatile
  2713                           
  2714                           ;LAB4.c: 281: if(RB4==0) {
  2715   0008C6  B881               	btfsc	3969,4,c	;volatile
  2716   0008C8  D006               	goto	i2l249
  2717                           
  2718                           ;LAB4.c: 283: faltantes = objetivo;
  2719   0008CA  C02A  F029         	movff	_objetivo,_faltantes
  2720                           
  2721                           ;LAB4.c: 284: contadas = objetivo - faltantes;
  2722   0008CE  5029               	movf	_faltantes^0,w,c
  2723   0008D0  5C2A               	subwf	_objetivo^0,w,c
  2724   0008D2  6E28               	movwf	_contadas^0,c
  2725                           
  2726                           ;LAB4.c: 285: }
  2727   0008D4  D0C8               	goto	i2l2557
  2728   0008D6                     i2l249:
  2729                           
  2730                           ;LAB4.c: 286: else if(RB5==0){
  2731   0008D6  BA81               	btfsc	3969,5,c	;volatile
  2732   0008D8  D00B               	goto	i2l251
  2733                           
  2734                           ;LAB4.c: 287: input++;
  2735   0008DA  2A27               	incf	_input^0,f,c
  2736                           
  2737                           ;LAB4.c: 288: if(input <= 2){
  2738   0008DC  0E03               	movlw	3
  2739   0008DE  6027               	cpfslt	_input^0,c
  2740   0008E0  D0C2               	goto	i2l2557
  2741                           
  2742                           ;LAB4.c: 289: Tecla = 0;
  2743   0008E2  6A2B               	clrf	_Tecla^0,c
  2744                           
  2745                           ;LAB4.c: 290: EscribeLCD_n8(Tecla,1);
  2746   0008E4  0E01               	movlw	1
  2747   0008E6  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  2748   0008E8  502B               	movf	_Tecla^0,w,c
  2749   0008EA  ECC0  F006         	call	i2_EscribeLCD_n8
  2750                           
  2751                           ;LAB4.c: 291: };LAB4.c: 293: }
  2752   0008EE  D0BB               	goto	i2l2557
  2753   0008F0                     i2l251:
  2754                           
  2755                           ;LAB4.c: 294: else if(RB6==0){
  2756   0008F0  BC81               	btfsc	3969,6,c	;volatile
  2757   0008F2  D006               	goto	i2l254
  2758                           
  2759                           ;LAB4.c: 296: contadas = objetivo;
  2760   0008F4  C02A  F028         	movff	_objetivo,_contadas
  2761                           
  2762                           ;LAB4.c: 297: faltantes = 0;
  2763   0008F8  6A29               	clrf	_faltantes^0,c
  2764                           
  2765                           ;LAB4.c: 298: MostrarNumeros();
  2766   0008FA  EC01  F008         	call	i2_MostrarNumeros	;wreg free
  2767                           
  2768                           ;LAB4.c: 300: }
  2769   0008FE  D0B3               	goto	i2l2557
  2770   000900                     i2l254:
  2771                           
  2772                           ;LAB4.c: 301: else if(RB7==0){
  2773   000900  BE81               	btfsc	3969,7,c	;volatile
  2774   000902  D006               	goto	i2l2457
  2775                           
  2776                           ;LAB4.c: 303: LATA4 = LATA4^1;
  2777   000904  B889               	btfsc	3977,4,c	;volatile
  2778   000906  D002               	goto	i2u152_40
  2779   000908  8889               	bsf	3977,4,c	;volatile
  2780   00090A  D0AD               	goto	i2l2557
  2781   00090C                     i2u152_40:
  2782   00090C  9889               	bcf	3977,4,c	;volatile
  2783                           
  2784                           ;LAB4.c: 304: }
  2785   00090E  D0AB               	goto	i2l2557
  2786   000910                     i2l2457:
  2787                           
  2788                           ;LAB4.c: 305: else{;LAB4.c: 306: LATB=0b11111101;
  2789   000910  0EFD               	movlw	253
  2790   000912  6E8A               	movwf	138,c	;volatile
  2791                           
  2792                           ;LAB4.c: 309: if(RB4==0) {
  2793   000914  B881               	btfsc	3969,4,c	;volatile
  2794   000916  D00C               	goto	i2l258
  2795                           
  2796                           ;LAB4.c: 310: input++;
  2797   000918  2A27               	incf	_input^0,f,c
  2798                           
  2799                           ;LAB4.c: 311: if(input <= 2){
  2800   00091A  0E03               	movlw	3
  2801   00091C  6027               	cpfslt	_input^0,c
  2802   00091E  D0A3               	goto	i2l2557
  2803                           
  2804                           ;LAB4.c: 312: Tecla = 7;
  2805   000920  0E07               	movlw	7
  2806   000922  6E2B               	movwf	_Tecla^0,c
  2807                           
  2808                           ;LAB4.c: 313: EscribeLCD_n8(Tecla,1);
  2809   000924  0E01               	movlw	1
  2810   000926  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  2811   000928  502B               	movf	_Tecla^0,w,c
  2812   00092A  ECC0  F006         	call	i2_EscribeLCD_n8
  2813   00092E  D09B               	goto	i2l2557
  2814   000930                     i2l258:
  2815                           
  2816                           ;LAB4.c: 316: else if(RB5==0){
  2817   000930  BA81               	btfsc	3969,5,c	;volatile
  2818   000932  D00C               	goto	i2l261
  2819                           
  2820                           ;LAB4.c: 317: input++;
  2821   000934  2A27               	incf	_input^0,f,c
  2822                           
  2823                           ;LAB4.c: 318: if(input <=2){
  2824   000936  0E03               	movlw	3
  2825   000938  6027               	cpfslt	_input^0,c
  2826   00093A  D095               	goto	i2l2557
  2827                           
  2828                           ;LAB4.c: 319: Tecla = 8;
  2829   00093C  0E08               	movlw	8
  2830   00093E  6E2B               	movwf	_Tecla^0,c
  2831                           
  2832                           ;LAB4.c: 320: EscribeLCD_n8(Tecla,1);
  2833   000940  0E01               	movlw	1
  2834   000942  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  2835   000944  502B               	movf	_Tecla^0,w,c
  2836   000946  ECC0  F006         	call	i2_EscribeLCD_n8
  2837   00094A  D08D               	goto	i2l2557
  2838   00094C                     i2l261:
  2839                           
  2840                           ;LAB4.c: 323: else if(RB6==0){
  2841   00094C  BC81               	btfsc	3969,6,c	;volatile
  2842   00094E  D00C               	goto	i2l264
  2843                           
  2844                           ;LAB4.c: 324: input++;
  2845   000950  2A27               	incf	_input^0,f,c
  2846                           
  2847                           ;LAB4.c: 325: if(input <=2){
  2848   000952  0E03               	movlw	3
  2849   000954  6027               	cpfslt	_input^0,c
  2850   000956  D087               	goto	i2l2557
  2851                           
  2852                           ;LAB4.c: 326: Tecla = 9;
  2853   000958  0E09               	movlw	9
  2854   00095A  6E2B               	movwf	_Tecla^0,c
  2855                           
  2856                           ;LAB4.c: 327: EscribeLCD_n8(Tecla,1);
  2857   00095C  0E01               	movlw	1
  2858   00095E  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  2859   000960  502B               	movf	_Tecla^0,w,c
  2860   000962  ECC0  F006         	call	i2_EscribeLCD_n8
  2861   000966  D07F               	goto	i2l2557
  2862   000968                     i2l264:
  2863                           
  2864                           ;LAB4.c: 330: else if(RB7==0) {
  2865   000968  BE81               	btfsc	3969,7,c	;volatile
  2866   00096A  D01E               	goto	i2l2497
  2867                           
  2868                           ;LAB4.c: 334: if(input == 1){
  2869   00096C  0427               	decf	_input^0,w,c
  2870   00096E  A4D8               	btfss	status,2,c
  2871   000970  D00B               	goto	i2l2491
  2872                           
  2873                           ;LAB4.c: 335: DireccionaLCD(0xC0);
  2874   000972  0EC0               	movlw	192
  2875   000974  EC47  F009         	call	i2_DireccionaLCD
  2876                           
  2877                           ;LAB4.c: 337: EscribeLCD_c(' ');
  2878   000978  0E20               	movlw	32
  2879   00097A  EC3C  F009         	call	i2_EscribeLCD_c
  2880                           
  2881                           ;LAB4.c: 338: DireccionaLCD(0xC0);
  2882   00097E  0EC0               	movlw	192
  2883   000980  EC47  F009         	call	i2_DireccionaLCD
  2884   000984                     i2l2489:
  2885                           
  2886                           ;LAB4.c: 339: input --;
  2887   000984  0627               	decf	_input^0,f,c
  2888                           
  2889                           ;LAB4.c: 341: } else if (input == 2){
  2890   000986  D06F               	goto	i2l2557
  2891   000988                     i2l2491:
  2892   000988  0E02               	movlw	2
  2893   00098A  1827               	xorwf	_input^0,w,c
  2894   00098C  A4D8               	btfss	status,2,c
  2895   00098E  D00A               	goto	i2l270
  2896                           
  2897                           ;LAB4.c: 342: DireccionaLCD(0xC1);
  2898   000990  0EC1               	movlw	193
  2899   000992  EC47  F009         	call	i2_DireccionaLCD
  2900                           
  2901                           ;LAB4.c: 344: EscribeLCD_c(' ');
  2902   000996  0E20               	movlw	32
  2903   000998  EC3C  F009         	call	i2_EscribeLCD_c
  2904                           
  2905                           ;LAB4.c: 345: DireccionaLCD(0xC1);
  2906   00099C  0EC1               	movlw	193
  2907   00099E  EC47  F009         	call	i2_DireccionaLCD
  2908   0009A2  D7F0               	goto	i2l2489
  2909   0009A4                     i2l270:
  2910                           
  2911                           ;LAB4.c: 349: __nop();
  2912   0009A4  0000               	nop	
  2913   0009A6  D05F               	goto	i2l2557
  2914   0009A8                     i2l2497:
  2915                           
  2916                           ;LAB4.c: 354: else{;LAB4.c: 355: LATB=0b11111011;
  2917   0009A8  0EFB               	movlw	251
  2918   0009AA  6E8A               	movwf	138,c	;volatile
  2919                           
  2920                           ;LAB4.c: 358: if(RB4==0){
  2921   0009AC  B881               	btfsc	3969,4,c	;volatile
  2922   0009AE  D00C               	goto	i2l273
  2923                           
  2924                           ;LAB4.c: 359: input++;
  2925   0009B0  2A27               	incf	_input^0,f,c
  2926                           
  2927                           ;LAB4.c: 360: if(input <=2){
  2928   0009B2  0E03               	movlw	3
  2929   0009B4  6027               	cpfslt	_input^0,c
  2930   0009B6  D057               	goto	i2l2557
  2931                           
  2932                           ;LAB4.c: 361: Tecla = 4;
  2933   0009B8  0E04               	movlw	4
  2934   0009BA  6E2B               	movwf	_Tecla^0,c
  2935                           
  2936                           ;LAB4.c: 362: EscribeLCD_n8(Tecla,1);
  2937   0009BC  0E01               	movlw	1
  2938   0009BE  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  2939   0009C0  502B               	movf	_Tecla^0,w,c
  2940   0009C2  ECC0  F006         	call	i2_EscribeLCD_n8
  2941   0009C6  D04F               	goto	i2l2557
  2942   0009C8                     i2l273:
  2943                           
  2944                           ;LAB4.c: 365: else if(RB5==0){
  2945   0009C8  BA81               	btfsc	3969,5,c	;volatile
  2946   0009CA  D00C               	goto	i2l276
  2947                           
  2948                           ;LAB4.c: 366: input++;
  2949   0009CC  2A27               	incf	_input^0,f,c
  2950                           
  2951                           ;LAB4.c: 367: if(input <=2){
  2952   0009CE  0E03               	movlw	3
  2953   0009D0  6027               	cpfslt	_input^0,c
  2954   0009D2  D049               	goto	i2l2557
  2955                           
  2956                           ;LAB4.c: 368: Tecla = 5;
  2957   0009D4  0E05               	movlw	5
  2958   0009D6  6E2B               	movwf	_Tecla^0,c
  2959                           
  2960                           ;LAB4.c: 369: EscribeLCD_n8(Tecla,1);
  2961   0009D8  0E01               	movlw	1
  2962   0009DA  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  2963   0009DC  502B               	movf	_Tecla^0,w,c
  2964   0009DE  ECC0  F006         	call	i2_EscribeLCD_n8
  2965   0009E2  D041               	goto	i2l2557
  2966   0009E4                     i2l276:
  2967                           
  2968                           ;LAB4.c: 372: else if(RB6==0){
  2969   0009E4  BC81               	btfsc	3969,6,c	;volatile
  2970   0009E6  D00C               	goto	i2l279
  2971                           
  2972                           ;LAB4.c: 373: input++;
  2973   0009E8  2A27               	incf	_input^0,f,c
  2974                           
  2975                           ;LAB4.c: 374: if(input <=2){
  2976   0009EA  0E03               	movlw	3
  2977   0009EC  6027               	cpfslt	_input^0,c
  2978   0009EE  D03B               	goto	i2l2557
  2979                           
  2980                           ;LAB4.c: 375: Tecla = 6;
  2981   0009F0  0E06               	movlw	6
  2982   0009F2  6E2B               	movwf	_Tecla^0,c
  2983                           
  2984                           ;LAB4.c: 376: EscribeLCD_n8(Tecla,1);
  2985   0009F4  0E01               	movlw	1
  2986   0009F6  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  2987   0009F8  502B               	movf	_Tecla^0,w,c
  2988   0009FA  ECC0  F006         	call	i2_EscribeLCD_n8
  2989   0009FE  D033               	goto	i2l2557
  2990   000A00                     i2l279:
  2991                           
  2992                           ;LAB4.c: 379: else if(RB7==0){
  2993   000A00  BE81               	btfsc	3969,7,c	;volatile
  2994   000A02  D003               	goto	i2l2527
  2995                           
  2996                           ;LAB4.c: 381: emergency = 1;
  2997   000A04  0E01               	movlw	1
  2998   000A06  6E23               	movwf	_emergency^0,c
  2999                           
  3000                           ;LAB4.c: 382: }
  3001   000A08  D02E               	goto	i2l2557
  3002   000A0A                     i2l2527:
  3003                           
  3004                           ;LAB4.c: 383: else{;LAB4.c: 384: LATB=0b11110111;
  3005   000A0A  0EF7               	movlw	247
  3006   000A0C  6E8A               	movwf	138,c	;volatile
  3007                           
  3008                           ;LAB4.c: 387: if(RB4==0){
  3009   000A0E  B881               	btfsc	3969,4,c	;volatile
  3010   000A10  D00C               	goto	i2l284
  3011                           
  3012                           ;LAB4.c: 388: input++;
  3013   000A12  2A27               	incf	_input^0,f,c
  3014                           
  3015                           ;LAB4.c: 389: if(input <=2){
  3016   000A14  0E03               	movlw	3
  3017   000A16  6027               	cpfslt	_input^0,c
  3018   000A18  D026               	goto	i2l2557
  3019                           
  3020                           ;LAB4.c: 390: Tecla = 1;
  3021   000A1A  0E01               	movlw	1
  3022   000A1C  6E2B               	movwf	_Tecla^0,c
  3023                           
  3024                           ;LAB4.c: 391: EscribeLCD_n8(Tecla,1);
  3025   000A1E  0E01               	movlw	1
  3026   000A20  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3027   000A22  502B               	movf	_Tecla^0,w,c
  3028   000A24  ECC0  F006         	call	i2_EscribeLCD_n8
  3029   000A28  D01E               	goto	i2l2557
  3030   000A2A                     i2l284:
  3031                           
  3032                           ;LAB4.c: 394: else if(RB5==0){
  3033   000A2A  BA81               	btfsc	3969,5,c	;volatile
  3034   000A2C  D00C               	goto	i2l287
  3035                           
  3036                           ;LAB4.c: 395: input++;
  3037   000A2E  2A27               	incf	_input^0,f,c
  3038                           
  3039                           ;LAB4.c: 396: if(input <=2){
  3040   000A30  0E03               	movlw	3
  3041   000A32  6027               	cpfslt	_input^0,c
  3042   000A34  D018               	goto	i2l2557
  3043                           
  3044                           ;LAB4.c: 397: Tecla = 2;
  3045   000A36  0E02               	movlw	2
  3046   000A38  6E2B               	movwf	_Tecla^0,c
  3047                           
  3048                           ;LAB4.c: 398: EscribeLCD_n8(Tecla,1);
  3049   000A3A  0E01               	movlw	1
  3050   000A3C  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3051   000A3E  502B               	movf	_Tecla^0,w,c
  3052   000A40  ECC0  F006         	call	i2_EscribeLCD_n8
  3053   000A44  D010               	goto	i2l2557
  3054   000A46                     i2l287:
  3055                           
  3056                           ;LAB4.c: 401: else if(RB6==0){
  3057   000A46  BC81               	btfsc	3969,6,c	;volatile
  3058   000A48  D00C               	goto	i2l290
  3059                           
  3060                           ;LAB4.c: 402: input++;
  3061   000A4A  2A27               	incf	_input^0,f,c
  3062                           
  3063                           ;LAB4.c: 403: if(input <=2){
  3064   000A4C  0E03               	movlw	3
  3065   000A4E  6027               	cpfslt	_input^0,c
  3066   000A50  D00A               	goto	i2l2557
  3067                           
  3068                           ;LAB4.c: 404: Tecla = 3;
  3069   000A52  0E03               	movlw	3
  3070   000A54  6E2B               	movwf	_Tecla^0,c
  3071                           
  3072                           ;LAB4.c: 405: EscribeLCD_n8(Tecla,1);
  3073   000A56  0E01               	movlw	1
  3074   000A58  6E09               	movwf	i2EscribeLCD_n8@b^0,c
  3075   000A5A  502B               	movf	_Tecla^0,w,c
  3076   000A5C  ECC0  F006         	call	i2_EscribeLCD_n8
  3077   000A60  D002               	goto	i2l2557
  3078   000A62                     i2l290:
  3079                           
  3080                           ;LAB4.c: 408: else if(RB7==0){
  3081   000A62  AE81               	btfss	3969,7,c	;volatile
  3082                           
  3083                           ;LAB4.c: 410: ok++;
  3084   000A64  2A25               	incf	_ok^0,f,c
  3085   000A66                     i2l2557:
  3086                           
  3087                           ;LAB4.c: 411: };LAB4.c: 412: };LAB4.c: 413: };LAB4.c: 414: };LAB4.c: 415: LATB=0b1111000
      +                          0;
  3088   000A66  0EF0               	movlw	240
  3089   000A68  6E8A               	movwf	138,c	;volatile
  3090   000A6A                     i2l2559:
  3091                           
  3092                           ;LAB4.c: 418: };LAB4.c: 422: if(ok == 0){
  3093   000A6A  5025               	movf	_ok^0,w,c
  3094   000A6C  A4D8               	btfss	status,2,c
  3095   000A6E  D007               	goto	i2l2565
  3096                           
  3097                           ;LAB4.c: 423: if(input == 1){
  3098   000A70  0427               	decf	_input^0,w,c
  3099   000A72  A4D8               	btfss	status,2,c
  3100   000A74  D004               	goto	i2l2565
  3101                           
  3102                           ;LAB4.c: 424: objetivo = Tecla*10;
  3103   000A76  502B               	movf	_Tecla^0,w,c
  3104   000A78  0D0A               	mullw	10
  3105   000A7A  CFF3 F02A          	movff	prodl,_objetivo
  3106   000A7E                     i2l2565:
  3107                           
  3108                           ;LAB4.c: 426: };LAB4.c: 427: };LAB4.c: 429: if(input > 2 && block == 0){
  3109   000A7E  0E02               	movlw	2
  3110   000A80  6427               	cpfsgt	_input^0,c
  3111   000A82  D005               	goto	i2l2571
  3112   000A84  5026               	movf	_block^0,w,c
  3113   000A86  A4D8               	btfss	status,2,c
  3114   000A88  D002               	goto	i2l2571
  3115                           
  3116                           ;LAB4.c: 431: input =2;
  3117   000A8A  0E02               	movlw	2
  3118   000A8C  6E27               	movwf	_input^0,c
  3119   000A8E                     i2l2571:
  3120                           
  3121                           ;LAB4.c: 432: };LAB4.c: 434: _delay((unsigned long)((250)*(1000000/4000.0)));
  3122   000A8E  0E52               	movlw	82
  3123   000A90  6E0E               	movwf	??_ISR^0,c
  3124   000A92  0E2A               	movlw	42
  3125   000A94                     i2u192_47:
  3126   000A94  2EE8               	decfsz	wreg,f,c
  3127   000A96  D7FE               	bra	i2u192_47
  3128   000A98  2E0E               	decfsz	??_ISR^0,f,c
  3129   000A9A  D7FC               	bra	i2u192_47
  3130                           
  3131                           ;LAB4.c: 435: contador = 0;
  3132   000A9C  6A22               	clrf	_contador^0,c
  3133                           
  3134                           ;LAB4.c: 437: RBIF=0;
  3135   000A9E  90F2               	bcf	4082,0,c	;volatile
  3136   000AA0                     i2l297:
  3137   000AA0  C010  FFF4         	movff	??_ISR+2,prodh
  3138   000AA4  C00F  FFF3         	movff	??_ISR+1,prodl
  3139   000AA8  922F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3140   000AAA  0011               	retfie		f
  3141   000AAC                     __end_of_ISR:
  3142                           	callstack 0
  3143                           
  3144 ;; *************** function i2_MostrarNumeros *****************
  3145 ;; Defined at:
  3146 ;;		line 445 in file "LAB4.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;		None
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;		None
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, status,2, status,0, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3160 ;;      Params:         0       0       0       0       0       0       0       0       0
  3161 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3162 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3163 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3164 ;;Total ram usage:        0 bytes
  3165 ;; Hardware stack levels used: 1
  3166 ;; Hardware stack levels required when called: 1
  3167 ;; This function calls:
  3168 ;;		i2___lbmod
  3169 ;; This function is called by:
  3170 ;;		_ISR
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           	psect	text18
  3175   001002                     __ptext18:
  3176                           	callstack 0
  3177   001002                     i2_MostrarNumeros:
  3178                           	callstack 23
  3179                           
  3180                           ;LAB4.c: 448: LATD = contadas % 10;
  3181                           
  3182                           ;incstack = 0
  3183   001002  0E0A               	movlw	10
  3184   001004  6E01               	movwf	i2___lbmod@divisor^0,c
  3185   001006  5028               	movf	_contadas^0,w,c
  3186   001008  ECF3  F008         	call	i2___lbmod
  3187   00100C  6E8C               	movwf	140,c	;volatile
  3188                           
  3189                           ;LAB4.c: 451: if(contadas<10){
  3190   00100E  0E0A               	movlw	10
  3191   001010  6028               	cpfslt	_contadas^0,c
  3192   001012  D003               	goto	i2l2219
  3193                           
  3194                           ;LAB4.c: 453: LATE = 0b101;
  3195   001014  0E05               	movlw	5
  3196   001016  6E8D               	movwf	141,c	;volatile
  3197                           
  3198                           ;LAB4.c: 454: } else if(contadas<20){
  3199   001018  0012               	return	
  3200   00101A                     i2l2219:
  3201   00101A  0E14               	movlw	20
  3202   00101C  6028               	cpfslt	_contadas^0,c
  3203   00101E  D003               	goto	i2l2223
  3204                           
  3205                           ;LAB4.c: 456: LATE=0b100;
  3206   001020  0E04               	movlw	4
  3207   001022  6E8D               	movwf	141,c	;volatile
  3208                           
  3209                           ;LAB4.c: 457: } else if (contadas<30){
  3210   001024  0012               	return	
  3211   001026                     i2l2223:
  3212   001026  0E1E               	movlw	30
  3213   001028  6028               	cpfslt	_contadas^0,c
  3214   00102A  D003               	goto	i2l2227
  3215                           
  3216                           ;LAB4.c: 459: LATE=0b110;
  3217   00102C  0E06               	movlw	6
  3218   00102E  6E8D               	movwf	141,c	;volatile
  3219                           
  3220                           ;LAB4.c: 460: } else if (contadas<40){
  3221   001030  0012               	return	
  3222   001032                     i2l2227:
  3223   001032  0E28               	movlw	40
  3224   001034  6028               	cpfslt	_contadas^0,c
  3225   001036  D003               	goto	i2l2231
  3226                           
  3227                           ;LAB4.c: 462: LATE=0b010;
  3228   001038  0E02               	movlw	2
  3229   00103A  6E8D               	movwf	141,c	;volatile
  3230                           
  3231                           ;LAB4.c: 463: } else if (contadas<50){
  3232   00103C  0012               	return	
  3233   00103E                     i2l2231:
  3234   00103E  0E32               	movlw	50
  3235   001040  6028               	cpfslt	_contadas^0,c
  3236   001042  D003               	goto	i2l2235
  3237                           
  3238                           ;LAB4.c: 465: LATE = 0b011;
  3239   001044  0E03               	movlw	3
  3240   001046  6E8D               	movwf	141,c	;volatile
  3241                           
  3242                           ;LAB4.c: 466: } else if (contadas<60){
  3243   001048  0012               	return	
  3244   00104A                     i2l2235:
  3245   00104A  0E3C               	movlw	60
  3246   00104C  6028               	cpfslt	_contadas^0,c
  3247   00104E  0012               	return	
  3248                           
  3249                           ;LAB4.c: 468: LATE = 0b111;
  3250   001050  0E07               	movlw	7
  3251   001052  6E8D               	movwf	141,c	;volatile
  3252   001054  0012               	return	
  3253   001056                     __end_ofi2_MostrarNumeros:
  3254                           	callstack 0
  3255                           
  3256 ;; *************** function i2_EscribeLCD_n8 *****************
  3257 ;; Defined at:
  3258 ;;		line 148 in file "LibLCDXC8.h"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  a               1    wreg     unsigned char 
  3261 ;;  b               1    8[COMRAM] unsigned char 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;  a               1   12[COMRAM] unsigned char 
  3264 ;;  unidad          1   11[COMRAM] unsigned char 
  3265 ;;  decena          1   10[COMRAM] unsigned char 
  3266 ;;  centena         1    9[COMRAM] unsigned char 
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  1    wreg      void 
  3269 ;; Registers used:
  3270 ;;		wreg, status,2, status,0, cstack
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3276 ;;      Params:         1       0       0       0       0       0       0       0       0
  3277 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3279 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3280 ;;Total ram usage:        5 bytes
  3281 ;; Hardware stack levels used: 1
  3282 ;; Hardware stack levels required when called: 2
  3283 ;; This function calls:
  3284 ;;		i2_EnviaDato
  3285 ;;		i2_HabilitaLCD
  3286 ;;		i2_RetardoLCD
  3287 ;;		i2___lbdiv
  3288 ;;		i2___lbmod
  3289 ;; This function is called by:
  3290 ;;		_ISR
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text19
  3295   000D80                     __ptext19:
  3296                           	callstack 0
  3297   000D80                     i2_EscribeLCD_n8:
  3298                           	callstack 22
  3299                           
  3300                           ;incstack = 0
  3301                           ;i2EscribeLCD_n8@a stored from wreg
  3302   000D80  6E0D               	movwf	i2EscribeLCD_n8@a^0,c
  3303                           
  3304                           ;LibLCDXC8.h: 153: unsigned char centena,decena,unidad;;LibLCDXC8.h: 154: LATA3=1;
  3305   000D82  8689               	bsf	3977,3,c	;volatile
  3306                           
  3307                           ;LibLCDXC8.h: 155: switch(b){
  3308   000D84  D065               	goto	i2l2203
  3309   000D86                     i2l2171:
  3310   000D86  0E0A               	movlw	10
  3311   000D88  6E01               	movwf	i2___lbmod@divisor^0,c
  3312   000D8A  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  3313   000D8C  ECF3  F008         	call	i2___lbmod
  3314   000D90  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  3315                           
  3316                           ;LibLCDXC8.h: 157: EnviaDato(unidad+48);
  3317   000D92  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  3318   000D94  0F30               	addlw	48
  3319   000D96  EC51  F008         	call	i2_EnviaDato
  3320                           
  3321                           ;LibLCDXC8.h: 158: HabilitaLCD();
  3322   000D9A  EC77  F009         	call	i2_HabilitaLCD	;wreg free
  3323                           
  3324                           ;LibLCDXC8.h: 159: RetardoLCD(4);
  3325   000D9E  0E04               	movlw	4
  3326   000DA0  ECAC  F007         	call	i2_RetardoLCD
  3327                           
  3328                           ;LibLCDXC8.h: 160: break;
  3329   000DA4  0012               	return	
  3330   000DA6                     i2l2177:
  3331   000DA6  0E0A               	movlw	10
  3332   000DA8  6E05               	movwf	i2___lbdiv@divisor^0,c
  3333   000DAA  0E64               	movlw	100
  3334   000DAC  6E01               	movwf	i2___lbmod@divisor^0,c
  3335   000DAE  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  3336   000DB0  ECF3  F008         	call	i2___lbmod
  3337   000DB4  ECAF  F008         	call	i2___lbdiv
  3338   000DB8  6E0B               	movwf	i2EscribeLCD_n8@decena^0,c
  3339                           
  3340                           ;LibLCDXC8.h: 162: unidad=a%10;
  3341   000DBA  0E0A               	movlw	10
  3342   000DBC  6E01               	movwf	i2___lbmod@divisor^0,c
  3343   000DBE  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  3344   000DC0  ECF3  F008         	call	i2___lbmod
  3345   000DC4  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  3346                           
  3347                           ;LibLCDXC8.h: 163: EnviaDato(decena+48);
  3348   000DC6  500B               	movf	i2EscribeLCD_n8@decena^0,w,c
  3349   000DC8  0F30               	addlw	48
  3350   000DCA  EC51  F008         	call	i2_EnviaDato
  3351                           
  3352                           ;LibLCDXC8.h: 164: HabilitaLCD();
  3353   000DCE  EC77  F009         	call	i2_HabilitaLCD	;wreg free
  3354                           
  3355                           ;LibLCDXC8.h: 165: RetardoLCD(4);
  3356   000DD2  0E04               	movlw	4
  3357   000DD4  ECAC  F007         	call	i2_RetardoLCD
  3358                           
  3359                           ;LibLCDXC8.h: 166: EnviaDato(unidad+48);
  3360   000DD8  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  3361   000DDA  0F30               	addlw	48
  3362   000DDC  EC51  F008         	call	i2_EnviaDato
  3363                           
  3364                           ;LibLCDXC8.h: 167: HabilitaLCD();
  3365   000DE0  EC77  F009         	call	i2_HabilitaLCD	;wreg free
  3366                           
  3367                           ;LibLCDXC8.h: 168: RetardoLCD(4);
  3368   000DE4  0E04               	movlw	4
  3369   000DE6  ECAC  F007         	call	i2_RetardoLCD
  3370                           
  3371                           ;LibLCDXC8.h: 169: break;
  3372   000DEA  0012               	return	
  3373   000DEC                     i2l2187:
  3374   000DEC  0E64               	movlw	100
  3375   000DEE  6E05               	movwf	i2___lbdiv@divisor^0,c
  3376   000DF0  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  3377   000DF2  ECAF  F008         	call	i2___lbdiv
  3378   000DF6  6E0A               	movwf	i2EscribeLCD_n8@centena^0,c
  3379                           
  3380                           ;LibLCDXC8.h: 171: decena=(a%100)/10;
  3381   000DF8  0E0A               	movlw	10
  3382   000DFA  6E05               	movwf	i2___lbdiv@divisor^0,c
  3383   000DFC  0E64               	movlw	100
  3384   000DFE  6E01               	movwf	i2___lbmod@divisor^0,c
  3385   000E00  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  3386   000E02  ECF3  F008         	call	i2___lbmod
  3387   000E06  ECAF  F008         	call	i2___lbdiv
  3388   000E0A  6E0B               	movwf	i2EscribeLCD_n8@decena^0,c
  3389                           
  3390                           ;LibLCDXC8.h: 172: unidad=a%10;
  3391   000E0C  0E0A               	movlw	10
  3392   000E0E  6E01               	movwf	i2___lbmod@divisor^0,c
  3393   000E10  500D               	movf	i2EscribeLCD_n8@a^0,w,c
  3394   000E12  ECF3  F008         	call	i2___lbmod
  3395   000E16  6E0C               	movwf	i2EscribeLCD_n8@unidad^0,c
  3396                           
  3397                           ;LibLCDXC8.h: 173: EnviaDato(centena+48);
  3398   000E18  500A               	movf	i2EscribeLCD_n8@centena^0,w,c
  3399   000E1A  0F30               	addlw	48
  3400   000E1C  EC51  F008         	call	i2_EnviaDato
  3401                           
  3402                           ;LibLCDXC8.h: 174: HabilitaLCD();
  3403   000E20  EC77  F009         	call	i2_HabilitaLCD	;wreg free
  3404                           
  3405                           ;LibLCDXC8.h: 175: RetardoLCD(4);
  3406   000E24  0E04               	movlw	4
  3407   000E26  ECAC  F007         	call	i2_RetardoLCD
  3408                           
  3409                           ;LibLCDXC8.h: 176: EnviaDato(decena+48);
  3410   000E2A  500B               	movf	i2EscribeLCD_n8@decena^0,w,c
  3411   000E2C  0F30               	addlw	48
  3412   000E2E  EC51  F008         	call	i2_EnviaDato
  3413                           
  3414                           ;LibLCDXC8.h: 177: HabilitaLCD();
  3415   000E32  EC77  F009         	call	i2_HabilitaLCD	;wreg free
  3416                           
  3417                           ;LibLCDXC8.h: 178: RetardoLCD(4);
  3418   000E36  0E04               	movlw	4
  3419   000E38  ECAC  F007         	call	i2_RetardoLCD
  3420                           
  3421                           ;LibLCDXC8.h: 179: EnviaDato(unidad+48);
  3422   000E3C  500C               	movf	i2EscribeLCD_n8@unidad^0,w,c
  3423   000E3E  0F30               	addlw	48
  3424   000E40  EC51  F008         	call	i2_EnviaDato
  3425                           
  3426                           ;LibLCDXC8.h: 180: HabilitaLCD();
  3427   000E44  EC77  F009         	call	i2_HabilitaLCD	;wreg free
  3428                           
  3429                           ;LibLCDXC8.h: 181: RetardoLCD(4);
  3430   000E48  0E04               	movlw	4
  3431   000E4A  ECAC  F007         	call	i2_RetardoLCD
  3432                           
  3433                           ;LibLCDXC8.h: 182: break;
  3434   000E4E  0012               	return	
  3435   000E50                     i2l2203:
  3436   000E50  5009               	movf	i2EscribeLCD_n8@b^0,w,c
  3437                           
  3438                           ; Switch size 1, requested type "simple"
  3439                           ; Number of cases is 3, Range of values is 1 to 3
  3440                           ; switch strategies available:
  3441                           ; Name         Instructions Cycles
  3442                           ; simple_byte           10     6 (average)
  3443                           ;	Chosen strategy is simple_byte
  3444   000E52  0A01               	xorlw	1	; case 1
  3445   000E54  B4D8               	btfsc	status,2,c
  3446   000E56  D797               	goto	i2l2171
  3447   000E58  0A03               	xorlw	3	; case 2
  3448   000E5A  B4D8               	btfsc	status,2,c
  3449   000E5C  D7A4               	goto	i2l2177
  3450   000E5E  0A01               	xorlw	1	; case 3
  3451   000E60  A4D8               	btfss	status,2,c
  3452   000E62  0012               	return	
  3453   000E64  D7C3               	goto	i2l2187
  3454   000E66                     __end_ofi2_EscribeLCD_n8:
  3455                           	callstack 0
  3456                           
  3457 ;; *************** function i2___lbmod *****************
  3458 ;; Defined at:
  3459 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbmod.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;  dividend        1    wreg     unsigned char 
  3462 ;;  divisor         1    0[COMRAM] unsigned char 
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;  dividend        1    1[COMRAM] unsigned char 
  3465 ;;  rem             1    3[COMRAM] unsigned char 
  3466 ;;  counter         1    2[COMRAM] unsigned char 
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      unsigned char 
  3469 ;; Registers used:
  3470 ;;		wreg, status,2, status,0
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3476 ;;      Params:         1       0       0       0       0       0       0       0       0
  3477 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3479 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3480 ;;Total ram usage:        4 bytes
  3481 ;; Hardware stack levels used: 1
  3482 ;; This function calls:
  3483 ;;		Nothing
  3484 ;; This function is called by:
  3485 ;;		i2_EscribeLCD_n8
  3486 ;;		i2_MostrarNumeros
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text20
  3491   0011E6                     __ptext20:
  3492                           	callstack 0
  3493   0011E6                     i2___lbmod:
  3494                           	callstack 23
  3495                           
  3496                           ;incstack = 0
  3497                           ;i2___lbmod@dividend stored from wreg
  3498   0011E6  6E02               	movwf	i2___lbmod@dividend^0,c
  3499   0011E8  0E08               	movlw	8
  3500   0011EA  6E03               	movwf	i2___lbmod@counter^0,c
  3501   0011EC  6A04               	clrf	i2___lbmod@rem^0,c
  3502   0011EE                     i2l1999:
  3503   0011EE  90D8               	bcf	status,0,c
  3504   0011F0  3402               	rlcf	i2___lbmod@dividend^0,w,c
  3505   0011F2  3404               	rlcf	i2___lbmod@rem^0,w,c
  3506   0011F4  6E04               	movwf	i2___lbmod@rem^0,c
  3507   0011F6  90D8               	bcf	status,0,c
  3508   0011F8  3602               	rlcf	i2___lbmod@dividend^0,f,c
  3509   0011FA  5001               	movf	i2___lbmod@divisor^0,w,c
  3510   0011FC  5C04               	subwf	i2___lbmod@rem^0,w,c
  3511   0011FE  A0D8               	btfss	status,0,c
  3512   001200  D002               	goto	i2l2007
  3513   001202  5001               	movf	i2___lbmod@divisor^0,w,c
  3514   001204  5E04               	subwf	i2___lbmod@rem^0,f,c
  3515   001206                     i2l2007:
  3516   001206  2E03               	decfsz	i2___lbmod@counter^0,f,c
  3517   001208  D7F2               	goto	i2l1999
  3518   00120A  5004               	movf	i2___lbmod@rem^0,w,c
  3519   00120C  0012               	return		;funcret
  3520   00120E                     __end_ofi2___lbmod:
  3521                           	callstack 0
  3522                           
  3523 ;; *************** function i2___lbdiv *****************
  3524 ;; Defined at:
  3525 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbdiv.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  dividend        1    wreg     unsigned char 
  3528 ;;  divisor         1    4[COMRAM] unsigned char 
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;  dividend        1    5[COMRAM] unsigned char 
  3531 ;;  quotient        1    7[COMRAM] unsigned char 
  3532 ;;  counter         1    6[COMRAM] unsigned char 
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  1    wreg      unsigned char 
  3535 ;; Registers used:
  3536 ;;		wreg, status,2, status,0
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3542 ;;      Params:         1       0       0       0       0       0       0       0       0
  3543 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3544 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3545 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3546 ;;Total ram usage:        4 bytes
  3547 ;; Hardware stack levels used: 1
  3548 ;; This function calls:
  3549 ;;		Nothing
  3550 ;; This function is called by:
  3551 ;;		i2_EscribeLCD_n8
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           	psect	text21
  3556   00115E                     __ptext21:
  3557                           	callstack 0
  3558   00115E                     i2___lbdiv:
  3559                           	callstack 23
  3560                           
  3561                           ;incstack = 0
  3562                           ;i2___lbdiv@dividend stored from wreg
  3563   00115E  6E06               	movwf	i2___lbdiv@dividend^0,c
  3564   001160  6A08               	clrf	i2___lbdiv@quotient^0,c
  3565   001162  5005               	movf	i2___lbdiv@divisor^0,w,c
  3566   001164  B4D8               	btfsc	status,2,c
  3567   001166  D015               	goto	i2l1991
  3568   001168  0E01               	movlw	1
  3569   00116A  6E07               	movwf	i2___lbdiv@counter^0,c
  3570   00116C  D003               	goto	i2l1979
  3571   00116E                     i2l1975:
  3572   00116E  90D8               	bcf	status,0,c
  3573   001170  3605               	rlcf	i2___lbdiv@divisor^0,f,c
  3574   001172  2A07               	incf	i2___lbdiv@counter^0,f,c
  3575   001174                     i2l1979:
  3576   001174  AE05               	btfss	i2___lbdiv@divisor^0,7,c
  3577   001176  D7FB               	goto	i2l1975
  3578   001178                     i2u101_40:
  3579   001178  90D8               	bcf	status,0,c
  3580   00117A  3608               	rlcf	i2___lbdiv@quotient^0,f,c
  3581   00117C  5005               	movf	i2___lbdiv@divisor^0,w,c
  3582   00117E  5C06               	subwf	i2___lbdiv@dividend^0,w,c
  3583   001180  A0D8               	btfss	status,0,c
  3584   001182  D003               	goto	i2l1987
  3585   001184  5005               	movf	i2___lbdiv@divisor^0,w,c
  3586   001186  5E06               	subwf	i2___lbdiv@dividend^0,f,c
  3587   001188  8008               	bsf	i2___lbdiv@quotient^0,0,c
  3588   00118A                     i2l1987:
  3589   00118A  90D8               	bcf	status,0,c
  3590   00118C  3205               	rrcf	i2___lbdiv@divisor^0,f,c
  3591   00118E  2E07               	decfsz	i2___lbdiv@counter^0,f,c
  3592   001190  D7F3               	goto	i2u101_40
  3593   001192                     i2l1991:
  3594   001192  5008               	movf	i2___lbdiv@quotient^0,w,c
  3595   001194  0012               	return		;funcret
  3596   001196                     __end_ofi2___lbdiv:
  3597                           	callstack 0
  3598                           
  3599 ;; *************** function i2_EscribeLCD_c *****************
  3600 ;; Defined at:
  3601 ;;		line 139 in file "LibLCDXC8.h"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;  a               1    wreg     unsigned char 
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;  a               1    4[COMRAM] unsigned char 
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  1    wreg      void 
  3608 ;; Registers used:
  3609 ;;		wreg, status,2, status,0, cstack
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3615 ;;      Params:         0       0       0       0       0       0       0       0       0
  3616 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3617 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3618 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3619 ;;Total ram usage:        1 bytes
  3620 ;; Hardware stack levels used: 1
  3621 ;; Hardware stack levels required when called: 2
  3622 ;; This function calls:
  3623 ;;		i2_EnviaDato
  3624 ;;		i2_HabilitaLCD
  3625 ;;		i2_RetardoLCD
  3626 ;; This function is called by:
  3627 ;;		_ISR
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text22
  3632   001278                     __ptext22:
  3633                           	callstack 0
  3634   001278                     i2_EscribeLCD_c:
  3635                           	callstack 22
  3636                           
  3637                           ;incstack = 0
  3638                           ;i2EscribeLCD_c@a stored from wreg
  3639   001278  6E05               	movwf	i2EscribeLCD_c@a^0,c
  3640                           
  3641                           ;LibLCDXC8.h: 143: LATA3=1;
  3642   00127A  8689               	bsf	3977,3,c	;volatile
  3643                           
  3644                           ;LibLCDXC8.h: 144: EnviaDato(a);
  3645   00127C  5005               	movf	i2EscribeLCD_c@a^0,w,c
  3646   00127E  EC51  F008         	call	i2_EnviaDato
  3647                           
  3648                           ;LibLCDXC8.h: 145: HabilitaLCD();
  3649   001282  EC77  F009         	call	i2_HabilitaLCD	;wreg free
  3650                           
  3651                           ;LibLCDXC8.h: 146: RetardoLCD(4);
  3652   001286  0E04               	movlw	4
  3653   001288  ECAC  F007         	call	i2_RetardoLCD
  3654   00128C  0012               	return		;funcret
  3655   00128E                     __end_ofi2_EscribeLCD_c:
  3656                           	callstack 0
  3657                           
  3658 ;; *************** function i2_DireccionaLCD *****************
  3659 ;; Defined at:
  3660 ;;		line 246 in file "LibLCDXC8.h"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  a               1    wreg     unsigned char 
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;  a               1    4[COMRAM] unsigned char 
  3665 ;; Return value:  Size  Location     Type
  3666 ;;                  1    wreg      void 
  3667 ;; Registers used:
  3668 ;;		wreg, status,2, status,0, cstack
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3674 ;;      Params:         0       0       0       0       0       0       0       0       0
  3675 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3676 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3677 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3678 ;;Total ram usage:        1 bytes
  3679 ;; Hardware stack levels used: 1
  3680 ;; Hardware stack levels required when called: 2
  3681 ;; This function calls:
  3682 ;;		i2_EnviaDato
  3683 ;;		i2_HabilitaLCD
  3684 ;;		i2_RetardoLCD
  3685 ;; This function is called by:
  3686 ;;		_ISR
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           	psect	text23
  3691   00128E                     __ptext23:
  3692                           	callstack 0
  3693   00128E                     i2_DireccionaLCD:
  3694                           	callstack 22
  3695                           
  3696                           ;incstack = 0
  3697                           ;i2DireccionaLCD@a stored from wreg
  3698   00128E  6E05               	movwf	i2DireccionaLCD@a^0,c
  3699                           
  3700                           ;LibLCDXC8.h: 249: LATA3=0;
  3701   001290  9689               	bcf	3977,3,c	;volatile
  3702                           
  3703                           ;LibLCDXC8.h: 250: EnviaDato(a);
  3704   001292  5005               	movf	i2DireccionaLCD@a^0,w,c
  3705   001294  EC51  F008         	call	i2_EnviaDato
  3706                           
  3707                           ;LibLCDXC8.h: 251: HabilitaLCD();
  3708   001298  EC77  F009         	call	i2_HabilitaLCD	;wreg free
  3709                           
  3710                           ;LibLCDXC8.h: 252: RetardoLCD(4);
  3711   00129C  0E04               	movlw	4
  3712   00129E  ECAC  F007         	call	i2_RetardoLCD
  3713   0012A2  0012               	return		;funcret
  3714   0012A4                     __end_ofi2_DireccionaLCD:
  3715                           	callstack 0
  3716                           
  3717 ;; *************** function i2_EnviaDato *****************
  3718 ;; Defined at:
  3719 ;;		line 62 in file "LibLCDXC8.h"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;  a               1    wreg     unsigned char 
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;  a               1    3[COMRAM] unsigned char 
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  1    wreg      void 
  3726 ;; Registers used:
  3727 ;;		wreg, status,2, status,0, cstack
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3733 ;;      Params:         0       0       0       0       0       0       0       0       0
  3734 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3735 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3736 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3737 ;;Total ram usage:        2 bytes
  3738 ;; Hardware stack levels used: 1
  3739 ;; Hardware stack levels required when called: 1
  3740 ;; This function calls:
  3741 ;;		i2_HabilitaLCD
  3742 ;;		i2_RetardoLCD
  3743 ;; This function is called by:
  3744 ;;		i2_EscribeLCD_c
  3745 ;;		i2_EscribeLCD_n8
  3746 ;;		i2_DireccionaLCD
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text24
  3751   0010A2                     __ptext24:
  3752                           	callstack 0
  3753   0010A2                     i2_EnviaDato:
  3754                           	callstack 22
  3755                           
  3756                           ;incstack = 0
  3757                           ;i2EnviaDato@a stored from wreg
  3758   0010A2  6E04               	movwf	i2EnviaDato@a^0,c
  3759                           
  3760                           ;LibLCDXC8.h: 63: if(interfaz==4){
  3761   0010A4  0E04               	movlw	4
  3762   0010A6  182E               	xorwf	_interfaz^0,w,c
  3763   0010A8  A4D8               	btfss	status,2,c
  3764   0010AA  D01A               	goto	i2l1965
  3765                           
  3766                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3767   0010AC  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3768   0010B0  0EF0               	movlw	240
  3769   0010B2  1603               	andwf	??i2_EnviaDato^0,f,c
  3770   0010B4  508C               	movf	140,w,c	;volatile
  3771   0010B6  0B0F               	andlw	15
  3772   0010B8  1003               	iorwf	??i2_EnviaDato^0,w,c
  3773   0010BA  6E8C               	movwf	140,c	;volatile
  3774                           
  3775                           ;LibLCDXC8.h: 65: HabilitaLCD();
  3776   0010BC  EC77  F009         	call	i2_HabilitaLCD	;wreg free
  3777                           
  3778                           ;LibLCDXC8.h: 66: RetardoLCD(1);
  3779   0010C0  0E01               	movlw	1
  3780   0010C2  ECAC  F007         	call	i2_RetardoLCD
  3781                           
  3782                           ;LibLCDXC8.h: 67: LATD=(LATD & 0b00001111) | (a<<4);
  3783   0010C6  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3784   0010CA  3A03               	swapf	??i2_EnviaDato^0,f,c
  3785   0010CC  0EF0               	movlw	240
  3786   0010CE  1603               	andwf	??i2_EnviaDato^0,f,c
  3787   0010D0  508C               	movf	140,w,c	;volatile
  3788   0010D2  0B0F               	andlw	15
  3789   0010D4  1003               	iorwf	??i2_EnviaDato^0,w,c
  3790   0010D6  6E8C               	movwf	140,c	;volatile
  3791                           
  3792                           ;LibLCDXC8.h: 69: RetardoLCD(1);
  3793   0010D8  0E01               	movlw	1
  3794   0010DA  ECAC  F007         	call	i2_RetardoLCD
  3795                           
  3796                           ;LibLCDXC8.h: 70: }else if(interfaz==8){
  3797   0010DE  0012               	return	
  3798   0010E0                     i2l1965:
  3799   0010E0  0E08               	movlw	8
  3800   0010E2  182E               	xorwf	_interfaz^0,w,c
  3801   0010E4  A4D8               	btfss	status,2,c
  3802   0010E6  0012               	return	
  3803                           
  3804                           ;LibLCDXC8.h: 71: LATD=a;
  3805   0010E8  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  3806   0010EC  0012               	return		;funcret
  3807   0010EE                     __end_ofi2_EnviaDato:
  3808                           	callstack 0
  3809                           
  3810 ;; *************** function i2_RetardoLCD *****************
  3811 ;; Defined at:
  3812 ;;		line 286 in file "LibLCDXC8.h"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;  a               1    wreg     unsigned char 
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;  a               1    1[COMRAM] unsigned char 
  3817 ;; Return value:  Size  Location     Type
  3818 ;;                  1    wreg      void 
  3819 ;; Registers used:
  3820 ;;		wreg, status,2, status,0
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3826 ;;      Params:         0       0       0       0       0       0       0       0       0
  3827 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3828 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3829 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3830 ;;Total ram usage:        2 bytes
  3831 ;; Hardware stack levels used: 1
  3832 ;; This function calls:
  3833 ;;		Nothing
  3834 ;; This function is called by:
  3835 ;;		i2_EnviaDato
  3836 ;;		i2_EscribeLCD_c
  3837 ;;		i2_EscribeLCD_n8
  3838 ;;		i2_DireccionaLCD
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842                           	psect	text25
  3843   000F58                     __ptext25:
  3844                           	callstack 0
  3845   000F58                     i2_RetardoLCD:
  3846                           	callstack 23
  3847                           
  3848                           ;incstack = 0
  3849                           ;i2RetardoLCD@a stored from wreg
  3850   000F58  6E02               	movwf	i2RetardoLCD@a^0,c
  3851                           
  3852                           ;LibLCDXC8.h: 287: switch(a){
  3853   000F5A  D01B               	goto	i2l1883
  3854   000F5C                     i2l1873:
  3855   000F5C  0E05               	movlw	5
  3856   000F5E  6E01               	movwf	??i2_RetardoLCD^0,c
  3857   000F60  0EDE               	movlw	222
  3858   000F62                     i2u193_47:
  3859   000F62  2EE8               	decfsz	wreg,f,c
  3860   000F64  D7FE               	bra	i2u193_47
  3861   000F66  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  3862   000F68  D7FC               	bra	i2u193_47
  3863                           
  3864                           ;LibLCDXC8.h: 290: break;
  3865   000F6A  0012               	return	
  3866   000F6C                     i2l1875:
  3867   000F6C  0E53               	movlw	83
  3868   000F6E                     i2u194_47:
  3869   000F6E  2EE8               	decfsz	wreg,f,c
  3870   000F70  D7FE               	bra	i2u194_47
  3871   000F72  0000               	nop	
  3872                           
  3873                           ;LibLCDXC8.h: 292: _delay((unsigned long)((640)*(1000000/4000000.0)));
  3874   000F74  0E35               	movlw	53
  3875   000F76                     i2u195_47:
  3876   000F76  2EE8               	decfsz	wreg,f,c
  3877   000F78  D7FE               	bra	i2u195_47
  3878   000F7A  0000               	nop	
  3879                           
  3880                           ;LibLCDXC8.h: 294: break;
  3881   000F7C  0012               	return	
  3882   000F7E                     i2l1877:
  3883   000F7E  0E08               	movlw	8
  3884   000F80                     i2u196_47:
  3885   000F80  2EE8               	decfsz	wreg,f,c
  3886   000F82  D7FE               	bra	i2u196_47
  3887   000F84  0000               	nop	
  3888                           
  3889                           ;LibLCDXC8.h: 297: break;
  3890   000F86  0012               	return	
  3891   000F88                     i2l1879:
  3892   000F88  0E03               	movlw	3
  3893   000F8A                     i2u197_47:
  3894   000F8A  2EE8               	decfsz	wreg,f,c
  3895   000F8C  D7FE               	bra	i2u197_47
  3896   000F8E  0000               	nop	
  3897                           
  3898                           ;LibLCDXC8.h: 300: break;
  3899   000F90  0012               	return	
  3900   000F92                     i2l1883:
  3901   000F92  5002               	movf	i2RetardoLCD@a^0,w,c
  3902                           
  3903                           ; Switch size 1, requested type "simple"
  3904                           ; Number of cases is 4, Range of values is 1 to 4
  3905                           ; switch strategies available:
  3906                           ; Name         Instructions Cycles
  3907                           ; simple_byte           13     7 (average)
  3908                           ;	Chosen strategy is simple_byte
  3909   000F94  0A01               	xorlw	1	; case 1
  3910   000F96  B4D8               	btfsc	status,2,c
  3911   000F98  D7E1               	goto	i2l1873
  3912   000F9A  0A03               	xorlw	3	; case 2
  3913   000F9C  B4D8               	btfsc	status,2,c
  3914   000F9E  D7E6               	goto	i2l1875
  3915   000FA0  0A01               	xorlw	1	; case 3
  3916   000FA2  B4D8               	btfsc	status,2,c
  3917   000FA4  D7EC               	goto	i2l1877
  3918   000FA6  0A07               	xorlw	7	; case 4
  3919   000FA8  A4D8               	btfss	status,2,c
  3920   000FAA  0012               	return	
  3921   000FAC  D7ED               	goto	i2l1879
  3922   000FAE                     __end_ofi2_RetardoLCD:
  3923                           	callstack 0
  3924                           
  3925 ;; *************** function i2_HabilitaLCD *****************
  3926 ;; Defined at:
  3927 ;;		line 108 in file "LibLCDXC8.h"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;		None
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;		None
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  1    wreg      void 
  3934 ;; Registers used:
  3935 ;;		wreg
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3941 ;;      Params:         0       0       0       0       0       0       0       0       0
  3942 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3943 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3944 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3945 ;;Total ram usage:        0 bytes
  3946 ;; Hardware stack levels used: 1
  3947 ;; This function calls:
  3948 ;;		Nothing
  3949 ;; This function is called by:
  3950 ;;		i2_EnviaDato
  3951 ;;		i2_EscribeLCD_c
  3952 ;;		i2_EscribeLCD_n8
  3953 ;;		i2_DireccionaLCD
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text26
  3958   0012EE                     __ptext26:
  3959                           	callstack 0
  3960   0012EE                     i2_HabilitaLCD:
  3961                           	callstack 23
  3962                           
  3963                           ;LibLCDXC8.h: 110: LATA5=1;
  3964                           
  3965                           ;incstack = 0
  3966   0012EE  8A89               	bsf	3977,5,c	;volatile
  3967                           
  3968                           ;LibLCDXC8.h: 111: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3969   0012F0  0E03               	movlw	3
  3970   0012F2                     i2u198_47:
  3971   0012F2  2EE8               	decfsz	wreg,f,c
  3972   0012F4  D7FE               	bra	i2u198_47
  3973   0012F6  0000               	nop	
  3974                           
  3975                           ;LibLCDXC8.h: 113: LATA5=0;
  3976   0012F8  9A89               	bcf	3977,5,c	;volatile
  3977   0012FA  0012               	return		;funcret
  3978   0012FC                     __end_ofi2_HabilitaLCD:
  3979                           	callstack 0
  3980                           
  3981                           	psect	rparam
  3982   000001                     ___rparam_used  equ	1
  3983   000000                     ___param_bank   equ	0
  3984   000000                     __Lparam        equ	__Lrparam
  3985   000000                     __Hparam        equ	__Hrparam
  3986                           
  3987                           	psect	temp
  3988   00002F                     btemp:
  3989                           	callstack 0
  3990   00002F                     	ds	1
  3991   00002F                     int$flags       set	btemp
  3992   000030                     wtemp8          set	btemp+1
  3993   000030                     ttemp5          set	btemp+1
  3994   000033                     ttemp6          set	btemp+4
  3995   000037                     ttemp7          set	btemp+8
  3996                           
  3997                           	psect	idloc
  3998                           
  3999                           ;Config register IDLOC0 @ 0x200000
  4000                           ;	unspecified, using default values
  4001   200000                     	org	2097152
  4002   200000  FF                 	db	255
  4003                           
  4004                           ;Config register IDLOC1 @ 0x200001
  4005                           ;	unspecified, using default values
  4006   200001                     	org	2097153
  4007   200001  FF                 	db	255
  4008                           
  4009                           ;Config register IDLOC2 @ 0x200002
  4010                           ;	unspecified, using default values
  4011   200002                     	org	2097154
  4012   200002  FF                 	db	255
  4013                           
  4014                           ;Config register IDLOC3 @ 0x200003
  4015                           ;	unspecified, using default values
  4016   200003                     	org	2097155
  4017   200003  FF                 	db	255
  4018                           
  4019                           ;Config register IDLOC4 @ 0x200004
  4020                           ;	unspecified, using default values
  4021   200004                     	org	2097156
  4022   200004  FF                 	db	255
  4023                           
  4024                           ;Config register IDLOC5 @ 0x200005
  4025                           ;	unspecified, using default values
  4026   200005                     	org	2097157
  4027   200005  FF                 	db	255
  4028                           
  4029                           ;Config register IDLOC6 @ 0x200006
  4030                           ;	unspecified, using default values
  4031   200006                     	org	2097158
  4032   200006  FF                 	db	255
  4033                           
  4034                           ;Config register IDLOC7 @ 0x200007
  4035                           ;	unspecified, using default values
  4036   200007                     	org	2097159
  4037   200007  FF                 	db	255
  4038                           
  4039                           	psect	config
  4040                           
  4041                           ;Config register CONFIG1L @ 0x300000
  4042                           ;	unspecified, using default values
  4043                           ;	PLL Prescaler Selection bits
  4044                           ;	PLLDIV = 0x0, unprogrammed default
  4045                           ;	System Clock Postscaler Selection bits
  4046                           ;	CPUDIV = 0x0, unprogrammed default
  4047                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4048                           ;	USBDIV = 0x0, unprogrammed default
  4049   300000                     	org	3145728
  4050   300000  00                 	db	0
  4051                           
  4052                           ;Config register CONFIG1H @ 0x300001
  4053                           ;	Oscillator Selection bits
  4054                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4055                           ;	Fail-Safe Clock Monitor Enable bit
  4056                           ;	FCMEN = 0x0, unprogrammed default
  4057                           ;	Internal/External Oscillator Switchover bit
  4058                           ;	IESO = 0x0, unprogrammed default
  4059   300001                     	org	3145729
  4060   300001  09                 	db	9
  4061                           
  4062                           ;Config register CONFIG2L @ 0x300002
  4063                           ;	unspecified, using default values
  4064                           ;	Power-up Timer Enable bit
  4065                           ;	PWRT = 0x1, unprogrammed default
  4066                           ;	Brown-out Reset Enable bits
  4067                           ;	BOR = 0x3, unprogrammed default
  4068                           ;	Brown-out Reset Voltage bits
  4069                           ;	BORV = 0x3, unprogrammed default
  4070                           ;	USB Voltage Regulator Enable bit
  4071                           ;	VREGEN = 0x0, unprogrammed default
  4072   300002                     	org	3145730
  4073   300002  1F                 	db	31
  4074                           
  4075                           ;Config register CONFIG2H @ 0x300003
  4076                           ;	Watchdog Timer Enable bit
  4077                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4078                           ;	Watchdog Timer Postscale Select bits
  4079                           ;	WDTPS = 0xF, unprogrammed default
  4080   300003                     	org	3145731
  4081   300003  1E                 	db	30
  4082                           
  4083                           ; Padding undefined space
  4084   300004                     	org	3145732
  4085   300004  FF                 	db	255
  4086                           
  4087                           ;Config register CONFIG3H @ 0x300005
  4088                           ;	CCP2 MUX bit
  4089                           ;	CCP2MX = 0x1, unprogrammed default
  4090                           ;	PORTB A/D Enable bit
  4091                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4092                           ;	Low-Power Timer 1 Oscillator Enable bit
  4093                           ;	LPT1OSC = 0x0, unprogrammed default
  4094                           ;	MCLR Pin Enable bit
  4095                           ;	MCLRE = 0x1, unprogrammed default
  4096   300005                     	org	3145733
  4097   300005  81                 	db	129
  4098                           
  4099                           ;Config register CONFIG4L @ 0x300006
  4100                           ;	Stack Full/Underflow Reset Enable bit
  4101                           ;	STVREN = 0x1, unprogrammed default
  4102                           ;	Single-Supply ICSP Enable bit
  4103                           ;	LVP = OFF, Single-Supply ICSP disabled
  4104                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4105                           ;	ICPRT = 0x0, unprogrammed default
  4106                           ;	Extended Instruction Set Enable bit
  4107                           ;	XINST = 0x0, unprogrammed default
  4108                           ;	Background Debugger Enable bit
  4109                           ;	DEBUG = 0x1, unprogrammed default
  4110   300006                     	org	3145734
  4111   300006  81                 	db	129
  4112                           
  4113                           ; Padding undefined space
  4114   300007                     	org	3145735
  4115   300007  FF                 	db	255
  4116                           
  4117                           ;Config register CONFIG5L @ 0x300008
  4118                           ;	unspecified, using default values
  4119                           ;	Code Protection bit
  4120                           ;	CP0 = 0x1, unprogrammed default
  4121                           ;	Code Protection bit
  4122                           ;	CP1 = 0x1, unprogrammed default
  4123                           ;	Code Protection bit
  4124                           ;	CP2 = 0x1, unprogrammed default
  4125                           ;	Code Protection bit
  4126                           ;	CP3 = 0x1, unprogrammed default
  4127   300008                     	org	3145736
  4128   300008  0F                 	db	15
  4129                           
  4130                           ;Config register CONFIG5H @ 0x300009
  4131                           ;	unspecified, using default values
  4132                           ;	Boot Block Code Protection bit
  4133                           ;	CPB = 0x1, unprogrammed default
  4134                           ;	Data EEPROM Code Protection bit
  4135                           ;	CPD = 0x1, unprogrammed default
  4136   300009                     	org	3145737
  4137   300009  C0                 	db	192
  4138                           
  4139                           ;Config register CONFIG6L @ 0x30000A
  4140                           ;	unspecified, using default values
  4141                           ;	Write Protection bit
  4142                           ;	WRT0 = 0x1, unprogrammed default
  4143                           ;	Write Protection bit
  4144                           ;	WRT1 = 0x1, unprogrammed default
  4145                           ;	Write Protection bit
  4146                           ;	WRT2 = 0x1, unprogrammed default
  4147                           ;	Write Protection bit
  4148                           ;	WRT3 = 0x1, unprogrammed default
  4149   30000A                     	org	3145738
  4150   30000A  0F                 	db	15
  4151                           
  4152                           ;Config register CONFIG6H @ 0x30000B
  4153                           ;	unspecified, using default values
  4154                           ;	Configuration Register Write Protection bit
  4155                           ;	WRTC = 0x1, unprogrammed default
  4156                           ;	Boot Block Write Protection bit
  4157                           ;	WRTB = 0x1, unprogrammed default
  4158                           ;	Data EEPROM Write Protection bit
  4159                           ;	WRTD = 0x1, unprogrammed default
  4160   30000B                     	org	3145739
  4161   30000B  E0                 	db	224
  4162                           
  4163                           ;Config register CONFIG7L @ 0x30000C
  4164                           ;	unspecified, using default values
  4165                           ;	Table Read Protection bit
  4166                           ;	EBTR0 = 0x1, unprogrammed default
  4167                           ;	Table Read Protection bit
  4168                           ;	EBTR1 = 0x1, unprogrammed default
  4169                           ;	Table Read Protection bit
  4170                           ;	EBTR2 = 0x1, unprogrammed default
  4171                           ;	Table Read Protection bit
  4172                           ;	EBTR3 = 0x1, unprogrammed default
  4173   30000C                     	org	3145740
  4174   30000C  0F                 	db	15
  4175                           
  4176                           ;Config register CONFIG7H @ 0x30000D
  4177                           ;	unspecified, using default values
  4178                           ;	Boot Block Table Read Protection bit
  4179                           ;	EBTRB = 0x1, unprogrammed default
  4180   30000D                     	org	3145741
  4181   30000D  40                 	db	64
  4182                           tosu	equ	0xFFF
  4183                           tosh	equ	0xFFE
  4184                           tosl	equ	0xFFD
  4185                           stkptr	equ	0xFFC
  4186                           pclatu	equ	0xFFB
  4187                           pclath	equ	0xFFA
  4188                           pcl	equ	0xFF9
  4189                           tblptru	equ	0xFF8
  4190                           tblptrh	equ	0xFF7
  4191                           tblptrl	equ	0xFF6
  4192                           tablat	equ	0xFF5
  4193                           prodh	equ	0xFF4
  4194                           prodl	equ	0xFF3
  4195                           indf0	equ	0xFEF
  4196                           postinc0	equ	0xFEE
  4197                           postdec0	equ	0xFED
  4198                           preinc0	equ	0xFEC
  4199                           plusw0	equ	0xFEB
  4200                           fsr0h	equ	0xFEA
  4201                           fsr0l	equ	0xFE9
  4202                           wreg	equ	0xFE8
  4203                           indf1	equ	0xFE7
  4204                           postinc1	equ	0xFE6
  4205                           postdec1	equ	0xFE5
  4206                           preinc1	equ	0xFE4
  4207                           plusw1	equ	0xFE3
  4208                           fsr1h	equ	0xFE2
  4209                           fsr1l	equ	0xFE1
  4210                           bsr	equ	0xFE0
  4211                           indf2	equ	0xFDF
  4212                           postinc2	equ	0xFDE
  4213                           postdec2	equ	0xFDD
  4214                           preinc2	equ	0xFDC
  4215                           plusw2	equ	0xFDB
  4216                           fsr2h	equ	0xFDA
  4217                           fsr2l	equ	0xFD9
  4218                           status	equ	0xFD8

Data Sizes:
    Strings     108
    Constant    0
    Data        3
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      46
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    aux	PTR unsigned char [1] size(1) Largest target is 17
		 -> STR_1(CODE[17]), 

    FIN	PTR unsigned char [1] size(1) Largest target is 16
		 -> STR_2(CODE[16]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[16]), STR_3(CODE[11]), STR_4(CODE[16]), 
		 -> STR_5(CODE[12]), STR_6(CODE[11]), STR_7(CODE[14]), STR_8(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_EscribeLCD_n8
    _OcultarCursorLCD->_EnviaDato
    _MostrarNumeros->___lbmod
    _MostrarCursorLCD->_EnviaDato
    _InicializaLCD->_EnviaDato
    _EscribeLCD_n8->___lbdiv
    ___lbdiv->___lbmod
    _Emergencia->_MensajeLCD_Var
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_EscribeLCD_n8
    i2_MostrarNumeros->i2___lbmod
    i2_EscribeLCD_n8->i2___lbdiv
    i2___lbdiv->i2___lbmod
    i2_EscribeLCD_c->i2_EnviaDato
    i2_DireccionaLCD->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    3180
                                             29 COMRAM     4     4      0
                           _BorraLCD
                       _ConfiguraLCD
                      _DireccionaLCD
                         _Emergencia
                      _EscribeLCD_n8
                      _InicializaLCD
                     _MensajeLCD_Var
                   _MostrarCursorLCD
                     _MostrarNumeros
                   _OcultarCursorLCD
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (1) _OcultarCursorLCD                                     0     0      0     145
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _MostrarNumeros                                       0     0      0     174
                            ___lbmod
 ---------------------------------------------------------------------------------
 (1) _MostrarCursorLCD                                     0     0      0     145
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     290
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _EscribeLCD_n8                                        5     4      1     830
                                             24 COMRAM     5     4      1
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1     174
                                             16 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     174
                                             20 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Emergencia                                           0     0      0     546
                           _BorraLCD
                      _DireccionaLCD
                     _MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       1     0      1     227
                                             21 COMRAM     1     0      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0     174
                                             20 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     174
                                             20 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     145
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _EnviaDato                                            2     2      0     116
                                             18 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _RetardoLCD                                           2     2      0      29
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      87
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  3     3      0    1356
                                             13 COMRAM     3     3      0
                    i2_DireccionaLCD
                     i2_EscribeLCD_c
                    i2_EscribeLCD_n8
                   i2_MostrarNumeros
 ---------------------------------------------------------------------------------
 (7) i2_MostrarNumeros                                     0     0      0     173
                          i2___lbmod
 ---------------------------------------------------------------------------------
 (7) i2_EscribeLCD_n8                                      5     4      1     835
                                              8 COMRAM     5     4      1
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
                          i2___lbdiv
                          i2___lbmod
 ---------------------------------------------------------------------------------
 (8) i2___lbmod                                            4     3      1     173
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (8) i2___lbdiv                                            4     3      1     173
                                              4 COMRAM     4     3      1
                          i2___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (7) i2_EscribeLCD_c                                       1     1      0     174
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) i2_DireccionaLCD                                      1     1      0     174
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_EnviaDato                                          2     2      0     116
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_RetardoLCD                                         2     2      0      29
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _Emergencia
     _BorraLCD
     _DireccionaLCD
     _MensajeLCD_Var
       _EscribeLCD_c
         _EnviaDato
         _HabilitaLCD
         _RetardoLCD
   _EscribeLCD_n8
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
     ___lbdiv
       ___lbmod (ARG)
     ___lbmod
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _MensajeLCD_Var
   _MostrarCursorLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _MostrarNumeros
     ___lbmod
   _OcultarCursorLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   ___lbdiv
   ___lbmod

 _ISR (ROOT)
   i2_DireccionaLCD
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_EscribeLCD_c
     i2_EnviaDato
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_EscribeLCD_n8
     i2_EnviaDato
     i2_HabilitaLCD
     i2_RetardoLCD
     i2___lbdiv
       i2___lbmod (ARG)
     i2___lbmod
   i2_MostrarNumeros
     i2___lbmod

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITBIGSFRlh        112      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     33      46     48.9%
BITBIGSFRll         32      0       0      0.0%
BITBIGSFRh          14      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      46      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Feb 27 02:18:49 2025

        i2DireccionaLCD@a 0005                        _RI 7E84          i2EscribeLCD_n8@a 000D  
        i2EscribeLCD_n8@b 0009                EnviaDato@a 0014                        _ok 0025  
          main@Actual_RA0 0021             _InicializaLCD 0E66                       _GIE 7F97  
                     _FIN 002C                       _RA0 7C00                       _RB4 7C0C  
                     _RB5 7C0D                       _RB6 7C0E                       _RB7 7C0F  
                     _ISR 0008                       u950 1140                       _aux 002D  
                     wreg 0FE8                      ?_ISR 0001          ??i2_EscribeLCD_c 0005  
                    l2023 0E78                      l2105 0D6A                      l2033 0E96  
                    l2043 0EB4                      l2133 1230                      l2141 0FC6  
                    l2063 0EEC                      l2073 0CA0                      l2153 0FEA  
                    l2145 0FD2                      l2401 0C84                      l2305 0B3E  
                    l2157 0FF6                      l2149 0FDE                      l2317 0B60  
                    l2309 0B46                      l2079 0CC0                      l2327 0B8E  
                    l2089 0D06                      l2349 0BD2                      l2285 0B18  
                    l1831 0F16                      l2279 0B0E                      l1833 0F28  
                    l1835 0F32                      l1915 1136                      l1931 115A  
                    l2379 0C38                      l1829 0F06                      l1853 1094  
                    l1839 0F3C                      l1927 1152                      l1919 113C  
                    l1947 11B6                      l1939 119E                      l1895 11C0  
                    l1899 11D2                      STR_1 0801                      STR_2 0812  
                    STR_3 0862                      STR_4 0822                      STR_5 0840  
                    STR_6 084C                      STR_7 0832                      STR_8 0857  
                    u1050 1246                      _LATA 0F89                      _LATB 0F8A  
                    _LATD 0F8C                      _LATE 0F8D                      u1817 0B04  
                    u1907 0F34                      u1827 0B80                      u1917 12E4  
                    u1837 0BFE                      u1847 0C2C                      u1857 0C74  
                    u1867 0F0C                      u1877 0F18                      u1887 0F20  
                    _RBIE 7F93                      _RBIF 7F90                      u1897 0F2A  
                    _RBPU 7F8F                      _TMR0 0FD6            ??_EscribeLCD_c 0015  
                    _main 0AAC                      btemp 002F                      prodh 0FF4  
                    prodl 0FF3                      start 000E              ___param_bank 0000  
                   ??_ISR 000E           i2_DireccionaLCD 128E         ??i2_EscribeLCD_n8 000A  
          ?_InicializaLCD 0001                     ?_main 0001           __end_of___lbdiv 115E  
           EscribeLCD_c@a 0015           __end_of___lbmod 11BE                     _T0CON 0FD5  
                   _LATA1 7C49                     _LATA2 7C4A                     _LATA3 7C4B  
                   _LATA4 7C4C                     _LATA5 7C4D                     i2l242 08B0  
                   i2l251 08F0                     i2l261 094C                     i2l270 09A4  
                   i2l254 0900                     i2l264 0968                     i2l273 09C8  
                   i2l249 08D6                     i2l290 0A62                     i2l258 0930  
                   i2l284 0A2A                     i2l276 09E4                     i2l287 0A46  
                   i2l279 0A00                     i2l297 0AA0                     _PORTB 0F81  
                   _TRISA 0F92                     _TRISB 0F93                     _TRISD 0F95  
                   _TRISE 0F96                _Emergencia 120E           ??_EscribeLCD_n8 001A  
                   _Tecla 002B                     _block 0026                     _input 0027  
                   tablat 0FF5           main@Antiguo_RA0 0020               _HabilitaLCD 12E0  
                   ttemp5 0030                     ttemp6 0033                     ttemp7 0037  
                   status 0FD8                     wtemp8 0030             i2___lbmod@rem 0004  
         ___lbdiv@divisor 0015           ___lbdiv@counter 0017          __end_of_BorraLCD 12E0  
         __initialization 10EE           _Iniciarpregunta 0024              __end_of_main 0C9A  
                  ??_main 001E      __end_of_ConfiguraLCD 124C             __activetblptr 0002  
                  _ADCON1 0FC1            DireccionaLCD@a 0015            EscribeLCD_n8@a 001D  
          EscribeLCD_n8@b 0019                    i2l2007 1206                    i2l2203 0E50  
                  i2l2231 103E                    i2l2223 1026                    i2l2171 0D86  
                  i2l2235 104A                    i2l2227 1032                    i2l2219 101A  
                  i2l2177 0DA6                    i2l2187 0DEC                    i2l2427 08A8  
                  i2l2527 0A0A                    i2l2457 0910                    i2l2571 0A8E  
                  i2l2491 0988                    i2l2565 0A7E                    i2l2557 0A66  
                  i2l2559 0A6A                    i2l1873 0F5C                    i2l2489 0984  
                  i2l2497 09A8                    i2l1875 0F6C                    i2l1883 0F92  
                  i2l1877 0F7E                    i2l1965 10E0                    i2l1879 0F88  
                  i2l1975 116E                    i2l1991 1192                    i2l1987 118A  
                  i2l1979 1174                    i2l1999 11EE                    _TMR0IE 7F95  
                  _TMR0IF 7F92                    _TMR0ON 7EAF          i2_MostrarNumeros 1002  
   __end_of_DireccionaLCD 1278                _RetardoLCD 0F02   __end_ofi2_DireccionaLCD 12A4  
    EscribeLCD_n8@centena 001A                 ??___lbdiv 0016                 ??___lbmod 0012  
         ??_InicializaLCD 0015                    clear_0 1112                    isa$std 0001  
__end_of_OcultarCursorLCD 12B8      __end_of_EscribeLCD_c 1262              ?i2_EnviaDato 0001  
            __pdataCOMRAM 002C         __end_ofi2___lbdiv 1196         __end_ofi2___lbmod 120E  
             ?_Emergencia 0001              __mediumconst 0000                    tblptrh 0FF7  
                  tblptrl 0FF6                    tblptru 0FF8          ___lbdiv@dividend 0016  
         ___lbmod@divisor 0011     __end_ofi2_HabilitaLCD 12FC                __accesstop 0060  
 __end_of__initialization 1118           ___lbmod@counter 0013             ___rparam_used 0001  
          __pcstackCOMRAM 0001         __end_of_EnviaDato 10A2          ___lbdiv@quotient 0018  
               ?_BorraLCD 0001            _MensajeLCD_Var 11BE           MensajeLCD_Var@a 0016  
             ?_RetardoLCD 0001               RetardoLCD@a 0012           i2_EscribeLCD_n8 0D80  
        ?i2_DireccionaLCD 0001            _MostrarNumeros 0FAE          _MostrarCursorLCD 12B8  
  __end_of_MensajeLCD_Var 11E6                ??_BorraLCD 0015              ?_HabilitaLCD 0001  
            _ConfiguraLCD 1234                   __Hparam 0000     i2EscribeLCD_n8@decena 000B  
                 __Lparam 0000    __end_of_MostrarNumeros 1002                   ___lbdiv 1126  
                 ___lbmod 1196     i2EscribeLCD_n8@unidad 000C              __psmallconst 0800  
                 __pcinit 10EE                   __ramtop 0800                   __ptext0 0AAC  
                 __ptext1 12A4                   __ptext2 0FAE                   __ptext3 12B8  
                 __ptext4 0E66                   __ptext5 0C9A                   __ptext6 1196  
                 __ptext7 1126                   __ptext8 120E                   __ptext9 11BE  
__end_ofi2_MostrarNumeros 1056           ?_MensajeLCD_Var 0016     __end_of_EscribeLCD_n8 0D80  
          __pintcode_body 086E      end_of_initialization 1118   __end_ofi2_EscribeLCD_n8 0E66  
           __Lmediumconst 0000                   int_func 086E              _EscribeLCD_c 124C  
                 postinc0 0FEE           ?_MostrarNumeros 0001         ?_OcultarCursorLCD 0001  
            ??_Emergencia 0017        ??_OcultarCursorLCD 0015          ___lbmod@dividend 0012  
         i2EscribeLCD_c@a 0005                 i2___lbdiv 115E                 i2___lbmod 11E6  
             ___lbmod@rem 0014             ?i2_RetardoLCD 0001        __end_of_Emergencia 1234  
           __pidataCOMRAM 12FC     __end_of_InicializaLCD 0F02                 _EnviaDato 1056  
     start_initialization 10EE               __end_of_ISR 0AAC                ?i2___lbdiv 0005  
              ?i2___lbmod 0001          ?i2_EscribeLCD_n8 0009            ??i2_RetardoLCD 0001  
            ??_RetardoLCD 0011  __end_of_MostrarCursorLCD 12CC        i2___lbdiv@dividend 0006  
     EscribeLCD_n8@decena 001B       EscribeLCD_n8@unidad 001C                ?_EnviaDato 0001  
             __pbssCOMRAM 0022        __end_of_RetardoLCD 0F58        i2___lbdiv@quotient 0008  
           _DireccionaLCD 1262            i2_EscribeLCD_c 1278                 __pintcode 0008  
               _faltantes 0029                  ?___lbdiv 0015                  ?___lbmod 0011  
               _emergency 0023          ??_MensajeLCD_Var 0017         ?i2_MostrarNumeros 0001  
             __smallconst 0800        ??i2_MostrarNumeros 0005               ??i2___lbdiv 0006  
             ??i2___lbmod 0002             i2_HabilitaLCD 12EE            ?_DireccionaLCD 0001  
  __end_ofi2_EscribeLCD_c 128E          ??_MostrarNumeros 0015                  i2u101_40 1178  
                i2u152_40 090C                  i2u138_40 088E                  i2u139_45 0890  
                i2u192_47 0A94                  i2u193_47 0F62                  i2u194_47 0F6E  
                i2u195_47 0F76                  i2u196_47 0F80                  i2u197_47 0F8A  
                i2u198_47 12F2             ??i2_EnviaDato 0003      __end_ofi2_RetardoLCD 0FAE  
             ??_EnviaDato 0013                  _BorraLCD 12CC            ?i2_HabilitaLCD 0001  
         ?i2_EscribeLCD_c 0001                  __Hrparam 0000         i2___lbdiv@divisor 0005  
  i2EscribeLCD_n8@centena 000A         i2___lbdiv@counter 0007                  __Lrparam 0000  
            i2EnviaDato@a 0004             ConfiguraLCD@a 0011         ??i2_DireccionaLCD 0005  
                __ptext10 124C                  __ptext11 1262                  __ptext20 11E6  
                __ptext12 12CC                  __ptext21 115E                  __ptext13 1056  
                __ptext22 1278                  __ptext14 0F02                  __ptext23 128E  
                __ptext15 12E0                  __ptext24 10A2                  __ptext16 1234  
                __ptext25 0F58                  __ptext26 12EE                  __ptext18 1002  
                __ptext19 0D80       __end_ofi2_EnviaDato 10EE                  _contadas 0028  
                _contador 0022        i2___lbmod@dividend 0002           ??_DireccionaLCD 0015  
                _objetivo 002A                  _interfaz 002E         ?_MostrarCursorLCD 0001  
      ??_MostrarCursorLCD 0015                  isa$xinst 0000                  int$flags 002F  
           _EscribeLCD_n8 0C9A           ??i2_HabilitaLCD 0001                  intlevel2 0000  
           ??_HabilitaLCD 0011             ?_ConfiguraLCD 0001         i2___lbmod@divisor 0001  
       i2___lbmod@counter 0003             i2RetardoLCD@a 0002               i2_EnviaDato 10A2  
          ?_EscribeLCD_n8 0019            ??_ConfiguraLCD 0011          _OcultarCursorLCD 12A4  
           ?_EscribeLCD_c 0001              i2_RetardoLCD 0F58       __end_of_HabilitaLCD 12EE  
